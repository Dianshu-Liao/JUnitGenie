method_FEN,all_cfg_paths_num
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.makeChildOrPlaceholder(int),2
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.release(),3
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.mergeChild(TableInfo),3
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.size(),2
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.maybeDirty(),2
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.isCanonicalizing(),2
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.primaryCount(),3
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.secondaryCount(),3
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.tertiaryCount(),3
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.totalCount(),3
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int),10
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int)",17
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int,int,int)",26
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.findName(int[],int)",20
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._findSecondary(int,int)",27
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._findSecondary(int,int,int)",48
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._findSecondary(int,int,int,int)",75
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._findSecondary(int,int,int[],int)",48
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._verifyLongName(int[],int,int)",36
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String,int)",2
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String,int,int)",2
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String,int,int,int)",2
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.addName(String,int[],int)",8
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._verifySharing(),4
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._findOffsetForAdd(int),11
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._resizeAndFindOffsetForAdd(int),6
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._checkNeedForRehash(),4
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._appendLongName(int[],int)",3
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.calcHash(int[],int)",3
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.rehash(),15
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.nukeSymbols(boolean),2
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._reportTooManyCollisions(),2
com.fasterxml.jackson.core.sym.Name1.equals(int),2
"com.fasterxml.jackson.core.sym.Name1.equals(int,int)",3
"com.fasterxml.jackson.core.sym.Name1.equals(int[],int)",3
"com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.createRoot(TokenStreamFactory,int)",4
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.release(),4
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.mergeChild(TableInfo),3
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.size(),2
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.maybeDirty(),2
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.collisionCount(),3
"com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._findSymbol2(char[],int,int,Bucket)",4
"com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._addSymbol(char[],int,int,int,int)",18
"com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer._handleSpillOverflow(int,Bucket,int)",4
"com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(char[],int,int)",4
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.calcHash(String),4
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.rehash(),33
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer.verifyInternalConsistency(),18
"com.fasterxml.jackson.core.sym.Name2.equals(int,int)",3
"com.fasterxml.jackson.core.sym.Name2.equals(int[],int)",4
"com.fasterxml.jackson.core.sym.Name3.equals(int,int,int)",4
"com.fasterxml.jackson.core.sym.Name3.equals(int[],int)",5
"com.fasterxml.jackson.core.sym.NameN.construct(String,int,int[],int)",3
"com.fasterxml.jackson.core.sym.NameN.equals(int[],int)",21
com.fasterxml.jackson.core.sym.NameN._equals2(int[]),4
com.fasterxml.jackson.core.StreamWriteConstraints.overrideDefaultStreamWriteConstraints(StreamWriteConstraints),2
com.fasterxml.jackson.core.StreamWriteConstraints.validateNestingDepth(int),2
com.fasterxml.jackson.core.JsonProcessingException.getMessage(),18
com.fasterxml.jackson.core.JsonPointer.matches(),2
com.fasterxml.jackson.core.JsonPointer.mayMatchProperty(),2
com.fasterxml.jackson.core.JsonPointer.mayMatchElement(),2
com.fasterxml.jackson.core.JsonPointer.last(),3
com.fasterxml.jackson.core.JsonPointer.append(JsonPointer),3
com.fasterxml.jackson.core.JsonPointer.appendProperty(String),2
com.fasterxml.jackson.core.JsonPointer.appendIndex(int),2
com.fasterxml.jackson.core.JsonPointer.matchesProperty(String),3
com.fasterxml.jackson.core.JsonPointer.matchProperty(String),3
com.fasterxml.jackson.core.JsonPointer.matchesElement(int),3
com.fasterxml.jackson.core.JsonPointer.matchElement(int),3
com.fasterxml.jackson.core.JsonPointer.head(),3
com.fasterxml.jackson.core.JsonPointer.toString(),2
com.fasterxml.jackson.core.JsonPointer.toStringBuilder(int),2
com.fasterxml.jackson.core.JsonPointer.hashCode(),3
com.fasterxml.jackson.core.JsonPointer.equals(Object),4
com.fasterxml.jackson.core.JsonPointer._parseIndex(String),16
com.fasterxml.jackson.core.JsonPointer._parseTail(String),10
"com.fasterxml.jackson.core.JsonPointer._buildPath(String,int,String,PointerParent)",2
"com.fasterxml.jackson.core.JsonPointer._extractEscapedSegment(String,int,int,StringBuilder)",16
com.fasterxml.jackson.core.JsonPointer._constructHead(),5
com.fasterxml.jackson.core.util.Separators.withRootSeparator(String),2
com.fasterxml.jackson.core.util.Separators.withObjectFieldValueSeparator(char),2
com.fasterxml.jackson.core.util.Separators.withObjectFieldValueSpacing(Spacing),2
com.fasterxml.jackson.core.util.Separators.withObjectEntrySeparator(char),2
com.fasterxml.jackson.core.util.Separators.withObjectEntrySpacing(Spacing),2
com.fasterxml.jackson.core.util.Separators.withObjectEmptySeparator(String),2
com.fasterxml.jackson.core.util.Separators.withArrayValueSeparator(char),2
com.fasterxml.jackson.core.util.Separators.withArrayValueSpacing(Spacing),2
com.fasterxml.jackson.core.util.Separators.withArrayEmptySeparator(String),2
com.fasterxml.jackson.core.util.DefaultIndenter.withLinefeed(String),2
com.fasterxml.jackson.core.util.DefaultIndenter.withIndent(String),2
"com.fasterxml.jackson.core.util.DefaultIndenter.writeIndentation(JsonGenerator,int)",3
com.fasterxml.jackson.core.util.TextBuffer.releaseBuffers(),6
com.fasterxml.jackson.core.util.TextBuffer.resetWithEmpty(),2
com.fasterxml.jackson.core.util.TextBuffer.resetWith(char),3
"com.fasterxml.jackson.core.util.TextBuffer.resetWithShared(char[],int,int)",2
"com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(char[],int,int)",3
"com.fasterxml.jackson.core.util.TextBuffer.resetWithCopy(String,int,int)",3
com.fasterxml.jackson.core.util.TextBuffer.resetWithString(String),2
com.fasterxml.jackson.core.util.TextBuffer.buf(int),2
com.fasterxml.jackson.core.util.TextBuffer.size(),4
com.fasterxml.jackson.core.util.TextBuffer.getTextOffset(),2
com.fasterxml.jackson.core.util.TextBuffer.hasTextAsCharacters(),4
com.fasterxml.jackson.core.util.TextBuffer.getTextBuffer(),6
com.fasterxml.jackson.core.util.TextBuffer.contentsAsString(),12
com.fasterxml.jackson.core.util.TextBuffer.contentsAsArray(),2
com.fasterxml.jackson.core.util.TextBuffer.contentsAsDouble(boolean),7
com.fasterxml.jackson.core.util.TextBuffer.contentsAsFloat(boolean),7
com.fasterxml.jackson.core.util.TextBuffer.contentsAsDecimal(boolean),7
com.fasterxml.jackson.core.util.TextBuffer.contentsAsInt(boolean),6
com.fasterxml.jackson.core.util.TextBuffer.contentsAsLong(boolean),6
com.fasterxml.jackson.core.util.TextBuffer.contentsToWriter(Writer),10
com.fasterxml.jackson.core.util.TextBuffer.ensureNotShared(),2
com.fasterxml.jackson.core.util.TextBuffer.append(char),4
com.fasterxml.jackson.core.util.TextBuffer.validateAppend(int),2
com.fasterxml.jackson.core.util.TextBuffer.getCurrentSegment(),4
com.fasterxml.jackson.core.util.TextBuffer.emptyAndGetCurrentSegment(),4
com.fasterxml.jackson.core.util.TextBuffer.setCurrentAndReturn(int),3
com.fasterxml.jackson.core.util.TextBuffer.finishCurrentSegment(),12
"com.fasterxml.jackson.core.util.TextBuffer.finishAndReturn(int,boolean)",4
com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment(),2
com.fasterxml.jackson.core.util.TextBuffer.expandCurrentSegment(int),2
com.fasterxml.jackson.core.util.TextBuffer.toString(),2
com.fasterxml.jackson.core.util.TextBuffer.unshare(int),6
com.fasterxml.jackson.core.util.TextBuffer.expand(),12
com.fasterxml.jackson.core.util.TextBuffer.resultArray(),9
com.fasterxml.jackson.core.util.RequestPayload.getRawPayload(),2
com.fasterxml.jackson.core.util.RequestPayload.toString(),6
com.fasterxml.jackson.core.util.BufferRecyclers.getBufferRecycler(),6
com.fasterxml.jackson.core.util.BufferRecyclers.releaseBuffers(),2
"com.fasterxml.jackson.core.util.JsonParserSequence.createFlattened(boolean,JsonParser,JsonParser)",9
com.fasterxml.jackson.core.util.JsonParserSequence.addFlattenedActiveParsers(List),3
com.fasterxml.jackson.core.util.JsonParserSequence.nextToken(),4
com.fasterxml.jackson.core.util.JsonParserSequence.skipChildren(),17
com.fasterxml.jackson.core.util.JsonParserSequence.switchToNext(),2
com.fasterxml.jackson.core.util.JsonParserSequence.switchAndReturnNext(),12
com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeObject(Object),4
com.fasterxml.jackson.core.util.JsonGeneratorDelegate.writeTree(TreeNode),4
com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentEvent(JsonParser),2
com.fasterxml.jackson.core.util.JsonGeneratorDelegate.copyCurrentStructure(JsonParser),2
com.fasterxml.jackson.core.util.BufferRecycler.isLinkedWithPool(),2
"com.fasterxml.jackson.core.util.BufferRecycler.allocByteBuffer(int,int)",6
"com.fasterxml.jackson.core.util.BufferRecycler.releaseByteBuffer(int,byte[])",3
"com.fasterxml.jackson.core.util.BufferRecycler.allocCharBuffer(int,int)",6
"com.fasterxml.jackson.core.util.BufferRecycler.releaseCharBuffer(int,char[])",3
com.fasterxml.jackson.core.util.BufferRecycler.withPool(RecyclerPool),2
com.fasterxml.jackson.core.util.BufferRecycler.releaseToPool(),2
com.fasterxml.jackson.core.util.JacksonFeatureSet.fromDefaults(JacksonFeature[]),4
com.fasterxml.jackson.core.util.JacksonFeatureSet.with(JacksonFeature),2
com.fasterxml.jackson.core.util.JacksonFeatureSet.without(JacksonFeature),2
com.fasterxml.jackson.core.util.JacksonFeatureSet.isEnabled(JacksonFeature),2
com.fasterxml.jackson.core.util.InternCache.intern(String),8
com.fasterxml.jackson.core.util.ByteArrayBuilder.reset(),2
com.fasterxml.jackson.core.util.ByteArrayBuilder.release(),3
com.fasterxml.jackson.core.util.ByteArrayBuilder.append(int),2
com.fasterxml.jackson.core.util.ByteArrayBuilder.appendTwoBytes(int),2
com.fasterxml.jackson.core.util.ByteArrayBuilder.appendThreeBytes(int),2
com.fasterxml.jackson.core.util.ByteArrayBuilder.appendFourBytes(int),2
com.fasterxml.jackson.core.util.ByteArrayBuilder.toByteArray(),7
"com.fasterxml.jackson.core.util.ByteArrayBuilder.write(byte[],int,int)",6
com.fasterxml.jackson.core.util.ByteArrayBuilder._allocMore(),3
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(SerializableString),6
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withRootSeparator(String),2
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withArrayIndenter(Indenter),4
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withObjectIndenter(Indenter),4
com.fasterxml.jackson.core.util.DefaultPrettyPrinter._withSpaces(boolean),3
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.withSeparators(Separators),2
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.createInstance(),2
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeRootValueSeparator(JsonGenerator),2
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartObject(JsonGenerator),2
"com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndObject(JsonGenerator,int)",4
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeStartArray(JsonGenerator),2
"com.fasterxml.jackson.core.util.DefaultPrettyPrinter.writeEndArray(JsonGenerator,int)",4
com.fasterxml.jackson.core.util.MinimalPrettyPrinter.writeRootValueSeparator(JsonGenerator),2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._closeScope(int),9
com.fasterxml.jackson.core.json.JsonReadFeature.collectDefaults(),3
"com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.feedInput(byte[],int,int)",8
com.fasterxml.jackson.core.json.async.NonBlockingJsonParser.releaseBuffered(OutputStream),2
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase.nextToken(),13
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishToken(),43
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishTokenWithEOF(),16
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishBOM(int),12
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startFieldName(int),11
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startFieldNameAfterComma(int),63
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startValue(int),35
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startValueAfterComma(int),35
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startUnexpectedValue(boolean,int)",14
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startSlashComment(int),8
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishHashComment(int),24
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishCppComment(int),12
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishCComment(int,boolean)",24
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startAfterComment(int),8
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startFalseToken(),8
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startTrueToken(),7
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startNullToken(),7
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishKeywordToken(String,int,JsonToken)",10
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishKeywordTokenWithEOF(String,int,JsonToken)",2
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishNonStdToken(int,int)",10
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishNonStdTokenWithEOF(int,int)",2
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishErrorToken(),6
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startPositiveNumber(int),19
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startNegativeNumber(),60
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startNumberLeadingZero(),7
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishNumberPlusMinus(int,boolean)",50
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishNumberLeadingZeroes(),24
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishNumberLeadingPosNegZeroes(boolean),39
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishNumberIntegralPart(char[],int)",30
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishFloatFraction(),99
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishFloatExponent(boolean,int)",74
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._fastParseName(),11
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._parseMediumName(int,int)",9
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._parseMediumName2(int,int,int)",8
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._handleOddName(int),16
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishUnquotedName(int,int,int)",28
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._finishFieldWithEscape(),57
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._decodeSplitEscaped(int,int)",33
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startString(),6
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._startAposString(),6
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._decodeSplitMultiByte(int,int,boolean)",10
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._decodeSplitUTF8_3(int,int,int)",8
"com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._decodeSplitUTF8_4(int,int,int)",26
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._decodeCharEscape(),2
com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase._decodeFastCharEscape(),12
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.hasTextCharacters(),3
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(),2
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._getText2(JsonToken),5
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getText(Writer),6
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(),3
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getValueAsString(String),3
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextCharacters(),7
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextLength(),4
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getTextOffset(),4
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getBinaryValue(Base64Variant),4
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase.getEmbeddedObject(),2
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeArrayScope(),6
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._closeObjectScope(),6
"com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int)",2
"com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int)",2
"com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._findName(int,int,int,int)",2
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._eofAsNextToken(),2
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._valueNonStdNumberComplete(int),2
com.fasterxml.jackson.core.json.async.NonBlockingJsonParserBase._reportInvalidChar(int),2
com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser.feedInput(ByteBuffer),8
com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser.releaseBuffered(OutputStream),2
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.detectEncoding(),49
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructReader(),6
"com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.constructParser(int,ObjectCodec,ByteQuadsCanonicalizer,CharsToNameCanonicalizer,int)",6
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.hasJSONFormat(InputAccessor),60
"com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.tryMatch(InputAccessor,String,MatchStrength)",6
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(InputAccessor),2
"com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.skipSpace(InputAccessor,byte)",25
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.handleBOM(int),14
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF32(int),5
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.checkUTF16(int),3
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper.ensureLoaded(int),9
com.fasterxml.jackson.core.json.JsonWriteContext.reset(int),2
"com.fasterxml.jackson.core.json.JsonWriteContext.reset(int,Object)",2
com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext(),3
com.fasterxml.jackson.core.json.JsonWriteContext.createChildArrayContext(Object),3
com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext(),3
com.fasterxml.jackson.core.json.JsonWriteContext.createChildObjectContext(Object),3
com.fasterxml.jackson.core.json.JsonWriteContext.hasCurrentName(),2
com.fasterxml.jackson.core.json.JsonWriteContext.writeFieldName(String),6
"com.fasterxml.jackson.core.json.JsonWriteContext._checkDup(DupDetector,String)",3
com.fasterxml.jackson.core.json.JsonWriteContext.writeValue(),6
com.fasterxml.jackson.core.json.DupDetector.findLocation(),2
com.fasterxml.jackson.core.json.DupDetector.isDup(String),8
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.releaseBuffered(Writer),2
"com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getNextChar(String,JsonToken)",3
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeInput(),4
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._releaseBuffers(),3
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMoreGuaranteed(),2
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._loadMore(),4
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText(),3
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getText(Writer),6
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(),4
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getValueAsString(String),4
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._getText2(JsonToken),4
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextCharacters(),9
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextLength(),6
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getTextOffset(),6
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.getBinaryValue(Base64Variant),21
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextAfterName(),3
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.finishToken(),2
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(SerializableString),55
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameYes(int),12
"com.fasterxml.jackson.core.json.ReaderBasedJsonParser._isNextTokenNameMaybe(int,String)",24
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._nextTokenNotInObject(int),13
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextTextValue(),7
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextIntValue(int),6
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextLongValue(long),6
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextBooleanValue(),9
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseFloatThatStartsWithPeriod(boolean),3
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseUnsignedNumber(int),19
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseSignedNumber(boolean),48
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes(),4
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName(),9
"com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseName2(int,int,int)",93
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddValue(int),26
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleApos(),93
"com.fasterxml.jackson.core.json.ReaderBasedJsonParser._handleOddName2(int,int,int[])",45
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._finishString2(),93
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipString(),48
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipCR(),5
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColon(),52
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipColonFast(int),90
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipAfterComma2(),75
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd2(),75
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipComment(),18
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipYAMLComment(),2
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipLine(),35
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._decodeEscaped(),42
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchTrue(),8
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchFalse(),9
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._matchNull(),8
"com.fasterxml.jackson.core.json.ReaderBasedJsonParser._checkMatchEnd(String,int,int)",2
com.fasterxml.jackson.core.json.ReaderBasedJsonParser.currentTokenLocation(),2
"com.fasterxml.jackson.core.json.ReaderBasedJsonParser._reportInvalidToken(String,String)",15
com.fasterxml.jackson.core.json.ReaderBasedJsonParser._closeScope(int),9
"com.fasterxml.jackson.core.json.JsonReadContext.reset(int,int,int)",2
"com.fasterxml.jackson.core.json.JsonReadContext.createChildArrayContext(int,int)",3
"com.fasterxml.jackson.core.json.JsonReadContext.createChildObjectContext(int,int)",3
com.fasterxml.jackson.core.json.JsonReadContext.hasCurrentName(),2
com.fasterxml.jackson.core.json.JsonReadContext.setCurrentName(String),2
"com.fasterxml.jackson.core.json.JsonReadContext._checkDup(DupDetector,String)",3
com.fasterxml.jackson.core.type.ResolvedType.isReferenceType(),2
com.fasterxml.jackson.core.Base64Variants.valueOf(String),6
com.fasterxml.jackson.core.StreamReadFeature.collectDefaults(),3
com.fasterxml.jackson.core.format.DataFormatMatcher.hasMatch(),2
com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchStrength(),2
com.fasterxml.jackson.core.format.DataFormatMatcher.getMatchedFormatName(),2
com.fasterxml.jackson.core.format.DataFormatMatcher.createParserWithMatch(),3
com.fasterxml.jackson.core.format.DataFormatMatcher.getDataStream(),2
com.fasterxml.jackson.core.format.DataFormatDetector.withOptimalMatch(MatchStrength),2
com.fasterxml.jackson.core.format.DataFormatDetector.withMinimalMatch(MatchStrength),2
com.fasterxml.jackson.core.format.DataFormatDetector.withMaxInputLookahead(int),2
com.fasterxml.jackson.core.format.DataFormatDetector.toString(),3
com.fasterxml.jackson.core.format.DataFormatDetector._findFormat(Std),18
com.fasterxml.jackson.core.JsonGenerator.currentValue(),2
com.fasterxml.jackson.core.JsonGenerator.assignCurrentValue(Object),2
"com.fasterxml.jackson.core.JsonGenerator.configure(Feature,boolean)",2
"com.fasterxml.jackson.core.JsonGenerator.writeArray(int[],int,int)",3
"com.fasterxml.jackson.core.JsonGenerator.writeArray(long[],int,int)",3
"com.fasterxml.jackson.core.JsonGenerator.writeArray(double[],int,int)",3
"com.fasterxml.jackson.core.JsonGenerator.writeArray(String[],int,int)",3
com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(Object),3
com.fasterxml.jackson.core.JsonGenerator.writeTypePrefix(WritableTypeId),8
com.fasterxml.jackson.core.JsonGenerator._writeTypePrefixUsingWrapper(WritableTypeId),16
com.fasterxml.jackson.core.JsonGenerator.writeTypeSuffix(WritableTypeId),18
com.fasterxml.jackson.core.JsonGenerator.copyCurrentEvent(JsonParser),28
com.fasterxml.jackson.core.JsonGenerator.copyCurrentEventExact(JsonParser),28
com.fasterxml.jackson.core.JsonGenerator.copyCurrentStructure(JsonParser),18
com.fasterxml.jackson.core.JsonGenerator._copyCurrentFloatValue(JsonParser),3
com.fasterxml.jackson.core.JsonGenerator._copyCurrentFloatValueExact(JsonParser),3
com.fasterxml.jackson.core.JsonGenerator._copyCurrentIntValue(JsonParser),3
com.fasterxml.jackson.core.JsonGenerator._copyCurrentStringValue(JsonParser),2
com.fasterxml.jackson.core.JsonGenerator._writeSimpleObject(Object),17
com.fasterxml.jackson.core.exc.StreamReadException.getRequestPayloadAsString(),2
com.fasterxml.jackson.core.exc.StreamReadException.getMessage(),2
com.fasterxml.jackson.core.exc.StreamReadException._currentLocation(JsonParser),2
"com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(byte[],String)",2
com.fasterxml.jackson.core.JsonParser.setRequestPayloadOnError(String),2
"com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.put(Object,Object,boolean)",14
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.remove(Object),2
"com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.remove(Object,Object)",10
"com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.replace(Object,Object)",7
"com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.replace(Object,Object,Object)",9
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.keySet(),2
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.values(),2
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.entrySet(),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.linkFirst(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.linkLast(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.unlinkFirst(),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.unlinkLast(),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.unlink(Linked),4
com.fasterxml.jackson.databind.util.internal.LinkedDeque.isEmpty(),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.checkNotEmpty(),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.size(),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.clear(),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.contains(Object),3
com.fasterxml.jackson.databind.util.internal.LinkedDeque.contains(Linked),4
com.fasterxml.jackson.databind.util.internal.LinkedDeque.moveToFront(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.moveToBack(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.offerFirst(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.offerLast(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.addFirst(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.addLast(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.remove(Object),3
com.fasterxml.jackson.databind.util.internal.LinkedDeque.remove(Linked),2
com.fasterxml.jackson.databind.util.internal.LinkedDeque.removeAll(Collection),2
com.fasterxml.jackson.databind.util.ArrayBuilders.getBooleanBuilder(),2
com.fasterxml.jackson.databind.util.ArrayBuilders.getByteBuilder(),2
com.fasterxml.jackson.databind.util.ArrayBuilders.getShortBuilder(),2
com.fasterxml.jackson.databind.util.ArrayBuilders.getIntBuilder(),2
com.fasterxml.jackson.databind.util.ArrayBuilders.getLongBuilder(),2
com.fasterxml.jackson.databind.util.ArrayBuilders.getFloatBuilder(),2
com.fasterxml.jackson.databind.util.ArrayBuilders.getDoubleBuilder(),2
"com.fasterxml.jackson.databind.util.JSONWrappedObject.serialize(JsonGenerator,SerializerProvider)",12
com.fasterxml.jackson.databind.util.ArrayIterator.hasNext(),2
com.fasterxml.jackson.databind.util.ArrayIterator.next(),2
com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart(),2
"com.fasterxml.jackson.databind.util.ObjectBuffer.resetAndStart(Object[],int)",3
com.fasterxml.jackson.databind.util.ObjectBuffer.appendCompletedChunk(Object[]),6
"com.fasterxml.jackson.databind.util.ObjectBuffer.completeAndClearBuffer(Object[],int,List)",6
com.fasterxml.jackson.databind.util.ObjectBuffer.initialCapacity(),2
com.fasterxml.jackson.databind.util.ObjectBuffer._reset(),2
"com.fasterxml.jackson.databind.util.ObjectBuffer._copyTo(Object,int,Object[],int)",4
com.fasterxml.jackson.databind.util.StdConverter._findConverterType(TypeFactory),3
"com.fasterxml.jackson.databind.util.RootNameLookup.findRootName(Class,MapperConfig)",4
com.fasterxml.jackson.databind.util.StdDateFormat.withTimeZone(TimeZone),6
com.fasterxml.jackson.databind.util.StdDateFormat.withLocale(Locale),2
com.fasterxml.jackson.databind.util.StdDateFormat.withLenient(Boolean),2
com.fasterxml.jackson.databind.util.StdDateFormat.withColonInTimeZone(boolean),2
com.fasterxml.jackson.databind.util.StdDateFormat.setTimeZone(TimeZone),2
com.fasterxml.jackson.databind.util.StdDateFormat.setLenient(boolean),2
com.fasterxml.jackson.databind.util.StdDateFormat.isLenient(),3
"com.fasterxml.jackson.databind.util.StdDateFormat.parse(String,ParsePosition)",2
"com.fasterxml.jackson.databind.util.StdDateFormat._parseDate(String,ParsePosition)",81
"com.fasterxml.jackson.databind.util.StdDateFormat.format(Date,StringBuffer,FieldPosition)",2
"com.fasterxml.jackson.databind.util.StdDateFormat._format(TimeZone,Locale,Date,StringBuffer)",18
"com.fasterxml.jackson.databind.util.StdDateFormat._formatBCEYear(StringBuffer,int)",2
"com.fasterxml.jackson.databind.util.StdDateFormat.pad3(StringBuffer,int)",2
"com.fasterxml.jackson.databind.util.StdDateFormat.pad4(StringBuffer,int)",3
com.fasterxml.jackson.databind.util.StdDateFormat.toPattern(),2
"com.fasterxml.jackson.databind.util.StdDateFormat.parseAsRFC1123(String,ParsePosition)",2
"com.fasterxml.jackson.databind.util.StdDateFormat._cloneFormat(DateFormat,String,TimeZone,Locale,Boolean)",8
com.fasterxml.jackson.databind.util.StdDateFormat._getCalendar(TimeZone),4
"com.fasterxml.jackson.databind.util.ISO8601DateFormat.parse(String,ParsePosition)",2
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream.read(),2
"com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream.read(byte[],int,int)",2
com.fasterxml.jackson.databind.util.TypeKey.toString(),2
com.fasterxml.jackson.databind.util.TypeKey.equals(Object),7
"com.fasterxml.jackson.databind.util.ClassUtil.findSuperTypes(JavaType,Class,boolean)",4
"com.fasterxml.jackson.databind.util.ClassUtil.findRawSuperTypes(Class,Class,boolean)",4
"com.fasterxml.jackson.databind.util.ClassUtil._addSuperTypes(JavaType,Class,Collection,boolean)",8
"com.fasterxml.jackson.databind.util.ClassUtil._addRawSuperTypes(Class,Class,Collection,boolean)",8
"com.fasterxml.jackson.databind.util.ClassUtil.isLocalType(Class,boolean)",41
com.fasterxml.jackson.databind.util.ClassUtil.getOuterClass(Class),7
com.fasterxml.jackson.databind.util.ClassUtil.isObjectOrPrimitive(Class),3
"com.fasterxml.jackson.databind.util.ClassUtil.throwAsMappingException(DeserializationContext,IOException)",2
"com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator,Exception)",2
"com.fasterxml.jackson.databind.util.ClassUtil.closeOnFailAndThrowAsIOE(JsonGenerator,Closeable,Exception)",9
"com.fasterxml.jackson.databind.util.ClassUtil.createInstance(Class,boolean)",4
"com.fasterxml.jackson.databind.util.ClassUtil.findConstructor(Class,boolean)",42
com.fasterxml.jackson.databind.util.ClassUtil.rawClass(JavaType),2
com.fasterxml.jackson.databind.util.ClassUtil.getClassDescription(Object),3
com.fasterxml.jackson.databind.util.ClassUtil.getTypeDescription(JavaType),5
com.fasterxml.jackson.databind.util.ClassUtil.classNameOf(Object),3
com.fasterxml.jackson.databind.util.ClassUtil.nameOf(Named),2
com.fasterxml.jackson.databind.util.ClassUtil.name(String),2
com.fasterxml.jackson.databind.util.ClassUtil.name(PropertyName),2
com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(EnumSet),2
com.fasterxml.jackson.databind.util.ClassUtil.findEnumType(EnumMap),2
com.fasterxml.jackson.databind.util.ClassUtil.isJacksonStdImpl(Object),3
com.fasterxml.jackson.databind.util.ClassUtil.isJDK17OrAbove(),7
com.fasterxml.jackson.databind.util.ClassUtil.isNonStaticInnerClass(Class),3
com.fasterxml.jackson.databind.util.ClassUtil.hasEnclosingMethod(Class),3
com.fasterxml.jackson.databind.util.ClassUtil.findClassAnnotations(Class),2
com.fasterxml.jackson.databind.util.ClassUtil.getClassMethods(Class),7
com.fasterxml.jackson.databind.util.ClassUtil.getConstructors(Class),4
com.fasterxml.jackson.databind.util.ClassUtil.getDeclaringClass(Class),2
com.fasterxml.jackson.databind.util.ClassUtil.getEnclosingClass(Class),2
"com.fasterxml.jackson.databind.util.NameTransformer.simpleTransformer(String,String)",36
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.resetAndStart(),2
"com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.appendCompletedChunk(Object,int)",4
"com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.completeAndClearBuffer(Object,int)",4
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder._reset(),2
com.fasterxml.jackson.databind.util.NativeImageUtil.isInNativeImageAndIsAtRuntime(),3
com.fasterxml.jackson.databind.util.NativeImageUtil.isUnsupportedFeatureError(Throwable),3
com.fasterxml.jackson.databind.util.NativeImageUtil.needsReflectionConfiguration(Class),8
com.fasterxml.jackson.databind.util.LRUMap.contents(BiConsumer),2
"com.fasterxml.jackson.databind.util.EnumResolver.constructFor(DeserializationConfig,AnnotatedClass)",7
"com.fasterxml.jackson.databind.util.EnumResolver.constructFor(DeserializationConfig,Class)",7
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingToString(DeserializationConfig,AnnotatedClass)",14
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingToString(DeserializationConfig,Class)",8
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingIndex(DeserializationConfig,AnnotatedClass)",2
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingIndex(DeserializationConfig,Class)",2
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingEnumNamingStrategy(DeserializationConfig,Class,EnumNamingStrategy)",14
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingEnumNamingStrategy(DeserializationConfig,AnnotatedClass,EnumNamingStrategy)",14
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingMethod(DeserializationConfig,Class,AnnotatedMember)",15
"com.fasterxml.jackson.databind.util.EnumResolver.constructUsingMethod(DeserializationConfig,AnnotatedClass,AnnotatedMember)",15
com.fasterxml.jackson.databind.util.EnumResolver._enumConstants(Class),2
"com.fasterxml.jackson.databind.util.EnumResolver._enumDefault(AnnotationIntrospector,AnnotatedClass,Enum[])",2
"com.fasterxml.jackson.databind.util.EnumResolver._enumDefault(AnnotationIntrospector,Class)",2
com.fasterxml.jackson.databind.util.EnumResolver._isIntType(Class),10
com.fasterxml.jackson.databind.util.EnumResolver.findEnum(String),3
com.fasterxml.jackson.databind.util.EnumResolver._findEnumCaseInsensitive(String),4
com.fasterxml.jackson.databind.util.EnumResolver.getEnum(int),3
com.fasterxml.jackson.databind.util.EnumResolver.getEnums(),2
"com.fasterxml.jackson.databind.util.RawValue.serialize(JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.util.RawValue.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)",3
com.fasterxml.jackson.databind.util.RawValue.serialize(JsonGenerator),2
com.fasterxml.jackson.databind.util.RawValue._serialize(JsonGenerator),2
com.fasterxml.jackson.databind.util.RawValue.equals(Object),6
com.fasterxml.jackson.databind.util.RawValue.hashCode(),2
com.fasterxml.jackson.databind.introspect.AnnotatedClass.annotations(),4
com.fasterxml.jackson.databind.introspect.AnnotatedClass.hasAnnotations(),2
com.fasterxml.jackson.databind.introspect.AnnotatedClass.isNonStaticInnerClass(),2
com.fasterxml.jackson.databind.introspect.AnnotatedClass._fields(),3
com.fasterxml.jackson.databind.introspect.AnnotatedClass._methods(),3
com.fasterxml.jackson.databind.introspect.AnnotatedClass._creators(),3
com.fasterxml.jackson.databind.introspect.AnnotatedClass.equals(Object),4
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getRawParameterType(int),2
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getParameterType(int),2
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getGenericParameterType(int),2
"com.fasterxml.jackson.databind.introspect.AnnotatedMethod.setValue(Object,Object)",5
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getValue(Object),4
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getFullName(),3
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.getRawParameterTypes(),2
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.hasReturnType(),2
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.equals(Object),3
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.readResolve(),14
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.create(AnnotationIntrospector,AnnotationIntrospector)",3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.isAnnotationBundle(Annotation),3
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyIgnoralByName(MapperConfig,Annotated)",2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyInclusionByName(MapperConfig,Annotated)",2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.isIgnorableType(AnnotatedClass),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findFilterId(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findNamingStrategy(AnnotatedClass),2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findEnumNamingStrategy(MapperConfig,AnnotatedClass)",2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findClassDescription(AnnotatedClass),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyIgnorals(Annotated),2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPolymorphicTypeInfo(MapperConfig,Annotated)",2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findTypeResolver(MapperConfig,AnnotatedClass,JavaType)",2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyTypeResolver(MapperConfig,AnnotatedMember,JavaType)",2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyContentTypeResolver(MapperConfig,AnnotatedMember,JavaType)",2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSubtypes(Annotated),5
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findTypeName(AnnotatedClass),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findReferenceType(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findUnwrappingNameTransformer(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findInjectableValue(AnnotatedMember),7
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasIgnoreMarker(AnnotatedMember),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasRequiredMarker(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findInjectableValueId(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSerializer(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findKeySerializer(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findContentSerializer(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findNullSerializer(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyInclusion(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSerializationTyping(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSerializationConverter(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSerializationContentConverter(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findViews(Annotated),2
"com.fasterxml.jackson.databind.deser.impl.MethodProperty.setAndReturn(Object,Object)",21
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty.withDelegate(SettableBeanProperty),2
"com.fasterxml.jackson.databind.deser.impl.InnerClassProperty.deserializeAndSet(JsonParser,DeserializationContext,Object)",7
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty.writeReplace(),2
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.withValueDeserializer(JsonDeserializer),3
"com.fasterxml.jackson.databind.deser.SettableAnyProperty.constructForMapField(DeserializationContext,BeanProperty,AnnotatedMember,JavaType,KeyDeserializer,JsonDeserializer,TypeDeserializer)",2
"com.fasterxml.jackson.databind.deser.SettableAnyProperty.constructForMapParameter(DeserializationContext,BeanProperty,AnnotatedMember,JavaType,KeyDeserializer,JsonDeserializer,TypeDeserializer,int)",2
com.fasterxml.jackson.databind.deser.SettableAnyProperty.readResolve(),3
com.fasterxml.jackson.databind.deser.SettableAnyProperty.hasValueDeserializer(),2
"com.fasterxml.jackson.databind.deser.SettableAnyProperty.deserializeAndSet(JsonParser,DeserializationContext,Object,String)",22
"com.fasterxml.jackson.databind.deser.SettableAnyProperty.deserialize(JsonParser,DeserializationContext)",3
"com.fasterxml.jackson.databind.deser.SettableAnyProperty.set(Object,Object,Object)",3
com.fasterxml.jackson.databind.deser.CreatorProperty.withValueDeserializer(JsonDeserializer),3
com.fasterxml.jackson.databind.deser.CreatorProperty.fixAccess(DeserializationConfig),2
"com.fasterxml.jackson.databind.deser.CreatorProperty.findInjectableValue(DeserializationContext,Object)",2
com.fasterxml.jackson.databind.deser.CreatorProperty.getAnnotation(Class),2
com.fasterxml.jackson.databind.deser.CreatorProperty.getMetadata(),2
com.fasterxml.jackson.databind.deser.CreatorProperty._verifySetter(),2
"com.fasterxml.jackson.databind.deser.CreatorProperty._reportMissingSetter(JsonParser,DeserializationContext)",4
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.finishBuild(DeserializationContext,Object)",6
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserialize(JsonParser,DeserializationContext)",10
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserialize(JsonParser,DeserializationContext,Object)",2
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.vanillaDeserialize(JsonParser,DeserializationContext,JsonToken)",4
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeFromObject(JsonParser,DeserializationContext)",21
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer._deserialize(JsonParser,DeserializationContext,Object)",40
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer._deserializeFromArray(JsonParser,DeserializationContext)",17
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeWithView(JsonParser,DeserializationContext,Object,Class)",6
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeWithUnwrapped(JsonParser,DeserializationContext)",46
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeUsingPropertyBasedWithUnwrapped(JsonParser,DeserializationContext)",98
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeWithUnwrapped(JsonParser,DeserializationContext,Object,TokenBuffer)",18
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeWithExternalTypeId(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.deserializeWithExternalTypeId(JsonParser,DeserializationContext,Object)",34
"com.fasterxml.jackson.databind.deser.AbstractDeserializer.createContextual(DeserializationContext,BeanProperty)",13
com.fasterxml.jackson.databind.deser.AbstractDeserializer.findBackReference(String),2
"com.fasterxml.jackson.databind.deser.AbstractDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",19
"com.fasterxml.jackson.databind.deser.AbstractDeserializer._deserializeIfNatural(JsonParser,DeserializationContext)",11
"com.fasterxml.jackson.databind.deser.AbstractDeserializer._deserializeFromObjectId(JsonParser,DeserializationContext)",2
com.fasterxml.jackson.databind.deser.BeanDeserializer.unwrappingDeserializer(NameTransformer),6
"com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(JsonParser,DeserializationContext)",4
"com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(JsonParser,DeserializationContext,JsonToken)",12
"com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithErrorWrapping(JsonParser,DeserializationContext,SettableBeanProperty)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromNull(JsonParser,DeserializationContext)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeFromArray(JsonParser,DeserializationContext)",19
"com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeWithUnwrapped(JsonParser,DeserializationContext)",98
"com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeWithUnwrapped(JsonParser,DeserializationContext,Object)",48
"com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeWithExternalTypeId(JsonParser,DeserializationContext)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeWithExternalTypeId(JsonParser,DeserializationContext,Object,ExternalTypeHandler)",34
com.fasterxml.jackson.databind.deser.BeanDeserializer._creatorReturnedNullException(),2
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference.getMessage(),4
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer.unwrappingDeserializer(NameTransformer),2
"com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer._instantiate(DeserializationContext,boolean,String)",3
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer.construct(DeserializationContext),2
"com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer.deserialize(JsonParser,DeserializationContext)",8
"com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.createContextual(DeserializationContext,BeanProperty)",24
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.forType(Class),9
"com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.createContextual(DeserializationContext,BeanProperty)",12
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.getEmptyValue(DeserializationContext),2
"com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.deserialize(JsonParser,DeserializationContext,Object)",3
"com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers.handleNonArray(JsonParser,DeserializationContext)",9
"com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer.withResolved(KeyDeserializer,TypeDeserializer,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer.createContextual(DeserializationContext,BeanProperty)",12
"com.fasterxml.jackson.databind.deser.std.NumberDeserializers.find(Class,String)",23
"com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.withResolved(TypeDeserializer,JsonDeserializer,NullValueProvider,Boolean)",5
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.isCachable(),3
"com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.createContextual(DeserializationContext,BeanProperty)",4
"com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.deserializeFromBase64(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers.findStringBasedKeyDeserializer(DeserializationConfig,JavaType)",9
"com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers._constructCreatorKeyDeserializer(DeserializationConfig,AnnotatedMember)",4
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers._findStringConstructor(BeanDescription),6
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers._findExplicitStringFactoryMethod(List),6
"com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers.findKeyDeserializer(JavaType,DeserializationConfig,BeanDescription)",2
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.resolve(DeserializationContext),4
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._clearIfStdImpl(JsonDeserializer),2
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(JsonParser,DeserializationContext)",17
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",13
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.deserialize(JsonParser,DeserializationContext,Object)",20
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.mapArray(JsonParser,DeserializationContext,Collection)",2
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapObjectWithDups(JsonParser,DeserializationContext,Map,String,Object,Object,String)",8
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._customDeserializeKey(String,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._customDeserializeNullableKey(String,DeserializationContext)",3
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._deserializeFP(JsonParser,DeserializationContext)",6
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.instance(boolean),2
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.supportsUpdate(DeserializationConfig),2
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.deserialize(JsonParser,DeserializationContext)",13
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",2
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR._deserializeObjectAtName(JsonParser,DeserializationContext)",21
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR._deserializeAnyScalar(JsonParser,DeserializationContext,int)",9
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR._deserializeFP(JsonParser,DeserializationContext)",6
"com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR._mapObjectWithDups(JsonParser,DeserializationContext,Map,String,Object,Object,String)",8
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.getDeserializer(Class),3
"com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.deserialize(JsonParser,DeserializationContext)",5
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer.createContextual(DeserializationContext,BeanProperty)",3
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._handleDuplicateField(JsonParser,DeserializationContext,JsonNodeFactory,String,ObjectNode,JsonNode,JsonNode)",6
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._deserializeObjectAtName(JsonParser,DeserializationContext,JsonNodeFactory,ContainerStack)",13
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._deserializeAnyScalar(JsonParser,DeserializationContext)",9
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._deserializeRareScalar(JsonParser,DeserializationContext)",4
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._fromInt(JsonParser,int,JsonNodeFactory)",5
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._fromInt(JsonParser,DeserializationContext,JsonNodeFactory)",12
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._fromFloat(JsonParser,DeserializationContext,JsonNodeFactory)",6
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._fromBigDecimal(DeserializationContext,JsonNodeFactory,BigDecimal)",6
"com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._fromEmbedded(JsonParser,DeserializationContext)",5
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBeanDeserializer(DeserializationContext,JavaType,BeanDescription)",21
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.createBuilderBasedDeserializer(DeserializationContext,JavaType,BeanDescription,Class)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.findStdDeserializer(DeserializationContext,JavaType,BeanDescription)",4
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory._findUnsupportedTypeDeserializer(DeserializationContext,JavaType,BeanDescription)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.materializeAbstractType(DeserializationContext,JavaType,BeanDescription)",4
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.buildBeanDeserializer(DeserializationContext,JavaType,BeanDescription)",29
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.buildBuilderBasedDeserializer(DeserializationContext,JavaType,BeanDescription)",56
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addObjectIdReader(DeserializationContext,BeanDescription,BeanDeserializerBuilder)",4
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory._resolveAnySetter(DeserializationContext,BeanDescription,SettableBeanProperty[])",11
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.filterBeanProps(DeserializationContext,BeanDescription,BeanDeserializerBuilder,List,Set,Set)",6
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addBackReferenceProperties(DeserializationContext,BeanDescription,BeanDeserializerBuilder)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.addInjectables(DeserializationContext,BeanDescription,BeanDeserializerBuilder)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.constructSettableProperty(DeserializationContext,BeanDescription,BeanPropertyDefinition,JavaType)",96
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.constructSetterlessProperty(DeserializationContext,BeanDescription,BeanPropertyDefinition)",4
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.isPotentialBeanType(Class),4
"com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.isIgnorableType(DeserializationConfig,BeanPropertyDefinition,Class,Map)",6
com.fasterxml.jackson.databind.deser.SettableBeanProperty.withSimpleName(String),4
com.fasterxml.jackson.databind.deser.SettableBeanProperty.setViews(Class[]),2
com.fasterxml.jackson.databind.deser.SettableBeanProperty.assignIndex(int),2
"com.fasterxml.jackson.databind.deser.SettableBeanProperty.depositSchemaProperty(JsonObjectFormatVisitor,SerializerProvider)",2
com.fasterxml.jackson.databind.deser.SettableBeanProperty.hasValueDeserializer(),3
com.fasterxml.jackson.databind.deser.SettableBeanProperty.hasValueTypeDeserializer(),2
com.fasterxml.jackson.databind.deser.SettableBeanProperty.getValueDeserializer(),2
com.fasterxml.jackson.databind.deser.SettableBeanProperty.visibleInView(Class),3
com.fasterxml.jackson.databind.deser.SettableBeanProperty.hasViews(),2
"com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(JsonParser,DeserializationContext)",4
"com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserializeWith(JsonParser,DeserializationContext,Object)",6
com.fasterxml.jackson.databind.deser.SettableBeanProperty.unwrapped(NameTransformer),3
"com.fasterxml.jackson.databind.deser.SettableBeanProperty._throwAsIOE(JsonParser,Exception,Object)",3
com.fasterxml.jackson.databind.deser.DataFormatReaders.withOptimalMatch(MatchStrength),2
com.fasterxml.jackson.databind.deser.DataFormatReaders.withMinimalMatch(MatchStrength),2
com.fasterxml.jackson.databind.deser.DataFormatReaders.withMaxInputLookahead(int),2
com.fasterxml.jackson.databind.deser.DataFormatReaders.with(DeserializationConfig),2
com.fasterxml.jackson.databind.deser.DataFormatReaders.withType(JavaType),2
com.fasterxml.jackson.databind.deser.DataFormatReaders.toString(),3
com.fasterxml.jackson.databind.deser.DataFormatReaders._findFormat(AccessorForReader),18
"com.fasterxml.jackson.databind.deser.DeserializerCache.findValueDeserializer(DeserializationContext,DeserializerFactory,JavaType)",3
"com.fasterxml.jackson.databind.deser.DeserializerCache.findKeyDeserializer(DeserializationContext,DeserializerFactory,JavaType)",3
"com.fasterxml.jackson.databind.deser.DeserializerCache.hasValueDeserializerFor(DeserializationContext,DeserializerFactory,JavaType)",4
com.fasterxml.jackson.databind.deser.DeserializerCache._findCachedDeserializer(JavaType),2
"com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer(DeserializationContext,DeserializerFactory,JavaType)",36
"com.fasterxml.jackson.databind.deser.DeserializerCache._createDeserializer2(DeserializationContext,DeserializerFactory,JavaType,BeanDescription)",23
"com.fasterxml.jackson.databind.deser.DeserializerCache.findDeserializerFromAnnotation(DeserializationContext,Annotated)",2
"com.fasterxml.jackson.databind.deser.DeserializerCache.findConvertingDeserializer(DeserializationContext,Annotated,JsonDeserializer)",2
"com.fasterxml.jackson.databind.deser.DeserializerCache.findConverter(DeserializationContext,Annotated)",2
"com.fasterxml.jackson.databind.deser.DeserializerCache.modifyTypeByAnnotation(DeserializationContext,Annotated,JavaType)",55
com.fasterxml.jackson.databind.deser.DeserializerCache._hasCustomHandlers(JavaType),9
"com.fasterxml.jackson.databind.deser.DeserializerCache._verifyAsClass(Object,String,Class)",5
"com.fasterxml.jackson.databind.deser.DeserializerCache._handleUnknownValueDeserializer(DeserializationContext,JavaType)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.addOrReplaceProperty(SettableBeanProperty,boolean)",5
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.addProperty(SettableBeanProperty),3
"com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.addBackReferenceProperty(String,SettableBeanProperty)",8
"com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.addInjectable(PropertyName,JavaType,Annotations,AnnotatedMember,Object)",12
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.addIgnorable(String),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.addIncludable(String),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.setAnySetter(SettableAnyProperty),3
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.hasProperty(PropertyName),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder.build(),20
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._findCaseInsensitivity(),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._handleBadAccess(IllegalArgumentException),11
com.fasterxml.jackson.databind.deser.ValueInstantiator.getValueTypeDesc(),2
com.fasterxml.jackson.databind.deser.ValueInstantiator.canInstantiate(),10
com.fasterxml.jackson.databind.deser.ValueInstantiator.canCreateUsingDefault(),2
"com.fasterxml.jackson.databind.deser.ValueInstantiator._createFromStringFallbacks(DeserializationContext,String)",11
com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializer(JsonSerializer),3
com.fasterxml.jackson.databind.module.SimpleSerializers.addSerializers(List),2
"com.fasterxml.jackson.databind.module.SimpleSerializers._findInterfaceMapping(Class,ClassKey)",6
"com.fasterxml.jackson.databind.module.SimpleSerializers._addSerializer(Class,JsonSerializer)",6
"com.fasterxml.jackson.databind.module.SimpleDeserializers.addDeserializer(Class,JsonDeserializer)",4
com.fasterxml.jackson.databind.module.SimpleDeserializers.addDeserializers(Map),2
"com.fasterxml.jackson.databind.module.SimpleDeserializers.findEnumDeserializer(Class,DeserializationConfig,BeanDescription)",5
"com.fasterxml.jackson.databind.module.SimpleDeserializers.findTreeNodeDeserializer(Class,DeserializationConfig,BeanDescription)",2
"com.fasterxml.jackson.databind.module.SimpleDeserializers.hasDeserializerFor(DeserializationConfig,Class)",3
com.fasterxml.jackson.databind.module.SimpleDeserializers._find(JavaType),2
"com.fasterxml.jackson.databind.module.SimpleKeyDeserializers.addDeserializer(Class,KeyDeserializer)",2
"com.fasterxml.jackson.databind.module.SimpleKeyDeserializers.findKeyDeserializer(JavaType,DeserializationConfig,BeanDescription)",2
com.fasterxml.jackson.databind.module.SimpleModule.getTypeId(),3
com.fasterxml.jackson.databind.module.SimpleModule.addSerializer(JsonSerializer),2
"com.fasterxml.jackson.databind.module.SimpleModule.addSerializer(Class,JsonSerializer)",2
"com.fasterxml.jackson.databind.module.SimpleModule.addKeySerializer(Class,JsonSerializer)",2
"com.fasterxml.jackson.databind.module.SimpleModule.addDeserializer(Class,JsonDeserializer)",2
"com.fasterxml.jackson.databind.module.SimpleModule.addKeyDeserializer(Class,KeyDeserializer)",2
"com.fasterxml.jackson.databind.module.SimpleModule.addAbstractTypeMapping(Class,Class)",2
com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(Class[]),4
com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(NamedType[]),4
com.fasterxml.jackson.databind.module.SimpleModule.registerSubtypes(Collection),4
"com.fasterxml.jackson.databind.module.SimpleModule.addValueInstantiator(Class,ValueInstantiator)",2
"com.fasterxml.jackson.databind.module.SimpleModule.setMixInAnnotation(Class,Class)",2
"com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver.addMapping(Class,Class)",4
"com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver.findTypeMapping(DeserializationConfig,JavaType)",2
"com.fasterxml.jackson.databind.module.SimpleValueInstantiators.findValueInstantiator(DeserializationConfig,BeanDescription,ValueInstantiator)",2
com.fasterxml.jackson.databind.ext.DOMDeserializer.parse(String),7
"com.fasterxml.jackson.databind.ext.DOMSerializer.serialize(Node,JsonGenerator,SerializerProvider)",31
"com.fasterxml.jackson.databind.ext.DOMSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",2
"com.fasterxml.jackson.databind.ext.SqlBlobSerializer._writeValue(Blob,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ext.SqlBlobSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",2
"com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findSerializer(SerializationConfig,JavaType,BeanDescription)",16
"com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.findDeserializer(JavaType,DeserializationConfig,BeanDescription)",17
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.hasDeserializerFor(Class),5
"com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.instantiate(String,JavaType)",3
"com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.instantiate(Class,JavaType)",2
com.fasterxml.jackson.databind.ext.Java7SupportImpl.findTransient(Annotated),2
com.fasterxml.jackson.databind.ext.Java7SupportImpl.hasCreatorAnnotation(Annotated),2
com.fasterxml.jackson.databind.ext.Java7SupportImpl.findConstructorName(AnnotatedParameter),4
"com.fasterxml.jackson.databind.ext.CoreXMLSerializers.findSerializer(SerializationConfig,JavaType,BeanDescription)",4
"com.fasterxml.jackson.databind.ext.CoreXMLDeserializers.findBeanDeserializer(JavaType,DeserializationConfig,BeanDescription)",4
com.fasterxml.jackson.databind.ext.Java7HandlersImpl.getDeserializerForJavaNioFilePath(Class),2
com.fasterxml.jackson.databind.ext.Java7HandlersImpl.getSerializerForJavaNioFilePath(Class),2
com.fasterxml.jackson.databind.SerializerProvider.setDefaultKeySerializer(JsonSerializer),2
com.fasterxml.jackson.databind.SerializerProvider.setNullValueSerializer(JsonSerializer),2
com.fasterxml.jackson.databind.SerializerProvider.setNullKeySerializer(JsonSerializer),2
"com.fasterxml.jackson.databind.SerializerProvider.constructSpecializedType(JavaType,Class)",2
"com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(Class,BeanProperty)",5
"com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(JavaType,BeanProperty)",8
com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(Class),5
com.fasterxml.jackson.databind.SerializerProvider.findValueSerializer(JavaType),4
"com.fasterxml.jackson.databind.SerializerProvider.findPrimaryPropertySerializer(JavaType,BeanProperty)",4
"com.fasterxml.jackson.databind.SerializerProvider.findPrimaryPropertySerializer(Class,BeanProperty)",5
"com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(JavaType,BeanProperty)",4
"com.fasterxml.jackson.databind.SerializerProvider.findContentValueSerializer(Class,BeanProperty)",5
"com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(Class,boolean,BeanProperty)",6
"com.fasterxml.jackson.databind.SerializerProvider.findTypedValueSerializer(JavaType,boolean,BeanProperty)",6
com.fasterxml.jackson.databind.SerializerProvider.getUnknownTypeSerializer(Class),2
com.fasterxml.jackson.databind.SerializerProvider.isUnknownTypeSerializer(JsonSerializer),5
"com.fasterxml.jackson.databind.SerializerProvider.handlePrimaryContextualization(JsonSerializer,BeanProperty)",3
"com.fasterxml.jackson.databind.SerializerProvider.handleSecondaryContextualization(JsonSerializer,BeanProperty)",3
"com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeValue(Object,JsonGenerator)",3
"com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeField(String,Object,JsonGenerator)",3
"com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateValue(long,JsonGenerator)",2
"com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateValue(Date,JsonGenerator)",2
"com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(long,JsonGenerator)",2
"com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeDateKey(Date,JsonGenerator)",2
com.fasterxml.jackson.databind.SerializerProvider.defaultSerializeNull(JsonGenerator),2
"com.fasterxml.jackson.databind.SerializerProvider.reportBadTypeDefinition(BeanDescription,String,Object[])",2
"com.fasterxml.jackson.databind.SerializerProvider.reportBadPropertyDefinition(BeanDescription,BeanPropertyDefinition,String,Object[])",4
"com.fasterxml.jackson.databind.SerializerProvider._reportIncompatibleRootType(Object,JavaType)",3
com.fasterxml.jackson.databind.SerializerProvider._findExplicitUntypedSerializer(Class),6
com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(Class),4
com.fasterxml.jackson.databind.SerializerProvider._createAndCacheUntypedSerializer(JavaType),4
"com.fasterxml.jackson.databind.SerializerProvider._handleContextualResolvable(JsonSerializer,BeanProperty)",2
com.fasterxml.jackson.databind.SerializerProvider._handleResolvable(JsonSerializer),2
com.fasterxml.jackson.databind.SerializerProvider._dateFormat(),2
com.fasterxml.jackson.databind.PropertyName.readResolve(),4
com.fasterxml.jackson.databind.PropertyName.construct(String),3
"com.fasterxml.jackson.databind.PropertyName.construct(String,String)",6
"com.fasterxml.jackson.databind.PropertyName.merge(PropertyName,PropertyName)",10
com.fasterxml.jackson.databind.PropertyName.internSimpleName(),3
com.fasterxml.jackson.databind.PropertyName.withSimpleName(String),4
com.fasterxml.jackson.databind.PropertyName.withNamespace(String),4
com.fasterxml.jackson.databind.PropertyName.simpleAsEncoded(MapperConfig),3
com.fasterxml.jackson.databind.PropertyName.hasSimpleName(),2
com.fasterxml.jackson.databind.PropertyName.hasNamespace(),2
com.fasterxml.jackson.databind.PropertyName.isEmpty(),3
com.fasterxml.jackson.databind.PropertyName.equals(Object),11
com.fasterxml.jackson.databind.PropertyName.toString(),2
"com.fasterxml.jackson.databind.ser.impl.StringArraySerializer.createContextual(SerializerProvider,BeanProperty)",96
"com.fasterxml.jackson.databind.ser.impl.StringArraySerializer.serialize(String[],JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.impl.StringArraySerializer.serializeContents(String[],JsonGenerator,SerializerProvider)",5
"com.fasterxml.jackson.databind.ser.impl.StringArraySerializer.serializeContentsSlow(String[],JsonGenerator,SerializerProvider,JsonSerializer)",3
"com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.construct(JavaType,PropertyName,ObjectIdGenerator,boolean)",4
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.withAlwaysAsId(boolean),2
"com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer.serialize(Collection,JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer.serializeContents(Collection,JsonGenerator,SerializerProvider)",40
"com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",6
"com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",2
"com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialize(Object,JsonGenerator,SerializerProvider)",3
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.hasSingleElement(SerializerProvider),6
"com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer.serialize(List,JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer.serializeContents(List,JsonGenerator,SerializerProvider,int)",36
"com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(List,JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContentsUsing(List,JsonGenerator,SerializerProvider,JsonSerializer)",12
"com.fasterxml.jackson.databind.ser.impl.WritableObjectId.writeAsId(JsonGenerator,SerializerProvider,ObjectIdWriter)",6
com.fasterxml.jackson.databind.ser.impl.WritableObjectId.generateId(Object),2
"com.fasterxml.jackson.databind.ser.impl.WritableObjectId.writeAsField(JsonGenerator,SerializerProvider,ObjectIdWriter)",4
"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter.serializeAsField(Object,JsonGenerator,SerializerProvider,BeanPropertyWriter)",3
"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter.depositSchemaProperty(BeanPropertyWriter,ObjectNode,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter.depositSchemaProperty(BeanPropertyWriter,JsonObjectFormatVisitor,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter.serializeAsField(Object,JsonGenerator,SerializerProvider,PropertyWriter)",4
"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter.serializeAsElement(Object,JsonGenerator,SerializerProvider,PropertyWriter)",2
"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter.depositSchemaProperty(PropertyWriter,ObjectNode,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter.depositSchemaProperty(PropertyWriter,JsonObjectFormatVisitor,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(Object,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",2
"com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(SerializerProvider,Object)",2
"com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter.constructViewBased(BeanPropertyWriter,Class[])",2
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializerInstance(Annotated,Object)",22
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.includeFilterInstance(BeanPropertyDefinition,Class)",5
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.includeFilterSuppressNulls(Object),3
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.findObjectId(Object,ObjectIdGenerator)",21
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._createObjectIdMap(),2
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.hasSerializerFor(Class,AtomicReference)",45
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(JsonGenerator,Object)",5
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(JsonGenerator,Object,JavaType)",9
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(JsonGenerator,Object,JavaType,JsonSerializer)",31
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(JsonGenerator,Object,JsonSerializer,PropertyName)",7
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(JsonGenerator,Object,JsonSerializer)",2
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serializeNull(JsonGenerator),2
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._wrapAsIOE(JsonGenerator,Exception)",3
"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.acceptJsonFormatVisitor(JavaType,JsonFormatVisitorWrapper)",2
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.generateJsonSchema(Class),4
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder.setFilteredProperties(BeanPropertyWriter[]),3
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder.setTypeId(AnnotatedMember),2
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder.hasProperties(),3
"com.fasterxml.jackson.databind.ser.AnyGetterWriter.getAndSerialize(Object,JsonGenerator,SerializerProvider)",5
"com.fasterxml.jackson.databind.ser.AnyGetterWriter.getAndFilter(Object,JsonGenerator,SerializerProvider,PropertyFilter)",5
com.fasterxml.jackson.databind.ser.AnyGetterWriter.resolve(SerializerProvider),3
"com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)",53
"com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serializeAsElement(Object,JsonGenerator,SerializerProvider)",53
com.fasterxml.jackson.databind.ser.SerializerCache.getReadOnlyLookupMap(),2
com.fasterxml.jackson.databind.ser.SerializerCache._makeReadOnlyLookupMap(),2
"com.fasterxml.jackson.databind.ser.FilterProvider.findPropertyFilter(Object,Object)",2
com.fasterxml.jackson.databind.ser.BeanSerializerFactory.withConfig(SerializerFactoryConfig),3
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.createSerializer(SerializerProvider,JavaType)",45
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findBeanOrAddOnSerializer(SerializerProvider,JavaType,BeanDescription,boolean)",3
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyTypeSerializer(JavaType,SerializationConfig,AnnotatedMember)",2
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.findPropertyContentTypeSerializer(JavaType,SerializationConfig,AnnotatedMember)",2
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.constructObjectIdHandler(SerializerProvider,BeanDescription,List)",8
com.fasterxml.jackson.databind.ser.BeanSerializerFactory.isPotentialBeanType(Class),3
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.filterUnwantedJDKProperties(SerializationConfig,BeanDescription,List)",6
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.processViews(SerializationConfig,BeanSerializerBuilder)",18
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeIgnorableTypes(SerializationConfig,BeanDescription,List)",10
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory.removeOverlappingTypeIds(SerializerProvider,BeanDescription,BeanSerializerBuilder,List)",9
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory._constructWriter(SerializerProvider,BeanPropertyDefinition,PropertyBuilder,boolean,AnnotatedMember)",6
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory._findUnsupportedTypeSerializer(SerializerProvider,JavaType,BeanDescription)",3
"com.fasterxml.jackson.databind.ser.BeanSerializerFactory._isUnserializableJacksonType(SerializerProvider,JavaType)",8
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.rename(BeanPropertyWriter[],NameTransformer)",7
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.findConvertingSerializer(SerializerProvider,BeanPropertyWriter)",5
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.usesObjectId(),2
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",3
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,boolean)",10
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeWithObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer)",3
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)",2
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeIdDef(TypeSerializer,Object,JsonToken)",3
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._customTypeId(Object),3
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.getSchema(SerializerProvider,Type)",24
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",22
"com.fasterxml.jackson.databind.ser.std.BooleanSerializer.createContextual(SerializerProvider,BeanProperty)",4
"com.fasterxml.jackson.databind.ser.std.BooleanSerializer.getSchema(SerializerProvider,Type)",2
"com.fasterxml.jackson.databind.ser.std.ByteArraySerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",2
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.withResolved(BeanProperty,TypeSerializer,JsonSerializer,boolean)",5
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.isEmpty(SerializerProvider,Object)",5
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.createContextual(SerializerProvider,BeanProperty)",10
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.serialize(Object,JsonGenerator,SerializerProvider)",15
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",12
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.getSchema(SerializerProvider,Type)",2
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",10
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._acceptJsonFormatVisitorForEnum(JsonFormatVisitorWrapper,JavaType,Class)",35
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._findDynamicSerializer(SerializerProvider,Class)",3
"com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._withIgnoreProperties(JsonSerializer,Set)",3
"com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer.withResolved(BeanProperty,TypeSerializer,JsonSerializer,Boolean)",5
"com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer.serialize(Object[],JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer.serializeContentsUsing(Object[],JsonGenerator,SerializerProvider,JsonSerializer)",64
"com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer.serializeTypedContents(Object[],JsonGenerator,SerializerProvider)",73
"com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",3
"com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer._findAndAddDynamic(PropertySerializerMap,Class,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer._findAndAddDynamic(PropertySerializerMap,JavaType,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.IterableSerializer.serialize(Iterable,JsonGenerator,SerializerProvider)",8
com.fasterxml.jackson.databind.ser.std.MapProperty.getName(),2
"com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsField(Object,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.MapProperty.serializeAsElement(Object,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.UUIDSerializer.createContextual(SerializerProvider,BeanProperty)",8
"com.fasterxml.jackson.databind.ser.std.UUIDSerializer.serialize(UUID,JsonGenerator,SerializerProvider)",2
com.fasterxml.jackson.databind.ser.std.UUIDSerializer._writeAsBinary(JsonGenerator),4
"com.fasterxml.jackson.databind.ser.std.StdKeySerializers.getStdKeySerializer(SerializationConfig,Class,boolean)",25
"com.fasterxml.jackson.databind.ser.std.StdKeySerializers.getFallbackKeySerializer(SerializationConfig,Class,AnnotatedClass)",4
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.resolve(SerializerProvider),3
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.createContextual(SerializerProvider,BeanProperty)",30
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.serialize(Object,JsonGenerator,SerializerProvider)",3
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",3
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.isEmpty(SerializerProvider,Object)",4
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.getSchema(SerializerProvider,Type)",2
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.getSchema(SerializerProvider,Type,boolean)",2
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",2
"com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer._findSerializer(Object,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.serialize(Object,JsonGenerator,SerializerProvider)",3
"com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.getSchema(SerializerProvider,Type)",5
"com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",3
"com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._findAndAddDynamic(PropertySerializerMap,Class,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._findAndAddDynamic(PropertySerializerMap,JavaType,SerializerProvider)",2
com.fasterxml.jackson.databind.ObjectWriter.with(JsonFactory),2
"com.fasterxml.jackson.databind.ObjectWriter.writeValue(JsonGenerator,Object)",14
com.fasterxml.jackson.databind.ObjectWriter._verifySchemaType(FormatSchema),3
"com.fasterxml.jackson.databind.ObjectWriter._writeValueAndClose(JsonGenerator,Object)",9
"com.fasterxml.jackson.databind.ObjectWriter._writeCloseable(JsonGenerator,Object)",7
com.fasterxml.jackson.databind.MappingIterator.hasNext(),3
com.fasterxml.jackson.databind.MappingIterator.next(),3
com.fasterxml.jackson.databind.MappingIterator.close(),3
com.fasterxml.jackson.databind.MappingIterator.hasNextValue(),16
com.fasterxml.jackson.databind.MappingIterator.readAll(List),2
com.fasterxml.jackson.databind.MappingIterator.readAll(Collection),2
com.fasterxml.jackson.databind.MappingIterator._resync(),19
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypePrefix(JsonGenerator,WritableTypeId)",2
"com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.writeTypeSuffix(JsonGenerator,WritableTypeId)",2
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._generateTypeId(WritableTypeId),3
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValue(Object),2
"com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase.idFromValueAndType(Object,Class)",2
com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver.idFromValueAndType(Object,Class)",2
"com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver._typeFromId(String,DatabindContext)",3
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer.forProperty(BeanProperty),2
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer._writeScalarSuffix(Object,JsonGenerator,String)",2
"com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer._writeObjectSuffix(Object,JsonGenerator,String)",2
"com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer._writeArraySuffix(Object,JsonGenerator,String)",2
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._resolveToParentAsNecessary(Class),3
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer._deserialize(JsonParser,DeserializationContext)",49
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer.forProperty(BeanProperty),2
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.registerSubtypes(NamedType[]),4
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.registerSubtypes(Class[]),2
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.registerSubtypes(Collection),2
"com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.collectAndResolveSubtypesByClass(MapperConfig,AnnotatedMember,JavaType)",33
"com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.collectAndResolveSubtypesByClass(MapperConfig,AnnotatedClass)",4
"com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.collectAndResolveSubtypesByTypeId(MapperConfig,AnnotatedMember,JavaType)",16
"com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.collectAndResolveSubtypesByTypeId(MapperConfig,AnnotatedClass)",4
"com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver._collectAndResolve(AnnotatedClass,NamedType,MapperConfig,AnnotationIntrospector,HashMap)",21
"com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver._collectAndResolveByTypeId(AnnotatedClass,NamedType,MapperConfig,Set,Map)",30
"com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver._combineNamedAndUnnamed(Class,Set,Map)",8
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer.buildFingerprints(DeserializationConfig,Collection)",64
"com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer.deserializeTypedFromObject(JsonParser,DeserializationContext)",63
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.hasDefaultImpl(),2
"com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._findDeserializer(DeserializationContext,String)",11
"com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializeWithNativeTypeId(JsonParser,DeserializationContext,Object)",4
"com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._handleUnknownTypeId(DeserializationContext,String)",4
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._deserialize(JsonParser,DeserializationContext)",57
"com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer._locateTypeId(JsonParser,DeserializationContext)",7
"com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.validateSubType(DeserializationContext,JavaType,BeanDescription)",13
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver.construct(MapperConfig,JavaType,Collection,boolean,boolean)",61
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver.idFromClass(Class),6
"com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver.idFromValueAndType(Object,Class)",2
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver._typeFromId(String),2
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver.getDescForKnownTypeIds(),3
"com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver._typeFromId(String,DatabindContext)",3
"com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver._idFrom(Object,Class,TypeFactory)",7
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeSerializer(SerializationConfig,JavaType,Collection)",16
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.buildTypeDeserializer(DeserializationConfig,JavaType,Collection)",14
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.defineDefaultImpl(DeserializationConfig,JavaType)",11
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(Id,TypeIdResolver)",2
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.init(Value,TypeIdResolver)",2
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.withDefaultImpl(Class),2
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.idResolver(MapperConfig,JavaType,PolymorphicTypeValidator,Collection,boolean,boolean)",8
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.verifyBaseTypeValidity(MapperConfig,JavaType)",7
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._strictTypeIdHandling(DeserializationConfig,JavaType)",5
"com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._hasTypeResolver(DeserializationConfig,JavaType)",2
"com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver.construct(MapperConfig,JavaType,Collection,boolean,boolean)",61
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver.idFromClass(Class),6
"com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver.idFromValueAndType(Object,Class)",2
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver._typeFromId(String),2
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver.getDescForKnownTypeIds(),3
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.forProperty(BeanProperty),2
"com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedForId(JsonParser,DeserializationContext,TokenBuffer,String)",12
"com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._deserializeTypedUsingDefaultImpl(JsonParser,DeserializationContext,TokenBuffer,String)",35
"com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.deserializeTypedFromAny(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.validateBaseType(MapperConfig,JavaType)",2
"com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.validateSubType(MapperConfig,JavaType,JavaType)",2
"com.fasterxml.jackson.databind.jsontype.TypeSerializer.typeId(Object,JsonToken)",6
"com.fasterxml.jackson.databind.jsontype.TypeSerializer._writeLegacySuffix(JsonGenerator,WritableTypeId)",2
com.fasterxml.jackson.databind.jsontype.TypeDeserializer.hasDefaultImpl(),2
"com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateBaseType(MapperConfig,JavaType)",11
"com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubClassName(MapperConfig,JavaType,String)",5
"com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.validateSubType(MapperConfig,JavaType,JavaType)",5
com.fasterxml.jackson.databind.jsontype.NamedType.setName(String),3
com.fasterxml.jackson.databind.jsontype.NamedType.hasName(),2
com.fasterxml.jackson.databind.jsontype.NamedType.equals(Object),6
com.fasterxml.jackson.databind.jsontype.NamedType.toString(),2
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlInputFactory(),2
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlOutputFactory(),2
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.staxClassLoader(),2
com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.construct(Set),2
com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.contains(Object),4
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.indentArraysWith(Indenter),2
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.indentObjectsWith(Indenter),2
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.withCustomNewLine(String),2
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartObject(JsonGenerator),3
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndObject(JsonGenerator,int)",4
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartElement(XMLStreamWriter2,String,String)",3
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndElement(XMLStreamWriter2,int)",4
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,String,boolean)",4
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,char[],int,int,boolean)",4
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,boolean)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,int)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,long)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,double)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,float)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigInteger)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigDecimal)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,Base64Variant,byte[],int,int)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafNullElement(XMLStreamWriter2,String,String)",2
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafXsiNilElement(XMLStreamWriter2,String,String)",2
com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.wrapIfNecessary(XMLStreamReader),2
com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.next(),2
com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.readResolve(),2
"com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.findRootName(Class,MapperConfig)",2
"com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup._findRootName(MapperConfig,Class)",10
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder._propName(String,Id)",4
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.idResolver(MapperConfig,JavaType,PolymorphicTypeValidator,Collection,boolean,boolean)",4
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createChildArrayContext(int,int)",2
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createChildObjectContext(int,int)",2
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.hasCurrentName(),2
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.shouldWrap(String),3
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.toString(),5
"org.apache.commons.codec.binary.StringUtils.equals(CharSequence,CharSequence)",10
"org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String,String)",3
"org.apache.commons.codec.binary.StringUtils.newString(byte[],String)",4
"org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)",5
org.apache.commons.codec.binary.Base64.isBase64(byte),5
org.apache.commons.codec.binary.Base64.isBase64(byte[]),6
org.apache.commons.codec.binary.Base64.toUrlSafeEncodeTable(boolean),2
"org.apache.commons.codec.binary.Base64.encode(byte[],int,int,Context)",43
org.apache.commons.codec.binary.Base64.isInAlphabet(byte),4
"org.apache.commons.codec.binary.Base64.validateCharacter(int,Context)",3
"org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(Context,int)",4
org.apache.commons.codec.binary.BaseNCodec.available(Context),2
org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[]),7
org.apache.commons.codec.binary.BaseNCodec.decode(byte[]),2
org.apache.commons.codec.binary.BaseNCodec.decode(Object),3
org.apache.commons.codec.binary.BaseNCodec.encode(byte[]),2
"org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int)",2
org.apache.commons.codec.binary.BaseNCodec.encode(Object),2
"org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,Context)",3
org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[]),2
org.apache.commons.codec.binary.BaseNCodec.hasData(Context),2
"org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)",12
org.apache.commons.codec.binary.BaseNCodec.isStrictDecoding(),2
"org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,Context)",4
"org.apache.commons.codec.binary.Hex.decodeHex(char[],byte[],int)",4
org.apache.commons.codec.binary.Hex.toAlphabet(boolean),2
"org.apache.commons.codec.binary.Hex.toDigit(char,int)",2
org.apache.commons.codec.binary.Hex.decode(Object),6
org.apache.commons.codec.binary.Hex.encode(Object),4
org.apache.commons.codec.binary.BaseNCodecOutputStream.eof(),2
org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean),6
"org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)",7
org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[]),5
org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[]),6
org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[]),5
org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[]),5
org.apache.commons.codec.binary.BinaryCodec.decode(Object),5
org.apache.commons.codec.binary.BinaryCodec.encode(Object),2
org.apache.commons.codec.binary.BinaryCodec.toByteArray(String),2
"org.apache.commons.codec.binary.Base16.decode(byte[],int,int,Context)",70
org.apache.commons.codec.binary.Base16.decodeOctet(byte),4
"org.apache.commons.codec.binary.Base16.encode(byte[],int,int,Context)",5
org.apache.commons.codec.binary.Base16.isInAlphabet(byte),3
org.apache.commons.codec.binary.BaseNCodecInputStream.available(),2
org.apache.commons.codec.binary.BaseNCodecInputStream.read(),6
"org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)",33
org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long),5
"org.apache.commons.collections4.IteratorUtils.collatedIterator(Comparator,Collection)",2
"org.apache.commons.collections4.IteratorUtils.collatedIterator(Comparator,Iterator[])",2
"org.apache.commons.collections4.IteratorUtils.collatedIterator(Comparator,Iterator,Iterator)",2
"org.apache.commons.collections4.IteratorUtils.get(Iterator,int,IntFunction)",4
org.apache.commons.collections4.IteratorUtils.getIterator(Object),25
"org.apache.commons.collections4.IteratorUtils.matchesAny(Iterator,Predicate)",2
org.apache.commons.collections4.ComparatorUtils.chainedComparator(Comparator[]),2
"org.apache.commons.collections4.ComparatorUtils.max(Object,Object,Comparator)",4
"org.apache.commons.collections4.ComparatorUtils.min(Object,Object,Comparator)",4
org.apache.commons.collections4.ComparatorUtils.nullHighComparator(Comparator),2
org.apache.commons.collections4.ComparatorUtils.nullLowComparator(Comparator),2
"org.apache.commons.collections4.ComparatorUtils.transformedComparator(Comparator,Transformer)",2
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.entrySet(),2
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.inverseBidiMap(),2
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.keySet(),2
"org.apache.commons.collections4.bidimap.AbstractDualBidiMap.put(Object,Object)",4
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.putAll(Map),2
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.remove(Object),2
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.removeValue(Object),2
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.values(),2
org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.unmodifiableBidiMap(BidiMap),2
org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.inverseBidiMap(),2
org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.unmodifiableOrderedBidiMap(OrderedBidiMap),2
org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverseOrderedBidiMap(),2
org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.unmodifiableSortedBidiMap(SortedBidiMap),2
org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.inverseBidiMap(),2
org.apache.commons.collections4.bidimap.TreeBidiMap.containsKey(Object),2
org.apache.commons.collections4.bidimap.TreeBidiMap.containsValue(Object),2
"org.apache.commons.collections4.bidimap.TreeBidiMap.doEquals(Object,DataElement)",27
org.apache.commons.collections4.bidimap.TreeBidiMap.doHashCode(DataElement),3
org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDelete(Node),79
"org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackDeleteFixup(Node,DataElement)",42
"org.apache.commons.collections4.bidimap.TreeBidiMap.doRedBlackInsert(Node,DataElement)",33
org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveKey(Object),2
org.apache.commons.collections4.bidimap.TreeBidiMap.doRemoveValue(Object),2
org.apache.commons.collections4.bidimap.TreeBidiMap.doToString(DataElement),10
org.apache.commons.collections4.bidimap.TreeBidiMap.entrySet(),2
org.apache.commons.collections4.bidimap.TreeBidiMap.isEmpty(),2
org.apache.commons.collections4.bidimap.TreeBidiMap.keySet(),2
"org.apache.commons.collections4.bidimap.TreeBidiMap.lookup(Object,DataElement)",6
org.apache.commons.collections4.bidimap.TreeBidiMap.mapIterator(),2
org.apache.commons.collections4.bidimap.TreeBidiMap.nextKey(Comparable),2
org.apache.commons.collections4.bidimap.TreeBidiMap.previousKey(Comparable),2
org.apache.commons.collections4.bidimap.TreeBidiMap.putAll(Map),2
org.apache.commons.collections4.bidimap.TreeBidiMap.readObject(ObjectInputStream),2
org.apache.commons.collections4.bidimap.TreeBidiMap.values(),2
org.apache.commons.collections4.bidimap.TreeBidiMap.writeObject(ObjectOutputStream),2
org.apache.commons.collections4.map.StaticBucketMap.putAll(Map),2
org.apache.commons.collections4.map.AbstractMapDecorator.equals(Object),2
org.apache.commons.collections4.map.AbstractReferenceMap.clear(),2
org.apache.commons.collections4.map.AbstractReferenceMap.containsKey(Object),3
org.apache.commons.collections4.map.AbstractReferenceMap.containsValue(Object),2
org.apache.commons.collections4.map.AbstractReferenceMap.doReadObject(ObjectInputStream),2
org.apache.commons.collections4.map.AbstractReferenceMap.doWriteObject(ObjectOutputStream),2
org.apache.commons.collections4.map.AbstractReferenceMap.entrySet(),2
org.apache.commons.collections4.map.AbstractReferenceMap.get(Object),2
org.apache.commons.collections4.map.AbstractReferenceMap.keySet(),2
org.apache.commons.collections4.map.AbstractReferenceMap.purge(),2
org.apache.commons.collections4.map.AbstractReferenceMap.purge(Reference),6
org.apache.commons.collections4.map.AbstractReferenceMap.remove(Object),2
org.apache.commons.collections4.map.AbstractReferenceMap.values(),2
org.apache.commons.collections4.map.MultiKeyMap.multiKeyMap(AbstractHashedMap),2
"org.apache.commons.collections4.map.MultiKeyMap.containsKey(Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.containsKey(Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.containsKey(Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.containsKey(Object,Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.get(Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.get(Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.get(Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.get(Object,Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(HashEntry,Object,Object)",4
"org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(HashEntry,Object,Object,Object)",5
"org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(HashEntry,Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(HashEntry,Object,Object,Object,Object,Object)",7
"org.apache.commons.collections4.map.MultiKeyMap.put(Object,Object,Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.put(Object,Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.put(Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.put(Object,Object,Object)",6
org.apache.commons.collections4.map.MultiKeyMap.putAll(Map),2
org.apache.commons.collections4.map.MultiKeyMap.removeAll(Object),4
"org.apache.commons.collections4.map.MultiKeyMap.removeAll(Object,Object)",5
"org.apache.commons.collections4.map.MultiKeyMap.removeAll(Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.removeAll(Object,Object,Object,Object)",7
"org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(Object,Object,Object,Object)",6
"org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(Object,Object,Object,Object,Object)",6
org.apache.commons.collections4.map.LazyMap.get(Object),2
org.apache.commons.collections4.map.PassiveExpiringMap.putAll(Map),2
org.apache.commons.collections4.map.PassiveExpiringMap.removeAllExpired(long),3
"org.apache.commons.collections4.map.PassiveExpiringMap.removeIfExpired(Object,long)",2
"org.apache.commons.collections4.map.MultiValueMap.containsValue(Object,Object)",2
org.apache.commons.collections4.map.MultiValueMap.iterator(Object),2
"org.apache.commons.collections4.map.MultiValueMap.put(Object,Object)",6
"org.apache.commons.collections4.map.MultiValueMap.putAll(Object,Collection)",5
org.apache.commons.collections4.map.MultiValueMap.putAll(Map),4
"org.apache.commons.collections4.map.MultiValueMap.removeMapping(Object,Object)",4
org.apache.commons.collections4.map.MultiValueMap.size(Object),2
org.apache.commons.collections4.map.MultiValueMap.totalSize(),2
org.apache.commons.collections4.map.MultiValueMap.values(),2
"org.apache.commons.collections4.map.LRUMap.addMapping(int,int,Object,Object)",28
"org.apache.commons.collections4.map.LRUMap.get(Object,boolean)",3
org.apache.commons.collections4.map.LRUMap.isFull(),2
"org.apache.commons.collections4.map.TransformedMap.transformedMap(Map,Transformer,Transformer)",2
org.apache.commons.collections4.map.TransformedMap.isSetValueChecking(),2
org.apache.commons.collections4.map.TransformedMap.transformKey(Object),2
org.apache.commons.collections4.map.TransformedMap.transformMap(Map),3
org.apache.commons.collections4.map.TransformedMap.transformValue(Object),2
org.apache.commons.collections4.map.CompositeMap.addComposited(Map),7
org.apache.commons.collections4.map.CompositeMap.clear(),2
org.apache.commons.collections4.map.CompositeMap.containsKey(Object),4
org.apache.commons.collections4.map.CompositeMap.containsValue(Object),4
org.apache.commons.collections4.map.CompositeMap.entrySet(),2
org.apache.commons.collections4.map.CompositeMap.equals(Object),2
org.apache.commons.collections4.map.CompositeMap.get(Object),4
org.apache.commons.collections4.map.CompositeMap.hashCode(),2
org.apache.commons.collections4.map.CompositeMap.isEmpty(),4
org.apache.commons.collections4.map.CompositeMap.keySet(),2
"org.apache.commons.collections4.map.CompositeMap.put(Object,Object)",2
org.apache.commons.collections4.map.CompositeMap.putAll(Map),2
org.apache.commons.collections4.map.CompositeMap.remove(Object),4
org.apache.commons.collections4.map.CompositeMap.removeComposited(Map),4
org.apache.commons.collections4.map.CompositeMap.size(),2
org.apache.commons.collections4.map.CompositeMap.values(),2
org.apache.commons.collections4.keyvalue.MultiKey.getComponentType(Object[]),9
org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(Object[]),3
org.apache.commons.collections4.keyvalue.MultiKey.equals(Object),3
org.apache.commons.collections4.keyvalue.DefaultKeyValue.setKey(Object),2
org.apache.commons.collections4.keyvalue.DefaultKeyValue.setValue(Object),2
org.apache.commons.collections4.keyvalue.TiedMapEntry.equals(Object),5
org.apache.commons.collections4.keyvalue.TiedMapEntry.hashCode(),4
org.apache.commons.collections4.keyvalue.TiedMapEntry.setValue(Object),2
org.apache.commons.collections4.properties.AbstractPropertiesFactory.load(InputStream),2
"org.apache.commons.collections4.properties.AbstractPropertiesFactory.load(InputStream,PropertyFormat)",3
"org.apache.commons.collections4.properties.OrderedProperties.compute(Object,BiFunction)",2
"org.apache.commons.collections4.properties.OrderedProperties.computeIfAbsent(Object,Function)",2
"org.apache.commons.collections4.properties.OrderedProperties.put(Object,Object)",2
"org.apache.commons.collections4.properties.OrderedProperties.putIfAbsent(Object,Object)",2
org.apache.commons.collections4.properties.OrderedProperties.remove(Object),2
"org.apache.commons.collections4.properties.OrderedProperties.remove(Object,Object)",2
org.apache.commons.collections4.properties.OrderedProperties.toString(),21
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.asMap(),2
"org.apache.commons.collections4.multimap.AbstractMultiValuedMap.containsMapping(Object,Object)",3
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.doReadObject(ObjectInputStream),3
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.doWriteObject(ObjectOutputStream),3
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.equals(Object),3
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keys(),2
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.mapIterator(),2
"org.apache.commons.collections4.multimap.AbstractMultiValuedMap.put(Object,Object)",3
"org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(Object,Iterable)",6
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(Map),2
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.putAll(MultiValuedMap),2
"org.apache.commons.collections4.multimap.AbstractMultiValuedMap.removeMapping(Object,Object)",3
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.size(),2
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.values(),2
com.fasterxml.jackson.core.JsonParser.currentValue(),2
com.fasterxml.jackson.core.JsonParser.assignCurrentValue(Object),2
"com.fasterxml.jackson.core.JsonParser.configure(Feature,boolean)",2
com.fasterxml.jackson.core.JsonParser.nextFieldName(SerializableString),3
com.fasterxml.jackson.core.JsonParser.nextFieldName(),2
com.fasterxml.jackson.core.JsonParser.nextTextValue(),2
com.fasterxml.jackson.core.JsonParser.nextIntValue(int),2
com.fasterxml.jackson.core.JsonParser.nextLongValue(long),2
com.fasterxml.jackson.core.JsonParser.nextBooleanValue(),3
com.fasterxml.jackson.core.JsonParser.isExpectedStartArrayToken(),2
com.fasterxml.jackson.core.JsonParser.isExpectedStartObjectToken(),2
com.fasterxml.jackson.core.JsonParser.isExpectedNumberIntToken(),2
com.fasterxml.jackson.core.JsonParser.getText(Writer),2
com.fasterxml.jackson.core.JsonParser.getByteValue(),3
com.fasterxml.jackson.core.JsonParser.getShortValue(),3
com.fasterxml.jackson.core.JsonParser.getBooleanValue(),3
com.fasterxml.jackson.core.JsonParser._codec(),2
"com.fasterxml.jackson.core.JsonParser._constructReadException(String,Throwable)",2
"com.fasterxml.jackson.core.JsonParser._constructReadException(String,JsonLocation)",2
com.fasterxml.jackson.core.Base64Variant.withReadPadding(PaddingReadBehaviour),2
com.fasterxml.jackson.core.Base64Variant.withWritePadding(boolean),2
com.fasterxml.jackson.core.Base64Variant.readResolve(),5
com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(char),2
com.fasterxml.jackson.core.Base64Variant.usesPaddingChar(int),2
com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(char),2
com.fasterxml.jackson.core.Base64Variant.decodeBase64Char(int),2
com.fasterxml.jackson.core.Base64Variant.decodeBase64Byte(byte),2
"com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,char[],int)",4
"com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(StringBuilder,int,int)",4
"com.fasterxml.jackson.core.Base64Variant.encodeBase64Partial(int,int,byte[],int)",4
"com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean)",36
"com.fasterxml.jackson.core.Base64Variant.encode(byte[],boolean,String)",36
com.fasterxml.jackson.core.Base64Variant.equals(Object),9
"com.fasterxml.jackson.core.Base64Variant._reportInvalidBase64(char,int,String)",10
com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.includeElement(int),9
com.fasterxml.jackson.core.filter.JsonPointerBasedFilter.includeProperty(String),3
com.fasterxml.jackson.core.filter.TokenFilter.toString(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.currentTokenId(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasCurrentToken(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasTokenId(int),4
com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasToken(JsonToken),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.isExpectedStartArrayToken(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.isExpectedStartObjectToken(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.getCurrentName(),5
com.fasterxml.jackson.core.filter.FilteringParserDelegate.currentName(),5
com.fasterxml.jackson.core.filter.FilteringParserDelegate.clearCurrentToken(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate._verifyAllowedMatches(),3
com.fasterxml.jackson.core.filter.FilteringParserDelegate.nextValue(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.skipChildren(),17
com.fasterxml.jackson.core.filter.FilteringParserDelegate.getText(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.hasTextCharacters(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.getTextCharacters(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.getTextLength(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.getTextOffset(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsString(),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate.getValueAsString(String),2
com.fasterxml.jackson.core.filter.FilteringParserDelegate._filterContext(),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeStartArray(),11
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeStartArray(int),11
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeStartArray(Object),11
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeStartArray(Object,int)",11
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeEndArray(),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeStartObject(),11
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeStartObject(Object),11
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeStartObject(Object,int)",7
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeEndObject(),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeFieldName(String),4
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeFieldName(SerializableString),4
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeString(String),6
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeString(char[],int,int)",6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeString(SerializableString),6
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeString(Reader,int)",6
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawUTF8String(byte[],int,int)",2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeUTF8String(byte[],int,int)",2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRaw(String),2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRaw(String,int,int)",2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRaw(SerializableString),2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRaw(char[],int,int)",2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRaw(char),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(String),2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(String,int,int)",2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeRawValue(char[],int,int)",2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeBinary(Base64Variant,byte[],int,int)",2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeBinary(Base64Variant,InputStream,int)",2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(short),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(int),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(long),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(BigInteger),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(double),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(float),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(BigDecimal),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(String),6
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNumber(char[],int,int)",6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeBoolean(boolean),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeNull(),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeOmittedField(String),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeObjectId(Object),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeObjectRef(Object),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.writeTypeId(Object),2
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate._checkParentPath(boolean),18
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate._checkPropertyParentPath(),6
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate._checkBinaryWrite(),4
com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate._checkRawValueWrite(),4
"com.fasterxml.jackson.core.filter.TokenFilterContext.createChildArrayContext(TokenFilter,boolean)",2
"com.fasterxml.jackson.core.filter.TokenFilterContext.createChildObjectContext(TokenFilter,boolean)",2
com.fasterxml.jackson.core.filter.TokenFilterContext.checkValue(TokenFilter),3
com.fasterxml.jackson.core.filter.TokenFilterContext.ensureFieldNameWritten(JsonGenerator),2
com.fasterxml.jackson.core.filter.TokenFilterContext.writePath(JsonGenerator),12
com.fasterxml.jackson.core.filter.TokenFilterContext._writePath(JsonGenerator),14
com.fasterxml.jackson.core.filter.TokenFilterContext.closeArray(JsonGenerator),18
com.fasterxml.jackson.core.filter.TokenFilterContext.closeObject(JsonGenerator),18
com.fasterxml.jackson.core.filter.TokenFilterContext.skipParentChecks(),2
com.fasterxml.jackson.core.filter.TokenFilterContext.hasCurrentName(),2
com.fasterxml.jackson.core.filter.TokenFilterContext.nextTokenToRead(),5
com.fasterxml.jackson.core.filter.TokenFilterContext.findChildOf(TokenFilterContext),5
com.fasterxml.jackson.core.filter.TokenFilterContext.appendDesc(StringBuilder),8
com.fasterxml.jackson.core.StreamWriteFeature.collectDefaults(),3
"com.fasterxml.jackson.core.TokenStreamFactory._checkRangeBoundsForByteArray(byte[],int,int)",4
"com.fasterxml.jackson.core.TokenStreamFactory._checkRangeBoundsForCharArray(char[],int,int)",4
com.fasterxml.jackson.core.Version.isUnknownVersion(),2
com.fasterxml.jackson.core.Version.isSnapshot(),3
com.fasterxml.jackson.core.Version.toString(),2
com.fasterxml.jackson.core.Version.equals(Object),10
com.fasterxml.jackson.core.Version.compareTo(Version),10
com.fasterxml.jackson.core.base.GeneratorBase.assignCurrentValue(Object),2
com.fasterxml.jackson.core.base.GeneratorBase.isEnabled(Feature),2
com.fasterxml.jackson.core.base.GeneratorBase.enable(Feature),6
com.fasterxml.jackson.core.base.GeneratorBase.disable(Feature),5
com.fasterxml.jackson.core.base.GeneratorBase.setFeatureMask(int),2
"com.fasterxml.jackson.core.base.GeneratorBase.overrideStdFeatures(int,int)",2
"com.fasterxml.jackson.core.base.GeneratorBase._checkStdFeatureChanges(int,int)",13
com.fasterxml.jackson.core.base.GeneratorBase.useDefaultPrettyPrinter(),2
com.fasterxml.jackson.core.base.GeneratorBase.writeStartObject(Object),2
com.fasterxml.jackson.core.base.GeneratorBase.writeObject(Object),3
com.fasterxml.jackson.core.base.GeneratorBase.writeTree(TreeNode),3
com.fasterxml.jackson.core.base.GeneratorBase.close(),3
com.fasterxml.jackson.core.base.GeneratorBase._asString(BigDecimal),4
com.fasterxml.jackson.core.base.ParserMinimalBase.currentTokenId(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.getCurrentTokenId(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.hasCurrentToken(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.hasTokenId(int),4
com.fasterxml.jackson.core.base.ParserMinimalBase.hasToken(JsonToken),2
com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartArrayToken(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedStartObjectToken(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.isExpectedNumberIntToken(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.nextValue(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.skipChildren(),21
com.fasterxml.jackson.core.base.ParserMinimalBase.clearCurrentToken(),2
com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsBoolean(boolean),12
com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(),3
com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsInt(int),11
com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(),3
com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsLong(long),10
com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsDouble(double),9
com.fasterxml.jackson.core.base.ParserMinimalBase.getValueAsString(String),6
"com.fasterxml.jackson.core.base.ParserMinimalBase._decodeBase64(String,ByteArrayBuilder,Base64Variant)",2
com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOFInValue(JsonToken),4
"com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(int,String)",4
"com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedNumberChar(int,String)",2
com.fasterxml.jackson.core.base.ParserMinimalBase._updateToken(JsonToken),2
com.fasterxml.jackson.core.base.ParserMinimalBase._nullSafeUpdateToken(JsonToken),3
com.fasterxml.jackson.core.base.ParserBase.enable(Feature),3
com.fasterxml.jackson.core.base.ParserBase.disable(Feature),2
com.fasterxml.jackson.core.base.ParserBase.setFeatureMask(int),2
"com.fasterxml.jackson.core.base.ParserBase.overrideStdFeatures(int,int)",2
"com.fasterxml.jackson.core.base.ParserBase._checkStdFeatureChanges(int,int)",4
com.fasterxml.jackson.core.base.ParserBase.getCurrentName(),5
com.fasterxml.jackson.core.base.ParserBase.overrideCurrentName(String),6
com.fasterxml.jackson.core.base.ParserBase.close(),3
"com.fasterxml.jackson.core.util.VersionUtil.parseVersion(String,String,String)",10
com.fasterxml.jackson.core.util.ThreadLocalBufferManager.removeSoftRefsClearedByGc(),2
com.fasterxml.jackson.core.StreamReadConstraints.overrideDefaultStreamReadConstraints(StreamReadConstraints),2
com.fasterxml.jackson.core.StreamReadConstraints.hasMaxDocumentLength(),2
com.fasterxml.jackson.core.StreamReadConstraints.hasMaxTokenCount(),2
com.fasterxml.jackson.core.StreamReadConstraints.validateNestingDepth(int),2
com.fasterxml.jackson.core.StreamReadConstraints.validateDocumentLength(long),3
com.fasterxml.jackson.core.StreamReadConstraints.validateTokenCount(long),2
com.fasterxml.jackson.core.StreamReadConstraints.validateFPLength(int),2
com.fasterxml.jackson.core.StreamReadConstraints.validateIntegerLength(int),2
com.fasterxml.jackson.core.StreamReadConstraints.validateStringLength(int),2
com.fasterxml.jackson.core.StreamReadConstraints.validateNameLength(int),2
com.fasterxml.jackson.core.StreamReadConstraints.validateBigIntegerScale(int),2
com.fasterxml.jackson.core.JsonFactory._checkInvalidCopy(Class),2
com.fasterxml.jackson.core.JsonFactory.canUseSchema(FormatSchema),4
com.fasterxml.jackson.core.JsonFactory.hasFormat(InputAccessor),2
com.fasterxml.jackson.core.JsonFactory.setStreamReadConstraints(StreamReadConstraints),2
com.fasterxml.jackson.core.JsonFactory.isEnabled(StreamReadFeature),2
com.fasterxml.jackson.core.JsonFactory.isEnabled(StreamWriteFeature),2
com.fasterxml.jackson.core.JsonFactory.setRootValueSeparator(String),2
com.fasterxml.jackson.core.JsonFactory.getRootValueSeparator(),2
com.fasterxml.jackson.core.JsonFactory.createParser(byte[]),3
"com.fasterxml.jackson.core.JsonFactory.createParser(byte[],int,int)",3
com.fasterxml.jackson.core.JsonFactory.createParser(String),4
"com.fasterxml.jackson.core.JsonFactory.createParser(char[],int,int)",2
"com.fasterxml.jackson.core.JsonFactory.createGenerator(OutputStream,JsonEncoding)",2
"com.fasterxml.jackson.core.JsonFactory.createGenerator(File,JsonEncoding)",2
"com.fasterxml.jackson.core.JsonFactory._createParser(InputStream,IOContext)",25
"com.fasterxml.jackson.core.JsonFactory._createGenerator(Writer,IOContext)",8
"com.fasterxml.jackson.core.JsonFactory._createUTF8Generator(OutputStream,IOContext)",8
"com.fasterxml.jackson.core.JsonFactory._createWriter(OutputStream,JsonEncoding,IOContext)",2
"com.fasterxml.jackson.core.JsonFactory._decorate(InputStream,IOContext)",3
"com.fasterxml.jackson.core.JsonFactory._decorate(Reader,IOContext)",3
"com.fasterxml.jackson.core.JsonFactory._decorate(DataInput,IOContext)",3
"com.fasterxml.jackson.core.JsonFactory._decorate(OutputStream,IOContext)",3
"com.fasterxml.jackson.core.JsonFactory._decorate(Writer,IOContext)",3
com.fasterxml.jackson.core.JsonFactory._decorate(JsonGenerator),3
com.fasterxml.jackson.core.JsonFactory._getRecyclerPool(),2
"com.fasterxml.jackson.core.JsonFactory._createContext(ContentReference,boolean)",16
com.fasterxml.jackson.core.JsonFactory._createContentReference(Object),2
"com.fasterxml.jackson.core.JsonFactory._createContentReference(Object,int,int)",2
com.fasterxml.jackson.core.JsonFactory._requireJSONFactory(String),2
com.fasterxml.jackson.core.JsonFactory._isJSONFactory(),2
com.fasterxml.jackson.core.io.UTF32Reader.close(),2
com.fasterxml.jackson.core.io.UTF32Reader.read(),4
com.fasterxml.jackson.core.io.UTF32Reader.loadMore(int),24
com.fasterxml.jackson.core.io.UTF32Reader.freeBuffers(),3
com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(int),2
"com.fasterxml.jackson.core.io.CharTypes.get7BitOutputEscapes(int,boolean)",3
"com.fasterxml.jackson.core.io.CharTypes.appendQuoted(StringBuilder,String)",5
com.fasterxml.jackson.core.io.CharTypes.copyHexChars(boolean),2
com.fasterxml.jackson.core.io.CharTypes.copyHexBytes(boolean),2
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.toDecimalString(double),6
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.toDecimal(double),35
"com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.toChars(long,int)",14
"com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.toChars1(int,int,int,int)",4
"com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.toChars2(int,int,int,int)",2
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.lowDigits(int),2
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.append8Digits(int),2
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.removeTrailingZeroes(),4
com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal.exponent(int),6
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.toDecimalString(float),6
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.toDecimal(float),35
"com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.toChars(int,int)",14
"com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.toChars1(int,int,int)",4
"com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.toChars2(int,int,int)",2
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.append8Digits(int),2
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.removeTrailingZeroes(),4
com.fasterxml.jackson.core.io.schubfach.FloatToDecimal.exponent(int),4
"com.fasterxml.jackson.core.io.JsonStringEncoder.quoteAsString(CharSequence,StringBuilder)",43
"com.fasterxml.jackson.core.io.JsonStringEncoder._appendByte(int,int,ByteArrayBuilder,int)",3
com.fasterxml.jackson.core.io.SerializedString.asQuotedChars(),2
com.fasterxml.jackson.core.io.SerializedString.asQuotedUTF8(),2
com.fasterxml.jackson.core.io.SerializedString.asUnquotedUTF8(),2
"com.fasterxml.jackson.core.io.SerializedString.appendQuoted(char[],int)",4
"com.fasterxml.jackson.core.io.SerializedString.appendQuotedUTF8(byte[],int)",4
"com.fasterxml.jackson.core.io.SerializedString.appendUnquoted(char[],int)",2
"com.fasterxml.jackson.core.io.SerializedString.appendUnquotedUTF8(byte[],int)",4
com.fasterxml.jackson.core.io.SerializedString.writeQuotedUTF8(OutputStream),2
com.fasterxml.jackson.core.io.SerializedString.writeUnquotedUTF8(OutputStream),2
com.fasterxml.jackson.core.io.SerializedString.putQuotedUTF8(ByteBuffer),4
com.fasterxml.jackson.core.io.SerializedString.putUnquotedUTF8(ByteBuffer),4
com.fasterxml.jackson.core.io.SerializedString.equals(Object),4
"com.fasterxml.jackson.core.io.NumberOutput.outputInt(int,char[],int)",13
"com.fasterxml.jackson.core.io.NumberOutput.outputInt(int,byte[],int)",13
"com.fasterxml.jackson.core.io.NumberOutput.outputLong(long,char[],int)",7
"com.fasterxml.jackson.core.io.NumberOutput.outputLong(long,byte[],int)",7
com.fasterxml.jackson.core.io.NumberOutput.toString(int),4
com.fasterxml.jackson.core.io.NumberOutput.toString(long),3
"com.fasterxml.jackson.core.io.NumberOutput.toString(double,boolean)",2
"com.fasterxml.jackson.core.io.NumberOutput.toString(float,boolean)",2
"com.fasterxml.jackson.core.io.NumberOutput._outputUptoBillion(int,char[],int)",3
"com.fasterxml.jackson.core.io.NumberOutput._outputUptoBillion(int,byte[],int)",3
"com.fasterxml.jackson.core.io.NumberOutput._outputUptoMillion(char[],int,int,int)",3
"com.fasterxml.jackson.core.io.NumberOutput._outputUptoMillion(byte[],int,int,int)",3
"com.fasterxml.jackson.core.io.NumberOutput._leading3(int,char[],int)",3
"com.fasterxml.jackson.core.io.NumberOutput._leading3(int,byte[],int)",3
"com.fasterxml.jackson.core.io.NumberOutput._outputSmallestL(byte[],int)",2
"com.fasterxml.jackson.core.io.NumberOutput._outputSmallestI(byte[],int)",2
com.fasterxml.jackson.core.io.BigDecimalParser.parse(String),7
"com.fasterxml.jackson.core.io.BigDecimalParser.parse(char[],int,int)",6
com.fasterxml.jackson.core.io.BigDecimalParser.parseWithFastParser(String),2
"com.fasterxml.jackson.core.io.BigDecimalParser.parseWithFastParser(char[],int,int)",2
"com.fasterxml.jackson.core.io.BigDecimalParser._parseFailure(Exception,String)",2
"com.fasterxml.jackson.core.io.BigDecimalParser._parseFailure(Exception,char[],int,int)",2
com.fasterxml.jackson.core.io.IOContext.releaseReadIOBuffer(byte[]),2
com.fasterxml.jackson.core.io.IOContext.releaseWriteEncodingBuffer(byte[]),2
com.fasterxml.jackson.core.io.IOContext.releaseBase64Buffer(byte[]),2
com.fasterxml.jackson.core.io.IOContext.releaseTokenBuffer(char[]),2
com.fasterxml.jackson.core.io.IOContext.releaseConcatBuffer(char[]),2
com.fasterxml.jackson.core.io.IOContext.releaseNameCopyBuffer(char[]),2
"com.fasterxml.jackson.core.io.IOContext._verifyRelease(byte[],byte[])",3
"com.fasterxml.jackson.core.io.IOContext._verifyRelease(char[],char[])",3
com.fasterxml.jackson.core.io.IOContext.close(),3
"com.fasterxml.jackson.core.io.ContentReference.rawReference(boolean,Object)",2
"com.fasterxml.jackson.core.io.ContentReference._append(StringBuilder,String)",4
"com.fasterxml.jackson.core.io.ContentReference._appendEscaped(StringBuilder,int)",3
com.fasterxml.jackson.core.io.ContentReference.equals(Object),13
com.fasterxml.jackson.databind.JsonMappingException._parser(DeserializationContext),2
com.fasterxml.jackson.databind.JsonMappingException._generator(SerializerProvider),2
"com.fasterxml.jackson.databind.JsonMappingException.wrapWithPath(Throwable,Reference)",10
com.fasterxml.jackson.databind.JsonMappingException.getPath(),2
com.fasterxml.jackson.databind.JsonMappingException.prependPath(Reference),4
com.fasterxml.jackson.databind.JsonMappingException._buildMessage(),3
com.fasterxml.jackson.databind.MapperFeature.collectLongDefaults(),3
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withAdditionalDeserializers(Deserializers),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withAdditionalKeyDeserializers(KeyDeserializers),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withDeserializerModifier(BeanDeserializerModifier),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withAbstractTypeResolver(AbstractTypeResolver),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.withValueInstantiators(ValueInstantiators),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.hasDeserializers(),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.hasKeyDeserializers(),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.hasDeserializerModifiers(),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.hasAbstractTypeResolvers(),2
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.hasValueInstantiators(),2
"com.fasterxml.jackson.databind.cfg.DatatypeFeatures._with(int,int,int,int)",5
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.with(DatatypeFeature),3
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.withFeatures(DatatypeFeature[]),4
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.without(DatatypeFeature),3
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.withoutFeatures(DatatypeFeature[]),4
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.isEnabled(DatatypeFeature),3
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.isExplicitlySet(DatatypeFeature),3
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.isExplicitlyEnabled(DatatypeFeature),3
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.isExplicitlyDisabled(DatatypeFeature),3
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.getExplicitState(DatatypeFeature),5
com.fasterxml.jackson.databind.cfg.CoercionConfigs.copy(),9
com.fasterxml.jackson.databind.cfg.CoercionConfigs._copy(MutableCoercionConfig),2
com.fasterxml.jackson.databind.cfg.CoercionConfigs.findOrCreateCoercion(LogicalType),4
com.fasterxml.jackson.databind.cfg.CoercionConfigs.findOrCreateCoercion(Class),4
com.fasterxml.jackson.databind.cfg.CoercionConfigs._isScalarType(LogicalType),5
com.fasterxml.jackson.databind.cfg.ConstructorDetector.shouldIntrospectorImplicitConstructors(Class),5
com.fasterxml.jackson.databind.cfg.ConfigOverrides.copy(),3
com.fasterxml.jackson.databind.cfg.ConfigOverrides.findOverride(Class),2
com.fasterxml.jackson.databind.cfg.ConfigOverrides.findOrCreateOverride(Class),4
com.fasterxml.jackson.databind.cfg.ConfigOverrides.findFormatDefaults(Class),8
com.fasterxml.jackson.databind.cfg.BaseSettings.withClassIntrospector(ClassIntrospector),2
com.fasterxml.jackson.databind.cfg.BaseSettings.withAnnotationIntrospector(AnnotationIntrospector),2
com.fasterxml.jackson.databind.cfg.BaseSettings.withPropertyNamingStrategy(PropertyNamingStrategy),2
com.fasterxml.jackson.databind.cfg.BaseSettings.withEnumNamingStrategy(EnumNamingStrategy),2
com.fasterxml.jackson.databind.cfg.BaseSettings.withAccessorNaming(Provider),2
com.fasterxml.jackson.databind.cfg.BaseSettings.withTypeFactory(TypeFactory),2
com.fasterxml.jackson.databind.cfg.BaseSettings.withTypeResolverBuilder(TypeResolverBuilder),2
com.fasterxml.jackson.databind.cfg.BaseSettings.withDateFormat(DateFormat),4
com.fasterxml.jackson.databind.cfg.BaseSettings.withHandlerInstantiator(HandlerInstantiator),2
com.fasterxml.jackson.databind.cfg.BaseSettings.with(Locale),2
com.fasterxml.jackson.databind.cfg.BaseSettings.with(TimeZone),3
com.fasterxml.jackson.databind.cfg.BaseSettings.with(Base64Variant),2
com.fasterxml.jackson.databind.cfg.BaseSettings.with(PolymorphicTypeValidator),2
com.fasterxml.jackson.databind.cfg.BaseSettings.with(CacheProvider),2
com.fasterxml.jackson.databind.cfg.BaseSettings.getTimeZone(),2
com.fasterxml.jackson.databind.cfg.BaseSettings.hasExplicitTimeZone(),2
"com.fasterxml.jackson.databind.cfg.BaseSettings._force(DateFormat,TimeZone)",2
"com.fasterxml.jackson.databind.cfg.MapperConfigBase.with(DatatypeFeature,boolean)",2
com.fasterxml.jackson.databind.cfg.MapperConfigBase.withRootName(String),2
com.fasterxml.jackson.databind.cfg.MapperConfigBase.getRootName(),2
com.fasterxml.jackson.databind.cfg.MapperConfigBase.getConfigOverride(Class),2
com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyInclusion(Class),2
"com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultInclusion(Class,Class)",2
com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultPropertyIgnorals(Class),3
com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker(),33
"com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultVisibilityChecker(Class,AnnotatedClass)",16
com.fasterxml.jackson.databind.cfg.MapperConfigBase.getDefaultMergeable(Class),3
com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName(JavaType),2
com.fasterxml.jackson.databind.cfg.MapperConfigBase.findRootName(Class),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(SerializationFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(SerializationFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(DeserializationFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(DeserializationFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(DatatypeFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(DatatypeFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(StreamReadFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(StreamReadFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.enable(StreamWriteFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.disable(StreamWriteFeature[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules(Module[]),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.addModules(Iterable),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.findModules(ClassLoader),2
com.fasterxml.jackson.databind.cfg.MapperBuilder.accessorNaming(Provider),2
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.withAdditionalSerializers(Serializers),2
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.withAdditionalKeySerializers(Serializers),2
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.withSerializerModifier(BeanSerializerModifier),2
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.hasSerializers(),2
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.hasKeySerializers(),2
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.hasSerializerModifiers(),2
com.fasterxml.jackson.databind.cfg.MapperConfig.collectFeatureDefaults(Class),3
com.fasterxml.jackson.databind.cfg.MapperConfig.hasMapperFeatures(int),2
com.fasterxml.jackson.databind.cfg.MapperConfig.getAnnotationIntrospector(),2
com.fasterxml.jackson.databind.cfg.MapperConfig.getPolymorphicTypeValidator(),3
"com.fasterxml.jackson.databind.cfg.MapperConfig.getDefaultPropertyInclusion(Class,Value)",2
"com.fasterxml.jackson.databind.cfg.MapperConfig.typeResolverBuilderInstance(Annotated,Class)",3
"com.fasterxml.jackson.databind.cfg.MapperConfig.typeIdResolverInstance(Annotated,Class)",3
com.fasterxml.jackson.databind.DatabindContext.constructType(Type),2
"com.fasterxml.jackson.databind.DatabindContext.resolveSubType(JavaType,String)",8
"com.fasterxml.jackson.databind.DatabindContext.resolveAndValidateSubType(JavaType,String,PolymorphicTypeValidator)",10
"com.fasterxml.jackson.databind.DatabindContext._resolveAndValidateGeneric(JavaType,String,PolymorphicTypeValidator,int)",5
"com.fasterxml.jackson.databind.DatabindContext.objectIdGeneratorInstance(Annotated,ObjectIdInfo)",4
"com.fasterxml.jackson.databind.DatabindContext.objectIdResolverInstance(Annotated,ObjectIdInfo)",4
"com.fasterxml.jackson.databind.DatabindContext.converterInstance(Annotated,Object)",10
com.fasterxml.jackson.databind.DatabindContext._desc(String),2
"com.fasterxml.jackson.databind.JsonSerializer.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",2
"com.fasterxml.jackson.databind.type.LogicalType.fromClass(Class,LogicalType)",7
"com.fasterxml.jackson.databind.type.IterationType.upgradeFrom(JavaType,JavaType)",2
com.fasterxml.jackson.databind.type.IterationType.withContentType(JavaType),2
com.fasterxml.jackson.databind.type.IterationType.withTypeHandler(Object),2
com.fasterxml.jackson.databind.type.IterationType.withContentTypeHandler(Object),2
com.fasterxml.jackson.databind.type.IterationType.withValueHandler(Object),2
com.fasterxml.jackson.databind.type.IterationType.withContentValueHandler(Object),2
com.fasterxml.jackson.databind.type.IterationType.withStaticTyping(),2
com.fasterxml.jackson.databind.type.IterationType.buildCanonicalName(),3
com.fasterxml.jackson.databind.type.TypeFactory.withModifier(TypeModifier),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.isTypeId(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findObjectIdInfo(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findFormat(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyDefaultValue(Annotated),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyDescription(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyIndex(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findImplicitPropertyName(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyAliases(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPropertyAccess(Annotated),5
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.resolveSetterConflict(MapperConfig,AnnotatedMethod,AnnotatedMethod)",2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSerializationPropertyOrder(AnnotatedClass),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSerializationSortAlphabetically(Annotated),2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasAsKey(MapperConfig,Annotated)",2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasAsValue(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasAnyGetter(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findDefaultEnumValue(Class),2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findDefaultEnumValue(AnnotatedClass,Enum[])",2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findEnumValue(Enum),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasAsValueAnnotation(AnnotatedMethod),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasAnyGetterAnnotation(AnnotatedMethod),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findDeserializer(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findKeyDeserializer(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findContentDeserializer(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findDeserializationConverter(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findDeserializationContentConverter(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findValueInstantiator(AnnotatedClass),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPOJOBuilder(AnnotatedClass),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findPOJOBuilderConfig(AnnotatedClass),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasCreatorAnnotation(Annotated),3
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findCreatorBinding(Annotated),2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findCreatorAnnotation(MapperConfig,Annotated)",2
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findDefaultCreator(MapperConfig,AnnotatedClass,List,List)",2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasAnySetter(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findSetterInfo(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.findMergeInfo(Annotated),2
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.hasAnySetterAnnotation(AnnotatedMethod),3
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair._isExplicitClassOrOb(Object,Class)",5
"com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair._explicitClassOrOb(Object,Class)",5
"com.fasterxml.jackson.databind.introspect.AnnotatedWithParams.addOrOverrideParam(int,Annotation)",2
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams.getParameterAnnotations(int),4
"com.fasterxml.jackson.databind.introspect.PotentialCreators.setPropertiesBased(MapperConfig,PotentialCreator,String)",2
com.fasterxml.jackson.databind.introspect.PotentialCreators.addExplicitDelegating(PotentialCreator),2
com.fasterxml.jackson.databind.introspect.PotentialCreators.hasDelegating(),3
com.fasterxml.jackson.databind.introspect.PotentialCreators.hasPropertiesBased(),2
com.fasterxml.jackson.databind.introspect.PotentialCreators.hasPropertiesBasedOrDelegating(),4
com.fasterxml.jackson.databind.introspect.PotentialCreators.getExplicitDelegating(),2
com.fasterxml.jackson.databind.introspect.PotentialCreators.getImplicitDelegatingFactories(),2
com.fasterxml.jackson.databind.introspect.PotentialCreators.getImplicitDelegatingConstructors(),2
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.getRawParameterType(int),2
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.getParameterType(int),2
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.getGenericParameterType(int),2
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.toString(),2
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.equals(Object),3
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.readResolve(),12
com.fasterxml.jackson.databind.introspect.AnnotatedParameter.withAnnotations(AnnotationMap),2
com.fasterxml.jackson.databind.introspect.AnnotatedParameter.equals(Object),5
com.fasterxml.jackson.databind.introspect.MemberKey.equals(Object),9
"com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy.findNameForIsGetter(AnnotatedMethod,String)",8
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._booleanType(JavaType),8
"com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy.findNameForRegularGetter(AnnotatedMethod,String)",10
"com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy.findNameForMutator(AnnotatedMethod,String)",4
"com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy.legacyManglePropertyName(String,int)",12
"com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy.stdManglePropertyName(String,int)",10
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._isCglibGetCallbacks(AnnotatedMethod),6
"com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector._addMemberMethods(TypeResolutionContext,Class,Map,Class)",26
"com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector._addMethodMixIns(TypeResolutionContext,Class,Map,Class)",6
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldDeserialize(),2
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.couldSerialize(),2
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getAccessor(),2
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getMutator(),3
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.getNonConstructorMutator(),2
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.findReferenceName(),2
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.setLocalDefinitions(Map),4
"com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.addLocalDefinition(Class,Class)",2
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.copy(),4
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.findMixInClassFor(Class),6
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.localSize(),2
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.hasMixIns(),4
"com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyFormat(MapperConfig,Class)",12
"com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findPropertyInclusion(MapperConfig,Class)",4
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.findAliases(MapperConfig),7
com.fasterxml.jackson.databind.introspect.AnnotatedMember.getAnnotation(Class),2
com.fasterxml.jackson.databind.introspect.AnnotatedMember.hasAnnotation(Class),2
com.fasterxml.jackson.databind.introspect.AnnotatedMember.hasOneOf(Class[]),2
com.fasterxml.jackson.databind.introspect.AnnotatedMember.annotations(),2
com.fasterxml.jackson.databind.introspect.AnnotatedMember.fixAccess(boolean),2
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.resolve(MapperConfig,JavaType,MixInResolver)",3
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.resolveWithoutSuperTypes(MapperConfig,JavaType,MixInResolver)",3
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.resolveWithoutSuperTypes(MapperConfig,Class,MixInResolver)",3
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.resolveFully(),3
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._addSuperTypes(JavaType,List,boolean)",11
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._addSuperInterfaces(JavaType,List,boolean)",7
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._contains(List,Class)",4
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._addClassMixIns(AnnotationCollector,Class,Class)",3
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._addAnnotationsIfNotPresent(AnnotationCollector,Annotation[])",5
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._addFromBundleIfNotPresent(AnnotationCollector,Annotation)",6
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember.equals(Object),5
com.fasterxml.jackson.databind.introspect.AnnotationMap.get(Class),2
com.fasterxml.jackson.databind.introspect.AnnotationMap.has(Class),2
com.fasterxml.jackson.databind.introspect.AnnotationMap.hasOneOf(Class[]),5
com.fasterxml.jackson.databind.introspect.AnnotationMap.annotations(),3
"com.fasterxml.jackson.databind.introspect.AnnotationMap.merge(AnnotationMap,AnnotationMap)",10
com.fasterxml.jackson.databind.introspect.AnnotationMap.size(),2
com.fasterxml.jackson.databind.introspect.AnnotationMap.addIfNotPresent(Annotation),3
com.fasterxml.jackson.databind.introspect.AnnotationMap.toString(),2
com.fasterxml.jackson.databind.introspect.AnnotationMap._add(Annotation),6
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._properties(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.removeProperty(String),4
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.addProperty(BeanPropertyDefinition),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.hasProperty(PropertyName),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findProperty(PropertyName),4
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findJsonKeyAccessor(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findJsonValueAccessor(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.getIgnoredPropertyNames(),4
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findAnySetterAccessor(),8
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findInjectables(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.getConstructorsWithMode(),4
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.getPotentialCreators(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.instantiateBean(boolean),7
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findExpectedFormat(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findDefaultViews(),7
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findSerializationConverter(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findPropertyInclusion(Value),4
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findAnyGetter(),6
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.getFactoryMethods(),9
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.getFactoryMethodsWithMode(),9
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.isFactoryMethod(AnnotatedMethod),24
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findFactoryMethodMetadata(AnnotatedMethod),14
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findPOJOBuilder(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findPOJOBuilderConfig(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findDeserializationConverter(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.findClassDescription(),2
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._createConverter(Object),10
com.fasterxml.jackson.databind.introspect.ObjectIdInfo.withAlwaysAsId(boolean),2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.withSimpleName(String),2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.compareTo(POJOPropertyBuilder),4
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getName(),2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getWrapperName(),3
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isExplicitlyIncluded(),5
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isExplicitlyNamed(),5
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getMetadata(),12
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getPrimaryType(),10
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.couldDeserialize(),5
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getGetterUnchecked(),2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getSetter(),8
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getSetterUnchecked(),2
"com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._selectSetter(AnnotatedMethod,AnnotatedMethod)",10
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getFieldUnchecked(),2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getConstructorParameters(),2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getPrimaryMember(),3
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.getPrimaryMemberUnchecked(),8
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._getterPriority(AnnotatedMethod),7
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._setterPriority(AnnotatedMethod),3
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.findReferenceType(),4
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.isTypeId(),3
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.findInclusion(),4
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.findAliases(),3
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.findAccess(),4
"com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.removeNonVisible(boolean,POJOPropertiesCollector)",24
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.mergeAnnotations(boolean),7
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._getAllAnnotations(Linked),2
"com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._applyAnnotations(Linked,AnnotationMap)",2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._anyExplicits(Linked),6
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._anyExplicitNames(Linked),6
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.anyVisible(),5
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._anyVisible(Linked),4
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.anyIgnorals(),5
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._anyIgnorals(Linked),4
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.anyExplicitsWithoutIgnoral(),5
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._anyExplicitsWithoutIgnoral(Linked),8
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._anyExplicitNamesWithoutIgnoral(Linked),8
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.findExplicitNames(),2
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.hasExplicitName(PropertyName),5
"com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._hasExplicitName(Linked,PropertyName)",6
"com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._explode(Collection,Map,Linked)",55
"com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._findExplicitNames(Linked,Set)",5
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.fromMemberAnnotations(WithMember),25
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._rawTypeOf(AnnotatedMember),3
com.fasterxml.jackson.databind.introspect.CollectorBase.collectAnnotations(Annotation[]),3
"com.fasterxml.jackson.databind.introspect.CollectorBase.collectAnnotations(AnnotationCollector,Annotation[])",3
"com.fasterxml.jackson.databind.introspect.CollectorBase.collectFromBundle(AnnotationCollector,Annotation)",5
"com.fasterxml.jackson.databind.introspect.CollectorBase.collectDefaultAnnotations(AnnotationCollector,Annotation[])",4
"com.fasterxml.jackson.databind.introspect.CollectorBase.collectDefaultFromBundle(AnnotationCollector,Annotation)",5
com.fasterxml.jackson.databind.introspect.CollectorBase._emptyAnnotationMaps(int),3
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.size(),2
"com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.find(String,Class[])",2
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.find(Method),2
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap.iterator(),2
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getPotentialCreators(),2
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getInjectables(),2
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getJsonKeyAccessor(),8
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getJsonValueAccessor(),8
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getAnyGetterField(),6
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getAnyGetterMethod(),6
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getAnySetterField(),6
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getAnySetterMethod(),6
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getObjectIdInfo(),2
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getPropertyMap(),2
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.getFormatOverrides(),13
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._isDelegatingConstructor(PotentialCreator),6
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._collectCreators(List),7
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._removeNonVisibleCreators(List),3
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addExplicitlyAnnotatedCreators(PotentialCreators,List,Map,boolean)",11
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addCreatorsWithAnnotatedNames(PotentialCreators,List,PotentialCreator)",5
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._findCreatorsWithAnnotatedNames(List),8
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addImplicitConstructor(PotentialCreators,List,Map)",19
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addCreatorParams(Map,PotentialCreator,List)",41
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addMethods(Map),7
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addSetterMethod(Map,AnnotatedMethod,AnnotationIntrospector)",24
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._addInjectables(Map),6
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._doAddInjectable(Value,AnnotatedMember)",7
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._checkRenameByField(String),3
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._removeUnwantedProperties(Map),10
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._removeUnwantedAccessors(Map),3
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._collectIgnorals(String),4
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._renameProperties(Map),48
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._anyIndexed(Collection),4
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.reportProblem(String,Object[])",2
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._property(Map,PropertyName)",2
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._property(Map,String)",2
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._findNamingStrategy(),16
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._replaceCreatorProperty(List,POJOPropertyBuilder)",7
"com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector.collect(TypeResolutionContext,JavaType)",3
"com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector._findFields(TypeResolutionContext,JavaType,Map)",25
"com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector._addFieldMixIns(Class,Class,Map)",5
"com.fasterxml.jackson.databind.introspect.AnnotatedField.setValue(Object,Object)",3
com.fasterxml.jackson.databind.introspect.AnnotatedField.getValue(Object),3
com.fasterxml.jackson.databind.introspect.AnnotatedField.equals(Object),3
com.fasterxml.jackson.databind.introspect.AnnotatedField.readResolve(),12
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserialize(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserialize(JsonParser,DeserializationContext,Object)",2
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.isMatching(),2
"com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchesWrapper(String,String)",7
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.toString(),3
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isEnabled(Feature),2
"com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.configure(Feature,boolean)",2
"com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.addVirtualWrapping(Set,boolean)",10
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.currentName(),6
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.overrideCurrentName(String),3
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.close(),74
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isExpectedStartArrayToken(),6
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isExpectedNumberIntToken(),97
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.nextTextValue(),28
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._updateState(JsonToken),5
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getText(),4
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextCharacters(),2
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextLength(),2
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getText(Writer),2
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getBinaryValue(Base64Variant),16
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberType(),6
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberValue(),8
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getIntValue(),5
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getLongValue(),5
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getBigIntegerValue(),5
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getFloatValue(),3
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getDoubleValue(),3
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getDecimalValue(),3
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToInt(),6
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToLong(),5
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToBigInteger(),3
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToFloat(),4
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToDouble(),4
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToBigDecimal(),4
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._handleEOF(),3
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._getByteArrayBuilder(),2
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._nextToken(),5
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._skipEndElement(),5
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.initialize(),6
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.next(),3
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.skipEndElement(),2
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.repeatStartElement(),4
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.skipAttributes(),4
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._next(),30
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._collectUntilTag(),32
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._skipAndCollectTextUntilTag(),15
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._initStartElement(),3
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._checkXsiAttributes(),5
"com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._decodeElementName(String,String)",4
"com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._decodeAttributeName(String,String)",4
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._handleRepeatElement(),6
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._handleEndElement(),3
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._extractLocation(XMLStreamLocation2),2
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._stateDesc(int),8
"com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.updateProperties(DeserializationConfig,BeanDescription,List)",18
"com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.modifyDeserializer(DeserializationConfig,BeanDescription,JsonDeserializer)",4
"com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier._findSoleTextProp(DeserializationConfig,Iterator)",12
"com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.createContextual(DeserializationContext,BeanProperty)",44
com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer._configureParser(JsonParser),12
"com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.init(Id,TypeIdResolver)",2
com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.typeProperty(String),3
"com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.idResolver(MapperConfig,JavaType,PolymorphicTypeValidator,Collection,boolean,boolean)",4
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.setupModule(SetupContext),2
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findWrapperName(Annotated),6
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNameForSerialization(Annotated),3
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNameForDeserialization(Annotated),3
com.fasterxml.jackson.dataformat.xml.XmlFactory.readResolve(),17
com.fasterxml.jackson.dataformat.xml.XmlFactory.createParser(String),2
com.fasterxml.jackson.dataformat.xml.XmlFactory.createParser(XMLStreamReader),4
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(InputStream,IOContext)",4
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(Reader,IOContext)",4
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(char[],int,int,IOContext,boolean)",16
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(byte[],int,int,IOContext)",77
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createXmlWriter(IOContext,OutputStream)",4
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createXmlWriter(IOContext,Writer)",4
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.changeProperties(SerializationConfig,BeanDescription,List)",7
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.modifySerializer(SerializationConfig,BeanDescription,JsonSerializer)",2
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",4
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)",3
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._isAttribute(BeanPropertyWriter),3
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._isCData(BeanPropertyWriter),3
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(BeanPropertyWriter[],BeanPropertyWriter[])",5
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator,Object)",17
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._serializeXmlNull(JsonGenerator),4
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._initWithRootName(ToXmlGenerator,QName)",15
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._shouldUnwrapObjectNode(ToXmlGenerator,Object)",4
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._serializeUnwrappedObjectNode(ToXmlGenerator,Object,JsonSerializer)",4
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setPrettyPrinter(PrettyPrinter),2
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.overrideFormatFeatures(int,int)",2
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.isEnabled(Feature),2
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.configure(Feature,boolean)",2
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextNameIfMissing(QName),2
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.startWrappedValue(QName,QName)",15
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.finishWrappedValue(QName,QName)",13
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRepeatedFieldName(),2
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeFieldName(String),10
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStartArray(),2
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStartObject(),2
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeEndObject(),6
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._handleStartObject(),14
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._handleEndObject(),18
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(String),6
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(String,int,int)",6
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(char[],int,int)",6
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBinary(Base64Variant,byte[],int,int)",79
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBinary(Base64Variant,InputStream,int)",77
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBoolean(boolean),76
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(int),76
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(long),76
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(BigInteger),77
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.flush(),4
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.close(),99
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.checkNextIsUnwrapped(),2
com.fasterxml.jackson.dataformat.xml.XmlMapper.setDefaultUseWrapper(boolean),3
org.apache.commons.codec.net.Utils.digit16(byte),2
org.apache.commons.codec.net.RFC1522Codec.decodeText(String),8
"org.apache.commons.codec.net.RFC1522Codec.encodeText(String,Charset)",2
"org.apache.commons.codec.net.RFC1522Codec.encodeText(String,String)",2
org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[]),79
"org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int,boolean,ByteArrayOutputStream)",2
org.apache.commons.codec.net.QuotedPrintableCodec.decode(Object),4
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,Charset)",2
"org.apache.commons.codec.net.QuotedPrintableCodec.decode(String,String)",2
org.apache.commons.codec.net.QuotedPrintableCodec.encode(Object),4
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,Charset)",2
"org.apache.commons.codec.net.QuotedPrintableCodec.encode(String,String)",2
org.apache.commons.codec.net.QCodec.decode(Object),3
org.apache.commons.codec.net.QCodec.decode(String),2
org.apache.commons.codec.net.QCodec.doDecoding(byte[]),17
org.apache.commons.codec.net.QCodec.doEncoding(byte[]),5
org.apache.commons.codec.net.QCodec.encode(Object),3
"org.apache.commons.codec.net.QCodec.encode(String,String)",2
org.apache.commons.codec.net.PercentCodec.canEncode(byte),4
org.apache.commons.codec.net.PercentCodec.decode(byte[]),56
org.apache.commons.codec.net.PercentCodec.decode(Object),3
"org.apache.commons.codec.net.PercentCodec.doEncode(byte[],int,boolean)",9
org.apache.commons.codec.net.PercentCodec.encode(byte[]),9
org.apache.commons.codec.net.PercentCodec.encode(Object),3
org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes(byte[]),3
org.apache.commons.codec.net.PercentCodec.inAlwaysEncodeCharsRange(byte),3
org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChar(byte),5
org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars(byte[]),3
org.apache.commons.codec.net.URLCodec.decodeUrl(byte[]),45
"org.apache.commons.codec.net.URLCodec.encodeUrl(BitSet,byte[])",15
org.apache.commons.codec.net.URLCodec.decode(Object),4
org.apache.commons.codec.net.URLCodec.decode(String),4
"org.apache.commons.codec.net.URLCodec.decode(String,String)",2
org.apache.commons.codec.net.URLCodec.encode(Object),4
org.apache.commons.codec.net.URLCodec.encode(String),4
"org.apache.commons.codec.net.URLCodec.encode(String,String)",2
org.apache.commons.codec.net.BCodec.decode(Object),3
org.apache.commons.codec.net.BCodec.decode(String),2
org.apache.commons.codec.net.BCodec.doDecoding(byte[]),2
org.apache.commons.codec.net.BCodec.doEncoding(byte[]),2
org.apache.commons.codec.net.BCodec.encode(Object),3
"org.apache.commons.codec.net.BCodec.encode(String,String)",2
org.apache.commons.codec.net.BCodec.isStrictDecoding(),2
"org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],String)",3
"org.apache.commons.codec.digest.Crypt.crypt(byte[],String)",5
"org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,StringBuilder)",2
"org.apache.commons.codec.digest.PureJavaCrc32.update(byte[],int,int)",16
"com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",2
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.isCachable(),4
"com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(JsonParser,DeserializationContext)",4
"com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(JsonParser,DeserializationContext,Collection)",2
"com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._tryToAddNull(JsonParser,DeserializationContext,Collection)",3
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserializerForCreator(DeserializationConfig,Class,AnnotatedMethod,ValueInstantiator,SettableBeanProperty[])",2
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserializerForNoArgsCreator(DeserializationConfig,Class,AnnotatedMethod)",2
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer.withResolved(Boolean,Boolean,Boolean)",4
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer.deserialize(JsonParser,DeserializationContext)",5
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromString(JsonParser,DeserializationContext,String)",4
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._resolveCurrentLookup(DeserializationContext),3
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer._fromInteger(JsonParser,DeserializationContext,int)",19
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer._deserializeOther(JsonParser,DeserializationContext)",2
com.fasterxml.jackson.databind.deser.std.EnumDeserializer.useNullForUnknownEnum(DeserializationContext),2
com.fasterxml.jackson.databind.deser.std.EnumDeserializer.useDefaultValueForUnknownEnum(DeserializationContext),3
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.withDeserializer(JsonDeserializer),2
"com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.withResolved(JsonDeserializer,NullValueProvider,Boolean)",4
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.isCachable(),2
"com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.createContextual(DeserializationContext,BeanProperty)",2
"com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.deserialize(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.deserialize(JsonParser,DeserializationContext,EnumSet)",2
"com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.handleNonArray(JsonParser,DeserializationContext,EnumSet)",36
"com.fasterxml.jackson.databind.deser.std.UUIDDeserializer._deserialize(String,DeserializationContext)",8
"com.fasterxml.jackson.databind.deser.std.UUIDDeserializer._deserializeEmbedded(Object,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.std.UUIDDeserializer.byteFromChars(String,int,DeserializationContext)",10
"com.fasterxml.jackson.databind.deser.std.UUIDDeserializer._fromBytes(byte[],DeserializationContext)",2
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.forType(Class),22
"com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.deserializeKey(String,DeserializationContext)",8
"com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer._parse(String,DeserializationContext)",34
"com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer.createContextual(DeserializationContext,BeanProperty)",12
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer.logicalType(),2
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer.supportsUpdate(DeserializationConfig),2
"com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer.deserialize(JsonParser,DeserializationContext)",3
"com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer.deserialize(JsonParser,DeserializationContext,Object)",7
"com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",3
"com.fasterxml.jackson.databind.deser.std.MapDeserializer.withResolved(KeyDeserializer,TypeDeserializer,JsonDeserializer,NullValueProvider,Set,Set)",7
"com.fasterxml.jackson.databind.deser.std.MapDeserializer._isStdKeyDeser(JavaType,KeyDeserializer)",7
com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(String[]),3
com.fasterxml.jackson.databind.deser.std.MapDeserializer.setIgnorableProperties(Set),3
com.fasterxml.jackson.databind.deser.std.MapDeserializer.resolve(DeserializationContext),10
com.fasterxml.jackson.databind.deser.std.MapDeserializer.isCachable(),6
"com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(JsonParser,DeserializationContext)",8
"com.fasterxml.jackson.databind.deser.std.MapDeserializer.deserialize(JsonParser,DeserializationContext,Map)",5
"com.fasterxml.jackson.databind.deser.std.MapDeserializer._squashDups(DeserializationContext,Map,Object,Object,Object)",4
"com.fasterxml.jackson.databind.deser.std.MapDeserializer.handleUnresolvedReference(DeserializationContext,MapReferringAccumulator,Object,UnresolvedForwardReference)",2
"com.fasterxml.jackson.databind.deser.std.JdkDeserializers.find(DeserializationContext,Class,String)",11
com.fasterxml.jackson.databind.deser.std.StdDeserializer.getValueType(DeserializationContext),2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromArray(JsonParser,DeserializationContext)",13
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmpty(JsonParser,DeserializationContext)",4
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeWrappedValue(JsonParser,DeserializationContext)",3
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBytePrimitive(JsonParser,DeserializationContext)",21
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseShortPrimitive(JsonParser,DeserializationContext)",21
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(JsonParser,DeserializationContext)",17
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseIntPrimitive(DeserializationContext,String)",25
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(JsonParser,DeserializationContext,Class)",15
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseInteger(DeserializationContext,String)",24
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(JsonParser,DeserializationContext)",17
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLongPrimitive(DeserializationContext,String)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLong(JsonParser,DeserializationContext,Class)",15
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseLong(DeserializationContext,String)",3
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext)",19
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(DeserializationContext,String)",3
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseFloatPrimitive(JsonParser,DeserializationContext,String)",5
com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkFloatSpecialValue(String),8
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext)",19
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(DeserializationContext,String)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDoublePrimitive(JsonParser,DeserializationContext,String)",4
com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkDoubleSpecialValue(String),8
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(JsonParser,DeserializationContext)",7
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDateFromArray(JsonParser,DeserializationContext)",13
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseDate(String,DeserializationContext)",18
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseString(JsonParser,DeserializationContext,NullValueProvider)",25
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkFloatToIntCoercion(JsonParser,DeserializationContext,Class)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkToStringCoercion(JsonParser,DeserializationContext,Class,Object,CoercionInputShape)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkIntToFloatCoercion(JsonParser,DeserializationContext,Class)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceBooleanFromInt(JsonParser,DeserializationContext,Class)",7
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkCoercionFail(DeserializationContext,CoercionAction,Class,Object,String)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceIntegral(JsonParser,DeserializationContext)",3
com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNullForPrimitive(DeserializationContext),2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._reportFailedNullCoerce(DeserializationContext,boolean,Enum,String)",2
com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc(),10
com.fasterxml.jackson.databind.deser.std.StdDeserializer._coercedTypeDesc(Class),2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._parseBooleanFromInt(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyNumberForScalarCoercion(DeserializationContext,JsonParser)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._coerceNullToken(DeserializationContext,boolean)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer.findConvertingContentDeserializer(DeserializationContext,BeanProperty,JsonDeserializer)",5
"com.fasterxml.jackson.databind.deser.std.StdDeserializer.findFormatOverrides(DeserializationContext,BeanProperty,Class)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer.findValueNullProvider(DeserializationContext,SettableBeanProperty,PropertyMetadata)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullProvider(DeserializationContext,BeanProperty,JsonDeserializer)",6
"com.fasterxml.jackson.databind.deser.std.StdDeserializer.findContentNullStyle(DeserializationContext,BeanProperty)",2
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._findNullProvider(DeserializationContext,BeanProperty,Nulls,JsonDeserializer)",14
"com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)",4
"com.fasterxml.jackson.databind.deser.std.StdDeserializer._verifyEndArrayForSingle(JsonParser,DeserializationContext)",2
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer.resolve(DeserializationContext),2
"com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer.createContextual(DeserializationContext,BeanProperty)",2
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer.unwrappingDeserializer(NameTransformer),2
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer.replaceDelegatee(JsonDeserializer),2
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.replaceDelegatee(JsonDeserializer),2
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.resolve(DeserializationContext),3
"com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.createContextual(DeserializationContext,BeanProperty)",3
"com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.deserialize(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",2
"com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.deserialize(JsonParser,DeserializationContext,Object)",2
"com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer,Object)",2
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.isCachable(),3
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer._convertIfNonNull(Object),2
"com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer._deserializeFromArray(JsonParser,DeserializationContext,Collection)",4
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.findBackReference(String),2
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getContentType(),2
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.getEmptyValue(DeserializationContext),6
"com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase.wrapAndThrow(DeserializationContext,Throwable,Object,String)",36
"com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.withResolved(KeyDeserializer,JsonDeserializer,TypeDeserializer,NullValueProvider)",5
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.resolve(DeserializationContext),7
"com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.createContextual(DeserializationContext,BeanProperty)",8
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.isCachable(),4
"com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.deserialize(JsonParser,DeserializationContext)",6
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.constructMap(DeserializationContext),14
"com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.withResolved(JsonDeserializer,JsonDeserializer,NullValueProvider,Boolean)",5
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.isCachable(),3
"com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.createContextual(DeserializationContext,BeanProperty)",24
"com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.deserialize(JsonParser,DeserializationContext)",2
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.findDeserializer(Class),15
"com.fasterxml.jackson.databind.deser.std.FromStringDeserializer.deserialize(JsonParser,DeserializationContext)",23
"com.fasterxml.jackson.databind.deser.std.FromStringDeserializer._deserializeFromOther(JsonParser,DeserializationContext,JsonToken)",5
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromString(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromInt(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromLong(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromBigInteger(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromDouble(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromBigDecimal(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromBoolean(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateUsingDefault(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateUsingDelegate(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateUsingArrayDelegate(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canCreateFromObjectWith(),2
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.canInstantiate(),10
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDefault(DeserializationContext),4
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromObjectWith(DeserializationContext,Object[])",4
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDefaultOrWithoutArguments(DeserializationContext),3
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingDelegate(DeserializationContext,Object)",3
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createUsingArrayDelegate(DeserializationContext,Object)",3
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromString(DeserializationContext,String)",4
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(DeserializationContext,int)",13
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromLong(DeserializationContext,long)",10
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromBigInteger(DeserializationContext,BigInteger)",4
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromDouble(DeserializationContext,double)",7
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromBigDecimal(DeserializationContext,BigDecimal)",8
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromBoolean(DeserializationContext,boolean)",4
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.wrapException(Throwable),4
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.unwrapAndWrapException(DeserializationContext,Throwable)",4
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.wrapAsJsonMappingException(DeserializationContext,Throwable)",2
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.rewrapCtorProblem(DeserializationContext,Throwable)",5
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._createUsingDelegate(AnnotatedWithParams,SettableBeanProperty[],DeserializationContext,Object)",49
"com.fasterxml.jackson.databind.deser.std.DateDeserializers.find(Class,String)",5
"com.fasterxml.jackson.databind.deser.std.ThreadGroupDeserializer.convert(JsonNode,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer.createContextual(DeserializationContext,BeanProperty)",4
"com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer.deserializeEnumUsingPropertyBased(JsonParser,DeserializationContext,PropertyBasedCreator)",6
"com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._deserializeWithErrorWrapping(JsonParser,DeserializationContext,SettableBeanProperty)",2
"com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer.throwOrReturnThrowable(Throwable,DeserializationContext)",15
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._replaceProperty(BeanPropertyMap,SettableBeanProperty[],SettableBeanProperty,SettableBeanProperty)",5
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findDelegateDeserializer(DeserializationContext,JavaType,AnnotatedWithParams)",24
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findConvertingDeserializer(DeserializationContext,SettableBeanProperty)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleByNameInclusion(DeserializationContext,AnnotationIntrospector,BeanDeserializerBase,AnnotatedMember)",36
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveManagedReferenceProperty(DeserializationContext,SettableBeanProperty)",4
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolvedObjectIdProperty(DeserializationContext,SettableBeanProperty)",6
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._findPropertyUnwrapper(DeserializationContext,SettableBeanProperty)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveInnerClassValuedProperty(DeserializationContext,SettableBeanProperty)",13
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._resolveMergeAndNullSettings(DeserializationContext,SettableBeanProperty,PropertyMetadata)",13
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getEmptyValue(DeserializationContext),3
"com.fasterxml.jackson.databind.ser.std.EnumSetSerializer.serialize(EnumSet,JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.std.EnumSetSerializer.serializeContents(EnumSet,JsonGenerator,SerializerProvider)",3
"com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.getSchema(SerializerProvider,Type)",2
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._asTimestamp(SerializerProvider),4
"com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType,boolean)",2
"com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._serializeAsString(Date,JsonGenerator,SerializerProvider)",3
"com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase.createContextual(SerializerProvider,BeanProperty)",48
"com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",2
"com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer.serialize(ByteBuffer,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",2
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.unwrappingSerializer(NameTransformer),13
"com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._useStatic(SerializerProvider,BeanProperty,JavaType)",9
"com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.isEmpty(SerializerProvider,Object)",9
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.isUnwrappingSerializer(),2
"com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.serialize(Object,JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",4
"com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",3
"com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._findCachedSerializer(SerializerProvider,Class)",5
"com.fasterxml.jackson.databind.ser.std.NumberSerializer.createContextual(SerializerProvider,BeanProperty)",4
"com.fasterxml.jackson.databind.ser.std.NumberSerializer.getSchema(SerializerProvider,Type)",2
"com.fasterxml.jackson.databind.ser.std.NumberSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",3
com.fasterxml.jackson.databind.ser.std.MapSerializer._withValueTypeSerializer(TypeSerializer),2
"com.fasterxml.jackson.databind.ser.std.MapSerializer.withResolved(BeanProperty,JsonSerializer,JsonSerializer,Set,Set,boolean)",2
com.fasterxml.jackson.databind.ser.std.MapSerializer.withFilterId(Object),2
"com.fasterxml.jackson.databind.ser.std.MapSerializer.withContentInclusion(Object,boolean)",3
"com.fasterxml.jackson.databind.ser.std.MapSerializer.construct(Set,Set,JavaType,boolean,TypeSerializer,JsonSerializer,JsonSerializer,Object)",30
"com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeWithoutTypeInfo(Map,JsonGenerator,SerializerProvider)",28
"com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFieldsUsing(Map,JsonGenerator,SerializerProvider,JsonSerializer)",30
"com.fasterxml.jackson.databind.ser.std.MapSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",3
"com.fasterxml.jackson.databind.ser.std.MapSerializer._findAndAddDynamic(PropertySerializerMap,Class,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.MapSerializer._findAndAddDynamic(PropertySerializerMap,JavaType,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.MapSerializer._orderEntries(Map,JsonGenerator,SerializerProvider)",15
"com.fasterxml.jackson.databind.ser.std.MapSerializer._writeNullKeyedEntry(JsonGenerator,SerializerProvider,Object)",26
"com.fasterxml.jackson.databind.ser.std.MapSerializer._findSerializer(SerializerProvider,Object)",3
"com.fasterxml.jackson.databind.ser.std.CalendarSerializer.serialize(Calendar,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(Collection,JsonGenerator,SerializerProvider)",6
"com.fasterxml.jackson.databind.ser.std.InetAddressSerializer.createContextual(SerializerProvider,BeanProperty)",8
"com.fasterxml.jackson.databind.ser.std.InetAddressSerializer.serialize(InetAddress,JsonGenerator,SerializerProvider)",4
"com.fasterxml.jackson.databind.ser.std.SerializableSerializer.isEmpty(SerializerProvider,JsonSerializable)",2
"com.fasterxml.jackson.databind.ser.std.ArraySerializerBase.createContextual(SerializerProvider,BeanProperty)",4
"com.fasterxml.jackson.databind.ser.std.ArraySerializerBase.serialize(Object,JsonGenerator,SerializerProvider)",3
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase._shouldUnwrapSingle(SerializerProvider),2
"com.fasterxml.jackson.databind.ser.std.DateSerializer.serialize(Date,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.std.SqlDateSerializer.serialize(Date,JsonGenerator,SerializerProvider)",3
"com.fasterxml.jackson.databind.ser.std.StdSerializer.getSchema(SerializerProvider,Type,boolean)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.createSchemaNode(String,boolean)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitStringFormat(JsonFormatVisitorWrapper,JavaType,JsonValueFormat)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(JsonFormatVisitorWrapper,JavaType,NumberType)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitIntFormat(JsonFormatVisitorWrapper,JavaType,NumberType,JsonValueFormat)",5
"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitFloatFormat(JsonFormatVisitorWrapper,JavaType,NumberType)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(JsonFormatVisitorWrapper,JavaType,JsonSerializer,JavaType)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.visitArrayFormat(JsonFormatVisitorWrapper,JavaType,JsonFormatTypes)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,String)",60
"com.fasterxml.jackson.databind.ser.std.StdSerializer.wrapAndThrow(SerializerProvider,Throwable,Object,int)",60
"com.fasterxml.jackson.databind.ser.std.StdSerializer.findConvertingContentSerializer(SerializerProvider,BeanProperty,JsonSerializer)",6
"com.fasterxml.jackson.databind.ser.std.StdSerializer.findPropertyFilter(SerializerProvider,Object,Object)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.findFormatOverrides(SerializerProvider,BeanProperty,Class)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.findIncludeOverrides(SerializerProvider,BeanProperty,Class)",2
"com.fasterxml.jackson.databind.ser.std.StdSerializer.findAnnotatedContentSerializer(SerializerProvider,BeanProperty)",4
"com.fasterxml.jackson.databind.ser.std.EnumSerializer.createContextual(SerializerProvider,BeanProperty)",3
"com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialize(Enum,JsonGenerator,SerializerProvider)",4
"com.fasterxml.jackson.databind.ser.std.EnumSerializer.getSchema(SerializerProvider,Type)",5
"com.fasterxml.jackson.databind.ser.std.EnumSerializer.acceptJsonFormatVisitor(JsonFormatVisitorWrapper,JavaType)",8
com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex(SerializerProvider),2
"com.fasterxml.jackson.databind.ser.std.EnumSerializer.constructEnumNamingStrategyValues(SerializationConfig,Class,AnnotatedClass)",2
com.fasterxml.jackson.databind.ser.PropertyWriter.findAnnotation(Class),2
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createKeySerializer(SerializationConfig,JavaType,JsonSerializer)",60
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.createTypeSerializer(SerializationConfig,JavaType)",4
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByLookup(JavaType,SerializationConfig,BeanDescription,boolean)",3
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAnnotations(SerializerProvider,JavaType,BeanDescription)",10
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByPrimaryType(SerializerProvider,JavaType,BeanDescription,boolean)",15
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerByAddonType(SerializationConfig,JavaType,BeanDescription,boolean)",8
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findSerializerFromAnnotation(SerializerProvider,Annotated)",2
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConvertingSerializer(SerializerProvider,Annotated,JsonSerializer)",2
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findConverter(SerializerProvider,Annotated)",2
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapSerializer(SerializerProvider,MapType,BeanDescription,boolean,JsonSerializer,TypeSerializer,JsonSerializer)",73
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory._checkMapContentInclusion(SerializerProvider,BeanDescription,MapSerializer)",26
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildMapEntrySerializer(SerializerProvider,JavaType,BeanDescription,boolean,JavaType,JavaType)",23
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findInclusionWithContent(SerializerProvider,BeanDescription,JavaType,Class)",4
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.findReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean)",12
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildAtomicReferenceSerializer(SerializerProvider,ReferenceType,BeanDescription,boolean,TypeSerializer,JsonSerializer)",22
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.buildEnumSerializer(SerializationConfig,JavaType,BeanDescription)",5
com.fasterxml.jackson.databind.ser.BasicSerializerFactory._removeEnumSelfReferences(BeanDescription),5
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findKeySerializer(SerializerProvider,Annotated)",2
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory._findContentSerializer(SerializerProvider,Annotated)",2
"com.fasterxml.jackson.databind.ser.BasicSerializerFactory.usesStaticTyping(SerializationConfig,BeanDescription)",4
com.fasterxml.jackson.databind.ser.BeanSerializer.asArraySerializer(),3
com.fasterxml.jackson.databind.ser.ContainerSerializer.withValueTypeSerializer(TypeSerializer),2
"com.fasterxml.jackson.databind.ser.PropertyBuilder.findSerializationType(Annotated,boolean,JavaType)",25
com.fasterxml.jackson.databind.ser.PropertyBuilder.getDefaultBean(),6
"com.fasterxml.jackson.databind.ser.PropertyBuilder.getPropertyDefaultValue(String,AnnotatedMember,JavaType)",3
"com.fasterxml.jackson.databind.ser.PropertyBuilder._throwWrapped(Exception,String,Object)",2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.rename(NameTransformer),2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignSerializer(JsonSerializer),3
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.assignNullSerializer(JsonSerializer),3
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.readResolve(),6
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getAnnotation(Class),2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getContextAnnotation(Class),2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getInternalSetting(Object),2
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.setInternalSetting(Object,Object)",2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.removeInternalSetting(Object),3
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasSerializer(),2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.hasNullSerializer(),2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.wouldConflictWithName(PropertyName),4
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getRawSerializationType(),2
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getPropertyType(),3
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getGenericPropertyType(),3
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsOmittedField(Object,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsPlaceholder(Object,JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(JsonObjectFormatVisitor,SerializerProvider)",3
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.depositSchemaProperty(ObjectNode,SerializerProvider)",16
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter._findAndAddDynamic(PropertySerializerMap,Class,SerializerProvider)",4
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.get(Object),2
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter._handleSelfReference(Object,JsonGenerator,SerializerProvider,JsonSerializer)",7
"com.fasterxml.jackson.databind.ObjectReader._initForReading(DeserializationContext,JsonParser)",3
com.fasterxml.jackson.databind.ObjectReader.with(InjectableValues),2
com.fasterxml.jackson.databind.ObjectReader.with(JsonFactory),3
com.fasterxml.jackson.databind.ObjectReader.with(FormatSchema),2
com.fasterxml.jackson.databind.ObjectReader.forType(JavaType),5
org.apache.commons.collections4.MultiMapUtils.emptyIfNull(MultiValuedMap),2
"org.apache.commons.collections4.MultiMapUtils.getCollection(MultiValuedMap,Object)",2
"org.apache.commons.collections4.MultiMapUtils.getValuesAsBag(MultiValuedMap,Object)",3
"org.apache.commons.collections4.MultiMapUtils.getValuesAsList(MultiValuedMap,Object)",3
"org.apache.commons.collections4.MultiMapUtils.getValuesAsSet(MultiValuedMap,Object)",3
org.apache.commons.collections4.MultiMapUtils.isEmpty(MultiValuedMap),3
org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(BoundedCollection),2
org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(Collection),16
org.apache.commons.collections4.collection.CompositeCollection.add(Object),2
org.apache.commons.collections4.collection.CompositeCollection.addAll(Collection),2
org.apache.commons.collections4.collection.CompositeCollection.addComposited(Collection),2
org.apache.commons.collections4.collection.CompositeCollection.addComposited(Collection[]),3
"org.apache.commons.collections4.collection.CompositeCollection.addComposited(Collection,Collection)",4
org.apache.commons.collections4.collection.CompositeCollection.clear(),2
org.apache.commons.collections4.collection.CompositeCollection.contains(Object),4
org.apache.commons.collections4.collection.CompositeCollection.containsAll(Collection),5
org.apache.commons.collections4.collection.CompositeCollection.isEmpty(),4
org.apache.commons.collections4.collection.CompositeCollection.iterator(),2
org.apache.commons.collections4.collection.CompositeCollection.remove(Object),2
org.apache.commons.collections4.collection.CompositeCollection.removeAll(Collection),3
org.apache.commons.collections4.collection.CompositeCollection.removeIf(Predicate),3
org.apache.commons.collections4.collection.CompositeCollection.retainAll(Collection),3
org.apache.commons.collections4.collection.CompositeCollection.size(),2
org.apache.commons.collections4.collection.CompositeCollection.toArray(),2
org.apache.commons.collections4.collection.CompositeCollection.toArray(Object[]),12
"org.apache.commons.collections4.collection.TransformedCollection.transformedCollection(Collection,Transformer)",3
org.apache.commons.collections4.collection.TransformedCollection.transform(Collection),2
org.apache.commons.collections4.collection.PredicatedCollection.addAll(Collection),2
org.apache.commons.collections4.collection.PredicatedCollection.validate(Object),2
org.apache.commons.collections4.collection.IndexedCollection.add(Object),2
org.apache.commons.collections4.collection.IndexedCollection.addAll(Collection),2
org.apache.commons.collections4.collection.IndexedCollection.addToIndex(Object),3
org.apache.commons.collections4.collection.IndexedCollection.containsAll(Collection),4
org.apache.commons.collections4.collection.IndexedCollection.get(Object),2
org.apache.commons.collections4.collection.IndexedCollection.reindex(),2
org.apache.commons.collections4.collection.IndexedCollection.remove(Object),2
org.apache.commons.collections4.collection.IndexedCollection.removeAll(Collection),2
org.apache.commons.collections4.collection.IndexedCollection.retainAll(Collection),2
org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(Collection),2
"org.apache.commons.collections4.ListUtils.longestCommonSubsequence(CharSequence,CharSequence)",2
"org.apache.commons.collections4.ListUtils.subtract(List,List)",3
"org.apache.commons.collections4.MapUtils.getByte(Map,Object)",3
"org.apache.commons.collections4.MapUtils.getDouble(Map,Object)",3
"org.apache.commons.collections4.MapUtils.getFloat(Map,Object)",3
"org.apache.commons.collections4.MapUtils.getInteger(Map,Object)",3
"org.apache.commons.collections4.MapUtils.getLong(Map,Object)",3
"org.apache.commons.collections4.MapUtils.getShort(Map,Object)",3
org.apache.commons.collections4.MapUtils.isNotEmpty(Map),2
"org.apache.commons.collections4.MapUtils.populateMap(MultiMap,Iterable,Transformer,Transformer)",2
"org.apache.commons.collections4.MapUtils.putAll(Map,Object[])",14
"org.apache.commons.collections4.MapUtils.verbosePrintInternal(PrintStream,Object,Map,Deque,boolean)",86
org.apache.commons.collections4.functors.IfTransformer.transform(Object),2
org.apache.commons.collections4.functors.IdentityPredicate.identityPredicate(Object),2
org.apache.commons.collections4.functors.IdentityPredicate.test(Object),2
org.apache.commons.collections4.functors.TransformerPredicate.test(Object),2
org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(Object),2
org.apache.commons.collections4.functors.ConstantTransformer.equals(Object),3
org.apache.commons.collections4.functors.ConstantTransformer.hashCode(),2
org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(Predicate),2
org.apache.commons.collections4.functors.WhileClosure.execute(Object),4
"org.apache.commons.collections4.functors.ForClosure.forClosure(int,Closure)",4
org.apache.commons.collections4.functors.ForClosure.execute(Object),2
org.apache.commons.collections4.functors.NullIsTruePredicate.test(Object),2
org.apache.commons.collections4.functors.NonePredicate.nonePredicate(Collection),2
org.apache.commons.collections4.functors.NonePredicate.nonePredicate(Predicate[]),2
org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(Map),5
"org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(Predicate[],Transformer[],Transformer)",4
org.apache.commons.collections4.functors.SwitchTransformer.transform(Object),4
org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(Transformer),2
org.apache.commons.collections4.functors.OrPredicate.test(Object),3
org.apache.commons.collections4.functors.MapTransformer.mapTransformer(Map),2
org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(Closure[]),2
org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(Collection),3
org.apache.commons.collections4.functors.ChainedClosure.execute(Object),2
org.apache.commons.collections4.functors.AndPredicate.test(Object),3
"org.apache.commons.collections4.functors.InvokerTransformer.invokerTransformer(String,Class[],Object[])",43
org.apache.commons.collections4.functors.InvokerTransformer.transform(Object),20
org.apache.commons.collections4.functors.CloneTransformer.transform(Object),2
org.apache.commons.collections4.functors.NotPredicate.test(Object),2
org.apache.commons.collections4.functors.ConstantFactory.constantFactory(Object),2
org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(Collection),2
org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(Transformer[]),2
org.apache.commons.collections4.functors.ChainedTransformer.transform(Object),2
org.apache.commons.collections4.functors.ComparatorPredicate.test(Object),11
org.apache.commons.collections4.functors.CatchAndRethrowClosure.execute(Object),3
org.apache.commons.collections4.functors.AllPredicate.allPredicate(Collection),3
org.apache.commons.collections4.functors.AllPredicate.allPredicate(Predicate[]),3
org.apache.commons.collections4.functors.NullIsFalsePredicate.test(Object),2
org.apache.commons.collections4.functors.NullIsExceptionPredicate.test(Object),2
org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(Collection),3
org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(Predicate[]),3
org.apache.commons.collections4.functors.SwitchClosure.switchClosure(Map),4
"org.apache.commons.collections4.functors.SwitchClosure.switchClosure(Predicate[],Closure[],Closure)",4
org.apache.commons.collections4.functors.SwitchClosure.execute(Object),4
com.fasterxml.jackson.core.io.MergedStream.available(),2
com.fasterxml.jackson.core.io.MergedStream.mark(int),2
com.fasterxml.jackson.core.io.MergedStream.markSupported(),3
com.fasterxml.jackson.core.io.MergedStream.read(),3
"com.fasterxml.jackson.core.io.MergedStream.read(byte[],int,int)",5
com.fasterxml.jackson.core.io.MergedStream.reset(),2
com.fasterxml.jackson.core.io.MergedStream.skip(long),5
com.fasterxml.jackson.core.io.MergedStream._free(),3
com.fasterxml.jackson.core.io.UTF8Writer.close(),9
com.fasterxml.jackson.core.io.UTF8Writer.flush(),3
com.fasterxml.jackson.core.io.UTF8Writer.write(int),32
com.fasterxml.jackson.core.io.UTF8Writer.convertSurrogate(int),3
com.fasterxml.jackson.core.io.NumberInput.parseLong(String),2
"com.fasterxml.jackson.core.io.NumberInput.inLongRange(char[],int,int,boolean)",16
"com.fasterxml.jackson.core.io.NumberInput.inLongRange(String,boolean)",16
"com.fasterxml.jackson.core.io.NumberInput.parseAsInt(String,int)",50
"com.fasterxml.jackson.core.io.NumberInput.parseAsLong(String,long)",50
"com.fasterxml.jackson.core.io.NumberInput.parseAsDouble(String,double,boolean)",4
"com.fasterxml.jackson.core.io.NumberInput.parseBigDecimal(String,boolean)",2
"com.fasterxml.jackson.core.io.NumberInput.parseBigDecimal(char[],int,int,boolean)",2
"com.fasterxml.jackson.core.io.NumberInput.parseBigDecimal(char[],boolean)",2
"com.fasterxml.jackson.core.io.NumberInput.parseBigInteger(String,boolean)",2
"com.fasterxml.jackson.core.io.NumberInput.parseBigIntegerWithRadix(String,int,boolean)",2
com.fasterxml.jackson.core.io.NumberInput.looksLikeValidNumber(String),8
"com.fasterxml.jackson.core.TSFBuilder.configure(Feature,boolean)",2
"com.fasterxml.jackson.core.TSFBuilder.enable(StreamReadFeature,StreamReadFeature[])",2
"com.fasterxml.jackson.core.TSFBuilder.disable(StreamReadFeature,StreamReadFeature[])",2
"com.fasterxml.jackson.core.TSFBuilder.configure(StreamReadFeature,boolean)",2
"com.fasterxml.jackson.core.TSFBuilder.enable(StreamWriteFeature,StreamWriteFeature[])",2
"com.fasterxml.jackson.core.TSFBuilder.disable(StreamWriteFeature,StreamWriteFeature[])",2
"com.fasterxml.jackson.core.TSFBuilder.configure(StreamWriteFeature,boolean)",2
com.fasterxml.jackson.core.TSFBuilder.addDecorator(JsonGeneratorDecorator),2
com.fasterxml.jackson.core.JsonStreamContext.inArray(),2
com.fasterxml.jackson.core.JsonStreamContext.inRoot(),2
com.fasterxml.jackson.core.JsonStreamContext.inObject(),2
com.fasterxml.jackson.core.JsonStreamContext.getTypeDesc(),4
com.fasterxml.jackson.core.JsonStreamContext.typeDesc(),4
com.fasterxml.jackson.core.JsonStreamContext.getCurrentIndex(),2
com.fasterxml.jackson.core.JsonStreamContext.hasCurrentIndex(),2
com.fasterxml.jackson.core.JsonStreamContext.hasPathSegment(),3
com.fasterxml.jackson.core.JsonStreamContext.hasCurrentName(),2
com.fasterxml.jackson.core.JsonStreamContext.toString(),4
com.fasterxml.jackson.core.json.JsonWriteFeature.collectDefaults(),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.getHexChars(),2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(String),4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeFieldName(SerializableString),4
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(String,boolean)",13
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldName(SerializableString,boolean)",17
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeFieldNameTail(SerializableString),2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray(),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray(Object),3
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartArray(Object,int)",3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndArray(),6
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject(),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeStartObject(Object),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeEndObject(),6
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(String,boolean)",10
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writePPFieldName(SerializableString,boolean)",10
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(String),5
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(Reader,int)",97
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(char[],int,int)",4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString(SerializableString),6
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(SerializableString),6
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(String),4
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(String,int,int)",4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(SerializableString),2
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char[],int,int)",3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRaw(char),2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeRawLong(String),2
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBinary(Base64Variant,byte[],int,int)",4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(short),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedShort(short),2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(int),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedInt(int),2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(long),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedLong(long),2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(BigInteger),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(double),4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(float),4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(BigDecimal),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(String),3
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeNumber(char[],int,int)",2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(String),4
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeQuotedRaw(char[],int,int)",4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeBoolean(boolean),4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._verifyValueWrite(String),9
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.flush(),3
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._releaseBuffers(),4
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString(String),7
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeString2(int),25
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(Base64Variant,byte[],int,int)",25
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeBinary(Base64Variant,InputStream,byte[])",45
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._writeNull(),2
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char,int)",13
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._prependOrWriteCharacterEscape(char[],int,int,char,int)",21
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._appendCharacterEscape(char,int)",12
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._allocateCopyBuffer(),2
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator._flushBuffer(),2
com.fasterxml.jackson.core.json.JsonGeneratorImpl.enable(Feature),3
com.fasterxml.jackson.core.json.JsonGeneratorImpl.disable(Feature),3
"com.fasterxml.jackson.core.json.JsonGeneratorImpl._checkStdFeatureChanges(int,int)",2
com.fasterxml.jackson.core.json.JsonGeneratorImpl.setHighestNonEscapedChar(int),2
com.fasterxml.jackson.core.json.JsonGeneratorImpl.setCharacterEscapes(CharacterEscapes),2
"com.fasterxml.jackson.core.json.JsonGeneratorImpl._verifyPrettyValueWrite(String,int)",8
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(String),85
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeFieldName(SerializableString),55
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUnq(SerializableString),2
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray(),3
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray(Object),3
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartArray(Object,int)",3
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndArray(),6
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject(),3
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject(Object),3
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeEndObject(),6
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writePPFieldName(String),56
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(String),6
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(char[],int,int)",12
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeString(SerializableString),8
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawUTF8String(byte[],int,int)",4
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeUTF8String(byte[],int,int)",8
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(String),2
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(String,int,int)",10
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(SerializableString),2
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRawValue(SerializableString),2
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char[],int,int)",23
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(char),6
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(char[],int,int)",43
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeRawSegment(char[],int,int)",11
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBinary(Base64Variant,byte[],int,int)",4
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(short),4
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedShort(short),2
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(int),4
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedInt(int),2
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(long),3
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedLong(long),2
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(BigInteger),3
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(double),4
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(float),4
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(BigDecimal),3
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(String),3
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeNumber(char[],int,int)",2
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(String),4
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeQuotedRaw(char[],int,int)",4
com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeBoolean(boolean),4
com.fasterxml.jackson.core.json.UTF8JsonGenerator._verifyValueWrite(String),10
com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(),3
com.fasterxml.jackson.core.json.UTF8JsonGenerator._releaseBuffers(),6
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[]),3
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBytes(byte[],int,int)",3
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegments(String,boolean)",27
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(char[],int,int)",24
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment(String,int,int)",24
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(char[],int,int)",18
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegment2(String,int,int)",18
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(char[],int,int)",14
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeStringSegmentASCII2(String,int,int)",14
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(char[],int,int)",52
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomStringSegment2(String,int,int)",52
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeCustomEscape(byte[],int,SerializableString,int)",2
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._handleLongCustomEscape(byte[],int,int,byte[],int)",5
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment(byte[],int,int)",9
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeUTF8Segment2(byte[],int,int)",10
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(Base64Variant,byte[],int,int)",25
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeBinary(Base64Variant,InputStream,byte[])",45
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(int,char[],int,int)",5
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputSurrogates(int,int)",2
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputMultiByteChar(int,int)",3
com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeNull(),2
"com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeGenericEscape(int,int)",2
com.fasterxml.jackson.core.json.UTF8JsonGenerator._flushBuffer(),2
com.fasterxml.jackson.core.json.UTF8JsonGenerator.getHexBytes(),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.releaseBuffered(OutputStream),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadMore(),5
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeInput(),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._releaseBuffers(),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(),3
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getText(Writer),6
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsString(String),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsInt(),9
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getValueAsInt(int),9
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._getText2(JsonToken),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextCharacters(),9
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextLength(),6
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getTextOffset(),6
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.getBinaryValue(Base64Variant),20
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextTokenNotInObject(int),12
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._nextAfterName(),3
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.finishToken(),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(SerializableString),95
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColonFast(int),51
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameYes(int),12
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser._isNextTokenNameMaybe(int,SerializableString)",12
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextTextValue(),7
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextIntValue(int),6
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextLongValue(long),6
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextBooleanValue(),8
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseFloatThatStartsWithPeriod(boolean,boolean)",3
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseUnsignedNumber(int),36
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseNumber2(char[],int,boolean,int)",85
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._parseName(int),13
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumName(int),9
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseMediumName2(int,int)",9
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser.parseLongName(int,int,int)",27
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int,int)",2
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int,int,int)",2
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int,int,int,int)",2
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser.findName(int[],int,int,int)",4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._loadMoreGuaranteed(),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishString(),12
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._finishAndReturnString(),12
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._handleUnexpectedValue(int),33
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchTrue(),7
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchFalse(),8
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._matchNull(),7
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser._checkMatchEnd(String,int,int)",2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS(),24
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWS2(),75
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipWSOrEnd2(),75
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipColon(),52
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipComment(),18
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipYAMLComment(),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipLine(),75
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeEscaped(),42
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeCharForError(int),57
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_2(int),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3(int),16
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_3fast(int),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._decodeUtf8_4(int),64
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_2(),4
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_3(),16
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipUtf8_4(int),64
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._skipCR(),5
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextByte(),2
"com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidToken(String,String)",15
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._reportInvalidChar(int),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser.currentTokenLocation(),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeScope(int),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeArrayScope(),2
com.fasterxml.jackson.core.json.UTF8StreamJsonParser._closeObjectScope(),2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getText(),3
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getText(Writer),6
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getValueAsString(),4
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getValueAsString(String),4
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getValueAsInt(),9
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getValueAsInt(int),9
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._getText2(JsonToken),4
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getTextCharacters(),9
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getTextLength(),6
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getTextOffset(),6
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.getBinaryValue(Base64Variant),20
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._nextTokenNotInObject(int),12
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._nextAfterName(),3
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.finishToken(),2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextTextValue(),7
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextIntValue(int),6
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextLongValue(long),6
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.nextBooleanValue(),8
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._parseFloatThatStartsWithPeriod(boolean,boolean)",3
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._parseUnsignedNumber(int),100
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._handleLeadingZeroes(),6
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._verifyRootSpace(),4
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._parseName(int),12
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._parseMediumName(int),9
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._parseMediumName2(int,int)",9
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._parseLongName(int,int,int)",24
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.findName(int,int)",2
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.findName(int,int,int)",2
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.findName(int,int,int,int)",2
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser.findName(int[],int,int,int)",4
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._finishString2(char[],int,int)",17
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._handleUnexpectedValue(int),31
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._checkMatchEnd(String,int,int)",2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipWS(),24
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipWSOrEnd(),74
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipWSComment(int),12
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipColon2(int,boolean)",20
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipComment(),6
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipYAMLComment(),2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipLine(),8
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._decodeEscaped(),10
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._decodeCharForError(int),57
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._decodeUtf8_2(int),2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._decodeUtf8_3(int),4
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._decodeUtf8_4(int),8
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipUtf8_2(),2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipUtf8_3(),4
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._skipUtf8_4(),8
"com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._reportInvalidToken(int,String,String)",2
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser._reportInvalidChar(int),2
org.apache.commons.compress.harmony.pack200.ClassBands.writeCodeAttributeBands(OutputStream),2
org.apache.commons.compress.harmony.pack200.ClassBands.writeFieldAttributeBands(OutputStream),2
org.apache.commons.compress.harmony.pack200.ClassBands.writeMethodAttributeBands(OutputStream),2
org.apache.commons.compress.harmony.pack200.BandSet.cpEntryListToArray(List),4
org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(MultiValuedMap),2
"org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformedMap(MultiValuedMap,Transformer,Transformer)",2
"org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(Object,Iterable)",3
org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(Map),2
org.apache.commons.collections4.multimap.TransformedMultiValuedMap.putAll(MultiValuedMap),2
org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformKey(Object),2
org.apache.commons.collections4.multimap.TransformedMultiValuedMap.transformValue(Object),2
org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.equals(Object),2
org.apache.commons.collections4.list.LazyList.element(int),3
org.apache.commons.collections4.list.LazyList.get(int),4
"org.apache.commons.collections4.list.LazyList.subList(int,int)",3
"org.apache.commons.collections4.list.TreeList.add(int,Object)",2
org.apache.commons.collections4.list.TreeList.addAll(Collection),3
"org.apache.commons.collections4.list.TreeList.checkInterval(int,int,int)",3
org.apache.commons.collections4.list.TreeList.contains(Object),2
org.apache.commons.collections4.list.TreeList.indexOf(Object),2
org.apache.commons.collections4.list.TreeList.toArray(),2
org.apache.commons.collections4.list.SetUniqueList.setUniqueList(List),2
org.apache.commons.collections4.list.SetUniqueList.add(Object),2
"org.apache.commons.collections4.list.SetUniqueList.add(int,Object)",2
"org.apache.commons.collections4.list.SetUniqueList.addAll(int,Collection)",3
org.apache.commons.collections4.list.SetUniqueList.remove(Object),2
org.apache.commons.collections4.list.SetUniqueList.removeAll(Collection),2
org.apache.commons.collections4.list.SetUniqueList.retainAll(Collection),3
"org.apache.commons.collections4.list.SetUniqueList.set(int,Object)",3
org.apache.commons.collections4.list.AbstractListDecorator.equals(Object),3
org.apache.commons.collections4.list.NodeCachingLinkedList.addNodeToCache(Node),2
org.apache.commons.collections4.list.NodeCachingLinkedList.createNode(Object),2
org.apache.commons.collections4.list.NodeCachingLinkedList.getNodeFromCache(),2
org.apache.commons.collections4.list.NodeCachingLinkedList.isCacheFull(),2
org.apache.commons.collections4.list.NodeCachingLinkedList.removeAllNodes(),2
org.apache.commons.collections4.list.NodeCachingLinkedList.shrinkCacheToMaximumSize(),2
org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(List),2
"org.apache.commons.collections4.list.AbstractLinkedListJava21.addAll(int,Collection)",2
org.apache.commons.collections4.list.AbstractLinkedListJava21.contains(Object),2
org.apache.commons.collections4.list.AbstractLinkedListJava21.containsAll(Collection),4
org.apache.commons.collections4.list.AbstractLinkedListJava21.doReadObject(ObjectInputStream),2
org.apache.commons.collections4.list.AbstractLinkedListJava21.doWriteObject(ObjectOutputStream),2
org.apache.commons.collections4.list.AbstractLinkedListJava21.getFirst(),2
org.apache.commons.collections4.list.AbstractLinkedListJava21.getLast(),2
"org.apache.commons.collections4.list.AbstractLinkedListJava21.getNode(int,boolean)",12
org.apache.commons.collections4.list.AbstractLinkedListJava21.hashCode(),3
org.apache.commons.collections4.list.AbstractLinkedListJava21.indexOf(Object),4
org.apache.commons.collections4.list.AbstractLinkedListJava21.isEmpty(),2
org.apache.commons.collections4.list.AbstractLinkedListJava21.lastIndexOf(Object),4
org.apache.commons.collections4.list.AbstractLinkedListJava21.remove(Object),4
org.apache.commons.collections4.list.AbstractLinkedListJava21.removeFirst(),2
org.apache.commons.collections4.list.AbstractLinkedListJava21.removeLast(),2
org.apache.commons.collections4.list.AbstractLinkedListJava21.toArray(Object[]),8
org.apache.commons.collections4.list.AbstractLinkedListJava21.toString(),6
"org.apache.commons.collections4.list.TransformedList.transformedList(List,Transformer)",3
"org.apache.commons.collections4.list.AbstractLinkedList.addAll(int,Collection)",2
org.apache.commons.collections4.list.AbstractLinkedList.contains(Object),2
org.apache.commons.collections4.list.AbstractLinkedList.containsAll(Collection),4
org.apache.commons.collections4.list.AbstractLinkedList.doReadObject(ObjectInputStream),2
org.apache.commons.collections4.list.AbstractLinkedList.doWriteObject(ObjectOutputStream),2
org.apache.commons.collections4.list.AbstractLinkedList.getFirst(),2
org.apache.commons.collections4.list.AbstractLinkedList.getLast(),2
"org.apache.commons.collections4.list.AbstractLinkedList.getNode(int,boolean)",12
org.apache.commons.collections4.list.AbstractLinkedList.hashCode(),3
org.apache.commons.collections4.list.AbstractLinkedList.indexOf(Object),4
org.apache.commons.collections4.list.AbstractLinkedList.isEmpty(),2
org.apache.commons.collections4.list.AbstractLinkedList.lastIndexOf(Object),4
org.apache.commons.collections4.list.AbstractLinkedList.remove(Object),4
org.apache.commons.collections4.list.AbstractLinkedList.removeFirst(),2
org.apache.commons.collections4.list.AbstractLinkedList.removeLast(),2
org.apache.commons.collections4.list.AbstractLinkedList.toArray(Object[]),8
org.apache.commons.collections4.list.AbstractLinkedList.toString(),6
org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeChanged(Node),3
org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeInserted(Node),3
org.apache.commons.collections4.list.CursorableLinkedList.broadcastNodeRemoved(Node),3
org.apache.commons.collections4.list.CursorableLinkedList.removeAllNodes(),3
org.apache.commons.collections4.list.CursorableLinkedList.unregisterCursor(Cursor),6
com.fasterxml.jackson.databind.type.TypeFactory.rawClass(Type),7
com.fasterxml.jackson.databind.type.TypeFactory.findClass(String),29
"com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(JavaType,Class,boolean)",24
"com.fasterxml.jackson.databind.type.TypeFactory._bindingsForSubtype(JavaType,int,Class,boolean)",16
"com.fasterxml.jackson.databind.type.TypeFactory._verifyAndResolvePlaceholders(JavaType,JavaType)",6
"com.fasterxml.jackson.databind.type.TypeFactory.constructGeneralizedType(JavaType,Class)",4
"com.fasterxml.jackson.databind.type.TypeFactory.findTypeParameters(JavaType,Class)",2
"com.fasterxml.jackson.databind.type.TypeFactory.findFirstTypeParameter(JavaType,Class)",3
"com.fasterxml.jackson.databind.type.TypeFactory.moreSpecificType(JavaType,JavaType)",5
"com.fasterxml.jackson.databind.type.TypeFactory.constructType(Type,TypeBindings)",2
"com.fasterxml.jackson.databind.type.TypeFactory.constructType(Type,Class)",2
"com.fasterxml.jackson.databind.type.TypeFactory.constructType(Type,JavaType)",6
"com.fasterxml.jackson.databind.type.TypeFactory.constructCollectionType(Class,JavaType)",4
"com.fasterxml.jackson.databind.type.TypeFactory.constructCollectionLikeType(Class,JavaType)",2
"com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(Class,Class,Class)",2
"com.fasterxml.jackson.databind.type.TypeFactory.constructMapType(Class,JavaType,JavaType)",4
"com.fasterxml.jackson.databind.type.TypeFactory.constructMapLikeType(Class,JavaType,JavaType)",2
"com.fasterxml.jackson.databind.type.TypeFactory.constructParametricType(Class,Class[])",2
"com.fasterxml.jackson.databind.type.TypeFactory._mapType(Class,TypeBindings,JavaType,JavaType[])",5
"com.fasterxml.jackson.databind.type.TypeFactory._collectionType(Class,TypeBindings,JavaType,JavaType[])",3
"com.fasterxml.jackson.databind.type.TypeFactory._referenceType(Class,TypeBindings,JavaType,JavaType[])",3
"com.fasterxml.jackson.databind.type.TypeFactory._iterationType(Class,TypeBindings,JavaType,JavaType[])",3
"com.fasterxml.jackson.databind.type.TypeFactory._constructSimple(Class,TypeBindings,JavaType,JavaType[])",3
com.fasterxml.jackson.databind.type.TypeFactory._findWellKnownSimple(Class),9
"com.fasterxml.jackson.databind.type.TypeFactory._fromAny(ClassStack,Type,TypeBindings)",8
"com.fasterxml.jackson.databind.type.TypeFactory._applyModifiers(Type,JavaType)",9
"com.fasterxml.jackson.databind.type.TypeFactory._resolveSuperClass(ClassStack,Class,TypeBindings)",2
"com.fasterxml.jackson.databind.type.TypeFactory._resolveSuperInterfaces(ClassStack,Class,TypeBindings)",4
"com.fasterxml.jackson.databind.type.TypeFactory._fromWellKnownClass(ClassStack,Class,TypeBindings,JavaType,JavaType[])",20
"com.fasterxml.jackson.databind.type.TypeFactory._fromWellKnownInterface(ClassStack,Class,TypeBindings,JavaType,JavaType[])",4
"com.fasterxml.jackson.databind.type.TypeFactory._fromParamType(ClassStack,ParameterizedType,TypeBindings)",8
"com.fasterxml.jackson.databind.type.MapLikeType.upgradeFrom(JavaType,JavaType,JavaType)",2
"com.fasterxml.jackson.databind.type.MapLikeType.construct(Class,JavaType,JavaType)",3
com.fasterxml.jackson.databind.type.MapLikeType.withKeyType(JavaType),2
com.fasterxml.jackson.databind.type.MapLikeType.withContentType(JavaType),2
com.fasterxml.jackson.databind.type.MapLikeType.withHandlersFrom(JavaType),12
com.fasterxml.jackson.databind.type.MapLikeType.withStaticTyping(),2
com.fasterxml.jackson.databind.type.MapLikeType.buildCanonicalName(),3
com.fasterxml.jackson.databind.type.MapLikeType.hasHandlers(),4
com.fasterxml.jackson.databind.type.MapLikeType.equals(Object),7
com.fasterxml.jackson.databind.type.TypeBindings.readResolve(),3
"com.fasterxml.jackson.databind.type.TypeBindings.create(Class,List)",3
"com.fasterxml.jackson.databind.type.TypeBindings.create(Class,JavaType[])",26
"com.fasterxml.jackson.databind.type.TypeBindings.create(Class,JavaType)",4
"com.fasterxml.jackson.databind.type.TypeBindings.create(Class,JavaType,JavaType)",4
"com.fasterxml.jackson.databind.type.TypeBindings.create(List,List)",5
"com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(Class,JavaType)",6
"com.fasterxml.jackson.databind.type.TypeBindings.createIfNeeded(Class,JavaType[])",14
com.fasterxml.jackson.databind.type.TypeBindings.withUnboundVariable(String),4
com.fasterxml.jackson.databind.type.TypeBindings.withoutVariable(String),2
com.fasterxml.jackson.databind.type.TypeBindings.findBoundType(String),8
com.fasterxml.jackson.databind.type.TypeBindings.invalidCacheKey(),4
com.fasterxml.jackson.databind.type.TypeBindings.isEmpty(),2
com.fasterxml.jackson.databind.type.TypeBindings.getBoundName(int),3
com.fasterxml.jackson.databind.type.TypeBindings.getBoundType(int),4
com.fasterxml.jackson.databind.type.TypeBindings.getBoundTypeOrNull(int),3
com.fasterxml.jackson.databind.type.TypeBindings.getTypeParameters(),5
com.fasterxml.jackson.databind.type.TypeBindings.asKey(Class),2
com.fasterxml.jackson.databind.type.TypeBindings.toString(),6
com.fasterxml.jackson.databind.type.TypeBindings.equals(Object),5
com.fasterxml.jackson.databind.type.ClassKey.equals(Object),5
"com.fasterxml.jackson.databind.type.MapType.construct(Class,JavaType,JavaType)",3
com.fasterxml.jackson.databind.type.MapType.withStaticTyping(),2
com.fasterxml.jackson.databind.type.MapType.withContentType(JavaType),2
com.fasterxml.jackson.databind.type.MapType.withKeyType(JavaType),2
"com.fasterxml.jackson.databind.type.ReferenceType.upgradeFrom(JavaType,JavaType)",3
com.fasterxml.jackson.databind.type.ReferenceType.withContentType(JavaType),2
com.fasterxml.jackson.databind.type.ReferenceType.withTypeHandler(Object),2
com.fasterxml.jackson.databind.type.ReferenceType.withContentTypeHandler(Object),2
com.fasterxml.jackson.databind.type.ReferenceType.withValueHandler(Object),2
com.fasterxml.jackson.databind.type.ReferenceType.withContentValueHandler(Object),2
com.fasterxml.jackson.databind.type.ReferenceType.withStaticTyping(),2
com.fasterxml.jackson.databind.type.ReferenceType.buildCanonicalName(),3
com.fasterxml.jackson.databind.type.ReferenceType.isAnchorType(),2
com.fasterxml.jackson.databind.type.ReferenceType.equals(Object),5
com.fasterxml.jackson.databind.type.TypeBase.toCanonical(),2
com.fasterxml.jackson.databind.type.TypeBase.getInterfaces(),4
com.fasterxml.jackson.databind.type.TypeBase.findSuperType(Class),15
com.fasterxml.jackson.databind.type.TypeBase.findTypeParameters(Class),2
com.fasterxml.jackson.databind.type.TypeBase._bogusSuperClass(Class),2
com.fasterxml.jackson.databind.type.ClassStack.addSelfReference(ResolvedRecursiveType),2
com.fasterxml.jackson.databind.type.ClassStack.resolveSelfReferences(JavaType),3
com.fasterxml.jackson.databind.type.ClassStack.find(Class),5
com.fasterxml.jackson.databind.type.ClassStack.toString(),4
com.fasterxml.jackson.databind.type.ResolvedRecursiveType.setReference(JavaType),2
com.fasterxml.jackson.databind.type.ResolvedRecursiveType.getSuperClass(),2
com.fasterxml.jackson.databind.type.ResolvedRecursiveType.getBindings(),2
com.fasterxml.jackson.databind.type.ResolvedRecursiveType.getGenericSignature(StringBuilder),2
com.fasterxml.jackson.databind.type.ResolvedRecursiveType.getErasedSignature(StringBuilder),2
com.fasterxml.jackson.databind.type.ResolvedRecursiveType.toString(),2
com.fasterxml.jackson.databind.type.TypeParser.withFactory(TypeFactory),2
com.fasterxml.jackson.databind.type.TypeParser.parse(String),3
"com.fasterxml.jackson.databind.type.TypeParser.parseType(MyTokenizer,int)",4
"com.fasterxml.jackson.databind.type.TypeParser.parseTypes(MyTokenizer,int)",9
"com.fasterxml.jackson.databind.type.TypeParser.findClass(String,MyTokenizer)",3
com.fasterxml.jackson.databind.type.SimpleType.construct(Class),4
com.fasterxml.jackson.databind.type.SimpleType.withTypeHandler(Object),2
com.fasterxml.jackson.databind.type.SimpleType.withValueHandler(Object),2
com.fasterxml.jackson.databind.type.SimpleType.withStaticTyping(),2
com.fasterxml.jackson.databind.type.SimpleType.buildCanonicalName(),5
com.fasterxml.jackson.databind.type.SimpleType.getGenericSignature(StringBuilder),3
"com.fasterxml.jackson.databind.type.SimpleType._buildSuperClass(Class,TypeBindings)",3
com.fasterxml.jackson.databind.type.SimpleType.equals(Object),5
com.fasterxml.jackson.databind.type.ArrayType.withTypeHandler(Object),2
com.fasterxml.jackson.databind.type.ArrayType.withContentTypeHandler(Object),2
com.fasterxml.jackson.databind.type.ArrayType.withValueHandler(Object),2
com.fasterxml.jackson.databind.type.ArrayType.withContentValueHandler(Object),2
com.fasterxml.jackson.databind.type.ArrayType.withStaticTyping(),2
com.fasterxml.jackson.databind.type.ArrayType.hasHandlers(),3
com.fasterxml.jackson.databind.type.ArrayType.equals(Object),4
"com.fasterxml.jackson.databind.type.CollectionLikeType.construct(Class,JavaType)",3
"com.fasterxml.jackson.databind.type.CollectionLikeType.upgradeFrom(JavaType,JavaType)",2
com.fasterxml.jackson.databind.type.CollectionLikeType.withContentType(JavaType),2
com.fasterxml.jackson.databind.type.CollectionLikeType.withHandlersFrom(JavaType),3
com.fasterxml.jackson.databind.type.CollectionLikeType.withStaticTyping(),2
com.fasterxml.jackson.databind.type.CollectionLikeType.hasHandlers(),3
com.fasterxml.jackson.databind.type.CollectionLikeType.buildCanonicalName(),3
com.fasterxml.jackson.databind.type.CollectionLikeType.equals(Object),6
"com.fasterxml.jackson.databind.type.CollectionType.construct(Class,JavaType)",3
com.fasterxml.jackson.databind.type.CollectionType.withContentType(JavaType),2
com.fasterxml.jackson.databind.type.CollectionType.withStaticTyping(),2
"com.fasterxml.jackson.databind.jdk14.JDK14Util.findCanonicalRecordConstructor(MapperConfig,AnnotatedClass,List)",34
com.fasterxml.jackson.databind.jsonschema.JsonSchema.equals(Object),6
com.fasterxml.jackson.databind.ObjectMapper._checkInvalidCopy(Class),2
com.fasterxml.jackson.databind.ObjectMapper.registerModule(Module),14
com.fasterxml.jackson.databind.ObjectMapper.registerModules(Module[]),2
com.fasterxml.jackson.databind.ObjectMapper.registerModules(Iterable),2
com.fasterxml.jackson.databind.ObjectMapper.getRegisteredModuleIds(),2
com.fasterxml.jackson.databind.ObjectMapper.findModules(ClassLoader),2
com.fasterxml.jackson.databind.ObjectMapper.setMixInResolver(MixInResolver),2
"com.fasterxml.jackson.databind.ObjectMapper.activateDefaultTyping(PolymorphicTypeValidator,DefaultTyping,As)",2
"com.fasterxml.jackson.databind.ObjectMapper.configure(MapperFeature,boolean)",4
"com.fasterxml.jackson.databind.ObjectMapper.configure(SerializationFeature,boolean)",2
"com.fasterxml.jackson.databind.ObjectMapper.configure(DeserializationFeature,boolean)",2
"com.fasterxml.jackson.databind.ObjectMapper.configure(DatatypeFeature,boolean)",2
com.fasterxml.jackson.databind.ObjectMapper.readTree(JsonParser),5
com.fasterxml.jackson.databind.ObjectMapper.readTree(String),7
"com.fasterxml.jackson.databind.ObjectMapper.writeValue(JsonGenerator,Object)",15
"com.fasterxml.jackson.databind.ObjectMapper.writeTree(JsonGenerator,TreeNode)",2
"com.fasterxml.jackson.databind.ObjectMapper.writeTree(JsonGenerator,JsonNode)",2
"com.fasterxml.jackson.databind.ObjectMapper.treeToValue(TreeNode,Class)",98
"com.fasterxml.jackson.databind.ObjectMapper.treeToValue(TreeNode,JavaType)",100
"com.fasterxml.jackson.databind.ObjectMapper.readValue(String,JavaType)",7
com.fasterxml.jackson.core.base.ParserBase.hasTextCharacters(),3
com.fasterxml.jackson.core.base.ParserBase.getBinaryValue(Base64Variant),3
com.fasterxml.jackson.core.base.ParserBase.getTokenColumnNr(),2
com.fasterxml.jackson.core.base.ParserBase._releaseBuffers(),2
com.fasterxml.jackson.core.base.ParserBase._handleEOF(),3
com.fasterxml.jackson.core.base.ParserBase._getByteArrayBuilder(),2
"com.fasterxml.jackson.core.base.ParserBase.reset(boolean,int,int,int)",3
com.fasterxml.jackson.core.base.ParserBase.isNaN(),3
com.fasterxml.jackson.core.base.ParserBase.getNumberValue(),22
com.fasterxml.jackson.core.base.ParserBase.getNumberValueExact(),30
com.fasterxml.jackson.core.base.ParserBase.getNumberValueDeferred(),25
com.fasterxml.jackson.core.base.ParserBase.getNumberType(),12
com.fasterxml.jackson.core.base.ParserBase.getIntValue(),4
com.fasterxml.jackson.core.base.ParserBase.getLongValue(),5
com.fasterxml.jackson.core.base.ParserBase.getBigIntegerValue(),5
com.fasterxml.jackson.core.base.ParserBase.getFloatValue(),5
com.fasterxml.jackson.core.base.ParserBase.getDoubleValue(),5
com.fasterxml.jackson.core.base.ParserBase.getDecimalValue(),5
com.fasterxml.jackson.core.base.ParserBase._parseNumericValue(int),26
com.fasterxml.jackson.core.base.ParserBase._parseIntValue(),10
com.fasterxml.jackson.core.base.ParserBase._parseSlowFloat(int),4
com.fasterxml.jackson.core.base.ParserBase._parseSlowInt(int),9
com.fasterxml.jackson.core.base.ParserBase.convertNumberToInt(),12
com.fasterxml.jackson.core.base.ParserBase.convertNumberToLong(),11
com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigInteger(),6
com.fasterxml.jackson.core.base.ParserBase.convertNumberToDouble(),9
com.fasterxml.jackson.core.base.ParserBase.convertNumberToFloat(),9
com.fasterxml.jackson.core.base.ParserBase.convertNumberToBigDecimal(),6
com.fasterxml.jackson.core.base.ParserBase._getBigInteger(),8
com.fasterxml.jackson.core.base.ParserBase._getBigDecimal(),8
com.fasterxml.jackson.core.base.ParserBase._getNumberDouble(),7
com.fasterxml.jackson.core.base.ParserBase._getNumberFloat(),7
"com.fasterxml.jackson.core.base.ParserBase._reportMismatchedEndMarker(int,char)",2
"com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(Base64Variant,int,int)",8
"com.fasterxml.jackson.core.base.ParserBase._decodeBase64Escape(Base64Variant,char,int)",10
"com.fasterxml.jackson.core.base.ParserBase.reportInvalidBase64Char(Base64Variant,int,int,String)",10
com.fasterxml.jackson.core.base.ParserBase._getSourceReference(),2
com.fasterxml.jackson.core.base.ParserBase._contentReference(),2
com.fasterxml.jackson.core.base.ParserBase.loadMoreGuaranteed(),2
"com.fasterxml.jackson.core.JsonFactoryBuilder.enable(JsonReadFeature,JsonReadFeature[])",2
"com.fasterxml.jackson.core.JsonFactoryBuilder.configure(JsonReadFeature,boolean)",2
"com.fasterxml.jackson.core.JsonFactoryBuilder.configure(JsonWriteFeature,boolean)",2
com.fasterxml.jackson.core.JsonFactoryBuilder.rootValueSeparator(String),2
com.fasterxml.jackson.core.JsonFactoryBuilder.highestNonEscapedChar(int),2
com.fasterxml.jackson.core.JsonFactoryBuilder.quoteChar(char),2
com.fasterxml.jackson.core.JsonpCharacterEscapes.getEscapeSequence(int),3
com.fasterxml.jackson.core.ErrorReportConfiguration.overrideDefaultErrorReportConfiguration(ErrorReportConfiguration),2
com.fasterxml.jackson.core.JsonLocation._wrap(Object),2
com.fasterxml.jackson.core.JsonLocation.sourceDescription(),2
com.fasterxml.jackson.core.JsonLocation.appendOffsetDescription(StringBuilder),8
com.fasterxml.jackson.core.JsonLocation.hashCode(),2
com.fasterxml.jackson.core.JsonLocation.equals(Object),15
com.fasterxml.jackson.databind.DeserializationConfig._withBase(BaseSettings),2
com.fasterxml.jackson.databind.DeserializationConfig.with(SubtypeResolver),2
com.fasterxml.jackson.databind.DeserializationConfig.withRootName(PropertyName),4
com.fasterxml.jackson.databind.DeserializationConfig.withView(Class),2
com.fasterxml.jackson.databind.DeserializationConfig.with(ContextAttributes),2
com.fasterxml.jackson.databind.DeserializationConfig.with(DeserializationFeature),2
"com.fasterxml.jackson.databind.DeserializationConfig.with(DeserializationFeature,DeserializationFeature[])",4
com.fasterxml.jackson.databind.DeserializationConfig.withFeatures(DeserializationFeature[]),4
com.fasterxml.jackson.databind.DeserializationConfig.without(DeserializationFeature),2
"com.fasterxml.jackson.databind.DeserializationConfig.without(DeserializationFeature,DeserializationFeature[])",4
com.fasterxml.jackson.databind.DeserializationConfig.withoutFeatures(DeserializationFeature[]),4
com.fasterxml.jackson.databind.DeserializationConfig.with(Feature),3
com.fasterxml.jackson.databind.DeserializationConfig.withFeatures(Feature[]),6
com.fasterxml.jackson.databind.DeserializationConfig.without(Feature),3
com.fasterxml.jackson.databind.DeserializationConfig.withoutFeatures(Feature[]),6
com.fasterxml.jackson.databind.DeserializationConfig.with(FormatFeature),4
com.fasterxml.jackson.databind.DeserializationConfig.withFeatures(FormatFeature[]),13
com.fasterxml.jackson.databind.DeserializationConfig.without(FormatFeature),4
com.fasterxml.jackson.databind.DeserializationConfig.withoutFeatures(FormatFeature[]),13
com.fasterxml.jackson.databind.DeserializationConfig._withJsonReadFeatures(FormatFeature[]),20
com.fasterxml.jackson.databind.DeserializationConfig._withoutJsonReadFeatures(FormatFeature[]),20
com.fasterxml.jackson.databind.DeserializationConfig.with(JsonNodeFactory),2
com.fasterxml.jackson.databind.DeserializationConfig.with(ConstructorDetector),2
com.fasterxml.jackson.databind.DeserializationConfig.withHandler(DeserializationProblemHandler),2
com.fasterxml.jackson.databind.DeserializationConfig.withNoProblemHandlers(),2
com.fasterxml.jackson.databind.DeserializationConfig.initialize(JsonParser),4
"com.fasterxml.jackson.databind.DeserializationConfig.initialize(JsonParser,FormatSchema)",8
com.fasterxml.jackson.databind.DeserializationConfig.useRootWrapping(),3
com.fasterxml.jackson.databind.DeserializationConfig.isEnabled(DeserializationFeature),2
"com.fasterxml.jackson.databind.DeserializationConfig.isEnabled(Feature,JsonFactory)",3
com.fasterxml.jackson.databind.DeserializationConfig.hasDeserializationFeatures(int),2
com.fasterxml.jackson.databind.DeserializationConfig.hasSomeOfFeatures(int),2
com.fasterxml.jackson.databind.DeserializationConfig.getConstructorDetector(),2
com.fasterxml.jackson.databind.DeserializationConfig.findTypeDeserializer(JavaType),3
com.fasterxml.jackson.databind.JavaType.withHandlersFrom(JavaType),4
com.fasterxml.jackson.databind.JavaType.forcedNarrowBy(Class),2
com.fasterxml.jackson.databind.JavaType.hasRawClass(Class),2
com.fasterxml.jackson.databind.JavaType.isTypeOrSubTypeOf(Class),3
com.fasterxml.jackson.databind.JavaType.isTypeOrSuperTypeOf(Class),3
com.fasterxml.jackson.databind.JavaType.isConcrete(),2
com.fasterxml.jackson.databind.JavaType.isEnumImplType(),3
com.fasterxml.jackson.databind.JavaType.isJavaLangObject(),2
com.fasterxml.jackson.databind.JavaType.hasGenericTypes(),2
com.fasterxml.jackson.databind.JavaType.containedTypeOrUnknown(int),2
com.fasterxml.jackson.databind.JavaType.hasValueHandler(),2
com.fasterxml.jackson.databind.JavaType.hasHandlers(),3
com.fasterxml.jackson.databind.JsonNode.isEmpty(),2
com.fasterxml.jackson.databind.JsonNode.isValueNode(),2
com.fasterxml.jackson.databind.JsonNode.isContainerNode(),3
com.fasterxml.jackson.databind.JsonNode.at(JsonPointer),3
com.fasterxml.jackson.databind.JsonNode.isPojo(),2
com.fasterxml.jackson.databind.JsonNode.isNumber(),2
com.fasterxml.jackson.databind.JsonNode.isTextual(),2
com.fasterxml.jackson.databind.JsonNode.isBoolean(),2
com.fasterxml.jackson.databind.JsonNode.isNull(),2
com.fasterxml.jackson.databind.JsonNode.isBinary(),2
com.fasterxml.jackson.databind.JsonNode.asText(String),2
com.fasterxml.jackson.databind.JsonNode.requiredAt(JsonPointer),3
com.fasterxml.jackson.databind.JsonNode.has(String),2
com.fasterxml.jackson.databind.JsonNode.has(int),2
com.fasterxml.jackson.databind.JsonNode.hasNonNull(String),3
com.fasterxml.jackson.databind.JsonNode.hasNonNull(int),3
com.fasterxml.jackson.databind.JsonNode.findValues(String),2
com.fasterxml.jackson.databind.JsonNode.findValuesAsText(String),2
com.fasterxml.jackson.databind.JsonNode.findParents(String),2
com.fasterxml.jackson.databind.util.TokenBuffer.isEmpty(),3
com.fasterxml.jackson.databind.util.TokenBuffer.append(TokenBuffer),24
com.fasterxml.jackson.databind.util.TokenBuffer._appendNativeIds(StringBuilder),4
com.fasterxml.jackson.databind.util.TokenBuffer.isEnabled(Feature),2
com.fasterxml.jackson.databind.util.TokenBuffer.writeEndArray(),2
com.fasterxml.jackson.databind.util.TokenBuffer.writeEndObject(),2
com.fasterxml.jackson.databind.util.TokenBuffer.writeString(String),2
com.fasterxml.jackson.databind.util.TokenBuffer.writeString(SerializableString),2
"com.fasterxml.jackson.databind.util.TokenBuffer.writeString(Reader,int)",48
"com.fasterxml.jackson.databind.util.TokenBuffer.writeRawValue(String,int,int)",3
com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(BigDecimal),2
com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(BigInteger),2
"com.fasterxml.jackson.databind.util.TokenBuffer.writeNumber(String,boolean)",2
com.fasterxml.jackson.databind.util.TokenBuffer.writeBoolean(boolean),2
com.fasterxml.jackson.databind.util.TokenBuffer.writeObject(Object),5
com.fasterxml.jackson.databind.util.TokenBuffer.writeTree(TreeNode),3
com.fasterxml.jackson.databind.util.TokenBuffer.copyCurrentEvent(JsonParser),32
com.fasterxml.jackson.databind.util.TokenBuffer.copyCurrentStructure(JsonParser),22
"com.fasterxml.jackson.databind.util.TokenBuffer._copyBufferValue(JsonParser,JsonToken)",22
com.fasterxml.jackson.databind.util.TokenBuffer._checkNativeIds(JsonParser),4
com.fasterxml.jackson.databind.util.TokenBuffer._appendValue(JsonToken),4
"com.fasterxml.jackson.databind.util.TokenBuffer._appendValue(JsonToken,Object)",4
com.fasterxml.jackson.databind.util.TokenBuffer._appendFieldName(Object),4
com.fasterxml.jackson.databind.util.TokenBuffer._appendStartMarker(JsonToken),4
com.fasterxml.jackson.databind.util.TokenBuffer._appendEndMarker(JsonToken),2
com.fasterxml.jackson.databind.util.TokenBufferReadContext.createRootContext(JsonStreamContext),2
com.fasterxml.jackson.databind.util.TokenBufferReadContext.parentOrCopy(),3
com.fasterxml.jackson.databind.util.TokenBufferReadContext.hasCurrentName(),2
com.fasterxml.jackson.databind.introspect.PotentialCreator.introspectParamNames(MapperConfig),12
"com.fasterxml.jackson.databind.introspect.PotentialCreator.introspectParamNames(MapperConfig,PropertyName[])",6
com.fasterxml.jackson.databind.introspect.PotentialCreator.hasExplicitNames(),4
com.fasterxml.jackson.databind.introspect.PotentialCreator.hasNameFor(int),3
com.fasterxml.jackson.databind.introspect.PotentialCreator.hasNameOrInjectForAllParams(MapperConfig),9
com.fasterxml.jackson.databind.introspect.PotentialCreator.implicitNameSimple(int),2
com.fasterxml.jackson.databind.introspect.PotentialCreator.propertyDefs(),3
"com.fasterxml.jackson.databind.introspect.EnumNamingStrategyFactory.createEnumNamingStrategyInstance(Object,boolean,EnumNamingStrategy)",6
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.readResolve(),2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.isAnnotationBundle(Annotation),3
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findEnumValues(MapperConfig,AnnotatedClass,Enum[],String[])",12
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findEnumAliases(MapperConfig,AnnotatedClass,Enum[],String[][])",6
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findDefaultEnumValue(AnnotatedClass,Enum[])",13
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findRootName(AnnotatedClass),4
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findAutoDetectVisibility(AnnotatedClass,VisibilityChecker)",2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findImplicitPropertyName(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findPropertyAliases(Annotated),4
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findUnwrappingNameTransformer(AnnotatedMember),3
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findInjectableValue(AnnotatedMember),5
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.resolveSetterConflict(MapperConfig,AnnotatedMethod,AnnotatedMethod)",7
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findPropertyTypeResolver(MapperConfig,AnnotatedMember,JavaType)",3
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findPropertyContentTypeResolver(MapperConfig,AnnotatedMember,JavaType)",2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findSubtypes(Annotated),5
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findSubtypesCheckRepeatedNames(String,Type[])",32
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findObjectIdInfo(Annotated),3
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findObjectReferenceInfo(Annotated,ObjectIdInfo)",3
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findSerializer(Annotated),7
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findSerializationConverter(Annotated),2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findSerializationContentConverter(AnnotatedMember),2
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findAndAddVirtualProperties(MapperConfig,AnnotatedClass,List)",16
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._constructVirtualProperty(Attr,MapperConfig,AnnotatedClass,JavaType)",4
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._constructVirtualProperty(Prop,MapperConfig,AnnotatedClass)",8
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findNameForSerialization(Annotated),13
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findDeserializationConverter(Annotated),2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findDeserializationContentConverter(AnnotatedMember),2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findPOJOBuilder(AnnotatedClass),2
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findNameForDeserialization(Annotated),13
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.hasCreatorAnnotation(Annotated),7
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.findCreatorAnnotation(MapperConfig,Annotated)",15
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._isIgnorable(Annotated),4
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._classIfExplicit(Class),3
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._classIfExplicit(Class,Class)",3
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._propertyName(String,String)",4
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._findConstructorName(Annotated),5
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._findTypeResolver(MapperConfig,Annotated,JavaType)",99
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._primitiveAndWrapper(Class,Class)",5
"com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._primitiveAndWrapper(JavaType,Class)",4
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.forSerialization(SerializationConfig,JavaType,MixInResolver)",3
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.forDeserialization(DeserializationConfig,JavaType,MixInResolver)",3
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.forCreation(DeserializationConfig,JavaType,MixInResolver)",3
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.forClassAnnotations(MapperConfig,JavaType,MixInResolver)",2
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.forDirectClassAnnotations(MapperConfig,JavaType,MixInResolver)",2
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.collectProperties(MapperConfig,JavaType,MixInResolver,boolean)",2
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector._findStdTypeDesc(MapperConfig,JavaType)",12
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector._isStdJDKCollection(JavaType),8
"com.fasterxml.jackson.databind.introspect.BasicClassIntrospector._findStdJdkCollectionDesc(MapperConfig,JavaType)",2
"com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver.narrowMethodTypeParameters(Method,JavaType,TypeFactory,TypeResolutionContext)",2
"com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver.bindMethodTypeParameters(Method,JavaType,TypeResolutionContext)",70
com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver.maybeGetTypeVariable(Type),5
com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver.maybeGetParameterizedType(Type),5
"com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver.pessimisticallyValidateBounds(TypeResolutionContext,JavaType,Type[])",4
"com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver.pessimisticallyValidateBound(TypeResolutionContext,JavaType,Type)",8
"com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.collectCreators(AnnotationIntrospector,TypeFactory,TypeResolutionContext,JavaType,Class,boolean)",2
"com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.constructNonDefaultConstructor(Ctor,Ctor)",18
"com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.constructFactoryCreator(Method,TypeResolutionContext,Method)",4
"com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.collectAnnotations(Annotation[][],Annotation[][])",4
"com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.collectAnnotations(Ctor,Ctor)",3
"com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector.collectAnnotations(AnnotatedElement,AnnotatedElement)",2
"com.fasterxml.jackson.databind.DeserializationContext.constructSpecializedType(JavaType,Class)",2
com.fasterxml.jackson.databind.DeserializationContext.getContextualType(),2
com.fasterxml.jackson.databind.DeserializationContext.isEnabled(DeserializationFeature),2
com.fasterxml.jackson.databind.DeserializationContext.hasDeserializationFeatures(int),2
com.fasterxml.jackson.databind.DeserializationContext.hasSomeOfFeatures(int),2
"com.fasterxml.jackson.databind.DeserializationContext.findInjectableValue(Object,BeanProperty,Object)",2
"com.fasterxml.jackson.databind.DeserializationContext.hasValueDeserializerFor(JavaType,AtomicReference)",13
"com.fasterxml.jackson.databind.DeserializationContext.findContextualValueDeserializer(JavaType,BeanProperty)",2
com.fasterxml.jackson.databind.DeserializationContext.findRootValueDeserializer(JavaType),3
"com.fasterxml.jackson.databind.DeserializationContext.findKeyDeserializer(JavaType,BeanProperty)",8
com.fasterxml.jackson.databind.DeserializationContext.constructType(Class),2
com.fasterxml.jackson.databind.DeserializationContext.leaseObjectBuffer(),2
com.fasterxml.jackson.databind.DeserializationContext.returnObjectBuffer(ObjectBuffer),3
com.fasterxml.jackson.databind.DeserializationContext.getArrayBuilders(),2
com.fasterxml.jackson.databind.DeserializationContext.parseDate(String),3
"com.fasterxml.jackson.databind.DeserializationContext.readValue(JsonParser,JavaType)",2
"com.fasterxml.jackson.databind.DeserializationContext.readPropertyValue(JsonParser,BeanProperty,JavaType)",2
com.fasterxml.jackson.databind.DeserializationContext.readTree(JsonParser),5
com.fasterxml.jackson.databind.DeserializationContext._treeAsTokens(JsonNode),2
"com.fasterxml.jackson.databind.DeserializationContext._readValue(JsonParser,JsonDeserializer)",2
"com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(JsonParser,JsonDeserializer,Object,String)",8
"com.fasterxml.jackson.databind.DeserializationContext.handleWeirdKey(Class,String,String,Object[])",8
"com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(Class,String,String,Object[])",6
"com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNumberValue(Class,Number,String,Object[])",6
"com.fasterxml.jackson.databind.DeserializationContext.handleWeirdNativeValue(JavaType,Object,JsonParser)",8
"com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(Class,ValueInstantiator,JsonParser,String,Object[])",24
"com.fasterxml.jackson.databind.DeserializationContext.handleInstantiationProblem(Class,Object,Throwable)",9
"com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(JavaType,JsonToken,JsonParser,String,Object[])",30
"com.fasterxml.jackson.databind.DeserializationContext.handleUnknownTypeId(JavaType,String,TypeIdResolver,String)",10
"com.fasterxml.jackson.databind.DeserializationContext.handleMissingTypeId(JavaType,TypeIdResolver,String)",8
com.fasterxml.jackson.databind.DeserializationContext.handleBadMerge(JsonDeserializer),2
"com.fasterxml.jackson.databind.DeserializationContext._isCompatible(Class,Object)",5
"com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(BeanProperty,String,Object[])",6
"com.fasterxml.jackson.databind.DeserializationContext.reportPropertyInputMismatch(Class,String,String,Object[])",2
"com.fasterxml.jackson.databind.DeserializationContext.instantiationException(Class,Throwable)",3
com.fasterxml.jackson.databind.DeserializationContext._getDateFormat(),2
"com.fasterxml.jackson.databind.deser.impl.CreatorCandidate.construct(AnnotationIntrospector,AnnotatedWithParams,BeanPropertyDefinition[])",3
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate.paramName(int),2
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate.explicitParamName(int),3
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate.findImplicitParamName(int),3
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate.findOnlyParamWithoutInjectionX(),6
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.hasParameter(SettableBeanProperty),8
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.getParameter(SettableBeanProperty),24
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.getParameters(SettableBeanProperty[]),48
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._createAndSetAnySetterValue(),6
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.readIdProperty(String),3
"com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.handleIdValue(DeserializationContext,Object)",4
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.isComplete(),2
"com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.assignParameter(SettableBeanProperty,Object)",7
"com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators.findStdValueInstantiator(DeserializationConfig,Class)",15
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withCaseInsensitivity(boolean),2
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.init(Collection),6
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withProperty(SettableBeanProperty),6
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.assignIndexes(),3
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.renameAll(NameTransformer),5
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.withoutProperties(Collection,Collection)",14
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.replace(SettableBeanProperty,SettableBeanProperty)",4
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.remove(SettableBeanProperty),10
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.hasAliases(),2
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._properties(),3
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.getPropertyName(SettableBeanProperty),2
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(int),6
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.find(String),7
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._find2(String,int,Object)",9
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._findWithAlias(String),4
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._find2ViaAlias(String,int,Object)",8
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.findDeserializeAndSet(JsonParser,DeserializationContext,Object,String)",3
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.toString(),6
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.wrapAndThrow(Throwable,Object,String,DeserializationContext)",60
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._findFromOrdered(SettableBeanProperty),4
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._buildAliasMapping(Map,boolean,Locale)",9
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.withValueDeserializer(JsonDeserializer),3
"com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.deserializeSetAndReturn(JsonParser,DeserializationContext,Object)",3
"com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.setAndReturn(Object,Object)",2
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider.forValue(Object),2
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider.isSkipper(NullValueProvider),2
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider.isNuller(NullValueProvider),2
"com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty.setAndReturn(Object,Object)",12
com.fasterxml.jackson.databind.deser.impl.FieldProperty.withValueDeserializer(JsonDeserializer),3
com.fasterxml.jackson.databind.deser.impl.FieldProperty.getAnnotation(Class),2
"com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeAndSet(JsonParser,DeserializationContext,Object)",14
"com.fasterxml.jackson.databind.deser.impl.FieldProperty.deserializeSetAndReturn(JsonParser,DeserializationContext,Object)",14
"com.fasterxml.jackson.databind.deser.impl.FieldProperty.set(Object,Object)",7
"com.fasterxml.jackson.databind.deser.impl.FieldProperty.setAndReturn(Object,Object)",7
"org.apache.commons.collections4.functors.InstantiateTransformer.instantiateTransformer(Class[],Object[])",43
org.apache.commons.collections4.functors.InstantiateTransformer.transform(Class),33
org.apache.commons.collections4.functors.OnePredicate.onePredicate(Predicate[]),3
org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(Object),2
"org.apache.commons.collections4.functors.EqualPredicate.equalPredicate(Object,Equator)",2
org.apache.commons.collections4.functors.EqualPredicate.test(Object),2
"org.apache.commons.collections4.functors.InstantiateFactory.instantiateFactory(Class,Class[],Object[])",43
org.apache.commons.collections4.functors.InstantiateFactory.create(),20
org.apache.commons.collections4.functors.InstantiateFactory.findConstructor(),5
org.apache.commons.collections4.functors.IfClosure.execute(Object),2
"org.apache.commons.collections4.comparators.ComparatorChain.addComparator(Comparator,boolean)",2
org.apache.commons.collections4.comparators.ComparatorChain.checkChainIntegrity(),2
org.apache.commons.collections4.comparators.ComparatorChain.checkLocked(),2
"org.apache.commons.collections4.comparators.ComparatorChain.compare(Object,Object)",16
org.apache.commons.collections4.comparators.ComparatorChain.equals(Object),6
org.apache.commons.collections4.comparators.ComparatorChain.hashCode(),4
"org.apache.commons.collections4.comparators.ComparatorChain.setComparator(int,Comparator,boolean)",2
org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(boolean),2
"org.apache.commons.collections4.comparators.BooleanComparator.compare(Boolean,Boolean)",3
org.apache.commons.collections4.comparators.BooleanComparator.equals(Object),4
org.apache.commons.collections4.comparators.BooleanComparator.hashCode(),2
org.apache.commons.collections4.comparators.ReverseComparator.equals(Object),4
org.apache.commons.collections4.comparators.TransformingComparator.equals(Object),6
org.apache.commons.collections4.comparators.TransformingComparator.hashCode(),4
org.apache.commons.collections4.comparators.FixedOrderComparator.add(Object),2
"org.apache.commons.collections4.comparators.FixedOrderComparator.addAsEqual(Object,Object)",3
org.apache.commons.collections4.comparators.FixedOrderComparator.checkLocked(),2
"org.apache.commons.collections4.comparators.FixedOrderComparator.compare(Object,Object)",19
org.apache.commons.collections4.comparators.FixedOrderComparator.equals(Object),8
"org.apache.commons.collections4.comparators.NullComparator.compare(Object,Object)",6
org.apache.commons.collections4.comparators.NullComparator.equals(Object),6
org.apache.commons.collections4.comparators.NullComparator.hashCode(),2
"org.apache.commons.collections4.ArrayUtils.contains(Object[],Object)",2
"org.apache.commons.collections4.CollectionUtils.addAll(Collection,Iterable)",2
"org.apache.commons.collections4.CollectionUtils.collate(Iterable,Iterable,Comparator,boolean)",15
"org.apache.commons.collections4.CollectionUtils.collect(Iterable,Transformer,Collection)",2
"org.apache.commons.collections4.CollectionUtils.collect(Iterable,Transformer)",6
"org.apache.commons.collections4.CollectionUtils.containsAny(Collection,Object[])",8
"org.apache.commons.collections4.CollectionUtils.countMatches(Iterable,Predicate)",2
org.apache.commons.collections4.CollectionUtils.emptyIfNull(Collection),2
"org.apache.commons.collections4.CollectionUtils.exists(Iterable,Predicate)",3
"org.apache.commons.collections4.CollectionUtils.filterInverse(Iterable,Predicate)",2
"org.apache.commons.collections4.CollectionUtils.find(Iterable,Predicate)",2
"org.apache.commons.collections4.CollectionUtils.forAllButLastDo(Iterable,Closure)",2
"org.apache.commons.collections4.CollectionUtils.forAllButLastDo(Iterator,Closure)",2
"org.apache.commons.collections4.CollectionUtils.forAllDo(Iterable,Closure)",2
"org.apache.commons.collections4.CollectionUtils.forAllDo(Iterator,Closure)",2
"org.apache.commons.collections4.CollectionUtils.get(Object,int)",9
"org.apache.commons.collections4.CollectionUtils.isEqualCollection(Collection,Collection,Equator)",2
org.apache.commons.collections4.CollectionUtils.isFull(Collection),4
org.apache.commons.collections4.CollectionUtils.isNotEmpty(Collection),2
"org.apache.commons.collections4.CollectionUtils.isProperSubCollection(Collection,Collection)",3
"org.apache.commons.collections4.CollectionUtils.isSubCollection(Collection,Collection)",4
"org.apache.commons.collections4.CollectionUtils.matchesAll(Iterable,Predicate)",3
org.apache.commons.collections4.CollectionUtils.maxSize(Collection),4
org.apache.commons.collections4.CollectionUtils.permutations(Collection),2
"org.apache.commons.collections4.CollectionUtils.removeAll(Iterable,Iterable,Equator)",3
"org.apache.commons.collections4.CollectionUtils.removeRange(Collection,int,int)",3
"org.apache.commons.collections4.CollectionUtils.retainAll(Iterable,Iterable,Equator)",3
"org.apache.commons.collections4.CollectionUtils.select(Iterable,Predicate)",6
"org.apache.commons.collections4.CollectionUtils.selectRejected(Iterable,Predicate)",6
org.apache.commons.collections4.CollectionUtils.size(Object),10
org.apache.commons.collections4.CollectionUtils.sizeIsEmpty(Object),17
"org.apache.commons.collections4.CollectionUtils.subtract(Iterable,Iterable,Predicate)",9
"org.apache.commons.collections4.CollectionUtils.transform(Collection,Transformer)",5
org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.equals(Object),2
org.apache.commons.collections4.splitmap.TransformedSplitMap.transformMap(Map),3
"org.apache.commons.collections4.IterableUtils.contains(Iterable,Object)",2
org.apache.commons.collections4.IterableUtils.emptyIfNull(Iterable),2
org.apache.commons.collections4.IterableUtils.emptyIteratorIfNull(Iterable),2
"org.apache.commons.collections4.IterableUtils.get(Iterable,int)",2
org.apache.commons.collections4.IterableUtils.isEmpty(Iterable),2
"org.apache.commons.collections4.IterableUtils.partition(Iterable,Factory,Predicate[])",39
org.apache.commons.collections4.IterableUtils.size(Iterable),3
org.apache.commons.collections4.ClosureUtils.switchMapClosure(Map),2
org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(Trie),2
"org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(TrieEntry,TrieEntry)",4
org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(Object),8
org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(Object),4
org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet(),2
org.apache.commons.collections4.trie.AbstractPatriciaTrie.floorEntry(Object),8
org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(TrieEntry),6
org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(TrieEntry),3
org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(Object),4
"org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(Object,int)",3
org.apache.commons.collections4.trie.AbstractPatriciaTrie.higherEntry(Object),10
org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet(),2
org.apache.commons.collections4.trie.AbstractPatriciaTrie.lowerEntry(Object),6
org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(TrieEntry),23
"org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(Object,Object)",11
org.apache.commons.collections4.trie.AbstractPatriciaTrie.readObject(ObjectInputStream),2
org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(Object),10
org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(TrieEntry),3
org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(TrieEntry),10
org.apache.commons.collections4.trie.AbstractPatriciaTrie.select(Object),2
"org.apache.commons.collections4.trie.AbstractPatriciaTrie.selectR(TrieEntry,int,Object,int,Reference)",6
org.apache.commons.collections4.trie.AbstractPatriciaTrie.values(),2
org.apache.commons.collections4.trie.AbstractPatriciaTrie.writeObject(ObjectOutputStream),2
"org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(Object,Object)",5
"org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(Object,int,int)",2
org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(Object),2
"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(String,int,int)",4
"org.apache.commons.collections4.map.TransformedSortedMap.transformedSortedMap(SortedMap,Transformer,Transformer)",2
org.apache.commons.collections4.map.AbstractLinkedMap.createEntrySetIterator(),2
org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator(),2
org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator(),2
org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator(),2
org.apache.commons.collections4.map.Flat3Map.clear(),2
org.apache.commons.collections4.map.Flat3Map.clone(),11
org.apache.commons.collections4.map.Flat3Map.containsKey(Object),38
org.apache.commons.collections4.map.Flat3Map.containsValue(Object),21
org.apache.commons.collections4.map.Flat3Map.convertToMap(),5
org.apache.commons.collections4.map.Flat3Map.entrySet(),2
org.apache.commons.collections4.map.Flat3Map.equals(Object),21
org.apache.commons.collections4.map.Flat3Map.get(Object),38
org.apache.commons.collections4.map.Flat3Map.hashCode(),17
org.apache.commons.collections4.map.Flat3Map.isEmpty(),2
org.apache.commons.collections4.map.Flat3Map.keySet(),2
org.apache.commons.collections4.map.Flat3Map.mapIterator(),3
org.apache.commons.collections4.map.Flat3Map.putAll(Map),5
org.apache.commons.collections4.map.Flat3Map.readObject(ObjectInputStream),4
org.apache.commons.collections4.map.Flat3Map.remove(Object),39
org.apache.commons.collections4.map.Flat3Map.size(),2
org.apache.commons.collections4.map.Flat3Map.toString(),87
org.apache.commons.collections4.map.Flat3Map.values(),2
org.apache.commons.collections4.map.Flat3Map.writeObject(ObjectOutputStream),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasMethodFlagsHi(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasSpecialFormats(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.shouldDeflate(),2
org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache.arrayIsCached(String[]),3
org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache.cacheArray(String[]),2
"org.apache.commons.compress.harmony.unpack200.SegmentConstantPoolArrayCache.indexesForArrayKey(String[],String)",6
"org.apache.commons.compress.harmony.unpack200.MetadataBandGroup.getAnnotation(CPUTF8,int,Iterator)",2
"org.apache.commons.compress.harmony.unpack200.MetadataBandGroup.getAttribute(int,CPUTF8[],int[],Iterator)",2
org.apache.commons.compress.harmony.unpack200.MetadataBandGroup.getAttributes(),22
org.apache.commons.compress.harmony.unpack200.MetadataBandGroup.getNextValue(int),11
"org.apache.commons.compress.harmony.unpack200.MetadataBandGroup.getParameterAttribute(int,Iterator)",4
"org.apache.commons.compress.harmony.unpack200.Segment.log(int,String)",2
org.apache.commons.compress.harmony.unpack200.Segment.unpackProcess(),2
org.apache.commons.compress.harmony.unpack200.Segment.unpackRead(InputStream),3
org.apache.commons.compress.harmony.unpack200.Segment.writeJar(JarOutputStream),7
org.apache.commons.compress.harmony.unpack200.Pack200UnpackerAdapter.newBoundedInputStream(InputStream),5
org.apache.commons.compress.harmony.unpack200.Pack200UnpackerAdapter.unwrap(InputStream),2
"org.apache.commons.compress.harmony.unpack200.Pack200UnpackerAdapter.unpack(File,JarOutputStream)",11
"org.apache.commons.compress.harmony.unpack200.Pack200UnpackerAdapter.unpack(InputStream,JarOutputStream)",6
org.apache.commons.compress.harmony.unpack200.AttributeLayoutMap.checkMap(),45
"org.apache.commons.compress.harmony.unpack200.AttributeLayoutMap.getAttributeLayout(String,int)",4
org.apache.commons.compress.harmony.unpack200.SegmentHeader.getBandHeadersInputStream(),2
org.apache.commons.compress.harmony.unpack200.SegmentHeader.parseArchiveFileCounts(InputStream),2
org.apache.commons.compress.harmony.unpack200.SegmentHeader.parseArchiveSpecialCounts(InputStream),2
org.apache.commons.compress.harmony.unpack200.SegmentHeader.parseCpCounts(InputStream),2
org.apache.commons.compress.harmony.unpack200.SegmentHeader.read(InputStream),6
org.apache.commons.compress.harmony.unpack200.SegmentHeader.setArchiveMajorVersion(int),2
org.apache.commons.compress.harmony.unpack200.SegmentHeader.setArchiveMinorVersion(int),2
"org.apache.commons.compress.harmony.unpack200.SegmentUtils.countMatches(long[],IMatcher)",3
"org.apache.commons.compress.harmony.unpack200.SegmentUtils.countMatches(long[][],IMatcher)",2
"org.apache.commons.compress.harmony.unpack200.AttributeLayout.getValue(String,long,SegmentConstantPool)",13
org.apache.commons.compress.harmony.unpack200.AttributeLayout.getCodec(),9
"org.apache.commons.compress.harmony.unpack200.AttributeLayout.getValue(long,String,SegmentConstantPool)",3
org.apache.commons.compress.harmony.unpack200.AttributeLayout.hashCode(),4
org.apache.commons.compress.harmony.unpack200.AttributeLayout.matches(long),2
org.apache.commons.compress.harmony.unpack200.AttributeLayout.numBackwardsCallables(),2
org.apache.commons.compress.harmony.unpack200.AttrDefinitionBands.read(InputStream),6
org.apache.commons.compress.harmony.unpack200.CpBands.cpClassValue(String),3
org.apache.commons.compress.harmony.unpack200.CpBands.cpNameAndTypeValue(String),3
org.apache.commons.compress.harmony.unpack200.CpBands.cpSignatureValue(int),2
org.apache.commons.compress.harmony.unpack200.CpBands.cpUTF8Value(int),3
"org.apache.commons.compress.harmony.unpack200.CpBands.cpUTF8Value(String,boolean)",11
org.apache.commons.compress.harmony.unpack200.CpBands.parseCpClass(InputStream),2
org.apache.commons.compress.harmony.unpack200.CpBands.parseCpDescriptor(InputStream),2
org.apache.commons.compress.harmony.unpack200.CpBands.parseCpField(InputStream),2
org.apache.commons.compress.harmony.unpack200.CpBands.parseCpFloat(InputStream),2
org.apache.commons.compress.harmony.unpack200.CpBands.parseCpIMethod(InputStream),2
org.apache.commons.compress.harmony.unpack200.CpBands.parseCpMethod(InputStream),2
org.apache.commons.compress.harmony.unpack200.CpBands.parseCpSignature(InputStream),16
org.apache.commons.compress.harmony.unpack200.NewAttributeBands.getCodec(String),9
"org.apache.commons.compress.harmony.unpack200.NewAttributeBands.getOneAttribute(int,List)",2
"org.apache.commons.compress.harmony.unpack200.NewAttributeBands.parseAttributes(InputStream,int)",4
org.apache.commons.compress.harmony.unpack200.NewAttributeBands.parseLayout(),3
org.apache.commons.compress.harmony.unpack200.NewAttributeBands.readNextAttributeElement(StringReader),3
org.apache.commons.compress.harmony.unpack200.NewAttributeBands.readNextLayoutElement(StringReader),20
org.apache.commons.compress.harmony.unpack200.NewAttributeBands.readNumber(StringReader),64
org.apache.commons.compress.harmony.unpack200.NewAttributeBands.resolveCalls(),6
"org.apache.commons.compress.harmony.unpack200.NewAttributeBands.resolveCallsForElement(int,Callable,LayoutElement)",16
org.apache.commons.compress.harmony.unpack200.NewAttributeBands.setBackwardsCalls(int[]),4
org.apache.commons.compress.harmony.unpack200.SegmentConstantPool.getClassPoolEntry(String),4
"org.apache.commons.compress.harmony.unpack200.SegmentConstantPool.getClassSpecificPoolEntry(int,long,String)",4
"org.apache.commons.compress.harmony.unpack200.SegmentConstantPool.getConstantPoolEntry(int,long)",15
"org.apache.commons.compress.harmony.unpack200.SegmentConstantPool.getInitMethodPoolEntry(int,long,String)",2
"org.apache.commons.compress.harmony.unpack200.SegmentConstantPool.getValue(int,long)",12
"org.apache.commons.compress.harmony.unpack200.SegmentConstantPool.matchSpecificPoolEntryIndex(String[],String[],String,String,int)",7
org.apache.commons.compress.harmony.unpack200.bytecode.CPClass.equals(Object),4
org.apache.commons.compress.harmony.unpack200.bytecode.CPClass.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPRef.equals(Object),7
org.apache.commons.compress.harmony.unpack200.bytecode.CPRef.toString(),5
org.apache.commons.compress.harmony.unpack200.bytecode.CPMember.doWrite(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPMember.equals(Object),8
org.apache.commons.compress.harmony.unpack200.bytecode.CPMember.getNestedClassFileEntries(),2
org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionTableEntry.resolve(ClassConstantPool),2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.VariableInstructionForm.setRewrite4Bytes(int,int[])",10
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.SwitchForm.fixUpByteCodeTargets(ByteCode,CodeAttribute)",4
org.apache.commons.compress.harmony.unpack200.bytecode.forms.SingleByteReferenceForm.nestedMustStartClassPool(),2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.SingleByteReferenceForm.setNestedEntries(ByteCode,OperandManager,int)",2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.ClassRefForm.setNestedEntries(ByteCode,OperandManager,int)",2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.WideForm.setByteCodeOperands(ByteCode,OperandManager,int)",2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.NewClassRefForm.setByteCodeOperands(ByteCode,OperandManager,int)",3
org.apache.commons.compress.harmony.unpack200.bytecode.forms.ByteCodeForm.calculateOperandPosition(),21
org.apache.commons.compress.harmony.unpack200.bytecode.forms.ByteCodeForm.hasMultipleByteCodes(),4
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.NarrowClassRefForm.setNestedEntries(ByteCode,OperandManager,int)",2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.ReferenceForm.setByteCodeOperands(ByteCode,OperandManager,int)",2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.TableSwitchForm.setByteCodeOperands(ByteCode,OperandManager,int)",4
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.LookupSwitchForm.setByteCodeOperands(ByteCode,OperandManager,int)",4
com.fasterxml.jackson.databind.ObjectReader.withValueToUpdate(Object),4
com.fasterxml.jackson.databind.ObjectReader._with(DeserializationConfig),3
com.fasterxml.jackson.databind.ObjectReader.readValue(InputStream),2
com.fasterxml.jackson.databind.ObjectReader.readValue(Reader),2
com.fasterxml.jackson.databind.ObjectReader.readValue(String),14
com.fasterxml.jackson.databind.ObjectReader.readValue(byte[]),2
"com.fasterxml.jackson.databind.ObjectReader.readValue(byte[],int,int)",2
com.fasterxml.jackson.databind.ObjectReader.readValue(File),2
com.fasterxml.jackson.databind.ObjectReader.readValue(URL),2
com.fasterxml.jackson.databind.ObjectReader.readValue(JsonNode),2
com.fasterxml.jackson.databind.ObjectReader.readValue(DataInput),2
com.fasterxml.jackson.databind.ObjectReader.readTree(InputStream),2
com.fasterxml.jackson.databind.ObjectReader.readTree(Reader),2
com.fasterxml.jackson.databind.ObjectReader.readTree(String),14
com.fasterxml.jackson.databind.ObjectReader.readTree(byte[]),2
"com.fasterxml.jackson.databind.ObjectReader.readTree(byte[],int,int)",2
com.fasterxml.jackson.databind.ObjectReader.readTree(DataInput),2
com.fasterxml.jackson.databind.ObjectReader.readValues(InputStream),2
com.fasterxml.jackson.databind.ObjectReader.readValues(Reader),2
com.fasterxml.jackson.databind.ObjectReader.readValues(String),2
"com.fasterxml.jackson.databind.ObjectReader.readValues(byte[],int,int)",2
com.fasterxml.jackson.databind.ObjectReader.readValues(File),2
com.fasterxml.jackson.databind.ObjectReader.readValues(URL),2
com.fasterxml.jackson.databind.ObjectReader.readValues(DataInput),2
"com.fasterxml.jackson.databind.ObjectReader.treeToValue(TreeNode,Class)",5
"com.fasterxml.jackson.databind.ObjectReader.treeToValue(TreeNode,JavaType)",5
"com.fasterxml.jackson.databind.ObjectReader._bind(JsonParser,Object)",12
com.fasterxml.jackson.databind.ObjectReader._bindAsTree(JsonParser),19
com.fasterxml.jackson.databind.ObjectReader._bindAsTreeOrNull(JsonParser),19
"com.fasterxml.jackson.databind.ObjectReader._considerFilter(JsonParser,boolean)",3
"com.fasterxml.jackson.databind.ObjectReader._verifyNoTrailingTokens(JsonParser,DeserializationContext,JavaType)",4
"com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(byte[],int,int)",2
"com.fasterxml.jackson.databind.ObjectReader._detectBindAndClose(Match,boolean)",4
"com.fasterxml.jackson.databind.ObjectReader._detectBindAndReadValues(Match,boolean)",4
com.fasterxml.jackson.databind.ObjectReader._detectBindAndCloseAsTree(InputStream),2
com.fasterxml.jackson.databind.ObjectReader._verifySchemaType(FormatSchema),3
com.fasterxml.jackson.databind.ObjectReader._findRootDeserializer(DeserializationContext),7
com.fasterxml.jackson.databind.ObjectReader._findTreeDeserializer(DeserializationContext),3
com.fasterxml.jackson.databind.ObjectReader._prefetchRootDeserializer(JavaType),12
com.fasterxml.jackson.databind.ObjectReader._jsonNodeType(),2
com.fasterxml.jackson.databind.SequenceWriter.init(boolean),2
com.fasterxml.jackson.databind.SequenceWriter.write(Object),14
"com.fasterxml.jackson.databind.SequenceWriter.write(Object,JavaType)",10
com.fasterxml.jackson.databind.SequenceWriter.writeAll(Object[]),2
com.fasterxml.jackson.databind.SequenceWriter.writeAll(Collection),2
com.fasterxml.jackson.databind.SequenceWriter.writeAll(Iterable),2
com.fasterxml.jackson.databind.SequenceWriter.flush(),2
com.fasterxml.jackson.databind.SequenceWriter.close(),5
com.fasterxml.jackson.databind.SequenceWriter._findAndAddDynamic(Class),2
com.fasterxml.jackson.databind.SequenceWriter._findAndAddDynamic(JavaType),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.willStripTrailingBigDecimalZeroes(),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.booleanNode(boolean),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Byte),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Short),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Integer),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Long),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(BigInteger),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Float),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(Double),2
com.fasterxml.jackson.databind.node.JsonNodeFactory.numberNode(BigDecimal),2
com.fasterxml.jackson.databind.node.ShortNode.asBoolean(boolean),2
com.fasterxml.jackson.databind.node.ShortNode.equals(Object),5
com.fasterxml.jackson.databind.node.BigIntegerNode.canConvertToInt(),3
com.fasterxml.jackson.databind.node.BigIntegerNode.canConvertToLong(),3
com.fasterxml.jackson.databind.node.BigIntegerNode.asBoolean(boolean),2
com.fasterxml.jackson.databind.node.BigIntegerNode.equals(Object),4
com.fasterxml.jackson.databind.node.NodeSerialization.readResolve(),3
com.fasterxml.jackson.databind.node.NodeSerialization.from(Object),4
com.fasterxml.jackson.databind.node.BinaryNode.valueOf(byte[]),3
"com.fasterxml.jackson.databind.node.BinaryNode.valueOf(byte[],int,int)",3
"com.fasterxml.jackson.databind.node.BinaryNode.serialize(JsonGenerator,SerializerProvider)",2
com.fasterxml.jackson.databind.node.BinaryNode.equals(Object),7
com.fasterxml.jackson.databind.node.BinaryNode.hashCode(),2
com.fasterxml.jackson.databind.node.DecimalNode.canConvertToInt(),3
com.fasterxml.jackson.databind.node.DecimalNode.canConvertToLong(),3
com.fasterxml.jackson.databind.node.DecimalNode.canConvertToExactIntegral(),4
com.fasterxml.jackson.databind.node.DecimalNode.equals(Object),8
com.fasterxml.jackson.databind.node.DecimalNode.hashCode(),2
com.fasterxml.jackson.databind.node.InternalNodeMapper.nodeToString(BaseJsonNode),4
com.fasterxml.jackson.databind.node.InternalNodeMapper.nodeToPrettyString(BaseJsonNode),4
com.fasterxml.jackson.databind.node.DoubleNode.canConvertToInt(),3
com.fasterxml.jackson.databind.node.DoubleNode.canConvertToLong(),3
com.fasterxml.jackson.databind.node.DoubleNode.canConvertToExactIntegral(),4
com.fasterxml.jackson.databind.node.DoubleNode.isNaN(),3
com.fasterxml.jackson.databind.node.DoubleNode.equals(Object),5
com.fasterxml.jackson.databind.node.ObjectNode.deepCopy(),2
com.fasterxml.jackson.databind.node.ObjectNode.with(String),4
com.fasterxml.jackson.databind.node.ObjectNode.withObject(String),2
com.fasterxml.jackson.databind.node.ObjectNode.withArray(String),4
"com.fasterxml.jackson.databind.node.ObjectNode._withObject(JsonPointer,JsonPointer,OverwriteMode,boolean)",5
"com.fasterxml.jackson.databind.node.ObjectNode._withArray(JsonPointer,JsonPointer,OverwriteMode,boolean)",5
"com.fasterxml.jackson.databind.node.ObjectNode._withObjectAddTailProperty(JsonPointer,boolean)",4
"com.fasterxml.jackson.databind.node.ObjectNode._withArrayAddTailProperty(JsonPointer,boolean)",4
com.fasterxml.jackson.databind.node.ObjectNode.path(String),2
com.fasterxml.jackson.databind.node.ObjectNode.required(String),2
"com.fasterxml.jackson.databind.node.ObjectNode.equals(Comparator,JsonNode)",8
com.fasterxml.jackson.databind.node.ObjectNode.findValue(String),5
"com.fasterxml.jackson.databind.node.ObjectNode.findValues(String,List)",4
"com.fasterxml.jackson.databind.node.ObjectNode.findValuesAsText(String,List)",4
com.fasterxml.jackson.databind.node.ObjectNode.findParent(String),5
"com.fasterxml.jackson.databind.node.ObjectNode.findParents(String,List)",4
"com.fasterxml.jackson.databind.node.ObjectNode.serialize(JsonGenerator,SerializerProvider)",18
"com.fasterxml.jackson.databind.node.ObjectNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)",20
"com.fasterxml.jackson.databind.node.ObjectNode.serializeFilteredContents(JsonGenerator,SerializerProvider,boolean,boolean)",11
com.fasterxml.jackson.databind.node.ObjectNode._contentsToSerialize(SerializerProvider),4
"com.fasterxml.jackson.databind.node.ObjectNode.set(String,JsonNode)",2
com.fasterxml.jackson.databind.node.ObjectNode.setAll(Map),3
"com.fasterxml.jackson.databind.node.ObjectNode.replace(String,JsonNode)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,JsonNode)",2
"com.fasterxml.jackson.databind.node.ObjectNode.putIfAbsent(String,JsonNode)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,Short)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,Integer)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,Long)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,Float)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,Double)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,BigDecimal)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,BigInteger)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,String)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,Boolean)",2
"com.fasterxml.jackson.databind.node.ObjectNode.put(String,byte[])",2
com.fasterxml.jackson.databind.node.ObjectNode.equals(Object),4
com.fasterxml.jackson.databind.node.BaseJsonNode.findPath(String),2
"com.fasterxml.jackson.databind.node.BaseJsonNode.withObject(JsonPointer,OverwriteMode,boolean)",5
"com.fasterxml.jackson.databind.node.BaseJsonNode._withXxxMayReplace(JsonNode,OverwriteMode)",5
"com.fasterxml.jackson.databind.node.BaseJsonNode.withArray(JsonPointer,OverwriteMode,boolean)",5
com.fasterxml.jackson.databind.node.BaseJsonNode._bigIntFromBigDec(BigDecimal),4
com.fasterxml.jackson.databind.node.IntNode.valueOf(int),3
com.fasterxml.jackson.databind.node.IntNode.asBoolean(boolean),2
com.fasterxml.jackson.databind.node.IntNode.equals(Object),5
com.fasterxml.jackson.databind.node.POJONode.binaryValue(),2
com.fasterxml.jackson.databind.node.POJONode.asText(),2
com.fasterxml.jackson.databind.node.POJONode.asText(String),2
com.fasterxml.jackson.databind.node.POJONode.asBoolean(boolean),3
com.fasterxml.jackson.databind.node.POJONode.asInt(int),2
com.fasterxml.jackson.databind.node.POJONode.asLong(long),2
com.fasterxml.jackson.databind.node.POJONode.asDouble(double),2
"com.fasterxml.jackson.databind.node.POJONode.serialize(JsonGenerator,SerializerProvider)",3
com.fasterxml.jackson.databind.node.POJONode.equals(Object),4
com.fasterxml.jackson.databind.node.POJONode._pojoEquals(POJONode),3
com.fasterxml.jackson.databind.node.TextNode.valueOf(String),3
com.fasterxml.jackson.databind.node.TextNode.getBinaryValue(Base64Variant),2
com.fasterxml.jackson.databind.node.TextNode.asText(String),2
com.fasterxml.jackson.databind.node.TextNode.asBoolean(boolean),4
"com.fasterxml.jackson.databind.node.TextNode.serialize(JsonGenerator,SerializerProvider)",2
com.fasterxml.jackson.databind.node.TextNode.equals(Object),4
com.fasterxml.jackson.databind.node.NodeCursor.iterateChildren(),4
org.apache.commons.codec.digest.HmacUtils.isAvailable(HmacAlgorithms),4
org.apache.commons.codec.digest.HmacUtils.hmac(File),3
org.apache.commons.codec.digest.HmacUtils.hmac(InputStream),2
"org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)",3
"org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],String)",49
org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[]),3
"org.apache.commons.codec.digest.Blake3.compress(int[],int[],int,long,int)",4
org.apache.commons.codec.digest.Blake3.initKeyedHash(byte[]),2
"org.apache.commons.codec.digest.Blake3.unpackInts(byte[],int)",2
org.apache.commons.codec.digest.Blake3.doFinalize(int),2
"org.apache.commons.codec.digest.MurmurHash3.hash128x64Internal(byte[],int,int,long)",32
"org.apache.commons.codec.digest.MurmurHash3.hash32(byte[],int,int,int)",8
"org.apache.commons.codec.digest.MurmurHash3.hash32x86(byte[],int,int,int)",8
"org.apache.commons.codec.digest.MurmurHash3.hash64(byte[],int,int,int)",16
org.apache.commons.codec.digest.DigestUtils.getDigest(String),2
"org.apache.commons.codec.digest.DigestUtils.getDigest(String,MessageDigest)",2
org.apache.commons.codec.digest.DigestUtils.isAvailable(String),2
"org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,File)",3
"org.apache.commons.codec.digest.DigestUtils.updateDigest(MessageDigest,Path,OpenOption[])",3
"org.apache.commons.codec.digest.MurmurHash2.hash32(byte[],int,int)",8
"org.apache.commons.codec.digest.MurmurHash2.hash64(byte[],int,int)",16
"org.apache.commons.codec.digest.PureJavaCrc32C.update(byte[],int,int)",16
"org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],String)",2
"org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],String,Random)",2
"org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],String)",2
"org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],String,Random)",2
org.apache.commons.codec.digest.XXHash32.getValue(),8
"org.apache.commons.codec.digest.XXHash32.update(byte[],int,int)",10
org.apache.commons.codec.language.ColognePhonetic.encode(Object),2
org.apache.commons.codec.language.RefinedSoundex.encode(Object),2
org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char),4
org.apache.commons.codec.language.RefinedSoundex.soundex(String),6
org.apache.commons.codec.language.AbstractCaverphone.encode(Object),2
org.apache.commons.codec.language.Metaphone.encode(Object),2
"org.apache.commons.codec.language.DoubleMetaphone.conditionC0(String,int)",9
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(String,int)",6
"org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(String,int)",11
"org.apache.commons.codec.language.DoubleMetaphone.conditionL0(String,int)",11
"org.apache.commons.codec.language.DoubleMetaphone.conditionM0(String,int)",5
org.apache.commons.codec.language.DoubleMetaphone.encode(Object),2
"org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(DoubleMetaphoneResult,int)",2
"org.apache.commons.codec.language.DoubleMetaphone.handleC(String,DoubleMetaphoneResult,int)",74
"org.apache.commons.codec.language.DoubleMetaphone.handleCC(String,DoubleMetaphoneResult,int)",7
"org.apache.commons.codec.language.DoubleMetaphone.handleCH(String,DoubleMetaphoneResult,int)",11
"org.apache.commons.codec.language.DoubleMetaphone.handleD(String,DoubleMetaphoneResult,int)",4
"org.apache.commons.codec.language.DoubleMetaphone.handleH(String,DoubleMetaphoneResult,int)",5
"org.apache.commons.codec.language.DoubleMetaphone.handleJ(String,DoubleMetaphoneResult,int,boolean)",72
"org.apache.commons.codec.language.DoubleMetaphone.handleL(String,DoubleMetaphoneResult,int)",3
"org.apache.commons.codec.language.DoubleMetaphone.handleP(String,DoubleMetaphoneResult,int)",3
"org.apache.commons.codec.language.DoubleMetaphone.handleR(String,DoubleMetaphoneResult,int,boolean)",10
"org.apache.commons.codec.language.DoubleMetaphone.handleS(String,DoubleMetaphoneResult,int,boolean)",54
"org.apache.commons.codec.language.DoubleMetaphone.handleSC(String,DoubleMetaphoneResult,int)",8
"org.apache.commons.codec.language.DoubleMetaphone.handleT(String,DoubleMetaphoneResult,int)",12
"org.apache.commons.codec.language.DoubleMetaphone.handleW(String,DoubleMetaphoneResult,int)",23
"org.apache.commons.codec.language.DoubleMetaphone.handleX(String,DoubleMetaphoneResult,int)",9
"org.apache.commons.codec.language.DoubleMetaphone.handleZ(String,DoubleMetaphoneResult,int,boolean)",11
org.apache.commons.codec.language.DoubleMetaphone.isSilentStart(String),4
org.apache.commons.codec.language.Caverphone2.encode(String),2
org.apache.commons.codec.language.bm.Lang.guessLanguage(String),2
org.apache.commons.codec.language.bm.Lang.guessLanguages(String),2
org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(Object),2
org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(String),2
"org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(PhonemeBuilder,Map)",2
"org.apache.commons.codec.language.bm.PhoneticEngine.encode(String,LanguageSet)",69
"org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,LanguageSet)",2
"org.apache.commons.codec.language.bm.Rule.getInstanceMap(NameType,RuleType,String)",2
org.apache.commons.codec.language.bm.Rule.parsePhoneme(String),3
org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(String),8
"org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(CharSequence,int)",5
org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(String),2
org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Object),2
org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(String),9
"org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(String,String)",12
org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(String),3
org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(String),2
org.apache.commons.codec.language.Soundex.encode(Object),2
org.apache.commons.codec.language.Soundex.map(char),3
org.apache.commons.codec.language.Soundex.soundex(String),24
org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(String),5
org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(Object),2
org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(String),2
"org.apache.commons.collections4.list.PredicatedList.addAll(int,Collection)",2
org.apache.commons.collections4.list.PredicatedList.equals(Object),3
"org.apache.commons.collections4.queue.TransformedQueue.transformedQueue(Queue,Transformer)",3
org.apache.commons.collections4.queue.UnmodifiableQueue.unmodifiableQueue(Queue),2
org.apache.commons.collections4.queue.CircularFifoQueue.add(Object),8
org.apache.commons.collections4.queue.CircularFifoQueue.decrement(int),2
org.apache.commons.collections4.queue.CircularFifoQueue.element(),2
org.apache.commons.collections4.queue.CircularFifoQueue.get(int),3
org.apache.commons.collections4.queue.CircularFifoQueue.increment(int),2
org.apache.commons.collections4.queue.CircularFifoQueue.isAtFullCapacity(),2
org.apache.commons.collections4.queue.CircularFifoQueue.isEmpty(),2
org.apache.commons.collections4.queue.CircularFifoQueue.peek(),2
org.apache.commons.collections4.queue.CircularFifoQueue.poll(),2
org.apache.commons.collections4.queue.CircularFifoQueue.readObject(ObjectInputStream),8
org.apache.commons.collections4.queue.CircularFifoQueue.remove(),4
org.apache.commons.collections4.queue.CircularFifoQueue.size(),4
org.apache.commons.collections4.queue.CircularFifoQueue.writeObject(ObjectOutputStream),2
org.apache.commons.collections4.TransformerUtils.switchMapTransformer(Map),2
org.apache.commons.collections4.SetUtils.unmodifiableSet(Object[]),2
org.apache.commons.collections4.bloomfilter.SparseBloomFilter.asBitMapArray(),2
org.apache.commons.collections4.bloomfilter.SparseBloomFilter.merge(BloomFilter),2
org.apache.commons.collections4.bloomfilter.SparseBloomFilter.merge(IndexExtractor),4
org.apache.commons.collections4.bloomfilter.SparseBloomFilter.processBitMaps(LongPredicate),19
"org.apache.commons.collections4.bloomfilter.BitMaps.contains(long[],int)",2
org.apache.commons.collections4.bloomfilter.CountingLongPredicate.processRemaining(),8
org.apache.commons.collections4.bloomfilter.CountingLongPredicate.test(long),2
"org.apache.commons.collections4.bloomfilter.SetOperations.cosineSimilarity(BitMapExtractor,BitMapExtractor)",2
"org.apache.commons.collections4.bloomfilter.SetOperations.cosineSimilarity(BloomFilter,BloomFilter)",2
"org.apache.commons.collections4.bloomfilter.SetOperations.jaccardSimilarity(BitMapExtractor,BitMapExtractor)",2
org.apache.commons.collections4.bloomfilter.IndexFilter.test(int),3
org.apache.commons.collections4.bloomfilter.CountingPredicate.processRemaining(),8
org.apache.commons.collections4.bloomfilter.CountingPredicate.test(Object),2
org.apache.commons.collections4.bloomfilter.LayeredBloomFilter.contains(BloomFilter),3
"org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.add(int,int)",10
org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.isValid(),2
org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.processBitMaps(LongPredicate),18
org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.processCells(CellPredicate),6
org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.processIndices(IntPredicate),6
"org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.subtract(int,int)",10
org.apache.commons.collections4.bloomfilter.LayerManager.cleanup(),2
org.apache.commons.collections4.bloomfilter.LayerManager.copy(),2
org.apache.commons.collections4.bloomfilter.LayerManager.get(int),3
org.apache.commons.collections4.bloomfilter.LayerManager.getTarget(),2
org.apache.commons.collections4.bloomfilter.LayerManager.processBloomFilters(Predicate),4
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.cardinality(),2
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.isEmpty(),3
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.merge(BitMapExtractor),31
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.merge(BloomFilter),2
"org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.processBitMapPairs(BitMapExtractor,LongBiPredicate)",3
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.processBitMaps(LongPredicate),4
"org.apache.commons.collections4.bloomfilter.Shape.calculateNumberOfHashFunctions(int,int)",2
"org.apache.commons.collections4.bloomfilter.Shape.fromNP(int,double)",2
org.apache.commons.collections4.bloomfilter.Shape.equals(Object),4
org.apache.commons.collections4.bloomfilter.Shape.getProbability(int),3
org.apache.commons.collections4.bloomfilter.Shape.isSparse(int),2
"org.apache.commons.collections4.set.TransformedSet.transformedSet(Set,Transformer)",3
org.apache.commons.collections4.set.CompositeSet.add(Object),2
org.apache.commons.collections4.set.CompositeSet.addAll(Collection),2
org.apache.commons.collections4.set.CompositeSet.addComposited(Set),10
org.apache.commons.collections4.set.CompositeSet.addComposited(Set[]),3
org.apache.commons.collections4.set.CompositeSet.clear(),2
org.apache.commons.collections4.set.CompositeSet.contains(Object),4
org.apache.commons.collections4.set.CompositeSet.containsAll(Collection),5
org.apache.commons.collections4.set.CompositeSet.equals(Object),4
org.apache.commons.collections4.set.CompositeSet.hashCode(),3
org.apache.commons.collections4.set.CompositeSet.isEmpty(),4
org.apache.commons.collections4.set.CompositeSet.iterator(),2
org.apache.commons.collections4.set.CompositeSet.remove(Object),4
org.apache.commons.collections4.set.CompositeSet.removeAll(Collection),3
org.apache.commons.collections4.set.CompositeSet.removeIf(Predicate),3
org.apache.commons.collections4.set.CompositeSet.retainAll(Collection),2
org.apache.commons.collections4.set.CompositeSet.size(),2
org.apache.commons.collections4.set.CompositeSet.toArray(),2
org.apache.commons.collections4.set.CompositeSet.toArray(Object[]),12
"org.apache.commons.collections4.set.TransformedNavigableSet.transformedNavigableSet(NavigableSet,Transformer)",3
org.apache.commons.collections4.set.AbstractSetDecorator.equals(Object),3
"org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(Set,List)",3
org.apache.commons.collections4.set.ListOrderedSet.add(Object),2
"org.apache.commons.collections4.set.ListOrderedSet.add(int,Object)",2
org.apache.commons.collections4.set.ListOrderedSet.addAll(Collection),2
"org.apache.commons.collections4.set.ListOrderedSet.addAll(int,Collection)",6
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.hasProperty(String),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.getKnownPropertyNames(),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.properties(),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.creatorProperties(),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(String),6
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findProperty(int),6
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.findBackReference(String),2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",22
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._handleTypedObjectId(JsonParser,DeserializationContext,Object,Object)",4
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase._convertObjectId(JsonParser,DeserializationContext,Object,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectId(JsonParser,DeserializationContext)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(JsonParser,DeserializationContext)",6
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(JsonParser,DeserializationContext)",14
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(JsonParser,DeserializationContext)",5
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromDouble(JsonParser,DeserializationContext)",13
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromBoolean(JsonParser,DeserializationContext)",6
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromEmbedded(JsonParser,DeserializationContext)",9
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._delegateDeserializer(),2
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._delegateDeserializer(JsonParser),5
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.injectValues(DeserializationContext,Object)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperties(DeserializationContext,Object,TokenBuffer)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(JsonParser,DeserializationContext,Object,String)",5
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(JsonParser,DeserializationContext,Object,String)",3
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleIgnoredProperty(JsonParser,DeserializationContext,Object,String)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic(JsonParser,DeserializationContext,Object,TokenBuffer)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handlePolymorphic(JsonParser,DeserializationContext,StreamReadConstraints,Object,TokenBuffer)",8
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.throwOrReturnThrowable(Throwable,DeserializationContext)",60
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.wrapInstantiationProblem(Throwable,DeserializationContext)",16
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.mapAbstractType(DeserializationConfig,JavaType)",6
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._mapAbstractType2(DeserializationConfig,JavaType)",7
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findValueInstantiator(DeserializationContext,BeanDescription)",48
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._constructDefaultValueInstantiator(DeserializationContext,BeanDescription)",48
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._valueInstantiatorInstance(DeserializationConfig,Annotated,Object)",8
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._addExplicitDelegatingCreators(DeserializationContext,BeanDescription,CreatorCollector,List)",2
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._addImplicitDelegatingConstructors(DeserializationContext,BeanDescription,VisibilityChecker,CreatorCollector,List)",10
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._addImplicitDelegatingFactories(DeserializationContext,VisibilityChecker,CreatorCollector,List)",3
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._addExplicitDelegatingCreator(DeserializationContext,BeanDescription,CreatorCollector,CreatorCandidate)",17
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._addSelectedPropertiesBasedCreator(DeserializationContext,BeanDescription,CreatorCollector,CreatorCandidate)",10
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._handleSingleArgumentCreator(CreatorCollector,AnnotatedWithParams,boolean,boolean)",62
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.constructCreatorProperty(DeserializationContext,BeanDescription,PropertyName,int,AnnotatedParameter,Value)",16
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createArrayDeserializer(DeserializationContext,ArrayType,BeanDescription)",54
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._mapAbstractCollectionType(JavaType,DeserializationConfig)",2
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createCollectionLikeDeserializer(DeserializationContext,CollectionLikeType,BeanDescription)",8
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._mapAbstractMapType(JavaType,DeserializationConfig)",2
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createMapLikeDeserializer(DeserializationContext,MapLikeType,BeanDescription)",8
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createEnumDeserializer(DeserializationContext,JavaType,BeanDescription)",100
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createTreeDeserializer(DeserializationConfig,JavaType,BeanDescription)",2
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createReferenceDeserializer(DeserializationContext,ReferenceType,BeanDescription)",20
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findTypeDeserializer(DeserializationConfig,JavaType)",21
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.createKeyDeserializer(DeserializationContext,JavaType)",72
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._createEnumKeyDeserializer(DeserializationContext,JavaType)",18
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.hasExplicitDeserializerFor(DeserializationConfig,Class)",32
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findPropertyTypeDeserializer(DeserializationConfig,JavaType,AnnotatedMember)",3
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findPropertyContentTypeDeserializer(DeserializationConfig,JavaType,AnnotatedMember)",2
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findDefaultDeserializer(DeserializationContext,JavaType,BeanDescription)",30
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findRemappedType(DeserializationConfig,Class)",3
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomTreeNodeDeserializer(Class,DeserializationConfig,BeanDescription)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomReferenceDeserializer(ReferenceType,DeserializationConfig,BeanDescription,TypeDeserializer,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomBeanDeserializer(JavaType,DeserializationConfig,BeanDescription)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomArrayDeserializer(ArrayType,DeserializationConfig,BeanDescription,TypeDeserializer,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomCollectionDeserializer(CollectionType,DeserializationConfig,BeanDescription,TypeDeserializer,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomCollectionLikeDeserializer(CollectionLikeType,DeserializationConfig,BeanDescription,TypeDeserializer,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomEnumDeserializer(Class,DeserializationConfig,BeanDescription)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomMapDeserializer(MapType,DeserializationConfig,BeanDescription,KeyDeserializer,TypeDeserializer,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._findCustomMapLikeDeserializer(MapLikeType,DeserializationConfig,BeanDescription,KeyDeserializer,TypeDeserializer,JsonDeserializer)",4
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findDeserializerFromAnnotation(DeserializationContext,Annotated)",3
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findKeyDeserializerFromAnnotation(DeserializationContext,Annotated)",3
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.findContentDeserializerFromAnnotation(DeserializationContext,Annotated)",3
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.resolveMemberAndTypeAnnotations(DeserializationContext,AnnotatedMember,JavaType)",41
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.constructEnumResolver(Class,DeserializationConfig,BeanDescription)",3
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.constructEnumNamingStrategyResolver(DeserializationConfig,AnnotatedClass)",2
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.constructEnumNamingStrategyResolver(DeserializationConfig,Class,AnnotatedClass)",2
"com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._hasCreatorAnnotation(MapperConfig,Annotated)",4
"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.findObjectId(Object,ObjectIdGenerator,ObjectIdResolver)",22
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.checkUnresolvedObjectId(),16
"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.deserializerInstance(Annotated,Object)",15
"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.keyDeserializerInstance(Annotated,Object)",15
"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(JsonParser,JavaType,JsonDeserializer,Object)",3
"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._unwrapAndDeserialize(JsonParser,JavaType,JsonDeserializer,Object)",32
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.withConfig(DeserializerFactoryConfig),2
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.close(),5
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.closeArchiveEntry(),4
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.finish(),2
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.putArchiveEntry(ArArchiveEntry),4
org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.writeEntryHeader(ArArchiveEntry),37
org.apache.commons.compress.archivers.ar.ArArchiveInputStream.isBSDLongName(String),3
"org.apache.commons.compress.archivers.ar.ArArchiveInputStream.asInt(byte[],int,int,int,boolean)",3
org.apache.commons.compress.archivers.ar.ArArchiveInputStream.close(),2
org.apache.commons.compress.archivers.ar.ArArchiveInputStream.getBSDLongName(String),2
org.apache.commons.compress.archivers.ar.ArArchiveInputStream.getExtendedName(int),23
org.apache.commons.compress.archivers.ar.ArArchiveInputStream.isGNULongName(String),3
"org.apache.commons.compress.archivers.ar.ArArchiveInputStream.read(byte[],int,int)",5
"org.apache.commons.compress.archivers.ar.ArArchiveInputStream.readGNUStringTable(byte[],int,int)",3
org.apache.commons.compress.archivers.ar.ArArchiveInputStream.trackReadBytes(long),2
"org.apache.commons.compress.archivers.Lister.createArchiveInputStream(String[],InputStream)",2
org.apache.commons.compress.archivers.Lister.detectFormat(Path),3
org.apache.commons.compress.archivers.Lister.main(String[]),3
org.apache.commons.compress.archivers.Lister.listZipUsingTarFile(Path),19
org.apache.commons.compress.archivers.Lister.listZipUsingZipFile(Path),29
org.apache.commons.compress.archivers.Lister.println(String),2
org.apache.commons.compress.archivers.arj.ArjArchiveEntry.equals(Object),4
org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getLastModifiedDate(),2
org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getName(),2
org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getUnixMode(),2
org.apache.commons.compress.archivers.arj.ArjArchiveEntry.hashCode(),2
org.apache.commons.compress.archivers.arj.ArjArchiveEntry.isDirectory(),2
org.apache.commons.compress.archivers.arj.ArjArchiveEntry.isHostOsUnix(),3
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.canReadEntryData(ArchiveEntry),3
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.getNextEntry(),6
"org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.read(byte[],int,int)",4
"org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readExtraData(int,DataInputStream,LocalFileHeader)",3
org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readMainHeader(),7
"org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readRange(InputStream,int)",2
org.apache.commons.compress.archivers.arj.LocalFileHeader.equals(Object),26
org.apache.commons.compress.archivers.arj.LocalFileHeader.hashCode(),2
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.available(),3
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.buildSparseInputStreams(),15
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.close(),3
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.consumeRemainderOfLastBlock(),2
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getLongNameData(),18
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getRecord(),3
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.isDirectory(),3
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.isEOFRecord(byte[]),3
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.paxHeaders(),6
"org.apache.commons.compress.archivers.tar.TarArchiveInputStream.read(byte[],int,int)",11
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.readGlobalPaxHeaders(),2
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.readRecord(),2
"org.apache.commons.compress.archivers.tar.TarArchiveInputStream.readSparse(byte[],int,int)",8
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.skip(long),4
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.skipRecordPadding(),4
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.skipSparse(long),8
org.apache.commons.compress.archivers.tar.TarArchiveInputStream.tryToConsumeSecondEOFRecord(),48
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.addFileTimePaxHeader(Map,String,FileTime)",3
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.addFileTimePaxHeaderForBigNumber(Map,String,FileTime,long)",3
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.addPaxHeadersForBigNumbers(Map,TarArchiveEntry)",2
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.close(),5
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.closeArchiveEntry(),4
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.finish(),2
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.handleLongName(TarArchiveEntry,String,Map,String,byte,String)",5
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.padAsNeeded(),3
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.stripTo7Bits(String),3
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.transferModTime(TarArchiveEntry,TarArchiveEntry)",3
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.write(byte[],int,int)",3
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writePaxHeaders(TarArchiveEntry,String,Map)",2
org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writeRecord(byte[]),2
org.apache.commons.compress.archivers.tar.TarFile.buildSparseInputStreams(),20
org.apache.commons.compress.archivers.tar.TarFile.consumeRemainderOfLastBlock(),2
org.apache.commons.compress.archivers.tar.TarFile.getInputStream(TarArchiveEntry),4
org.apache.commons.compress.archivers.tar.TarFile.getLongNameData(),72
org.apache.commons.compress.archivers.tar.TarFile.getRecord(),3
org.apache.commons.compress.archivers.tar.TarFile.isDirectory(),3
org.apache.commons.compress.archivers.tar.TarFile.isEOFRecord(ByteBuffer),3
org.apache.commons.compress.archivers.tar.TarFile.paxHeaders(),64
org.apache.commons.compress.archivers.tar.TarFile.readGlobalPaxHeaders(),22
org.apache.commons.compress.archivers.tar.TarFile.readRecord(),2
org.apache.commons.compress.archivers.tar.TarFile.repositionForwardTo(long),2
org.apache.commons.compress.archivers.tar.TarFile.skipRecordPadding(),4
org.apache.commons.compress.archivers.tar.TarFile.throwExceptionIfPositionIsNotInArchive(),2
org.apache.commons.compress.archivers.tar.TarFile.tryToConsumeSecondEOFRecord(),16
org.apache.commons.compress.archivers.tar.TarArchiveStructSparse.equals(Object),6
org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseInstantFromDecimalSeconds(String),3
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.addPaxHeader(String,String)",2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.equals(Object),3
org.apache.commons.compress.archivers.tar.TarArchiveEntry.equals(TarArchiveEntry),3
org.apache.commons.compress.archivers.tar.TarArchiveEntry.fillGNUSparse0xData(Map),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.fillGNUSparse1xData(Map),4
org.apache.commons.compress.archivers.tar.TarArchiveEntry.fillStarSparseData(Map),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.getFile(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.getOrderedSparseHeaders(),20
org.apache.commons.compress.archivers.tar.TarArchiveEntry.getRealSize(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isBlockDevice(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isCharacterDevice(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isDirectory(),6
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isFIFO(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isFile(),6
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGlobalPaxHeader(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGNULongLinkEntry(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGNULongNameEntry(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGNUSparse(),3
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isLink(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isOldGNUSparse(),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isPaxHeader(),3
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isSparse(),3
org.apache.commons.compress.archivers.tar.TarArchiveEntry.isSymbolicLink(),2
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseOctalOrBinary(byte[],int,int,boolean)",3
org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseTarHeader(byte[]),7
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseTarHeader(Map,byte[],ZipEncoding,boolean,boolean)",2
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.readFileMode(Path,String,LinkOption[])",4
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.readOsSpecificProperties(Path,LinkOption[])",7
org.apache.commons.compress.archivers.tar.TarArchiveEntry.setDataOffset(long),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.setDevMajor(int),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.setDevMinor(int),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.setSize(long),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.updateEntryFromPaxHeaders(Map),2
org.apache.commons.compress.archivers.tar.TarArchiveEntry.writeEntryHeader(byte[]),7
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.writeEntryHeader(byte[],ZipEncoding,boolean)",2
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.writeEntryHeaderField(long,byte[],int,int,boolean)",4
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.writeEntryHeaderOptionalTimeField(FileTime,int,byte[],int)",2
"org.apache.commons.compress.archivers.tar.TarUtils.formatLongOctalOrBinaryBytes(long,byte[],int,int)",36
"org.apache.commons.compress.archivers.tar.TarUtils.formatNameBytes(String,byte[],int,int)",7
"org.apache.commons.compress.archivers.tar.TarUtils.formatNameBytes(String,byte[],int,int,ZipEncoding)",8
org.apache.commons.compress.archivers.tar.TarUtils.parseFromPAX01SparseHeaders(String),7
"org.apache.commons.compress.archivers.tar.TarUtils.parseName(byte[],int,int)",7
"org.apache.commons.compress.archivers.tar.TarUtils.parseName(byte[],int,int,ZipEncoding)",8
"org.apache.commons.compress.archivers.tar.TarUtils.parseOctalOrBinary(byte[],int,int)",5
org.apache.commons.compress.archivers.tar.TarUtils.parsePAX01SparseHeaders(String),2
"org.apache.commons.compress.archivers.tar.TarUtils.parsePAX1XSparseHeaders(InputStream,int)",7
"org.apache.commons.compress.archivers.tar.TarUtils.readSparseStructs(byte[],int,int)",34
org.apache.commons.compress.archivers.tar.TarUtils.verifyCheckSum(byte[]),12
org.apache.commons.compress.archivers.ArchiveOutputStream.count(long),2
org.apache.commons.compress.archivers.ArchiveInputStream.count(long),2
org.apache.commons.compress.archivers.ArchiveInputStream.read(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.close(),5
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.closeArchiveEntry(),5
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.finish(),3
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.putArchiveEntry(CpioArchiveEntry),12
org.apache.commons.compress.harmony.pack200.BandSet.cpEntryOrNullListToArray(List),15
"org.apache.commons.compress.harmony.pack200.BandSet.encodeFlags(String,long[],BHSDCodec,BHSDCodec,boolean)",3
org.apache.commons.compress.harmony.pack200.BandSet.timeToStop(BandAnalysisResults),4
org.apache.commons.compress.harmony.pack200.FileBands.finaliseBands(),4
org.apache.commons.compress.harmony.pack200.FileBands.pack(OutputStream),4
"org.apache.commons.compress.harmony.pack200.RunCodec.decode(InputStream,long)",3
"org.apache.commons.compress.harmony.pack200.RunCodec.normalise(int,Codec)",6
"org.apache.commons.compress.harmony.pack200.RunCodec.normalise(int[],Codec)",32
"org.apache.commons.compress.harmony.pack200.Codec.check(int,InputStream)",5
"org.apache.commons.compress.harmony.pack200.Codec.decodeInts(int,InputStream)",2
"org.apache.commons.compress.harmony.pack200.Codec.decodeInts(int,InputStream,int)",2
org.apache.commons.compress.harmony.pack200.Codec.encode(int[]),6
"org.apache.commons.compress.harmony.pack200.Pack200ClassReader.readConst(int,char[])",2
org.apache.commons.compress.harmony.pack200.Pack200ClassReader.readUnsignedShort(int),3
"org.apache.commons.compress.harmony.pack200.Pack200ClassReader.readUTF8(int,char[])",3
"org.apache.commons.compress.harmony.pack200.Archive.addJarEntry(PackingFile,List,List)",13
org.apache.commons.compress.harmony.pack200.Archive.doNormalPack(),4
org.apache.commons.compress.harmony.pack200.Archive.doZeroEffortPack(),2
org.apache.commons.compress.harmony.pack200.Archive.estimateSize(PackingFile),4
org.apache.commons.compress.harmony.pack200.Archive.pack(),2
org.apache.commons.compress.harmony.pack200.Archive.splitIntoSegments(List),15
"org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveInputStream(String,InputStream,String)",20
"org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveOutputStream(String,OutputStream,String)",14
org.apache.commons.compress.archivers.ArchiveStreamFactory.getArchiveInputStreamProviders(),2
org.apache.commons.compress.archivers.ArchiveStreamFactory.getArchiveOutputStreamProviders(),2
"org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.matches(byte[],int)",4
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.close(),2
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.getPath(DumpArchiveEntry),14
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.readBITS(),4
org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.readCLRI(),4
org.apache.commons.compress.archivers.dump.DumpArchiveSummary.equals(Object),7
org.apache.commons.compress.archivers.dump.DumpArchiveSummary.isCompressed(),2
org.apache.commons.compress.archivers.dump.DumpArchiveSummary.isExtendedAttributes(),2
org.apache.commons.compress.archivers.dump.DumpArchiveSummary.isMetaDataOnly(),2
org.apache.commons.compress.archivers.dump.DumpArchiveSummary.isNewHeader(),2
org.apache.commons.compress.archivers.dump.DumpArchiveSummary.isNewInode(),2
org.apache.commons.compress.archivers.dump.DumpArchiveUtil.calculateChecksum(byte[]),2
"org.apache.commons.compress.archivers.dump.DumpArchiveUtil.decode(ZipEncoding,byte[],int,int)",2
org.apache.commons.compress.archivers.dump.DumpArchiveUtil.verify(byte[]),4
org.apache.commons.compress.archivers.dump.TapeInputStream.available(),2
org.apache.commons.compress.archivers.dump.TapeInputStream.peek(),3
"org.apache.commons.compress.archivers.dump.TapeInputStream.read(byte[],int,int)",12
"org.apache.commons.compress.archivers.dump.TapeInputStream.readFully(byte[],int,int)",2
org.apache.commons.compress.archivers.dump.TapeInputStream.readRange(int),2
org.apache.commons.compress.archivers.dump.TapeInputStream.readRecord(),2
"org.apache.commons.compress.archivers.dump.TapeInputStream.resetBlockSize(int,boolean)",3
org.apache.commons.compress.archivers.dump.TapeInputStream.skip(long),78
org.apache.commons.compress.archivers.dump.DumpArchiveEntry.parse(byte[]),6
org.apache.commons.compress.archivers.dump.DumpArchiveEntry.equals(Object),11
org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getSize(),2
org.apache.commons.compress.archivers.dump.DumpArchiveEntry.isSparseRecord(int),2
org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setName(String),7
org.apache.commons.compress.archivers.dump.DumpArchiveEntry.update(byte[]),6
org.apache.commons.compress.archivers.jar.JarArchiveOutputStream.putArchiveEntry(ZipArchiveEntry),2
org.apache.commons.compress.archivers.jar.JarArchiveInputStream.getNextJarEntry(),2
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.equals(Object),22
"org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.equalSevenZMethods(Iterable,Iterable)",11
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getAccessTime(),2
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getCreationTime(),2
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getLastModifiedTime(),2
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.hashCode(),2
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setAccessTime(FileTime),4
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setContentMethods(Iterable),2
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setCreationTime(FileTime),4
org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setLastModifiedTime(FileTime),4
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.close(),5
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.closeArchiveEntry(),6
"org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.createArchiveEntry(File,String)",4
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.finish(),2
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.getContentMethods(SevenZArchiveEntry),4
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.getCurrentOutputStream(),2
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.setupFileOutputStream(),7
"org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.write(byte[],int,int)",2
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.write(InputStream),2
"org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.write(Path,OpenOption[])",3
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileAntiItems(DataOutput),6
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileATimes(DataOutput),30
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileCTimes(DataOutput),30
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileEmptyFiles(DataOutput),12
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileEmptyStreams(DataOutput),4
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileMTimes(DataOutput),30
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileNames(DataOutput),2
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileWindowsAttributes(DataOutput),30
"org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFolder(DataOutput,SevenZArchiveEntry)",4
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writePackInfo(DataOutput),9
"org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeSingleCodec(SevenZMethodConfiguration,OutputStream)",4
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeStreamsInfo(DataOutput),2
org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeUnpackInfo(DataOutput),45
org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder.getOptionsAsProperties(Object),36
"org.apache.commons.compress.archivers.sevenz.Coders.addDecoder(String,InputStream,long,Coder,byte[],int)",2
"org.apache.commons.compress.archivers.sevenz.Coders.addEncoder(OutputStream,SevenZMethod,Object)",2
org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration.equals(Object),6
org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration.hashCode(),2
org.apache.commons.compress.archivers.sevenz.DeltaDecoder.getOptionsFromCoder(Coder),3
org.apache.commons.compress.archivers.sevenz.CLI.main(String[]),57
"org.apache.commons.compress.archivers.sevenz.LZMADecoder.decode(String,InputStream,long,Coder,byte[],int)",5
org.apache.commons.compress.archivers.sevenz.LZMADecoder.getOptions(Object),2
"org.apache.commons.compress.archivers.sevenz.LZMADecoder.getOptionsFromCoder(Coder,InputStream)",3
"org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.decode(String,InputStream,long,Coder,byte[],int)",10
org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getDictionarySize(Coder),6
org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getDictSize(Object),2
org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getOptions(Object),2
"org.apache.commons.compress.archivers.sevenz.SevenZFile.matches(byte[],int)",5
org.apache.commons.compress.archivers.sevenz.SevenZFile.readUint64(ByteBuffer),4
"org.apache.commons.compress.archivers.sevenz.SevenZFile.buildDecoderStack(Folder,long,int,SevenZArchiveEntry)",8
"org.apache.commons.compress.archivers.sevenz.SevenZFile.buildDecodingStream(int,boolean)",100
org.apache.commons.compress.archivers.sevenz.SevenZFile.close(),7
org.apache.commons.compress.archivers.sevenz.SevenZFile.getCurrentStream(),23
org.apache.commons.compress.archivers.sevenz.SevenZFile.getDefaultName(),4
org.apache.commons.compress.archivers.sevenz.SevenZFile.getInputStream(SevenZArchiveEntry),8
org.apache.commons.compress.archivers.sevenz.SevenZFile.getNextEntry(),4
org.apache.commons.compress.archivers.sevenz.SevenZFile.hasCurrentEntryBeenRead(),6
"org.apache.commons.compress.archivers.sevenz.SevenZFile.initializeArchive(StartHeader,byte[],boolean)",10
org.apache.commons.compress.archivers.sevenz.SevenZFile.read(),2
"org.apache.commons.compress.archivers.sevenz.SevenZFile.read(byte[],int,int)",3
"org.apache.commons.compress.archivers.sevenz.SevenZFile.readAllOrBits(ByteBuffer,int)",3
org.apache.commons.compress.archivers.sevenz.SevenZFile.readArchiveProperties(ByteBuffer),2
"org.apache.commons.compress.archivers.sevenz.SevenZFile.readBits(ByteBuffer,int)",5
"org.apache.commons.compress.archivers.sevenz.SevenZFile.readEncodedHeader(ByteBuffer,Archive,byte[])",16
"org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(ByteBuffer,Archive)",10
"org.apache.commons.compress.archivers.sevenz.SevenZFile.readPackInfo(ByteBuffer,Archive)",12
org.apache.commons.compress.archivers.sevenz.SevenZFile.readStartHeader(long),77
"org.apache.commons.compress.archivers.sevenz.SevenZFile.readStreamsInfo(ByteBuffer,Archive)",8
"org.apache.commons.compress.archivers.sevenz.SevenZFile.readUnpackInfo(ByteBuffer,Archive)",24
"org.apache.commons.compress.archivers.sevenz.SevenZFile.reopenFolderInputStream(int,SevenZArchiveEntry)",2
org.apache.commons.compress.archivers.sevenz.SevenZFile.sanityCheckAndCollectStatistics(ByteBuffer),18
org.apache.commons.compress.archivers.sevenz.SevenZFile.sanityCheckArchiveProperties(ByteBuffer),4
"org.apache.commons.compress.archivers.sevenz.SevenZFile.sanityCheckPackInfo(ByteBuffer,ArchiveStatistics)",24
"org.apache.commons.compress.archivers.sevenz.SevenZFile.sanityCheckStreamsInfo(ByteBuffer,ArchiveStatistics)",16
"org.apache.commons.compress.archivers.sevenz.SevenZFile.sanityCheckUnpackInfo(ByteBuffer,ArchiveStatistics)",44
"org.apache.commons.compress.archivers.sevenz.SevenZFile.skipEntriesWhenNeeded(int,boolean,int)",19
com.fasterxml.jackson.databind.ObjectMapper.writerFor(Class),2
com.fasterxml.jackson.databind.ObjectMapper.writerFor(TypeReference),2
com.fasterxml.jackson.databind.ObjectMapper.writer(PrettyPrinter),2
com.fasterxml.jackson.databind.ObjectMapper.writerWithType(Class),2
com.fasterxml.jackson.databind.ObjectMapper.writerWithType(TypeReference),2
com.fasterxml.jackson.databind.ObjectMapper.readerForUpdating(Object),2
com.fasterxml.jackson.databind.ObjectMapper.readerFor(Class),2
"com.fasterxml.jackson.databind.ObjectMapper._convert(Object,JavaType)",66
"com.fasterxml.jackson.databind.ObjectMapper.updateValue(Object,Object)",24
"com.fasterxml.jackson.databind.ObjectMapper.acceptJsonFormatVisitor(JavaType,JsonFormatVisitorWrapper)",2
"com.fasterxml.jackson.databind.ObjectMapper._writeValueAndClose(JsonGenerator,Object)",7
"com.fasterxml.jackson.databind.ObjectMapper._writeCloseable(JsonGenerator,Object,SerializationConfig)",6
"com.fasterxml.jackson.databind.ObjectMapper._writeCloseableValue(JsonGenerator,Object,SerializationConfig)",8
"com.fasterxml.jackson.databind.ObjectMapper._readValue(DeserializationConfig,JsonParser,JavaType)",10
"com.fasterxml.jackson.databind.ObjectMapper._initForReading(JsonParser,JavaType)",3
"com.fasterxml.jackson.databind.ObjectMapper._verifyNoTrailingTokens(JsonParser,DeserializationContext,JavaType)",2
"com.fasterxml.jackson.databind.ObjectMapper._findRootDeserializer(DeserializationContext,JavaType)",3
com.fasterxml.jackson.databind.ObjectMapper._verifySchemaType(FormatSchema),3
"com.fasterxml.jackson.databind.PropertyMetadata.construct(Boolean,String,Integer,String)",6
"com.fasterxml.jackson.databind.PropertyMetadata.construct(boolean,String,Integer,String)",5
com.fasterxml.jackson.databind.PropertyMetadata.readResolve(),9
com.fasterxml.jackson.databind.PropertyMetadata.withDefaultValue(String),6
com.fasterxml.jackson.databind.PropertyMetadata.withRequired(Boolean),4
com.fasterxml.jackson.databind.PropertyMetadata.hasDefaultValue(),2
com.fasterxml.jackson.databind.PropertyMetadata.isRequired(),3
com.fasterxml.jackson.databind.PropertyMetadata.hasIndex(),2
com.fasterxml.jackson.databind.SerializationConfig._withBase(BaseSettings),2
com.fasterxml.jackson.databind.SerializationConfig.withRootName(PropertyName),4
com.fasterxml.jackson.databind.SerializationConfig.with(SubtypeResolver),2
com.fasterxml.jackson.databind.SerializationConfig.withView(Class),2
com.fasterxml.jackson.databind.SerializationConfig.with(ContextAttributes),2
com.fasterxml.jackson.databind.SerializationConfig.with(DateFormat),2
com.fasterxml.jackson.databind.SerializationConfig.with(SerializationFeature),2
"com.fasterxml.jackson.databind.SerializationConfig.with(SerializationFeature,SerializationFeature[])",4
com.fasterxml.jackson.databind.SerializationConfig.withFeatures(SerializationFeature[]),4
com.fasterxml.jackson.databind.SerializationConfig.without(SerializationFeature),2
"com.fasterxml.jackson.databind.SerializationConfig.without(SerializationFeature,SerializationFeature[])",4
com.fasterxml.jackson.databind.SerializationConfig.withoutFeatures(SerializationFeature[]),4
com.fasterxml.jackson.databind.SerializationConfig.with(Feature),3
com.fasterxml.jackson.databind.SerializationConfig.withFeatures(Feature[]),6
com.fasterxml.jackson.databind.SerializationConfig.without(Feature),3
com.fasterxml.jackson.databind.SerializationConfig.withoutFeatures(Feature[]),6
com.fasterxml.jackson.databind.SerializationConfig.with(FormatFeature),4
com.fasterxml.jackson.databind.SerializationConfig.withFeatures(FormatFeature[]),13
com.fasterxml.jackson.databind.SerializationConfig.without(FormatFeature),4
com.fasterxml.jackson.databind.SerializationConfig.withoutFeatures(FormatFeature[]),13
com.fasterxml.jackson.databind.SerializationConfig._withJsonWriteFeatures(FormatFeature[]),20
com.fasterxml.jackson.databind.SerializationConfig._withoutJsonWriteFeatures(FormatFeature[]),20
com.fasterxml.jackson.databind.SerializationConfig.withFilters(FilterProvider),2
com.fasterxml.jackson.databind.SerializationConfig.withDefaultPrettyPrinter(PrettyPrinter),2
com.fasterxml.jackson.databind.SerializationConfig.with(ConstructorDetector),2
com.fasterxml.jackson.databind.SerializationConfig.constructDefaultPrettyPrinter(),2
com.fasterxml.jackson.databind.SerializationConfig.initialize(JsonGenerator),40
com.fasterxml.jackson.databind.SerializationConfig.useRootWrapping(),3
com.fasterxml.jackson.databind.SerializationConfig.isEnabled(SerializationFeature),2
"com.fasterxml.jackson.databind.SerializationConfig.isEnabled(Feature,JsonFactory)",3
com.fasterxml.jackson.databind.SerializationConfig.hasSerializationFeatures(int),2
com.fasterxml.jackson.databind.SerializationConfig.getConstructorDetector(),2
"com.fasterxml.jackson.databind.exc.InvalidNullException.from(DeserializationContext,PropertyName,JavaType)",2
com.fasterxml.jackson.databind.exc.PropertyBindingException.getKnownPropertyIds(),2
"com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer.createContextual(SerializerProvider,BeanProperty)",4
"com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)",88
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter.assignSerializer(JsonSerializer),4
"com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter.depositSchemaProperty(JsonObjectFormatVisitor,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter._depositSchemaProperty(ObjectNode,JsonNode)",4
"com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter._findAndAddDynamic(PropertySerializerMap,Class,SerializerProvider)",6
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider._convert(Map),6
"com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.findPropertyFilter(Object,Object)",4
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.canUseFor(ObjectIdGenerator),4
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.generateId(Object),5
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.forScope(Class),2
"com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer.withContentInclusion(Object,boolean)",3
"com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer.isEmpty(SerializerProvider,Entry)",10
"com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._findAndAddDynamic(PropertySerializerMap,Class,SerializerProvider)",2
"com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._findAndAddDynamic(PropertySerializerMap,JavaType,SerializerProvider)",2
org.apache.commons.lang3.mutable.MutableBoolean.equals(Object),3
org.apache.commons.lang3.mutable.MutableBoolean.hashCode(),2
org.apache.commons.lang3.mutable.MutableBoolean.isFalse(),2
org.apache.commons.lang3.mutable.MutableLong.equals(Object),3
org.apache.commons.lang3.mutable.MutableDouble.equals(Object),3
org.apache.commons.lang3.mutable.MutableInt.equals(Object),3
org.apache.commons.lang3.mutable.MutableObject.equals(Object),4
org.apache.commons.lang3.mutable.MutableFloat.equals(Object),3
org.apache.commons.lang3.mutable.MutableShort.equals(Object),3
"org.apache.commons.lang3.StringUtils.abbreviate(String,String,int,int)",58
"org.apache.commons.lang3.StringUtils.abbreviateMiddle(String,String,int)",4
org.apache.commons.lang3.StringUtils.capitalize(String),4
"org.apache.commons.lang3.StringUtils.center(String,int,char)",4
"org.apache.commons.lang3.StringUtils.center(String,int,String)",6
org.apache.commons.lang3.StringUtils.chomp(String),8
"org.apache.commons.lang3.StringUtils.contains(CharSequence,int)",3
"org.apache.commons.lang3.StringUtils.containsAny(CharSequence,char[])",31
"org.apache.commons.lang3.StringUtils.containsAny(CharSequence,CharSequence)",2
"org.apache.commons.lang3.StringUtils.containsNone(CharSequence,String)",2
"org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,char[])",6
"org.apache.commons.lang3.StringUtils.containsOnly(CharSequence,String)",3
com.fasterxml.jackson.databind.util.CompactStringObjectMap.construct(Map),7
com.fasterxml.jackson.databind.util.CompactStringObjectMap.find(String),3
"com.fasterxml.jackson.databind.util.CompactStringObjectMap._find2(String,int,Object)",9
com.fasterxml.jackson.databind.util.CompactStringObjectMap.findCaseInsensitive(String),6
com.fasterxml.jackson.databind.util.CompactStringObjectMap.keys(),3
com.fasterxml.jackson.databind.util.ExceptionUtil.rethrowIfFatal(Throwable),4
"com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.construct(MapperConfig,AnnotatedMember,PropertyName,PropertyMetadata,Include)",3
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withSimpleName(String),3
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withName(PropertyName),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withMetadata(PropertyMetadata),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.withInclusion(Value),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getWrapperName(),3
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getPrimaryType(),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getRawPrimaryType(),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.findAliases(),3
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.hasGetter(),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.hasSetter(),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getGetter(),3
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getSetter(),3
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getField(),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getConstructorParameter(),2
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.getConstructorParameters(),2
com.fasterxml.jackson.databind.util.LinkedNode.linkNext(LinkedNode),2
"com.fasterxml.jackson.databind.util.LinkedNode.contains(LinkedNode,Object)",4
"com.fasterxml.jackson.databind.util.EnumValues.construct(SerializationConfig,AnnotatedClass)",2
"com.fasterxml.jackson.databind.util.EnumValues.constructFromName(MapperConfig,Class)",3
"com.fasterxml.jackson.databind.util.EnumValues.constructFromName(MapperConfig,AnnotatedClass)",2
"com.fasterxml.jackson.databind.util.EnumValues.constructFromToString(MapperConfig,AnnotatedClass)",6
"com.fasterxml.jackson.databind.util.EnumValues.constructFromToString(MapperConfig,Class)",3
"com.fasterxml.jackson.databind.util.EnumValues.constructUsingEnumNamingStrategy(MapperConfig,AnnotatedClass,EnumNamingStrategy)",4
"com.fasterxml.jackson.databind.util.EnumValues.constructUsingEnumNamingStrategy(MapperConfig,Class,EnumNamingStrategy)",3
"com.fasterxml.jackson.databind.util.EnumValues.construct(MapperConfig,Class,List)",2
com.fasterxml.jackson.databind.util.EnumValues._enumConstants(Class),2
com.fasterxml.jackson.databind.util.EnumValues.internalMap(),3
"com.fasterxml.jackson.databind.util.BeanUtil.okNameForGetter(AnnotatedMethod,boolean)",2
"com.fasterxml.jackson.databind.util.BeanUtil.okNameForRegularGetter(AnnotatedMethod,String,boolean)",9
"com.fasterxml.jackson.databind.util.BeanUtil.okNameForIsGetter(AnnotatedMethod,String,boolean)",6
"com.fasterxml.jackson.databind.util.BeanUtil.okNameForMutator(AnnotatedMethod,String,boolean)",3
com.fasterxml.jackson.databind.util.BeanUtil.getDefaultValue(JavaType),7
com.fasterxml.jackson.databind.util.BeanUtil.isCglibGetCallbacks(AnnotatedMethod),6
com.fasterxml.jackson.databind.util.ViewMatcher.construct(Class[]),4
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.setCapacity(long),12
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.hasOverflowed(),2
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.evict(),4
"com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.drainOnReadIfNeeded(int,long)",4
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.tryToDrainBuffers(),6
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.drainReadBuffers(),2
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.drainReadBuffer(int),4
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.applyRead(Node),2
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.drainWriteBuffer(),4
"com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.tryToRetire(Node,WeightedValue)",2
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.makeRetired(Node),4
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.makeDead(Node),2
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.containsValue(Object),4
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.get(Object),2
org.apache.commons.jxpath.JXPathContext.getIdentityManager(),3
org.apache.commons.jxpath.JXPathContext.getPointerByID(String),2
org.apache.commons.jxpath.JXPathContext.getKeyManager(),3
"org.apache.commons.jxpath.JXPathContext.getPointerByKey(String,String)",2
"org.apache.commons.jxpath.JXPathContext.getNodeSetByKey(String,Object)",2
"org.apache.commons.jxpath.servlet.ServletRequestHandler.collectPropertyNames(HashSet,Object)",4
"org.apache.commons.jxpath.servlet.ServletRequestHandler.getProperty(Object,String)",5
org.apache.commons.jxpath.servlet.PageScopeContextHandler.getPropertyNames(Object),2
"org.apache.commons.jxpath.servlet.ServletContextHandler.collectPropertyNames(HashSet,Object)",4
"org.apache.commons.jxpath.servlet.HttpSessionHandler.collectPropertyNames(HashSet,Object)",3
"org.apache.commons.jxpath.servlet.HttpSessionHandler.getProperty(Object,String)",3
"org.apache.commons.jxpath.servlet.HttpSessionHandler.setProperty(Object,String,Object)",2
org.apache.commons.jxpath.servlet.KeywordVariables.getVariable(String),2
org.apache.commons.jxpath.servlet.JXPathServletContexts.getPageContext(PageContext),2
"org.apache.commons.jxpath.servlet.JXPathServletContexts.getRequestContext(ServletRequest,ServletContext)",7
"org.apache.commons.jxpath.servlet.JXPathServletContexts.getSessionContext(HttpSession,ServletContext)",2
org.apache.commons.jxpath.servlet.JXPathServletContexts.getApplicationContext(ServletContext),2
org.apache.commons.jxpath.servlet.ServletRequestAndContext.getSession(),2
org.apache.commons.jxpath.JXPathBasicBeanInfo.isDynamic(),2
org.apache.commons.jxpath.JXPathBasicBeanInfo.getPropertyDescriptors(),32
org.apache.commons.jxpath.JXPathBasicBeanInfo.getPropertyDescriptor(String),3
org.apache.commons.jxpath.JXPathBasicBeanInfo.toString(),8
"org.apache.commons.jxpath.util.BasicTypeConverter.convert(Object,Class)",57
"org.apache.commons.jxpath.util.BasicTypeConverter.convertStringToPrimitive(Object,Class)",9
"org.apache.commons.jxpath.util.BasicTypeConverter.allocateNumber(Class,double)",48
org.apache.commons.jxpath.util.BasicTypeConverter.allocateCollection(Class),14
org.apache.commons.jxpath.util.TypeUtils.wrapPrimitive(Class),2
"org.apache.commons.jxpath.util.JXPath11CompatibleTypeConverter.canConvert(Object,Class)",2
"org.apache.commons.jxpath.util.JXPath11CompatibleTypeConverter.convert(Object,Class)",3
"org.apache.commons.jxpath.util.ClassLoaderUtil.getClass(ClassLoader,String,boolean)",2
"org.apache.commons.jxpath.util.ClassLoaderUtil.getClass(String,boolean)",3
org.apache.commons.jxpath.util.ClassLoaderUtil.toCanonicalName(String),5
org.apache.commons.jxpath.util.ValueUtils.isCollection(Object),3
"org.apache.commons.jxpath.util.ValueUtils.getIndexedPropertyLength(Object,IndexedPropertyDescriptor)",12
org.apache.commons.jxpath.util.ValueUtils.getLength(Object),4
"org.apache.commons.jxpath.util.ValueUtils.expandCollection(Object,int)",6
"org.apache.commons.jxpath.util.ValueUtils.remove(Object,int)",17
"org.apache.commons.jxpath.util.ValueUtils.getValue(Object,int)",14
"org.apache.commons.jxpath.util.ValueUtils.setValue(Object,int,Object)",5
"org.apache.commons.jxpath.util.ValueUtils.getValue(Object,PropertyDescriptor)",17
"org.apache.commons.jxpath.util.ValueUtils.setValue(Object,PropertyDescriptor,Object)",23
"org.apache.commons.jxpath.util.ValueUtils.convert(Object,Class)",3
"org.apache.commons.jxpath.util.ValueUtils.getValue(Object,PropertyDescriptor,int)",24
"org.apache.commons.jxpath.util.ValueUtils.setValue(Object,PropertyDescriptor,int,Object)",17
org.apache.commons.jxpath.util.ValueUtils.getValue(Object),2
org.apache.commons.jxpath.util.ValueUtils.getAccessibleMethod(Method),15
"org.apache.commons.jxpath.util.ValueUtils.getAccessibleMethodFromInterfaceNest(Class,String,Class[])",20
"org.apache.commons.jxpath.util.MethodLookupUtils.matchParameterTypes(Class[],Object[])",42
"org.apache.commons.jxpath.util.MethodLookupUtils.matchType(Class,Object)",5
org.apache.commons.jxpath.util.KeyManagerUtils.getExtendedKeyManager(KeyManager),2
"org.apache.commons.jxpath.ClassFunctions.getFunction(String,String,Object[])",22
org.apache.commons.jxpath.XMLDocumentContainer.getValue(),48
"org.apache.commons.jxpath.ri.Parser.describePosition(String,int)",3
org.apache.commons.jxpath.ri.axes.ParentContext.setPosition(int),2
org.apache.commons.jxpath.ri.axes.ParentContext.nextNode(),13
org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext.getDocumentOrder(),2
org.apache.commons.jxpath.ri.axes.NamespaceContext.nextNode(),10
org.apache.commons.jxpath.ri.axes.PredicateContext.setupDynamicPropertyPointer(),4
org.apache.commons.jxpath.ri.axes.PredicateContext.setPosition(int),8
org.apache.commons.jxpath.ri.axes.PredicateContext.getCurrentNodePointer(),5
org.apache.commons.jxpath.ri.axes.NodeSetContext.getCurrentNodePointer(),3
org.apache.commons.jxpath.ri.axes.NodeSetContext.setPosition(int),3
org.apache.commons.jxpath.ri.axes.NodeSetContext.nextSet(),2
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStep(EvalContext,NodePointer,Step[],int)",8
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepNoPredicatesPropertyOwner(EvalContext,PropertyOwnerPointer,Step[],int)",13
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepNoPredicatesStandard(EvalContext,NodePointer,Step[],int)",15
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepPredicatesPropertyOwner(EvalContext,PropertyOwnerPointer,Step[],int)",2
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.createChildPointerForStep(PropertyOwnerPointer,Step)",15
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepPredicatesStandard(EvalContext,NodePointer,Step[],int)",20
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicate(EvalContext,NodePointer,Step[],int,Expression[],int)",3
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicateName(EvalContext,NodePointer,Step[],int,Expression[],int)",82
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicatesStandard(EvalContext,List,Step[],int,Expression[],int)",11
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicateIndex(EvalContext,NodePointer,Step[],int,Expression[],int)",2
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.indexFromPredicate(EvalContext,Expression)",16
org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.computeQuality(NodePointer),4
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.isNameAttributeEqual(NodePointer,String)",4
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.isCollectionElement(NodePointer,int)",6
org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.valuePointer(NodePointer),2
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.createNullPointer(EvalContext,NodePointer,Step[],int)",6
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.createNullPointerForPredicates(EvalContext,NodePointer,Step[],int,Expression[],int)",4
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.getNodeIterator(EvalContext,NodePointer,Step)",4
org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.isLangAttribute(QName),4
org.apache.commons.jxpath.ri.axes.InitialContext.setPosition(int),5
org.apache.commons.jxpath.ri.axes.InitialContext.nextSet(),2
org.apache.commons.jxpath.ri.axes.DescendantContext.getCurrentNodePointer(),3
org.apache.commons.jxpath.ri.axes.DescendantContext.isRecursive(),6
org.apache.commons.jxpath.ri.axes.RootContext.getConstantContext(Object),3
org.apache.commons.jxpath.ri.axes.RootContext.getRegisteredValue(int),4
org.apache.commons.jxpath.ri.axes.RootContext.setRegisteredValue(Object),6
org.apache.commons.jxpath.ri.axes.SelfContext.getCurrentNodePointer(),3
org.apache.commons.jxpath.ri.axes.SelfContext.setPosition(int),9
org.apache.commons.jxpath.ri.axes.AttributeContext.nextNode(),11
org.apache.commons.jxpath.ri.axes.UnionContext.getDocumentOrder(),2
org.apache.commons.jxpath.ri.axes.ChildContext.getCurrentNodePointer(),5
org.apache.commons.jxpath.ri.axes.ChildContext.getSingleNodePointer(),7
org.apache.commons.jxpath.ri.axes.ChildContext.setPosition(int),6
org.apache.commons.jxpath.ri.axes.ChildContext.prepare(),7
org.apache.commons.jxpath.ri.parser.XPathParser.NCName(),37
org.apache.commons.jxpath.ri.parser.XPathParser.NCName_Without_CoreFunctions(),6
org.apache.commons.jxpath.ri.parser.XPathParser.CoreFunctionName(),32
org.apache.commons.jxpath.ri.parser.XPathParser.QName(),4
org.apache.commons.jxpath.ri.parser.XPathParser.QName_Without_CoreFunctions(),5
org.apache.commons.jxpath.ri.parser.XPathParser.LocationPath(),3
org.apache.commons.jxpath.ri.parser.XPathParser.AbsoluteLocationPath(),4
org.apache.commons.jxpath.ri.parser.XPathParser.RelativeLocationPath(),2
org.apache.commons.jxpath.ri.parser.XPathParser.LocationStep(ArrayList),3
org.apache.commons.jxpath.ri.parser.XPathParser.NodeTest(ArrayList),32
org.apache.commons.jxpath.ri.parser.XPathParser.AxisSpecifier(),2
org.apache.commons.jxpath.ri.parser.XPathParser.AxisName(),14
org.apache.commons.jxpath.ri.parser.XPathParser.AbbreviatedAxisSpecifier(),2
org.apache.commons.jxpath.ri.parser.XPathParser.PrimaryExpr(),7
org.apache.commons.jxpath.ri.parser.XPathParser.FunctionCall(),2
org.apache.commons.jxpath.ri.parser.XPathParser.CoreFunctionCall(),2
org.apache.commons.jxpath.ri.parser.XPathParser.ArgumentList(),3
org.apache.commons.jxpath.ri.parser.XPathParser.UnionExpr(),6
org.apache.commons.jxpath.ri.parser.XPathParser.PathExpr(),3
org.apache.commons.jxpath.ri.parser.XPathParser.FilterExpr(),8
org.apache.commons.jxpath.ri.parser.XPathParser.OrExpr(),6
org.apache.commons.jxpath.ri.parser.XPathParser.AndExpr(),6
org.apache.commons.jxpath.ri.parser.XPathParser.EqualityExpr(),6
org.apache.commons.jxpath.ri.parser.XPathParser.RelationalExpr(),10
org.apache.commons.jxpath.ri.parser.XPathParser.AdditiveExpr(),6
org.apache.commons.jxpath.ri.parser.XPathParser.SubtractiveExpr(),2
org.apache.commons.jxpath.ri.parser.XPathParser.MultiplicativeExpr(),8
org.apache.commons.jxpath.ri.parser.XPathParser.UnaryExpr(),3
org.apache.commons.jxpath.ri.parser.XPathParser.WildcardName(),15
org.apache.commons.jxpath.ri.parser.XPathParser.NodeType(),5
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_2(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_144(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_143(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_132(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_130(),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_148(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_131(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_64(),6
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_113(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_91(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_129(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_6(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_146(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_135(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_145(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_134(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_133(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_142(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_140(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_139(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_77(),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_137(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_128(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_112(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_111(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_110(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_122(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_109(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_108(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_107(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_106(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_105(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_104(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_103(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_20(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_102(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_101(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_100(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_138(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_15(),37
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_90(),14
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_118(),5
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator.forScope(Class),2
"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handleTypePropertyValue(JsonParser,DeserializationContext,String,Object)",5
"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._handleTypePropertyValue(JsonParser,DeserializationContext,String,Object,String,int)",7
"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.handlePropertyValue(JsonParser,DeserializationContext,String,Object)",17
"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler.complete(JsonParser,DeserializationContext,Object)",40
"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserialize(JsonParser,DeserializationContext,int,String)",2
"com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._deserializeAndSet(JsonParser,DeserializationContext,Object,int,String)",4
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.appendReferring(Referring),2
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.bindItem(Object),3
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.hasReferringProperties(),3
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.referringProperties(),2
"com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler.renameProperties(Collection,NameTransformer)",3
"com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler.processUnwrappedCreatorProperties(JsonParser,DeserializationContext,PropertyValueBuffer,TokenBuffer)",2
"com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler.processUnwrapped(JsonParser,DeserializationContext,Object,TokenBuffer)",2
"com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.findForCollection(DeserializationContext,JavaType)",29
"com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.findForMap(DeserializationContext,JavaType)",20
"com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.construct(DeserializationContext,ValueInstantiator,SettableBeanProperty[],BeanPropertyMap)",4
"com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.construct(DeserializationContext,ValueInstantiator,SettableBeanProperty[],boolean)",3
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.renameAll(NameTransformer),7
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.findCreatorProperty(int),4
"com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.build(DeserializationContext,PropertyValueBuffer)",3
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.withValueDeserializer(JsonDeserializer),3
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.fixAccess(DeserializationConfig),2
"com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.deserializeSetAndReturn(JsonParser,DeserializationContext,Object)",13
"com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer.finishBuild(DeserializationContext,Object)",5
"com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer.deserialize(JsonParser,DeserializationContext)",30
"com.fasterxml.jackson.databind.deser.impl.CreatorCollector.addDelegatingCreator(AnnotatedWithParams,boolean,SettableBeanProperty[],int)",4
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.hasDefaultCreator(),2
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.hasDelegatingCreator(),2
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.hasPropertyBasedCreator(),2
"com.fasterxml.jackson.databind.deser.impl.CreatorCollector._computeDelegateType(DeserializationContext,AnnotatedWithParams,SettableBeanProperty[])",17
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._fixAccess(AnnotatedMember),3
"com.fasterxml.jackson.databind.deser.impl.CreatorCollector.verifyNonDup(AnnotatedWithParams,int,boolean)",54
"com.fasterxml.jackson.databind.deser.impl.CreatorCollector._reportDuplicateCreator(int,boolean,AnnotatedWithParams,AnnotatedWithParams)",2
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._isEnumValueOf(AnnotatedWithParams),3
"com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty.deserializeAndSet(JsonParser,DeserializationContext,Object)",4
"com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty.deserializeSetAndReturn(JsonParser,DeserializationContext,Object)",6
"com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty.set(Object,Object)",2
"com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty.setAndReturn(Object,Object)",2
"com.fasterxml.jackson.databind.deser.impl.UnsupportedTypeDeserializer.deserialize(JsonParser,DeserializationContext)",4
com.fasterxml.jackson.databind.deser.impl.MethodProperty.withValueDeserializer(JsonDeserializer),3
com.fasterxml.jackson.databind.deser.impl.MethodProperty.getAnnotation(Class),2
"com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(JsonParser,DeserializationContext,Object)",22
"com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeSetAndReturn(JsonParser,DeserializationContext,Object)",42
"com.fasterxml.jackson.databind.deser.impl.MethodProperty.set(Object,Object)",11
org.joda.time.MutableInterval.setInterval(ReadableInterval),2
"org.joda.time.MutableInterval.setInterval(ReadableInstant,ReadableInstant)",3
org.joda.time.MutableInterval.setPeriodAfterStart(ReadablePeriod),2
org.joda.time.MutableInterval.setPeriodBeforeEnd(ReadablePeriod),2
"org.joda.time.DurationField.subtract(long,int)",2
"org.joda.time.DurationField.subtract(long,long)",2
org.joda.time.Partial.withChronologyRetainFields(Chronology),2
"org.joda.time.Partial.with(DateTimeFieldType,int)",24
org.joda.time.Partial.without(DateTimeFieldType),2
"org.joda.time.Partial.withField(DateTimeFieldType,int)",2
"org.joda.time.Partial.withFieldAdded(DurationFieldType,int)",2
"org.joda.time.Partial.withFieldAddWrapped(DurationFieldType,int)",2
"org.joda.time.Partial.withPeriodAdded(ReadablePeriod,int)",5
org.joda.time.Partial.isMatch(ReadableInstant),4
org.joda.time.Partial.isMatch(ReadablePartial),5
org.joda.time.Partial.getFormatter(),15
org.joda.time.Partial.toString(),5
org.joda.time.Partial.toStringList(),3
org.joda.time.Partial.toString(String),2
"org.joda.time.Partial.toString(String,Locale)",2
org.joda.time.Duration.standardDays(long),2
org.joda.time.Duration.standardHours(long),2
org.joda.time.Duration.standardMinutes(long),2
org.joda.time.Duration.standardSeconds(long),2
org.joda.time.Duration.millis(long),2
org.joda.time.Duration.withMillis(long),2
"org.joda.time.Duration.withDurationAdded(long,int)",3
"org.joda.time.Duration.withDurationAdded(ReadableDuration,int)",3
org.joda.time.Duration.plus(ReadableDuration),2
org.joda.time.Duration.minus(ReadableDuration),2
org.joda.time.Duration.multipliedBy(long),2
org.joda.time.Duration.dividedBy(long),2
"org.joda.time.Duration.dividedBy(long,RoundingMode)",2
org.joda.time.Duration.negated(),2
org.joda.time.Duration.abs(),2
org.joda.time.DateMidnight.now(DateTimeZone),2
org.joda.time.DateMidnight.now(Chronology),2
org.joda.time.DateMidnight.withMillis(long),2
org.joda.time.DateMidnight.withChronology(Chronology),2
org.joda.time.DateMidnight.withZoneRetainFields(DateTimeZone),2
org.joda.time.DateMidnight.withFields(ReadablePartial),2
"org.joda.time.DateMidnight.withField(DateTimeFieldType,int)",2
"org.joda.time.DateMidnight.withFieldAdded(DurationFieldType,int)",3
"org.joda.time.DateMidnight.withDurationAdded(long,int)",3
"org.joda.time.DateMidnight.withDurationAdded(ReadableDuration,int)",3
"org.joda.time.DateMidnight.withPeriodAdded(ReadablePeriod,int)",3
org.joda.time.DateMidnight.plusYears(int),2
org.joda.time.DateMidnight.plusMonths(int),2
org.joda.time.DateMidnight.plusWeeks(int),2
org.joda.time.DateMidnight.plusDays(int),2
org.joda.time.DateMidnight.minusYears(int),2
org.joda.time.DateMidnight.minusMonths(int),2
org.joda.time.DateMidnight.minusWeeks(int),2
org.joda.time.DateMidnight.minusDays(int),2
org.joda.time.DateMidnight.property(DateTimeFieldType),3
org.joda.time.PeriodType.standard(),2
org.joda.time.PeriodType.yearMonthDayTime(),2
org.joda.time.PeriodType.yearMonthDay(),2
org.joda.time.PeriodType.yearWeekDayTime(),2
org.joda.time.PeriodType.yearWeekDay(),2
org.joda.time.PeriodType.yearDayTime(),2
org.joda.time.PeriodType.yearDay(),2
org.joda.time.PeriodType.dayTime(),2
org.apache.commons.collections4.set.ListOrderedSet.remove(Object),2
org.apache.commons.collections4.set.ListOrderedSet.removeAll(Collection),2
org.apache.commons.collections4.set.ListOrderedSet.removeIf(Predicate),3
org.apache.commons.collections4.set.ListOrderedSet.retainAll(Collection),3
org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(Set),2
org.apache.commons.collections4.set.MapBackedSet.add(Object),2
org.apache.commons.collections4.set.MapBackedSet.addAll(Collection),4
org.apache.commons.collections4.set.MapBackedSet.remove(Object),2
org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(SortedSet),2
org.apache.commons.collections4.set.PredicatedSet.equals(Object),3
org.apache.commons.collections4.set.UnmodifiableNavigableSet.unmodifiableNavigableSet(NavigableSet),2
"org.apache.commons.collections4.set.TransformedSortedSet.transformedSortedSet(SortedSet,Transformer)",3
"org.apache.commons.collections4.EnumerationUtils.get(Enumeration,int)",4
"org.apache.commons.collections4.sequence.SequencesComparator.buildScript(int,int,int,int,EditScript)",68
"org.apache.commons.collections4.sequence.SequencesComparator.buildSnake(int,int,int,int)",6
org.apache.commons.collections4.sequence.ReplacementsFinder.visitKeepCommand(Object),3
org.apache.commons.collections4.sequence.EditScript.visit(CommandVisitor),2
"org.apache.commons.collections4.bag.AbstractMapBag.add(Object,int)",3
org.apache.commons.collections4.bag.AbstractMapBag.addAll(Collection),4
org.apache.commons.collections4.bag.AbstractMapBag.containsAll(Bag),4
org.apache.commons.collections4.bag.AbstractMapBag.containsAll(Collection),2
"org.apache.commons.collections4.bag.AbstractMapBag.doReadObject(Map,ObjectInputStream)",2
org.apache.commons.collections4.bag.AbstractMapBag.doWriteObject(ObjectOutputStream),2
org.apache.commons.collections4.bag.AbstractMapBag.equals(Object),7
org.apache.commons.collections4.bag.AbstractMapBag.getCount(Object),2
org.apache.commons.collections4.bag.AbstractMapBag.hashCode(),3
org.apache.commons.collections4.bag.AbstractMapBag.remove(Object),2
"org.apache.commons.collections4.bag.AbstractMapBag.remove(Object,int)",4
org.apache.commons.collections4.bag.AbstractMapBag.removeAll(Collection),5
org.apache.commons.collections4.bag.AbstractMapBag.retainAll(Bag),8
org.apache.commons.collections4.bag.AbstractMapBag.retainAll(Collection),2
org.apache.commons.collections4.bag.AbstractMapBag.toArray(),3
org.apache.commons.collections4.bag.AbstractMapBag.toArray(Object[]),12
org.apache.commons.collections4.bag.AbstractMapBag.toString(),4
org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet(),2
org.apache.commons.collections4.bag.CollectionBag.addAll(Collection),4
org.apache.commons.collections4.bag.UnmodifiableBag.unmodifiableBag(Bag),2
org.apache.commons.collections4.bag.UnmodifiableSortedBag.unmodifiableSortedBag(SortedBag),2
org.apache.commons.collections4.bag.AbstractBagDecorator.equals(Object),3
"org.apache.commons.collections4.bag.TransformedSortedBag.transformedSortedBag(SortedBag,Transformer)",3
org.apache.commons.collections4.bag.TreeBag.add(Object),3
org.apache.commons.collections4.bag.PredicatedBag.equals(Object),3
org.apache.commons.collections4.bag.CollectionSortedBag.addAll(Collection),4
"org.apache.commons.collections4.bag.TransformedBag.transformedBag(Bag,Transformer)",3
org.apache.commons.collections4.multiset.AbstractMultiSet.clear(),2
org.apache.commons.collections4.multiset.AbstractMultiSet.contains(Object),2
org.apache.commons.collections4.multiset.AbstractMultiSet.doReadObject(ObjectInputStream),2
org.apache.commons.collections4.multiset.AbstractMultiSet.doWriteObject(ObjectOutputStream),2
org.apache.commons.collections4.multiset.AbstractMultiSet.entrySet(),2
org.apache.commons.collections4.multiset.AbstractMultiSet.equals(Object),7
org.apache.commons.collections4.multiset.AbstractMultiSet.getCount(Object),4
org.apache.commons.collections4.multiset.AbstractMultiSet.remove(Object),2
org.apache.commons.collections4.multiset.AbstractMultiSet.removeAll(Collection),7
"org.apache.commons.collections4.multiset.AbstractMultiSet.setCount(Object,int)",3
org.apache.commons.collections4.multiset.AbstractMultiSet.size(),2
org.apache.commons.collections4.multiset.AbstractMultiSet.uniqueSet(),2
org.apache.commons.collections4.multiset.PredicatedMultiSet.equals(Object),3
org.apache.commons.collections4.multiset.AbstractMultiSetDecorator.equals(Object),3
"org.apache.commons.collections4.multiset.AbstractMapMultiSet.add(Object,int)",7
org.apache.commons.collections4.multiset.AbstractMapMultiSet.doReadObject(ObjectInputStream),2
org.apache.commons.collections4.multiset.AbstractMapMultiSet.doWriteObject(ObjectOutputStream),2
org.apache.commons.collections4.multiset.AbstractMapMultiSet.equals(Object),7
org.apache.commons.collections4.multiset.AbstractMapMultiSet.getCount(Object),2
org.apache.commons.collections4.multiset.AbstractMapMultiSet.hashCode(),3
"org.apache.commons.collections4.multiset.AbstractMapMultiSet.remove(Object,int)",5
org.apache.commons.collections4.multiset.AbstractMapMultiSet.toArray(),3
org.apache.commons.collections4.multiset.AbstractMapMultiSet.toArray(Object[]),12
org.apache.commons.collections4.multiset.UnmodifiableMultiSet.unmodifiableMultiSet(MultiSet),2
org.apache.commons.collections4.iterators.IteratorChain.checkLocked(),2
org.apache.commons.collections4.iterators.IteratorChain.lockChain(),2
org.apache.commons.collections4.iterators.IteratorChain.remove(),2
org.apache.commons.collections4.iterators.IteratorChain.updateCurrentIterator(),12
org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(OrderedMapIterator),2
org.apache.commons.collections4.iterators.CartesianProductIterator.next(),7
com.fasterxml.jackson.databind.node.TreeTraversingParser.close(),2
com.fasterxml.jackson.databind.node.TreeTraversingParser.nextToken(),5
com.fasterxml.jackson.databind.node.TreeTraversingParser.skipChildren(),3
com.fasterxml.jackson.databind.node.TreeTraversingParser.currentName(),6
com.fasterxml.jackson.databind.node.TreeTraversingParser.overrideCurrentName(String),6
com.fasterxml.jackson.databind.node.TreeTraversingParser.getText(),8
com.fasterxml.jackson.databind.node.TreeTraversingParser.getNumberType(),2
com.fasterxml.jackson.databind.node.TreeTraversingParser.getIntValue(),2
com.fasterxml.jackson.databind.node.TreeTraversingParser.getLongValue(),2
com.fasterxml.jackson.databind.node.TreeTraversingParser.getEmbeddedObject(),5
com.fasterxml.jackson.databind.node.TreeTraversingParser.isNaN(),3
com.fasterxml.jackson.databind.node.TreeTraversingParser.getBinaryValue(Base64Variant),3
"com.fasterxml.jackson.databind.node.TreeTraversingParser.readBinaryValue(Base64Variant,OutputStream)",2
com.fasterxml.jackson.databind.node.TreeTraversingParser.currentNode(),3
com.fasterxml.jackson.databind.node.TreeTraversingParser.currentNumericNode(),5
com.fasterxml.jackson.databind.node.ArrayNode.deepCopy(),2
"com.fasterxml.jackson.databind.node.ArrayNode._withObject(JsonPointer,JsonPointer,OverwriteMode,boolean)",5
"com.fasterxml.jackson.databind.node.ArrayNode._withArray(JsonPointer,JsonPointer,OverwriteMode,boolean)",5
"com.fasterxml.jackson.databind.node.ArrayNode._withObjectAddTailElement(JsonPointer,boolean)",5
"com.fasterxml.jackson.databind.node.ArrayNode._withArrayAddTailElement(JsonPointer,boolean)",5
"com.fasterxml.jackson.databind.node.ArrayNode._withXxxSetArrayElement(int,JsonNode)",5
com.fasterxml.jackson.databind.node.ArrayNode.get(int),3
com.fasterxml.jackson.databind.node.ArrayNode.path(int),3
com.fasterxml.jackson.databind.node.ArrayNode.required(int),3
"com.fasterxml.jackson.databind.node.ArrayNode.equals(Comparator,JsonNode)",6
"com.fasterxml.jackson.databind.node.ArrayNode.serialize(JsonGenerator,SerializerProvider)",2
"com.fasterxml.jackson.databind.node.ArrayNode.serializeWithType(JsonGenerator,SerializerProvider,TypeSerializer)",2
com.fasterxml.jackson.databind.node.ArrayNode.findValue(String),4
"com.fasterxml.jackson.databind.node.ArrayNode.findValues(String,List)",2
"com.fasterxml.jackson.databind.node.ArrayNode.findValuesAsText(String,List)",2
com.fasterxml.jackson.databind.node.ArrayNode.findParent(String),4
"com.fasterxml.jackson.databind.node.ArrayNode.findParents(String,List)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,JsonNode)",6
com.fasterxml.jackson.databind.node.ArrayNode.add(JsonNode),2
com.fasterxml.jackson.databind.node.ArrayNode.addAll(Collection),2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,JsonNode)",2
com.fasterxml.jackson.databind.node.ArrayNode.remove(int),3
com.fasterxml.jackson.databind.node.ArrayNode.addPOJO(Object),2
com.fasterxml.jackson.databind.node.ArrayNode.addRawValue(RawValue),2
com.fasterxml.jackson.databind.node.ArrayNode.add(Short),2
com.fasterxml.jackson.databind.node.ArrayNode.add(Integer),2
com.fasterxml.jackson.databind.node.ArrayNode.add(Long),2
com.fasterxml.jackson.databind.node.ArrayNode.add(Float),2
com.fasterxml.jackson.databind.node.ArrayNode.add(Double),2
com.fasterxml.jackson.databind.node.ArrayNode.add(BigDecimal),2
com.fasterxml.jackson.databind.node.ArrayNode.add(BigInteger),2
com.fasterxml.jackson.databind.node.ArrayNode.add(String),2
com.fasterxml.jackson.databind.node.ArrayNode.add(Boolean),2
com.fasterxml.jackson.databind.node.ArrayNode.add(byte[]),2
"com.fasterxml.jackson.databind.node.ArrayNode.insertPOJO(int,Object)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insertRawValue(int,RawValue)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,Short)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,Integer)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,Long)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,Float)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,Double)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,BigDecimal)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,BigInteger)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,String)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,Boolean)",2
"com.fasterxml.jackson.databind.node.ArrayNode.insert(int,byte[])",2
"com.fasterxml.jackson.databind.node.ArrayNode.setPOJO(int,Object)",2
"com.fasterxml.jackson.databind.node.ArrayNode.setRawValue(int,RawValue)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,Short)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,Integer)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,Long)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,Float)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,Double)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,BigDecimal)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,BigInteger)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,String)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,Boolean)",2
"com.fasterxml.jackson.databind.node.ArrayNode.set(int,byte[])",2
com.fasterxml.jackson.databind.node.ArrayNode.equals(Object),4
"com.fasterxml.jackson.databind.node.ArrayNode._set(int,JsonNode)",3
"com.fasterxml.jackson.databind.node.ArrayNode._insert(int,JsonNode)",3
com.fasterxml.jackson.databind.node.LongNode.canConvertToInt(),3
com.fasterxml.jackson.databind.node.LongNode.asBoolean(boolean),2
com.fasterxml.jackson.databind.node.LongNode.equals(Object),5
com.fasterxml.jackson.databind.node.FloatNode.canConvertToInt(),3
com.fasterxml.jackson.databind.node.FloatNode.canConvertToLong(),3
com.fasterxml.jackson.databind.node.FloatNode.canConvertToExactIntegral(),4
com.fasterxml.jackson.databind.node.FloatNode.isNaN(),3
com.fasterxml.jackson.databind.node.FloatNode.equals(Object),5
com.fasterxml.jackson.databind.node.BooleanNode.readResolve(),2
com.fasterxml.jackson.databind.node.BooleanNode.valueOf(boolean),2
com.fasterxml.jackson.databind.node.BooleanNode.asToken(),2
com.fasterxml.jackson.databind.node.BooleanNode.asText(),2
com.fasterxml.jackson.databind.node.BooleanNode.asInt(int),2
com.fasterxml.jackson.databind.node.BooleanNode.asLong(long),2
com.fasterxml.jackson.databind.node.BooleanNode.asDouble(double),2
com.fasterxml.jackson.databind.node.BooleanNode.hashCode(),2
com.fasterxml.jackson.databind.node.BooleanNode.equals(Object),5
com.fasterxml.jackson.databind.AnnotationIntrospector.findInjectableValue(AnnotatedMember),2
com.fasterxml.jackson.databind.AnnotationIntrospector.hasAsValue(Annotated),3
com.fasterxml.jackson.databind.AnnotationIntrospector.hasAnyGetter(Annotated),3
"com.fasterxml.jackson.databind.ObjectWriter._new(ObjectWriter,SerializationConfig)",2
"com.fasterxml.jackson.databind.ObjectWriter._new(GeneratorSettings,Prefetch)",3
com.fasterxml.jackson.databind.ObjectWriter.with(FilterProvider),2
"org.joda.time.format.FormatUtils.appendPaddedInteger(StringBuffer,long,int)",2
"org.joda.time.format.FormatUtils.appendPaddedInteger(Appendable,long,int)",8
"org.joda.time.format.FormatUtils.writePaddedInteger(Writer,int,int)",22
"org.joda.time.format.FormatUtils.writePaddedInteger(Writer,long,int)",8
"org.joda.time.format.FormatUtils.appendUnpaddedInteger(StringBuffer,int)",2
"org.joda.time.format.FormatUtils.appendUnpaddedInteger(StringBuffer,long)",2
"org.joda.time.format.FormatUtils.appendUnpaddedInteger(Appendable,long)",2
"org.joda.time.format.FormatUtils.writeUnpaddedInteger(Writer,long)",2
org.joda.time.format.FormatUtils.calculateDigitCount(long),7
org.joda.time.format.DateTimeFormatterBuilder.toFormatter(),12
org.joda.time.format.DateTimeFormatterBuilder.toPrinter(),2
org.joda.time.format.DateTimeFormatterBuilder.toParser(),2
org.joda.time.format.DateTimeFormatterBuilder.append(DateTimeFormatter),2
"org.joda.time.format.DateTimeFormatterBuilder.append(DateTimePrinter,DateTimeParser[])",14
org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(String),4
"org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(DateTimeFieldType,int,int)",9
"org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(DateTimeFieldType,int)",3
"org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(DateTimeFieldType,int,int)",9
"org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(DateTimeFieldType,int)",3
org.joda.time.format.DateTimeFormatterBuilder.appendText(DateTimeFieldType),2
org.joda.time.format.DateTimeFormatterBuilder.appendShortText(DateTimeFieldType),2
org.apache.commons.collections4.map.PredicatedMap.checkSetValue(Object),2
org.apache.commons.collections4.map.PredicatedMap.isSetValueChecking(),2
org.apache.commons.collections4.map.PredicatedMap.putAll(Map),2
"org.apache.commons.collections4.map.PredicatedMap.validate(Object,Object)",7
org.apache.commons.collections4.map.FixedSizeSortedMap.putAll(Map),2
org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(SortedMap),2
org.apache.commons.collections4.map.DefaultedMap.get(Object),3
org.apache.commons.collections4.map.AbstractSortedMapDecorator.nextKey(Object),2
org.apache.commons.collections4.map.AbstractSortedMapDecorator.previousKey(Object),2
org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.entrySet(),2
org.apache.commons.collections4.map.UnmodifiableOrderedMap.unmodifiableOrderedMap(OrderedMap),2
org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity(),3
org.apache.commons.collections4.map.AbstractHashedMap.clone(),15
org.apache.commons.collections4.map.AbstractHashedMap.containsKey(Object),6
org.apache.commons.collections4.map.AbstractHashedMap.containsValue(Object),14
org.apache.commons.collections4.map.AbstractHashedMap.convertKey(Object),2
org.apache.commons.collections4.map.AbstractHashedMap.createEntrySetIterator(),2
org.apache.commons.collections4.map.AbstractHashedMap.createKeySetIterator(),2
org.apache.commons.collections4.map.AbstractHashedMap.createValuesIterator(),2
org.apache.commons.collections4.map.AbstractHashedMap.doReadObject(ObjectInputStream),2
org.apache.commons.collections4.map.AbstractHashedMap.doWriteObject(ObjectOutputStream),2
org.apache.commons.collections4.map.AbstractHashedMap.entrySet(),2
org.apache.commons.collections4.map.AbstractHashedMap.equals(Object),66
org.apache.commons.collections4.map.AbstractHashedMap.get(Object),6
org.apache.commons.collections4.map.AbstractHashedMap.getEntry(Object),6
org.apache.commons.collections4.map.AbstractHashedMap.hashCode(),2
org.apache.commons.collections4.map.AbstractHashedMap.isEmpty(),2
org.apache.commons.collections4.map.AbstractHashedMap.keySet(),2
org.apache.commons.collections4.map.AbstractHashedMap.mapIterator(),2
"org.apache.commons.collections4.map.AbstractHashedMap.put(Object,Object)",6
org.apache.commons.collections4.map.AbstractHashedMap.putAll(Map),3
org.apache.commons.collections4.map.AbstractHashedMap.remove(Object),6
org.apache.commons.collections4.map.AbstractHashedMap.toString(),10
org.apache.commons.collections4.map.AbstractHashedMap.values(),2
org.apache.commons.collections4.map.UnmodifiableMap.unmodifiableMap(Map),2
org.apache.commons.collections4.map.UnmodifiableMap.mapIterator(),2
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.clear(),2
"org.apache.commons.collections4.map.ConcurrentReferenceHashMap.computeIfAbsent(Object,Function)",2
"org.apache.commons.collections4.map.ConcurrentReferenceHashMap.computeIfPresent(Object,BiFunction)",2
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.entrySet(),2
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.hashOf(Object),2
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.keySet(),2
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.purgeStaleEntries(),2
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.putAll(Map),2
"org.apache.commons.collections4.map.ConcurrentReferenceHashMap.remove(Object,Object)",3
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.values(),2
org.apache.commons.collections4.map.ListOrderedMap.firstKey(),2
org.apache.commons.collections4.map.ListOrderedMap.lastKey(),2
org.apache.commons.collections4.map.ListOrderedMap.nextKey(Object),3
org.apache.commons.collections4.map.ListOrderedMap.previousKey(Object),2
"org.apache.commons.collections4.map.ListOrderedMap.put(int,Object,Object)",5
"org.apache.commons.collections4.map.ListOrderedMap.put(Object,Object)",2
"org.apache.commons.collections4.map.ListOrderedMap.putAll(int,Map)",5
org.apache.commons.collections4.map.ListOrderedMap.putAll(Map),2
org.apache.commons.collections4.map.ListOrderedMap.remove(Object),2
org.apache.commons.collections4.map.ListOrderedMap.toString(),10
org.apache.commons.collections4.map.SingletonMap.equals(Object),6
org.apache.commons.collections4.map.SingletonMap.get(Object),2
org.apache.commons.collections4.map.SingletonMap.hashCode(),4
"org.apache.commons.collections4.map.SingletonMap.put(Object,Object)",2
org.apache.commons.collections4.map.SingletonMap.putAll(Map),3
org.apache.commons.collections4.map.SingletonMap.toString(),4
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.StringRefForm.setNestedEntries(ByteCode,OperandManager,int)",2
"org.apache.commons.compress.harmony.unpack200.bytecode.forms.LabelForm.fixUpByteCodeTargets(ByteCode,CodeAttribute)",2
org.apache.commons.compress.harmony.unpack200.bytecode.EnclosingMethodAttribute.getNestedClassFileEntries(),2
org.apache.commons.compress.harmony.unpack200.bytecode.EnclosingMethodAttribute.resolve(ClassConstantPool),2
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTypeTableAttribute.getNestedClassFileEntries(),2
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTypeTableAttribute.renumber(List),6
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTypeTableAttribute.resolve(ClassConstantPool),2
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTypeTableAttribute.writeBody(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool.add(ClassFileEntry),5
org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool.addNestedEntries(),43
org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool.addWithNestedEntries(ClassFileEntry),2
org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool.get(int),2
org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool.indexOf(ClassFileEntry),4
org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool.initialSort(),8
org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool.sortClassPool(),48
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleAnnotationsAttribute.getLength(),2
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleAnnotationsAttribute.getNestedClassFileEntries(),2
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleAnnotationsAttribute.resolve(ClassConstantPool),2
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleAnnotationsAttribute.writeBody(DataOutputStream),4
org.apache.commons.compress.harmony.unpack200.bytecode.ClassFile.write(DataOutputStream),64
org.apache.commons.compress.harmony.unpack200.bytecode.BCIRenumberedAttribute.renumber(List),2
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTableAttribute.getNestedClassFileEntries(),2
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTableAttribute.renumber(List),6
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTableAttribute.resolve(ClassConstantPool),2
org.apache.commons.compress.harmony.unpack200.bytecode.LocalVariableTableAttribute.writeBody(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.LineNumberTableAttribute.writeBody(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8.equals(Object),4
org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry.write(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPConstant.equals(Object),4
org.apache.commons.compress.harmony.unpack200.bytecode.AnnotationDefaultAttribute.getNestedClassFileEntries(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPInterfaceMethodRef.hashCode(),2
"org.apache.commons.compress.harmony.unpack200.bytecode.InnerClassesAttribute.addInnerClassesEntry(CPClass,CPClass,CPUTF8,int)",8
org.apache.commons.compress.harmony.unpack200.bytecode.InnerClassesAttribute.equals(Object),7
org.apache.commons.compress.harmony.unpack200.bytecode.InnerClassesAttribute.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.InnerClassesAttribute.resolve(ClassConstantPool),2
org.apache.commons.compress.harmony.unpack200.bytecode.InnerClassesAttribute.writeBody(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleParameterAnnotationsAttribute.getLength(),2
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleParameterAnnotationsAttribute.getNestedClassFileEntries(),2
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleParameterAnnotationsAttribute.resolve(ClassConstantPool),2
org.apache.commons.compress.harmony.unpack200.bytecode.RuntimeVisibleorInvisibleParameterAnnotationsAttribute.writeBody(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPMethod.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPNameAndType.equals(Object),6
org.apache.commons.compress.harmony.unpack200.bytecode.CPNameAndType.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPMethodRef.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.NewAttribute.getLength(),2
org.apache.commons.compress.harmony.unpack200.bytecode.NewAttribute.getNestedClassFileEntries(),9
org.apache.commons.compress.harmony.unpack200.bytecode.NewAttribute.renumber(List),8
org.apache.commons.compress.harmony.unpack200.bytecode.NewAttribute.resolve(ClassConstantPool),3
org.apache.commons.compress.harmony.unpack200.bytecode.NewAttribute.writeBody(DataOutputStream),21
org.apache.commons.compress.harmony.unpack200.bytecode.ConstantValueAttribute.equals(Object),4
org.apache.commons.compress.harmony.unpack200.bytecode.ConstantValueAttribute.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPFieldRef.equals(Object),6
org.apache.commons.compress.harmony.unpack200.bytecode.CPFieldRef.generateHashCode(),4
org.apache.commons.compress.harmony.unpack200.bytecode.CPFieldRef.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CPString.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.Attribute.equals(Object),4
org.apache.commons.compress.harmony.unpack200.bytecode.SourceFileAttribute.equals(Object),4
org.apache.commons.compress.harmony.unpack200.bytecode.SourceFileAttribute.hashCode(),2
org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager.getCurrentClass(),2
org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager.getNewClass(),2
org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager.getSuperClass(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute.addAttribute(Attribute),4
org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute.getLength(),2
org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute.getNestedClassFileEntries(),3
org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute.writeBody(DataOutputStream),8
org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode.getByteCode(int),3
org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode.doWrite(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode.resolve(ClassConstantPool),7
"org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode.setOperand2Bytes(int,int)",3
"org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode.setOperandByte(int,int)",3
org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode.setOperandBytes(int[]),4
"org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode.setOperandSigned2Bytes(int,int)",2
org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute.equals(Object),5
org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute.resolve(ClassConstantPool),2
org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute.toString(),2
org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute.writeBody(DataOutputStream),2
org.apache.commons.compress.harmony.unpack200.IcBands.read(InputStream),27
org.apache.commons.compress.harmony.unpack200.IcBands.unpack(),12
"org.apache.commons.compress.harmony.unpack200.ClassBands.getCallCount(int[][],long[][],int)",27
org.apache.commons.compress.harmony.unpack200.ClassBands.getClassFlags(),9
org.apache.commons.compress.harmony.unpack200.ClassBands.getFieldFlags(),13
org.apache.commons.compress.harmony.unpack200.ClassBands.getMethodFlags(),13
"org.apache.commons.compress.harmony.unpack200.ClassBands.parseClassMetadataBands(InputStream,int[])",20
"org.apache.commons.compress.harmony.unpack200.ClassBands.parseFieldMetadataBands(InputStream,int[])",24
"org.apache.commons.compress.harmony.unpack200.ClassBands.parseMethodMetadataBands(InputStream,int[])",30
"org.apache.commons.compress.harmony.unpack200.BandSet.decodeBandInt(String,InputStream,BHSDCodec,int[])",12
"org.apache.commons.compress.harmony.unpack200.BandSet.parseCPIntReferences(String,InputStream,BHSDCodec,int)",6
"org.apache.commons.compress.harmony.unpack200.BandSet.parseCPLongReferences(String,InputStream,BHSDCodec,int)",6
"org.apache.commons.compress.harmony.unpack200.BandSet.parseCPSignatureReferences(String,InputStream,BHSDCodec,int[])",4
"org.apache.commons.compress.harmony.unpack200.BandSet.parseCPUTF8References(String,InputStream,BHSDCodec,int[])",4
"org.apache.commons.compress.harmony.unpack200.BandSet.parseFlags(String,InputStream,int,BHSDCodec,boolean)",2
"org.apache.commons.compress.harmony.unpack200.BandSet.parseFlags(String,InputStream,int[],BHSDCodec,BHSDCodec)",17
"org.apache.commons.compress.harmony.unpack200.BandSet.parseFlags(String,InputStream,int[],BHSDCodec,boolean)",2
"org.apache.commons.compress.harmony.unpack200.BandSet.parseReferences(String,InputStream,BHSDCodec,int[],String[])",17
org.apache.commons.compress.harmony.unpack200.FileBands.processFileBits(),6
org.apache.commons.compress.harmony.unpack200.FileBands.read(InputStream),4
org.apache.commons.compress.harmony.unpack200.Archive.setQuiet(boolean),3
org.apache.commons.compress.harmony.unpack200.Archive.setVerbose(boolean),3
org.apache.commons.compress.harmony.archive.internal.nls.Messages.getString(String),4
"org.apache.commons.compress.harmony.archive.internal.nls.Messages.getString(String,Object[])",4
org.apache.commons.compress.harmony.pack200.BcBands.updateRenumbering(),4
org.apache.commons.compress.harmony.pack200.BcBands.visitEnd(),24
"org.apache.commons.compress.harmony.pack200.BcBands.visitFieldInsn(int,String,String,String)",18
"org.apache.commons.compress.harmony.pack200.BcBands.visitIincInsn(int,int)",3
org.apache.commons.compress.harmony.pack200.BcBands.visitInsn(int),2
"org.apache.commons.compress.harmony.pack200.BcBands.visitIntInsn(int,int)",3
org.apache.commons.compress.harmony.pack200.BcBands.visitLdcInsn(Object),26
"org.apache.commons.compress.harmony.pack200.BcBands.visitLookupSwitchInsn(Label,int[],Label[])",4
"org.apache.commons.compress.harmony.pack200.BcBands.visitMethodInsn(int,String,String,String)",44
"org.apache.commons.compress.harmony.pack200.BcBands.visitTableSwitchInsn(int,int,Label,Label[])",4
"org.apache.commons.compress.harmony.pack200.BcBands.visitTypeInsn(int,String)",2
"org.apache.commons.compress.harmony.pack200.BcBands.visitVarInsn(int,int)",9
org.apache.commons.compress.harmony.pack200.CPMethodOrField.compareTo(Object),3
org.apache.commons.compress.harmony.pack200.MetadataBandGroup.hasContent(),2
org.apache.commons.compress.harmony.pack200.MetadataBandGroup.pack(OutputStream),10
org.apache.commons.compress.harmony.pack200.MetadataBandGroup.removeLatest(),3
"org.apache.commons.compress.harmony.pack200.Segment.pack(SegmentUnit,OutputStream,PackingOptions)",8
"org.apache.commons.compress.harmony.pack200.Segment.processClasses(SegmentUnit,Attribute[])",67
org.apache.commons.compress.harmony.pack200.Segment.visitAttribute(Attribute),8
"org.apache.commons.compress.harmony.pack200.Segment.visitSource(String,String)",2
"org.apache.commons.compress.harmony.pack200.Pack200PackerAdapter.firePropertyChange(String,Object,Object)",16
"org.apache.commons.compress.harmony.pack200.Pack200PackerAdapter.pack(JarFile,OutputStream)",7
"org.apache.commons.compress.harmony.pack200.Pack200PackerAdapter.pack(JarInputStream,OutputStream)",6
org.apache.commons.codec.language.Nysiis.encode(Object),2
org.apache.commons.codec.language.Caverphone.encode(Object),2
org.apache.commons.codec.language.SoundexUtils.clean(String),7
"org.apache.commons.codec.cli.Digest.println(String,byte[],String)",2
org.apache.commons.codec.cli.Digest.run(),4
"org.apache.commons.codec.cli.Digest.run(String,MessageDigest)",6
"org.apache.commons.codec.cli.Digest.run(String,MessageDigest,File[])",3
org.apache.commons.codec.cli.Digest.run(String[]),3
"org.apache.commons.codec.StringEncoderComparator.compare(Object,Object)",8
org.apache.commons.codec.binary.Base32.decodeTable(boolean),2
org.apache.commons.codec.binary.Base32.encodeTable(boolean),2
"org.apache.commons.codec.binary.Base32.encode(byte[],int,int,Context)",43
org.apache.commons.codec.binary.Base32.isInAlphabet(byte),4
"org.apache.commons.codec.binary.Base32.validateCharacter(long,Context)",3
"org.apache.commons.lang3.time.DateUtils.ceiling(Object,int)",3
"org.apache.commons.lang3.time.DateUtils.iterator(Object,int)",3
"org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(String,Locale,String[],boolean)",18
"org.apache.commons.lang3.time.DateUtils.round(Object,int)",3
"org.apache.commons.lang3.time.DateUtils.truncate(Object,int)",3
"org.apache.commons.lang3.time.DateUtils.truncatedEquals(Calendar,Calendar,int)",2
"org.apache.commons.lang3.time.DateUtils.truncatedEquals(Date,Date,int)",2
"org.apache.commons.lang3.time.FastDatePrinter.applyRules(Calendar,Appendable)",15
org.apache.commons.lang3.time.FastDatePrinter.equals(Object),5
"org.apache.commons.lang3.time.FastDatePrinter.format(Calendar,Appendable)",2
org.apache.commons.lang3.time.FastDatePrinter.format(Object),4
"org.apache.commons.lang3.time.FastDatePrinter.format(Object,StringBuffer,FieldPosition)",4
org.apache.commons.lang3.time.FastDatePrinter.init(),2
"org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)",3
org.apache.commons.lang3.time.FastTimeZone.getGmtTimeZone(String),6
org.apache.commons.lang3.time.FastTimeZone.getTimeZone(String),2
"org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,String,boolean)",16
"org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)",35
"org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)",2
org.apache.commons.lang3.ClassLoaderUtils.getURLs(ClassLoader),2
org.apache.commons.lang3.ClassLoaderUtils.toString(ClassLoader),2
"org.apache.commons.lang3.SystemProperties.getBoolean(String,BooleanSupplier)",4
"org.apache.commons.lang3.SystemProperties.getInt(String,IntSupplier)",3
"org.apache.commons.lang3.SystemProperties.getLong(String,LongSupplier)",3
"org.apache.commons.lang3.SystemProperties.getProperty(String,Supplier)",9
org.apache.commons.lang3.CachedRandomBits.nextBits(int),10
org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence),4
"org.apache.commons.lang3.ArchUtils.addProcessor(String,Processor)",2
org.apache.commons.lang3.CharUtils.isAsciiAlpha(char),3
org.apache.commons.lang3.CharUtils.isAsciiAlphanumeric(char),3
"org.apache.commons.lang3.CharUtils.toChar(String,char)",2
org.apache.commons.lang3.CharUtils.toCharacterObject(String),2
org.apache.commons.lang3.CharUtils.toIntValue(char),2
"org.apache.commons.lang3.CharUtils.toIntValue(char,int)",2
"org.apache.commons.lang3.CharUtils.toIntValue(Character,int)",2
org.apache.commons.lang3.CharUtils.toString(char),2
org.apache.commons.lang3.CharUtils.toString(Character),2
org.apache.commons.lang3.CharUtils.unicodeEscaped(Character),2
org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.read(),3
"org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.read(byte[],int,int)",10
org.apache.commons.compress.archivers.sevenz.Folder.findBindPairForInStream(int),5
org.apache.commons.compress.archivers.sevenz.Folder.findBindPairForOutStream(int),5
org.apache.commons.compress.archivers.sevenz.Folder.getOrderedCoders(),13
org.apache.commons.compress.archivers.sevenz.Folder.getUnpackSize(),5
org.apache.commons.compress.archivers.sevenz.Folder.getUnpackSizeForCoder(Coder),5
org.apache.commons.compress.archivers.sevenz.Folder.toString(),2
org.apache.commons.compress.archivers.zip.ZipUtil.canHandleEntryData(ZipArchiveEntry),3
org.apache.commons.compress.archivers.zip.ZipUtil.checkRequestedFeatures(ZipArchiveEntry),4
"org.apache.commons.compress.archivers.zip.ZipUtil.getUnicodeStringIfOriginalMatches(AbstractUnicodeExtraField,byte[])",6
org.apache.commons.compress.archivers.zip.ZipUtil.isDosTime(long),4
org.apache.commons.compress.archivers.zip.ZipUtil.javaToDosTime(long),2
org.apache.commons.compress.archivers.zip.ZipUtil.longToBig(long),4
"org.apache.commons.compress.archivers.zip.ZipUtil.setNameAndCommentFromExtraFields(ZipArchiveEntry,byte[],byte[])",24
org.apache.commons.compress.archivers.zip.ZipUtil.supportsEncryptionOf(ZipArchiveEntry),2
org.apache.commons.compress.archivers.zip.ZipUtil.supportsMethodOf(ZipArchiveEntry),9
org.apache.commons.compress.archivers.zip.ZipEncodingHelper.isUTF8(String),2
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.assembleData(),2
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getCentralDirectoryData(),4
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getCentralDirectoryLength(),4
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getUnicodeName(),2
"org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.parseFromLocalFileData(byte[],int,int)",3
org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.setUnicodeName(byte[]),2
org.apache.commons.compress.archivers.zip.InflaterInputStreamWithStatistics.read(),2
"org.apache.commons.compress.archivers.zip.InflaterInputStreamWithStatistics.read(byte[],int,int)",2
org.apache.commons.compress.archivers.zip.AsiExtraField.clone(),7
org.apache.commons.compress.archivers.zip.AsiExtraField.getMode(int),3
org.apache.commons.compress.archivers.zip.AsiExtraField.isDirectory(),3
org.apache.commons.compress.archivers.zip.AsiExtraField.isLink(),2
"org.apache.commons.compress.archivers.zip.AsiExtraField.parseFromLocalFileData(byte[],int,int)",8
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.addRawArchiveEntry(ZipArchiveEntry,InputStream)",8
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.addUnicodeExtraFields(ZipArchiveEntry,boolean,ByteBuffer)",15
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.canWriteEntryData(ArchiveEntry),5
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.checkIfNeedsZip64(Zip64Mode),3
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.close(),5
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.closeEntry(boolean,boolean)",6
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.copyFromZipInputStream(InputStream,boolean)",5
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createArchiveEntry(File,String)",2
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createArchiveEntry(Path,String,LinkOption[])",2
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createCentralFileHeader(ZipArchiveEntry),24
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.finish(),6
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flushDeflater(),2
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getEffectiveZip64Mode(ZipArchiveEntry),5
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getEncoding(),2
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getEntryEncoding(ZipArchiveEntry),3
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getGeneralPurposeBits(boolean,boolean)",6
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getZip64Extra(ZipArchiveEntry),12
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.handleSizesAndCrc(long,long,Zip64Mode)",7
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.isTooLargeForZip32(ZipArchiveEntry),3
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.isZip64Required(ZipArchiveEntry,Zip64Mode)",4
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.preClose(),4
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.putArchiveEntry(ZipArchiveEntry,boolean)",31
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.rewriteSizesAndCrc(boolean),24
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setDefaults(ZipArchiveEntry),4
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setEncoding(Charset),3
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setLevel(int),4
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setUseLanguageEncodingFlag(boolean),3
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.shouldAddZip64Extra(ZipArchiveEntry,Zip64Mode)",8
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.shouldUseZip64EOCD(),14
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.validateIfZip64IsNeededInEOCD(),15
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.validateSizeInformation(Zip64Mode),17
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.versionNeededToExtract(int,boolean,boolean)",3
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.write(byte[],int,int)",2
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeCentralDirectoryEnd(),12
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeCentralDirectoryInChunks(),3
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeDataDescriptor(ZipArchiveEntry),3
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeLocalFileHeader(ZipArchiveEntry,boolean)",4
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writePreamble(byte[],int,int)",2
org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeZip64CentralDirectory(),100
org.apache.commons.compress.archivers.zip.X7875_NewUnix.equals(Object),5
org.apache.commons.compress.archivers.zip.X7875_NewUnix.getLocalFileDataData(),64
org.apache.commons.compress.archivers.zip.X7875_NewUnix.getLocalFileDataLength(),4
"org.apache.commons.compress.archivers.zip.X7875_NewUnix.parseFromLocalFileData(byte[],int,int)",4
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.addSizes(byte[]),4
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getCentralDirectoryData(),4
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getCentralDirectoryLength(),16
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getLocalFileDataData(),7
org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getLocalFileDataLength(),2
"org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.parseFromCentralDirectoryData(byte[],int,int)",4
"org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.parseFromLocalFileData(byte[],int,int)",6
org.apache.commons.compress.archivers.zip.ZipLong.equals(Object),3
org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField.getCentralDirectoryData(),2
org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField.getLocalFileDataData(),2
"org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField.parseFromCentralDirectoryData(byte[],int,int)",3
"org.apache.commons.compress.archivers.zip.BinaryTree.addLeaf(int,int,int,int)",3
org.apache.commons.compress.archivers.zip.BinaryTree.read(BitStream),6
"org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader.parseCentralDirectoryFormat(byte[],int,int)",2
"org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader.parseFileFormat(byte[],int,int)",5
org.apache.commons.compress.archivers.zip.X000A_NTFS.dateToZip(Date),2
org.apache.commons.compress.archivers.zip.X000A_NTFS.fileTimeToZip(FileTime),2
org.apache.commons.compress.archivers.zip.X000A_NTFS.zipToDate(ZipEightByteInteger),3
org.apache.commons.compress.archivers.zip.X000A_NTFS.zipToFileTime(ZipEightByteInteger),3
org.apache.commons.compress.archivers.zip.X000A_NTFS.equals(Object),5
org.apache.commons.compress.archivers.zip.X000A_NTFS.hashCode(),8
"org.apache.commons.compress.archivers.zip.X000A_NTFS.parseFromLocalFileData(byte[],int,int)",4
"org.apache.commons.compress.archivers.zip.X000A_NTFS.readTimeAttr(byte[],int,int)",3
org.apache.commons.compress.archivers.zip.X000A_NTFS.setAccessTime(ZipEightByteInteger),2
org.apache.commons.compress.archivers.zip.X000A_NTFS.setCreateTime(ZipEightByteInteger),2
org.apache.commons.compress.archivers.zip.X000A_NTFS.setModifyTime(ZipEightByteInteger),2
"org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.calculateDiskPosition(long,long)",2
org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.close(),2
org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.createNewSplitSegmentFile(Integer),2
org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.finish(),2
org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.getSplitSegmentFileName(Integer),8
org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.openNewSplitSegment(),2
org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.prepareToWriteUnsplittableContent(long),3
"org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.write(byte[],int,int)",4
"org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.writeAll(byte[],int,int,long)",4
"org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.writeToSegment(Path,long,byte[],int,int)",8
org.apache.commons.compress.archivers.zip.ExtraFieldUtils.createExtraField(ZipShort),2
org.apache.commons.compress.archivers.zip.ExtraFieldUtils.createExtraFieldNoDefault(ZipShort),2
"org.apache.commons.compress.archivers.zip.ExtraFieldUtils.fillExtraField(ZipExtraField,byte[],int,int,boolean)",8
"org.apache.commons.compress.archivers.zip.ExtraFieldUtils.parse(byte[],boolean,ExtraFieldParsingBehavior)",26
org.apache.commons.compress.archivers.zip.ExtraFieldUtils.register(Class),14
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getCentralDirectoryData(),2
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getCentralDirectoryLength(),2
org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getLocalFileDataLength(),2
"org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.parseFromCentralDirectoryData(byte[],int,int)",2
org.apache.commons.compress.archivers.zip.FileRandomAccessOutputStream.close(),2
org.apache.commons.compress.archivers.zip.ExplodingInputStream.fillBuffer(),19
org.apache.commons.compress.archivers.zip.ExplodingInputStream.init(),65
org.apache.commons.compress.archivers.zip.ExplodingInputStream.read(),5
org.apache.commons.compress.archivers.zip.CircularBuffer.available(),2
"org.apache.commons.compress.archivers.zip.CircularBuffer.copy(int,int)",2
org.apache.commons.compress.archivers.zip.CircularBuffer.get(),2
"org.apache.commons.compress.archivers.zip.UnshrinkingInputStream.addEntry(int,byte)",8
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream.decompressNextSymbol(),8
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream.partialClear(),12
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.dateToZipLong(Date),2
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.fileTimeToZipLong(FileTime),2
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.unixTimeToFileTime(ZipLong),2
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.unixTimeToZipLong(long),2
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.zipLongToDate(ZipLong),2
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.equals(Object),6
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getCentralDirectoryLength(),2
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getLocalFileDataData(),18
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getLocalFileDataLength(),18
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.hashCode(),8
"org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.parseFromLocalFileData(byte[],int,int)",28
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setAccessTime(ZipLong),4
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setCreateTime(ZipLong),4
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setFlags(byte),8
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setModifyTime(ZipLong),4
org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.toString(),27
org.apache.commons.compress.archivers.zip.PKWareExtraHeader.getCentralDirectoryData(),2
org.apache.commons.compress.archivers.zip.PKWareExtraHeader.getCentralDirectoryLength(),2
org.apache.commons.compress.archivers.zip.PKWareExtraHeader.getLocalFileDataLength(),2
"org.apache.commons.compress.archivers.zip.PKWareExtraHeader.parseFromCentralDirectoryData(byte[],int,int)",2
"org.apache.commons.compress.archivers.zip.ZipFile.openZipChannel(Path,long,OpenOption[])",92
org.apache.commons.compress.archivers.zip.ZipFile.positionAtEndOfCentralDirectoryRecord(SeekableByteChannel),4
"org.apache.commons.compress.archivers.zip.ZipFile.tryToLocateSignature(SeekableByteChannel,long,long,byte[])",52
"org.apache.commons.compress.archivers.zip.ZipFile.copyRawEntries(ZipArchiveOutputStream,ZipArchiveEntryPredicate)",3
"org.apache.commons.compress.archivers.zip.ZipFile.createBoundedInputStream(long,long)",5
org.apache.commons.compress.archivers.zip.ZipFile.finalize(),5
org.apache.commons.compress.archivers.zip.ZipFile.getContentBeforeFirstLocalFileHeader(),2
org.apache.commons.compress.archivers.zip.ZipFile.getDataOffset(ZipArchiveEntry),2
org.apache.commons.compress.archivers.zip.ZipFile.getEntry(String),2
org.apache.commons.compress.archivers.zip.ZipFile.getInputStream(ZipArchiveEntry),16
org.apache.commons.compress.archivers.zip.ZipFile.getRawInputStream(ZipArchiveEntry),3
org.apache.commons.compress.archivers.zip.ZipFile.getUnixSymlink(ZipArchiveEntry),13
org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(),5
org.apache.commons.compress.archivers.zip.ZipFile.positionAtCentralDirectory(),2
org.apache.commons.compress.archivers.zip.ZipFile.positionAtCentralDirectory32(),2
org.apache.commons.compress.archivers.zip.ZipFile.positionAtCentralDirectory64(),6
org.apache.commons.compress.archivers.zip.ZipFile.readCentralDirectoryEntry(Map),48
org.apache.commons.compress.archivers.zip.ZipFile.resolveLocalFileHeaderData(Map),9
org.apache.commons.compress.archivers.zip.ZipFile.sanityCheckLFHOffset(ZipArchiveEntry),8
org.apache.commons.compress.archivers.zip.ZipFile.setDataOffset(ZipArchiveEntry),4
org.apache.commons.compress.archivers.zip.ZipFile.skipBytes(int),2
"org.apache.commons.compress.archivers.zip.GeneralPurposeBit.parse(byte[],int)",64
"org.apache.commons.compress.archivers.zip.GeneralPurposeBit.encode(byte[],int)",16
org.apache.commons.compress.archivers.zip.GeneralPurposeBit.equals(Object),6
org.apache.commons.compress.archivers.zip.GeneralPurposeBit.hashCode(),16
org.apache.commons.compress.archivers.zip.GeneralPurposeBit.usesStrongEncryption(),3
org.apache.commons.compress.archivers.zip.GeneralPurposeBit.useStrongEncryption(boolean),2
org.joda.time.PeriodType.time(),2
org.joda.time.PeriodType.years(),2
org.joda.time.PeriodType.months(),2
org.joda.time.PeriodType.weeks(),2
org.joda.time.PeriodType.days(),2
org.joda.time.PeriodType.hours(),2
org.joda.time.PeriodType.minutes(),2
org.joda.time.PeriodType.seconds(),2
org.joda.time.PeriodType.millis(),2
org.joda.time.PeriodType.isSupported(DurationFieldType),2
org.joda.time.PeriodType.indexOf(DurationFieldType),4
"org.joda.time.PeriodType.getIndexedField(ReadablePeriod,int)",2
"org.joda.time.PeriodType.setIndexedField(ReadablePeriod,int,int[],int)",2
"org.joda.time.PeriodType.addIndexedField(ReadablePeriod,int,int[],int)",3
"org.joda.time.PeriodType.withFieldRemoved(int,String)",21
org.joda.time.PeriodType.equals(Object),3
org.joda.time.PeriodType.hashCode(),2
org.joda.time.Instant.withMillis(long),2
"org.joda.time.Instant.withDurationAdded(long,int)",3
"org.joda.time.Instant.withDurationAdded(ReadableDuration,int)",3
org.joda.time.chrono.GregorianChronology.readResolve(),4
org.joda.time.chrono.GregorianChronology.withZone(DateTimeZone),4
org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int),3
org.joda.time.chrono.GJLocaleSymbols.forLocale(Locale),6
org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(String),2
org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(String),2
org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(String),2
"org.joda.time.chrono.BasicYearDateTimeField.add(long,int)",2
"org.joda.time.chrono.BasicYearDateTimeField.addWrapField(long,int)",2
"org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(long,long)",2
org.joda.time.chrono.BasicYearDateTimeField.getLeapAmount(long),2
org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(long),2
"org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)",2
"org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)",7
"org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)",13
org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(long),2
org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long),2
org.joda.time.chrono.GJEraDateTimeField.get(long),2
"org.joda.time.chrono.GJEraDateTimeField.set(long,int)",2
org.joda.time.chrono.GJEraDateTimeField.roundFloor(long),2
org.joda.time.chrono.GJEraDateTimeField.roundCeiling(long),2
org.joda.time.chrono.BasicChronology.getZone(),2
"org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)",2
"org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)",2
"org.joda.time.chrono.BasicChronology.getDateTimeMillis0(int,int,int,int)",14
org.joda.time.chrono.BasicChronology.equals(Object),6
org.joda.time.chrono.BasicChronology.toString(),8
org.joda.time.chrono.BasicChronology.getDaysInYear(int),2
org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int),2
org.joda.time.chrono.BasicChronology.getYear(long),12
org.joda.time.chrono.BasicChronology.getWeekyear(long),3
"org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)",3
"org.joda.time.chrono.BasicChronology.getDateMidnightMillis(int,int,int)",9
org.joda.time.chrono.BasicChronology.getYearInfo(int),3
org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(ReadablePartial),2
"org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(ReadablePartial,int[])",4
"org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)",3
org.joda.time.chrono.IslamicChronology.readResolve(),2
org.joda.time.chrono.IslamicChronology.withZone(DateTimeZone),4
org.joda.time.chrono.IslamicChronology.equals(Object),5
org.joda.time.chrono.IslamicChronology.getYear(long),6
"org.joda.time.chrono.IslamicChronology.setYear(long,int)",3
"org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)",2
org.joda.time.chrono.IslamicChronology.getDaysInYear(int),2
"org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)",5
org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int),5
org.joda.time.chrono.IslamicChronology.assemble(Fields),2
org.joda.time.chrono.ISOYearOfEraDateTimeField.get(long),2
"org.joda.time.chrono.ISOYearOfEraDateTimeField.set(long,int)",2
"org.joda.time.chrono.LimitChronology.getInstance(Chronology,ReadableDateTime,ReadableDateTime)",17
org.joda.time.chrono.LimitChronology.withZone(DateTimeZone),36
"org.joda.time.chrono.LimitChronology.convertField(DurationField,HashMap)",4
"org.joda.time.chrono.LimitChronology.convertField(DateTimeField,HashMap)",4
"org.joda.time.chrono.LimitChronology.checkLimits(long,String)",7
org.joda.time.chrono.LimitChronology.equals(Object),6
org.joda.time.chrono.LimitChronology.hashCode(),4
org.joda.time.chrono.LimitChronology.toString(),4
org.joda.time.chrono.GJCacheKey.hashCode(),4
org.joda.time.chrono.GJCacheKey.equals(Object),15
org.joda.time.chrono.EthiopicChronology.readResolve(),2
org.joda.time.chrono.EthiopicChronology.withZone(DateTimeZone),4
org.joda.time.chrono.EthiopicChronology.isLeapDay(long),3
org.joda.time.chrono.EthiopicChronology.assemble(Fields),2
org.joda.time.chrono.LenientChronology.getInstance(Chronology),2
org.joda.time.chrono.LenientChronology.withUTC(),3
org.joda.time.chrono.LenientChronology.withZone(DateTimeZone),6
"org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)",41
"org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)",21
"org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(ReadablePartial,int,int[],int)",11
"org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)",7
"org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)",2
org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(long),3
org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapAmount(long),2
org.joda.time.chrono.GJYearOfEraDateTimeField.get(long),2
"org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)",2
"org.joda.time.chrono.ZonedChronology.getInstance(Chronology,DateTimeZone)",4
org.joda.time.chrono.ZonedChronology.useTimeArithmetic(DurationField),3
org.joda.time.chrono.ZonedChronology.withZone(DateTimeZone),6
org.joda.time.chrono.ZonedChronology.localToUTC(long),13
"org.joda.time.chrono.ZonedChronology.convertField(DurationField,HashMap)",4
"org.joda.time.chrono.ZonedChronology.convertField(DateTimeField,HashMap)",4
org.joda.time.chrono.ZonedChronology.equals(Object),5
org.joda.time.chrono.JulianChronology.adjustYearForSet(int),3
org.joda.time.chrono.JulianChronology.readResolve(),4
org.joda.time.chrono.JulianChronology.withZone(DateTimeZone),4
org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int),3
org.joda.time.chrono.JulianChronology.assemble(Fields),2
org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(ReadablePartial),2
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(ReadablePartial,int[])",4
"org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValueForSet(long,int)",2
"org.joda.time.chrono.BaseChronology.validate(ReadablePartial,int[])",16
"org.joda.time.chrono.BaseChronology.get(ReadablePartial,long)",2
"org.joda.time.chrono.BaseChronology.set(ReadablePartial,long)",2
"org.joda.time.chrono.BaseChronology.get(ReadablePeriod,long,long)",4
"org.joda.time.chrono.BaseChronology.get(ReadablePeriod,long)",4
"org.joda.time.chrono.BaseChronology.add(ReadablePeriod,long,int)",5
"org.joda.time.chrono.BaseChronology.add(long,long,int)",3
org.joda.time.chrono.AssembledChronology.getZone(),2
"org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)",3
"org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)",3
"org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)",3
org.apache.commons.lang3.StringUtils.containsWhitespace(CharSequence),5
"org.apache.commons.lang3.StringUtils.countMatches(CharSequence,char)",4
"org.apache.commons.lang3.StringUtils.countMatches(CharSequence,CharSequence)",4
"org.apache.commons.lang3.StringUtils.defaultIfBlank(CharSequence,CharSequence)",2
"org.apache.commons.lang3.StringUtils.defaultIfEmpty(CharSequence,CharSequence)",2
org.apache.commons.lang3.StringUtils.deleteWhitespace(String),10
"org.apache.commons.lang3.StringUtils.difference(String,String)",4
org.apache.commons.lang3.StringUtils.firstNonBlank(CharSequence[]),5
org.apache.commons.lang3.StringUtils.firstNonEmpty(CharSequence[]),5
"org.apache.commons.lang3.StringUtils.getBytes(String,Charset)",2
"org.apache.commons.lang3.StringUtils.getBytes(String,String)",2
org.apache.commons.lang3.StringUtils.getCommonPrefix(String[]),5
org.apache.commons.lang3.StringUtils.getDigits(String),4
"org.apache.commons.lang3.StringUtils.getIfBlank(CharSequence,Supplier)",2
"org.apache.commons.lang3.StringUtils.getIfEmpty(CharSequence,Supplier)",2
"org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(CharSequence,CharSequence)",5
"org.apache.commons.lang3.StringUtils.indexOf(CharSequence,int)",2
"org.apache.commons.lang3.StringUtils.indexOf(CharSequence,int,int)",2
"org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,char[])",30
"org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,CharSequence[])",12
"org.apache.commons.lang3.StringUtils.indexOfAny(CharSequence,String)",3
"org.apache.commons.lang3.StringUtils.indexOfAnyBut(CharSequence,char[])",3
"org.apache.commons.lang3.StringUtils.indexOfAnyBut(CharSequence,CharSequence)",6
org.apache.commons.lang3.StringUtils.isAllBlank(CharSequence[]),5
org.apache.commons.lang3.StringUtils.isAllEmpty(CharSequence[]),5
org.apache.commons.lang3.StringUtils.isAllLowerCase(CharSequence),5
org.apache.commons.lang3.StringUtils.isAllUpperCase(CharSequence),5
org.apache.commons.lang3.StringUtils.isAlpha(CharSequence),5
org.apache.commons.lang3.StringUtils.isAlphanumeric(CharSequence),5
org.apache.commons.lang3.StringUtils.isAnyBlank(CharSequence[]),5
org.apache.commons.lang3.StringUtils.isAnyEmpty(CharSequence[]),5
org.apache.commons.lang3.StringUtils.isAsciiPrintable(CharSequence),5
org.apache.commons.lang3.StringUtils.isBlank(CharSequence),5
org.apache.commons.lang3.StringUtils.isMixedCase(CharSequence),30
org.apache.commons.lang3.StringUtils.isNoneBlank(CharSequence[]),2
org.apache.commons.lang3.StringUtils.isNoneEmpty(CharSequence[]),2
org.apache.commons.lang3.StringUtils.isNotBlank(CharSequence),2
org.apache.commons.lang3.StringUtils.isNotEmpty(CharSequence),2
org.apache.commons.lang3.StringUtils.isNumeric(CharSequence),5
"org.apache.commons.lang3.StringUtils.join(boolean[],char)",2
"org.apache.commons.lang3.StringUtils.join(byte[],char)",2
"org.apache.commons.lang3.StringUtils.join(char[],char)",2
"org.apache.commons.lang3.StringUtils.join(double[],char)",2
"org.apache.commons.lang3.StringUtils.join(float[],char)",2
"org.apache.commons.lang3.StringUtils.join(int[],char)",2
"org.apache.commons.lang3.StringUtils.join(Iterable,char)",2
"org.apache.commons.lang3.StringUtils.join(Iterable,String)",2
"org.apache.commons.lang3.StringUtils.join(Iterator,char)",3
"org.apache.commons.lang3.StringUtils.join(Iterator,String)",3
"org.apache.commons.lang3.StringUtils.join(List,char,int,int)",3
"org.apache.commons.lang3.StringUtils.join(List,String,int,int)",3
"org.apache.commons.lang3.StringUtils.join(long[],char)",2
"org.apache.commons.lang3.StringUtils.join(Object[],char)",2
"org.apache.commons.lang3.StringUtils.join(Object[],String)",2
"org.apache.commons.lang3.StringUtils.join(Object[],String,int,int)",2
"org.apache.commons.lang3.StringUtils.join(short[],char)",2
"org.apache.commons.lang3.StringUtils.joinWith(String,Object[])",2
"org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,int)",2
"org.apache.commons.lang3.StringUtils.lastIndexOf(CharSequence,int,int)",2
"org.apache.commons.lang3.StringUtils.lastIndexOfAny(CharSequence,CharSequence[])",6
"org.apache.commons.lang3.StringUtils.leftPad(String,int,char)",4
"org.apache.commons.lang3.StringUtils.leftPad(String,int,String)",21
"org.apache.commons.lang3.StringUtils.lowerCase(String,Locale)",2
org.apache.commons.lang3.StringUtils.normalizeSpace(String),19
"org.apache.commons.lang3.StringUtils.remove(String,char)",5
"org.apache.commons.lang3.StringUtils.removeStart(String,char)",3
"org.apache.commons.lang3.StringUtils.repeat(char,int)",2
"org.apache.commons.lang3.StringUtils.repeat(String,int)",15
"org.apache.commons.lang3.StringUtils.repeat(String,String,int)",3
"org.apache.commons.lang3.StringUtils.replaceChars(String,String,String)",10
"org.apache.commons.lang3.StringUtils.rightPad(String,int,char)",4
"org.apache.commons.lang3.StringUtils.rightPad(String,int,String)",21
"org.apache.commons.lang3.StringUtils.rotate(String,int)",5
"org.apache.commons.lang3.StringUtils.splitByCharacterType(String,boolean)",9
"org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(String,String,int,boolean)",11
"org.apache.commons.lang3.StringUtils.splitWorker(String,char,boolean)",22
"org.apache.commons.lang3.StringUtils.splitWorker(String,String,int,boolean)",86
org.apache.commons.lang3.StringUtils.stripAccents(String),2
"org.apache.commons.lang3.StringUtils.stripAll(String[],String)",2
"org.apache.commons.lang3.StringUtils.stripEnd(String,String)",10
"org.apache.commons.lang3.StringUtils.stripStart(String,String)",10
org.apache.commons.lang3.StringUtils.stripToEmpty(String),2
org.apache.commons.lang3.StringUtils.stripToNull(String),3
"org.apache.commons.lang3.StringUtils.substringAfter(String,int)",3
"org.apache.commons.lang3.StringUtils.substringAfter(String,String)",4
"org.apache.commons.lang3.StringUtils.substringAfterLast(String,int)",4
"org.apache.commons.lang3.StringUtils.substringAfterLast(String,String)",5
"org.apache.commons.lang3.StringUtils.substringBefore(String,int)",3
"org.apache.commons.lang3.StringUtils.substringBefore(String,String)",5
"org.apache.commons.lang3.StringUtils.substringBeforeLast(String,String)",4
"org.apache.commons.lang3.StringUtils.substringBetween(String,String,String)",4
"org.apache.commons.lang3.StringUtils.substringsBetween(String,String,String)",16
org.apache.commons.lang3.StringUtils.swapCase(String),6
org.apache.commons.lang3.StringUtils.toCodePoints(CharSequence),4
org.apache.commons.lang3.StringUtils.trimToNull(String),2
org.apache.commons.lang3.StringUtils.uncapitalize(String),4
"org.apache.commons.lang3.StringUtils.unwrap(String,char)",6
"org.apache.commons.lang3.StringUtils.unwrap(String,String)",6
"org.apache.commons.lang3.StringUtils.upperCase(String,Locale)",2
"org.apache.commons.lang3.StringUtils.wrap(String,char)",3
"org.apache.commons.lang3.StringUtils.wrap(String,String)",3
"org.apache.commons.lang3.StringUtils.wrapIfMissing(String,char)",38
"org.apache.commons.lang3.StringUtils.wrapIfMissing(String,String)",38
org.apache.commons.lang3.Functions.get(FailableSupplier),2
org.apache.commons.lang3.Functions.getAsBoolean(FailableBooleanSupplier),2
org.apache.commons.lang3.Functions.rethrow(Throwable),2
org.apache.commons.lang3.Functions.run(FailableRunnable),2
"org.apache.commons.lang3.Functions.tryWithResources(FailableRunnable,FailableConsumer,FailableRunnable[])",2
org.apache.commons.lang3.util.FluentBitSet.clear(int[]),2
org.apache.commons.lang3.util.FluentBitSet.equals(Object),3
org.apache.commons.lang3.util.FluentBitSet.or(FluentBitSet[]),2
org.apache.commons.lang3.util.FluentBitSet.set(int[]),2
org.apache.commons.lang3.RuntimeEnvironment.inContainer(String),5
org.apache.commons.lang3.tuple.Pair.equals(Object),5
org.apache.commons.lang3.tuple.MutablePair.of(Entry),2
"org.apache.commons.lang3.tuple.ImmutableTriple.of(Object,Object,Object)",12
"org.apache.commons.lang3.tuple.ImmutablePair.of(Object,Object)",3
org.apache.commons.lang3.tuple.ImmutablePair.of(Entry),2
org.apache.commons.lang3.tuple.Triple.equals(Object),6
"org.apache.commons.lang3.Strings.containsAny(ToBooleanBiFunction,CharSequence,CharSequence[])",6
"org.apache.commons.lang3.Strings.appendIfMissing(String,CharSequence,CharSequence[])",8
"org.apache.commons.lang3.Strings.endsWith(CharSequence,CharSequence)",6
"org.apache.commons.lang3.Strings.endsWithAny(CharSequence,CharSequence[])",6
"org.apache.commons.lang3.Strings.equalsAny(CharSequence,CharSequence[])",5
org.apache.commons.lang3.Strings.isCaseSensitive(),2
"org.apache.commons.lang3.Strings.lastIndexOf(CharSequence,CharSequence)",2
"org.apache.commons.lang3.Strings.prependIfMissing(String,CharSequence,CharSequence[])",8
"org.apache.commons.lang3.Strings.removeEnd(String,CharSequence)",4
"org.apache.commons.lang3.Strings.removeStart(String,CharSequence)",3
"org.apache.commons.lang3.Strings.replace(String,String,String,int)",22
"org.apache.commons.lang3.Strings.startsWith(CharSequence,CharSequence)",6
"org.apache.commons.lang3.Strings.startsWithAny(CharSequence,CharSequence[])",6
org.apache.commons.lang3.CharSet.getInstance(String[]),4
org.apache.commons.lang3.CharSet.add(String),24
org.apache.commons.lang3.CharSet.equals(Object),3
org.apache.commons.lang3.BitField.isAllSet(int),2
org.apache.commons.lang3.BitField.isSet(int),2
"org.apache.commons.lang3.BitField.setBoolean(int,boolean)",2
"org.apache.commons.lang3.BitField.setByteBoolean(byte,boolean)",2
"org.apache.commons.lang3.BitField.setShortBoolean(short,boolean)",2
org.apache.commons.lang3.CharRange.contains(char),6
org.apache.commons.lang3.CharRange.contains(CharRange),12
org.apache.commons.lang3.CharRange.equals(Object),6
org.apache.commons.lang3.CharRange.hashCode(),2
org.apache.commons.lang3.CharRange.toString(),5
"org.joda.time.format.DateTimeFormatterBuilder.appendFraction(DateTimeFieldType,int,int)",7
org.joda.time.format.DateTimeFormatterBuilder.getFormatter(),11
org.joda.time.format.DateTimeFormatterBuilder.isPrinter(Object),3
org.joda.time.format.DateTimeFormatterBuilder.isParser(Object),3
org.joda.time.format.DateTimeFormatterBuilder.isFormatter(Object),3
org.joda.time.format.ISOPeriodFormat.standard(),2
org.joda.time.format.ISOPeriodFormat.alternate(),2
org.joda.time.format.ISOPeriodFormat.alternateExtended(),2
org.joda.time.format.ISOPeriodFormat.alternateWithWeeks(),2
org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks(),2
org.joda.time.format.PeriodFormat.wordBased(Locale),3
org.joda.time.format.PeriodFormat.buildWordBased(Locale),2
org.joda.time.format.DateTimeFormatter.isPrinter(),2
org.joda.time.format.DateTimeFormatter.isParser(),2
org.joda.time.format.DateTimeFormatter.withLocale(Locale),4
org.joda.time.format.DateTimeFormatter.withOffsetParsed(),2
org.joda.time.format.DateTimeFormatter.withChronology(Chronology),2
org.joda.time.format.DateTimeFormatter.withZone(DateTimeZone),2
org.joda.time.format.DateTimeFormatter.withPivotYear(Integer),8
"org.joda.time.format.DateTimeFormatter.printTo(StringBuffer,ReadableInstant)",2
"org.joda.time.format.DateTimeFormatter.printTo(StringBuilder,ReadableInstant)",2
"org.joda.time.format.DateTimeFormatter.printTo(StringBuffer,long)",2
"org.joda.time.format.DateTimeFormatter.printTo(StringBuilder,long)",2
"org.joda.time.format.DateTimeFormatter.printTo(StringBuffer,ReadablePartial)",2
"org.joda.time.format.DateTimeFormatter.printTo(StringBuilder,ReadablePartial)",2
"org.joda.time.format.DateTimeFormatter.printTo(Appendable,ReadablePartial)",2
org.joda.time.format.DateTimeFormatter.print(ReadableInstant),2
org.joda.time.format.DateTimeFormatter.print(long),2
org.joda.time.format.DateTimeFormatter.print(ReadablePartial),2
"org.joda.time.format.DateTimeFormatter.printTo(Appendable,long,Chronology)",3
org.joda.time.format.DateTimeFormatter.requirePrinter(),2
"org.joda.time.format.DateTimeFormatter.parseInto(ReadWritableInstant,String,int)",11
org.joda.time.format.DateTimeFormatter.parseLocalDateTime(String),5
org.joda.time.format.DateTimeFormatter.parseDateTime(String),12
org.joda.time.format.DateTimeFormatter.parseMutableDateTime(String),12
org.joda.time.format.DateTimeFormatter.requireParser(),2
org.joda.time.format.DateTimeFormatter.selectChronology(Chronology),4
org.joda.time.format.DateTimeParserInternalParser.of(DateTimeParser),3
org.joda.time.format.InternalPrinterDateTimePrinter.of(InternalPrinter),4
"org.joda.time.format.InternalPrinterDateTimePrinter.printTo(StringBuffer,long,Chronology,int,DateTimeZone,Locale)",3
"org.joda.time.format.InternalPrinterDateTimePrinter.printTo(StringBuffer,ReadablePartial,Locale)",3
org.joda.time.format.InternalPrinterDateTimePrinter.equals(Object),3
"org.joda.time.format.ISODateTimeFormat.forFields(Collection,boolean,boolean)",50
"org.joda.time.format.ISODateTimeFormat.dateByMonth(DateTimeFormatterBuilder,Collection,boolean,boolean)",8
"org.joda.time.format.ISODateTimeFormat.dateByOrdinal(DateTimeFormatterBuilder,Collection,boolean,boolean)",4
"org.joda.time.format.ISODateTimeFormat.dateByWeek(DateTimeFormatterBuilder,Collection,boolean,boolean)",8
"org.joda.time.format.ISODateTimeFormat.appendSeparator(DateTimeFormatterBuilder,boolean)",2
org.joda.time.format.InternalParserDateTimeParser.of(InternalParser),4
org.joda.time.format.InternalParserDateTimeParser.equals(Object),3
"org.joda.time.format.DateTimeFormat.patternForStyle(String,Locale)",2
org.joda.time.format.DateTimeFormat.createFormatterForPattern(String),6
org.joda.time.format.DateTimeFormat.createFormatterForStyle(String),5
"org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)",4
"org.joda.time.format.DateTimeFormat.createDateTimeFormatter(int,int)",3
org.joda.time.format.PeriodFormatter.isPrinter(),2
org.joda.time.format.PeriodFormatter.isParser(),2
org.joda.time.format.PeriodFormatter.withLocale(Locale),4
org.joda.time.format.PeriodFormatter.withParseType(PeriodType),2
org.joda.time.format.PeriodFormatter.checkPrinter(),2
org.joda.time.format.PeriodFormatter.parseMutablePeriod(String),3
org.joda.time.format.PeriodFormatter.checkParser(),2
org.joda.time.format.DateTimePrinterInternalPrinter.of(DateTimePrinter),3
"org.joda.time.format.DateTimePrinterInternalPrinter.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",3
"org.joda.time.format.DateTimePrinterInternalPrinter.printTo(Appendable,ReadablePartial,Locale)",3
org.joda.time.IllegalFieldValueException.getIllegalValueAsString(),2
org.joda.time.IllegalFieldValueException.prependMessage(String),3
org.joda.time.DateTime.now(DateTimeZone),2
org.joda.time.DateTime.now(Chronology),2
org.joda.time.DateTime.toDateTimeISO(),2
org.joda.time.DateTime.toDateTime(DateTimeZone),2
org.joda.time.DateTime.toDateTime(Chronology),2
org.joda.time.DateTime.withMillis(long),2
org.joda.time.DateTime.withChronology(Chronology),2
org.joda.time.DateTime.withZoneRetainFields(DateTimeZone),2
org.joda.time.DateTime.withFields(ReadablePartial),2
"org.joda.time.DateTime.withField(DateTimeFieldType,int)",2
"org.joda.time.DateTime.withFieldAdded(DurationFieldType,int)",3
"org.joda.time.DateTime.withDurationAdded(long,int)",3
"org.joda.time.DateTime.withDurationAdded(ReadableDuration,int)",3
"org.joda.time.DateTime.withPeriodAdded(ReadablePeriod,int)",3
org.joda.time.DateTime.plusYears(int),2
org.joda.time.DateTime.plusMonths(int),2
org.joda.time.DateTime.plusWeeks(int),2
org.joda.time.DateTime.plusDays(int),2
org.joda.time.DateTime.plusHours(int),2
org.joda.time.DateTime.plusMinutes(int),2
org.joda.time.DateTime.plusSeconds(int),2
org.joda.time.DateTime.plusMillis(int),2
org.joda.time.DateTime.minusYears(int),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_83(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_82(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_96(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_126(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_97(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_125(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_73(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_124(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_116(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_123(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_26(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_80(),5
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_25(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_24(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_120(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_23(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_119(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_68(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_1(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_4(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_3(),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_17(),5
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_67(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_114(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_66(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_76(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_99(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_98(),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_75(),5
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_92(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_74(),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_71(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_93(),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_65(),5
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_85(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_89(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_95(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_84(),5
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_72(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_151(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_5(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_78(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_69(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_57(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_56(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_55(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_63(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_54(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_62(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_53(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_61(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_52(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_21(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_60(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_51(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_59(),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_87(),3
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_50(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_58(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_81(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_49(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_48(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_47(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_46(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_16(),5
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_149(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_45(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_44(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_19(),7
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_43(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_42(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_41(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_40(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_39(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_38(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_37(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_36(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_35(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_34(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_33(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_32(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_31(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_70(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_30(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_29(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_28(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_27(),2
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_18(),32
org.apache.commons.jxpath.ri.parser.XPathParser.ReInit(InputStream),4
org.apache.commons.jxpath.ri.parser.XPathParser.ReInit(Reader),4
org.apache.commons.jxpath.ri.parser.XPathParser.ReInit(XPathParserTokenManager),4
org.apache.commons.jxpath.ri.parser.XPathParser.jj_consume_token(int),12
org.apache.commons.jxpath.ri.parser.XPathParser.getNextToken(),2
org.apache.commons.jxpath.ri.parser.XPathParser.getToken(int),6
"org.apache.commons.jxpath.ri.parser.XPathParser.jj_save(int,int)",4
org.apache.commons.jxpath.ri.parser.SimpleCharStream.ExpandBuff(boolean),76
org.apache.commons.jxpath.ri.parser.SimpleCharStream.UpdateLineColumn(char),16
org.apache.commons.jxpath.ri.parser.SimpleCharStream.readChar(),4
org.apache.commons.jxpath.ri.parser.SimpleCharStream.backup(int),2
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.ReInit(Reader,int,int,int)",3
org.apache.commons.jxpath.ri.parser.SimpleCharStream.GetImage(),2
org.apache.commons.jxpath.ri.parser.SimpleCharStream.GetSuffix(int),2
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.adjustBeginLineColumn(int,int)",32
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjStartNfaWithStates_0(int,int,int)",4
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa0_0(),35
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa1_0(long,long)",25
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa2_0(long,long,long,long)",28
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa3_0(long,long,long,long)",26
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa4_0(long,long,long,long)",21
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa5_0(long,long,long,long)",23
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa6_0(long,long,long,long)",20
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa7_0(long,long,long,long)",19
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa8_0(long,long,long,long)",17
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa9_0(long,long,long,long)",15
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa10_0(long,long,long,long)",19
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa11_0(long,long,long,long)",15
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa12_0(long,long,long,long)",17
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa13_0(long,long,long,long)",11
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa14_0(long,long,long,long)",13
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa15_0(long,long,long,long)",10
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa16_0(long,long)",9
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa17_0(long,long)",9
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa18_0(long,long)",9
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa19_0(long,long)",8
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa20_0(long,long)",6
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa21_0(long,long)",7
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCheckNAdd(int),2
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCanMove_0(int,int,int,long,long)",4
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCanMove_1(int,int,int,long,long)",48
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCanMove_2(int,int,int,long,long)",50
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.ReInitRounds(),2
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.SwitchTo(int),3
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjFillToken(),2
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getPropertyNames(),4
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getPropertyName(),4
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.setPropertyName(String),3
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getPropertyIndex(),5
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.setPropertyIndex(int),2
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getImmediateNode(),2
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.setValue(Object),2
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.createPath(JXPathContext),9
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.createPath(JXPathContext,Object)",2
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.remove(),4
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.removeKey(),2
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.asPath(),9
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory.createNodePointer(QName,Object,Locale)",2
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory.createNodePointer(NodePointer,QName,Object)",3
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.isLeaf(),3
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.hashCode(),2
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.equals(Object),7
"org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory.createNodePointer(QName,Object,Locale)",2
"org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory.createNodePointer(NodePointer,QName,Object)",2
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory.createNodePointer(QName,Object,Locale)",2
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory.createNodePointer(NodePointer,QName,Object)",2
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.hashCode(),2
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.equals(Object),16
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getPropertyNames(),4
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getPropertyName(),4
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getPropertyIndex(),5
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.setPropertyIndex(int),2
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getImmediateNode(),14
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.isActualProperty(),2
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.remove(),5
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.setValue(int,Object)",3
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.convert(Object,boolean)",7
"org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory.createNodePointer(QName,Object,Locale)",2
"org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory.createNodePointer(NodePointer,QName,Object)",2
org.apache.commons.jxpath.ri.model.container.ContainerPointer.isCollection(),3
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getLength(),2
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getImmediateNode(),4
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getImmediateValuePointer(),2
org.apache.commons.jxpath.ri.model.container.ContainerPointer.equals(Object),5
org.apache.commons.jxpath.ri.model.container.ContainerPointer.asPath(),2
org.apache.commons.jxpath.ri.model.VariablePointer.getBaseValue(),2
org.apache.commons.jxpath.ri.model.VariablePointer.isLeaf(),3
org.apache.commons.jxpath.ri.model.VariablePointer.isCollection(),3
org.apache.commons.jxpath.ri.model.VariablePointer.getImmediateNode(),2
org.apache.commons.jxpath.ri.model.VariablePointer.setValue(Object),3
org.apache.commons.jxpath.ri.model.VariablePointer.getImmediateValuePointer(),3
org.apache.commons.jxpath.ri.model.VariablePointer.getLength(),3
"org.apache.commons.jxpath.ri.model.VariablePointer.createPath(JXPathContext,Object)",2
org.apache.commons.jxpath.ri.model.VariablePointer.createPath(JXPathContext),3
"org.apache.commons.jxpath.ri.model.VariablePointer.createChild(JXPathContext,QName,int)",6
"org.apache.commons.jxpath.ri.model.VariablePointer.createCollection(JXPathContext,int)",6
org.apache.commons.jxpath.ri.model.VariablePointer.remove(),6
org.apache.commons.jxpath.ri.model.VariablePointer.findVariables(JXPathContext),4
org.apache.commons.jxpath.ri.model.VariablePointer.hashCode(),2
org.apache.commons.jxpath.ri.model.VariablePointer.equals(Object),6
org.apache.commons.jxpath.ri.model.VariablePointer.asPath(),6
"org.apache.commons.jxpath.ri.model.NodePointer.newNodePointer(QName,Object,Locale)",5
"org.apache.commons.jxpath.ri.model.NodePointer.newChildNodePointer(NodePointer,QName,Object)",4
org.apache.commons.jxpath.ri.model.NodePointer.getNamespaceResolver(),3
org.apache.commons.jxpath.ri.model.NodePointer.getParent(),4
org.apache.commons.jxpath.ri.model.NodePointer.isRoot(),2
org.apache.commons.jxpath.ri.model.NodePointer.isNode(),2
org.apache.commons.jxpath.ri.model.NodePointer.getValue(),2
org.apache.commons.jxpath.ri.model.NodePointer.getValuePointer(),2
org.apache.commons.jxpath.ri.model.NodePointer.isActual(),4
org.apache.commons.jxpath.ri.model.NodePointer.getRootNode(),3
org.apache.commons.jxpath.ri.model.NodePointer.testNode(NodeTest),12
org.apache.commons.jxpath.ri.model.NodePointer.getLocale(),3
"org.apache.commons.jxpath.ri.model.NodePointer.childIterator(NodeTest,boolean,NodePointer)",3
org.apache.commons.jxpath.ri.model.NodePointer.attributeIterator(QName),3
org.apache.commons.jxpath.ri.model.NodePointer.isDefaultNamespace(String),4
org.apache.commons.jxpath.ri.model.NodePointer.asPath(),73
org.apache.commons.jxpath.ri.model.NodePointer.clone(),12
"org.apache.commons.jxpath.ri.model.NodePointer.compareNodePointers(NodePointer,int,NodePointer,int)",8
"org.apache.commons.jxpath.ri.model.NodePointer.handle(Throwable,NodePointer)",3
org.apache.commons.jxpath.ri.model.NodePointer.getAbstractFactory(JXPathContext),2
"org.apache.commons.jxpath.ri.model.NodePointer.printDeep(NodePointer,String)",4
org.apache.commons.jxpath.ri.model.NodePointer.verify(NodePointer),5
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyCount(),2
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyNames(),3
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.setPropertyIndex(int),2
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getBaseValue(),3
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.setIndex(int),5
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getImmediateNode(),4
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.isActualProperty(),2
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.isCollection(),7
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getLength(),4
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.setValue(Object),3
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.createPath(JXPathContext),2
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.remove(),5
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyName(),6
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyDescriptor(),5
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyDescriptors(),2
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.asPath(),4
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.setPosition(int),6
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.getNodePointer(),2
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.prepare(),20
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.isLeaf(),3
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.getImmediateNode(),2
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.setValue(Object),2
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.getValuePointer(),3
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.createPath(JXPathContext),2
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.equals(Object),5
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.childIterator(NodeTest,boolean,NodePointer)",2
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.attributeIterator(QName),2
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.namespaceIterator(),2
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.namespacePointer(String),2
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.testNode(NodeTest),6
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.asPath(),5
org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator.getNodePointer(),3
org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator.setPosition(int),4
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.setValue(Object),5
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createPath(JXPathContext),6
"org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createPath(JXPathContext,Object)",6
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.asPath(),3
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.asPath(),20
"org.apache.commons.jxpath.ri.model.beans.NullPointer.createPath(JXPathContext,Object)",2
org.apache.commons.jxpath.ri.model.beans.NullPointer.createPath(JXPathContext),2
org.apache.commons.jxpath.ri.model.beans.NullPointer.hashCode(),2
org.apache.commons.jxpath.ri.model.beans.NullPointer.equals(Object),6
org.apache.commons.jxpath.ri.model.beans.NullPointer.asPath(),3
org.apache.commons.jxpath.ri.model.beans.BeanPointer.isLeaf(),3
org.apache.commons.jxpath.ri.model.beans.BeanPointer.hashCode(),2
org.apache.commons.jxpath.ri.model.beans.BeanPointer.asPath(),8
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.getNodePointer(),15
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.setPosition(int),2
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.setPositionIndividualProperty(int),27
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.prepareForIndividualProperty(String),48
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.getLength(),3
"org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.childIterator(NodeTest,boolean,NodePointer)",7
org.apache.commons.lang3.JavaVersion.maxVersion(),2
org.apache.commons.lang3.JavaVersion.toFloatVersion(String),3
org.apache.commons.lang3.concurrent.AtomicInitializer.get(),3
org.apache.commons.lang3.concurrent.AtomicInitializer.isInitialized(),2
org.apache.commons.lang3.concurrent.ConstantInitializer.equals(Object),3
org.apache.commons.lang3.concurrent.TimedSemaphore.acquirePermit(),3
org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod(),2
org.apache.commons.lang3.concurrent.TimedSemaphore.prepareAcquire(),3
org.apache.commons.lang3.concurrent.TimedSemaphore.shutdown(),5
org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.close(),5
org.apache.commons.lang3.concurrent.AbstractConcurrentInitializer.initialize(),5
"org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsent(ConcurrentMap,Object,ConcurrentInitializer)",4
"org.apache.commons.lang3.concurrent.ConcurrentUtils.createIfAbsentUnchecked(ConcurrentMap,Object,ConcurrentInitializer)",2
org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCause(ExecutionException),3
org.apache.commons.lang3.concurrent.ConcurrentUtils.extractCauseUnchecked(ExecutionException),3
org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCause(ExecutionException),2
org.apache.commons.lang3.concurrent.ConcurrentUtils.handleCauseUnchecked(ExecutionException),2
org.apache.commons.lang3.concurrent.ConcurrentUtils.initializeUnchecked(ConcurrentInitializer),2
org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker.incrementAndCheckState(Long),4
org.apache.commons.lang3.concurrent.BackgroundInitializer.get(),5
org.apache.commons.lang3.concurrent.BackgroundInitializer.getFuture(),2
org.apache.commons.lang3.concurrent.BackgroundInitializer.isInitialized(),6
org.apache.commons.lang3.concurrent.BackgroundInitializer.isStarted(),2
org.apache.commons.lang3.concurrent.BackgroundInitializer.setExternalExecutor(ExecutorService),2
org.apache.commons.lang3.concurrent.BackgroundInitializer.start(),3
org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(Thread),16
org.apache.commons.lang3.concurrent.UncheckedFutureImpl.get(),3
"org.apache.commons.lang3.concurrent.UncheckedFutureImpl.get(long,TimeUnit)",4
org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.changeState(State),3
org.apache.commons.lang3.concurrent.AbstractCircuitBreaker.isClosed(),2
org.apache.commons.lang3.concurrent.LazyInitializer.isInitialized(),2
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.close(),12
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.isInitialized(),2
"org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.nextCheckIntervalData(int,CheckIntervalData,State,long)",2
"org.apache.commons.lang3.concurrent.EventCountCircuitBreaker.updateCheckIntervalData(CheckIntervalData,CheckIntervalData)",3
org.apache.commons.lang3.concurrent.AtomicSafeInitializer.isInitialized(),2
org.apache.commons.lang3.concurrent.Memoizer.compute(Object),6
"org.apache.commons.lang3.Validate.exclusiveBetween(Object,Object,Comparable,String,Object[])",3
"org.apache.commons.lang3.Validate.finite(double,String,Object[])",3
"org.apache.commons.lang3.Validate.getMessage(String,Object[])",2
"org.apache.commons.lang3.Validate.inclusiveBetween(Object,Object,Comparable,String,Object[])",3
"org.apache.commons.lang3.Validate.isAssignableFrom(Class,Class)",4
"org.apache.commons.lang3.Validate.isAssignableFrom(Class,Class,String,Object[])",2
"org.apache.commons.lang3.Validate.isInstanceOf(Class,Object)",2
"org.apache.commons.lang3.Validate.isInstanceOf(Class,Object,String,Object[])",2
"org.apache.commons.lang3.Validate.isTrue(boolean,String,Object[])",2
"org.apache.commons.lang3.Validate.matchesPattern(CharSequence,String,String,Object[])",2
"org.apache.commons.lang3.Validate.noNullElements(Object[],String,Object[])",4
"org.apache.commons.lang3.Validate.notBlank(CharSequence,String,Object[])",2
"org.apache.commons.lang3.Validate.notEmpty(Collection,String,Object[])",2
"org.apache.commons.lang3.Validate.notEmpty(Map,String,Object[])",2
"org.apache.commons.lang3.Validate.notEmpty(CharSequence,String,Object[])",2
"org.apache.commons.lang3.Validate.notEmpty(Object[],String,Object[])",2
"org.apache.commons.lang3.Validate.notNaN(double,String,Object[])",2
"org.apache.commons.lang3.Validate.validIndex(Collection,int,String,Object[])",3
"org.apache.commons.lang3.Validate.validIndex(CharSequence,int,String,Object[])",3
"org.apache.commons.lang3.Validate.validIndex(Object[],int,String,Object[])",3
"org.apache.commons.lang3.Validate.validState(boolean,String,Object[])",2
org.apache.commons.lang3.RandomUtils.randomBytes(int),2
"org.apache.commons.lang3.RandomUtils.randomDouble(double,double)",8
"org.apache.commons.lang3.RandomUtils.randomFloat(float,float)",8
"org.apache.commons.lang3.RandomUtils.randomInt(int,int)",8
"org.apache.commons.lang3.RandomUtils.randomLong(long,long)",8
"org.apache.commons.lang3.RegExUtils.replaceAll(CharSequence,Pattern,String)",2
"org.apache.commons.lang3.RegExUtils.replaceAll(String,String,String)",2
"org.apache.commons.lang3.RegExUtils.replaceFirst(CharSequence,Pattern,String)",4
"org.apache.commons.lang3.RegExUtils.replacePattern(CharSequence,String,String)",2
org.apache.commons.lang3.Range.contains(Object),4
org.apache.commons.lang3.Range.containsRange(Range),4
org.apache.commons.lang3.Range.elementCompareTo(Object),3
org.apache.commons.lang3.Range.equals(Object),6
org.apache.commons.lang3.Range.fit(Object),3
org.apache.commons.lang3.Range.hashCode(),2
org.apache.commons.lang3.Range.intersectionWith(Range),6
org.apache.commons.lang3.Range.isAfter(Object),3
org.apache.commons.lang3.Range.isAfterRange(Range),2
org.apache.commons.lang3.Range.isBefore(Object),3
org.apache.commons.lang3.Range.isBeforeRange(Range),2
org.apache.commons.lang3.Range.isEndedBy(Object),3
org.apache.commons.lang3.Range.isNaturalOrdering(),2
org.apache.commons.lang3.Range.isOverlappedBy(Range),5
org.apache.commons.lang3.Range.isStartedBy(Object),3
org.apache.commons.lang3.Range.toString(),2
"org.apache.commons.lang3.compare.ComparableUtils.max(Comparable,Comparable)",2
"org.apache.commons.lang3.compare.ComparableUtils.min(Comparable,Comparable)",2
org.apache.commons.lang3.ObjectUtils.allNull(Object[]),2
org.apache.commons.lang3.ObjectUtils.anyNotNull(Object[]),2
org.apache.commons.lang3.ObjectUtils.anyNull(Object[]),2
org.apache.commons.lang3.ObjectUtils.clone(Object),9
org.apache.commons.lang3.ObjectUtils.cloneIfPossible(Object),2
"org.apache.commons.lang3.ObjectUtils.getIfNull(Object,Supplier)",2
org.apache.commons.lang3.ObjectUtils.identityToString(Object),2
org.apache.commons.lang3.ObjectUtils.isEmpty(Object),10
org.apache.commons.lang3.ObjectUtils.isNotEmpty(Object),2
org.apache.commons.lang3.ObjectUtils.max(Comparable[]),4
org.apache.commons.lang3.ObjectUtils.min(Comparable[]),4
org.apache.commons.lang3.ObjectUtils.mode(Object[]),13
"org.apache.commons.lang3.ObjectUtils.requireNonEmpty(Object,String)",2
"org.apache.commons.lang3.ObjectUtils.toString(Supplier,Supplier)",2
"org.apache.commons.lang3.ObjectUtils.toString(Object,Supplier)",2
"org.apache.commons.lang3.text.StrSubstitutor.replace(Object,Properties)",3
"org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(String,List)",2
org.apache.commons.lang3.text.StrSubstitutor.replace(char[]),2
"org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)",2
org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence),2
"org.apache.commons.lang3.text.StrSubstitutor.replace(CharSequence,int,int)",2
org.apache.commons.lang3.text.StrSubstitutor.replace(Object),2
org.apache.commons.lang3.text.StrSubstitutor.replace(StrBuilder),2
"org.apache.commons.lang3.text.StrSubstitutor.replace(StrBuilder,int,int)",2
org.apache.commons.lang3.text.StrSubstitutor.replace(String),3
"org.apache.commons.lang3.text.StrSubstitutor.replace(String,int,int)",3
org.apache.commons.lang3.text.StrSubstitutor.replace(StringBuffer),2
"org.apache.commons.lang3.text.StrSubstitutor.replace(StringBuffer,int,int)",2
org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StrBuilder),2
"org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StrBuilder,int,int)",2
org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuffer),2
"org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuffer,int,int)",3
org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder),2
"org.apache.commons.lang3.text.StrSubstitutor.replaceIn(StringBuilder,int,int)",3
"org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(String,StrBuilder,int,int)",2
org.apache.commons.lang3.text.StrSubstitutor.setValueDelimiter(String),2
"org.apache.commons.lang3.text.StrSubstitutor.substitute(StrBuilder,int,int)",2
org.apache.commons.lang3.text.translate.NumericEntityUnescaper.isSet(OPTION),3
"org.apache.commons.lang3.text.translate.AggregateTranslator.translate(CharSequence,int,Writer)",4
org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(CharSequence),9
"org.apache.commons.lang3.text.translate.OctalUnescaper.translate(CharSequence,int,Writer)",9
"org.apache.commons.lang3.text.translate.LookupTranslator.translate(CharSequence,int,Writer)",9
org.apache.commons.collections4.iterators.ZippingIterator.hasNext(),5
org.apache.commons.collections4.iterators.ZippingIterator.next(),2
org.apache.commons.collections4.iterators.ZippingIterator.remove(),2
org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(Iterator),2
org.apache.commons.collections4.iterators.CollatingIterator.checkNotStarted(),2
org.apache.commons.collections4.iterators.CollatingIterator.getIteratorIndex(),2
org.apache.commons.collections4.iterators.CollatingIterator.hasNext(),3
org.apache.commons.collections4.iterators.CollatingIterator.least(),9
org.apache.commons.collections4.iterators.CollatingIterator.next(),3
org.apache.commons.collections4.iterators.CollatingIterator.remove(),2
org.apache.commons.collections4.iterators.CollatingIterator.set(int),2
org.apache.commons.collections4.iterators.CollatingIterator.start(),3
org.apache.commons.collections4.iterators.ReverseListIterator.add(Object),2
org.apache.commons.collections4.iterators.ReverseListIterator.remove(),2
org.apache.commons.collections4.iterators.ReverseListIterator.set(Object),2
org.apache.commons.collections4.iterators.BoundedIterator.checkBounds(),2
org.apache.commons.collections4.iterators.BoundedIterator.hasNext(),2
org.apache.commons.collections4.iterators.BoundedIterator.init(),4
org.apache.commons.collections4.iterators.BoundedIterator.next(),2
org.apache.commons.collections4.iterators.BoundedIterator.remove(),2
org.apache.commons.collections4.iterators.NodeListIterator.hasNext(),3
org.apache.commons.collections4.iterators.NodeListIterator.next(),3
org.apache.commons.collections4.iterators.ArrayListIterator.next(),2
org.apache.commons.collections4.iterators.ArrayListIterator.previous(),2
org.apache.commons.collections4.iterators.ArrayListIterator.set(Object),2
org.apache.commons.collections4.iterators.LazyIteratorChain.remove(),2
org.apache.commons.collections4.iterators.LazyIteratorChain.updateCurrentIterator(),18
org.apache.commons.collections4.iterators.LoopingListIterator.hasNext(),2
org.apache.commons.collections4.iterators.LoopingListIterator.hasPrevious(),2
org.apache.commons.collections4.iterators.LoopingListIterator.next(),3
org.apache.commons.collections4.iterators.LoopingListIterator.nextIndex(),3
org.apache.commons.collections4.iterators.LoopingListIterator.previous(),4
org.apache.commons.collections4.iterators.LoopingListIterator.previousIndex(),3
org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(Iterator),2
org.apache.commons.collections4.iterators.PeekingIterator.element(),2
org.apache.commons.collections4.iterators.PeekingIterator.fill(),4
org.apache.commons.collections4.iterators.PeekingIterator.hasNext(),4
org.apache.commons.collections4.iterators.PeekingIterator.next(),3
org.apache.commons.collections4.iterators.PeekingIterator.peek(),2
org.apache.commons.collections4.iterators.PeekingIterator.remove(),2
org.apache.commons.collections4.iterators.ObjectGraphIterator.findNext(Object),2
org.apache.commons.collections4.iterators.ObjectGraphIterator.findNextByIterator(Iterator),54
org.apache.commons.collections4.iterators.ObjectGraphIterator.next(),2
org.apache.commons.collections4.iterators.ObjectGraphIterator.remove(),2
org.apache.commons.collections4.iterators.ObjectGraphIterator.updateCurrentIterator(),5
org.apache.commons.collections4.iterators.ArrayIterator.hasNext(),2
org.apache.commons.collections4.iterators.ArrayIterator.next(),2
org.apache.commons.collections4.iterators.PermutationIterator.hasNext(),2
org.apache.commons.collections4.iterators.SingletonListIterator.hasNext(),3
org.apache.commons.collections4.iterators.SingletonListIterator.hasPrevious(),3
org.apache.commons.collections4.iterators.SingletonListIterator.next(),3
org.apache.commons.collections4.iterators.SingletonListIterator.nextIndex(),2
org.apache.commons.collections4.iterators.SingletonListIterator.previous(),3
org.apache.commons.collections4.iterators.SingletonListIterator.previousIndex(),2
org.apache.commons.collections4.iterators.SingletonListIterator.remove(),3
org.apache.commons.collections4.iterators.SingletonListIterator.set(Object),3
org.apache.commons.collections4.iterators.ObjectArrayIterator.hasNext(),2
org.apache.commons.collections4.iterators.ObjectArrayIterator.next(),2
org.apache.commons.collections4.iterators.EnumerationIterator.remove(),3
org.apache.commons.collections4.iterators.IteratorIterable.iterator(),2
org.apache.commons.collections4.iterators.LoopingIterator.hasNext(),2
org.apache.commons.collections4.iterators.LoopingIterator.next(),3
org.apache.commons.collections4.iterators.SingletonIterator.hasNext(),3
org.apache.commons.collections4.iterators.SingletonIterator.next(),3
org.apache.commons.collections4.iterators.SingletonIterator.remove(),4
org.apache.commons.collections4.iterators.ListIteratorWrapper.add(Object),2
org.apache.commons.collections4.iterators.ListIteratorWrapper.hasNext(),3
org.apache.commons.collections4.iterators.ListIteratorWrapper.hasPrevious(),3
org.apache.commons.collections4.iterators.ListIteratorWrapper.next(),3
org.apache.commons.collections4.iterators.ListIteratorWrapper.nextIndex(),2
org.apache.commons.collections4.iterators.ListIteratorWrapper.previous(),4
org.apache.commons.collections4.iterators.ListIteratorWrapper.previousIndex(),2
org.apache.commons.collections4.iterators.ListIteratorWrapper.remove(),7
org.apache.commons.collections4.iterators.ListIteratorWrapper.reset(),3
org.apache.commons.collections4.iterators.ListIteratorWrapper.set(Object),2
org.apache.commons.collections4.iterators.SkippingIterator.init(),4
org.apache.commons.collections4.iterators.SkippingIterator.remove(),2
org.apache.commons.collections4.iterators.ExtendedIterator.create(Iterator),2
org.apache.commons.collections4.iterators.ExtendedIterator.andThen(Iterator),2
org.apache.commons.collections4.iterators.ExtendedIterator.remove(),2
org.apache.commons.collections4.iterators.ObjectArrayListIterator.next(),2
org.apache.commons.collections4.iterators.ObjectArrayListIterator.previous(),2
org.apache.commons.collections4.iterators.ObjectArrayListIterator.set(Object),2
org.apache.commons.collections4.iterators.UnmodifiableListIterator.unmodifiableListIterator(ListIterator),2
org.apache.commons.collections4.iterators.UnmodifiableMapIterator.unmodifiableMapIterator(MapIterator),2
org.apache.commons.collections4.iterators.EntrySetMapIterator.remove(),2
org.apache.commons.collections4.iterators.EntrySetMapIterator.toString(),2
org.apache.commons.collections4.iterators.PushbackIterator.pushbackIterator(Iterator),2
org.apache.commons.collections4.iterators.PushbackIterator.hasNext(),3
org.apache.commons.collections4.iterators.PushbackIterator.next(),2
org.apache.commons.collections4.iterators.FilterIterator.hasNext(),3
org.apache.commons.collections4.iterators.FilterIterator.next(),3
org.apache.commons.collections4.iterators.FilterIterator.remove(),2
org.apache.commons.collections4.iterators.FilterIterator.safePredicate(Predicate),2
org.apache.commons.collections4.iterators.FilterIterator.setNextObject(),4
org.apache.commons.collections4.iterators.FilterListIterator.hasNext(),3
org.apache.commons.collections4.iterators.FilterListIterator.hasPrevious(),3
org.apache.commons.collections4.iterators.FilterListIterator.next(),3
org.apache.commons.collections4.iterators.FilterListIterator.previous(),3
org.apache.commons.collections4.iterators.FilterListIterator.setNextObject(),11
org.apache.commons.collections4.iterators.FilterListIterator.setPreviousObject(),11
org.apache.commons.collections4.SplitMapUtils.readableMap(Get),3
org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.close(),2
org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.closeForWriting(),2
org.apache.commons.compress.changes.ChangeSet.addAddition(Change),15
org.apache.commons.compress.changes.ChangeSet.addDeletion(Change),29
"org.apache.commons.compress.changes.ChangeSetPerformer.isDeletedLater(Set,ArchiveEntry)",21
org.apache.commons.compress.changes.ChangeSetResults.hasBeenAdded(String),3
org.apache.commons.compress.harmony.unpack200.IcTuple.computeOuterIsAnonymous(),5
org.apache.commons.compress.harmony.unpack200.IcTuple.equals(Object),6
org.apache.commons.compress.harmony.unpack200.IcTuple.generateHashCode(),8
org.apache.commons.compress.harmony.unpack200.IcTuple.hashCode(),2
org.apache.commons.compress.harmony.unpack200.IcTuple.nestedExplicitFlagSet(),2
org.apache.commons.compress.harmony.unpack200.IcTuple.predicted(),3
org.apache.commons.compress.harmony.unpack200.IcTuple.thisClassIndex(),2
org.apache.commons.compress.harmony.unpack200.IcTuple.thisClassString(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasAllCodeFlags(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasArchiveFileCounts(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasClassFlagsHi(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasCodeFlagsHi(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasCPNumberCounts(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasFieldFlagsHi(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasFileModtime(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasFileOptions(),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.hasFileSizeHi(),2
org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(Set),2
org.apache.commons.collections4.map.StaticBucketMap.equals(Object),3
org.apache.commons.collections4.map.StaticBucketMap.isEmpty(),2
org.apache.commons.compress.harmony.pack200.AttributeDefinitionBands.addSyntheticDefinitions(),25
org.apache.commons.compress.harmony.pack200.AttributeDefinitionBands.pack(OutputStream),2
org.apache.commons.compress.harmony.pack200.SegmentHeader.pack(OutputStream),2
org.apache.commons.compress.harmony.pack200.SegmentHeader.writeArchiveFileCounts(OutputStream),2
org.apache.commons.compress.harmony.pack200.SegmentHeader.writeArchiveSpecialCounts(OutputStream),2
org.apache.commons.compress.harmony.pack200.SegmentHeader.writeCpCounts(OutputStream),2
org.apache.commons.compress.harmony.pack200.CPSignature.compareTo(Object),28
org.apache.commons.compress.harmony.pack200.PackingOptions.addPassFile(String),2
org.apache.commons.compress.harmony.pack200.PackingOptions.getUnknownAttributePrototypes(),2
org.apache.commons.compress.harmony.pack200.PackingOptions.isPassFile(String),8
org.apache.commons.compress.harmony.pack200.PackingOptions.setDeflateHint(String),4
org.apache.commons.compress.harmony.pack200.PackingOptions.setModificationTime(String),3
org.apache.commons.compress.harmony.pack200.PackingOptions.setQuiet(boolean),2
org.apache.commons.compress.harmony.pack200.PackingOptions.setUnknownAttributeAction(String),4
org.apache.commons.compress.harmony.pack200.BHSDCodec.calculateLargest(),8
org.apache.commons.compress.harmony.pack200.BHSDCodec.calculateSmallest(),5
org.apache.commons.compress.harmony.pack200.BHSDCodec.decode(InputStream),2
"org.apache.commons.compress.harmony.pack200.BHSDCodec.decodeInts(int,InputStream)",6
"org.apache.commons.compress.harmony.pack200.BHSDCodec.decodeInts(int,InputStream,int)",6
org.apache.commons.compress.harmony.pack200.BHSDCodec.encodes(long),3
org.apache.commons.compress.harmony.pack200.BHSDCodec.equals(Object),6
org.apache.commons.compress.harmony.pack200.BHSDCodec.isDelta(),2
org.apache.commons.compress.harmony.pack200.BHSDCodec.isSigned(),2
org.apache.commons.compress.harmony.pack200.BHSDCodec.toString(),6
org.apache.commons.compress.harmony.pack200.CpBands.addIndices(),3
org.apache.commons.compress.harmony.pack200.CpBands.getConstant(Object),10
org.apache.commons.compress.harmony.pack200.CpBands.getCPClass(String),5
"org.apache.commons.compress.harmony.pack200.CpBands.getCPField(CPClass,String,String)",2
"org.apache.commons.compress.harmony.pack200.CpBands.getCPIMethod(CPClass,String,String)",2
"org.apache.commons.compress.harmony.pack200.CpBands.getCPMethod(CPClass,String,String)",2
"org.apache.commons.compress.harmony.pack200.CpBands.getCPNameAndType(String,String)",2
org.apache.commons.compress.harmony.pack200.CpBands.getCPSignature(String),60
org.apache.commons.compress.harmony.pack200.CpBands.getCPUtf8(String),3
org.apache.commons.compress.harmony.pack200.CpBands.removeCpUtf8(String),3
org.apache.commons.compress.harmony.pack200.CpBands.writeCpClass(OutputStream),2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpDescr(OutputStream),2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpDouble(OutputStream),2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpFloat(OutputStream),2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpInt(OutputStream),2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpLong(OutputStream),2
"org.apache.commons.compress.harmony.pack200.CpBands.writeCpMethodOrField(Set,OutputStream,String)",2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpSignature(OutputStream),2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpString(OutputStream),2
org.apache.commons.compress.harmony.pack200.CpBands.writeCpUtf8(OutputStream),36
org.apache.commons.compress.harmony.pack200.NewAttributeBands.addAttribute(NewAttribute),2
org.apache.commons.compress.harmony.pack200.NewAttributeBands.getCodec(String),9
org.apache.commons.compress.harmony.pack200.NewAttributeBands.pack(OutputStream),2
org.apache.commons.compress.harmony.pack200.NewAttributeBands.parseLayout(),3
org.apache.commons.compress.harmony.pack200.NewAttributeBands.readNextAttributeElement(StringReader),3
org.apache.commons.compress.harmony.pack200.NewAttributeBands.readNextLayoutElement(StringReader),20
org.apache.commons.compress.harmony.pack200.NewAttributeBands.readNumber(StringReader),64
"org.apache.commons.compress.harmony.pack200.NewAttributeBands.renumberBci(IntList,Map)",2
org.apache.commons.compress.harmony.pack200.NewAttributeBands.resolveCalls(),16
"org.apache.commons.compress.harmony.pack200.NewAttributeBands.resolveCallsForElement(int,Callable,LayoutElement)",16
org.apache.commons.compress.harmony.pack200.CPNameAndType.compareTo(Object),3
org.apache.commons.compress.harmony.pack200.PackingUtils.config(PackingOptions),16
"org.apache.commons.compress.harmony.pack200.PackingUtils.getPackingFileListFromJar(JarFile,boolean)",60
"org.apache.commons.compress.harmony.pack200.PackingUtils.getPackingFileListFromJar(JarInputStream,boolean)",8
org.apache.commons.compress.harmony.pack200.PackingUtils.reorderPackingFiles(List),3
org.apache.commons.compress.harmony.pack200.NewAttribute.addContext(int),5
org.apache.commons.compress.harmony.pack200.NewAttribute.isCodeAttribute(),2
org.apache.commons.compress.harmony.pack200.NewAttribute.isUnknown(int),9
"org.apache.commons.compress.harmony.pack200.IcBands.addInnerClass(String,String,String,int)",7
"org.apache.commons.compress.harmony.pack200.IcBands.addToMap(String,IcTuple)",5
org.apache.commons.compress.harmony.pack200.IcBands.getIcTuple(CPClass),4
org.apache.commons.compress.harmony.pack200.IcBands.pack(OutputStream),6
org.apache.commons.compress.harmony.pack200.IntList.add(int),2
"org.apache.commons.compress.harmony.pack200.IntList.add(int,int)",21
org.apache.commons.compress.harmony.pack200.IntList.addAll(IntList),2
org.apache.commons.compress.harmony.pack200.IntList.clear(),2
org.apache.commons.compress.harmony.pack200.IntList.get(int),3
org.apache.commons.compress.harmony.pack200.IntList.growAtEnd(int),10
org.apache.commons.compress.harmony.pack200.IntList.growAtFront(int),10
"org.apache.commons.compress.harmony.pack200.IntList.growForInsert(int,int)",4
org.apache.commons.compress.harmony.pack200.IntList.increment(int),3
org.apache.commons.compress.harmony.pack200.IntList.isEmpty(),2
org.apache.commons.compress.harmony.pack200.IntList.remove(int),10
"org.apache.commons.compress.harmony.pack200.ClassBands.addAnnotation(int,String,boolean,List,List,List,List,List,List,List)",13
"org.apache.commons.compress.harmony.pack200.ClassBands.addClass(int,int,String,String,String,String[])",8
org.apache.commons.compress.harmony.pack200.ClassBands.addClassAttribute(NewAttribute),4
org.apache.commons.compress.harmony.pack200.ClassBands.addCode(),2
org.apache.commons.compress.harmony.pack200.ClassBands.addCodeAttribute(NewAttribute),4
"org.apache.commons.compress.harmony.pack200.ClassBands.addEnclosingMethod(String,String,String)",2
"org.apache.commons.compress.harmony.pack200.ClassBands.addField(int,String,String,String,Object)",32
org.apache.commons.compress.harmony.pack200.ClassBands.addFieldAttribute(NewAttribute),4
"org.apache.commons.compress.harmony.pack200.ClassBands.addHandler(Label,Label,Label,String)",2
"org.apache.commons.compress.harmony.pack200.ClassBands.addLineNumber(int,Label)",2
"org.apache.commons.compress.harmony.pack200.ClassBands.addLocalVariable(String,String,String,Label,Label,int)",3
"org.apache.commons.compress.harmony.pack200.ClassBands.addMaxStack(int,int)",2
"org.apache.commons.compress.harmony.pack200.ClassBands.addMethod(int,String,String,String,String[])",48
org.apache.commons.compress.harmony.pack200.ClassBands.addMethodAttribute(NewAttribute),4
"org.apache.commons.compress.harmony.pack200.ClassBands.addParameterAnnotation(int,String,boolean,List,List,List,List,List,List,List)",4
org.apache.commons.compress.harmony.pack200.ClassBands.addSourceFile(String),4
org.apache.commons.compress.harmony.pack200.ClassBands.createNewAttributeBands(),16
org.apache.commons.compress.harmony.pack200.ClassBands.currentClassReferencesInnerClass(CPClass),5
"org.apache.commons.compress.harmony.pack200.ClassBands.doBciRenumbering(IntList,Map)",16
org.apache.commons.compress.harmony.pack200.ClassBands.endOfClass(),4
org.apache.commons.compress.harmony.pack200.ClassBands.endOfMethod(),16
"org.apache.commons.compress.harmony.pack200.ClassBands.isInnerClassOf(String,CPClass)",3
org.apache.commons.compress.harmony.pack200.ClassBands.pack(OutputStream),36
"org.apache.commons.compress.harmony.pack200.ClassBands.renumberBci(List,IntList,Map)",6
"org.apache.commons.compress.harmony.pack200.ClassBands.renumberDoubleOffsetBci(List,List,List,IntList,Map)",6
"org.apache.commons.compress.harmony.pack200.ClassBands.renumberOffsetBci(List,List,IntList,Map)",6
org.apache.commons.compress.harmony.pack200.ClassBands.writeClassAttributeBands(OutputStream),2
org.joda.time.chrono.CopticChronology.readResolve(),4
org.joda.time.chrono.CopticChronology.withZone(DateTimeZone),4
org.joda.time.chrono.CopticChronology.isLeapDay(long),3
org.joda.time.chrono.CopticChronology.assemble(Fields),2
"org.joda.time.chrono.BasicFixedMonthChronology.setYear(long,int)",3
"org.joda.time.chrono.BasicFixedMonthChronology.getDaysInYearMonth(int,int)",3
org.joda.time.chrono.ISOChronology.getInstance(DateTimeZone),6
org.joda.time.chrono.ISOChronology.withZone(DateTimeZone),4
org.joda.time.chrono.ISOChronology.toString(),2
org.joda.time.chrono.ISOChronology.assemble(Fields),2
org.joda.time.chrono.ISOChronology.equals(Object),3
org.joda.time.chrono.BasicGJChronology.isLeapDay(long),3
"org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)",2
"org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)",2
"org.joda.time.chrono.GJChronology.getInstance(DateTimeZone,ReadableInstant,int)",11
"org.joda.time.chrono.GJChronology.getInstance(DateTimeZone,long,int)",2
org.joda.time.chrono.GJChronology.getZone(),2
org.joda.time.chrono.GJChronology.withZone(DateTimeZone),4
"org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int)",4
"org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)",16
org.joda.time.chrono.GJChronology.equals(Object),6
org.joda.time.chrono.GJChronology.toString(),6
org.joda.time.chrono.GJChronology.assemble(Fields),4
org.joda.time.chrono.StrictChronology.getInstance(Chronology),2
org.joda.time.chrono.StrictChronology.withUTC(),3
org.joda.time.chrono.StrictChronology.withZone(DateTimeZone),6
org.joda.time.chrono.BuddhistChronology.getInstance(DateTimeZone),6
org.joda.time.chrono.BuddhistChronology.readResolve(),2
org.joda.time.chrono.BuddhistChronology.withZone(DateTimeZone),4
org.joda.time.chrono.BuddhistChronology.equals(Object),3
org.joda.time.chrono.BuddhistChronology.toString(),2
org.joda.time.chrono.BuddhistChronology.assemble(Fields),2
"org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,String,Locale)",3
org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(ReadablePartial),3
"org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(ReadablePartial,int[])",10
org.joda.time.Interval.parseWithOffset(String),21
org.joda.time.Interval.overlap(ReadableInterval),2
org.joda.time.Interval.gap(ReadableInterval),3
org.joda.time.Interval.abuts(ReadableInterval),6
org.joda.time.Interval.withChronology(Chronology),2
org.joda.time.Interval.withStartMillis(long),2
org.joda.time.Interval.withEndMillis(long),2
org.joda.time.Interval.withDurationAfterStart(ReadableDuration),2
org.joda.time.Interval.withDurationBeforeEnd(ReadableDuration),2
org.joda.time.Interval.withPeriodAfterStart(ReadablePeriod),2
org.joda.time.Interval.withPeriodBeforeEnd(ReadablePeriod),2
"org.joda.time.DateTimeComparator.getInstance(DateTimeFieldType,DateTimeFieldType)",15
"org.joda.time.DateTimeComparator.compare(Object,Object)",13
org.joda.time.DateTimeComparator.equals(Object),11
org.joda.time.DateTimeComparator.hashCode(),4
org.joda.time.DateTimeComparator.toString(),6
org.joda.time.LocalDateTime.now(DateTimeZone),2
org.joda.time.LocalDateTime.now(Chronology),2
org.joda.time.LocalDateTime.fromCalendarFields(Calendar),3
org.joda.time.LocalDateTime.fromDateFields(Date),3
org.joda.time.LocalDateTime.readResolve(),3
"org.joda.time.LocalDateTime.getField(int,Chronology)",5
org.joda.time.LocalDateTime.getValue(int),5
org.joda.time.LocalDateTime.get(DateTimeFieldType),2
org.joda.time.LocalDateTime.isSupported(DateTimeFieldType),2
org.joda.time.LocalDateTime.isSupported(DurationFieldType),2
org.joda.time.LocalDateTime.equals(Object),5
org.joda.time.LocalDateTime.compareTo(ReadablePartial),6
"org.joda.time.LocalDateTime.correctDstTransition(Date,TimeZone)",7
org.joda.time.LocalDateTime.withLocalMillis(long),2
org.joda.time.LocalDateTime.withFields(ReadablePartial),2
"org.joda.time.LocalDateTime.withField(DateTimeFieldType,int)",2
"org.joda.time.LocalDateTime.withFieldAdded(DurationFieldType,int)",3
"org.joda.time.LocalDateTime.withDurationAdded(ReadableDuration,int)",3
"org.joda.time.LocalDateTime.withPeriodAdded(ReadablePeriod,int)",3
org.joda.time.LocalDateTime.plusYears(int),2
org.joda.time.LocalDateTime.plusMonths(int),2
org.joda.time.LocalDateTime.plusWeeks(int),2
org.joda.time.LocalDateTime.plusDays(int),2
org.joda.time.LocalDateTime.plusHours(int),2
org.joda.time.LocalDateTime.plusMinutes(int),2
org.joda.time.LocalDateTime.plusSeconds(int),2
org.joda.time.LocalDateTime.plusMillis(int),2
org.joda.time.LocalDateTime.minusYears(int),2
org.joda.time.LocalDateTime.minusMonths(int),2
org.joda.time.LocalDateTime.minusWeeks(int),2
org.joda.time.LocalDateTime.minusDays(int),2
org.joda.time.LocalDateTime.minusHours(int),2
org.joda.time.LocalDateTime.minusMinutes(int),2
org.joda.time.LocalDateTime.minusSeconds(int),2
org.joda.time.LocalDateTime.minusMillis(int),2
org.joda.time.LocalDateTime.property(DateTimeFieldType),3
org.joda.time.LocalDateTime.toString(String),2
"org.joda.time.LocalDateTime.toString(String,Locale)",2
org.joda.time.Months.months(int),16
"org.joda.time.Months.monthsBetween(ReadablePartial,ReadablePartial)",3
org.joda.time.Months.monthsIn(ReadableInterval),2
org.joda.time.Months.parseMonths(String),2
org.joda.time.Months.plus(int),2
org.joda.time.Months.plus(Months),2
org.joda.time.Months.minus(Months),2
org.joda.time.Months.dividedBy(int),2
org.joda.time.LocalTime.now(DateTimeZone),2
org.joda.time.LocalTime.now(Chronology),2
org.joda.time.LocalTime.fromCalendarFields(Calendar),2
org.joda.time.LocalTime.fromDateFields(Date),2
org.joda.time.LocalTime.readResolve(),3
"org.joda.time.LocalTime.getField(int,Chronology)",5
org.joda.time.LocalTime.getValue(int),5
org.joda.time.LocalTime.get(DateTimeFieldType),3
org.joda.time.LocalTime.isSupported(DateTimeFieldType),5
org.joda.time.LocalTime.isSupported(DurationFieldType),4
org.joda.time.LocalTime.equals(Object),5
org.joda.time.LocalTime.compareTo(ReadablePartial),6
org.joda.time.LocalTime.withLocalMillis(long),2
org.joda.time.LocalTime.withFields(ReadablePartial),2
"org.joda.time.LocalTime.withField(DateTimeFieldType,int)",3
"org.joda.time.LocalTime.withFieldAdded(DurationFieldType,int)",4
"org.joda.time.LocalTime.withPeriodAdded(ReadablePeriod,int)",3
org.joda.time.LocalTime.plusHours(int),2
org.joda.time.LocalTime.plusMinutes(int),2
org.joda.time.LocalTime.plusSeconds(int),2
org.joda.time.LocalTime.plusMillis(int),2
org.joda.time.LocalTime.minusHours(int),2
org.joda.time.LocalTime.minusMinutes(int),2
org.joda.time.LocalTime.minusSeconds(int),2
org.joda.time.LocalTime.minusMillis(int),2
org.joda.time.LocalTime.property(DateTimeFieldType),3
org.joda.time.LocalTime.toString(String),2
"org.joda.time.LocalTime.toString(String,Locale)",2
org.apache.commons.compress.archivers.zip.ZipShort.equals(Object),3
"org.apache.commons.compress.archivers.zip.NioZipEncoding.encodeFully(CharsetEncoder,CharBuffer,ByteBuffer)",3
org.apache.commons.compress.archivers.zip.NioZipEncoding.newDecoder(),2
org.apache.commons.compress.archivers.zip.NioZipEncoding.newEncoder(),2
org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.closeAll(),2
"org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.createCallable(ZipArchiveEntry,InputStreamSupplier)",2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.toDirectoryEntryName(String),2
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.toEntryName(File,String)",2
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.toEntryName(Path,String,LinkOption[])",2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.addAsFirstExtraField(ZipExtraField),9
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.addInfoZipExtendedTimestamp(FileTime,FileTime,FileTime)",8
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.addNTFSTimestamp(FileTime,FileTime,FileTime)",8
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.equals(Object),72
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getAllExtraFields(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getAllExtraFieldsNoCopy(),3
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getExtraField(ZipShort),5
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getExtraFields(boolean),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getExtraFields(ExtraFieldParsingBehavior),11
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getLocalFileDataExtra(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getName(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getParseableExtraFields(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getParseableExtraFieldsNoCopy(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getRawName(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getTime(),3
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getUnixMode(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getUnparseableOnly(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.internalAddExtraField(ZipExtraField),4
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.internalRemoveExtraField(ZipShort),7
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.isUnixSymlink(),2
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.mergeExtraFields(ZipExtraField[],boolean)",60
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.parseExtraFields(byte[],boolean,ExtraFieldParsingBehavior)",2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.removeExtraField(ZipShort),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.removeUnparseableExtraFieldData(),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.requiresExtraTimeFields(),3
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setAlignment(int),3
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setAttributes(Path,LinkOption[])",2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setCentralDirectoryExtra(byte[]),4
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setExtra(byte[]),4
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setExtraFields(ZipExtraField[]),4
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setExtraTimeFields(),12
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setMethod(int),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setName(String),4
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setSize(long),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setTime(long),2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setUnixMode(int),4
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.updateTimeFromExtendedTimestampField(),28
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.updateTimeFromNtfsField(),9
org.apache.commons.compress.archivers.zip.DefaultBackingStoreSupplier.get(),2
org.apache.commons.compress.archivers.zip.ZipMethod.isZstd(int),3
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.matches(byte[],int)",6
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.bufferContainsSignature(ByteArrayOutputStream,int,int,int)",94
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.cacheBytesRead(ByteArrayOutputStream,int,int,int)",2
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.canReadEntryData(ArchiveEntry),5
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.close(),4
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.closeEntry(),30
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.drainCurrentEntryData(),4
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.fill(),3
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.findEocdRecord(),81
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getBytesInflated(),3
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getCompressedCount(),7
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.isApkSigningBlock(byte[]),44
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.isFirstByteOfEocdSig(int),2
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.processZip64Extra(ZipLong,ZipLong)",85
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.read(byte[],int,int)",26
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readDataDescriptor(),18
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readDeflated(byte[],int,int)",5
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFromInflater(byte[],int,int)",46
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFully(byte[],int)",2
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readRange(int),2
"org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readStored(byte[],int,int)",8
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readStoredEntry(),32
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.realSkip(long),10
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.skip(long),10
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.skipRemainderOfArchive(),6
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.supportsCompressedSizeFor(ZipArchiveEntry),13
org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.supportsDataDescriptorFor(ZipArchiveEntry),12
org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.addArchiveEntry(ZipArchiveEntryRequest),11
org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.close(),6
org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.zipEntryWriter(),2
org.apache.commons.compress.archivers.zip.ZipEightByteInteger.toUnsignedBigInteger(long),2
org.apache.commons.compress.archivers.zip.ZipEightByteInteger.equals(Object),3
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.getCentralDirectoryData(),2
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.getCentralDirectoryLength(),2
org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.getLocalFileDataLength(),2
"org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.parseFromCentralDirectoryData(byte[],int,int)",2
org.apache.commons.compress.archivers.zip.StreamCompressor.deflate(),2
"org.apache.commons.compress.archivers.zip.StreamCompressor.deflate(InputStream,int)",4
org.apache.commons.compress.archivers.zip.StreamCompressor.deflateUntilInputIsNeeded(),2
org.apache.commons.compress.archivers.zip.StreamCompressor.flushDeflater(),2
"org.apache.commons.compress.archivers.zip.StreamCompressor.write(byte[],int,int,int)",2
"org.apache.commons.compress.archivers.zip.StreamCompressor.writeDeflated(byte[],int,int)",7
org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel.buildFromLastSplitSegment(Path),71
org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel.forFiles(File[]),2
org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel.forOrderedSeekableByteChannels(SeekableByteChannel[]),2
"org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel.forPaths(List,OpenOption[])",4
org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel.assertSplitSignature(List),2
"org.apache.commons.compress.archivers.examples.Expander.expand(InputStream,File,CloseableConsumer)",11
"org.apache.commons.compress.archivers.examples.Expander.expand(Path,Path)",5
"org.apache.commons.compress.archivers.examples.Expander.expand(String,InputStream,Path,CloseableConsumer)",11
"org.apache.commons.compress.archivers.examples.Expander.expand(String,Path,Path)",17
"org.apache.commons.compress.archivers.examples.Expander.expand(String,SeekableByteChannel,Path,CloseableConsumer)",94
org.apache.commons.compress.archivers.examples.CloseableConsumerAdapter.close(),2
"org.apache.commons.compress.archivers.examples.Archiver.create(String,OutputStream,File,CloseableConsumer)",11
"org.apache.commons.compress.archivers.examples.Archiver.create(String,Path,Path)",20
"org.apache.commons.compress.archivers.examples.Archiver.create(String,SeekableByteChannel,File,CloseableConsumer)",69
"org.apache.commons.compress.archivers.examples.Archiver.create(String,SeekableByteChannel,Path)",15
org.apache.commons.compress.archivers.ar.ArArchiveEntry.equals(Object),4
"org.apache.commons.lang3.ClassUtils.getAbbreviatedName(Class,int)",2
"org.apache.commons.lang3.ClassUtils.getAbbreviatedName(String,int)",28
org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class),2
"org.apache.commons.lang3.ClassUtils.getAllInterfaces(Class,HashSet)",4
org.apache.commons.lang3.ClassUtils.getCanonicalName(String),19
"org.apache.commons.lang3.ClassUtils.getClass(String,boolean)",2
org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(Class),2
"org.apache.commons.lang3.ClassUtils.getPackageCanonicalName(Object,String)",2
org.apache.commons.lang3.ClassUtils.getPackageName(Class),2
"org.apache.commons.lang3.ClassUtils.getPackageName(Object,String)",2
org.apache.commons.lang3.ClassUtils.getPackageName(String),13
"org.apache.commons.lang3.ClassUtils.getPublicMethod(Class,String,Class[])",9
org.apache.commons.lang3.ClassUtils.getShortCanonicalName(Class),2
"org.apache.commons.lang3.ClassUtils.getShortCanonicalName(Object,String)",2
org.apache.commons.lang3.ClassUtils.getShortClassName(Class),2
"org.apache.commons.lang3.ClassUtils.getShortClassName(Object,String)",2
org.apache.commons.lang3.ClassUtils.getShortClassName(String),53
"org.apache.commons.lang3.ClassUtils.isAssignable(Class[],Class[],boolean)",5
org.apache.commons.lang3.ClassUtils.isPrimitiveOrWrapper(Class),4
org.apache.commons.lang3.ClassUtils.primitiveToWrapper(Class),3
org.apache.commons.lang3.ClassUtils.toCanonicalName(String),5
org.apache.commons.lang3.ClassUtils.toClass(Object[]),3
"org.apache.commons.lang3.ArrayUtils.add(Object,int,Object,Class)",6
"org.apache.commons.lang3.ArrayUtils.add(Object[],int,Object)",3
"org.apache.commons.lang3.ArrayUtils.add(Object[],Object)",3
"org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])",3
"org.apache.commons.lang3.ArrayUtils.addAll(Object[],Object[])",9
"org.apache.commons.lang3.ArrayUtils.addFirst(boolean[],boolean)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(byte[],byte)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(char[],char)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(double[],double)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(float[],float)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(int[],int)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(long[],long)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(short[],short)",2
"org.apache.commons.lang3.ArrayUtils.addFirst(Object[],Object)",2
"org.apache.commons.lang3.ArrayUtils.contains(boolean[],boolean)",2
"org.apache.commons.lang3.ArrayUtils.contains(byte[],byte)",2
"org.apache.commons.lang3.ArrayUtils.contains(char[],char)",2
"org.apache.commons.lang3.ArrayUtils.contains(double[],double)",2
"org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)",2
"org.apache.commons.lang3.ArrayUtils.contains(float[],float)",2
"org.apache.commons.lang3.ArrayUtils.contains(int[],int)",2
"org.apache.commons.lang3.ArrayUtils.contains(long[],long)",2
"org.apache.commons.lang3.ArrayUtils.contains(Object[],Object)",2
"org.apache.commons.lang3.ArrayUtils.contains(short[],short)",2
"org.apache.commons.lang3.ArrayUtils.get(Object[],int,Object)",2
"org.apache.commons.lang3.ArrayUtils.indexesOf(boolean[],boolean,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(byte[],byte,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(char[],char,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(double[],double,int,double)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(float[],float,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(int[],int,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(long[],long,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(Object[],Object,int)",5
"org.apache.commons.lang3.ArrayUtils.indexesOf(short[],short,int)",5
"org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)",5
"org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)",5
"org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)",5
"org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)",10
"org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)",7
"org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)",10
"org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)",5
"org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)",5
"org.apache.commons.lang3.ArrayUtils.indexOf(Object[],Object,int)",9
"org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)",5
"org.apache.commons.lang3.ArrayUtils.insert(int,boolean[],boolean[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,byte[],byte[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,char[],char[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,double[],double[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,float[],float[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,int[],int[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,long[],long[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,short[],short[])",8
"org.apache.commons.lang3.ArrayUtils.insert(int,Object[],Object[])",8
org.apache.commons.lang3.ArrayUtils.isArrayEmpty(Object),2
"org.apache.commons.lang3.ArrayUtils.isArrayIndexValid(Object[],int)",3
org.apache.commons.lang3.ArrayUtils.isNotEmpty(boolean[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(byte[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(char[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(double[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(float[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(int[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(long[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(short[]),2
org.apache.commons.lang3.ArrayUtils.isNotEmpty(Object[]),2
"org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(Object,Object)",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(Object[],Object[])",2
"org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[])",2
org.apache.commons.lang3.ArrayUtils.isSorted(boolean[]),5
org.apache.commons.lang3.ArrayUtils.isSorted(byte[]),5
org.apache.commons.lang3.ArrayUtils.isSorted(char[]),5
org.apache.commons.lang3.ArrayUtils.isSorted(double[]),5
org.apache.commons.lang3.ArrayUtils.isSorted(float[]),5
org.apache.commons.lang3.ArrayUtils.isSorted(int[]),5
org.apache.commons.lang3.ArrayUtils.isSorted(long[]),5
org.apache.commons.lang3.ArrayUtils.isSorted(short[]),5
"org.apache.commons.lang3.ArrayUtils.isSorted(Object[],Comparator)",5
"org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)",10
"org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)",10
"org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)",14
"org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)",10
"org.apache.commons.lang3.ArrayUtils.map(Object[],Class,FailableFunction)",2
"org.apache.commons.lang3.ArrayUtils.nullTo(Object[],Object[])",2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(boolean[]),2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(byte[]),2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(char[]),2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(double[]),2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(float[]),2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(int[]),2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(long[]),2
org.apache.commons.lang3.ArrayUtils.nullToEmpty(short[]),2
"org.apache.commons.lang3.ArrayUtils.remove(Object,int)",4
"org.apache.commons.lang3.ArrayUtils.removeAll(Object,BitSet)",7
"org.apache.commons.lang3.ArrayUtils.removeAll(Object,int[])",39
"org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)",2
"org.apache.commons.lang3.ArrayUtils.removeElement(Object[],Object)",2
"org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])",14
"org.apache.commons.lang3.ArrayUtils.removeElements(Object[],Object[])",14
org.apache.commons.lang3.ArrayUtils.reverse(boolean[]),2
org.apache.commons.lang3.ArrayUtils.reverse(byte[]),2
org.apache.commons.lang3.ArrayUtils.reverse(char[]),2
org.apache.commons.lang3.ArrayUtils.reverse(double[]),2
org.apache.commons.lang3.ArrayUtils.reverse(float[]),2
org.apache.commons.lang3.ArrayUtils.reverse(int[]),2
org.apache.commons.lang3.ArrayUtils.reverse(long[]),2
org.apache.commons.lang3.ArrayUtils.reverse(Object[]),2
org.apache.commons.lang3.ArrayUtils.reverse(short[]),2
"org.apache.commons.lang3.ArrayUtils.shift(boolean[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(byte[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(char[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(double[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(float[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(int[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(long[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(Object[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(Object[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shift(short[],int)",2
"org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)",22
"org.apache.commons.lang3.ArrayUtils.shuffle(boolean[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(byte[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(char[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(double[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(float[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(int[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(long[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(Object[],Random)",2
"org.apache.commons.lang3.ArrayUtils.shuffle(short[],Random)",2
"org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.subarray(Object[],int,int)",3
"org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(Object[],int,int,int)",5
"org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)",6
org.apache.commons.lang3.ArrayUtils.toObject(boolean[]),3
org.apache.commons.lang3.ArrayUtils.toObject(byte[]),3
org.apache.commons.lang3.ArrayUtils.toObject(char[]),3
org.apache.commons.lang3.ArrayUtils.toObject(double[]),3
org.apache.commons.lang3.ArrayUtils.toObject(float[]),3
org.apache.commons.lang3.ArrayUtils.toObject(int[]),3
org.apache.commons.lang3.ArrayUtils.toObject(long[]),3
org.apache.commons.lang3.ArrayUtils.toObject(short[]),3
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Boolean[],boolean)",5
org.apache.commons.lang3.ArrayUtils.toPrimitive(Byte[]),4
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Byte[],byte)",5
org.apache.commons.lang3.ArrayUtils.toPrimitive(Character[]),4
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Character[],char)",5
org.apache.commons.lang3.ArrayUtils.toPrimitive(Double[]),4
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Double[],double)",5
org.apache.commons.lang3.ArrayUtils.toPrimitive(Float[]),4
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Float[],float)",5
org.apache.commons.lang3.ArrayUtils.toPrimitive(Integer[]),4
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Integer[],int)",5
org.apache.commons.lang3.ArrayUtils.toPrimitive(Long[]),4
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Long[],long)",5
org.apache.commons.lang3.ArrayUtils.toPrimitive(Object),10
org.apache.commons.lang3.ArrayUtils.toPrimitive(Short[]),4
"org.apache.commons.lang3.ArrayUtils.toPrimitive(Short[],short)",5
"org.apache.commons.lang3.ArrayUtils.toString(Object,String)",2
"org.apache.commons.lang3.ArrayUtils.toStringArray(Object[],String)",3
org.apache.commons.lang3.reflect.TypeUtils.anyToString(Object),2
"org.apache.commons.lang3.reflect.TypeUtils.appendRecursiveTypes(StringBuilder,int[],Type[])",4
org.apache.commons.lang3.reflect.TypeUtils.classToString(Class),6
org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(Type),12
"org.apache.commons.lang3.reflect.TypeUtils.determineTypeArguments(Class,ParameterizedType)",4
"org.apache.commons.lang3.reflect.TypeUtils.equals(GenericArrayType,Type)",3
"org.apache.commons.lang3.reflect.TypeUtils.equals(ParameterizedType,Type)",4
"org.apache.commons.lang3.reflect.TypeUtils.equals(Type,Type)",5
"org.apache.commons.lang3.reflect.TypeUtils.equals(Type[],Type[])",5
"org.apache.commons.lang3.reflect.TypeUtils.equals(WildcardType,Type)",4
"org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(Map,TypeVariable[])",2
org.apache.commons.lang3.reflect.TypeUtils.findRecursiveTypes(ParameterizedType),4
"org.apache.commons.lang3.reflect.TypeUtils.getClosestParentType(Class,Class)",22
org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(TypeVariable),2
org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(WildcardType),2
"org.apache.commons.lang3.reflect.TypeUtils.getRawType(Type,Type)",11
"org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Class,Class,Map)",10
"org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(ParameterizedType,Class,Map)",13
"org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(Type,Class,Map)",13
"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Class)",17
"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,GenericArrayType,Map)",17
"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,ParameterizedType,Map)",56
"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,Type,Map)",7
"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,TypeVariable,Map)",20
"org.apache.commons.lang3.reflect.TypeUtils.isAssignable(Type,WildcardType,Map)",38
"org.apache.commons.lang3.reflect.TypeUtils.isInstance(Object,Type)",5
"org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(Class,ParameterizedType,Map)",8
org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(Type[]),14
org.apache.commons.lang3.reflect.TypeUtils.parameterizedTypeToString(ParameterizedType),6
"org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(Type,Class,Type[])",8
org.apache.commons.lang3.reflect.TypeUtils.toLongString(TypeVariable),4
org.apache.commons.lang3.reflect.TypeUtils.toString(Type),6
org.apache.commons.lang3.reflect.TypeUtils.typesSatisfyVariables(Map),7
org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(TypeVariable),18
"org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(Map,Type[])",3
"org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(Map,Type)",20
org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(WildcardType),10
"org.apache.commons.lang3.reflect.InheritanceUtils.distance(Class,Class)",6
"org.apache.commons.lang3.reflect.MethodUtils.distance(Class[],Class[])",7
org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(Method),4
"org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(Class,String,Class[])",16
"org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(Class,String,Class[])",4
org.apache.commons.lang3.reflect.MethodUtils.getAllSuperclassesAndInterfaces(Class),10
"org.apache.commons.lang3.reflect.MethodUtils.getAnnotation(Method,Class,boolean,boolean)",35
"org.apache.commons.lang3.reflect.MethodUtils.getMatchingMethod(Class,String,Class[])",10
"org.apache.commons.lang3.reflect.MethodUtils.getMethodsListWithAnnotation(Class,Class,boolean,boolean)",2
"org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(Method,Interfaces)",7
"org.apache.commons.lang3.reflect.MethodUtils.getVarArgs(Object[],Class[])",6
"org.apache.commons.lang3.reflect.MethodUtils.invokeExactMethod(Object,String,Object[],Class[])",2
"org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(Class,String,Object[],Class[])",2
"org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(Object,boolean,String,Object[],Class[])",8
"org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(Class,String,Object[],Class[])",2
"org.apache.commons.lang3.reflect.MethodUtils.toVarArgs(Method,Object[])",2
org.joda.time.DateTime.minusMonths(int),2
org.joda.time.DateTime.minusWeeks(int),2
org.joda.time.DateTime.minusDays(int),2
org.joda.time.DateTime.minusHours(int),2
org.joda.time.DateTime.minusMinutes(int),2
org.joda.time.DateTime.minusSeconds(int),2
org.joda.time.DateTime.minusMillis(int),2
org.joda.time.DateTime.property(DateTimeFieldType),3
org.joda.time.Years.years(int),7
"org.joda.time.Years.yearsBetween(ReadablePartial,ReadablePartial)",3
org.joda.time.Years.yearsIn(ReadableInterval),2
org.joda.time.Years.parseYears(String),2
org.joda.time.Years.plus(int),2
org.joda.time.Years.plus(Years),2
org.joda.time.Years.minus(Years),2
org.joda.time.Years.dividedBy(int),2
org.joda.time.tz.ZoneInfoCompiler.main(String[]),45
org.joda.time.tz.ZoneInfoCompiler.getStartOfYear(),2
org.joda.time.tz.ZoneInfoCompiler.getLenientISOChronology(),2
"org.joda.time.tz.ZoneInfoCompiler.writeZoneInfoMap(DataOutputStream,Map)",36
"org.joda.time.tz.ZoneInfoCompiler.parseYear(String,int)",4
org.joda.time.tz.ZoneInfoCompiler.parseMonth(String),2
org.joda.time.tz.ZoneInfoCompiler.parseDayOfWeek(String),2
org.joda.time.tz.ZoneInfoCompiler.parseTime(String),7
org.joda.time.tz.CachedDateTimeZone.forZone(DateTimeZone),2
org.joda.time.tz.CachedDateTimeZone.equals(Object),3
org.joda.time.tz.CachedDateTimeZone.getInfo(long),3
org.joda.time.tz.CachedDateTimeZone.createInfo(long),4
org.joda.time.tz.ZoneInfoProvider.getZone(String),6
"org.joda.time.tz.DefaultNameProvider.getShortName(Locale,String,String)",2
"org.joda.time.tz.DefaultNameProvider.getName(Locale,String,String)",2
"org.joda.time.tz.DefaultNameProvider.getShortName(Locale,String,String,boolean)",2
"org.joda.time.tz.DefaultNameProvider.getName(Locale,String,String,boolean)",2
"org.joda.time.tz.DateTimeZoneBuilder.readFrom(InputStream,String)",2
"org.joda.time.tz.DateTimeZoneBuilder.readFrom(DataInput,String)",5
"org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(String,String,int,int)",5
"org.joda.time.tz.DateTimeZoneBuilder.addCutover(int,char,int,int,int,boolean,int)",2
"org.joda.time.tz.DateTimeZoneBuilder.addRecurringSavings(String,int,int,int,char,int,int,int,boolean,int)",2
org.joda.time.tz.DateTimeZoneBuilder.getLastRuleSet(),2
"org.joda.time.tz.DateTimeZoneBuilder.addTransition(ArrayList,Transition)",6
"org.joda.time.tz.DateTimeZoneBuilder.writeTo(String,OutputStream)",2
"org.joda.time.tz.DateTimeZoneBuilder.writeTo(String,DataOutput)",3
org.joda.time.tz.UTCProvider.getZone(String),2
org.joda.time.tz.FixedDateTimeZone.toTimeZone(),4
org.joda.time.tz.FixedDateTimeZone.equals(Object),6
org.joda.time.LocalDate.now(DateTimeZone),2
org.joda.time.LocalDate.now(Chronology),2
org.joda.time.LocalDate.fromCalendarFields(Calendar),3
org.joda.time.LocalDate.fromDateFields(Date),3
org.joda.time.LocalDate.readResolve(),3
"org.joda.time.LocalDate.getField(int,Chronology)",4
org.joda.time.LocalDate.getValue(int),4
org.joda.time.LocalDate.get(DateTimeFieldType),3
org.joda.time.LocalDate.isSupported(DateTimeFieldType),4
org.joda.time.LocalDate.isSupported(DurationFieldType),4
org.joda.time.LocalDate.equals(Object),5
org.joda.time.LocalDate.hashCode(),2
org.joda.time.LocalDate.compareTo(ReadablePartial),6
org.joda.time.LocalDate.toLocalDateTime(LocalTime),3
"org.joda.time.LocalDate.toDateTime(LocalTime,DateTimeZone)",3
org.joda.time.LocalDate.toDate(),7
org.joda.time.LocalDate.withLocalMillis(long),2
org.joda.time.LocalDate.withFields(ReadablePartial),2
"org.joda.time.LocalDate.withField(DateTimeFieldType,int)",3
"org.joda.time.LocalDate.withFieldAdded(DurationFieldType,int)",4
"org.joda.time.LocalDate.withPeriodAdded(ReadablePeriod,int)",5
org.joda.time.LocalDate.plusYears(int),2
org.joda.time.LocalDate.plusMonths(int),2
org.joda.time.LocalDate.plusWeeks(int),2
org.joda.time.LocalDate.plusDays(int),2
org.joda.time.LocalDate.minusYears(int),2
org.joda.time.LocalDate.minusMonths(int),2
org.joda.time.LocalDate.minusWeeks(int),2
org.joda.time.LocalDate.minusDays(int),2
org.joda.time.LocalDate.property(DateTimeFieldType),3
org.joda.time.LocalDate.toString(String),2
"org.joda.time.LocalDate.toString(String,Locale)",2
"org.joda.time.IllegalInstantException.createMessage(long,String)",2
org.joda.time.IllegalInstantException.isIllegalInstant(Throwable),4
"org.joda.time.Period.fieldDifference(ReadablePartial,ReadablePartial)",12
org.joda.time.Period.withPeriodType(PeriodType),2
org.joda.time.Period.withFields(ReadablePeriod),2
"org.joda.time.Period.withField(DurationFieldType,int)",2
"org.joda.time.Period.withFieldAdded(DurationFieldType,int)",3
org.joda.time.Period.plus(ReadablePeriod),2
org.joda.time.Period.plusYears(int),2
org.joda.time.Period.plusMonths(int),2
org.joda.time.Period.plusWeeks(int),2
org.joda.time.Period.plusDays(int),2
org.joda.time.Period.plusHours(int),2
org.joda.time.Period.plusMinutes(int),2
org.joda.time.Period.plusSeconds(int),2
org.joda.time.Period.plusMillis(int),2
org.joda.time.Period.minus(ReadablePeriod),2
org.joda.time.Period.multipliedBy(int),4
org.joda.time.Period.checkYearsAndMonths(String),3
org.joda.time.Period.normalizedStandard(PeriodType),17
org.joda.time.base.AbstractInstant.get(DateTimeFieldType),2
org.joda.time.base.AbstractInstant.isSupported(DateTimeFieldType),2
org.joda.time.base.AbstractInstant.get(DateTimeField),2
org.joda.time.base.AbstractInstant.equals(Object),5
org.joda.time.base.AbstractInstant.compareTo(ReadableInstant),4
org.joda.time.base.AbstractInstant.toString(DateTimeFormatter),2
org.joda.time.base.AbstractPartial.getFieldTypes(),2
org.joda.time.base.AbstractPartial.getFields(),2
org.joda.time.base.AbstractPartial.isSupported(DateTimeFieldType),2
org.joda.time.base.AbstractPartial.indexOf(DateTimeFieldType),4
org.joda.time.base.AbstractPartial.indexOfSupported(DateTimeFieldType),2
org.joda.time.base.AbstractPartial.indexOf(DurationFieldType),4
org.joda.time.base.AbstractPartial.indexOfSupported(DurationFieldType),2
org.joda.time.base.AbstractPartial.equals(Object),9
org.joda.time.base.AbstractPartial.hashCode(),2
org.joda.time.base.AbstractPartial.compareTo(ReadablePartial),16
org.joda.time.base.AbstractPartial.isAfter(ReadablePartial),3
org.joda.time.base.AbstractPartial.isBefore(ReadablePartial),3
org.joda.time.base.AbstractPartial.isEqual(ReadablePartial),3
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.setIndex(int),2
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.getImmediateNode(),3
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.setValue(Object),4
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.remove(),2
"org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.compareChildNodePointers(NodePointer,NodePointer)",2
"org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory.createNodePointer(QName,Object,Locale)",2
"org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory.createNodePointer(NodePointer,QName,Object)",2
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.setPropertyIndex(int),2
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getBean(),2
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.isActual(),2
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getImmediateNode(),3
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.isCollection(),3
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.isLeaf(),3
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getLength(),2
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createPath(JXPathContext),5
"org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createPath(JXPathContext,Object)",3
"org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createChild(JXPathContext,QName,int,Object)",2
"org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createChild(JXPathContext,QName,int)",2
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.equals(Object),24
"org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory.createNodePointer(NodePointer,QName,Object)",2
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.getNamespaceURI(),2
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.testNode(NodeTest),4
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.asPath(),4
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.equals(Object),3
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.testNode(Node,NodeTest)",33
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getName(),3
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getNamespaceResolver(),2
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getDefaultNamespaceURI(),52
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.isLeaf(),2
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.isLanguage(String),2
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.setValue(Object),22
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.createChild(JXPathContext,QName,int)",14
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.createAttribute(JXPathContext,QName)",7
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.remove(),2
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.asPath(),29
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionByQName(),4
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.matchesQName(Node),4
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionOfElement(),3
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionOfTextNode(),4
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionOfPI(),4
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.equals(Object),4
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getNamespaceURI(Node),52
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getValue(),3
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.stringValue(Node),23
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getPointerByID(JXPathContext,String)",4
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.compareChildNodePointers(NodePointer,NodePointer)",76
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getNamespaceURI(),2
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getValue(),4
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.testNode(NodeTest),4
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.asPath(),4
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.equals(Object),4
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.getNodePointer(),4
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.previous(),32
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.next(),48
org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.testAttr(Attr),39
"org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.getAttribute(Element,QName)",12
org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.getNodePointer(),5
org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.setPosition(int),3
"org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory.createNodePointer(QName,Object,Locale)",2
"org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory.createNodePointer(NodePointer,QName,Object)",2
"org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.collectNamespaces(List,Node)",36
org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.getNodePointer(),13
org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.setPosition(int),3
"org.apache.commons.jxpath.ri.model.VariablePointerFactory.createNodePointer(QName,Object,Locale)",5
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.getNamespaceURI(),3
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.asPath(),4
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.equals(Object),4
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getNamespaceResolver(),2
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getNamespaceURI(String),13
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.compareChildNodePointers(NodePointer,NodePointer)",84
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.isLeaf(),3
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getName(),5
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getValue(),30
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.setValue(Object),12
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.addContent(List),7
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.testNode(NodePointer,Object,NodeTest)",31
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.isLanguage(String),2
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.findEnclosingAttribute(Object,String,Namespace)",8
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.createChild(JXPathContext,QName,int)",14
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.createAttribute(JXPathContext,QName)",6
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.remove(),2
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.asPath(),29
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionByQName(),18
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.matchesQName(Element),4
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionOfElement(),19
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionOfTextNode(),34
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionOfPI(),26
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.equals(Object),4
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator.getNodePointer(),5
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator.setPosition(int),4
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.getNamespaceURI(),2
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.asPath(),4
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.equals(Object),4
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.collectNamespaces(Element),24
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.getNodePointer(),5
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.setPosition(int),4
"org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory.createNodePointer(QName,Object,Locale)",3
"org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory.createNodePointer(NodePointer,QName,Object)",3
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.getNodePointer(),3
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.next(),24
org.apache.commons.jxpath.ri.QName.equals(Object),3
org.apache.commons.jxpath.ri.InfoSetUtil.stringValue(Object),10
org.apache.commons.jxpath.ri.InfoSetUtil.number(Object),10
org.apache.commons.jxpath.ri.InfoSetUtil.doubleValue(Object),11
org.apache.commons.jxpath.ri.InfoSetUtil.booleanValue(Object),14
"org.apache.commons.jxpath.ri.NamespaceResolver.getPrefix(NodePointer,String)",16
"org.apache.commons.jxpath.ri.NamespaceResolver.registerNamespace(String,String)",2
org.apache.commons.jxpath.ri.NamespaceResolver.getNamespaceContextPointer(),3
org.apache.commons.jxpath.ri.NamespaceResolver.getNamespaceURI(String),3
org.apache.commons.jxpath.ri.NamespaceResolver.getExternallyRegisteredNamespaceURI(String),3
org.apache.commons.jxpath.ri.NamespaceResolver.getPrefix(String),3
org.apache.commons.jxpath.ri.NamespaceResolver.getExternallyRegisteredPrefix(String),3
org.apache.commons.jxpath.ri.NamespaceResolver.seal(),2
org.apache.commons.jxpath.ri.NamespaceResolver.clone(),5
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.computeValue(EvalContext),4
org.apache.commons.jxpath.ri.compiler.ExpressionPath.computeContextDependent(),6
org.apache.commons.jxpath.ri.compiler.ExpressionPath.isSimpleExpressionPath(),4
org.apache.commons.jxpath.ri.compiler.ExpressionPath.toString(),36
org.apache.commons.jxpath.ri.compiler.LocationPath.computeContextDependent(),3
org.apache.commons.jxpath.ri.compiler.LocationPath.toString(),5
org.apache.commons.jxpath.ri.compiler.LocationPath.compute(EvalContext),2
org.apache.commons.jxpath.ri.compiler.LocationPath.computeValue(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.computeValue(EvalContext),4
org.apache.commons.jxpath.ri.compiler.Operation.computeContextDependent(),5
org.apache.commons.jxpath.ri.compiler.Constant.toString(),2
org.apache.commons.jxpath.ri.compiler.Expression.isContextDependent(),2
org.apache.commons.jxpath.ri.compiler.Expression.iterate(EvalContext),3
org.apache.commons.jxpath.ri.compiler.Expression.iteratePointers(EvalContext),4
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.equal(Object,Object)",2
org.apache.commons.jxpath.ri.compiler.TreeCompiler.isNameAttributeTest(Expression),6
org.apache.commons.jxpath.ri.compiler.Step.isContextDependent(),5
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.computeValue(EvalContext),3
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.computeValue(EvalContext),2
"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.contains(Iterator,Object)",4
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.computeValue(EvalContext),2
"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.compute(Object,Object)",60
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.reduce(Object),4
"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.containsMatch(Iterator,Object)",4
"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.containsMatch(Object,Iterator)",4
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.toString(),4
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.computeValue(EvalContext),9
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.convert(Object),2
org.apache.commons.jxpath.ri.compiler.CoreOperation.toString(),6
"org.apache.commons.jxpath.ri.compiler.CoreOperation.parenthesize(Expression,boolean)",6
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.computeValue(EvalContext),2
org.apache.commons.jxpath.ri.compiler.Path.computeContextDependent(),5
org.apache.commons.jxpath.ri.compiler.Path.isSimplePath(),5
org.apache.commons.jxpath.ri.compiler.Path.isSimpleStep(Step),10
org.apache.commons.jxpath.ri.compiler.Path.areBasicPredicates(Expression[]),14
org.apache.commons.jxpath.ri.compiler.Path.getSingleNodePointerForSteps(EvalContext),3
"org.apache.commons.jxpath.ri.compiler.Path.buildContextChain(EvalContext,int,boolean)",12
"org.apache.commons.jxpath.ri.compiler.Path.createContextForStep(EvalContext,int,NodeTest)",42
org.apache.commons.jxpath.ri.compiler.CoreFunction.getFunctionName(),31
org.apache.commons.jxpath.ri.compiler.CoreFunction.computeContextDependent(),9
org.apache.commons.jxpath.ri.compiler.CoreFunction.toString(),4
org.apache.commons.jxpath.ri.compiler.CoreFunction.computeValue(EvalContext),32
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLast(EvalContext),4
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionCount(EvalContext),10
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLang(EvalContext),3
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionKey(EvalContext),9
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNamespaceURI(EvalContext),6
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLocalName(EvalContext),4
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionName(EvalContext),4
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionString(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionConcat(EvalContext),4
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionStartsWith(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionEndsWith(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstringBefore(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstringAfter(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstring(EvalContext),10
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionStringLength(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNormalizeSpace(EvalContext),8
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionTranslate(EvalContext),4
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionBoolean(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNot(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNumber(EvalContext),2
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSum(EvalContext),4
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFloor(EvalContext),3
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionCeiling(EvalContext),3
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionRound(EvalContext),3
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFormatNumber(EvalContext),3
"org.apache.commons.jxpath.ri.compiler.CoreFunction.assertArgRange(int,int)",3
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createNodeFactoryArray(),2
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(String,Expression)",13
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(String,Expression,Class)",4
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getPointer(String,Expression)",8
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setValue(String,Expression,Object)",2
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPath(String,Expression)",26
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(String,Expression,Object)",2
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setValue(String,Expression,Object,boolean)",6
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.checkSimplePath(Expression),3
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.removePath(String,Expression)",6
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.removeAll(String,Expression)",65
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getRelativeContext(Pointer),2
"org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,Writer)",9
"org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,Writer)",6
"org.apache.commons.lang3.text.translate.CodePointTranslator.translate(CharSequence,int,Writer)",2
org.apache.commons.lang3.text.StrBuilder.append(boolean),2
org.apache.commons.lang3.text.StrBuilder.append(char[]),3
"org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)",7
org.apache.commons.lang3.text.StrBuilder.append(CharBuffer),3
"org.apache.commons.lang3.text.StrBuilder.append(CharBuffer,int,int)",7
org.apache.commons.lang3.text.StrBuilder.append(CharSequence),6
"org.apache.commons.lang3.text.StrBuilder.append(CharSequence,int,int)",2
org.apache.commons.lang3.text.StrBuilder.append(Object),3
org.apache.commons.lang3.text.StrBuilder.append(StrBuilder),3
"org.apache.commons.lang3.text.StrBuilder.append(StrBuilder,int,int)",7
org.apache.commons.lang3.text.StrBuilder.append(String),3
"org.apache.commons.lang3.text.StrBuilder.append(String,int,int)",7
org.apache.commons.lang3.text.StrBuilder.append(StringBuffer),3
"org.apache.commons.lang3.text.StrBuilder.append(StringBuffer,int,int)",7
org.apache.commons.lang3.text.StrBuilder.append(StringBuilder),3
"org.apache.commons.lang3.text.StrBuilder.append(StringBuilder,int,int)",7
org.apache.commons.lang3.text.StrBuilder.appendAll(Iterable),2
org.apache.commons.lang3.text.StrBuilder.appendAll(Iterator),2
org.apache.commons.lang3.text.StrBuilder.appendAll(Object[]),3
"org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(Object,int,char)",5
"org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(Object,int,char)",5
org.apache.commons.lang3.text.StrBuilder.appendNewLine(),2
org.apache.commons.lang3.text.StrBuilder.appendNull(),2
"org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)",3
org.apache.commons.lang3.text.StrBuilder.appendSeparator(char),2
"org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,char)",2
"org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,int)",2
"org.apache.commons.lang3.text.StrBuilder.appendSeparator(String,int)",3
"org.apache.commons.lang3.text.StrBuilder.appendSeparator(String,String)",4
org.apache.commons.lang3.text.StrBuilder.appendTo(Appendable),5
"org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(Object[],String)",4
org.apache.commons.lang3.text.StrBuilder.charAt(int),3
org.apache.commons.lang3.text.StrBuilder.contains(char),4
org.apache.commons.lang3.text.StrBuilder.contains(String),2
org.apache.commons.lang3.text.StrBuilder.contains(StrMatcher),2
"org.apache.commons.lang3.text.StrBuilder.delete(int,int)",2
org.apache.commons.lang3.text.StrBuilder.deleteAll(String),3
org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int),3
org.apache.commons.lang3.text.StrBuilder.deleteFirst(char),4
org.apache.commons.lang3.text.StrBuilder.deleteFirst(String),3
org.apache.commons.lang3.text.StrBuilder.endsWith(String),7
org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int),2
org.apache.commons.lang3.text.StrBuilder.equals(Object),3
org.apache.commons.lang3.text.StrBuilder.equals(StrBuilder),7
org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(StrBuilder),8
org.apache.commons.lang3.text.StrBuilder.getChars(char[]),3
"org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)",5
org.apache.commons.lang3.text.StrBuilder.hashCode(),2
"org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)",5
"org.apache.commons.lang3.text.StrBuilder.indexOf(StrMatcher,int)",6
"org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)",2
"org.apache.commons.lang3.text.StrBuilder.insert(int,char[])",3
"org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)",7
"org.apache.commons.lang3.text.StrBuilder.insert(int,Object)",2
"org.apache.commons.lang3.text.StrBuilder.insert(int,String)",6
org.apache.commons.lang3.text.StrBuilder.isEmpty(),2
org.apache.commons.lang3.text.StrBuilder.isNotEmpty(),2
"org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)",10
"org.apache.commons.lang3.text.StrBuilder.lastIndexOf(StrMatcher,int)",12
org.apache.commons.lang3.text.StrBuilder.leftString(int),3
"org.apache.commons.lang3.text.StrBuilder.midString(int,int)",8
org.apache.commons.lang3.text.StrBuilder.minimizeCapacity(),2
org.apache.commons.lang3.text.StrBuilder.readFrom(Readable),5
"org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)",4
"org.apache.commons.lang3.text.StrBuilder.replaceAll(String,String)",3
"org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)",5
"org.apache.commons.lang3.text.StrBuilder.replaceFirst(String,String)",3
"org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,String,int)",4
"org.apache.commons.lang3.text.StrBuilder.replaceImpl(StrMatcher,String,int,int,int)",10
org.apache.commons.lang3.text.StrBuilder.reverse(),3
org.apache.commons.lang3.text.StrBuilder.rightString(int),3
"org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)",3
org.apache.commons.lang3.text.StrBuilder.setLength(int),4
org.apache.commons.lang3.text.StrBuilder.setNullText(String),2
org.apache.commons.lang3.text.StrBuilder.startsWith(String),7
"org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)",4
org.apache.commons.lang3.text.StrBuilder.toCharArray(),2
"org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)",2
org.apache.commons.lang3.text.StrBuilder.trim(),65
org.apache.commons.lang3.text.StrBuilder.validateIndex(int),3
"org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)",5
"org.apache.commons.lang3.text.StrTokenizer.addToken(List,String)",4
org.apache.commons.lang3.text.StrTokenizer.checkTokenized(),3
org.apache.commons.lang3.text.StrTokenizer.clone(),2
org.apache.commons.lang3.text.StrTokenizer.cloneReset(),2
org.apache.commons.lang3.text.StrTokenizer.getContent(),2
org.apache.commons.lang3.text.StrTokenizer.hasNext(),2
org.apache.commons.lang3.text.StrTokenizer.hasPrevious(),2
org.apache.commons.lang3.text.StrTokenizer.next(),2
org.apache.commons.lang3.text.StrTokenizer.nextToken(),2
org.apache.commons.lang3.text.StrTokenizer.previous(),2
org.apache.commons.lang3.text.StrTokenizer.previousToken(),2
"org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,StrBuilder,List)",32
"org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,StrBuilder,List,int,int)",44
org.apache.commons.lang3.text.StrTokenizer.reset(String),2
org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(StrMatcher),2
org.apache.commons.lang3.text.StrTokenizer.setIgnoredMatcher(StrMatcher),2
org.apache.commons.lang3.text.StrTokenizer.setQuoteMatcher(StrMatcher),2
org.apache.commons.lang3.text.StrTokenizer.setTrimmerMatcher(StrMatcher),2
org.apache.commons.lang3.text.StrTokenizer.toString(),2
org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[]),3
org.apache.commons.lang3.text.StrMatcher.charSetMatcher(String),3
org.apache.commons.lang3.text.StrMatcher.stringMatcher(String),2
"org.apache.commons.lang3.text.FormattableUtils.append(CharSequence,Formatter,int,int,int,char,CharSequence)",72
"org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(String,ParsePosition,StringBuilder)",25
org.apache.commons.lang3.text.ExtendedMessageFormat.equals(Object),7
org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(String),5
"org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(String,ArrayList)",8
"org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(String,ParsePosition)",10
"org.apache.commons.lang3.text.WordUtils.capitalize(String,char[])",12
"org.apache.commons.lang3.text.WordUtils.capitalizeFully(String,char[])",6
"org.apache.commons.lang3.text.WordUtils.containsAllWords(CharSequence,CharSequence[])",8
"org.apache.commons.lang3.text.WordUtils.initials(String,char[])",10
"org.apache.commons.lang3.text.WordUtils.isDelimiter(char,char[])",2
org.apache.commons.lang3.text.WordUtils.swapCase(String),7
"org.apache.commons.lang3.text.WordUtils.uncapitalize(String,char[])",12
"org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(Annotation[],Annotation[])",5
"org.apache.commons.lang3.AnnotationUtils.arrayMemberEquals(Class,Object,Object)",10
org.apache.commons.lang3.AnnotationUtils.hashCode(Annotation),26
"org.apache.commons.lang3.AnnotationUtils.hashMember(String,Object)",3
"org.apache.commons.lang3.AnnotationUtils.memberEquals(Class,Object,Object)",6
org.apache.commons.lang3.AnnotationUtils.toString(Annotation),15
org.apache.commons.lang3.BooleanUtils.and(boolean[]),4
org.apache.commons.lang3.BooleanUtils.and(Boolean[]),2
org.apache.commons.lang3.BooleanUtils.isNotFalse(Boolean),2
org.apache.commons.lang3.BooleanUtils.isNotTrue(Boolean),2
org.apache.commons.lang3.BooleanUtils.oneHot(boolean[]),6
org.apache.commons.lang3.BooleanUtils.or(boolean[]),4
org.apache.commons.lang3.BooleanUtils.or(Boolean[]),2
org.apache.commons.lang3.BooleanUtils.toBoolean(String),2
org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean),2
org.apache.commons.lang3.BooleanUtils.toIntegerObject(Boolean),3
org.apache.commons.lang3.BooleanUtils.xor(boolean[]),2
org.apache.commons.lang3.BooleanUtils.xor(Boolean[]),2
"org.apache.commons.lang3.builder.RecursiveToStringStyle.appendDetail(StringBuffer,String,Object)",4
org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(Collection),2
org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(Field),40
org.apache.commons.lang3.builder.ReflectionToStringBuilder.setExcludeFieldNames(String[]),2
org.apache.commons.lang3.builder.ReflectionToStringBuilder.setIncludeFieldNames(String[]),2
org.apache.commons.lang3.builder.ReflectionToStringBuilder.setUpToClass(Class),4
org.apache.commons.lang3.builder.ReflectionToStringBuilder.toString(),5
org.apache.commons.lang3.builder.ReflectionToStringBuilder.validate(),2
org.apache.commons.lang3.builder.ToStringStyle.register(Object),2
org.apache.commons.lang3.builder.ToStringStyle.unregister(Object),3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,boolean[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,byte[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,char[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,double[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,float[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,int[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,long[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,Object,Boolean)",2
org.joda.time.base.AbstractPartial.toString(DateTimeFormatter),2
org.joda.time.base.BasePartial.toString(String),2
"org.joda.time.base.BasePartial.toString(String,Locale)",2
org.joda.time.base.AbstractInterval.contains(ReadableInstant),2
org.joda.time.base.AbstractInterval.contains(ReadableInterval),5
org.joda.time.base.AbstractInterval.overlaps(ReadableInterval),6
org.joda.time.base.AbstractInterval.isEqual(ReadableInterval),3
org.joda.time.base.AbstractInterval.isBefore(ReadableInstant),2
org.joda.time.base.AbstractInterval.isBefore(ReadableInterval),2
org.joda.time.base.AbstractInterval.isAfter(ReadableInstant),2
org.joda.time.base.AbstractInterval.isAfter(ReadableInterval),4
org.joda.time.base.AbstractInterval.toDuration(),2
org.joda.time.base.AbstractInterval.equals(Object),6
org.joda.time.base.BaseDateTime.adjustForMinMax(),3
"org.joda.time.base.BasePeriod.checkAndUpdate(DurationFieldType,int[],int)",3
org.joda.time.base.BasePeriod.setPeriod(ReadablePeriod),2
org.joda.time.base.BasePeriod.setPeriodInternal(ReadablePeriod),2
"org.joda.time.base.BasePeriod.addFieldInto(int[],DurationFieldType,int)",4
org.joda.time.base.BasePeriod.mergePeriod(ReadablePeriod),2
"org.joda.time.base.BasePeriod.mergePeriodInto(int[],ReadablePeriod)",2
org.joda.time.base.BasePeriod.addPeriod(ReadablePeriod),2
"org.joda.time.base.BasePeriod.addPeriodInto(int[],ReadablePeriod)",6
org.joda.time.base.AbstractDuration.compareTo(ReadableDuration),3
org.joda.time.base.AbstractDuration.isEqual(ReadableDuration),4
org.joda.time.base.AbstractDuration.isLongerThan(ReadableDuration),4
org.joda.time.base.AbstractDuration.isShorterThan(ReadableDuration),4
org.joda.time.base.AbstractDuration.equals(Object),4
org.joda.time.base.AbstractDuration.toString(),40
org.joda.time.base.AbstractDateTime.get(DateTimeFieldType),2
org.joda.time.base.AbstractDateTime.toCalendar(Locale),2
org.joda.time.base.AbstractDateTime.toString(String),2
"org.joda.time.base.AbstractDateTime.toString(String,Locale)",2
org.joda.time.base.AbstractPeriod.getFieldTypes(),2
org.joda.time.base.AbstractPeriod.getValues(),2
org.joda.time.base.AbstractPeriod.get(DurationFieldType),2
org.joda.time.base.AbstractPeriod.equals(Object),9
org.joda.time.base.AbstractPeriod.hashCode(),2
org.joda.time.base.AbstractPeriod.toString(PeriodFormatter),2
"org.joda.time.base.BaseSingleFieldPeriod.between(ReadableInstant,ReadableInstant,DurationFieldType)",3
"org.joda.time.base.BaseSingleFieldPeriod.between(ReadablePartial,ReadablePartial,ReadablePeriod)",9
"org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(ReadablePeriod,long)",7
org.joda.time.base.BaseSingleFieldPeriod.getFieldType(int),2
org.joda.time.base.BaseSingleFieldPeriod.getValue(int),2
org.joda.time.base.BaseSingleFieldPeriod.get(DurationFieldType),2
org.joda.time.base.BaseSingleFieldPeriod.isSupported(DurationFieldType),2
org.joda.time.base.BaseSingleFieldPeriod.equals(Object),5
org.joda.time.base.BaseSingleFieldPeriod.compareTo(BaseSingleFieldPeriod),4
"org.joda.time.convert.ReadablePartialConverter.getChronology(Object,Chronology)",2
"org.joda.time.convert.ReadablePartialConverter.getPartialValues(ReadablePartial,Object,Chronology)",2
"org.joda.time.convert.StringConverter.getPartialValues(ReadablePartial,Object,Chronology,DateTimeFormatter)",2
"org.joda.time.convert.StringConverter.setInto(ReadWritableInterval,Object,Chronology)",45
"org.joda.time.convert.ReadableIntervalConverter.setInto(ReadWritablePeriod,Object,Chronology)",4
"org.joda.time.convert.ReadableIntervalConverter.setInto(ReadWritableInterval,Object,Chronology)",2
"org.joda.time.convert.ReadableDurationConverter.setInto(ReadWritablePeriod,Object,Chronology)",2
org.joda.time.convert.ConverterManager.getInstantConverter(Object),6
org.joda.time.convert.ConverterManager.addInstantConverter(InstantConverter),2
org.joda.time.convert.ConverterManager.removeInstantConverter(InstantConverter),2
org.joda.time.convert.ConverterManager.checkAlterInstantConverters(),2
org.joda.time.convert.ConverterManager.getPartialConverter(Object),6
org.joda.time.convert.ConverterManager.addPartialConverter(PartialConverter),2
org.joda.time.convert.ConverterManager.removePartialConverter(PartialConverter),2
org.joda.time.convert.ConverterManager.checkAlterPartialConverters(),2
org.joda.time.convert.ConverterManager.getDurationConverter(Object),6
org.joda.time.convert.ConverterManager.addDurationConverter(DurationConverter),2
org.joda.time.convert.ConverterManager.removeDurationConverter(DurationConverter),2
org.joda.time.convert.ConverterManager.checkAlterDurationConverters(),2
org.joda.time.convert.ConverterManager.getPeriodConverter(Object),6
org.joda.time.convert.ConverterManager.addPeriodConverter(PeriodConverter),2
org.joda.time.convert.ConverterManager.removePeriodConverter(PeriodConverter),2
org.joda.time.convert.ConverterManager.checkAlterPeriodConverters(),2
org.joda.time.convert.ConverterManager.getIntervalConverter(Object),6
org.joda.time.convert.ConverterManager.addIntervalConverter(IntervalConverter),2
org.joda.time.convert.ConverterManager.removeIntervalConverter(IntervalConverter),2
org.joda.time.convert.ConverterManager.checkAlterIntervalConverters(),2
"org.joda.time.convert.ConverterSet.add(Converter,Converter[])",20
"org.joda.time.convert.ConverterSet.remove(Converter,Converter[])",6
"org.joda.time.convert.ConverterSet.remove(int,Converter[])",7
"org.joda.time.convert.ReadableInstantConverter.getChronology(Object,DateTimeZone)",4
"org.joda.time.convert.ReadableInstantConverter.getChronology(Object,Chronology)",2
"org.joda.time.convert.CalendarConverter.getChronology(Object,Chronology)",4
"org.joda.time.convert.CalendarConverter.getChronology(Object,DateTimeZone)",5
org.joda.time.MutableDateTime.now(DateTimeZone),2
org.joda.time.MutableDateTime.now(Chronology),2
"org.joda.time.MutableDateTime.setRounding(DateTimeField,int)",10
org.joda.time.MutableDateTime.setMillis(long),7
"org.joda.time.MutableDateTime.add(ReadableDuration,int)",2
"org.joda.time.MutableDateTime.add(ReadablePeriod,int)",2
org.joda.time.MutableDateTime.setZone(DateTimeZone),2
org.joda.time.MutableDateTime.setZoneRetainFields(DateTimeZone),2
"org.joda.time.MutableDateTime.set(DateTimeFieldType,int)",2
"org.joda.time.MutableDateTime.add(DurationFieldType,int)",3
org.joda.time.MutableDateTime.addYears(int),2
org.joda.time.MutableDateTime.addWeekyears(int),2
org.joda.time.MutableDateTime.addMonths(int),2
org.joda.time.MutableDateTime.addWeeks(int),2
org.joda.time.MutableDateTime.addDays(int),2
org.joda.time.MutableDateTime.addHours(int),2
org.joda.time.MutableDateTime.addMinutes(int),2
org.joda.time.MutableDateTime.addSeconds(int),2
org.joda.time.MutableDateTime.addMillis(int),2
org.joda.time.MutableDateTime.setDate(ReadableInstant),3
org.joda.time.MutableDateTime.setTime(ReadableInstant),2
org.joda.time.MutableDateTime.property(DateTimeFieldType),3
org.joda.time.Seconds.seconds(int),7
"org.joda.time.Seconds.secondsBetween(ReadablePartial,ReadablePartial)",3
org.joda.time.Seconds.secondsIn(ReadableInterval),2
org.joda.time.Seconds.parseSeconds(String),2
org.joda.time.Seconds.plus(int),2
org.joda.time.Seconds.plus(Seconds),2
org.joda.time.Seconds.minus(Seconds),2
org.joda.time.Seconds.dividedBy(int),2
"org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.write(byte[],int,int)",9
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeHeader(CpioArchiveEntry),5
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeNewEntry(CpioArchiveEntry),4
org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeOldAsciiEntry(CpioArchiveEntry),4
"org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeOldBinaryEntry(CpioArchiveEntry,boolean)",4
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.available(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.close(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.closeEntry(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.ensureOpen(),2
"org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.read(byte[],int,int)",17
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readCString(int),2
"org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readFully(byte[],int,int)",2
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readNewEntry(boolean),28
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readOldAsciiEntry(),10
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readOldBinaryEntry(boolean),14
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readRange(int),2
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.skip(int),2
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.skip(long),10
org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.skipRemainderOfLastBlock(),8
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.checkNewFormat(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.checkOldFormat(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.equals(Object),4
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getDataPadCount(),3
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getHeaderPadCount(Charset),3
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getHeaderPadCount(long),5
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getMode(),3
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getNumberOfLinks(),3
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isBlockDevice(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isCharacterDevice(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isDirectory(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isNetwork(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isPipe(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isRegularFile(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isSocket(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isSymbolicLink(),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setMode(long),2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setSize(long),3
"org.apache.commons.compress.utils.IOUtils.read(File,byte[])",8
"org.apache.commons.compress.utils.ByteUtils.fromLittleEndian(byte[],int,int)",2
"org.apache.commons.compress.utils.ByteUtils.fromLittleEndian(ByteSupplier,int)",4
"org.apache.commons.compress.utils.ByteUtils.fromLittleEndian(DataInput,int)",2
"org.apache.commons.compress.utils.ByteUtils.fromLittleEndian(InputStream,int)",4
"org.apache.commons.compress.utils.ByteUtils.toLittleEndian(ByteConsumer,long,int)",2
org.apache.commons.compress.utils.ArchiveUtils.toString(ArchiveEntry),4
org.apache.commons.compress.utils.OsgiUtils.isBundleReference(Class),10
org.apache.commons.compress.utils.BoundedArchiveInputStream.read(),5
"org.apache.commons.compress.utils.BoundedArchiveInputStream.read(byte[],int,int)",7
org.apache.commons.compress.utils.ChecksumVerifyingInputStream.read(),3
"org.apache.commons.compress.utils.ChecksumVerifyingInputStream.read(byte[],int,int)",3
org.apache.commons.compress.utils.ChecksumVerifyingInputStream.verify(),3
org.apache.commons.compress.utils.SkipShieldingInputStream.skip(long),2
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.close(),3
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.flushBlock(),2
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.isOpen(),4
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.maybeFlush(),2
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.padBlock(),14
"org.apache.commons.compress.utils.FixedLengthBlockOutputStream.write(byte[],int,int)",3
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.write(ByteBuffer),6
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.write(int),2
org.apache.commons.compress.utils.FixedLengthBlockOutputStream.writeBlock(),3
org.apache.commons.compress.utils.BitInputStream.alignWithByteBoundary(),2
org.apache.commons.compress.utils.BitInputStream.ensureCache(int),9
org.apache.commons.compress.utils.BitInputStream.processBitsGreater57(int),3
org.apache.commons.compress.utils.BitInputStream.readBits(int),5
org.apache.commons.compress.utils.BitInputStream.readCachedBits(int),2
org.apache.commons.compress.utils.CountingOutputStream.count(long),2
org.apache.commons.compress.utils.CountingInputStream.count(long),2
org.apache.commons.compress.utils.CountingInputStream.read(),2
"org.apache.commons.compress.utils.CountingInputStream.read(byte[],int,int)",3
org.apache.commons.compress.utils.SeekableInMemoryByteChannel.ensureOpen(),2
org.apache.commons.compress.utils.SeekableInMemoryByteChannel.isOpen(),2
org.apache.commons.compress.utils.SeekableInMemoryByteChannel.position(long),3
org.apache.commons.compress.utils.SeekableInMemoryByteChannel.read(ByteBuffer),3
org.apache.commons.compress.utils.SeekableInMemoryByteChannel.resize(int),6
org.apache.commons.compress.utils.SeekableInMemoryByteChannel.truncate(long),6
org.apache.commons.compress.utils.SeekableInMemoryByteChannel.write(ByteBuffer),6
org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.forFiles(File[]),2
org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.forPaths(Path[]),4
org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.forSeekableByteChannels(SeekableByteChannel[]),2
org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.close(),8
org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.position(long),6
"org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.position(long,long)",3
org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.read(ByteBuffer),18
org.apache.commons.compress.utils.MultiReadOnlySeekableByteChannel.size(),3
org.apache.commons.compress.utils.ServiceLoaderIterator.hasNext(),81
org.apache.commons.compress.utils.ServiceLoaderIterator.next(),2
org.apache.commons.compress.CompressFilterOutputStream.checkOpen(),2
org.apache.commons.compress.CompressFilterOutputStream.close(),2
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream.available(),2
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream.close(),2
org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream.read(),6
"org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream.read(byte[],int,int)",6
org.apache.commons.compress.compressors.deflate64.HuffmanDecoder.buildTree(int[]),23
"org.apache.commons.compress.compressors.deflate64.HuffmanDecoder.nextSymbol(BitInputStream,BinaryTreeNode)",12
"org.apache.commons.compress.compressors.deflate64.HuffmanDecoder.populateDynamicTables(BitInputStream,int[],int[])",14
"org.apache.commons.compress.compressors.deflate64.HuffmanDecoder.readBits(BitInputStream,int)",2
org.apache.commons.compress.compressors.deflate64.HuffmanDecoder.switchToUncompressedState(),2
org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStream.read(),2
org.apache.commons.compress.compressors.brotli.BrotliUtils.isBrotliCompressionAvailable(),3
org.apache.commons.compress.compressors.brotli.BrotliUtils.setCacheBrotliAvailablity(boolean),4
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream.initializeBackReference(),14
"org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream.read(byte[],int,int)",20
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream.readSizes(),5
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.appendToBlockDependencyBuffer(byte[],int,int)",3
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.close(),2
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.finish(),2
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.flushBlock(),61
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.write(byte[],int,int)",6
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.writeFrameDescriptor(),8
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.writeTrailer(),2
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.isSkippableFrameSignature(byte[]),5
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.matches(byte[],int)",3
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer(byte[],int,int)",3
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.close(),4
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.init(boolean),2
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.maybeFinishCurrentBlock(),3
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.nextBlock(),16
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.read(),2
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.read(byte[],int,int)",17
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.readOnce(byte[],int,int)",2
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.readOneByte(),2
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.readSignature(boolean),34
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.skipSkippableFrame(byte[]),8
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.verifyChecksum(XXHash32,String)",3
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream.verifyContentChecksum(),2
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.clearUnusedBlocks(),8
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.clearUnusedPairs(),16
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.close(),2
"org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.expand(int,int)",3
"org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.expandFromList(byte[],int,int)",22
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.finish(),2
"org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.prefill(byte[],int,int)",2
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.writeBlocksAndReturnUnfinishedPair(int),3
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.writeFinalLiteralBlock(),3
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream.writeWritablePairs(int),24
org.apache.commons.compress.compressors.gzip.GzipParameters.equals(Object),15
org.apache.commons.compress.compressors.gzip.GzipParameters.requireNonNulByte(String),3
org.apache.commons.compress.compressors.gzip.GzipParameters.setBufferSize(int),2
org.apache.commons.compress.compressors.gzip.GzipParameters.setCompressionLevel(int),3
org.apache.commons.compress.compressors.gzip.GzipParameters.setModificationInstant(Instant),2
org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.close(),3
org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.deflate(),2
org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.finish(),3
"org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.write(byte[],int,int)",4
"org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.writeC(String,Charset)",2
org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.close(),4
org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.read(),2
org.apache.commons.compress.compressors.gzip.ExtraField.fromBytes(byte[]),7
"org.apache.commons.compress.compressors.gzip.ExtraField.addSubField(String,byte[])",5
org.apache.commons.compress.compressors.gzip.ExtraField.equals(Object),6
org.apache.commons.compress.compressors.gzip.ExtraField.toByteArray(),3
"org.apache.commons.compress.compressors.lzw.LZWInputStream.addEntry(int,byte,int)",2
org.apache.commons.compress.compressors.lzw.LZWInputStream.addRepeatOfPreviousCode(),2
"org.apache.commons.compress.compressors.lzw.LZWInputStream.expandCodeToOutputStack(int,boolean)",6
"org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(Class,Class)",19
"org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(Class,Class)",17
org.apache.commons.lang3.reflect.MemberUtils.isAccessible(Member),3
"org.apache.commons.lang3.reflect.MemberUtils.isMatchingExecutable(Executable,Class[])",20
org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(AccessibleObject),8
org.apache.commons.lang3.reflect.TypeLiteral.equals(Object),3
"org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Class,Class[])",3
org.apache.commons.lang3.reflect.ConstructorUtils.getAccessibleConstructor(Constructor),3
"org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(Class,Class[])",19
"org.apache.commons.lang3.reflect.ConstructorUtils.invokeConstructor(Class,Object[],Class[])",3
"org.apache.commons.lang3.reflect.ConstructorUtils.invokeExactConstructor(Class,Object[],Class[])",2
org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(Class),4
"org.apache.commons.lang3.reflect.FieldUtils.getDeclaredField(Class,String,boolean)",11
"org.apache.commons.lang3.reflect.FieldUtils.readDeclaredField(Object,String,boolean)",2
"org.apache.commons.lang3.reflect.FieldUtils.readField(Field,Object,boolean)",3
"org.apache.commons.lang3.reflect.FieldUtils.readField(Object,String,boolean)",2
"org.apache.commons.lang3.reflect.FieldUtils.writeDeclaredField(Object,String,Object,boolean)",2
"org.apache.commons.lang3.reflect.FieldUtils.writeField(Field,Object,Object,boolean)",3
"org.apache.commons.lang3.reflect.FieldUtils.writeField(Object,String,Object,boolean)",2
"org.apache.commons.lang3.RandomStringUtils.next(int,char[])",2
"org.apache.commons.lang3.RandomStringUtils.next(int,String)",2
org.apache.commons.lang3.function.MethodInvokers.unreflectUnchecked(Method),2
org.apache.commons.lang3.function.Failable.get(FailableSupplier),2
org.apache.commons.lang3.function.Failable.getAsBoolean(FailableBooleanSupplier),2
org.apache.commons.lang3.function.Failable.getAsDouble(FailableDoubleSupplier),2
org.apache.commons.lang3.function.Failable.getAsInt(FailableIntSupplier),2
org.apache.commons.lang3.function.Failable.getAsLong(FailableLongSupplier),2
org.apache.commons.lang3.function.Failable.getAsShort(FailableShortSupplier),2
org.apache.commons.lang3.function.Failable.rethrow(Throwable),2
org.apache.commons.lang3.function.Failable.run(FailableRunnable),3
"org.apache.commons.lang3.function.Failable.run(Object,FailableRunnable)",4
"org.apache.commons.lang3.function.Failable.tryWithResources(FailableRunnable,FailableConsumer,FailableRunnable[])",60
"org.apache.commons.lang3.AppendableJoiner.joinArray(Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer,Object[])",5
"org.apache.commons.lang3.AppendableJoiner.joinI(StringBuilder,CharSequence,CharSequence,CharSequence,FailableBiConsumer,Iterable)",3
"org.apache.commons.lang3.AppendableJoiner.joinIterable(Appendable,CharSequence,CharSequence,CharSequence,FailableBiConsumer,Iterable)",5
"org.apache.commons.lang3.AppendableJoiner.joinSB(StringBuilder,CharSequence,CharSequence,CharSequence,FailableBiConsumer,Object[])",3
"org.apache.commons.lang3.math.Fraction.getFraction(int,int)",5
"org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)",9
org.apache.commons.lang3.math.Fraction.getFraction(String),5
"org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)",14
org.apache.commons.lang3.math.Fraction.abs(),2
"org.apache.commons.lang3.math.Fraction.addSub(Fraction,boolean)",13
org.apache.commons.lang3.math.Fraction.compareTo(Fraction),4
org.apache.commons.lang3.math.Fraction.divideBy(Fraction),2
org.apache.commons.lang3.math.Fraction.equals(Object),5
org.apache.commons.lang3.math.Fraction.hashCode(),2
org.apache.commons.lang3.math.Fraction.invert(),4
org.apache.commons.lang3.math.Fraction.multiplyBy(Fraction),3
org.apache.commons.lang3.math.Fraction.negate(),2
org.apache.commons.lang3.math.Fraction.pow(int),6
org.apache.commons.lang3.math.Fraction.reduce(),4
org.apache.commons.lang3.math.Fraction.toProperString(),10
org.apache.commons.lang3.math.Fraction.toString(),2
org.apache.commons.lang3.math.NumberUtils.createBigDecimal(String),3
org.apache.commons.lang3.math.NumberUtils.isParsable(String),5
"org.apache.commons.lang3.math.NumberUtils.isZero(String,String)",3
org.apache.commons.lang3.math.NumberUtils.max(byte[]),3
org.apache.commons.lang3.math.NumberUtils.max(double[]),6
org.apache.commons.lang3.math.NumberUtils.max(float[]),6
org.apache.commons.lang3.math.NumberUtils.max(int[]),3
org.apache.commons.lang3.math.NumberUtils.max(long[]),3
org.apache.commons.lang3.math.NumberUtils.max(short[]),3
org.apache.commons.lang3.math.NumberUtils.min(byte[]),3
org.apache.commons.lang3.math.NumberUtils.min(double[]),6
org.apache.commons.lang3.math.NumberUtils.min(float[]),6
org.apache.commons.lang3.math.NumberUtils.min(int[]),3
org.apache.commons.lang3.math.NumberUtils.min(long[]),3
org.apache.commons.lang3.math.NumberUtils.min(short[]),3
"org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Double,int,RoundingMode)",2
"org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(Float,int,RoundingMode)",2
"org.apache.commons.lang3.math.NumberUtils.toScaledBigDecimal(String,int,RoundingMode)",2
org.apache.commons.lang3.math.NumberUtils.validateArray(Object),2
org.apache.commons.lang3.math.IEEE754rUtils.max(double[]),4
org.apache.commons.lang3.math.IEEE754rUtils.max(float[]),4
org.apache.commons.lang3.math.IEEE754rUtils.min(double[]),4
org.apache.commons.lang3.math.IEEE754rUtils.min(float[]),4
org.apache.commons.lang3.time.FastDateParser.adjustYear(int),2
org.apache.commons.lang3.time.FastDateParser.equals(Object),5
org.apache.commons.lang3.time.FastDateParser.init(Calendar),2
"org.apache.commons.lang3.time.FastDateParser.parse(String,ParsePosition)",2
"org.apache.commons.lang3.time.FastDateParser.parse(String,ParsePosition,Calendar)",4
org.apache.commons.lang3.time.FastDateFormat.equals(Object),2
org.joda.time.Weeks.weeks(int),7
"org.joda.time.Weeks.weeksBetween(ReadablePartial,ReadablePartial)",3
org.joda.time.Weeks.weeksIn(ReadableInterval),2
org.joda.time.Weeks.parseWeeks(String),2
org.joda.time.Weeks.plus(int),2
org.joda.time.Weeks.plus(Weeks),2
org.joda.time.Weeks.minus(Weeks),2
org.joda.time.Weeks.dividedBy(int),2
org.joda.time.Hours.hours(int),12
"org.joda.time.Hours.hoursBetween(ReadablePartial,ReadablePartial)",3
org.joda.time.Hours.hoursIn(ReadableInterval),2
org.joda.time.Hours.parseHours(String),2
org.joda.time.Hours.plus(int),2
org.joda.time.Hours.plus(Hours),2
org.joda.time.Hours.minus(Hours),2
org.joda.time.Hours.dividedBy(int),2
org.joda.time.field.SkipDateTimeField.get(long),2
"org.joda.time.field.SkipDateTimeField.set(long,int)",3
org.joda.time.field.SkipUndoDateTimeField.get(long),2
"org.joda.time.field.SkipUndoDateTimeField.set(long,int)",2
org.joda.time.field.ScaledDurationField.equals(Object),6
org.joda.time.field.PreciseDateTimeField.get(long),2
org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(ReadableInstant),2
org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(ReadableInstant),2
org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(ReadableInstant),4
org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(ReadablePartial),4
org.joda.time.field.AbstractReadableInstantFieldProperty.equals(Object),6
org.joda.time.field.MillisDurationField.compareTo(DurationField),3
org.joda.time.field.MillisDurationField.equals(Object),3
org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long),2
org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long),2
org.joda.time.field.PreciseDurationDateTimeField.remainder(long),2
org.joda.time.field.StrictDateTimeField.getInstance(DateTimeField),5
org.joda.time.field.PreciseDurationField.equals(Object),5
org.joda.time.field.ZeroIsMaxDateTimeField.get(long),2
"org.joda.time.field.ZeroIsMaxDateTimeField.set(long,int)",2
org.joda.time.field.DividedDateTimeField.getRangeDurationField(),2
org.joda.time.field.DividedDateTimeField.get(long),2
org.joda.time.field.DividedDateTimeField.getRemainder(int),2
org.joda.time.field.RemainderDateTimeField.get(long),2
org.joda.time.field.RemainderDateTimeField.getDivided(int),2
"org.joda.time.field.LenientDateTimeField.getInstance(DateTimeField,Chronology)",5
org.joda.time.field.DelegatedDurationField.equals(Object),2
org.joda.time.field.DelegatedDurationField.toString(),2
org.joda.time.field.AbstractPartialFieldProperty.compareTo(ReadableInstant),4
org.joda.time.field.AbstractPartialFieldProperty.compareTo(ReadablePartial),4
org.joda.time.field.AbstractPartialFieldProperty.equals(Object),6
org.joda.time.field.BaseDurationField.compareTo(DurationField),3
org.joda.time.field.UnsupportedDurationField.getInstance(DurationFieldType),4
org.joda.time.field.UnsupportedDurationField.equals(Object),5
"org.joda.time.field.UnsupportedDateTimeField.getInstance(DateTimeFieldType,DurationField)",8
"org.joda.time.field.BaseDateTimeField.add(ReadablePartial,int,int[],int)",79
"org.joda.time.field.BaseDateTimeField.set(ReadablePartial,int,int[],int)",5
"org.joda.time.field.BaseDateTimeField.convertText(String,Locale)",2
org.joda.time.field.BaseDateTimeField.getMaximumTextLength(Locale),5
org.joda.time.field.BaseDateTimeField.roundCeiling(long),2
org.joda.time.field.BaseDateTimeField.roundHalfFloor(long),2
org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long),2
org.joda.time.field.BaseDateTimeField.roundHalfEven(long),4
"org.joda.time.field.FieldUtils.verifyValueBounds(DateTimeField,int,int,int)",3
"org.joda.time.field.FieldUtils.verifyValueBounds(DateTimeFieldType,int,int,int)",3
"org.joda.time.field.FieldUtils.verifyValueBounds(String,int,int,int)",3
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getFunction(QName,Object[])",6
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.registerNamespace(String,String)",2
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setNamespaceContextPointer(Pointer),2
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setExceptionHandler(ExceptionHandler),2
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.allocateConditionally(String,String)",11
org.apache.commons.jxpath.ri.EvalContext.getDocumentOrder(),3
org.apache.commons.jxpath.ri.EvalContext.isChildOrderingRequired(),2
org.apache.commons.jxpath.ri.EvalContext.hasNext(),8
org.apache.commons.jxpath.ri.EvalContext.next(),9
org.apache.commons.jxpath.ri.EvalContext.sortPointers(List),3
org.apache.commons.jxpath.ri.EvalContext.getContextNodeList(),8
org.apache.commons.jxpath.ri.EvalContext.toString(),2
org.apache.commons.jxpath.ri.EvalContext.getRootContext(),2
org.apache.commons.jxpath.xml.DOMParser.parseXML(InputStream),16
org.apache.commons.jxpath.xml.JDOMParser.parseXML(InputStream),12
org.apache.commons.jxpath.xml.DocumentContainer.getValue(),68
org.apache.commons.jxpath.xml.DocumentContainer.parseXML(InputStream),2
"org.apache.commons.jxpath.FunctionLibrary.getFunction(String,String,Object[])",6
org.apache.commons.jxpath.FunctionLibrary.functionCache(),6
org.apache.commons.jxpath.JXPathContextFactoryConfigurationError.getMessage(),3
org.apache.commons.jxpath.JXPathException.getMessage(),5
org.apache.commons.jxpath.JXPathContextFactory.newInstance(),8
org.apache.commons.jxpath.BasicNodeSet.add(Pointer),2
org.apache.commons.jxpath.BasicNodeSet.add(NodeSet),2
org.apache.commons.jxpath.BasicNodeSet.remove(Pointer),2
org.apache.commons.jxpath.BasicNodeSet.getPointers(),2
org.apache.commons.jxpath.BasicNodeSet.getNodes(),3
org.apache.commons.jxpath.BasicNodeSet.getValues(),3
org.apache.commons.jxpath.JXPathIntrospector.findDynamicBeanInfo(Class),58
org.apache.commons.jxpath.JXPathIntrospector.findInformant(Class),21
"org.apache.commons.jxpath.JXPathIntrospector.instantiate(Class,String)",7
org.apache.commons.jxpath.BasicVariables.getVariable(String),2
org.apache.commons.lang3.LocaleUtils.countriesByLanguage(String),2
org.apache.commons.lang3.LocaleUtils.isISO3166CountryCode(String),3
org.apache.commons.lang3.LocaleUtils.isISO639LanguageCode(String),4
org.apache.commons.lang3.LocaleUtils.isNumericAreaCode(String),3
org.apache.commons.lang3.LocaleUtils.languagesByCountry(String),2
org.apache.commons.lang3.LocaleUtils.parseLocale(String),29
org.apache.commons.lang3.LocaleUtils.toLocale(String),19
"org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)",2
"org.apache.commons.lang3.Conversion.byteToHex(byte,int,String,int,int)",5
org.apache.commons.lang3.Conversion.hexDigitMsb0ToBinary(char),17
org.apache.commons.lang3.Conversion.hexDigitToBinary(char),17
"org.apache.commons.lang3.Conversion.hexToByte(String,int,byte,int,int)",4
"org.apache.commons.lang3.Conversion.hexToInt(String,int,int,int,int)",4
"org.apache.commons.lang3.Conversion.hexToLong(String,int,long,int,int)",4
"org.apache.commons.lang3.Conversion.hexToShort(String,int,short,int,int)",4
"org.apache.commons.lang3.Conversion.intToHex(int,int,String,int,int)",5
"org.apache.commons.lang3.Conversion.longToHex(long,int,String,int,int)",5
"org.apache.commons.lang3.Conversion.shortToHex(short,int,String,int,int)",5
"org.apache.commons.lang3.Conversion.uuidToByteArray(UUID,byte[],int,int)",4
org.apache.commons.lang3.SystemUtils.getHostName(),2
"org.apache.commons.lang3.SystemUtils.isOsMatch(String,String,String,String)",5
"org.apache.commons.lang3.SystemUtils.isOsNameMatch(String,String)",2
"org.apache.commons.lang3.SystemUtils.isOsVersionMatch(String,String)",5
org.apache.commons.lang3.mutable.MutableByte.equals(Object),3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,Object[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.append(StringBuffer,String,short[],Boolean)",3
"org.apache.commons.lang3.builder.ToStringStyle.appendClassName(StringBuffer,Object)",4
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,boolean[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,byte[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,char[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,double[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,float[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,int,Object)",4
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,int[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,long[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,Object[])",2
"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(StringBuffer,String,short[])",3
"org.apache.commons.lang3.builder.ToStringStyle.appendEnd(StringBuffer,Object)",2
"org.apache.commons.lang3.builder.ToStringStyle.appendFieldStart(StringBuffer,String)",3
"org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(StringBuffer,Object)",3
"org.apache.commons.lang3.builder.ToStringStyle.appendStart(StringBuffer,Object)",3
"org.apache.commons.lang3.builder.ToStringStyle.appendToString(StringBuffer,String)",6
org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(Boolean),2
"org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(StringBuffer,String,Object)",2
org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(StringBuffer),2
org.apache.commons.lang3.builder.ToStringStyle.setArrayEnd(String),2
org.apache.commons.lang3.builder.ToStringStyle.setArraySeparator(String),2
org.apache.commons.lang3.builder.ToStringStyle.setArrayStart(String),2
org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(String),2
org.apache.commons.lang3.builder.ToStringStyle.setContentStart(String),2
org.apache.commons.lang3.builder.ToStringStyle.setFieldNameValueSeparator(String),2
org.apache.commons.lang3.builder.ToStringStyle.setFieldSeparator(String),2
org.apache.commons.lang3.builder.ToStringStyle.setNullText(String),2
org.apache.commons.lang3.builder.ToStringStyle.setSizeEndText(String),2
org.apache.commons.lang3.builder.ToStringStyle.setSizeStartText(String),2
org.apache.commons.lang3.builder.ToStringStyle.setSummaryObjectEndText(String),2
org.apache.commons.lang3.builder.ToStringStyle.setSummaryObjectStartText(String),2
org.apache.commons.lang3.builder.HashCodeBuilder.isRegistered(Object),3
"org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,Object,boolean,Class,String[])",4
org.apache.commons.lang3.builder.HashCodeBuilder.unregister(Object),2
org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean),2
org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(char[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(double[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(float[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(int[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(long[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(Object),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(Object[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.append(short[]),3
org.apache.commons.lang3.builder.HashCodeBuilder.appendArray(Object),9
org.apache.commons.lang3.builder.HashCodeBuilder.equals(Object),4
"org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(Object,Object,Class,CompareToBuilder,boolean,String[])",16
"org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(Object,Object,boolean,Class,String[])",6
"org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)",4
"org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)",2
"org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)",2
"org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)",2
"org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)",2
"org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)",2
"org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)",2
"org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(Object,Object,Comparator)",7
"org.apache.commons.lang3.builder.CompareToBuilder.append(Object[],Object[],Comparator)",10
"org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)",2
"org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])",10
"org.apache.commons.lang3.builder.CompareToBuilder.appendArray(Object,Object,Comparator)",9
org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int),2
org.apache.commons.lang3.builder.DiffResult.toString(ToStringStyle),2
"org.apache.commons.lang3.builder.DiffBuilder.append(String,boolean,boolean)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,boolean[],boolean[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,byte,byte)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,byte[],byte[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,char,char)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,char[],char[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,DiffResult)",2
"org.apache.commons.lang3.builder.DiffBuilder.append(String,double,double)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,double[],double[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,float,float)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,float[],float[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,int,int)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,int[],int[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,long,long)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,long[],long[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,Object,Object)",24
"org.apache.commons.lang3.builder.DiffBuilder.append(String,Object[],Object[])",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,short,short)",3
"org.apache.commons.lang3.builder.DiffBuilder.append(String,short[],short[])",3
org.apache.commons.lang3.builder.ReflectionDiffBuilder.toExcludeFieldNames(String[]),2
org.apache.commons.lang3.builder.ReflectionDiffBuilder.accept(Field),8
org.apache.commons.lang3.builder.ReflectionDiffBuilder.appendFields(Class),24
org.apache.commons.lang3.builder.ReflectionDiffBuilder.build(),2
org.apache.commons.lang3.builder.ToStringBuilder.appendSuper(String),2
org.apache.commons.lang3.builder.ToStringBuilder.appendToString(String),2
org.apache.commons.lang3.builder.ToStringBuilder.toString(),2
"org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(StringBuffer,String,Object)",4
"org.apache.commons.lang3.builder.EqualsBuilder.isRegistered(Object,Object)",4
"org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(Object,Object,boolean,Class,boolean,String[])",4
"org.apache.commons.lang3.builder.EqualsBuilder.unregister(Object,Object)",2
"org.apache.commons.lang3.builder.EqualsBuilder.append(boolean,boolean)",3
"org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(byte,byte)",3
"org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(char,char)",3
"org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)",2
"org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)",2
"org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(int,int)",3
"org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(long,long)",3
"org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(Object,Object)",8
"org.apache.commons.lang3.builder.EqualsBuilder.append(Object[],Object[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.append(short,short)",3
"org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])",9
"org.apache.commons.lang3.builder.EqualsBuilder.appendArray(Object,Object)",10
org.apache.commons.lang3.builder.EqualsBuilder.appendSuper(boolean),2
org.apache.commons.lang3.builder.IDKey.equals(Object),4
org.apache.commons.lang3.ThreadUtils.findThreadById(long),3
"org.apache.commons.lang3.ThreadUtils.findThreadById(long,String)",4
"org.apache.commons.lang3.ThreadUtils.findThreadById(long,ThreadGroup)",3
org.apache.commons.lang3.ThreadUtils.sleepQuietly(Duration),2
"org.apache.commons.lang3.exception.ExceptionUtils.getCause(Throwable,String[])",4
"org.apache.commons.lang3.exception.ExceptionUtils.getCauseUsingMethodName(Throwable,String)",7
org.apache.commons.lang3.exception.ExceptionUtils.getMessage(Throwable),2
org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(Throwable),2
org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseMessage(Throwable),2
org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTraceList(Throwable),6
org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(Throwable),12
org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(Throwable),2
"org.apache.commons.lang3.exception.ExceptionUtils.indexOf(Throwable,Class,int,boolean)",20
"org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintStream)",2
"org.apache.commons.lang3.exception.ExceptionUtils.printRootCauseStackTrace(Throwable,PrintWriter)",2
"org.apache.commons.lang3.exception.ExceptionUtils.throwableOf(Throwable,Class,int,boolean)",20
org.apache.commons.lang3.exception.ExceptionUtils.throwUnchecked(Throwable),2
org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(String),18
"org.apache.commons.lang3.event.EventUtils.addEventListener(Object,Class,Object)",10
"org.apache.commons.lang3.event.EventListenerSupport.addListener(Object,boolean)",3
org.apache.commons.lang3.event.EventListenerSupport.writeObject(ObjectOutputStream),4
org.apache.commons.lang3.EnumUtils.checkBitVectorable(Class),2
"org.apache.commons.lang3.EnumUtils.generateBitVector(Class,Iterable)",2
"org.apache.commons.lang3.EnumUtils.generateBitVectors(Class,Enum[])",2
"org.apache.commons.lang3.EnumUtils.generateBitVectors(Class,Iterable)",2
org.joda.time.field.DelegatedDateTimeField.getRangeDurationField(),2
org.joda.time.YearMonth.now(DateTimeZone),2
org.joda.time.YearMonth.now(Chronology),2
org.joda.time.YearMonth.fromCalendarFields(Calendar),2
org.joda.time.YearMonth.fromDateFields(Date),2
org.joda.time.YearMonth.readResolve(),2
"org.joda.time.YearMonth.getField(int,Chronology)",3
org.joda.time.YearMonth.withChronologyRetainFields(Chronology),2
"org.joda.time.YearMonth.withField(DateTimeFieldType,int)",2
"org.joda.time.YearMonth.withFieldAdded(DurationFieldType,int)",2
"org.joda.time.YearMonth.withPeriodAdded(ReadablePeriod,int)",5
org.joda.time.YearMonth.toString(String),2
"org.joda.time.YearMonth.toString(String,Locale)",2
org.joda.time.DateTimeUtils.setCurrentMillisOffset(long),2
org.joda.time.DateTimeUtils.setCurrentMillisProvider(MillisProvider),2
org.joda.time.DateTimeUtils.checkPermission(),2
org.joda.time.DateTimeUtils.getInstantMillis(ReadableInstant),2
org.joda.time.DateTimeUtils.getInstantChronology(ReadableInstant),3
"org.joda.time.DateTimeUtils.getIntervalChronology(ReadableInstant,ReadableInstant)",6
org.joda.time.DateTimeUtils.getIntervalChronology(ReadableInterval),3
org.joda.time.DateTimeUtils.getReadableInterval(ReadableInterval),2
org.joda.time.DateTimeUtils.getChronology(Chronology),2
org.joda.time.DateTimeUtils.getZone(DateTimeZone),2
org.joda.time.DateTimeUtils.getPeriodType(PeriodType),2
org.joda.time.DateTimeUtils.getDurationMillis(ReadableDuration),2
org.joda.time.DateTimeUtils.isContiguous(ReadablePartial),10
org.joda.time.DateTimeUtils.getDefaultTimeZoneNames(),3
"org.joda.time.DateTimeUtils.put(Map,String,String)",3
org.joda.time.MonthDay.now(DateTimeZone),2
org.joda.time.MonthDay.now(Chronology),2
org.joda.time.MonthDay.fromCalendarFields(Calendar),2
org.joda.time.MonthDay.fromDateFields(Date),2
org.joda.time.MonthDay.readResolve(),2
"org.joda.time.MonthDay.getField(int,Chronology)",3
org.joda.time.MonthDay.withChronologyRetainFields(Chronology),2
"org.joda.time.MonthDay.withField(DateTimeFieldType,int)",2
"org.joda.time.MonthDay.withFieldAdded(DurationFieldType,int)",2
"org.joda.time.MonthDay.withPeriodAdded(ReadablePeriod,int)",5
org.joda.time.MonthDay.toString(String),2
"org.joda.time.MonthDay.toString(String,Locale)",2
org.joda.time.TimeOfDay.fromCalendarFields(Calendar),2
org.joda.time.TimeOfDay.fromDateFields(Date),2
"org.joda.time.TimeOfDay.getField(int,Chronology)",5
org.joda.time.TimeOfDay.withChronologyRetainFields(Chronology),2
"org.joda.time.TimeOfDay.withField(DateTimeFieldType,int)",2
"org.joda.time.TimeOfDay.withFieldAdded(DurationFieldType,int)",2
"org.joda.time.TimeOfDay.withPeriodAdded(ReadablePeriod,int)",5
org.joda.time.YearMonthDay.fromCalendarFields(Calendar),2
org.joda.time.YearMonthDay.fromDateFields(Date),2
"org.joda.time.YearMonthDay.getField(int,Chronology)",4
org.joda.time.YearMonthDay.withChronologyRetainFields(Chronology),2
"org.joda.time.YearMonthDay.withField(DateTimeFieldType,int)",2
"org.joda.time.YearMonthDay.withFieldAdded(DurationFieldType,int)",2
"org.joda.time.YearMonthDay.withPeriodAdded(ReadablePeriod,int)",5
"org.joda.time.YearMonthDay.toDateTime(TimeOfDay,DateTimeZone)",2
org.joda.time.DateTimeZone.setDefault(DateTimeZone),4
org.joda.time.DateTimeZone.forID(String),41
"org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)",51
org.joda.time.DateTimeZone.forOffsetMillis(int),3
org.joda.time.DateTimeZone.forTimeZone(TimeZone),79
"org.joda.time.DateTimeZone.fixedOffsetZone(String,int)",2
org.joda.time.DateTimeZone.getProvider(),3
org.joda.time.DateTimeZone.setProvider(Provider),4
org.joda.time.DateTimeZone.validateProvider(Provider),5
org.joda.time.DateTimeZone.getNameProvider(),3
org.joda.time.DateTimeZone.setNameProvider(NameProvider),4
org.joda.time.DateTimeZone.printOffset(int),6
"org.joda.time.DateTimeZone.getShortName(long,Locale)",10
"org.joda.time.DateTimeZone.getName(long,Locale)",10
org.joda.time.DateTimeZone.getOffset(ReadableInstant),2
org.joda.time.DateTimeZone.isStandardOffset(long),2
org.joda.time.DateTimeZone.getOffsetFromLocal(long),13
org.joda.time.DateTimeZone.convertUTCToLocal(long),3
"org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)",2
"org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)",62
"org.joda.time.DateTimeZone.getMillisKeepLocal(DateTimeZone,long)",4
org.joda.time.DateTimeZone.isLocalDateTimeGap(LocalDateTime),4
"org.joda.time.DateTimeZone.adjustOffset(long,boolean)",7
org.joda.time.Days.days(int),11
"org.joda.time.Days.daysBetween(ReadablePartial,ReadablePartial)",3
org.joda.time.Days.daysIn(ReadableInterval),2
org.joda.time.Days.parseDays(String),2
org.joda.time.Days.plus(int),2
org.joda.time.Days.plus(Days),2
org.joda.time.Days.minus(Days),2
org.joda.time.Days.dividedBy(int),2
"org.joda.time.format.DateTimeParserBucket.doParseMillis(InternalParser,CharSequence)",3
org.joda.time.format.DateTimeParserBucket.getOffset(),2
org.joda.time.format.DateTimeParserBucket.obtainSaveField(),10
org.joda.time.format.DateTimeParserBucket.saveState(),2
org.joda.time.format.DateTimeParserBucket.restoreState(Object),3
"org.joda.time.format.DateTimeParserBucket.compareReverse(DurationField,DurationField)",9
org.joda.time.format.PeriodFormatterBuilder.toFormatter(),3
org.joda.time.format.PeriodFormatterBuilder.toPrinter(),2
org.joda.time.format.PeriodFormatterBuilder.toParser(),2
org.joda.time.format.PeriodFormatterBuilder.clear(),2
org.joda.time.format.PeriodFormatterBuilder.append(PeriodFormatter),2
"org.joda.time.format.PeriodFormatterBuilder.append(PeriodPrinter,PeriodParser)",3
org.joda.time.format.PeriodFormatterBuilder.appendLiteral(String),2
org.joda.time.format.PeriodFormatterBuilder.appendPrefix(String),2
"org.joda.time.format.PeriodFormatterBuilder.appendPrefix(String,String)",3
"org.joda.time.format.PeriodFormatterBuilder.appendPrefix(String[],String[])",5
org.joda.time.format.PeriodFormatterBuilder.appendPrefix(PeriodFieldAffix),3
org.joda.time.format.PeriodFormatterBuilder.appendSuffix(String),2
"org.joda.time.format.PeriodFormatterBuilder.appendSuffix(String,String)",3
"org.joda.time.format.PeriodFormatterBuilder.appendSuffix(String[],String[])",5
org.joda.time.format.PeriodFormatterBuilder.appendSuffix(PeriodFieldAffix),10
"org.joda.time.format.PeriodFormatterBuilder.appendSeparator(String,String,String[],boolean,boolean)",17
"org.joda.time.format.PeriodFormatterBuilder.append0(PeriodPrinter,PeriodParser)",4
"org.joda.time.format.PeriodFormatterBuilder.toFormatter(List,boolean,boolean)",27
org.joda.time.format.PeriodFormatterBuilder.createComposite(List),3
org.apache.commons.lang3.time.StopWatch.get(Supplier),2
org.apache.commons.lang3.time.StopWatch.getNanoTime(),4
org.apache.commons.lang3.time.StopWatch.getSplitNanoTime(),2
org.apache.commons.lang3.time.StopWatch.getStartInstant(),2
org.apache.commons.lang3.time.StopWatch.getStopInstant(),2
org.apache.commons.lang3.time.StopWatch.getT(FailableSupplier),2
org.apache.commons.lang3.time.StopWatch.resume(),2
org.apache.commons.lang3.time.StopWatch.run(Runnable),2
org.apache.commons.lang3.time.StopWatch.runT(FailableRunnable),2
org.apache.commons.lang3.time.StopWatch.split(),2
org.apache.commons.lang3.time.StopWatch.start(),3
org.apache.commons.lang3.time.StopWatch.startResume(),3
org.apache.commons.lang3.time.StopWatch.stop(),5
org.apache.commons.lang3.time.StopWatch.suspend(),2
org.apache.commons.lang3.time.StopWatch.toSplitString(),2
org.apache.commons.lang3.time.StopWatch.toString(),2
org.apache.commons.lang3.time.GmtTimeZone.equals(Object),5
org.apache.commons.lang3.time.CalendarUtils.getMonthDisplayNames(int),2
"org.apache.commons.lang3.time.DurationUtils.accept(FailableBiConsumer,Duration)",3
org.apache.commons.compress.compressors.lzw.LZWInputStream.initializeTables(int),4
"org.apache.commons.compress.compressors.lzw.LZWInputStream.initializeTables(int,int)",4
org.apache.commons.compress.compressors.lzw.LZWInputStream.read(),2
"org.apache.commons.compress.compressors.lzw.LZWInputStream.read(byte[],int,int)",7
"org.apache.commons.compress.compressors.lzw.LZWInputStream.readFromStack(byte[],int,int)",2
org.apache.commons.compress.compressors.lzw.LZWInputStream.readNextCode(),2
"org.apache.commons.compress.compressors.z.ZCompressorInputStream.addEntry(int,byte)",3
org.apache.commons.compress.compressors.z.ZCompressorInputStream.clearEntries(),2
org.apache.commons.compress.compressors.z.ZCompressorInputStream.decompressNextSymbol(),8
org.apache.commons.compress.compressors.z.ZCompressorInputStream.readNextCode(),2
org.apache.commons.compress.compressors.z.ZCompressorInputStream.reAlignReading(),4
org.apache.commons.compress.compressors.xz.XZCompressorInputStream.read(),12
"org.apache.commons.compress.compressors.xz.XZCompressorInputStream.read(byte[],int,int)",6
org.apache.commons.compress.compressors.xz.XZCompressorInputStream.skip(long),3
org.apache.commons.compress.compressors.xz.XZUtils.internalIsXZCompressionAvailable(),3
org.apache.commons.compress.compressors.xz.XZUtils.isXZCompressionAvailable(),3
"org.apache.commons.compress.compressors.xz.XZUtils.matches(byte[],int)",5
org.apache.commons.compress.compressors.xz.XZUtils.setCacheXZAvailablity(boolean),4
org.apache.commons.compress.compressors.CompressorInputStream.count(long),2
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream.close(),2
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream.flushBuffer(),8
"org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream.write(byte[],int,int)",3
org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.fill(),17
"org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.read(byte[],int,int)",12
org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.readLiteralLength(int),6
"org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.matches(byte[],int)",3
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.available(),3
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.close(),4
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.read(),2
"org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.read(byte[],int,int)",4
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readCrc(),2
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readNextBlock(),42
"org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readOnce(byte[],int,int)",11
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readOneByte(),2
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readStreamIdentifier(),3
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.skipBlock(),3
org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.verifyLastChecksumAndReset(),3
org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream.close(),2
org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream.finish(),2
org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream.writeBackReference(BackReference),7
org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream.writeLiteralBlock(LiteralBlock),5
org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.close(),6
org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.finish(),11
"org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.matches(byte[],int)",5
org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.close(),3
org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.mark(int),3
org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.markSupported(),3
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.close(),3
org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.read(),2
"org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.read(byte[],int,int)",2
org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.close(),2
org.apache.commons.compress.compressors.deflate.DeflateParameters.setCompressionLevel(int),3
"org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorOutputStream(String,OutputStream)",64
org.apache.commons.compress.compressors.CompressorStreamFactory.getCompressorInputStreamProviders(),2
org.apache.commons.compress.compressors.CompressorStreamFactory.getCompressorOutputStreamProviders(),2
org.apache.commons.compress.compressors.CompressorStreamFactory.setDecompressConcatenated(boolean),2
org.apache.commons.compress.compressors.zstandard.ZstdUtils.isZstdCompressionAvailable(),3
"org.apache.commons.compress.compressors.zstandard.ZstdUtils.matches(byte[],int)",25
org.apache.commons.compress.compressors.zstandard.ZstdUtils.setCacheZstdAvailablity(boolean),4
org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream.read(),2
"org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream.read(byte[],int,int)",2
org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.hasMoreDataInBlock(),2
org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.prefill(byte[]),2
org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.read(),2
"org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.readBackReference(byte[],int,int)",2
"org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.readFromBuffer(byte[],int,int)",3
"org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.readLiteral(byte[],int,int)",2
org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.readOneByte(),2
"org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.startBackReference(int,long)",4
org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.startLiteral(long),2
org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.tryToCopy(int),7
org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.tryToReadLiteral(int),4
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.catchUpMissedInserts(),2
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.compress(),25
"org.apache.commons.compress.compressors.lz77support.LZ77Compressor.compress(byte[],int,int)",4
"org.apache.commons.compress.compressors.lz77support.LZ77Compressor.doCompress(byte[],int,int)",12
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.finish(),3
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.initialize(),2
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.insertStringsInMatch(int),2
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.longestMatch(int),38
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.longestMatchForNextPosition(int),2
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.prefill(byte[]),5
org.apache.commons.compress.compressors.lz77support.LZ77Compressor.slide(),27
org.apache.commons.compress.compressors.lzma.LZMAUtils.internalIsLZMACompressionAvailable(),3
org.apache.commons.compress.compressors.lzma.LZMAUtils.isLZMACompressionAvailable(),3
"org.apache.commons.compress.compressors.lzma.LZMAUtils.matches(byte[],int)",5
org.apache.commons.compress.compressors.lzma.LZMAUtils.setCacheLZMAAvailablity(boolean),4
org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream.read(),2
org.apache.commons.compress.compressors.FileNameUtil.getCompressedFileName(String),6
org.apache.commons.compress.compressors.FileNameUtil.getUncompressedFileName(String),6
org.apache.commons.compress.compressors.FileNameUtil.isCompressedFileName(String),6
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.bsFinishedWithStream(),2
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.bsW(int,int)",2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.close(),3
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.endBlock(),2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.finish(),12
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.initBlock(),2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues(),15
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues0(int,int)",81
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues2(int,int)",6
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues3(int,int)",6
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues5(int,int)",7
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues6(int,int)",39
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues7(),4
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.write(byte[],int,int)",5
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.write0(int),4
org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.writeRun(),5
"org.apache.commons.compress.compressors.bzip2.BlockSort.blockSort(Data,int)",16
"org.apache.commons.compress.compressors.bzip2.BlockSort.fallbackSort(Data,int)",8
"org.apache.commons.compress.compressors.bzip2.BlockSort.fvswap(int[],int,int,int)",2
org.apache.commons.compress.compressors.bzip2.BlockSort.getEclass(),2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsGetBit(BitInputStream),2
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsR(BitInputStream,int)",2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.close(),3
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.complete(),4
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.createHuffmanDecodingTables(int,int)",6
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.endBlock(),2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.getAndMoveToFrontDecode0(),2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.init(boolean),39
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.makeMaps(),3
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read(),3
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read(byte[],int,int)",13
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read0(),9
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupBlock(),18
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartA(),2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartB(),3
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartC(),2
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupRandPartA(),7
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupRandPartB(),8
org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupRandPartC(),2
"org.apache.commons.compress.compressors.bzip2.CRC.compute(int,int)",2
"org.apache.commons.compress.compressors.bzip2.CRC.update(int,int)",2
org.apache.commons.csv.CSVParser.addRecordValue(boolean),4
org.apache.commons.csv.CSVParser.createEmptyHeaderMap(),2
org.apache.commons.csv.CSVParser.getHeaderMap(),2
org.apache.commons.csv.CSVParser.handleNull(String),8
org.apache.commons.csv.CSVParser.hasHeaderComment(),2
org.apache.commons.csv.CSVParser.hasTrailerComment(),2
org.apache.commons.csv.CSVParser.isStrictQuoteMode(),3
org.apache.commons.csv.CSVPrinter.close(boolean),6
org.apache.commons.csv.CSVPrinter.flush(),2
org.apache.commons.csv.CSVPrinter.printComment(String),14
org.apache.commons.csv.CSVPrinter.printRecordObject(Object),3
"org.apache.commons.csv.CSVPrinter.printRecords(ResultSet,boolean)",2
org.apache.commons.csv.CSVFormat.containsLineBreak(String),3
org.apache.commons.csv.CSVFormat.copy(CSVFormat),2
org.apache.commons.csv.CSVFormat.isLineBreak(Character),3
org.apache.commons.csv.CSVFormat.trim(CharSequence),49
org.apache.commons.csv.CSVFormat.equals(Object),25
org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames(),2
"org.apache.commons.lang3.EnumUtils.getEnumSystemProperty(Class,String,Enum)",3
"org.apache.commons.lang3.EnumUtils.getFirstEnum(Class,int,ToIntFunction,Enum)",2
"org.apache.commons.lang3.EnumUtils.isValidEnum(Class,String)",2
"org.apache.commons.lang3.EnumUtils.isValidEnumIgnoreCase(Class,String)",2
"org.apache.commons.lang3.EnumUtils.processBitVectors(Class,long[])",4
"org.apache.commons.lang3.CharSetUtils.containsAny(String,String[])",6
"org.apache.commons.lang3.CharSetUtils.count(String,String[])",5
"org.apache.commons.lang3.CharSetUtils.delete(String,String[])",3
"org.apache.commons.lang3.CharSetUtils.keep(String,String[])",4
"org.apache.commons.lang3.CharSetUtils.modify(String,String[],boolean)",3
"org.apache.commons.lang3.CharSetUtils.squeeze(String,String[])",15
org.joda.time.MutablePeriod.setPeriod(ReadableInterval),2
"org.joda.time.MutablePeriod.setPeriod(ReadableInstant,ReadableInstant)",2
org.joda.time.MutablePeriod.add(ReadableInterval),2
org.joda.time.MutablePeriod.add(ReadableDuration),2
org.joda.time.Minutes.minutes(int),7
"org.joda.time.Minutes.minutesBetween(ReadablePartial,ReadablePartial)",3
org.joda.time.Minutes.minutesIn(ReadableInterval),2
org.joda.time.Minutes.parseMinutes(String),2
org.joda.time.Minutes.plus(int),2
org.joda.time.Minutes.plus(Minutes),2
org.joda.time.Minutes.minus(Minutes),2
org.joda.time.Minutes.dividedBy(int),2
"org.joda.time.format.FormatUtils.appendPaddedInteger(StringBuffer,int,int)",2
"org.joda.time.format.FormatUtils.appendPaddedInteger(Appendable,int,int)",22
org.apache.commons.csv.CSVFormat.getEscapeChar(),2
org.apache.commons.csv.CSVFormat.getHeader(),2
org.apache.commons.csv.CSVFormat.getHeaderComments(),2
org.apache.commons.csv.CSVFormat.isCommentMarkerSet(),2
org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(),2
org.apache.commons.csv.CSVFormat.isNullStringSet(),2
org.apache.commons.csv.CSVFormat.isQuoteCharacterSet(),2
"org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)",12
"org.apache.commons.csv.CSVFormat.print(Object,CharSequence,Appendable,boolean)",8
"org.apache.commons.csv.CSVFormat.print(Reader,Appendable,boolean)",8
org.apache.commons.csv.CSVFormat.println(Appendable),4
"org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object[])",3
org.apache.commons.csv.CSVFormat.trim(String),2
org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames(boolean),2
org.apache.commons.csv.ExtendedBufferedReader.getEncodedCharLength(int),4
org.apache.commons.csv.ExtendedBufferedReader.getLineNumber(),5
org.apache.commons.csv.ExtendedBufferedReader.read(),24
"org.apache.commons.csv.ExtendedBufferedReader.read(char[],int,int)",10
org.apache.commons.csv.ExtendedBufferedReader.readLine(),37
org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken(Token),3
org.apache.commons.csv.Lexer.isCommentStart(int),2
org.apache.commons.csv.Lexer.isDelimiter(int),8
org.apache.commons.csv.Lexer.isEscape(int),2
org.apache.commons.csv.Lexer.isEscapeDelimiter(),9
org.apache.commons.csv.Lexer.isMetaChar(int),4
org.apache.commons.csv.Lexer.isQuoteChar(int),2
"org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)",18
org.apache.commons.csv.Lexer.readEndOfLine(int),48
org.apache.commons.csv.Lexer.readEscape(),9
org.apache.commons.csv.CSVRecord.get(Enum),2
org.apache.commons.csv.CSVRecord.get(String),6
org.apache.commons.csv.CSVRecord.getHeaderMapRaw(),2
org.apache.commons.csv.CSVRecord.hasComment(),2
org.apache.commons.csv.CSVRecord.isConsistent(),3
org.apache.commons.csv.CSVRecord.isMapped(String),3
org.apache.commons.csv.CSVRecord.isSet(int),3
org.apache.commons.csv.CSVRecord.isSet(String),3
org.apache.commons.csv.CSVRecord.putIn(Map),2
org.apache.commons.jxpath.JXPathContext.getContextFactory(),2
org.apache.commons.jxpath.JXPathContext.getVariables(),2
org.apache.commons.jxpath.JXPathContext.getFunctions(),3
org.apache.commons.jxpath.JXPathContext.getFactory(),3
org.apache.commons.jxpath.JXPathContext.getLocale(),3
"org.apache.commons.jxpath.JXPathContext.setDecimalFormatSymbols(String,DecimalFormatSymbols)",2
org.apache.commons.jxpath.JXPathContext.getDecimalFormatSymbols(String),3
org.apache.commons.jxpath.JXPathContext.isLenient(),3
org.apache.commons.jxpath.JXPathContext.compile(String),2
org.apache.commons.jxpath.JXPathContext.selectSingleNode(String),2
org.apache.commons.jxpath.JXPathContext.selectNodes(String),2
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.<init>(int,int)",4
"com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer.<init>(ByteQuadsCanonicalizer,int,TableInfo,boolean,boolean)",2
"com.fasterxml.jackson.core.util.DefaultIndenter.<init>(String,String)",2
"com.fasterxml.jackson.core.util.RequestPayload.<init>(byte[],String)",4
com.fasterxml.jackson.core.util.RequestPayload.<init>(CharSequence),2
"com.fasterxml.jackson.core.util.JsonParserSequence.<init>(boolean,JsonParser[])",3
"com.fasterxml.jackson.core.util.ByteArrayBuilder.<init>(BufferRecycler,int)",4
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.<init>(String),2
com.fasterxml.jackson.core.util.DefaultPrettyPrinter.<init>(Separators),2
"com.fasterxml.jackson.core.json.JsonWriteContext.<init>(int,JsonWriteContext,DupDetector)",2
"com.fasterxml.jackson.core.json.JsonWriteContext.<init>(int,JsonWriteContext,DupDetector,Object)",2
"com.fasterxml.jackson.core.json.JsonReadContext.<init>(JsonReadContext,DupDetector,int,int,int)",2
com.fasterxml.jackson.core.type.TypeReference.<init>(),2
"com.fasterxml.jackson.core.format.DataFormatMatcher.<init>(InputStream,byte[],int,int,JsonFactory,MatchStrength)",3
"com.fasterxml.jackson.databind.util.TypeKey.<init>(Class,boolean)",2
"com.fasterxml.jackson.databind.util.TypeKey.<init>(JavaType,boolean)",2
"com.fasterxml.jackson.databind.introspect.AnnotatedMethod.<init>(TypeResolutionContext,Method,AnnotationMap,AnnotationMap[])",2
"com.fasterxml.jackson.databind.deser.impl.InnerClassProperty.<init>(SettableBeanProperty,AnnotatedConstructor)",4
"com.fasterxml.jackson.databind.deser.CreatorProperty.<init>(PropertyName,JavaType,PropertyName,TypeDeserializer,Annotations,AnnotatedParameter,int,Object,PropertyMetadata)",2
"com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.<init>(BeanDeserializerBuilder,BeanDescription,JavaType,BeanPropertyMap,Map,Set,boolean,Set,boolean)",2
"com.fasterxml.jackson.databind.deser.AbstractDeserializer.<init>(BeanDeserializerBuilder,BeanDescription,Map,Map)",27
com.fasterxml.jackson.databind.deser.AbstractDeserializer.<init>(BeanDescription),27
"com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer.<init>(JavaType,KeyDeserializer,JsonDeserializer,TypeDeserializer)",2
"com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.<init>(JavaType,JsonDeserializer,TypeDeserializer)",2
"com.fasterxml.jackson.databind.deser.SettableBeanProperty.<init>(PropertyName,JavaType,PropertyName,TypeDeserializer,Annotations,PropertyMetadata)",4
"com.fasterxml.jackson.databind.deser.SettableBeanProperty.<init>(PropertyName,JavaType,PropertyMetadata,JsonDeserializer)",2
"com.fasterxml.jackson.databind.deser.SettableBeanProperty.<init>(SettableBeanProperty,JsonDeserializer,NullValueProvider)",4
com.fasterxml.jackson.databind.module.SimpleModule.<init>(),2
"com.fasterxml.jackson.databind.module.SimpleModule.<init>(String,Version,Map,List)",4
com.fasterxml.jackson.databind.ext.DOMSerializer.<init>(),9
"com.fasterxml.jackson.databind.SerializerProvider.<init>(SerializerProvider,SerializationConfig,SerializerFactory)",2
"com.fasterxml.jackson.databind.ser.AnyGetterWriter.<init>(BeanPropertyWriter,BeanProperty,AnnotatedMember,JsonSerializer)",2
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.<init>(JavaType,BeanSerializerBuilder,BeanPropertyWriter[],BeanPropertyWriter[])",2
"com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.<init>(BeanSerializerBase,Set,Set)",16
com.fasterxml.jackson.databind.ser.std.BooleanSerializer.<init>(boolean),2
"com.fasterxml.jackson.databind.ser.std.MapProperty.<init>(TypeSerializer,BeanProperty)",4
"com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase.<init>(Class,JavaType,boolean,TypeSerializer,BeanProperty,JsonSerializer,Boolean)",4
"com.fasterxml.jackson.databind.ObjectWriter.<init>(ObjectMapper,SerializationConfig,JavaType,PrettyPrinter)",6
"com.fasterxml.jackson.databind.ObjectWriter.<init>(ObjectMapper,SerializationConfig,FormatSchema)",2
"com.fasterxml.jackson.databind.MappingIterator.<init>(JavaType,JsonParser,DeserializationContext,JsonDeserializer,boolean,Object)",16
"com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver.<init>(JavaType,TypeFactory,PolymorphicTypeValidator)",2
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.<init>(StdSubtypeResolver),2
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.<init>(Value),2
"com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.<init>(AsPropertyTypeDeserializer,BeanProperty)",2
"com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.<init>(JavaType,TypeIdResolver,String,boolean,JavaType,As,boolean)",2
"com.fasterxml.jackson.databind.jsontype.NamedType.<init>(Class,String)",2
"com.fasterxml.jackson.dataformat.xml.util.XmlInfo.<init>(Boolean,String,Boolean,Boolean)",16
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.<init>(XmlReadContext,int,int,int)",2
"org.apache.commons.codec.binary.Base64.<init>(int,byte[],byte,byte[],CodecPolicy)",25
"org.apache.commons.codec.binary.BaseNCodec.<init>(int,int,int,int,byte,CodecPolicy)",6
"org.apache.commons.codec.binary.Base16.<init>(boolean,byte[],CodecPolicy)",2
"org.apache.commons.codec.binary.Base16.<init>(boolean,CodecPolicy)",2
"org.apache.commons.codec.binary.BaseNCodecInputStream.<init>(InputStream,BaseNCodec,boolean)",2
"org.apache.commons.collections4.map.MultiValueMap.<init>(Map,Factory)",2
"org.apache.commons.collections4.map.LRUMap.<init>(int,int,float,boolean)",3
"org.apache.commons.collections4.map.CompositeMap.<init>(Map[],MapMutator)",2
"org.apache.commons.collections4.keyvalue.MultiKey.<init>(Object[],boolean)",2
"com.fasterxml.jackson.core.Base64Variant.<init>(String,String,boolean,char,int)",9
"com.fasterxml.jackson.core.filter.FilteringParserDelegate.<init>(JsonParser,TokenFilter,boolean,boolean)",2
"com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate.<init>(JsonGenerator,TokenFilter,boolean,boolean)",2
"com.fasterxml.jackson.core.filter.TokenFilterContext.<init>(int,TokenFilterContext,TokenFilter,boolean)",2
"com.fasterxml.jackson.core.Version.<init>(int,int,int,String,String,String)",4
"com.fasterxml.jackson.core.base.GeneratorBase.<init>(int,ObjectCodec,IOContext)",2
com.fasterxml.jackson.core.base.ParserMinimalBase.<init>(StreamReadConstraints),2
"com.fasterxml.jackson.core.base.ParserMinimalBase.<init>(int,StreamReadConstraints)",2
"com.fasterxml.jackson.core.io.UTF32Reader.<init>(IOContext,InputStream,byte[],int,int,boolean)",2
"com.fasterxml.jackson.databind.JsonMappingException.<init>(Closeable,String)",2
"com.fasterxml.jackson.databind.JsonMappingException.<init>(Closeable,String,Throwable)",3
"com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.<init>(Deserializers[],KeyDeserializers[],BeanDeserializerModifier[],AbstractTypeResolver[],ValueInstantiators[])",32
"com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.<init>(Serializers[],Serializers[],BeanSerializerModifier[])",8
com.fasterxml.jackson.databind.introspect.MemberKey.<init>(Method),2
com.fasterxml.jackson.databind.introspect.MemberKey.<init>(Constructor),2
"com.fasterxml.jackson.databind.introspect.MemberKey.<init>(String,Class[])",2
"com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector.<init>(AnnotationIntrospector,MixInResolver,boolean)",2
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.<init>(PropertyMetadata),2
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.<init>(MapperConfig,JavaType,MixInResolver)",12
"com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.<init>(MapperConfig,Class,MixInResolver)",15
"com.fasterxml.jackson.databind.introspect.BasicBeanDescription.<init>(POJOPropertiesCollector,JavaType,AnnotatedClass)",2
"com.fasterxml.jackson.databind.introspect.BasicBeanDescription.<init>(MapperConfig,JavaType,AnnotatedClass,List)",2
"com.fasterxml.jackson.databind.introspect.ObjectIdInfo.<init>(PropertyName,Class,Class,boolean,Class)",2
"com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector.<init>(MapperConfig,boolean,JavaType,AnnotatedClass,AccessorNamingStrategy)",2
"com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector.<init>(AnnotationIntrospector,TypeFactory,MixInResolver,boolean)",2
"com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.<init>(ElementWrapper,String,String)",2
"com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.<init>(IOContext,int,int,ObjectCodec,XMLStreamReader,XmlNameProcessor)",7
"com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec,int,int,XMLInputFactory,XMLOutputFactory,String,XmlNameProcessor)",4
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.<init>(IOContext,int,int,ObjectCodec,XMLStreamWriter,XmlNameProcessor)",4
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter.<init>(BeanPropertyWriter,PropertyName,PropertyName,JsonSerializer)",2
"com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XmlFactory,JacksonXmlModule)",3
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer.<init>(EnumResolver,boolean,EnumResolver)",2
"com.fasterxml.jackson.databind.deser.std.EnumDeserializer.<init>(EnumResolver,boolean,EnumResolver,EnumResolver)",4
"com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.<init>(JavaType,JsonDeserializer)",2
com.fasterxml.jackson.databind.deser.std.StdDeserializer.<init>(JavaType),2
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.<init>(DeserializationConfig,Class)",2
"com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.<init>(DeserializationConfig,JavaType)",4
"com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer.<init>(Class,AnnotatedMethod,JavaType,ValueInstantiator,SettableBeanProperty[])",3
"com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase.<init>(Class,Boolean,DateFormat)",2
com.fasterxml.jackson.databind.ser.std.NumberSerializer.<init>(Class),2
"com.fasterxml.jackson.databind.ser.std.MapSerializer.<init>(Set,Set,JavaType,JavaType,boolean,TypeSerializer,JsonSerializer,JsonSerializer)",3
"com.fasterxml.jackson.databind.ser.std.MapSerializer.<init>(MapSerializer,BeanProperty,JsonSerializer,JsonSerializer,Set,Set)",3
"com.fasterxml.jackson.databind.ser.std.CollectionSerializer.<init>(JavaType,boolean,TypeSerializer,JsonSerializer)",3
com.fasterxml.jackson.databind.ser.BasicSerializerFactory.<init>(SerializerFactoryConfig),2
"com.fasterxml.jackson.databind.ser.PropertyBuilder.<init>(SerializationConfig,BeanDescription)",2
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<init>(BeanPropertyDefinition,AnnotatedMember,Annotations,JavaType,JsonSerializer,TypeSerializer,JavaType,boolean,Object,Class[])",6
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<init>(BeanPropertyWriter,PropertyName)",2
"com.fasterxml.jackson.databind.ser.BeanPropertyWriter.<init>(BeanPropertyWriter,SerializedString)",2
"org.apache.commons.collections4.collection.PredicatedCollection.<init>(Collection,Predicate)",2
"org.apache.commons.collections4.functors.SwitchTransformer.<init>(boolean,Predicate[],Transformer[],Transformer)",8
"org.apache.commons.collections4.functors.ChainedClosure.<init>(boolean,Closure[])",2
"org.apache.commons.collections4.functors.InvokerTransformer.<init>(String,Class[],Object[])",4
"org.apache.commons.collections4.functors.ChainedTransformer.<init>(boolean,Transformer[])",2
"org.apache.commons.collections4.functors.SwitchClosure.<init>(boolean,Predicate[],Closure[],Closure)",8
"com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.<init>(IOContext,int,ObjectCodec,Writer,char)",3
"com.fasterxml.jackson.core.json.JsonGeneratorImpl.<init>(IOContext,int,ObjectCodec)",4
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.<init>(IOContext,int,ObjectCodec,OutputStream,char)",6
"com.fasterxml.jackson.core.json.UTF8JsonGenerator.<init>(IOContext,int,ObjectCodec,OutputStream,char,byte[],int,boolean)",3
"org.apache.commons.compress.harmony.pack200.ClassBands.<init>(Segment,int,int,boolean)",2
org.apache.commons.collections4.list.TreeList.<init>(Collection),2
"com.fasterxml.jackson.databind.type.TypeFactory.<init>(LookupCache,TypeParser,TypeModifier[],ClassLoader)",2
"com.fasterxml.jackson.databind.type.TypeBindings.<init>(String[],JavaType[],String[])",8
"com.fasterxml.jackson.databind.type.ReferenceType.<init>(Class,TypeBindings,JavaType,JavaType[],JavaType,JavaType,Object,Object,boolean)",2
"com.fasterxml.jackson.databind.type.TypeBase.<init>(Class,TypeBindings,JavaType,JavaType[],int,Object,Object,boolean)",2
"com.fasterxml.jackson.databind.type.SimpleType.<init>(Class,TypeBindings,JavaType,JavaType[],Object,Object,boolean)",2
"com.fasterxml.jackson.core.base.ParserBase.<init>(IOContext,int)",2
"com.fasterxml.jackson.core.JsonLocation.<init>(ContentReference,long,long,int,int)",2
"com.fasterxml.jackson.databind.util.TokenBuffer.<init>(ObjectCodec,boolean)",3
"com.fasterxml.jackson.databind.util.TokenBuffer.<init>(JsonParser,DeserializationContext)",6
"com.fasterxml.jackson.databind.util.TokenBufferReadContext.<init>(JsonStreamContext,ContentReference)",2
"com.fasterxml.jackson.databind.introspect.PotentialCreator.<init>(AnnotatedWithParams,Mode)",4
"com.fasterxml.jackson.databind.DeserializationContext.<init>(DeserializerFactory,DeserializerCache)",2
"com.fasterxml.jackson.databind.DeserializationContext.<init>(DeserializationContext,DeserializationConfig,JsonParser,InjectableValues)",2
"com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer.<init>(JsonParser,DeserializationContext,int,ObjectIdReader,SettableAnyProperty)",6
"com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.<init>(BeanPropertyMap,SettableBeanProperty,String,int)",4
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider.<init>(Object),2
com.fasterxml.jackson.databind.deser.impl.FieldProperty.<init>(FieldProperty),2
"org.apache.commons.collections4.functors.InstantiateTransformer.<init>(Class[],Object[])",4
"org.apache.commons.collections4.comparators.ComparatorChain.<init>(Comparator,boolean)",2
org.apache.commons.collections4.comparators.ReverseComparator.<init>(Comparator),2
org.apache.commons.collections4.comparators.FixedOrderComparator.<init>(List),2
org.apache.commons.collections4.comparators.FixedOrderComparator.<init>(Object[]),2
org.apache.commons.compress.harmony.unpack200.SegmentOptions.<init>(int),2
org.apache.commons.compress.harmony.unpack200.AttributeLayoutMap.<init>(),2
"org.apache.commons.compress.harmony.unpack200.AttributeLayout.<init>(String,int,String,int,boolean)",26
"org.apache.commons.compress.harmony.unpack200.bytecode.CPMember.<init>(CPUTF8,CPUTF8,long,List)",2
"com.fasterxml.jackson.databind.node.BinaryNode.<init>(byte[],int,int)",3
"org.apache.commons.codec.language.bm.PhoneticEngine.<init>(NameType,RuleType,boolean,int)",2
org.apache.commons.codec.language.Soundex.<init>(char[]),2
org.apache.commons.codec.language.Soundex.<init>(String),2
org.apache.commons.collections4.queue.CircularFifoQueue.<init>(int),2
org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher.<init>(byte[]),2
"org.apache.commons.collections4.bloomfilter.IndexFilter.<init>(Shape,IntPredicate)",2
"org.apache.commons.collections4.bloomfilter.LayerManager.<init>(Supplier,Predicate,Consumer,boolean)",2
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.<init>(BeanDeserializerBuilder,BeanDescription,BeanPropertyMap,Map,Set,boolean,Set,boolean)",75
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.<init>(BeanDeserializerBase,NameTransformer)",15
"com.fasterxml.jackson.databind.deser.BeanDeserializerBase.<init>(BeanDeserializerBase,ObjectIdReader)",2
"org.apache.commons.compress.archivers.ar.ArArchiveEntry.<init>(Path,String,LinkOption[])",2
"org.apache.commons.compress.archivers.ar.ArArchiveEntry.<init>(String,long,int,int,int,long)",2
"org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.<init>(InputStream,String)",17
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.<init>(OutputStream,int,int,String)",2
"org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.<init>(OutputStream,int,String)",6
"org.apache.commons.compress.archivers.tar.TarFile.<init>(SeekableByteChannel,int,int,String,boolean)",2
"org.apache.commons.compress.archivers.tar.TarArchiveStructSparse.<init>(long,long)",3
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.<init>(String,boolean)",4
"org.apache.commons.compress.archivers.tar.TarArchiveEntry.<init>(String,byte,boolean)",2
"org.apache.commons.compress.harmony.pack200.RunCodec.<init>(int,Codec,Codec)",4
"org.apache.commons.compress.harmony.pack200.PopulationCodec.<init>(Codec,int,Codec)",3
"org.apache.commons.compress.harmony.pack200.Archive.<init>(JarFile,OutputStream,PackingOptions)",4
"org.apache.commons.compress.harmony.pack200.Archive.<init>(JarInputStream,OutputStream,PackingOptions)",4
"org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.<init>(InputStream,String)",22
"org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.<init>(SeekableByteChannel,char[])",2
"org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration.<init>(SevenZMethod,Object)",3
"com.fasterxml.jackson.databind.ObjectMapper.<init>(ObjectMapper,JsonFactory)",4
"com.fasterxml.jackson.databind.ObjectMapper.<init>(JsonFactory,DefaultSerializerProvider,DefaultDeserializationContext)",24
"com.fasterxml.jackson.databind.PropertyMetadata.<init>(Boolean,String,Integer,String,MergeInfo,Nulls,Nulls)",3
"com.fasterxml.jackson.databind.exc.InvalidDefinitionException.<init>(JsonParser,String,BeanDescription,BeanPropertyDefinition)",2
"com.fasterxml.jackson.databind.exc.InvalidDefinitionException.<init>(JsonGenerator,String,BeanDescription,BeanPropertyDefinition)",2
"com.fasterxml.jackson.databind.exc.InvalidNullException.<init>(DeserializationContext,String,PropertyName)",2
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.<init>(Map),4
"com.fasterxml.jackson.databind.util.TokenBufferReadContext.<init>(JsonStreamContext,Object)",2
"com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition.<init>(AnnotationIntrospector,AnnotatedMember,PropertyName,PropertyMetadata,Value)",2
"org.apache.commons.jxpath.servlet.KeywordVariables.<init>(String,Object)",2
"org.apache.commons.jxpath.ri.axes.PredicateContext.<init>(EvalContext,Expression)",2
org.apache.commons.jxpath.ri.axes.InitialContext.<init>(EvalContext),3
"org.apache.commons.jxpath.ri.axes.RootContext.<init>(JXPathContextReferenceImpl,NodePointer)",2
"com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator.<init>(DeserializationContext,ValueInstantiator,SettableBeanProperty[],boolean,boolean)",36
"org.joda.time.Partial.<init>(DateTimeFieldType,int,Chronology)",2
org.joda.time.Partial.<init>(ReadablePartial),3
org.apache.commons.collections4.iterators.IteratorChain.<init>(Collection),2
org.apache.commons.collections4.iterators.IteratorChain.<init>(Iterator[]),2
org.apache.commons.collections4.iterators.CartesianProductIterator.<init>(Iterable[]),4
com.fasterxml.jackson.databind.MappingJsonFactory.<init>(ObjectMapper),2
"com.fasterxml.jackson.databind.MappingJsonFactory.<init>(JsonFactory,ObjectMapper)",2
"org.apache.commons.collections4.map.AbstractHashedMap.<init>(int,float)",4
org.apache.commons.collections4.map.SingletonMap.<init>(Map),2
"org.apache.commons.compress.harmony.unpack200.bytecode.CodeAttribute.<init>(int,int,byte[],Segment,OperandManager,List)",18
"org.apache.commons.compress.harmony.unpack200.Archive.<init>(InputStream,JarOutputStream)",2
org.apache.commons.compress.harmony.pack200.CPClass.<init>(CPUTF8),4
org.apache.commons.codec.cli.Digest.<init>(String[]),3
"org.apache.commons.codec.binary.Base32.<init>(int,byte[],byte[],byte,CodecPolicy)",16
"org.apache.commons.lang3.CachedRandomBits.<init>(int,Random)",2
"org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.<init>(SeekableByteChannel,long)",3
"org.apache.commons.compress.archivers.sevenz.AES256Options.<init>(char[],byte[],byte[],int)",7
"org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.<init>(Path,OpenOption[])",2
"org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField.<init>(int,boolean,int)",4
org.apache.commons.compress.archivers.zip.BinaryTree.<init>(int),3
"org.apache.commons.compress.archivers.zip.ZipSplitOutputStream.<init>(Path,long)",3
"org.apache.commons.compress.archivers.zip.ExplodingInputStream.<init>(int,int,InputStream)",7
org.apache.commons.compress.archivers.zip.UnshrinkingInputStream.<init>(InputStream),2
org.joda.time.chrono.GJLocaleSymbols.<init>(Locale),4
"org.joda.time.chrono.BasicChronology.<init>(Chronology,Object,int)",3
org.apache.commons.lang3.BitField.<init>(int),2
"org.apache.commons.lang3.CharRange.<init>(char,char,boolean)",2
org.apache.commons.jxpath.ri.parser.XPathParser.<init>(InputStream),4
org.apache.commons.jxpath.ri.parser.XPathParser.<init>(Reader),4
org.apache.commons.jxpath.ri.parser.XPathParser.<init>(XPathParserTokenManager),4
"org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator.<init>(PropertyOwnerPointer,QName)",20
"org.apache.commons.jxpath.ri.model.beans.PropertyIterator.<init>(PropertyOwnerPointer,String,boolean,NodePointer)",58
"org.apache.commons.lang3.concurrent.TimedSemaphore.<init>(ScheduledExecutorService,long,TimeUnit,int)",2
org.apache.commons.lang3.concurrent.BasicThreadFactory.<init>(Builder),2
"org.apache.commons.lang3.Range.<init>(Object,Object,Comparator)",4
org.apache.commons.lang3.text.translate.NumericEntityUnescaper.<init>(OPTION[]),2
org.apache.commons.lang3.text.translate.LookupTranslator.<init>(CharSequence[][]),6
org.apache.commons.collections4.iterators.ZippingIterator.<init>(Iterator[]),2
"org.apache.commons.collections4.iterators.CollatingIterator.<init>(Comparator,Collection)",2
"org.apache.commons.collections4.iterators.CollatingIterator.<init>(Comparator,Iterator[])",2
"org.apache.commons.collections4.iterators.BoundedIterator.<init>(Iterator,long,long)",3
"org.apache.commons.collections4.iterators.ObjectGraphIterator.<init>(Object,Transformer)",2
"org.apache.commons.collections4.iterators.ArrayIterator.<init>(Object,int,int)",2
org.apache.commons.collections4.iterators.PermutationIterator.<init>(Collection),2
"org.apache.commons.collections4.iterators.ObjectArrayIterator.<init>(Object[],int,int)",5
"org.apache.commons.collections4.iterators.IteratorIterable.<init>(Iterator,boolean)",3
"org.apache.commons.collections4.iterators.SkippingIterator.<init>(Iterator,long)",2
org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.<init>(Path),7
"org.apache.commons.compress.harmony.unpack200.IcTuple.<init>(String,int,String,String,int,int,int,int)",4
"org.apache.commons.compress.harmony.pack200.BHSDCodec.<init>(int,int,int,int)",19
org.apache.commons.compress.harmony.pack200.IntList.<init>(int),2
"org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.<init>(ExecutorService,ScatterGatherBackingStoreSupplier,int)",5
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.<init>(Function,File,String)",7
"org.apache.commons.compress.archivers.zip.ZipArchiveEntry.<init>(Function,ZipEntry)",2
org.apache.commons.compress.archivers.zip.ZipArchiveEntry.<init>(ZipArchiveEntry),2
"org.apache.commons.compress.archivers.ar.ArArchiveEntry.<init>(File,String)",2
org.joda.time.tz.ZoneInfoProvider.<init>(File),4
"org.joda.time.tz.ZoneInfoProvider.<init>(String,ClassLoader,boolean)",7
"org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.<init>(NodePointer,NodeTest,boolean,NodePointer)",2
"org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.<init>(NodePointer,QName)",6
"org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator.<init>(NodePointer,QName)",27
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.<init>(NodePointer),4
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.<init>(NodePointer,NodeTest,boolean,NodePointer)",6
org.apache.commons.jxpath.ri.QName.<init>(String),4
"org.apache.commons.jxpath.ri.QName.<init>(String,String)",2
org.apache.commons.lang3.text.StrBuilder.<init>(int),2
org.apache.commons.lang3.text.StrBuilder.<init>(String),2
org.apache.commons.lang3.text.StrTokenizer.<init>(String),2
"org.joda.time.base.BasePeriod.<init>(ReadableInstant,ReadableInstant,PeriodType)",3
"org.joda.time.base.BasePeriod.<init>(ReadablePartial,ReadablePartial,PeriodType)",24
"org.joda.time.base.BasePeriod.<init>(Object,PeriodType,Chronology)",4
"org.joda.time.base.BaseInterval.<init>(ReadableInstant,ReadableInstant)",3
"org.joda.time.base.BaseInterval.<init>(ReadableInstant,ReadablePeriod)",2
"org.joda.time.base.BaseInterval.<init>(ReadablePeriod,ReadableInstant)",2
"org.joda.time.base.BaseInterval.<init>(Object,Chronology)",4
"org.joda.time.base.BaseDuration.<init>(ReadableInstant,ReadableInstant)",2
"org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.<init>(OutputStream,short,int,String)",2
"org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.<init>(InputStream,int,String)",2
org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.<init>(short),5
"org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.<init>(short,File,String)",6
"org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.<init>(short,Path,String,LinkOption[])",6
"org.apache.commons.compress.utils.BoundedArchiveInputStream.<init>(long,long)",2
"org.apache.commons.compress.utils.FixedLengthBlockOutputStream.<init>(OutputStream,int)",2
"org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream.<init>(OutputStream,Parameters)",4
org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.<init>(Builder),8
"org.apache.commons.lang3.AppendableJoiner.<init>(CharSequence,CharSequence,CharSequence,FailableBiConsumer)",2
"org.apache.commons.lang3.time.FastDateParser.<init>(String,TimeZone,Locale,Date)",3
"org.joda.time.field.OffsetDateTimeField.<init>(DateTimeField,int)",2
"org.joda.time.field.OffsetDateTimeField.<init>(DateTimeField,DateTimeFieldType,int,int,int)",5
"org.joda.time.field.SkipDateTimeField.<init>(Chronology,DateTimeField,int)",3
"org.joda.time.field.SkipUndoDateTimeField.<init>(Chronology,DateTimeField,int)",3
"org.joda.time.field.ScaledDurationField.<init>(DurationField,DurationFieldType,int)",3
"org.joda.time.field.PreciseDateTimeField.<init>(DateTimeFieldType,DurationField,DurationField)",3
"org.joda.time.field.PreciseDurationDateTimeField.<init>(DateTimeFieldType,DurationField)",3
"org.joda.time.field.ZeroIsMaxDateTimeField.<init>(DateTimeField,DateTimeFieldType)",2
"org.joda.time.field.DecoratedDurationField.<init>(DurationField,DurationFieldType)",3
"org.joda.time.field.DividedDateTimeField.<init>(DateTimeField,DurationField,DateTimeFieldType,int)",9
"org.joda.time.field.DividedDateTimeField.<init>(RemainderDateTimeField,DurationField,DateTimeFieldType)",4
"org.joda.time.field.RemainderDateTimeField.<init>(DateTimeField,DateTimeFieldType,int)",3
"org.joda.time.field.RemainderDateTimeField.<init>(DateTimeField,DurationField,DateTimeFieldType,int)",2
"org.joda.time.field.DecoratedDateTimeField.<init>(DateTimeField,DateTimeFieldType)",3
"org.joda.time.field.DelegatedDurationField.<init>(DurationField,DurationFieldType)",3
org.joda.time.field.BaseDurationField.<init>(DurationFieldType),2
"org.joda.time.field.UnsupportedDateTimeField.<init>(DateTimeFieldType,DurationField)",3
org.joda.time.field.BaseDateTimeField.<init>(DateTimeFieldType),2
"org.apache.commons.jxpath.xml.DocumentContainer.<init>(URL,String)",2
"org.apache.commons.lang3.builder.HashCodeBuilder.<init>(int,int)",4
"org.apache.commons.lang3.builder.DiffBuilder.<init>(Object,Object,ToStringStyle,boolean,String)",6
"org.apache.commons.lang3.builder.ToStringBuilder.<init>(Object,ToStringStyle,StringBuffer)",4
"org.apache.commons.lang3.exception.ContextedException.<init>(String,Throwable,ExceptionContext)",2
"org.apache.commons.lang3.exception.ContextedRuntimeException.<init>(String,Throwable,ExceptionContext)",2
"org.joda.time.field.DelegatedDateTimeField.<init>(DateTimeField,DurationField,DateTimeFieldType)",3
org.joda.time.DateTimeZone.<init>(String),2
"org.joda.time.format.DateTimeParserBucket.<init>(long,Chronology,Locale,Integer,int)",2
"org.apache.commons.lang3.time.GmtTimeZone.<init>(boolean,int,int)",6
"org.apache.commons.compress.compressors.z.ZCompressorInputStream.<init>(InputStream,int)",7
"org.apache.commons.compress.compressors.xz.XZCompressorInputStream.<init>(InputStream,boolean,int)",2
"org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.<init>(InputStream,int,FramedSnappyDialect)",3
"org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.<init>(InputStream,File,Pack200Strategy,Map)",28
"org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.<init>(InputStream,DeflateParameters)",2
"org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.<init>(OutputStream,DeflateParameters)",2
"org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream.<init>(InputStream,int)",2
"org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream.<init>(InputStream,int)",9
"org.apache.commons.compress.compressors.FileNameUtil.<init>(Map,String)",21
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.<init>(OutputStream,int)",3
"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.<init>(InputStream,boolean)",2
"org.apache.commons.csv.CSVPrinter.<init>(Appendable,CSVFormat)",9
"org.apache.commons.csv.ExtendedBufferedReader.<init>(Reader,Charset,boolean)",3
"org.apache.commons.csv.CSVRecord.<init>(CSVParser,String[],String,long,long,long)",2
