package_name,class_name,method_name,method_signature,method_FEN,missed_instr,covered_instr,percentage_instr,missed_branches,covered_branches,percentage_branches,complexity,missed_lines,covered_lines,percentage_lines,missed_methods,covered_methods,percentage_methods
org/apache/commons/csv,org/apache/commons/csv/Constants,<clinit>,() → void,org.apache.commons.csv.Constants.<clinit>(),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,<init>,(java.io.Reader) → void,org.apache.commons.csv.ExtendedBufferedReader.<init>(Reader),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,<init>,"(java.io.Reader, java.nio.charset.Charset, boolean) → void","org.apache.commons.csv.ExtendedBufferedReader.<init>(Reader,Charset,boolean)",3,17,0.85,2,2,0.5,3,0,5,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,close,() → void,org.apache.commons.csv.ExtendedBufferedReader.close(),6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,getBytesRead,() → long,org.apache.commons.csv.ExtendedBufferedReader.getBytesRead(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,getEncodedCharLength,(int) → int,org.apache.commons.csv.ExtendedBufferedReader.getEncodedCharLength(int),51,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,getLastChar,() → int,org.apache.commons.csv.ExtendedBufferedReader.getLastChar(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,getLineNumber,() → long,org.apache.commons.csv.ExtendedBufferedReader.getLineNumber(),24,0,0.0,8,0,0.0,5,3,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,getPosition,() → long,org.apache.commons.csv.ExtendedBufferedReader.getPosition(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,mark,(int) → void,org.apache.commons.csv.ExtendedBufferedReader.mark(int),20,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,read,() → int,org.apache.commons.csv.ExtendedBufferedReader.read(),58,0,0.0,16,0,0.0,9,8,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,read,"(char[], int, int) → int","org.apache.commons.csv.ExtendedBufferedReader.read(char[],int,int)",82,0,0.0,16,0,0.0,9,16,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,readLine,() → java.lang.String,org.apache.commons.csv.ExtendedBufferedReader.readLine(),44,0,0.0,12,0,0.0,7,13,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/ExtendedBufferedReader,reset,() → void,org.apache.commons.csv.ExtendedBufferedReader.reset(),19,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,create,() → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.create(),0,14,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,create,(org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.create(CSVFormat),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,<init>,(org.apache.commons.csv.CSVFormat) → void,org.apache.commons.csv.CSVFormat$Builder.<init>(CSVFormat),0,91,1.0,0,0,coverage not available since no branches,1,0,24,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,build,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat$Builder.build(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,get,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat$Builder.get(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setAllowDuplicateHeaderNames,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setAllowDuplicateHeaderNames(boolean),0,10,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setAllowMissingColumnNames,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setAllowMissingColumnNames(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setAutoFlush,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setAutoFlush(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setCommentMarker,(char) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setCommentMarker(char),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setCommentMarker,(java.lang.Character) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setCommentMarker(Character),5,8,0.6153846153846154,1,1,0.5,2,1,3,0.75,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setDelimiter,(char) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setDelimiter(char),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setDelimiter,(java.lang.String) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setDelimiter(String),5,16,0.7619047619047619,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setDuplicateHeaderMode,(org.apache.commons.csv.DuplicateHeaderMode) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setDuplicateHeaderMode(DuplicateHeaderMode),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setEscape,(char) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setEscape(char),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setEscape,(java.lang.Character) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setEscape(Character),5,8,0.6153846153846154,1,1,0.5,2,1,3,0.75,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setHeader,(java.lang.Class) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setHeader(Class),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setHeader,(java.sql.ResultSet) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setHeader(ResultSet),3,6,0.6666666666666666,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setHeader,(java.sql.ResultSetMetaData) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setHeader(ResultSetMetaData),21,8,0.27586206896551724,3,1,0.25,3,4,3,0.42857142857142855,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setHeader,(java.lang.String[]) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setHeader(String[]),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setHeaderComments,(java.lang.Object[]) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setHeaderComments(Object[]),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setHeaderComments,(java.lang.String[]) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setHeaderComments(String[]),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setIgnoreEmptyLines,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setIgnoreEmptyLines(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setIgnoreHeaderCase,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setIgnoreHeaderCase(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setIgnoreSurroundingSpaces,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setIgnoreSurroundingSpaces(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setLenientEof,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setLenientEof(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setMaxRows,(long) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setMaxRows(long),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setNullString,(java.lang.String) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setNullString(String),0,19,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setQuote,(char) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setQuote(char),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setQuote,(java.lang.Character) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setQuote(Character),5,8,0.6153846153846154,1,1,0.5,2,1,3,0.75,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setQuoteMode,(org.apache.commons.csv.QuoteMode) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setQuoteMode(QuoteMode),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setRecordSeparator,(char) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setRecordSeparator(char),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setRecordSeparator,(java.lang.String) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setRecordSeparator(String),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setSkipHeaderRecord,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setSkipHeaderRecord(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setTrailingData,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setTrailingData(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setTrailingDelimiter,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setTrailingDelimiter(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,setTrim,(boolean) → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat$Builder.setTrim(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Builder,lambda$setHeader$0,"(java.lang.Enum[], int) → java.lang.String","org.apache.commons.csv.CSVFormat$Builder.lambda$setHeader$0(Enum[],int)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$CSVRecordIterator,<init>,(org.apache.commons.csv.CSVParser) → void,org.apache.commons.csv.CSVParser$CSVRecordIterator.<init>(CSVParser),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$CSVRecordIterator,getNextRecord,() → org.apache.commons.csv.CSVRecord,org.apache.commons.csv.CSVParser$CSVRecordIterator.getNextRecord(),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$CSVRecordIterator,hasNext,() → boolean,org.apache.commons.csv.CSVParser$CSVRecordIterator.hasNext(),20,0,0.0,6,0,0.0,4,5,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$CSVRecordIterator,next,() → org.apache.commons.csv.CSVRecord,org.apache.commons.csv.CSVParser$CSVRecordIterator.next(),29,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$CSVRecordIterator,remove,() → void,org.apache.commons.csv.CSVParser$CSVRecordIterator.remove(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,<init>,"(org.apache.commons.csv.CSVParser, java.lang.String[], java.lang.String, long, long, long) → void","org.apache.commons.csv.CSVRecord.<init>(CSVParser,String[],String,long,long,long)",25,0,0.0,2,0,0.0,2,8,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,get,(java.lang.Enum) → java.lang.String,org.apache.commons.csv.CSVRecord.get(Enum),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,get,(int) → java.lang.String,org.apache.commons.csv.CSVRecord.get(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,get,(java.lang.String) → java.lang.String,org.apache.commons.csv.CSVRecord.get(String),64,0,0.0,4,0,0.0,3,11,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,getBytePosition,() → long,org.apache.commons.csv.CSVRecord.getBytePosition(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,getCharacterPosition,() → long,org.apache.commons.csv.CSVRecord.getCharacterPosition(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,getComment,() → java.lang.String,org.apache.commons.csv.CSVRecord.getComment(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,getHeaderMapRaw,() → java.util.Map,org.apache.commons.csv.CSVRecord.getHeaderMapRaw(),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,getParser,() → org.apache.commons.csv.CSVParser,org.apache.commons.csv.CSVRecord.getParser(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,getRecordNumber,() → long,org.apache.commons.csv.CSVRecord.getRecordNumber(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,hasComment,() → boolean,org.apache.commons.csv.CSVRecord.hasComment(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,isConsistent,() → boolean,org.apache.commons.csv.CSVRecord.isConsistent(),15,0,0.0,4,0,0.0,3,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,isMapped,(java.lang.String) → boolean,org.apache.commons.csv.CSVRecord.isMapped(String),13,0,0.0,4,0,0.0,3,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,isSet,(int) → boolean,org.apache.commons.csv.CSVRecord.isSet(int),12,0,0.0,4,0,0.0,3,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,isSet,(java.lang.String) → boolean,org.apache.commons.csv.CSVRecord.isSet(String),18,0,0.0,4,0,0.0,3,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,iterator,() → java.util.Iterator,org.apache.commons.csv.CSVRecord.iterator(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,putIn,(java.util.Map) → java.util.Map,org.apache.commons.csv.CSVRecord.putIn(Map),13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,size,() → int,org.apache.commons.csv.CSVRecord.size(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,stream,() → java.util.stream.Stream,org.apache.commons.csv.CSVRecord.stream(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,toList,() → java.util.List,org.apache.commons.csv.CSVRecord.toList(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,toMap,() → java.util.Map,org.apache.commons.csv.CSVRecord.toMap(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,toString,() → java.lang.String,org.apache.commons.csv.CSVRecord.toString(),23,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,values,() → java.lang.String[],org.apache.commons.csv.CSVRecord.values(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVRecord,lambda$putIn$0,"(java.util.Map, java.lang.String, java.lang.Integer) → void","org.apache.commons.csv.CSVRecord.lambda$putIn$0(Map,String,Integer)",16,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVException,<init>,"(java.lang.String, java.lang.Object[]) → void","org.apache.commons.csv.CSVException.<init>(String,Object[])",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/Token,<init>,() → void,org.apache.commons.csv.Token.<init>(),0,12,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/Token,reset,() → void,org.apache.commons.csv.Token.reset(),14,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Token,toString,() → java.lang.String,org.apache.commons.csv.Token.toString(),17,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,builder,() → org.apache.commons.csv.CSVParser$Builder,org.apache.commons.csv.CSVParser.builder(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,parse,"(java.io.File, java.nio.charset.Charset, org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVParser","org.apache.commons.csv.CSVParser.parse(File,Charset,CSVFormat)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,parse,"(java.io.InputStream, java.nio.charset.Charset, org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVParser","org.apache.commons.csv.CSVParser.parse(InputStream,Charset,CSVFormat)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,parse,"(java.nio.file.Path, java.nio.charset.Charset, org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVParser","org.apache.commons.csv.CSVParser.parse(Path,Charset,CSVFormat)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,parse,"(java.io.Reader, org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVParser","org.apache.commons.csv.CSVParser.parse(Reader,CSVFormat)",0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,parse,"(java.lang.String, org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVParser","org.apache.commons.csv.CSVParser.parse(String,CSVFormat)",0,15,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,parse,"(java.net.URL, java.nio.charset.Charset, org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVParser","org.apache.commons.csv.CSVParser.parse(URL,Charset,CSVFormat)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,<init>,"(java.io.Reader, org.apache.commons.csv.CSVFormat) → void","org.apache.commons.csv.CSVParser.<init>(Reader,CSVFormat)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,<init>,"(java.io.Reader, org.apache.commons.csv.CSVFormat, long, long) → void","org.apache.commons.csv.CSVParser.<init>(Reader,CSVFormat,long,long)",9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,<init>,"(java.io.Reader, org.apache.commons.csv.CSVFormat, long, long, java.nio.charset.Charset, boolean) → void","org.apache.commons.csv.CSVParser.<init>(Reader,CSVFormat,long,long,Charset,boolean)",0,55,1.0,0,0,coverage not available since no branches,1,0,12,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,addRecordValue,(boolean) → void,org.apache.commons.csv.CSVParser.addRecordValue(boolean),26,0,0.0,6,0,0.0,4,5,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,close,() → void,org.apache.commons.csv.CSVParser.close(),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,createEmptyHeaderMap,() → java.util.Map,org.apache.commons.csv.CSVParser.createEmptyHeaderMap(),13,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,createHeaders,() → org.apache.commons.csv.CSVParser$Headers,org.apache.commons.csv.CSVParser.createHeaders(),151,19,0.11176470588235295,36,2,0.05263157894736842,20,35,5,0.125,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getCurrentLineNumber,() → long,org.apache.commons.csv.CSVParser.getCurrentLineNumber(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getFirstEndOfLine,() → java.lang.String,org.apache.commons.csv.CSVParser.getFirstEndOfLine(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getHeaderComment,() → java.lang.String,org.apache.commons.csv.CSVParser.getHeaderComment(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getHeaderMap,() → java.util.Map,org.apache.commons.csv.CSVParser.getHeaderMap(),16,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getHeaderMapRaw,() → java.util.Map,org.apache.commons.csv.CSVParser.getHeaderMapRaw(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getHeaderNames,() → java.util.List,org.apache.commons.csv.CSVParser.getHeaderNames(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getRecordNumber,() → long,org.apache.commons.csv.CSVParser.getRecordNumber(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getRecords,() → java.util.List,org.apache.commons.csv.CSVParser.getRecords(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,getTrailerComment,() → java.lang.String,org.apache.commons.csv.CSVParser.getTrailerComment(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,handleNull,(java.lang.String) → java.lang.String,org.apache.commons.csv.CSVParser.handleNull(String),36,0,0.0,14,0,0.0,8,6,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,hasHeaderComment,() → boolean,org.apache.commons.csv.CSVParser.hasHeaderComment(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,hasTrailerComment,() → boolean,org.apache.commons.csv.CSVParser.hasTrailerComment(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,isClosed,() → boolean,org.apache.commons.csv.CSVParser.isClosed(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,isStrictQuoteMode,() → boolean,org.apache.commons.csv.CSVParser.isStrictQuoteMode(),14,0,0.0,4,0,0.0,3,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,iterator,() → java.util.Iterator,org.apache.commons.csv.CSVParser.iterator(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,nextRecord,() → org.apache.commons.csv.CSVRecord,org.apache.commons.csv.CSVParser.nextRecord(),144,0,0.0,16,0,0.0,11,30,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser,stream,() → java.util.stream.Stream,org.apache.commons.csv.CSVParser.stream(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$Headers,<init>,"(java.util.Map, java.util.List) → void","org.apache.commons.csv.CSVParser$Headers.<init>(Map,List)",0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$Builder,<init>,() → void,org.apache.commons.csv.CSVParser$Builder.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$Builder,get,() → org.apache.commons.csv.CSVParser,org.apache.commons.csv.CSVParser$Builder.get(),0,22,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$Builder,setCharacterOffset,(long) → org.apache.commons.csv.CSVParser$Builder,org.apache.commons.csv.CSVParser$Builder.setCharacterOffset(long),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$Builder,setFormat,(org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVParser$Builder,org.apache.commons.csv.CSVParser$Builder.setFormat(CSVFormat),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$Builder,setRecordNumber,(long) → org.apache.commons.csv.CSVParser$Builder,org.apache.commons.csv.CSVParser$Builder.setRecordNumber(long),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVParser$Builder,setTrackBytes,(boolean) → org.apache.commons.csv.CSVParser$Builder,org.apache.commons.csv.CSVParser$Builder.setTrackBytes(boolean),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/QuoteMode,<clinit>,() → void,org.apache.commons.csv.QuoteMode.<clinit>(),0,54,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/DuplicateHeaderMode,<clinit>,() → void,org.apache.commons.csv.DuplicateHeaderMode.<clinit>(),0,34,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,<init>,"(org.apache.commons.csv.CSVFormat, org.apache.commons.csv.ExtendedBufferedReader) → void","org.apache.commons.csv.Lexer.<init>(CSVFormat,ExtendedBufferedReader)",0,62,1.0,0,0,coverage not available since no branches,1,0,13,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,appendNextEscapedCharacterToToken,(org.apache.commons.csv.Token) → void,org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken(Token),36,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,close,() → void,org.apache.commons.csv.Lexer.close(),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,getBytesRead,() → long,org.apache.commons.csv.Lexer.getBytesRead(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,getCharacterPosition,() → long,org.apache.commons.csv.Lexer.getCharacterPosition(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,getCurrentLineNumber,() → long,org.apache.commons.csv.Lexer.getCurrentLineNumber(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,getFirstEol,() → java.lang.String,org.apache.commons.csv.Lexer.getFirstEol(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isClosed,() → boolean,org.apache.commons.csv.Lexer.isClosed(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isCommentStart,(int) → boolean,org.apache.commons.csv.Lexer.isCommentStart(int),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isDelimiter,(int) → boolean,org.apache.commons.csv.Lexer.isDelimiter(int),70,0,0.0,10,0,0.0,6,13,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isEndOfFile,(int) → boolean,org.apache.commons.csv.Lexer.isEndOfFile(int),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isEscape,(int) → boolean,org.apache.commons.csv.Lexer.isEscape(int),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isEscapeDelimiter,() → boolean,org.apache.commons.csv.Lexer.isEscapeDelimiter(),67,0,0.0,10,0,0.0,6,8,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isMetaChar,(int) → boolean,org.apache.commons.csv.Lexer.isMetaChar(int),16,0,0.0,6,0,0.0,4,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isQuoteChar,(int) → boolean,org.apache.commons.csv.Lexer.isQuoteChar(int),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,isStartOfLine,(int) → boolean,org.apache.commons.csv.Lexer.isStartOfLine(int),13,0,0.0,6,0,0.0,4,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,nextToken,(org.apache.commons.csv.Token) → org.apache.commons.csv.Token,org.apache.commons.csv.Lexer.nextToken(Token),156,0,0.0,38,0,0.0,20,39,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,nullToDisabled,(java.lang.Character) → int,org.apache.commons.csv.Lexer.nullToDisabled(Character),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,parseEncapsulatedToken,(org.apache.commons.csv.Token) → org.apache.commons.csv.Token,org.apache.commons.csv.Lexer.parseEncapsulatedToken(Token),140,0,0.0,20,0,0.0,11,32,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,parseSimpleToken,"(org.apache.commons.csv.Token, int) → org.apache.commons.csv.Token","org.apache.commons.csv.Lexer.parseSimpleToken(Token,int)",57,0,0.0,10,0,0.0,6,18,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,readEndOfLine,(int) → boolean,org.apache.commons.csv.Lexer.readEndOfLine(int),46,0,0.0,16,0,0.0,9,11,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,readEscape,() → int,org.apache.commons.csv.Lexer.readEscape(),33,0,0.0,10,0,0.0,9,12,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,trimTrailingSpaces,(java.lang.StringBuilder) → void,org.apache.commons.csv.Lexer.trimTrailingSpaces(StringBuilder),22,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/Lexer,<clinit>,() → void,org.apache.commons.csv.Lexer.<clinit>(),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Predefined,<init>,"(java.lang.String, int, org.apache.commons.csv.CSVFormat) → void","org.apache.commons.csv.CSVFormat$Predefined.<init>(String,int,CSVFormat)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Predefined,getFormat,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat$Predefined.getFormat(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat$Predefined,<clinit>,() → void,org.apache.commons.csv.CSVFormat$Predefined.<clinit>(),0,136,1.0,0,0,coverage not available since no branches,1,0,13,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/Token$Type,<clinit>,() → void,org.apache.commons.csv.Token$Type.<clinit>(),0,54,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,clone,(java.lang.Object[]) → java.lang.Object[],org.apache.commons.csv.CSVFormat.clone(Object[]),0,8,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,contains,"(java.lang.String, char) → boolean","org.apache.commons.csv.CSVFormat.contains(String,char)",0,11,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,containsLineBreak,(java.lang.String) → boolean,org.apache.commons.csv.CSVFormat.containsLineBreak(String),0,12,1.0,1,3,0.75,3,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,copy,(org.apache.commons.csv.CSVFormat) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.copy(CSVFormat),1,6,0.8571428571428571,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isBlank,(java.lang.String) → boolean,org.apache.commons.csv.CSVFormat.isBlank(String),10,0,0.0,4,0,0.0,3,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isLineBreak,(char) → boolean,org.apache.commons.csv.CSVFormat.isLineBreak(char),2,8,0.8,2,2,0.5,3,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isLineBreak,(java.lang.Character) → boolean,org.apache.commons.csv.CSVFormat.isLineBreak(Character),2,8,0.8,1,3,0.75,3,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isTrimChar,(char) → boolean,org.apache.commons.csv.CSVFormat.isTrimChar(char),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isTrimChar,"(java.lang.CharSequence, int) → boolean","org.apache.commons.csv.CSVFormat.isTrimChar(CharSequence,int)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,newFormat,(char) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.newFormat(char),0,10,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,toStringArray,(java.lang.Object[]) → java.lang.String[],org.apache.commons.csv.CSVFormat.toStringArray(Object[]),2,12,0.8571428571428571,1,1,0.5,2,1,4,0.8,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,trim,(java.lang.CharSequence) → java.lang.CharSequence,org.apache.commons.csv.CSVFormat.trim(CharSequence),46,0,0.0,14,0,0.0,8,10,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,valueOf,(java.lang.String) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.valueOf(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,<init>,(org.apache.commons.csv.CSVFormat$Builder) → void,org.apache.commons.csv.CSVFormat.<init>(Builder),0,93,1.0,0,0,coverage not available since no branches,1,0,25,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,append,"(char, java.lang.Appendable) → void","org.apache.commons.csv.CSVFormat.append(char,Appendable)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,append,"(java.lang.CharSequence, java.lang.Appendable) → void","org.apache.commons.csv.CSVFormat.append(CharSequence,Appendable)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,builder,() → org.apache.commons.csv.CSVFormat$Builder,org.apache.commons.csv.CSVFormat.builder(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,copy,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.copy(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,equals,(java.lang.Object) → boolean,org.apache.commons.csv.CSVFormat.equals(Object),125,12,0.08759124087591241,45,3,0.0625,25,10,4,0.2857142857142857,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,escape,"(char, java.lang.Appendable) → void","org.apache.commons.csv.CSVFormat.escape(char,Appendable)",0,11,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,format,(java.lang.Object[]) → java.lang.String,org.apache.commons.csv.CSVFormat.format(Object[]),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,format_,(java.lang.Object[]) → java.lang.String,org.apache.commons.csv.CSVFormat.format_(Object[]),38,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getAllowDuplicateHeaderNames,() → boolean,org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames(),1,7,0.875,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getAllowMissingColumnNames,() → boolean,org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getAutoFlush,() → boolean,org.apache.commons.csv.CSVFormat.getAutoFlush(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getCommentMarker,() → java.lang.Character,org.apache.commons.csv.CSVFormat.getCommentMarker(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getDelimiter,() → char,org.apache.commons.csv.CSVFormat.getDelimiter(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getDelimiterCharArray,() → char[],org.apache.commons.csv.CSVFormat.getDelimiterCharArray(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getDelimiterString,() → java.lang.String,org.apache.commons.csv.CSVFormat.getDelimiterString(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getDuplicateHeaderMode,() → org.apache.commons.csv.DuplicateHeaderMode,org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getEscapeChar,() → char,org.apache.commons.csv.CSVFormat.getEscapeChar(),1,8,0.8888888888888888,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getEscapeCharacter,() → java.lang.Character,org.apache.commons.csv.CSVFormat.getEscapeCharacter(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getHeader,() → java.lang.String[],org.apache.commons.csv.CSVFormat.getHeader(),5,5,0.5,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getHeaderComments,() → java.lang.String[],org.apache.commons.csv.CSVFormat.getHeaderComments(),5,5,0.5,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getIgnoreEmptyLines,() → boolean,org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getIgnoreHeaderCase,() → boolean,org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getIgnoreSurroundingSpaces,() → boolean,org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getLenientEof,() → boolean,org.apache.commons.csv.CSVFormat.getLenientEof(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getMaxRows,() → long,org.apache.commons.csv.CSVFormat.getMaxRows(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getNullString,() → java.lang.String,org.apache.commons.csv.CSVFormat.getNullString(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getQuoteCharacter,() → java.lang.Character,org.apache.commons.csv.CSVFormat.getQuoteCharacter(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getQuoteMode,() → org.apache.commons.csv.QuoteMode,org.apache.commons.csv.CSVFormat.getQuoteMode(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getRecordSeparator,() → java.lang.String,org.apache.commons.csv.CSVFormat.getRecordSeparator(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getSkipHeaderRecord,() → boolean,org.apache.commons.csv.CSVFormat.getSkipHeaderRecord(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getTrailingData,() → boolean,org.apache.commons.csv.CSVFormat.getTrailingData(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getTrailingDelimiter,() → boolean,org.apache.commons.csv.CSVFormat.getTrailingDelimiter(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,getTrim,() → boolean,org.apache.commons.csv.CSVFormat.getTrim(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,hashCode,() → int,org.apache.commons.csv.CSVFormat.hashCode(),133,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isCommentMarkerSet,() → boolean,org.apache.commons.csv.CSVFormat.isCommentMarkerSet(),2,5,0.7142857142857143,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isDelimiter,"(char, java.lang.CharSequence, int, char[], int) → boolean","org.apache.commons.csv.CSVFormat.isDelimiter(char,CharSequence,int,char[],int)",30,7,0.1891891891891892,7,1,0.125,5,7,2,0.2222222222222222,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isEscapeCharacterSet,() → boolean,org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isNullStringSet,() → boolean,org.apache.commons.csv.CSVFormat.isNullStringSet(),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,isQuoteCharacterSet,() → boolean,org.apache.commons.csv.CSVFormat.isQuoteCharacterSet(),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,limit,(org.apache.commons.io.function.IOStream) → org.apache.commons.io.function.IOStream,org.apache.commons.csv.CSVFormat.limit(IOStream),5,5,0.5,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,limit,(java.util.stream.Stream) → java.util.stream.Stream,org.apache.commons.csv.CSVFormat.limit(Stream),10,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,parse,(java.io.Reader) → org.apache.commons.csv.CSVParser,org.apache.commons.csv.CSVFormat.parse(Reader),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,print,(java.lang.Appendable) → org.apache.commons.csv.CSVPrinter,org.apache.commons.csv.CSVFormat.print(Appendable),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,print,"(java.io.File, java.nio.charset.Charset) → org.apache.commons.csv.CSVPrinter","org.apache.commons.csv.CSVFormat.print(File,Charset)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,print,"(java.io.InputStream, java.lang.Appendable, boolean) → void","org.apache.commons.csv.CSVFormat.print(InputStream,Appendable,boolean)",41,0,0.0,6,0,0.0,4,10,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,print,"(java.lang.Object, java.lang.Appendable, boolean) → void","org.apache.commons.csv.CSVFormat.print(Object,Appendable,boolean)",24,42,0.6363636363636364,5,9,0.6428571428571429,8,6,12,0.6666666666666666,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,print,"(java.lang.Object, java.lang.CharSequence, java.lang.Appendable, boolean) → void","org.apache.commons.csv.CSVFormat.print(Object,CharSequence,Appendable,boolean)",18,26,0.5909090909090909,3,5,0.625,5,3,9,0.75,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,print,"(java.nio.file.Path, java.nio.charset.Charset) → org.apache.commons.csv.CSVPrinter","org.apache.commons.csv.CSVFormat.print(Path,Charset)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,print,"(java.io.Reader, java.lang.Appendable, boolean) → void","org.apache.commons.csv.CSVFormat.print(Reader,Appendable,boolean)",37,0,0.0,8,0,0.0,5,10,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,printer,() → org.apache.commons.csv.CSVPrinter,org.apache.commons.csv.CSVFormat.printer(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,println,(java.lang.Appendable) → void,org.apache.commons.csv.CSVFormat.println(Appendable),0,17,1.0,1,3,0.75,3,0,5,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,printRecord,"(java.lang.Appendable, java.lang.Object[]) → void","org.apache.commons.csv.CSVFormat.printRecord(Appendable,Object[])",0,23,1.0,0,4,1.0,3,0,4,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,printWithEscapes,"(java.lang.CharSequence, java.lang.Appendable) → void","org.apache.commons.csv.CSVFormat.printWithEscapes(CharSequence,Appendable)",18,90,0.8333333333333334,8,18,0.6923076923076923,14,4,25,0.8620689655172413,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,printWithEscapes,"(java.io.Reader, java.lang.Appendable) → void","org.apache.commons.csv.CSVFormat.printWithEscapes(Reader,Appendable)",151,0,0.0,26,0,0.0,14,35,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,printWithQuotes,"(java.lang.Object, java.lang.CharSequence, java.lang.Appendable, boolean) → void","org.apache.commons.csv.CSVFormat.printWithQuotes(Object,CharSequence,Appendable,boolean)",191,0,0.0,43,0,0.0,24,54,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,printWithQuotes,"(java.io.Reader, java.lang.Appendable) → void","org.apache.commons.csv.CSVFormat.printWithQuotes(Reader,Appendable)",41,0,0.0,6,0,0.0,4,11,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,toString,() → java.lang.String,org.apache.commons.csv.CSVFormat.toString(),33,137,0.8058823529411765,4,18,0.8181818181818182,12,6,28,0.8235294117647058,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,trim,(java.lang.String) → java.lang.String,org.apache.commons.csv.CSVFormat.trim(String),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,useMaxRows,() → boolean,org.apache.commons.csv.CSVFormat.useMaxRows(),2,7,0.7777777777777778,1,1,0.5,2,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,useRow,(long) → boolean,org.apache.commons.csv.CSVFormat.useRow(long),12,0,0.0,4,0,0.0,3,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,validate,() → void,org.apache.commons.csv.CSVFormat.validate(),126,97,0.4349775784753363,20,24,0.5454545454545454,23,13,11,0.4583333333333333,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withAllowDuplicateHeaderNames,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withAllowDuplicateHeaderNames,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames(boolean),12,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withAllowMissingColumnNames,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withAllowMissingColumnNames,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withAutoFlush,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withAutoFlush(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withCommentMarker,(char) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withCommentMarker(char),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withCommentMarker,(java.lang.Character) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withCommentMarker(Character),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withDelimiter,(char) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withDelimiter(char),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withEscape,(char) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withEscape(char),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withEscape,(java.lang.Character) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withEscape(Character),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withFirstRecordAsHeader,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader(),0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withHeader,(java.lang.Class) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withHeader(Class),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withHeader,(java.sql.ResultSet) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withHeader(ResultSet),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withHeader,(java.sql.ResultSetMetaData) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withHeader(ResultSetMetaData),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withHeader,(java.lang.String[]) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withHeader(String[]),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withHeaderComments,(java.lang.Object[]) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withHeaderComments(Object[]),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withIgnoreEmptyLines,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withIgnoreEmptyLines,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withIgnoreHeaderCase,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withIgnoreHeaderCase,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withIgnoreSurroundingSpaces,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withIgnoreSurroundingSpaces,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withNullString,(java.lang.String) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withNullString(String),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withQuote,(char) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withQuote(char),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withQuote,(java.lang.Character) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withQuote(Character),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withQuoteMode,(org.apache.commons.csv.QuoteMode) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withQuoteMode(QuoteMode),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withRecordSeparator,(char) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withRecordSeparator(char),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withRecordSeparator,(java.lang.String) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withRecordSeparator(String),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withSkipHeaderRecord,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withSkipHeaderRecord,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withSystemRecordSeparator,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withSystemRecordSeparator(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withTrailingDelimiter,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withTrailingDelimiter(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withTrailingDelimiter,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withTrailingDelimiter(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withTrim,() → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withTrim(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,withTrim,(boolean) → org.apache.commons.csv.CSVFormat,org.apache.commons.csv.CSVFormat.withTrim(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,lambda$format$1,(java.lang.Object[]) → java.lang.String,org.apache.commons.csv.CSVFormat.lambda$format$1(Object[]),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,lambda$toStringArray$0,"(java.lang.Object[], int) → java.lang.String","org.apache.commons.csv.CSVFormat.lambda$toStringArray$0(Object[],int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVFormat,<clinit>,() → void,org.apache.commons.csv.CSVFormat.<clinit>(),0,154,1.0,0,0,coverage not available since no branches,1,0,73,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,<init>,"(java.lang.Appendable, org.apache.commons.csv.CSVFormat) → void","org.apache.commons.csv.CSVPrinter.<init>(Appendable,CSVFormat)",27,29,0.5178571428571429,6,2,0.25,5,3,10,0.7692307692307693,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,close,() → void,org.apache.commons.csv.CSVPrinter.close(),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,close,(boolean) → void,org.apache.commons.csv.CSVPrinter.close(boolean),2,15,0.8823529411764706,3,3,0.5,4,1,4,0.8,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,endOfRecord,() → void,org.apache.commons.csv.CSVPrinter.endOfRecord(),0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,flush,() → void,org.apache.commons.csv.CSVPrinter.flush(),0,9,1.0,1,1,0.5,2,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,getOut,() → java.lang.Appendable,org.apache.commons.csv.CSVPrinter.getOut(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,getRecordCount,() → long,org.apache.commons.csv.CSVPrinter.getRecordCount(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,print,(java.lang.Object) → void,org.apache.commons.csv.CSVPrinter.print(Object),0,12,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printComment,(java.lang.String) → void,org.apache.commons.csv.CSVPrinter.printComment(String),70,7,0.09090909090909091,13,2,0.13333333333333333,9,16,2,0.1111111111111111,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printHeaders,(java.sql.ResultSet) → void,org.apache.commons.csv.CSVPrinter.printHeaders(ResultSet),0,18,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,println,() → void,org.apache.commons.csv.CSVPrinter.println(),0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecord,(java.lang.Iterable) → void,org.apache.commons.csv.CSVPrinter.printRecord(Iterable),0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecord,(java.lang.Object[]) → void,org.apache.commons.csv.CSVPrinter.printRecord(Object[]),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecord,(java.util.stream.Stream) → void,org.apache.commons.csv.CSVPrinter.printRecord(Stream),8,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecordObject,(java.lang.Object) → void,org.apache.commons.csv.CSVPrinter.printRecordObject(Object),11,15,0.5769230769230769,2,2,0.5,3,2,4,0.6666666666666666,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecords,(org.apache.commons.io.function.IOStream) → void,org.apache.commons.csv.CSVPrinter.printRecords(IOStream),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecords,(java.lang.Iterable) → void,org.apache.commons.csv.CSVPrinter.printRecords(Iterable),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecords,(java.lang.Object[]) → void,org.apache.commons.csv.CSVPrinter.printRecords(Object[]),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecords,(java.sql.ResultSet) → void,org.apache.commons.csv.CSVPrinter.printRecords(ResultSet),58,0,0.0,10,0,0.0,6,15,0,0.0,1,0,0.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecords,"(java.sql.ResultSet, boolean) → void","org.apache.commons.csv.CSVPrinter.printRecords(ResultSet,boolean)",4,5,0.5555555555555556,0,2,1.0,2,2,2,0.5,0,1,1.0
org/apache/commons/csv,org/apache/commons/csv/CSVPrinter,printRecords,(java.util.stream.Stream) → void,org.apache.commons.csv.CSVPrinter.printRecords(Stream),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
