/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:05:57 GMT 2025
 */

package org.apache.commons.collections4.list;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.collections4.list.AbstractLinkedListJava21;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class list_AbstractLinkedListJava21_indexOf_Object_ESTest extends list_AbstractLinkedListJava21_indexOf_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractLinkedListJava21.Node<Object> abstractLinkedListJava21_Node0 = new AbstractLinkedListJava21.Node<Object>();
      AbstractLinkedListJava21.Node<Object> abstractLinkedListJava21_Node1 = new AbstractLinkedListJava21.Node<Object>();
      abstractLinkedListJava21_Node0.next = abstractLinkedListJava21_Node1;
      AbstractLinkedListJava21<Object> abstractLinkedListJava21_0 = (AbstractLinkedListJava21<Object>) mock(AbstractLinkedListJava21.class, CALLS_REAL_METHODS);
      AbstractLinkedListJava21.LinkedSubList<Object> abstractLinkedListJava21_LinkedSubList0 = new AbstractLinkedListJava21.LinkedSubList<Object>(abstractLinkedListJava21_0, 0, 0);
      AbstractLinkedListJava21.LinkedSubListIterator<Object> abstractLinkedListJava21_LinkedSubListIterator0 = new AbstractLinkedListJava21.LinkedSubListIterator<Object>(abstractLinkedListJava21_LinkedSubList0, 0);
      AbstractLinkedListJava21<Object> abstractLinkedListJava21_1 = abstractLinkedListJava21_LinkedSubListIterator0.parent;
      abstractLinkedListJava21_1.header = abstractLinkedListJava21_Node0;
      int int0 = abstractLinkedListJava21_1.indexOf((Object) null);
      assertFalse(abstractLinkedListJava21_LinkedSubListIterator0.hasNext());
      assertEquals(0, int0);
      assertEquals(0, abstractLinkedListJava21_LinkedSubListIterator0.nextIndex());
      assertEquals(0, abstractLinkedListJava21_1.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AbstractLinkedListJava21.Node<Object> abstractLinkedListJava21_Node0 = new AbstractLinkedListJava21.Node<Object>();
      AbstractLinkedListJava21.Node<Object> abstractLinkedListJava21_Node1 = new AbstractLinkedListJava21.Node<Object>();
      abstractLinkedListJava21_Node0.next = abstractLinkedListJava21_Node1;
      AbstractLinkedListJava21<Object> abstractLinkedListJava21_0 = (AbstractLinkedListJava21<Object>) mock(AbstractLinkedListJava21.class, CALLS_REAL_METHODS);
      AbstractLinkedListJava21.LinkedSubList<Object> abstractLinkedListJava21_LinkedSubList0 = new AbstractLinkedListJava21.LinkedSubList<Object>(abstractLinkedListJava21_0, 0, 0);
      AbstractLinkedListJava21.LinkedSubListIterator<Object> abstractLinkedListJava21_LinkedSubListIterator0 = new AbstractLinkedListJava21.LinkedSubListIterator<Object>(abstractLinkedListJava21_LinkedSubList0, 0);
      AbstractLinkedListJava21<Object> abstractLinkedListJava21_1 = abstractLinkedListJava21_LinkedSubListIterator0.parent;
      abstractLinkedListJava21_1.header = abstractLinkedListJava21_Node0;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      abstractLinkedListJava21_1.indexOf(linkedList0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AbstractLinkedListJava21.Node<Object> abstractLinkedListJava21_Node0 = new AbstractLinkedListJava21.Node<Object>();
      AbstractLinkedListJava21<Object> abstractLinkedListJava21_0 = (AbstractLinkedListJava21<Object>) mock(AbstractLinkedListJava21.class, CALLS_REAL_METHODS);
      AbstractLinkedListJava21.LinkedSubList<Object> abstractLinkedListJava21_LinkedSubList0 = new AbstractLinkedListJava21.LinkedSubList<Object>(abstractLinkedListJava21_0, 0, 0);
      AbstractLinkedListJava21.LinkedSubListIterator<Object> abstractLinkedListJava21_LinkedSubListIterator0 = new AbstractLinkedListJava21.LinkedSubListIterator<Object>(abstractLinkedListJava21_LinkedSubList0, 0);
      AbstractLinkedListJava21<Object> abstractLinkedListJava21_1 = abstractLinkedListJava21_LinkedSubListIterator0.parent;
      assertNotNull(abstractLinkedListJava21_1);
      
      abstractLinkedListJava21_1.header = abstractLinkedListJava21_Node0;
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      int int0 = abstractLinkedListJava21_1.indexOf(linkedList0);
      assertFalse(abstractLinkedListJava21_LinkedSubListIterator0.hasNext());
      assertFalse(abstractLinkedListJava21_LinkedSubListIterator0.hasPrevious());
      assertEquals(0, abstractLinkedListJava21_1.size());
      assertEquals((-1), int0);
  }
}
