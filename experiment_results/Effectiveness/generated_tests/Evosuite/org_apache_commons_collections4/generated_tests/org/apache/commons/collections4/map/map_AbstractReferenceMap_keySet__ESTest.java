/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:25:54 GMT 2025
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.ref.WeakReference;
import java.util.Set;
import org.apache.commons.collections4.map.AbstractReferenceMap;
import org.apache.commons.collections4.map.ReferenceMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class map_AbstractReferenceMap_keySet__ESTest extends map_AbstractReferenceMap_keySet__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractReferenceMap.ReferenceStrength abstractReferenceMap_ReferenceStrength0 = AbstractReferenceMap.ReferenceStrength.WEAK;
      ReferenceMap<WeakReference<Integer>, WeakReference<Integer>> referenceMap0 = new ReferenceMap<WeakReference<Integer>, WeakReference<Integer>>(abstractReferenceMap_ReferenceStrength0, abstractReferenceMap_ReferenceStrength0);
      referenceMap0.keySet();
      Set<WeakReference<Integer>> set0 = referenceMap0.keySet();
      assertTrue(set0.isEmpty());
  }
}
