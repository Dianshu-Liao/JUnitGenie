/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:36:04 GMT 2025
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.functors.TransformerPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class functors_TransformerPredicate_test_Object_ESTest extends functors_TransformerPredicate_test_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Transformer<Boolean, Boolean> transformer0 = (Transformer<Boolean, Boolean>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(transformer0).apply(anyBoolean());
      TransformerPredicate<Boolean> transformerPredicate0 = new TransformerPredicate<Boolean>(transformer0);
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        transformerPredicate0.test(boolean0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Transformer must return an instanceof Boolean, it was a null object
         //
         verifyException("org.apache.commons.collections4.functors.TransformerPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      Transformer<Object, Boolean> transformer0 = (Transformer<Object, Boolean>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(transformer0).apply(any());
      TransformerPredicate<Object> transformerPredicate0 = new TransformerPredicate<Object>(transformer0);
      Object object0 = new Object();
      boolean boolean1 = transformerPredicate0.test(object0);
      assertTrue(boolean1);
  }
}
