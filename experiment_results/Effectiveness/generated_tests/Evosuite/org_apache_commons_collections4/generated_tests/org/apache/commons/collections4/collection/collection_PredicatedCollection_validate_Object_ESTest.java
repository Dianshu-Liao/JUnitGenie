/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:30:01 GMT 2025
 */

package org.apache.commons.collections4.collection;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.collection.PredicatedCollection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class collection_PredicatedCollection_validate_Object_ESTest extends collection_PredicatedCollection_validate_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate<Integer> predicate0 = (Predicate<Integer>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      PredicatedCollection<Integer> predicatedCollection0 = new PredicatedCollection<Integer>(linkedList0, predicate0);
      LinkedList<Object> linkedList1 = new LinkedList<Object>();
      Predicate<Object> predicate1 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(predicate1).toString();
      doReturn(false).when(predicate1).test(any());
      PredicatedCollection<Object> predicatedCollection1 = new PredicatedCollection<Object>(linkedList1, predicate1);
      // Undeclared exception!
      try { 
        predicatedCollection1.validate(predicatedCollection0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add Object 'java.util.LinkedList@0000000003' - Predicate 'null' rejected it
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Predicate<Integer> predicate0 = (Predicate<Integer>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(predicate0).toString();
      doReturn(false).when(predicate0).test(anyInt());
      PredicatedCollection<Integer> predicatedCollection0 = new PredicatedCollection<Integer>(linkedList0, predicate0);
      Integer integer0 = new Integer(1);
      // Undeclared exception!
      try { 
        predicatedCollection0.validate(integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot add Object '1' - Predicate 'null' rejected it
         //
         verifyException("org.apache.commons.collections4.collection.PredicatedCollection", e);
      }
  }
}
