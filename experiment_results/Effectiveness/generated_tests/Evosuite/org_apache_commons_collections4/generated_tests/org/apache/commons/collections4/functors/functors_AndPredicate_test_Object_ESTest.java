/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:39:59 GMT 2025
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.AndPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class functors_AndPredicate_test_Object_ESTest extends functors_AndPredicate_test_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(true, true, true, true, false).when(predicate0).test(any());
      AndPredicate<Object> andPredicate0 = new AndPredicate<Object>(predicate0, predicate0);
      Integer integer0 = new Integer(261);
      boolean boolean0 = andPredicate0.test(integer0);
      AndPredicate<Integer> andPredicate1 = new AndPredicate<Integer>(andPredicate0, andPredicate0);
      boolean boolean1 = andPredicate1.test(integer0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }
}
