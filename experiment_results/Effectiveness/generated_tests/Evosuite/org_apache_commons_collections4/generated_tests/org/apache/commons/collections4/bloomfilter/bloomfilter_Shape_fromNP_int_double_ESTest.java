/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:30:04 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.bloomfilter.Shape;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class bloomfilter_Shape_fromNP_int_double_ESTest extends bloomfilter_Shape_fromNP_int_double_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        Shape.fromNP(2146667018, 0.22254573297897942);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Resulting filter has more than 2147483647 bits: 6.713727264E9
         //
         verifyException("org.apache.commons.collections4.bloomfilter.Shape", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Shape shape0 = Shape.fromNP(340, 0.22254573297897942);
      assertEquals(368.7543000578909, shape0.estimateMaxN(), 0.01);
  }
}
