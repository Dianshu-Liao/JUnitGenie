/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:49:12 GMT 2025
 */

package org.apache.commons.collections4.splitmap;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.splitmap.TransformedSplitMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class splitmap_TransformedSplitMap_transformMap_Map_ESTest extends splitmap_TransformedSplitMap_transformMap_Map_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Transformer<Integer, Integer> transformer0 = (Transformer<Integer, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      TransformedSplitMap<Integer, Integer, Integer, Integer> transformedSplitMap0 = new TransformedSplitMap<Integer, Integer, Integer, Integer>(hashMap0, transformer0, transformer0);
      Map<Integer, Integer> map0 = transformedSplitMap0.transformMap(hashMap0);
      assertTrue(map0.isEmpty());
  }
}
