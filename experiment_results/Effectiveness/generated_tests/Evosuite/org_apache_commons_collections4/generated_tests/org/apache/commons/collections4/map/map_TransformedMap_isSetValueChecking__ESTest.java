/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:42:46 GMT 2025
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.HashMap;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.map.TransformedMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class map_TransformedMap_isSetValueChecking__ESTest extends map_TransformedMap_isSetValueChecking__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Integer, HashMap<Integer, Integer>> hashMap0 = new HashMap<Integer, HashMap<Integer, Integer>>();
      Transformer<Integer, Integer> transformer0 = (Transformer<Integer, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      Transformer<HashMap<Integer, Integer>, HashMap<Integer, Integer>> transformer1 = (Transformer<HashMap<Integer, Integer>, HashMap<Integer, Integer>>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      TransformedMap<Integer, HashMap<Integer, Integer>> transformedMap0 = new TransformedMap<Integer, HashMap<Integer, Integer>>(hashMap0, transformer0, transformer1);
      boolean boolean0 = transformedMap0.isSetValueChecking();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Integer, HashMap<Integer, Integer>> hashMap0 = new HashMap<Integer, HashMap<Integer, Integer>>();
      Transformer<Integer, Integer> transformer0 = (Transformer<Integer, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      TransformedMap<Integer, HashMap<Integer, Integer>> transformedMap0 = new TransformedMap<Integer, HashMap<Integer, Integer>>(hashMap0, transformer0, (Transformer<? super HashMap<Integer, Integer>, ? extends HashMap<Integer, Integer>>) null);
      boolean boolean0 = transformedMap0.isSetValueChecking();
      assertFalse(boolean0);
  }
}
