/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:31:00 GMT 2025
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.collections4.keyvalue.MultiKey;
import org.apache.commons.collections4.map.AbstractHashedMap;
import org.apache.commons.collections4.map.MultiKeyMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class map_MultiKeyMap_put_Object_Object_Object_Object_Object_Object_ESTest extends map_MultiKeyMap_put_Object_Object_Object_Object_Object_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultiKeyMap<AbstractHashedMap<Integer, Integer>, MultiKey<Integer>> multiKeyMap0 = new MultiKeyMap<AbstractHashedMap<Integer, Integer>, MultiKey<Integer>>();
      AbstractHashedMap<Integer, Integer> abstractHashedMap0 = new AbstractHashedMap<Integer, Integer>(0);
      Integer integer0 = new Integer((-767));
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0, integer0, integer0);
      multiKeyMap0.put(abstractHashedMap0, abstractHashedMap0, abstractHashedMap0, abstractHashedMap0, abstractHashedMap0, multiKey0);
      multiKeyMap0.put(abstractHashedMap0, abstractHashedMap0, abstractHashedMap0, abstractHashedMap0, abstractHashedMap0, multiKey0);
      assertEquals(1, multiKeyMap0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MultiKeyMap<MultiKey<Integer>, Integer> multiKeyMap0 = new MultiKeyMap<MultiKey<Integer>, Integer>();
      Integer integer0 = new Integer(0);
      MultiKey<Integer> multiKey0 = new MultiKey<Integer>(integer0, integer0);
      multiKeyMap0.put((MultiKey<Integer>) null, multiKey0, (MultiKey<Integer>) null, (MultiKey<Integer>) null, multiKey0, integer0);
      Integer integer1 = multiKeyMap0.put((MultiKey<Integer>) null, (MultiKey<Integer>) null, (MultiKey<Integer>) null, (MultiKey<Integer>) null, (MultiKey<Integer>) null, (Integer) null);
      assertNull(integer1);
  }
}
