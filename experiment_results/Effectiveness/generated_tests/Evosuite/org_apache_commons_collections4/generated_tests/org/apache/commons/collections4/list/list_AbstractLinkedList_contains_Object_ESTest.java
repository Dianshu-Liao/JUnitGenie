/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:09:32 GMT 2025
 */

package org.apache.commons.collections4.list;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.LinkedList;
import org.apache.commons.collections4.list.AbstractLinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class list_AbstractLinkedList_contains_Object_ESTest extends list_AbstractLinkedList_contains_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractLinkedList.Node<LinkedList<Object>> abstractLinkedList_Node0 = new AbstractLinkedList.Node<LinkedList<Object>>();
      AbstractLinkedList.Node<LinkedList<Object>> abstractLinkedList_Node1 = new AbstractLinkedList.Node<LinkedList<Object>>();
      abstractLinkedList_Node0.next = abstractLinkedList_Node1;
      AbstractLinkedList<LinkedList<Object>> abstractLinkedList0 = (AbstractLinkedList<LinkedList<Object>>) mock(AbstractLinkedList.class, CALLS_REAL_METHODS);
      AbstractLinkedList.LinkedSubList<LinkedList<Object>> abstractLinkedList_LinkedSubList0 = new AbstractLinkedList.LinkedSubList<LinkedList<Object>>(abstractLinkedList0, 0, 0);
      AbstractLinkedList<LinkedList<Object>> abstractLinkedList1 = abstractLinkedList_LinkedSubList0.parent;
      abstractLinkedList1.header = abstractLinkedList_Node0;
      boolean boolean0 = abstractLinkedList1.contains((Object) null);
      assertTrue(boolean0);
      assertTrue(abstractLinkedList1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      AbstractLinkedList.Node<LinkedList<Object>> abstractLinkedList_Node0 = new AbstractLinkedList.Node<LinkedList<Object>>();
      AbstractLinkedList<LinkedList<Object>> abstractLinkedList0 = (AbstractLinkedList<LinkedList<Object>>) mock(AbstractLinkedList.class, CALLS_REAL_METHODS);
      AbstractLinkedList.LinkedSubList<LinkedList<Object>> abstractLinkedList_LinkedSubList0 = new AbstractLinkedList.LinkedSubList<LinkedList<Object>>(abstractLinkedList0, 0, 0);
      AbstractLinkedList<LinkedList<Object>> abstractLinkedList1 = abstractLinkedList_LinkedSubList0.parent;
      assertNotNull(abstractLinkedList1);
      
      abstractLinkedList1.header = abstractLinkedList_Node0;
      boolean boolean0 = abstractLinkedList1.contains(object0);
      assertFalse(boolean0);
      assertEquals(0, abstractLinkedList1.size());
  }
}
