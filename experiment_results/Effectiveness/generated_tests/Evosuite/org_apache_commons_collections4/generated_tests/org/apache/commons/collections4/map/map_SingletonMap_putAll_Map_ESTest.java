/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:21:40 GMT 2025
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.map.ReferenceIdentityMap;
import org.apache.commons.collections4.map.SingletonMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class map_SingletonMap_putAll_Map_ESTest extends map_SingletonMap_putAll_Map_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SingletonMap<SingletonMap<Integer, Integer>, Integer> singletonMap0 = new SingletonMap<SingletonMap<Integer, Integer>, Integer>();
      singletonMap0.putAll(singletonMap0);
      assertEquals(1, singletonMap0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Integer integer0 = new Integer((-1248));
      SingletonMap<Integer, Integer> singletonMap0 = new SingletonMap<Integer, Integer>(integer0, integer0);
      ReferenceIdentityMap<Integer, Integer> referenceIdentityMap0 = new ReferenceIdentityMap<Integer, Integer>();
      referenceIdentityMap0.size = (-1248);
      // Undeclared exception!
      try { 
        singletonMap0.putAll(referenceIdentityMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The map size must be 0 or 1
         //
         verifyException("org.apache.commons.collections4.map.SingletonMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer((-1248));
      SingletonMap<Integer, Integer> singletonMap0 = new SingletonMap<Integer, Integer>(integer0, integer0);
      ReferenceIdentityMap<Integer, Integer> referenceIdentityMap0 = new ReferenceIdentityMap<Integer, Integer>();
      singletonMap0.putAll(referenceIdentityMap0);
      assertFalse(singletonMap0.isEmpty());
  }
}
