/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:45:23 GMT 2025
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.HashMap;
import org.apache.commons.collections4.Transformer;
import org.apache.commons.collections4.map.TransformedMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class map_TransformedMap_transformValue_Object_ESTest extends map_TransformedMap_transformValue_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Integer integer0 = new Integer(0);
      Transformer<Integer, Integer> transformer0 = (Transformer<Integer, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      TransformedMap<Integer, Integer> transformedMap0 = new TransformedMap<Integer, Integer>(hashMap0, transformer0, (Transformer<? super Integer, ? extends Integer>) null);
      Integer integer1 = transformedMap0.transformValue(integer0);
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Transformer<Integer, Integer> transformer0 = (Transformer<Integer, Integer>) mock(Transformer.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(transformer0).apply(anyInt());
      TransformedMap<Integer, Integer> transformedMap0 = new TransformedMap<Integer, Integer>(hashMap0, transformer0, transformer0);
      Integer integer0 = new Integer(0);
      Integer integer1 = transformedMap0.transformValue(integer0);
      assertNull(integer1);
  }
}
