/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:05:57 GMT 2025
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.map.PredicatedMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class map_PredicatedMap_checkSetValue_Object_ESTest extends map_PredicatedMap_checkSetValue_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Predicate<Integer> predicate0 = (Predicate<Integer>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate0).test(anyInt());
      PredicatedMap<Integer, Integer> predicatedMap0 = new PredicatedMap<Integer, Integer>(hashMap0, predicate0, predicate0);
      Integer integer0 = new Integer(240);
      // Undeclared exception!
      try { 
        predicatedMap0.checkSetValue(integer0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot set value - Predicate rejected it
         //
         verifyException("org.apache.commons.collections4.map.PredicatedMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Integer, Integer> hashMap0 = new HashMap<Integer, Integer>();
      Predicate<Integer> predicate0 = (Predicate<Integer>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(predicate0).test(anyInt());
      PredicatedMap<Integer, Integer> predicatedMap0 = new PredicatedMap<Integer, Integer>(hashMap0, predicate0, predicate0);
      Integer integer0 = new Integer(240);
      Integer integer1 = predicatedMap0.checkSetValue(integer0);
      assertEquals(240, (int)integer1);
  }
}
