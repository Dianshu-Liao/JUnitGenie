/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Apr 20 03:56:50 GMT 2025
 */

package org.apache.commons.collections4;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class MapUtils_isNotEmpty_Map_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.commons.collections4.MapUtils"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/Users/dianshuliao/Documents/Research/Knowledge_Distillation_for_LLM_Test_Gen/UnitTestGeneration/saved_data/TenJavaProjects/commons-collections-master"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/9s/7vk_xbtd4svcp0w1m5f92w3m0000gn/T/"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MapUtils_isNotEmpty_Map_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.commons.collections4.MapUtils",
      "org.apache.commons.collections4.MapIterator",
      "org.apache.commons.collections4.map.SingletonMap",
      "org.apache.commons.collections4.map.UnmodifiableSortedMap",
      "org.apache.commons.collections4.Predicate",
      "org.apache.commons.collections4.KeyValue",
      "org.apache.commons.collections4.Transformer",
      "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
      "org.apache.commons.collections4.map.AbstractMapDecorator",
      "org.apache.commons.collections4.BoundedMap",
      "org.apache.commons.collections4.Get",
      "org.apache.commons.collections4.OrderedMapIterator",
      "org.apache.commons.collections4.Put",
      "org.apache.commons.collections4.map.MultiValueMap",
      "org.apache.commons.collections4.MultiMap",
      "org.apache.commons.collections4.IterableMap",
      "org.apache.commons.collections4.IterableSortedMap",
      "org.apache.commons.collections4.OrderedMap",
      "org.apache.commons.collections4.OrderedIterator",
      "org.apache.commons.collections4.map.AbstractIterableMap",
      "org.apache.commons.collections4.Factory",
      "org.apache.commons.collections4.IterableGet",
      "org.apache.commons.collections4.Unmodifiable"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MapUtils_isNotEmpty_Map_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.commons.collections4.map.AbstractIterableMap",
      "org.apache.commons.collections4.map.AbstractMapDecorator",
      "org.apache.commons.collections4.map.AbstractSortedMapDecorator",
      "org.apache.commons.collections4.map.UnmodifiableSortedMap",
      "org.apache.commons.collections4.MapUtils",
      "org.apache.commons.collections4.MapUtils$1",
      "org.apache.commons.collections4.MapUtils$2",
      "org.apache.commons.collections4.functors.AbstractPredicate",
      "org.apache.commons.collections4.functors.NullPredicate",
      "org.apache.commons.collections4.iterators.AbstractEmptyIterator",
      "org.apache.commons.collections4.iterators.EmptyIterator",
      "org.apache.commons.collections4.iterators.EmptyListIterator",
      "org.apache.commons.collections4.iterators.EmptyOrderedIterator",
      "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator",
      "org.apache.commons.collections4.iterators.EmptyMapIterator",
      "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator",
      "org.apache.commons.collections4.functors.NOPTransformer",
      "org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy",
      "org.apache.commons.collections4.map.PassiveExpiringMap",
      "org.apache.commons.collections4.bidimap.AbstractDualBidiMap",
      "org.apache.commons.collections4.bidimap.DualTreeBidiMap",
      "org.apache.commons.collections4.bidimap.TreeBidiMap",
      "org.apache.commons.collections4.map.AbstractHashedMap",
      "org.apache.commons.collections4.map.AbstractLinkedMap",
      "org.apache.commons.collections4.map.LinkedMap",
      "org.apache.commons.collections4.map.CaseInsensitiveMap",
      "org.apache.commons.collections4.trie.UnmodifiableTrie",
      "org.apache.commons.collections4.map.HashedMap",
      "org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap",
      "org.apache.commons.collections4.map.AbstractHashedMap$HashEntry",
      "org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry",
      "org.apache.commons.collections4.map.AbstractReferenceMap",
      "org.apache.commons.collections4.map.ReferenceIdentityMap",
      "org.apache.commons.collections4.map.SingletonMap",
      "org.apache.commons.collections4.map.ReferenceMap",
      "org.apache.commons.collections4.map.AbstractHashedMap$EntrySet",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySet",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator",
      "org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntrySetIterator",
      "org.apache.commons.collections4.map.ListOrderedMap",
      "org.apache.commons.collections4.map.StaticBucketMap",
      "org.apache.commons.collections4.map.StaticBucketMap$Lock",
      "org.apache.commons.collections4.map.DefaultedMap",
      "org.apache.commons.collections4.functors.ConstantTransformer",
      "org.apache.commons.collections4.map.LRUMap",
      "org.apache.commons.collections4.map.CompositeMap",
      "org.apache.commons.collections4.map.Flat3Map",
      "org.apache.commons.collections4.map.Flat3Map$KeySet",
      "org.apache.commons.collections4.CollectionUtils",
      "org.apache.commons.collections4.CollectionUtils$CardinalityHelper",
      "org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper",
      "org.apache.commons.collections4.bag.AbstractMapBag",
      "org.apache.commons.collections4.bag.HashBag",
      "org.apache.commons.collections4.map.AbstractHashedMap$KeySet",
      "org.apache.commons.collections4.set.CompositeSet",
      "org.apache.commons.collections4.collection.AbstractCollectionDecorator",
      "org.apache.commons.collections4.list.AbstractListDecorator",
      "org.apache.commons.collections4.list.AbstractSerializableListDecorator",
      "org.apache.commons.collections4.list.UnmodifiableList",
      "org.apache.commons.collections4.iterators.UnmodifiableIterator",
      "org.apache.commons.collections4.iterators.IteratorChain",
      "org.apache.commons.collections4.keyvalue.AbstractKeyValue",
      "org.apache.commons.collections4.keyvalue.DefaultKeyValue"
    );
  }
}
