/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:42:59 GMT 2025
 */

package org.apache.commons.collections4.functors;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.NullIsExceptionPredicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class functors_NullIsExceptionPredicate_test_Object_ESTest extends functors_NullIsExceptionPredicate_test_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      NullIsExceptionPredicate<Integer> nullIsExceptionPredicate0 = new NullIsExceptionPredicate<Integer>(predicate0);
      // Undeclared exception!
      try { 
        nullIsExceptionPredicate0.test((Integer) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Input Object must not be null
         //
         verifyException("org.apache.commons.collections4.functors.NullIsExceptionPredicate", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate0).test(any());
      NullIsExceptionPredicate<Object> nullIsExceptionPredicate0 = new NullIsExceptionPredicate<Object>(predicate0);
      Object object0 = new Object();
      boolean boolean0 = nullIsExceptionPredicate0.test(object0);
      assertFalse(boolean0);
  }
}
