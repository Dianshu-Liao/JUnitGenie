/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:49:36 GMT 2025
 */

package org.apache.commons.collections4.properties;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.collections4.Closure;
import org.apache.commons.collections4.Factory;
import org.apache.commons.collections4.Predicate;
import org.apache.commons.collections4.functors.ClosureTransformer;
import org.apache.commons.collections4.functors.FactoryTransformer;
import org.apache.commons.collections4.functors.IfTransformer;
import org.apache.commons.collections4.properties.OrderedProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class properties_OrderedProperties_computeIfAbsent_Object_Function_ESTest extends properties_OrderedProperties_computeIfAbsent_Object_Function_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OrderedProperties orderedProperties0 = new OrderedProperties();
      Integer integer0 = new Integer(979);
      Closure<Object> closure0 = (Closure<Object>) mock(Closure.class, new ViolatedAssumptionAnswer());
      ClosureTransformer<Object> closureTransformer0 = new ClosureTransformer<Object>(closure0);
      Object object0 = orderedProperties0.computeIfAbsent(integer0, closureTransformer0);
      assertEquals(979, object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OrderedProperties orderedProperties0 = new OrderedProperties();
      Integer integer0 = new Integer(979);
      Predicate<Object> predicate0 = (Predicate<Object>) mock(Predicate.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(predicate0).test(any());
      Factory<Integer> factory0 = (Factory<Integer>) mock(Factory.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(factory0).get();
      FactoryTransformer<Object, Integer> factoryTransformer0 = new FactoryTransformer<Object, Integer>(factory0);
      IfTransformer<Object, Integer> ifTransformer0 = new IfTransformer<Object, Integer>(predicate0, factoryTransformer0, factoryTransformer0);
      Object object0 = orderedProperties0.computeIfAbsent(integer0, ifTransformer0);
      assertNull(object0);
  }
}
