/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:47:05 GMT 2025
 */

package org.apache.commons.collections4.comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.comparators.NullComparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class comparators_NullComparator_compare_Object_Object_ESTest extends comparators_NullComparator_compare_Object_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NullComparator<Integer> nullComparator0 = new NullComparator<Integer>();
      Integer integer0 = new Integer(0);
      int int0 = nullComparator0.compare(integer0, (Integer) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NullComparator<Object> nullComparator0 = new NullComparator<Object>(false);
      Object object0 = new Object();
      NullComparator<Integer> nullComparator1 = new NullComparator<Integer>(nullComparator0);
      // Undeclared exception!
      try { 
        nullComparator0.compare(object0, nullComparator1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to java.lang.Comparable
         //
         verifyException("org.apache.commons.collections4.comparators.ComparableComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NullComparator<Object> nullComparator0 = new NullComparator<Object>();
      NullComparator<Integer> nullComparator1 = new NullComparator<Integer>(nullComparator0);
      Integer integer0 = new Integer(912);
      int int0 = nullComparator1.compare((Integer) null, integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NullComparator<Object> nullComparator0 = new NullComparator<Object>(false);
      Object object0 = new Object();
      int int0 = nullComparator0.compare((Object) null, object0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NullComparator<Object> nullComparator0 = new NullComparator<Object>(false);
      Object object0 = new Object();
      int int0 = nullComparator0.compare(object0, object0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NullComparator<Integer> nullComparator0 = new NullComparator<Integer>(false);
      Integer integer0 = new Integer(0);
      int int0 = nullComparator0.compare(integer0, (Integer) null);
      assertEquals(1, int0);
  }
}
