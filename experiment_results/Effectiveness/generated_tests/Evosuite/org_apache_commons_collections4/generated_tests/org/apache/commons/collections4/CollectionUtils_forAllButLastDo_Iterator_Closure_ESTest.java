/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:03:35 GMT 2025
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Iterator;
import org.apache.commons.collections4.CollectionUtils;
import org.apache.commons.collections4.functors.ForClosure;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class CollectionUtils_forAllButLastDo_Iterator_Closure_ESTest extends CollectionUtils_forAllButLastDo_Iterator_Closure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Iterator<Object> iterator0 = (Iterator<Object>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      ForClosure<Object> forClosure0 = (ForClosure<Object>) mock(ForClosure.class, new ViolatedAssumptionAnswer());
      Object object0 = CollectionUtils.forAllButLastDo(iterator0, forClosure0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Iterator<Integer> iterator0 = (Iterator<Integer>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      Integer integer0 = CollectionUtils.forAllButLastDo(iterator0, (ForClosure<Object>) null);
      assertNull(integer0);
  }
}
