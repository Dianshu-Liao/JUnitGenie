/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:54:30 GMT 2025
 */

package org.apache.commons.collections4.trie;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.collections4.trie.PatriciaTrie;
import org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class trie_AbstractBitwiseTrie_compareKeys_Object_Object_ESTest extends trie_AbstractBitwiseTrie_compareKeys_Object_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PatriciaTrie<StringKeyAnalyzer> patriciaTrie0 = new PatriciaTrie<StringKeyAnalyzer>();
      boolean boolean0 = patriciaTrie0.compareKeys("", "=fSQB(]~f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PatriciaTrie<StringKeyAnalyzer> patriciaTrie0 = new PatriciaTrie<StringKeyAnalyzer>();
      boolean boolean0 = patriciaTrie0.compareKeys("8", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
      boolean boolean0 = patriciaTrie0.compareKeys((String) null, "m3Kye.';;FlW_KV|kP");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      PatriciaTrie<String> patriciaTrie0 = new PatriciaTrie<String>();
      boolean boolean0 = patriciaTrie0.compareKeys((String) null, (String) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PatriciaTrie<StringKeyAnalyzer> patriciaTrie0 = new PatriciaTrie<StringKeyAnalyzer>();
      boolean boolean0 = patriciaTrie0.compareKeys("'Sj`]OtCovd+3r.", "'Sj`]OtCovd+3r.");
      assertTrue(boolean0);
  }
}
