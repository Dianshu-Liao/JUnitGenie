/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:23:51 GMT 2025
 */

package org.apache.commons.collections4.bloomfilter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.collections4.bloomfilter.SetOperations;
import org.apache.commons.collections4.bloomfilter.Shape;
import org.apache.commons.collections4.bloomfilter.SparseBloomFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class bloomfilter_SetOperations_jaccardSimilarity_BitMapExtractor_BitMapExtractor_ESTest extends bloomfilter_SetOperations_jaccardSimilarity_BitMapExtractor_BitMapExtractor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Shape shape0 = mock(Shape.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0).when(shape0).getNumberOfBits();
      SparseBloomFilter sparseBloomFilter0 = new SparseBloomFilter(shape0);
      double double0 = SetOperations.jaccardSimilarity(sparseBloomFilter0, sparseBloomFilter0);
      assertEquals(0.0, double0, 0.01);
  }
}
