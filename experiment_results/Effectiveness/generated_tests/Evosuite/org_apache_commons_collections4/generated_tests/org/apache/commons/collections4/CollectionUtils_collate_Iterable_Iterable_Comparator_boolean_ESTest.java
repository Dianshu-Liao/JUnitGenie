/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 03:58:23 GMT 2025
 */

package org.apache.commons.collections4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.Comparator;
import java.util.List;
import java.util.TreeSet;
import org.apache.commons.collections4.CollectionUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class CollectionUtils_collate_Iterable_Iterable_Comparator_boolean_ESTest extends CollectionUtils_collate_Iterable_Iterable_Comparator_boolean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      List<Integer> list0 = CollectionUtils.collate((Iterable<? extends Integer>) treeSet0, (Iterable<? extends Integer>) treeSet0, (Comparator<? super Integer>) comparator0, true);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      Comparator<Integer> comparator0 = (Comparator<Integer>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      List<Integer> list0 = CollectionUtils.collate((Iterable<? extends Integer>) treeSet0, (Iterable<? extends Integer>) treeSet0, (Comparator<? super Integer>) comparator0, false);
      assertTrue(list0.isEmpty());
  }
}
