/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:11:25 GMT 2025
 */

package org.apache.commons.collections4.map;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.collections4.map.AbstractHashedMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class map_AbstractHashedMap__init__int_float_ESTest extends map_AbstractHashedMap__init__int_float_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AbstractHashedMap<Integer, Integer> abstractHashedMap0 = null;
      try {
        abstractHashedMap0 = new AbstractHashedMap<Integer, Integer>(0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Load factor must be greater than 0
         //
         verifyException("org.apache.commons.collections4.map.AbstractHashedMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AbstractHashedMap<Integer, Integer> abstractHashedMap0 = null;
      try {
        abstractHashedMap0 = new AbstractHashedMap<Integer, Integer>((-2110));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Initial capacity must be a non negative number
         //
         verifyException("org.apache.commons.collections4.map.AbstractHashedMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AbstractHashedMap<AbstractHashedMap<Integer, Integer>, Integer> abstractHashedMap0 = new AbstractHashedMap<AbstractHashedMap<Integer, Integer>, Integer>(0);
      assertEquals(0, abstractHashedMap0.size());
  }
}
