/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 03:59:51 GMT 2025
 */

package org.apache.commons.codec.net;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.codec.net.QCodec;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class net_QCodec_doDecoding_byte_____ESTest extends net_QCodec_doDecoding_byte_____ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QCodec qCodec0 = new QCodec();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)95;
      byte[] byteArray1 = qCodec0.doDecoding(byteArray0);
      assertArrayEquals(new byte[] {(byte)32, (byte)0, (byte)0, (byte)0}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QCodec qCodec0 = new QCodec();
      byte[] byteArray0 = qCodec0.doDecoding((byte[]) null);
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QCodec qCodec0 = new QCodec();
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = qCodec0.doDecoding(byteArray0);
      assertNotSame(byteArray1, byteArray0);
  }
}
