/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:27:38 GMT 2025
 */

package com.fasterxml.jackson.databind.util.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class util_internal_PrivateMaxEntriesMap_drainOnReadIfNeeded_int_long_ESTest extends util_internal_PrivateMaxEntriesMap_drainOnReadIfNeeded_int_long_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PrivateMaxEntriesMap.Builder<MockThread, MockThread> privateMaxEntriesMap_Builder0 = new PrivateMaxEntriesMap.Builder<MockThread, MockThread>();
      PrivateMaxEntriesMap<MockThread, MockThread> privateMaxEntriesMap0 = new PrivateMaxEntriesMap<MockThread, MockThread>(privateMaxEntriesMap_Builder0);
      privateMaxEntriesMap0.drainOnReadIfNeeded(0, 0L);
      assertEquals((-1L), privateMaxEntriesMap0.capacity());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PrivateMaxEntriesMap.Builder<MockThread, MockThread> privateMaxEntriesMap_Builder0 = new PrivateMaxEntriesMap.Builder<MockThread, MockThread>();
      PrivateMaxEntriesMap<MockThread, MockThread> privateMaxEntriesMap0 = new PrivateMaxEntriesMap<MockThread, MockThread>(privateMaxEntriesMap_Builder0);
      privateMaxEntriesMap0.drainOnReadIfNeeded(0, 4036L);
      assertEquals((-1L), privateMaxEntriesMap0.capacity());
  }
}
