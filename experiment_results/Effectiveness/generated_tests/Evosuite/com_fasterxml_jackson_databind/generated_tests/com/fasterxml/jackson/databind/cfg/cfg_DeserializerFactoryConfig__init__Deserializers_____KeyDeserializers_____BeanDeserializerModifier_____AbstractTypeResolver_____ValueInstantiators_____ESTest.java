/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:08:49 GMT 2025
 */

package com.fasterxml.jackson.databind.cfg;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.databind.AbstractTypeResolver;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerModifier;
import com.fasterxml.jackson.databind.deser.Deserializers;
import com.fasterxml.jackson.databind.deser.KeyDeserializers;
import com.fasterxml.jackson.databind.deser.ValueInstantiators;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class cfg_DeserializerFactoryConfig__init__Deserializers_____KeyDeserializers_____BeanDeserializerModifier_____AbstractTypeResolver_____ValueInstantiators_____ESTest extends cfg_DeserializerFactoryConfig__init__Deserializers_____KeyDeserializers_____BeanDeserializerModifier_____AbstractTypeResolver_____ValueInstantiators_____ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[0];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[0];
      AbstractTypeResolver[] abstractTypeResolverArray0 = new AbstractTypeResolver[1];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[0];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, (BeanDeserializerModifier[]) null, abstractTypeResolverArray0, valueInstantiatorsArray0);
      assertFalse(deserializerFactoryConfig0.hasKeyDeserializers());
      assertTrue(deserializerFactoryConfig0.hasAbstractTypeResolvers());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
      assertTrue(deserializerFactoryConfig0.hasKeyDeserializers());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Deserializers[] deserializersArray0 = new Deserializers[1];
      KeyDeserializers[] keyDeserializersArray0 = new KeyDeserializers[1];
      BeanDeserializerModifier[] beanDeserializerModifierArray0 = new BeanDeserializerModifier[0];
      ValueInstantiators[] valueInstantiatorsArray0 = new ValueInstantiators[2];
      DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig(deserializersArray0, keyDeserializersArray0, beanDeserializerModifierArray0, (AbstractTypeResolver[]) null, valueInstantiatorsArray0);
      assertTrue(deserializerFactoryConfig0.hasDeserializers());
      assertTrue(deserializerFactoryConfig0.hasValueInstantiators());
  }
}
