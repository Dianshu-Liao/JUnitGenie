/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:15:20 GMT 2025
 */

package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.databind.util.ObjectBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class util_ObjectBuffer__copyTo_Object_int_Object_____int_ESTest extends util_ObjectBuffer__copyTo_Object_int_Object_____int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ObjectBuffer objectBuffer0 = new ObjectBuffer();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) objectArray0;
      // Undeclared exception!
      try { 
        objectBuffer0._copyTo(objectArray0[0], 1174, objectArray0, 0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Should have gotten 1174 entries, got 0
         //
         verifyException("com.fasterxml.jackson.databind.util.ObjectBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ObjectBuffer objectBuffer0 = new ObjectBuffer();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) objectArray0;
      objectBuffer0._copyTo(objectArray0[0], 0, objectArray0, 0);
      assertEquals(0, objectBuffer0.bufferedSize());
  }
}
