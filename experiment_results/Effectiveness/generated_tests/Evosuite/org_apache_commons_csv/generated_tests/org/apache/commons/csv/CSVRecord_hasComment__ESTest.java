/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:19:53 GMT 2025
 */

package org.apache.commons.csv;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class CSVRecord_hasComment__ESTest extends CSVRecord_hasComment__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[0];
      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, "66>`&4Y1T,+3Jj&AN4", (-2154L), 3289L, (-77L));
      boolean boolean0 = cSVRecord0.hasComment();
      assertEquals((-2154L), cSVRecord0.getRecordNumber());
      assertTrue(boolean0);
      assertEquals(3289L, cSVRecord0.getCharacterPosition());
      assertEquals((-77L), cSVRecord0.getBytePosition());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[0];
      CSVRecord cSVRecord0 = new CSVRecord((CSVParser) null, stringArray0, (String) null, 1L, (-1350L), (-1350L));
      boolean boolean0 = cSVRecord0.hasComment();
      assertEquals((-1350L), cSVRecord0.getCharacterPosition());
      assertEquals(1L, cSVRecord0.getRecordNumber());
      assertFalse(boolean0);
      assertEquals((-1350L), cSVRecord0.getBytePosition());
  }
}
