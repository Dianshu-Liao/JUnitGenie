/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 07:39:19 GMT 2025
 */

package org.apache.commons.jxpath.ri.model.jdom;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class ri_model_jdom_JDOMNamespacePointer_asPath__ESTest extends ri_model_jdom_JDOMNamespacePointer_asPath__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QName qName0 = new QName("($qbhstfAw/");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      JDOMNamespacePointer jDOMNamespacePointer0 = new JDOMNamespacePointer(variablePointer0, "($qbhstfAw/");
      String string0 = jDOMNamespacePointer0.asPath();
      assertEquals("$($qbhstfAw/namespace::($qbhstfAw/", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      JDOMNamespacePointer jDOMNamespacePointer0 = new JDOMNamespacePointer(variablePointer0, "<<unknown namespace>>");
      String string0 = jDOMNamespacePointer0.asPath();
      assertEquals("$null/namespace::<<unknown namespace>>", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JDOMNamespacePointer jDOMNamespacePointer0 = new JDOMNamespacePointer((NodePointer) null, "");
      String string0 = jDOMNamespacePointer0.asPath();
      assertEquals("namespace::", string0);
  }
}
