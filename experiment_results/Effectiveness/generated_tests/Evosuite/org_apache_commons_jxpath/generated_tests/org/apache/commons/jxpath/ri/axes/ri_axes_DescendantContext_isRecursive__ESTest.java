/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:57:08 GMT 2025
 */

package org.apache.commons.jxpath.ri.axes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.Functions;
import org.apache.commons.jxpath.IdentityManager;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.KeyManager;
import org.apache.commons.jxpath.Pointer;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.axes.DescendantContext;
import org.apache.commons.jxpath.ri.axes.InitialContext;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.compiler.NodeNameTest;
import org.apache.commons.jxpath.ri.model.beans.CollectionPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class ri_axes_DescendantContext_isRecursive__ESTest extends ri_axes_DescendantContext_isRecursive__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JXPathContext jXPathContext0 = mock(JXPathContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(jXPathContext0).getContextBean();
      doReturn((Pointer) null, (Pointer) null, (Pointer) null, (Pointer) null, (Pointer) null).when(jXPathContext0).getContextPointer();
      doReturn((AbstractFactory) null, (AbstractFactory) null, (AbstractFactory) null, (AbstractFactory) null, (AbstractFactory) null).when(jXPathContext0).getFactory();
      doReturn((Functions) null, (Functions) null, (Functions) null, (Functions) null, (Functions) null).when(jXPathContext0).getFunctions();
      doReturn((IdentityManager) null, (IdentityManager) null, (IdentityManager) null, (IdentityManager) null, (IdentityManager) null).when(jXPathContext0).getIdentityManager();
      doReturn((KeyManager) null, (KeyManager) null, (KeyManager) null, (KeyManager) null, (KeyManager) null).when(jXPathContext0).getKeyManager();
      doReturn((Locale) null, (Locale) null, (Locale) null, (Locale) null, (Locale) null).when(jXPathContext0).getLocale();
      doReturn((Pointer) null, (Pointer) null, (Pointer) null, (Pointer) null, (Pointer) null).when(jXPathContext0).getNamespaceContextPointer();
      doReturn((JXPathContext) null, (JXPathContext) null, (JXPathContext) null, (JXPathContext) null, (JXPathContext) null).when(jXPathContext0).getParentContext();
      doReturn((Variables) null, (Variables) null, (Variables) null, (Variables) null, (Variables) null).when(jXPathContext0).getVariables();
      doReturn(false, false, false, false, false).when(jXPathContext0).isLenient();
      Locale locale0 = Locale.ENGLISH;
      CollectionPointer collectionPointer0 = new CollectionPointer(jXPathContext0, locale0);
      JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl(jXPathContext0, jXPathContext0, collectionPointer0);
      RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, collectionPointer0);
      QName qName0 = new QName("", "<<unknown namespace>>");
      NodeNameTest nodeNameTest0 = new NodeNameTest(qName0);
      DescendantContext descendantContext0 = new DescendantContext(rootContext0, true, nodeNameTest0);
      InitialContext initialContext0 = new InitialContext(descendantContext0);
  }
}
