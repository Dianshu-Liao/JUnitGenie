/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:32:32 GMT 2025
 */

package org.apache.commons.jxpath.ri.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.BasicVariables;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.Variables;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class ri_model_VariablePointer_createPath_JXPathContext_ESTest extends ri_model_VariablePointer_createPath_JXPathContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.JXPathContext", "org.apache.commons.jxpath.JXPathContext");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      AbstractFactory abstractFactory0 = mock(AbstractFactory.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(abstractFactory0).declareVariable(any(org.apache.commons.jxpath.JXPathContext.class) , anyString());
      JXPathContext jXPathContext0 = mock(JXPathContext.class, new ViolatedAssumptionAnswer());
      doReturn(abstractFactory0).when(jXPathContext0).getFactory();
      // Undeclared exception!
      try { 
        variablePointer0.createPath(jXPathContext0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory cannot define variable 'org.apache.commons.jxpath.JXPathContext:org.apache.commons.jxpath.JXPathContext' for path: $org.apache.commons.jxpath.JXPathContext:org.apache.commons.jxpath.JXPathContext
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QName qName0 = new QName("org.apache.commons.jxpath.JXPathContext", "org.apache.commons.jxpath.JXPathContext");
      VariablePointer variablePointer0 = new VariablePointer(qName0);
      AbstractFactory abstractFactory0 = mock(AbstractFactory.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(abstractFactory0).declareVariable(any(org.apache.commons.jxpath.JXPathContext.class) , anyString());
      JXPathContext jXPathContext0 = mock(JXPathContext.class, new ViolatedAssumptionAnswer());
      doReturn(abstractFactory0).when(jXPathContext0).getFactory();
      doReturn((Variables) null).when(jXPathContext0).getVariables();
      // Undeclared exception!
      try { 
        variablePointer0.createPath(jXPathContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.jxpath.ri.model.VariablePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BasicVariables basicVariables0 = new BasicVariables();
      QName qName0 = new QName("", "Cannot set undefined variable: ");
      VariablePointer variablePointer0 = new VariablePointer(basicVariables0, qName0);
      NodePointer nodePointer0 = variablePointer0.createPath((JXPathContext) null);
      assertSame(nodePointer0, variablePointer0);
  }
}
