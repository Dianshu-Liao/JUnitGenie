/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 07:25:00 GMT 2025
 */

package org.apache.commons.jxpath.ri.model.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.commons.jxpath.AbstractFactory;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.dom.DOMNodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class ri_model_dom_DOMNodePointer_createChild_JXPathContext_QName_int_ESTest extends ri_model_dom_DOMNodePointer_createChild_JXPathContext_QName_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
      AbstractFactory abstractFactory0 = mock(AbstractFactory.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(abstractFactory0).createObject(any(org.apache.commons.jxpath.JXPathContext.class) , any(org.apache.commons.jxpath.Pointer.class) , any() , anyString() , anyInt());
      JXPathContext jXPathContext0 = mock(JXPathContext.class, new ViolatedAssumptionAnswer());
      doReturn(abstractFactory0).when(jXPathContext0).getFactory();
      QName qName0 = new QName("xml", "http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory could not create a child node for path: /xml:http://www.w3.org/2000/xmlns/[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
      AbstractFactory abstractFactory0 = mock(AbstractFactory.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(abstractFactory0).createObject(any(org.apache.commons.jxpath.JXPathContext.class) , any(org.apache.commons.jxpath.Pointer.class) , any() , anyString() , anyInt());
      JXPathContext jXPathContext0 = mock(JXPathContext.class, new ViolatedAssumptionAnswer());
      doReturn(abstractFactory0).when(jXPathContext0).getFactory();
      QName qName0 = new QName("<<unknown namespace>>");
      // Undeclared exception!
      try { 
        dOMNodePointer0.createChild(jXPathContext0, qName0, Integer.MIN_VALUE);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Factory could not create a child node for path: /<<unknown namespace>>[1]
         //
         verifyException("org.apache.commons.jxpath.ri.model.dom.DOMNodePointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMNodePointer dOMNodePointer0 = new DOMNodePointer((NodePointer) null, iIOMetadataNode0);
      AbstractFactory abstractFactory0 = mock(AbstractFactory.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(abstractFactory0).createObject(any(org.apache.commons.jxpath.JXPathContext.class) , any(org.apache.commons.jxpath.Pointer.class) , any() , anyString() , anyInt());
      JXPathContext jXPathContext0 = mock(JXPathContext.class, new ViolatedAssumptionAnswer());
      doReturn(abstractFactory0).when(jXPathContext0).getFactory();
      doReturn("http://www.w3.org/2000/xmlns/").when(jXPathContext0).getNamespaceURI(anyString());
      QName qName0 = new QName("<<unknown namespace>>", "http://www.w3.org/2000/xmlns/");
      NodePointer nodePointer0 = dOMNodePointer0.createChild(jXPathContext0, qName0, (-1));
      assertNull(nodePointer0);
  }
}
