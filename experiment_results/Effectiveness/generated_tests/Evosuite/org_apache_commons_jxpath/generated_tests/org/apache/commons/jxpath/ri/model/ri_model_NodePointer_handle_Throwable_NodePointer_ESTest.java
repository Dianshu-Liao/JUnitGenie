/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:40:26 GMT 2025
 */

package org.apache.commons.jxpath.ri.model;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.apache.commons.jxpath.ri.model.VariablePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class ri_model_NodePointer_handle_Throwable_NodePointer_ESTest extends ri_model_NodePointer_handle_Throwable_NodePointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      VariablePointer variablePointer0 = new VariablePointer((QName) null);
      assertTrue(variablePointer0.isRoot());
      
      MockThrowable mockThrowable0 = new MockThrowable();
      variablePointer0.handle((Throwable) mockThrowable0, (NodePointer) variablePointer0);
      assertEquals(Integer.MIN_VALUE, variablePointer0.getIndex());
      assertFalse(variablePointer0.isAttribute());
  }
}
