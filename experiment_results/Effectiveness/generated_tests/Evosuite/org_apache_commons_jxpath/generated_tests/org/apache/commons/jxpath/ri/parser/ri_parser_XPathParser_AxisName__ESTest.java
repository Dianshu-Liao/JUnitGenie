/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:07:39 GMT 2025
 */

package org.apache.commons.jxpath.ri.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringReader;
import org.apache.commons.jxpath.ri.parser.XPathParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class ri_parser_XPathParser_AxisName__ESTest extends ri_parser_XPathParser_AxisName__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StringReader stringReader0 = new StringReader("sKykWj");
      XPathParser xPathParser0 = new XPathParser(stringReader0);
      try { 
        xPathParser0.AxisName();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Encountered \"sKykWj\" at line 1, column 1.
         // Was expecting one of:
         //     \"self::\" ...
         //     \"child::\" ...
         //     \"parent::\" ...
         //     \"ancestor::\" ...
         //     \"attribute::\" ...
         //     \"namespace::\" ...
         //     \"preceding::\" ...
         //     \"following::\" ...
         //     \"descendant::\" ...
         //     \"ancestor-or-self::\" ...
         //     \"following-sibling::\" ...
         //     \"preceding-sibling::\" ...
         //     \"descendant-or-self::\" ...
         //     
         //
         verifyException("org.apache.commons.jxpath.ri.parser.XPathParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringReader stringReader0 = new StringReader("preceding::");
      XPathParser xPathParser0 = new XPathParser(stringReader0);
      int int0 = xPathParser0.AxisName();
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StringReader stringReader0 = new StringReader("ancestor::");
      XPathParser xPathParser0 = new XPathParser(stringReader0);
      int int0 = xPathParser0.AxisName();
      assertEquals(4, int0);
  }
}
