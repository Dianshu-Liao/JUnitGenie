/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:01:24 GMT 2025
 */

package org.apache.commons.jxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import java.beans.PropertyDescriptor;
import org.apache.commons.jxpath.JXPathBasicBeanInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class JXPathBasicBeanInfo_toString__ESTest extends JXPathBasicBeanInfo_toString__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<PropertyDescriptor> class0 = PropertyDescriptor.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, true);
      String string0 = jXPathBasicBeanInfo0.toString();
      assertEquals("BeanInfo [class = java.beans.PropertyDescriptor, atomic, properties = \n    boolean: bound\n    boolean: constrained\n    class java.lang.String: displayName\n    boolean: expert\n    boolean: hidden\n    class java.lang.String: name\n    boolean: preferred\n    class java.lang.Class: propertyEditorClass\n    class java.lang.Class: propertyType\n    class java.lang.reflect.Method: readMethod\n    class java.lang.String: shortDescription\n    class java.lang.reflect.Method: writeMethod]", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Class<PropertyDescriptor> class0 = PropertyDescriptor.class;
      JXPathBasicBeanInfo jXPathBasicBeanInfo0 = new JXPathBasicBeanInfo(class0, class0);
      String string0 = jXPathBasicBeanInfo0.toString();
      assertEquals("BeanInfo [class = java.beans.PropertyDescriptor, dynamic, properties = \n    boolean: bound\n    boolean: constrained\n    class java.lang.String: displayName\n    boolean: expert\n    boolean: hidden\n    class java.lang.String: name\n    boolean: preferred\n    class java.lang.Class: propertyEditorClass\n    class java.lang.Class: propertyType\n    class java.lang.reflect.Method: readMethod\n    class java.lang.String: shortDescription\n    class java.lang.reflect.Method: writeMethod]", string0);
  }
}
