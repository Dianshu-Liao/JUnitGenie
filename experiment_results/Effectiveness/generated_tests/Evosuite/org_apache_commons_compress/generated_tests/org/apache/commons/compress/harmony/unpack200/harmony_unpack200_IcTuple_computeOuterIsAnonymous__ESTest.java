/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 03:56:04 GMT 2025
 */

package org.apache.commons.compress.harmony.unpack200;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.compress.harmony.unpack200.IcTuple;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class harmony_unpack200_IcTuple_computeOuterIsAnonymous__ESTest extends harmony_unpack200_IcTuple_computeOuterIsAnonymous__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple(" in ", 0, (String) null, "l0|Yx,|/AdY5XC", 0, 1, (-3491), (-509));
      assertEquals((-3491), icTuple0.simpleClassNameIndex());
      assertTrue(icTuple0.outerIsAnonymous());
      assertEquals((-509), icTuple0.getTupleIndex());
      assertEquals(0, icTuple0.thisClassIndex());
      assertEquals("$in", icTuple0.outerClassString());
      assertEquals(0, icTuple0.getF());
      assertFalse(icTuple0.isAnonymous());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IcTuple icTuple0 = null;
      try {
        icTuple0 = new IcTuple("Should have an outer before checking if it's anonymous", (-293), "", "aY`P]Pk,,_yG=]Z", 763, 65536, (-3378), (-293));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Should have an outer before checking if it's anonymous
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.IcTuple", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IcTuple icTuple0 = new IcTuple("G>{LX;, SGWmr%", 1560, "G>{LX;, SGWmr%", "G>{LX;, SGWmr%", (-1), 1560, (-2975), 0);
      assertEquals((-2975), icTuple0.simpleClassNameIndex());
      assertEquals(1560, icTuple0.outerClassIndex());
      assertTrue(icTuple0.isMember());
      assertFalse(icTuple0.outerIsAnonymous());
      assertEquals(0, icTuple0.getTupleIndex());
      assertEquals(1560, icTuple0.getF());
  }
}
