/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:47:16 GMT 2025
 */

package org.apache.commons.compress.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.nio.channels.SeekableByteChannel;
import org.apache.commons.compress.utils.BoundedSeekableByteChannelInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class utils_BoundedArchiveInputStream_read__ESTest extends utils_BoundedArchiveInputStream_read__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SeekableByteChannel seekableByteChannel0 = mock(SeekableByteChannel.class, new ViolatedAssumptionAnswer());
      SeekableByteChannel seekableByteChannel1 = mock(SeekableByteChannel.class, new ViolatedAssumptionAnswer());
      doReturn((SeekableByteChannel) null, (SeekableByteChannel) null).when(seekableByteChannel1).position(anyLong());
      doReturn(0, 0).when(seekableByteChannel1).read(any(java.nio.ByteBuffer.class));
      BoundedSeekableByteChannelInputStream boundedSeekableByteChannelInputStream0 = new BoundedSeekableByteChannelInputStream(4365L, 4365L, seekableByteChannel1);
      boundedSeekableByteChannelInputStream0.read();
      boundedSeekableByteChannelInputStream0.read();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SeekableByteChannel seekableByteChannel0 = mock(SeekableByteChannel.class, new ViolatedAssumptionAnswer());
      BoundedSeekableByteChannelInputStream boundedSeekableByteChannelInputStream0 = new BoundedSeekableByteChannelInputStream(2475L, 0L, seekableByteChannel0);
      int int0 = boundedSeekableByteChannelInputStream0.read();
      assertEquals((-1), int0);
  }
}
