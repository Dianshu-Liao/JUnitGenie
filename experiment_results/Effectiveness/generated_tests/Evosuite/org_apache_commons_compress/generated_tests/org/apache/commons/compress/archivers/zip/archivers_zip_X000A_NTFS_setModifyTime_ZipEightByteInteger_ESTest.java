/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:56:18 GMT 2025
 */

package org.apache.commons.compress.archivers.zip;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.compress.archivers.zip.X000A_NTFS;
import org.apache.commons.compress.archivers.zip.ZipEightByteInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class archivers_zip_X000A_NTFS_setModifyTime_ZipEightByteInteger_ESTest extends archivers_zip_X000A_NTFS_setModifyTime_ZipEightByteInteger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      X000A_NTFS x000A_NTFS0 = new X000A_NTFS();
      x000A_NTFS0.setModifyTime((ZipEightByteInteger) null);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      X000A_NTFS x000A_NTFS0 = new X000A_NTFS();
      ZipEightByteInteger zipEightByteInteger0 = ZipEightByteInteger.ZERO;
      x000A_NTFS0.setModifyTime(zipEightByteInteger0);
      assertEquals(0L, zipEightByteInteger0.getLongValue());
  }
}
