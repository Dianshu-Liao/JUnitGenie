/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 03:57:19 GMT 2025
 */

package org.apache.commons.compress.harmony.unpack200;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.apache.commons.compress.harmony.unpack200.SegmentOptions;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class harmony_unpack200_SegmentOptions__init__int_ESTest extends harmony_unpack200_SegmentOptions__init__int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SegmentOptions segmentOptions0 = null;
      try {
        segmentOptions0 = new SegmentOptions((-508));
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Some unused flags are non-zero
         //
         verifyException("org.apache.commons.compress.harmony.unpack200.SegmentOptions", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SegmentOptions segmentOptions0 = new SegmentOptions(16);
      assertFalse(segmentOptions0.hasSpecialFormats());
      assertFalse(segmentOptions0.hasFileOptions());
  }
}
