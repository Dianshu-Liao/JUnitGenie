/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:25:44 GMT 2025
 */

package org.apache.commons.compress.archivers.tar;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.compress.archivers.tar.TarArchiveStructSparse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class archivers_tar_TarArchiveStructSparse_equals_Object_ESTest extends archivers_tar_TarArchiveStructSparse_equals_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TarArchiveStructSparse tarArchiveStructSparse0 = new TarArchiveStructSparse(1880L, 1880L);
      TarArchiveStructSparse tarArchiveStructSparse1 = new TarArchiveStructSparse(1880L, 0L);
      boolean boolean0 = tarArchiveStructSparse0.equals(tarArchiveStructSparse1);
      assertEquals(1880L, tarArchiveStructSparse0.getNumbytes());
      assertEquals(1880L, tarArchiveStructSparse1.getOffset());
      assertFalse(tarArchiveStructSparse1.equals((Object)tarArchiveStructSparse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TarArchiveStructSparse tarArchiveStructSparse0 = new TarArchiveStructSparse(1292L, 1292L);
      TarArchiveStructSparse tarArchiveStructSparse1 = new TarArchiveStructSparse(1292L, 1292L);
      boolean boolean0 = tarArchiveStructSparse0.equals(tarArchiveStructSparse1);
      assertEquals(1292L, tarArchiveStructSparse1.getNumbytes());
      assertEquals(1292L, tarArchiveStructSparse1.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TarArchiveStructSparse tarArchiveStructSparse0 = new TarArchiveStructSparse(0L, 0L);
      Object object0 = new Object();
      boolean boolean0 = tarArchiveStructSparse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TarArchiveStructSparse tarArchiveStructSparse0 = new TarArchiveStructSparse(0L, 0L);
      boolean boolean0 = tarArchiveStructSparse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TarArchiveStructSparse tarArchiveStructSparse0 = new TarArchiveStructSparse(1L, 1L);
      boolean boolean0 = tarArchiveStructSparse0.equals(tarArchiveStructSparse0);
      assertEquals(1L, tarArchiveStructSparse0.getNumbytes());
      assertEquals(1L, tarArchiveStructSparse0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TarArchiveStructSparse tarArchiveStructSparse0 = new TarArchiveStructSparse(1292L, 1292L);
      TarArchiveStructSparse tarArchiveStructSparse1 = new TarArchiveStructSparse(473L, 0L);
      boolean boolean0 = tarArchiveStructSparse0.equals(tarArchiveStructSparse1);
      assertEquals(0L, tarArchiveStructSparse1.getNumbytes());
      assertEquals(473L, tarArchiveStructSparse1.getOffset());
      assertEquals(1292L, tarArchiveStructSparse0.getNumbytes());
      assertFalse(boolean0);
  }
}
