/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 14:03:20 GMT 2025
 */

package com.fasterxml.jackson.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.JsonRecyclerPools;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class util_BufferRecycler_withPool_RecyclerPool_ESTest extends util_BufferRecycler_withPool_RecyclerPool_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BufferRecycler bufferRecycler0 = new BufferRecycler();
      JsonRecyclerPools.NonRecyclingPool jsonRecyclerPools_NonRecyclingPool0 = JsonRecyclerPools.NonRecyclingPool.GLOBAL;
      bufferRecycler0.withPool(jsonRecyclerPools_NonRecyclingPool0);
      // Undeclared exception!
      try { 
        bufferRecycler0.withPool(jsonRecyclerPools_NonRecyclingPool0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // BufferRecycler already linked to pool: com.fasterxml.jackson.core.util.JsonRecyclerPools$NonRecyclingPool@2
         //
         verifyException("com.fasterxml.jackson.core.util.BufferRecycler", e);
      }
  }
}
