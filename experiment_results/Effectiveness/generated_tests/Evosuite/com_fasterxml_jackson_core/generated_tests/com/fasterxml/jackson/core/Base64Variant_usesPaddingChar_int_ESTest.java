/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 13:33:28 GMT 2025
 */

package com.fasterxml.jackson.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.Base64Variant;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Base64Variant_usesPaddingChar_int_ESTest extends Base64Variant_usesPaddingChar_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Base64Variant base64Variant0 = new Base64Variant("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", true, 'Z', 'Z');
      boolean boolean0 = base64Variant0.usesPaddingChar((int) 'Z');
      assertTrue(boolean0);
      assertTrue(base64Variant0.usesPadding());
      assertEquals(90, base64Variant0.getMaxLineLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Base64Variant base64Variant0 = new Base64Variant("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", false, '<', 2210);
      boolean boolean0 = base64Variant0.usesPaddingChar(2210);
      assertEquals(2210, base64Variant0.getMaxLineLength());
      assertFalse(boolean0);
      assertEquals('<', base64Variant0.getPaddingChar());
      assertFalse(base64Variant0.acceptsPaddingOnRead());
  }
}
