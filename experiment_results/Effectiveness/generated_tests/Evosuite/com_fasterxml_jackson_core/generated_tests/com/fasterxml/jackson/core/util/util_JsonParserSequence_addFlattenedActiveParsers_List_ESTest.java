/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 14:00:54 GMT 2025
 */

package com.fasterxml.jackson.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.util.JsonParserSequence;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class util_JsonParserSequence_addFlattenedActiveParsers_List_ESTest extends util_JsonParserSequence_addFlattenedActiveParsers_List_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonParser[] jsonParserArray0 = new JsonParser[3];
      JsonParserSequence jsonParserSequence0 = new JsonParserSequence(jsonParserArray0);
      jsonParserArray0[0] = (JsonParser) jsonParserSequence0;
      LinkedList<JsonParser> linkedList0 = new LinkedList<JsonParser>();
      // Undeclared exception!
      try { 
        jsonParserSequence0.addFlattenedActiveParsers(linkedList0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonParser[] jsonParserArray0 = new JsonParser[6];
      JsonParserSequence jsonParserSequence0 = new JsonParserSequence(jsonParserArray0);
      LinkedList<JsonParser> linkedList0 = new LinkedList<JsonParser>();
      jsonParserSequence0.addFlattenedActiveParsers(linkedList0);
      assertEquals(6, linkedList0.size());
  }
}
