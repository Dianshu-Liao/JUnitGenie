/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 15:22:35 GMT 2025
 */

package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.fasterxml.jackson.core.json.DupDetector;
import com.fasterxml.jackson.core.json.JsonWriteContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class json_JsonWriteContext_writeFieldName_String_ESTest extends json_JsonWriteContext_writeFieldName_String_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DupDetector dupDetector0 = mock(DupDetector.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(dupDetector0).isDup(anyString());
      JsonWriteContext jsonWriteContext0 = new JsonWriteContext(2, (JsonWriteContext) null, dupDetector0, (Object) null);
      int int0 = jsonWriteContext0.writeFieldName("d'");
      assertTrue(jsonWriteContext0.hasCurrentName());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = new JsonWriteContext(2, (JsonWriteContext) null, (DupDetector) null, (Object) null);
      jsonWriteContext0.writeFieldName("d'");
      int int0 = jsonWriteContext0.writeFieldName("d'");
      assertTrue(jsonWriteContext0.hasCurrentName());
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = new JsonWriteContext((-2143), (JsonWriteContext) null, (DupDetector) null, (Object) null);
      int int0 = jsonWriteContext0.writeFieldName((String) null);
      assertEquals(4, int0);
      assertEquals(0, jsonWriteContext0.getNestingDepth());
      assertEquals(0, jsonWriteContext0.getEntryCount());
      assertEquals("?", jsonWriteContext0.getTypeDesc());
  }
}
