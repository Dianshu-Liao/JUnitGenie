/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 14:10:27 GMT 2025
 */

package com.fasterxml.jackson.core.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.fasterxml.jackson.core.io.SerializedString;
import java.nio.ByteBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class io_SerializedString_putUnquotedUTF8_ByteBuffer_ESTest extends io_SerializedString_putUnquotedUTF8_ByteBuffer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("54,-JB)pLJPO9");
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, new ViolatedAssumptionAnswer());
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SerializedString serializedString0 = new SerializedString("");
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, new ViolatedAssumptionAnswer());
      doReturn((ByteBuffer) null).when(byteBuffer0).put(any(byte[].class) , anyInt() , anyInt());
      serializedString0.putUnquotedUTF8(byteBuffer0);
      ByteBuffer byteBuffer1 = mock(ByteBuffer.class, new ViolatedAssumptionAnswer());
      doReturn((ByteBuffer) null).when(byteBuffer1).put(any(byte[].class) , anyInt() , anyInt());
      int int0 = serializedString0.putUnquotedUTF8(byteBuffer1);
      assertEquals(0, int0);
  }
}
