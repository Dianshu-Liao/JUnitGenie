/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 13:33:41 GMT 2025
 */

package com.fasterxml.jackson.core;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class TokenStreamFactory__checkRangeBoundsForByteArray_byte_____int_int_ESTest extends TokenStreamFactory__checkRangeBoundsForByteArray_byte_____int_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      byte[] byteArray0 = new byte[1];
      try { 
        jsonFactory0._checkRangeBoundsForByteArray(byteArray0, (-756), (byte)0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid 'offset' (-756) and/or 'len' (0) arguments for `byte[]` of length 1
         //
         verifyException("com.fasterxml.jackson.core.TokenStreamFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      try { 
        jsonFactory0._checkRangeBoundsForByteArray((byte[]) null, 2700, 2700);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid `byte[]` argument: `null`
         //
         verifyException("com.fasterxml.jackson.core.TokenStreamFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonFactory jsonFactory0 = new JsonFactory();
      byte[] byteArray0 = new byte[1];
      jsonFactory0._checkRangeBoundsForByteArray(byteArray0, (byte)0, (byte)0);
      assertEquals(2079, jsonFactory0.getGeneratorFeatures());
  }
}
