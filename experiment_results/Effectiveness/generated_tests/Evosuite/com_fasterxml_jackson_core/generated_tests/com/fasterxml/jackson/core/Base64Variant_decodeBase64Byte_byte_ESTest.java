/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 13:33:32 GMT 2025
 */

package com.fasterxml.jackson.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.Base64Variant;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Base64Variant_decodeBase64Byte_byte_ESTest extends Base64Variant_decodeBase64Byte_byte_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Base64Variant base64Variant0 = new Base64Variant("Unexpected end of base64-encoded String: base64 variant '%s' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", false, 'w', 128);
      int int0 = base64Variant0.decodeBase64Byte((byte) (-2));
      assertEquals("Unexpected end of base64-encoded String: base64 variant '%s' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured", base64Variant0.toString());
      assertEquals((-1), int0);
      assertEquals('w', base64Variant0.getPaddingChar());
      assertFalse(base64Variant0.usesPadding());
      assertEquals(128, base64Variant0.getMaxLineLength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Base64Variant base64Variant0 = new Base64Variant("Unexpected end of base64-encoded String: base64 variant '%s' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", false, 'w', 128);
      int int0 = base64Variant0.decodeBase64Byte((byte)38);
      assertEquals(128, base64Variant0.getMaxLineLength());
      assertEquals("Unexpected end of base64-encoded String: base64 variant '%s' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured", base64Variant0.getName());
      assertFalse(base64Variant0.acceptsPaddingOnRead());
      assertEquals((-1), int0);
      assertEquals((byte)119, base64Variant0.getPaddingByte());
  }
}
