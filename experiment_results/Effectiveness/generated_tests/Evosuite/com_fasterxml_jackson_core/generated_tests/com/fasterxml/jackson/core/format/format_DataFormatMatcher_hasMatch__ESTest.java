/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 15:57:03 GMT 2025
 */

package com.fasterxml.jackson.core.format;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.format.DataFormatMatcher;
import com.fasterxml.jackson.core.format.MatchStrength;
import java.io.ByteArrayInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class format_DataFormatMatcher_hasMatch__ESTest extends format_DataFormatMatcher_hasMatch__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MatchStrength matchStrength0 = MatchStrength.SOLID_MATCH;
      JsonFactory jsonFactory0 = new JsonFactory();
      DataFormatMatcher dataFormatMatcher0 = new DataFormatMatcher(byteArrayInputStream0, byteArray0, (byte)0, (byte)0, jsonFactory0, matchStrength0);
      boolean boolean0 = dataFormatMatcher0.hasMatch();
      assertTrue(boolean0);
      assertEquals(MatchStrength.SOLID_MATCH, dataFormatMatcher0.getMatchStrength());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      MatchStrength matchStrength0 = MatchStrength.SOLID_MATCH;
      DataFormatMatcher dataFormatMatcher0 = new DataFormatMatcher(byteArrayInputStream0, byteArray0, 0, 0, (JsonFactory) null, matchStrength0);
      boolean boolean0 = dataFormatMatcher0.hasMatch();
      assertFalse(boolean0);
      assertEquals(MatchStrength.SOLID_MATCH, dataFormatMatcher0.getMatchStrength());
  }
}
