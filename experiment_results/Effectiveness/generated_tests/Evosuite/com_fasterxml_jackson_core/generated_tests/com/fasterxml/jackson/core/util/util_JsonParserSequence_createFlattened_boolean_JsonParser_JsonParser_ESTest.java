/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 14:00:49 GMT 2025
 */

package com.fasterxml.jackson.core.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.util.JsonParserDelegate;
import com.fasterxml.jackson.core.util.JsonParserSequence;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class util_JsonParserSequence_createFlattened_boolean_JsonParser_JsonParser_ESTest extends util_JsonParserSequence_createFlattened_boolean_JsonParser_JsonParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate((JsonParser) null);
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      TokenFilter.Inclusion tokenFilter_Inclusion0 = TokenFilter.Inclusion.ONLY_INCLUDE_ALL;
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserDelegate0, tokenFilter0, tokenFilter_Inclusion0, true);
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(false, (JsonParser) filteringParserDelegate0, (JsonParser) jsonParserDelegate0);
      JsonParserSequence jsonParserSequence1 = JsonParserSequence.createFlattened(true, (JsonParser) jsonParserSequence0, (JsonParser) null);
      assertEquals(3, jsonParserSequence1.containedParsersCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonParserDelegate jsonParserDelegate0 = new JsonParserDelegate((JsonParser) null);
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      TokenFilter.Inclusion tokenFilter_Inclusion0 = TokenFilter.Inclusion.ONLY_INCLUDE_ALL;
      FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParserDelegate0, tokenFilter0, tokenFilter_Inclusion0, true);
      JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(false, (JsonParser) filteringParserDelegate0, (JsonParser) jsonParserDelegate0);
      // Undeclared exception!
      try { 
        JsonParserSequence.createFlattened(true, (JsonParser) jsonParserDelegate0, (JsonParser) jsonParserSequence0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.util.JsonParserDelegate", e);
      }
  }
}
