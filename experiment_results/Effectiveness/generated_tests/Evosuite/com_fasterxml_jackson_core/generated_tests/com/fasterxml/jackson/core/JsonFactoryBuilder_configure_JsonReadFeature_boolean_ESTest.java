/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 13:33:49 GMT 2025
 */

package com.fasterxml.jackson.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.JsonFactoryBuilder;
import com.fasterxml.jackson.core.json.JsonReadFeature;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class JsonFactoryBuilder_configure_JsonReadFeature_boolean_ESTest extends JsonFactoryBuilder_configure_JsonReadFeature_boolean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonFactoryBuilder jsonFactoryBuilder0 = new JsonFactoryBuilder();
      JsonReadFeature jsonReadFeature0 = JsonReadFeature.ALLOW_YAML_COMMENTS;
      jsonFactoryBuilder0.configure(jsonReadFeature0, true);
      assertEquals(5, jsonFactoryBuilder0.streamReadFeatures());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonFactoryBuilder jsonFactoryBuilder0 = new JsonFactoryBuilder();
      JsonReadFeature jsonReadFeature0 = JsonReadFeature.ALLOW_YAML_COMMENTS;
      JsonFactoryBuilder jsonFactoryBuilder1 = jsonFactoryBuilder0.configure(jsonReadFeature0, false);
      assertEquals(0, jsonFactoryBuilder1.highestNonEscapedChar());
      assertEquals('\"', jsonFactoryBuilder1.quoteChar());
      assertEquals(1, jsonFactoryBuilder1.streamReadFeatures());
  }
}
