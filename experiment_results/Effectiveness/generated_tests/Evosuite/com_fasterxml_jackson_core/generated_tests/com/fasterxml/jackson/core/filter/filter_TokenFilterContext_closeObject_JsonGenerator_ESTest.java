/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 16:12:53 GMT 2025
 */

package com.fasterxml.jackson.core.filter;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.filter.FilteringGeneratorDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.filter.TokenFilterContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class filter_TokenFilterContext_closeObject_JsonGenerator_ESTest extends filter_TokenFilterContext_closeObject_JsonGenerator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TokenFilter tokenFilter0 = TokenFilter.INCLUDE_ALL;
      TokenFilterContext tokenFilterContext0 = new TokenFilterContext(92, (TokenFilterContext) null, tokenFilter0, false);
      TokenFilterContext tokenFilterContext1 = tokenFilterContext0.closeObject((JsonGenerator) null);
      assertNull(tokenFilterContext1);
      assertEquals(0, tokenFilterContext0.getNestingDepth());
      assertEquals("?", tokenFilterContext0.typeDesc());
      assertEquals(0, tokenFilterContext0.getEntryCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TokenFilterContext tokenFilterContext0 = new TokenFilterContext(6, (TokenFilterContext) null, (TokenFilter) null, false);
      TokenFilterContext tokenFilterContext1 = tokenFilterContext0.closeObject((JsonGenerator) null);
      assertNull(tokenFilterContext1);
      assertEquals("?", tokenFilterContext0.getTypeDesc());
      assertEquals(0, tokenFilterContext0.getNestingDepth());
      assertEquals(0, tokenFilterContext0.getEntryCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TokenFilter tokenFilter0 = new TokenFilter();
      TokenFilter.Inclusion tokenFilter_Inclusion0 = TokenFilter.Inclusion.INCLUDE_ALL_AND_PATH;
      FilteringGeneratorDelegate filteringGeneratorDelegate0 = new FilteringGeneratorDelegate((JsonGenerator) null, tokenFilter0, tokenFilter_Inclusion0, false);
      TokenFilterContext tokenFilterContext0 = filteringGeneratorDelegate0._filterContext;
      // Undeclared exception!
      try { 
        tokenFilterContext0.closeObject(filteringGeneratorDelegate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.filter.TokenFilterContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TokenFilter tokenFilter0 = new TokenFilter();
      TokenFilterContext tokenFilterContext0 = new TokenFilterContext(125, (TokenFilterContext) null, tokenFilter0, false);
      assertFalse(tokenFilterContext0.isStartHandled());
      
      TokenFilterContext tokenFilterContext1 = tokenFilterContext0.closeObject((JsonGenerator) null);
      assertEquals(0, tokenFilterContext0.getEntryCount());
      assertFalse(tokenFilterContext0.hasCurrentName());
      assertEquals(0, tokenFilterContext0.getNestingDepth());
      assertEquals("?", tokenFilterContext0.typeDesc());
      assertNull(tokenFilterContext1);
  }
}
