/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 14:16:09 GMT 2025
 */

package com.fasterxml.jackson.core.io;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.io.NumberInput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class io_NumberInput_parseBigDecimal_char_____boolean_ESTest extends io_NumberInput_parseBigDecimal_char_____boolean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberInput.parseBigDecimal((char[]) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.fasterxml.jackson.core.io.NumberInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[3];
      try { 
        NumberInput.parseBigDecimal(charArray0, false);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // Value \"\u0000\u0000\u0000\" can not be deserialized as `java.math.BigDecimal`, reason:  Character \u0000 is neither a decimal digit number, decimal point, nor \"e\" notation exponential mark.
         //
         verifyException("com.fasterxml.jackson.core.io.BigDecimalParser", e);
      }
  }
}
