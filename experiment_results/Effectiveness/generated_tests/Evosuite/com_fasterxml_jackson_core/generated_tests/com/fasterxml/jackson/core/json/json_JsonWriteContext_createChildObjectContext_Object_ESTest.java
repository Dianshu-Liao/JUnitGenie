/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 15:21:30 GMT 2025
 */

package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.fasterxml.jackson.core.json.DupDetector;
import com.fasterxml.jackson.core.json.JsonWriteContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class json_JsonWriteContext_createChildObjectContext_Object_ESTest extends json_JsonWriteContext_createChildObjectContext_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonWriteContext jsonWriteContext0 = new JsonWriteContext(0, (JsonWriteContext) null, (DupDetector) null, (Object) null);
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildObjectContext((Object) null);
      assertEquals(1, jsonWriteContext1.getNestingDepth());
      assertFalse(jsonWriteContext0.inObject());
      assertNotNull(jsonWriteContext1);
      assertEquals(0, jsonWriteContext1.getEntryCount());
      assertEquals("OBJECT", jsonWriteContext1.getTypeDesc());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DupDetector dupDetector0 = mock(DupDetector.class, new ViolatedAssumptionAnswer());
      doReturn((DupDetector) null).when(dupDetector0).child();
      JsonWriteContext jsonWriteContext0 = new JsonWriteContext(0, (JsonWriteContext) null, dupDetector0, (Object) null);
      JsonWriteContext jsonWriteContext1 = jsonWriteContext0.createChildObjectContext((Object) null);
      assertEquals("Object", jsonWriteContext1.typeDesc());
      assertEquals(0, jsonWriteContext1.getEntryCount());
      assertNotNull(jsonWriteContext1);
      
      JsonWriteContext jsonWriteContext2 = jsonWriteContext0.createChildObjectContext((Object) null);
      assertFalse(jsonWriteContext0.inObject());
      assertEquals(1, jsonWriteContext2.getNestingDepth());
      assertTrue(jsonWriteContext2.inObject());
      assertSame(jsonWriteContext2, jsonWriteContext1);
  }
}
