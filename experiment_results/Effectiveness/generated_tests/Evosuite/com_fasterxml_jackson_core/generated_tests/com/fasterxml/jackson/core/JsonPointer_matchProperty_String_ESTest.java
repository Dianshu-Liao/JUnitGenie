/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 13:17:19 GMT 2025
 */

package com.fasterxml.jackson.core;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.core.JsonPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class JsonPointer_matchProperty_String_ESTest extends JsonPointer_matchProperty_String_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JsonPointer jsonPointer0 = new JsonPointer();
      JsonPointer jsonPointer1 = new JsonPointer("~@'O{Wl3", 0, "~@'O{Wl3", 34, jsonPointer0);
      jsonPointer0._head = jsonPointer1;
      assertEquals(34, jsonPointer0._head.getMatchingIndex());
      assertFalse(jsonPointer0._head.matches());
      assertEquals("~@'O{Wl3", jsonPointer0._head.getMatchingProperty());
      assertEquals(8, jsonPointer0._head.length());
      
      JsonPointer jsonPointer2 = jsonPointer0._head.matchProperty("O+8");
      assertNull(jsonPointer2);
      assertEquals(0, jsonPointer0.length());
      assertEquals((-1), jsonPointer0.getMatchingIndex());
      assertFalse(jsonPointer0.mayMatchElement());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JsonPointer jsonPointer0 = new JsonPointer();
      JsonPointer jsonPointer1 = new JsonPointer("~@'O{Wl3", 0, "~@'O{Wl3", 34, jsonPointer0);
      jsonPointer0._head = jsonPointer1;
      assertEquals(34, jsonPointer0._head.getMatchingIndex());
      assertEquals(8, jsonPointer0._head.length());
      assertTrue(jsonPointer0._head.mayMatchProperty());
      
      JsonPointer jsonPointer2 = jsonPointer0._head.matchProperty("~@'O{Wl3");
      assertEquals(0, jsonPointer0.length());
      assertSame(jsonPointer2, jsonPointer0);
      assertEquals((-1), jsonPointer2.getMatchingIndex());
      assertNotNull(jsonPointer2);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JsonPointer jsonPointer0 = new JsonPointer();
      jsonPointer0.matchProperty("~1");
      assertEquals(0, jsonPointer0.length());
      assertEquals((-1), jsonPointer0.getMatchingIndex());
  }
}
