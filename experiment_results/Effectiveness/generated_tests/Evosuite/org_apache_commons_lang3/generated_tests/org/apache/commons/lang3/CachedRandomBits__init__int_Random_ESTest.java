/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:19:33 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Random;
import org.apache.commons.lang3.CachedRandomBits;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class CachedRandomBits__init__int_Random_ESTest extends CachedRandomBits__init__int_Random_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockRandom mockRandom0 = new MockRandom();
      CachedRandomBits cachedRandomBits0 = null;
      try {
        cachedRandomBits0 = new CachedRandomBits((-1051), mockRandom0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // cacheSize must be positive
         //
         verifyException("org.apache.commons.lang3.CachedRandomBits", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CachedRandomBits cachedRandomBits0 = null;
      try {
        cachedRandomBits0 = new CachedRandomBits(32, (Random) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // random
         //
         verifyException("java.util.Objects", e);
      }
  }
}
