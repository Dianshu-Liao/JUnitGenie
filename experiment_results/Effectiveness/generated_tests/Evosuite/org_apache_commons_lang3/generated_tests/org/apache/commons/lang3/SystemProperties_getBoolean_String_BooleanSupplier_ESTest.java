/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:19:20 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import java.util.function.BooleanSupplier;
import org.apache.commons.lang3.SystemProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class SystemProperties_getBoolean_String_BooleanSupplier_ESTest extends SystemProperties_getBoolean_String_BooleanSupplier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BooleanSupplier booleanSupplier0 = mock(BooleanSupplier.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(booleanSupplier0).getAsBoolean();
      boolean boolean0 = SystemProperties.getBoolean("sun.net.httpserver.maxRspTime", booleanSupplier0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = SystemProperties.getBoolean("", (BooleanSupplier) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BooleanSupplier booleanSupplier0 = mock(BooleanSupplier.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(booleanSupplier0).getAsBoolean();
      boolean boolean0 = SystemProperties.getBoolean("java.xml.config.file", booleanSupplier0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BooleanSupplier booleanSupplier0 = mock(BooleanSupplier.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = SystemProperties.getBoolean("user.dir", booleanSupplier0);
      assertFalse(boolean0);
  }
}
