/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:25:33 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class StringUtils_rightPad_String_int_String_ESTest extends StringUtils_rightPad_String_int_String_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String string0 = StringUtils.rightPad("comparator", 1189, "comparator");
      String string1 = StringUtils.rightPad("Aborting to protect against StackOverflowError - output of one loop is the input of another", 1189, string0);
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String string0 = StringUtils.rightPad("", 8196, "");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String string0 = StringUtils.rightPad("", 272, "\n                                                                                                                                                                                                                                                                               ");
      assertEquals("\n                                                                                                                                                                                                                                                                               ", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String string0 = StringUtils.rightPad("\n", (-2657), "");
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String string0 = StringUtils.rightPad(" ", 272, "h");
      assertEquals(" hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String string0 = StringUtils.rightPad((String) null, 272, (String) null);
      assertNull(string0);
  }
}
