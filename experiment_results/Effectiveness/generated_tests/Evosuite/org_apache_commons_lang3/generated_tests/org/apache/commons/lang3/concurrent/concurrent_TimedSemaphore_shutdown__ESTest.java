/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:07:09 GMT 2025
 */

package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.concurrent.TimedSemaphore;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class concurrent_TimedSemaphore_shutdown__ESTest extends concurrent_TimedSemaphore_shutdown__ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1);
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      TimedSemaphore timedSemaphore0 = new TimedSemaphore(scheduledThreadPoolExecutor0, 1, timeUnit0, 1);
      timedSemaphore0.shutdown();
      assertTrue(timedSemaphore0.isShutdown());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      TimedSemaphore timedSemaphore0 = new TimedSemaphore(1, timeUnit0, 1);
      timedSemaphore0.shutdown();
      timedSemaphore0.shutdown();
      assertTrue(timedSemaphore0.isShutdown());
  }
}
