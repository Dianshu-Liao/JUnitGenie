/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:33:37 GMT 2025
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle;
import org.apache.commons.lang3.builder.RecursiveToStringStyle;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class builder_ToStringStyle_append_StringBuffer_String_double_____Boolean_ESTest extends builder_ToStringStyle_append_StringBuffer_String_double_____Boolean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2919);
      double[] doubleArray0 = new double[6];
      Boolean boolean0 = Boolean.TRUE;
      multilineRecursiveToStringStyle0.append(stringBuffer0, "!kOtX=", doubleArray0, boolean0);
      assertEquals(69, stringBuffer0.length());
      assertEquals("!kOtX=={\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0,\n    0.0\n  },\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RecursiveToStringStyle recursiveToStringStyle0 = new RecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(true);
      recursiveToStringStyle0.append(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle", (double[]) null, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle=<null>,", stringBuffer0.toString());
      assertEquals(75, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_CLASS_NAME_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(":Ch4+Qy<l{Z I,/C");
      double[] doubleArray0 = new double[1];
      Boolean boolean0 = new Boolean(false);
      toStringStyle0.append(stringBuffer0, "}", doubleArray0, boolean0);
      assertEquals(":Ch4+Qy<l{Z I,/C}=<size=1>,", stringBuffer0.toString());
      assertEquals(27, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("#f~");
      double[] doubleArray0 = new double[3];
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        standardToStringStyle0.JSON_STYLE.append(stringBuffer0, "#f~", doubleArray0, boolean0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // FullDetail must be true when using JsonToStringStyle
         //
         verifyException("org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle", e);
      }
  }
}
