/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:42:36 GMT 2025
 */

package org.apache.commons.lang3.mutable;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.mutable.MutableObject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class mutable_MutableObject_equals_Object_ESTest extends mutable_MutableObject_equals_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MutableObject<Object> mutableObject0 = new MutableObject<Object>();
      Object object0 = new Object();
      boolean boolean0 = mutableObject0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MutableObject<Object> mutableObject0 = new MutableObject<Object>();
      boolean boolean0 = mutableObject0.equals(mutableObject0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MutableObject<MutableObject<Object>> mutableObject0 = new MutableObject<MutableObject<Object>>();
      boolean boolean0 = mutableObject0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MutableObject<Object> mutableObject0 = new MutableObject<Object>();
      MutableObject<MutableObject<Object>> mutableObject1 = new MutableObject<MutableObject<Object>>();
      boolean boolean0 = mutableObject1.equals(mutableObject0);
      assertTrue(boolean0);
  }
}
