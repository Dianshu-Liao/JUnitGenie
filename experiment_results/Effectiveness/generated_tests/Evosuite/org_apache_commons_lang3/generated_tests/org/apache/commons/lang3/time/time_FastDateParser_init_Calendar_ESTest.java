/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:00:12 GMT 2025
 */

package org.apache.commons.lang3.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.SimpleTimeZone;
import org.apache.commons.lang3.time.FastDateParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class time_FastDateParser_init_Calendar_ESTest extends time_FastDateParser_init_Calendar_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, "EG=");
      MockDate mockDate0 = new MockDate(0, (-1578), 11);
      FastDateParser fastDateParser0 = new FastDateParser("", simpleTimeZone0, locale0, mockDate0);
      assertEquals("", fastDateParser0.getPattern());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Locale locale0 = Locale.GERMANY;
      SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(94, ",a\"?q>g.]_/=T: Z");
      MockDate mockDate0 = new MockDate(0, 416, 0);
      FastDateParser fastDateParser0 = null;
      try {
        fastDateParser0 = new FastDateParser(", century=", simpleTimeZone0, locale0, mockDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Format 'c' not supported
         //
         verifyException("org.apache.commons.lang3.time.FastDateParser", e);
      }
  }
}
