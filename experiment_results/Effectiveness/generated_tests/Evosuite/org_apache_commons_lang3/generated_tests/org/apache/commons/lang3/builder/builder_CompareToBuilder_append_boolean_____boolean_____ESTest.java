/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:41:11 GMT 2025
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.builder.CompareToBuilder;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class builder_CompareToBuilder_append_boolean_____boolean_____ESTest extends builder_CompareToBuilder_append_boolean_____boolean_____ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CompareToBuilder compareToBuilder0 = new CompareToBuilder();
      boolean[] booleanArray0 = new boolean[9];
      booleanArray0[0] = true;
      boolean[] booleanArray1 = new boolean[9];
      compareToBuilder0.append(booleanArray1, booleanArray0);
      assertEquals((-1), (int)compareToBuilder0.build());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CompareToBuilder compareToBuilder0 = new CompareToBuilder();
      boolean[] booleanArray0 = new boolean[0];
      boolean[] booleanArray1 = new boolean[5];
      compareToBuilder0.append(booleanArray0, booleanArray1);
      assertEquals((-1), (int)compareToBuilder0.build());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CompareToBuilder compareToBuilder0 = new CompareToBuilder();
      boolean[] booleanArray0 = new boolean[7];
      boolean[] booleanArray1 = new boolean[7];
      CompareToBuilder compareToBuilder1 = compareToBuilder0.append(booleanArray0, booleanArray1);
      assertEquals(0, compareToBuilder1.toComparison());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CompareToBuilder compareToBuilder0 = new CompareToBuilder();
      assertEquals(0, (int)compareToBuilder0.build());
      
      boolean[] booleanArray0 = new boolean[7];
      compareToBuilder0.append(booleanArray0, (boolean[]) null);
      assertEquals(1, (int)compareToBuilder0.build());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CompareToBuilder compareToBuilder0 = new CompareToBuilder();
      boolean[] booleanArray0 = new boolean[7];
      compareToBuilder0.append((boolean[]) null, booleanArray0);
      assertEquals((-1), (int)compareToBuilder0.build());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CompareToBuilder compareToBuilder0 = new CompareToBuilder();
      assertEquals(0, (int)compareToBuilder0.build());
      
      boolean[] booleanArray0 = new boolean[1];
      boolean[] booleanArray1 = new boolean[4];
      compareToBuilder0.append(booleanArray1, booleanArray0);
      compareToBuilder0.append(booleanArray1, booleanArray0);
      assertEquals(1, compareToBuilder0.toComparison());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      CompareToBuilder compareToBuilder0 = new CompareToBuilder();
      boolean[] booleanArray0 = new boolean[17];
      CompareToBuilder compareToBuilder1 = compareToBuilder0.append(booleanArray0, booleanArray0);
      assertEquals(0, (int)compareToBuilder1.build());
  }
}
