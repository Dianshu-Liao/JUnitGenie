/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:33:16 GMT 2025
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class builder_ToStringStyle_append_StringBuffer_String_boolean_____Boolean_ESTest extends builder_ToStringStyle_append_StringBuffer_String_boolean_____Boolean_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2);
      Boolean boolean0 = new Boolean(false);
      boolean[] booleanArray0 = new boolean[2];
      standardToStringStyle0.append(stringBuffer0, "", booleanArray0, boolean0);
      assertEquals("=<size=2>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2);
      Boolean boolean0 = new Boolean(false);
      standardToStringStyle0.append(stringBuffer0, "ZPn6b}|=.d+a`lb", (boolean[]) null, boolean0);
      assertEquals(23, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MultilineRecursiveToStringStyle multilineRecursiveToStringStyle0 = new MultilineRecursiveToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("_<ws!G");
      boolean[] booleanArray0 = new boolean[4];
      booleanArray0[1] = true;
      multilineRecursiveToStringStyle0.JSON_STYLE.append(stringBuffer0, "_<ws!G", booleanArray0, (Boolean) booleanArray0[1]);
      assertEquals(40, stringBuffer0.length());
      assertEquals("_<ws!G\"_<ws!G\":[false,true,false,false],", stringBuffer0.toString());
  }
}
