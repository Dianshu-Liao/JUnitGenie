/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:30:30 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.lang3.RandomUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class RandomUtils_randomInt_int_int_ESTest extends RandomUtils_randomInt_int_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RandomUtils randomUtils0 = new RandomUtils();
      int int0 = randomUtils0.randomInt(0, Integer.MAX_VALUE);
      //  // Unstable assertion: assertEquals(522851069, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RandomUtils randomUtils0 = new RandomUtils();
      // Undeclared exception!
      try { 
        randomUtils0.randomInt((-1), (-1));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Both range values must be non-negative.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RandomUtils randomUtils0 = new RandomUtils();
      int int0 = randomUtils0.randomInt(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RandomUtils randomUtils0 = new RandomUtils();
      // Undeclared exception!
      try { 
        randomUtils0.randomInt(1351, (-84));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Start value must be smaller or equal to end value.
         //
         verifyException("org.apache.commons.lang3.Validate", e);
      }
  }
}
