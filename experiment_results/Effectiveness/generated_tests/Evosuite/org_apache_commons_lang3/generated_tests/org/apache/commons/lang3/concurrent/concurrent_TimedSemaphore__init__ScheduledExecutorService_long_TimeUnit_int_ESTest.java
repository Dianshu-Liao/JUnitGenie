/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:04:52 GMT 2025
 */

package org.apache.commons.lang3.concurrent;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import org.apache.commons.lang3.concurrent.TimedSemaphore;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class concurrent_TimedSemaphore__init__ScheduledExecutorService_long_TimeUnit_int_ESTest extends concurrent_TimedSemaphore__init__ScheduledExecutorService_long_TimeUnit_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ThreadPoolExecutor.CallerRunsPolicy threadPoolExecutor_CallerRunsPolicy0 = new ThreadPoolExecutor.CallerRunsPolicy();
      ScheduledThreadPoolExecutor scheduledThreadPoolExecutor0 = new ScheduledThreadPoolExecutor(1, threadPoolExecutor_CallerRunsPolicy0);
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      TimedSemaphore timedSemaphore0 = new TimedSemaphore(scheduledThreadPoolExecutor0, 1L, timeUnit0, 0);
      assertEquals(1L, timedSemaphore0.getPeriod());
      assertEquals(0, timedSemaphore0.getLimit());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TimeUnit timeUnit0 = TimeUnit.MILLISECONDS;
      TimedSemaphore timedSemaphore0 = new TimedSemaphore((ScheduledExecutorService) null, 837L, timeUnit0, 0);
      assertEquals(837L, timedSemaphore0.getPeriod());
      assertEquals(0, timedSemaphore0.getLimit());
  }
}
