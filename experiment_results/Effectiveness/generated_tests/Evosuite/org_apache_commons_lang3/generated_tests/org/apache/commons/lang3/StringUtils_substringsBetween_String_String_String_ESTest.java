/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:31:44 GMT 2025
 */

package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.commons.lang3.StringUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class StringUtils_substringsBetween_String_String_String_ESTest extends StringUtils_substringsBetween_String_String_String_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = StringUtils.substringsBetween("KRam/AqtI(0w!1\"GG&", "KRam/AqtI(0w!1\"GG&", "gNY-K");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = StringUtils.substringsBetween("`:/<Ov#d\"{*{F", "zX", "zX");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = StringUtils.substringsBetween("xn&hdMWEku eJ7d ", " ", " ");
      assertNotNull(stringArray0);
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      String[] stringArray0 = StringUtils.substringsBetween("", "\n", "{Rm?hIm");
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = StringUtils.substringsBetween("\r", "offset cannot be negative", (String) null);
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = StringUtils.substringsBetween("\r", "", "<Rl2wID1\t:ey");
      assertNull(stringArray0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      String[] stringArray0 = StringUtils.substringsBetween((String) null, (String) null, "nU");
      assertNull(stringArray0);
  }
}
