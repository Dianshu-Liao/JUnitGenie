/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:09:31 GMT 2025
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.DateMidnight;
import org.joda.time.DateTimeZone;
import org.joda.time.Duration;
import org.joda.time.ReadableDuration;
import org.joda.time.UTCDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class DateMidnight_withDurationAdded_ReadableDuration_int_ESTest extends DateMidnight_withDurationAdded_ReadableDuration_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UTCDateTimeZone uTCDateTimeZone0 = new UTCDateTimeZone();
      DateMidnight dateMidnight0 = new DateMidnight(0L, (DateTimeZone) uTCDateTimeZone0);
      Duration duration0 = Duration.ZERO;
      DateMidnight dateMidnight1 = dateMidnight0.withDurationAdded((ReadableDuration) duration0, 0);
      assertSame(dateMidnight1, dateMidnight0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UTCDateTimeZone uTCDateTimeZone0 = (UTCDateTimeZone)DateTimeZone.UTC;
      DateMidnight dateMidnight0 = new DateMidnight((DateTimeZone) uTCDateTimeZone0);
      Duration duration0 = Duration.ZERO;
      DateMidnight dateMidnight1 = dateMidnight0.withDurationAdded((ReadableDuration) duration0, (-318));
      assertEquals(1392336000000L, dateMidnight1.getMillis());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DateMidnight dateMidnight0 = new DateMidnight((-602L), (Chronology) null);
      DateMidnight dateMidnight1 = dateMidnight0.withDurationAdded((ReadableDuration) null, (-431));
      assertEquals((-86400000L), dateMidnight1.getMillis());
  }
}
