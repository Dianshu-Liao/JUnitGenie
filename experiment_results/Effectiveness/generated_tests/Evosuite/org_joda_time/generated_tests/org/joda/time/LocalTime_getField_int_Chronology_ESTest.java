/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:33:47 GMT 2025
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.LocalTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class LocalTime_getField_int_Chronology_ESTest extends LocalTime_getField_int_Chronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalTime localTime0 = new LocalTime((Object) null);
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        localTime0.MIDNIGHT.getField((-362), chronology0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Invalid index: -362
         //
         verifyException("org.joda.time.LocalTime", e);
      }
  }
}
