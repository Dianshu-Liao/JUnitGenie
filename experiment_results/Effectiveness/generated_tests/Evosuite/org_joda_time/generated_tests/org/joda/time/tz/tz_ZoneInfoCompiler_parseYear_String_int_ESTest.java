/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:32:36 GMT 2025
 */

package org.joda.time.tz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.tz.ZoneInfoCompiler;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class tz_ZoneInfoCompiler_parseYear_String_int_ESTest extends tz_ZoneInfoCompiler_parseYear_String_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        ZoneInfoCompiler.parseYear("h'2@>V!", (-1073741822));
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"h'2@>V!\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      int int0 = ZoneInfoCompiler.parseYear("maximum", 4);
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      int int0 = ZoneInfoCompiler.parseYear("mi", (-1676));
      assertEquals(Integer.MIN_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      int int0 = ZoneInfoCompiler.parseYear("o", 12);
      assertEquals(12, int0);
  }
}
