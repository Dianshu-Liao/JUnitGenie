/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:23:52 GMT 2025
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.LocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class LocalDateTime_getValue_int_ESTest extends LocalDateTime_getValue_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalDateTime localDateTime0 = new LocalDateTime();
      // Undeclared exception!
      try { 
        localDateTime0.getValue(868);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Invalid index: 868
         //
         verifyException("org.joda.time.LocalDateTime", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LocalDateTime localDateTime0 = new LocalDateTime();
      int int0 = localDateTime0.getValue(3);
      assertEquals(73281320, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LocalDateTime localDateTime0 = new LocalDateTime();
      int int0 = localDateTime0.getValue(2);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocalDateTime localDateTime0 = new LocalDateTime();
      int int0 = localDateTime0.getValue(1);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LocalDateTime localDateTime0 = new LocalDateTime();
      int int0 = localDateTime0.getValue(0);
      assertEquals(2014, int0);
  }
}
