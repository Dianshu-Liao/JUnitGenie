/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:16:39 GMT 2025
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.Hours;
import org.joda.time.LocalDate;
import org.joda.time.Months;
import org.joda.time.ReadablePeriod;
import org.joda.time.UTCDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class LocalDate_withPeriodAdded_ReadablePeriod_int_ESTest extends LocalDate_withPeriodAdded_ReadablePeriod_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LocalDate localDate0 = new LocalDate(0L);
      Months months0 = Months.TWO;
      LocalDate localDate1 = localDate0.withPeriodAdded(months0, 1551);
      assertNotSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UTCDateTimeZone uTCDateTimeZone0 = (UTCDateTimeZone)UTCDateTimeZone.INSTANCE;
      LocalDate localDate0 = new LocalDate((DateTimeZone) uTCDateTimeZone0);
      Days days0 = Days.MAX_VALUE;
      LocalDate localDate1 = localDate0.withPeriodAdded(days0, 0);
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LocalDate localDate0 = new LocalDate();
      Hours hours0 = Hours.SIX;
      LocalDate localDate1 = localDate0.withPeriodAdded(hours0, (-3134));
      assertSame(localDate1, localDate0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LocalDate localDate0 = new LocalDate();
      LocalDate localDate1 = localDate0.withPeriodAdded((ReadablePeriod) null, 1256);
      assertEquals(3, localDate1.size());
  }
}
