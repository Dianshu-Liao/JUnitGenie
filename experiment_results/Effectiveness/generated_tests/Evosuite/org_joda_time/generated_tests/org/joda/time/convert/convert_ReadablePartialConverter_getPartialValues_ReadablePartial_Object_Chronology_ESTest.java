/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:51:06 GMT 2025
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.MonthDay;
import org.joda.time.ReadablePartial;
import org.joda.time.convert.ReadablePartialConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class convert_ReadablePartialConverter_getPartialValues_ReadablePartial_Object_Chronology_ESTest extends convert_ReadablePartialConverter_getPartialValues_ReadablePartial_Object_Chronology_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReadablePartialConverter readablePartialConverter0 = new ReadablePartialConverter();
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      doReturn((Chronology) null).when(chronology0).withUTC();
      MonthDay monthDay0 = new MonthDay((-104), 1740, chronology0);
      Chronology chronology1 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      int[] intArray0 = readablePartialConverter0.getPartialValues((ReadablePartial) monthDay0, (Object) monthDay0, chronology1);
      assertArrayEquals(new int[] {(-104), 1740}, intArray0);
  }
}
