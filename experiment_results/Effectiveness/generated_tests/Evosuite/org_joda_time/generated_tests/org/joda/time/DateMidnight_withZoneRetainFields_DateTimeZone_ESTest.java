/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:08:15 GMT 2025
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateMidnight;
import org.joda.time.DateTimeZone;
import org.joda.time.UTCDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class DateMidnight_withZoneRetainFields_DateTimeZone_ESTest extends DateMidnight_withZoneRetainFields_DateTimeZone_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateMidnight dateMidnight0 = new DateMidnight(31536000000L, (DateTimeZone) null);
      DateMidnight dateMidnight1 = dateMidnight0.withZoneRetainFields((DateTimeZone) null);
      assertEquals(31536000000L, dateMidnight1.getMillis());
      assertSame(dateMidnight1, dateMidnight0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DateMidnight dateMidnight0 = new DateMidnight(31536000000L, (DateTimeZone) null);
      UTCDateTimeZone uTCDateTimeZone0 = new UTCDateTimeZone();
      DateMidnight dateMidnight1 = dateMidnight0.withZoneRetainFields(uTCDateTimeZone0);
      assertNotSame(dateMidnight1, dateMidnight0);
      assertTrue(dateMidnight1.equals((Object)dateMidnight0));
  }
}
