/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:45:48 GMT 2025
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.LocalDateTime;
import org.joda.time.ReadablePartial;
import org.joda.time.chrono.BasicChronology;
import org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField;
import org.joda.time.field.MillisDurationField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class chrono_BasicWeekOfWeekyearDateTimeField_getMaximumValue_ReadablePartial_int_____ESTest extends chrono_BasicWeekOfWeekyearDateTimeField_getMaximumValue_ReadablePartial_int_____ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      BasicWeekOfWeekyearDateTimeField basicWeekOfWeekyearDateTimeField0 = new BasicWeekOfWeekyearDateTimeField((BasicChronology) null, millisDurationField0);
      LocalDateTime localDateTime0 = new LocalDateTime();
      int[] intArray0 = new int[4];
      int int0 = basicWeekOfWeekyearDateTimeField0.getMaximumValue((ReadablePartial) localDateTime0, intArray0);
      assertEquals(53, int0);
  }
}
