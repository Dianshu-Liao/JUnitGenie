/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:04:12 GMT 2025
 */

package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.DurationFieldType;
import org.joda.time.field.PreciseDurationField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class field_PreciseDurationField_equals_Object_ESTest extends field_PreciseDurationField_equals_Object_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DurationFieldType durationFieldType0 = mock(DurationFieldType.class, new ViolatedAssumptionAnswer());
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 54L);
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 54L);
      boolean boolean0 = preciseDurationField1.equals(preciseDurationField0);
      assertTrue(boolean0);
      assertEquals(54L, preciseDurationField1.getUnitMillis());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DurationFieldType durationFieldType0 = mock(DurationFieldType.class, new ViolatedAssumptionAnswer());
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 54L);
      DurationFieldType durationFieldType1 = mock(DurationFieldType.class, new ViolatedAssumptionAnswer());
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType1, 65L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField1);
      assertFalse(boolean0);
      assertEquals(65L, preciseDurationField1.getUnitMillis());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DurationFieldType durationFieldType0 = mock(DurationFieldType.class, new ViolatedAssumptionAnswer());
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      boolean boolean0 = preciseDurationField0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DurationFieldType durationFieldType0 = mock(DurationFieldType.class, new ViolatedAssumptionAnswer());
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      boolean boolean0 = preciseDurationField0.equals(preciseDurationField0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DurationFieldType durationFieldType0 = mock(DurationFieldType.class, new ViolatedAssumptionAnswer());
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 54L);
      PreciseDurationField preciseDurationField1 = new PreciseDurationField(durationFieldType0, 65L);
      boolean boolean0 = preciseDurationField1.equals(preciseDurationField0);
      assertEquals(65L, preciseDurationField1.getUnitMillis());
      assertFalse(boolean0);
      assertFalse(preciseDurationField0.equals((Object)preciseDurationField1));
  }
}
