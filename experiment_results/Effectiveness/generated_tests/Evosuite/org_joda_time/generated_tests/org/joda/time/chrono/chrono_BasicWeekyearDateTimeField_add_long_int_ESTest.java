/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 05:29:04 GMT 2025
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.Chronology;
import org.joda.time.chrono.BasicWeekyearDateTimeField;
import org.joda.time.chrono.EthiopicChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.JulianChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class chrono_BasicWeekyearDateTimeField_add_long_int_ESTest extends chrono_BasicWeekyearDateTimeField_add_long_int_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Object object0 = new Object();
      IslamicChronology islamicChronology0 = new IslamicChronology((Chronology) null, object0, (IslamicChronology.LeapYearPatternType) null);
      EthiopicChronology ethiopicChronology0 = new EthiopicChronology(islamicChronology0, object0, 1);
      JulianChronology julianChronology0 = new JulianChronology(ethiopicChronology0, object0, 1);
      BasicWeekyearDateTimeField basicWeekyearDateTimeField0 = new BasicWeekyearDateTimeField(julianChronology0);
      long long0 = basicWeekyearDateTimeField0.add(31083663600000L, 0);
      assertEquals(31083663600000L, long0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object object0 = new Object();
      IslamicChronology islamicChronology0 = new IslamicChronology((Chronology) null, object0, (IslamicChronology.LeapYearPatternType) null);
      EthiopicChronology ethiopicChronology0 = new EthiopicChronology(islamicChronology0, object0, 1);
      JulianChronology julianChronology0 = new JulianChronology(ethiopicChronology0, object0, 1);
      BasicWeekyearDateTimeField basicWeekyearDateTimeField0 = new BasicWeekyearDateTimeField(julianChronology0);
      long long0 = basicWeekyearDateTimeField0.add(1294L, 1);
      assertEquals(31449601294L, long0);
  }
}
