/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:43:24 GMT 2025
 */

package org.joda.time.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.MutablePeriod;
import org.joda.time.Period;
import org.joda.time.PeriodType;
import org.joda.time.ReadablePeriod;
import org.joda.time.Seconds;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class base_BasePeriod_setPeriod_ReadablePeriod_ESTest extends base_BasePeriod_setPeriod_ReadablePeriod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PeriodType periodType0 = mock(PeriodType.class, new ViolatedAssumptionAnswer());
      doReturn(0, 0, 0).when(periodType0).size();
      doReturn((String) null, (String) null, (String) null, (String) null, (String) null).when(periodType0).toString();
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      Period period0 = new Period((Object) null, periodType0, chronology0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MutablePeriod mutablePeriod0 = new MutablePeriod(143, 143, 143, 143);
      Seconds seconds0 = Seconds.THREE;
      mutablePeriod0.setPeriod((ReadablePeriod) seconds0);
      assertEquals(1, seconds0.size());
  }
}
