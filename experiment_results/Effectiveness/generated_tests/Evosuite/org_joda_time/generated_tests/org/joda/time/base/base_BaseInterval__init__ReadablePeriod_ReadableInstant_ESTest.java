/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 06:46:29 GMT 2025
 */

package org.joda.time.base;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.joda.time.Chronology;
import org.joda.time.Interval;
import org.joda.time.Months;
import org.joda.time.MutableDateTime;
import org.joda.time.MutableInterval;
import org.joda.time.ReadablePeriod;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class base_BaseInterval__init__ReadablePeriod_ReadableInstant_ESTest extends base_BaseInterval__init__ReadablePeriod_ReadableInstant_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      MutableDateTime mutableDateTime0 = new MutableDateTime(719L, chronology0);
      Interval interval0 = new Interval((ReadablePeriod) null, mutableDateTime0);
      assertEquals(719L, interval0.getStartMillis());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Months months0 = Months.MAX_VALUE;
      Chronology chronology0 = mock(Chronology.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(chronology0).add(any(org.joda.time.ReadablePeriod.class) , anyLong() , anyInt());
      MutableDateTime mutableDateTime0 = new MutableDateTime(chronology0);
      MutableInterval mutableInterval0 = new MutableInterval(months0, mutableDateTime0);
      assertEquals(0L, mutableInterval0.getStartMillis());
  }
}
