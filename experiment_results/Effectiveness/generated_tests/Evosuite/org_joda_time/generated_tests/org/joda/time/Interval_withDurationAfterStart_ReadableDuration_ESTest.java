/*
 * This file was automatically generated by EvoSuite
 * Sun Apr 20 04:18:57 GMT 2025
 */

package org.joda.time;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.Duration;
import org.joda.time.Instant;
import org.joda.time.Interval;
import org.joda.time.UTCDateTimeZone;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false) 
public class Interval_withDurationAfterStart_ReadableDuration_ESTest extends Interval_withDurationAfterStart_ReadableDuration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Instant instant0 = new Instant(2593L);
      Interval interval0 = new Interval(instant0, instant0);
      Duration duration0 = new Duration(2593L, 2593L);
      Interval interval1 = interval0.withDurationAfterStart(duration0);
      assertSame(interval1, interval0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UTCDateTimeZone uTCDateTimeZone0 = (UTCDateTimeZone)DateTimeZone.UTC;
      Interval interval0 = new Interval(1658L, 1658L, uTCDateTimeZone0);
      Duration duration0 = new Duration(1658L);
      Interval interval1 = interval0.withDurationAfterStart(duration0);
      assertEquals(3316L, interval1.getEndMillis());
      assertEquals(1658L, interval1.getStartMillis());
  }
}
