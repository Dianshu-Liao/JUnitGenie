package_name,class_name,method_name,method_signature,method_FEN,missed_instr,covered_instr,percentage_instr,missed_branches,covered_branches,percentage_branches,complexity,missed_lines,covered_lines,percentage_lines,missed_methods,covered_methods,percentage_methods
org/joda/time,org/joda/time/MonthDay,now,() → org.joda.time.MonthDay,org.joda.time.MonthDay.now(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,now,(org.joda.time.DateTimeZone) → org.joda.time.MonthDay,org.joda.time.MonthDay.now(DateTimeZone),5,7,0.5833333333333334,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/MonthDay,now,(org.joda.time.Chronology) → org.joda.time.MonthDay,org.joda.time.MonthDay.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,parse,(java.lang.String) → org.joda.time.MonthDay,org.joda.time.MonthDay.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.MonthDay","org.joda.time.MonthDay.parse(String,DateTimeFormatter)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,fromCalendarFields,(java.util.Calendar) → org.joda.time.MonthDay,org.joda.time.MonthDay.fromCalendarFields(Calendar),0,19,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,fromDateFields,(java.util.Date) → org.joda.time.MonthDay,org.joda.time.MonthDay.fromDateFields(Date),0,17,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,<init>,() → void,org.joda.time.MonthDay.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.MonthDay.<init>(DateTimeZone),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<init>,(org.joda.time.Chronology) → void,org.joda.time.MonthDay.<init>(Chronology),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<init>,(long) → void,org.joda.time.MonthDay.<init>(long),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.MonthDay.<init>(long,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<init>,(java.lang.Object) → void,org.joda.time.MonthDay.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.MonthDay.<init>(Object,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<init>,"(int, int) → void","org.joda.time.MonthDay.<init>(int,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,<init>,"(int, int, org.joda.time.Chronology) → void","org.joda.time.MonthDay.<init>(int,int,Chronology)",0,14,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,<init>,"(org.joda.time.MonthDay, int[]) → void","org.joda.time.MonthDay.<init>(MonthDay,int[])",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<init>,"(org.joda.time.MonthDay, org.joda.time.Chronology) → void","org.joda.time.MonthDay.<init>(MonthDay,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,readResolve,() → java.lang.Object,org.joda.time.MonthDay.readResolve(),8,8,0.5,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/MonthDay,size,() → int,org.joda.time.MonthDay.size(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.MonthDay.getField(int,Chronology)",12,8,0.4,1,2,0.6666666666666666,3,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/MonthDay,getFieldType,(int) → org.joda.time.DateTimeFieldType,org.joda.time.MonthDay.getFieldType(int),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,getFieldTypes,() → org.joda.time.DateTimeFieldType[],org.joda.time.MonthDay.getFieldTypes(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,withChronologyRetainFields,(org.joda.time.Chronology) → org.joda.time.MonthDay,org.joda.time.MonthDay.withChronologyRetainFields(Chronology),25,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.MonthDay","org.joda.time.MonthDay.withField(DateTimeFieldType,int)",29,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.MonthDay","org.joda.time.MonthDay.withFieldAdded(DurationFieldType,int)",26,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.MonthDay","org.joda.time.MonthDay.withPeriodAdded(ReadablePeriod,int)",46,0,0.0,8,0,0.0,5,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,plus,(org.joda.time.ReadablePeriod) → org.joda.time.MonthDay,org.joda.time.MonthDay.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,plusMonths,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay.plusMonths(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,plusDays,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay.plusDays(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,minus,(org.joda.time.ReadablePeriod) → org.joda.time.MonthDay,org.joda.time.MonthDay.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,minusMonths,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay.minusMonths(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,minusDays,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay.minusDays(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,toLocalDate,(int) → org.joda.time.LocalDate,org.joda.time.MonthDay.toLocalDate(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,getMonthOfYear,() → int,org.joda.time.MonthDay.getMonthOfYear(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,getDayOfMonth,() → int,org.joda.time.MonthDay.getDayOfMonth(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay,withMonthOfYear,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay.withMonthOfYear(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,withDayOfMonth,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay.withDayOfMonth(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,property,(org.joda.time.DateTimeFieldType) → org.joda.time.MonthDay$Property,org.joda.time.MonthDay.property(DateTimeFieldType),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,monthOfYear,() → org.joda.time.MonthDay$Property,org.joda.time.MonthDay.monthOfYear(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,dayOfMonth,() → org.joda.time.MonthDay$Property,org.joda.time.MonthDay.dayOfMonth(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,toString,() → java.lang.String,org.joda.time.MonthDay.toString(),19,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,toString,(java.lang.String) → java.lang.String,org.joda.time.MonthDay.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.MonthDay.toString(String,Locale)",12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay,<clinit>,() → void,org.joda.time.MonthDay.<clinit>(),0,24,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,<init>,() → void,org.joda.time.DateTimeUtils.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,currentTimeMillis,() → long,org.joda.time.DateTimeUtils.currentTimeMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,setCurrentMillisSystem,() → void,org.joda.time.DateTimeUtils.setCurrentMillisSystem(),4,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,setCurrentMillisFixed,(long) → void,org.joda.time.DateTimeUtils.setCurrentMillisFixed(long),0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,setCurrentMillisOffset,(long) → void,org.joda.time.DateTimeUtils.setCurrentMillisOffset(long),14,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,setCurrentMillisProvider,(org.joda.time.DateTimeUtils$MillisProvider) → void,org.joda.time.DateTimeUtils.setCurrentMillisProvider(MillisProvider),0,11,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,checkPermission,() → void,org.joda.time.DateTimeUtils.checkPermission(),0,11,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getInstantMillis,(org.joda.time.ReadableInstant) → long,org.joda.time.DateTimeUtils.getInstantMillis(ReadableInstant),2,5,0.7142857142857143,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getInstantChronology,(org.joda.time.ReadableInstant) → org.joda.time.Chronology,org.joda.time.DateTimeUtils.getInstantChronology(ReadableInstant),2,11,0.8461538461538461,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getIntervalChronology,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Chronology","org.joda.time.DateTimeUtils.getIntervalChronology(ReadableInstant,ReadableInstant)",19,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,getIntervalChronology,(org.joda.time.ReadableInterval) → org.joda.time.Chronology,org.joda.time.DateTimeUtils.getIntervalChronology(ReadableInterval),0,13,1.0,0,4,1.0,3,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getReadableInterval,(org.joda.time.ReadableInterval) → org.joda.time.ReadableInterval,org.joda.time.DateTimeUtils.getReadableInterval(ReadableInterval),0,12,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getChronology,(org.joda.time.Chronology) → org.joda.time.Chronology,org.joda.time.DateTimeUtils.getChronology(Chronology),0,6,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getZone,(org.joda.time.DateTimeZone) → org.joda.time.DateTimeZone,org.joda.time.DateTimeUtils.getZone(DateTimeZone),0,6,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getPeriodType,(org.joda.time.PeriodType) → org.joda.time.PeriodType,org.joda.time.DateTimeUtils.getPeriodType(PeriodType),0,6,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getDurationMillis,(org.joda.time.ReadableDuration) → long,org.joda.time.DateTimeUtils.getDurationMillis(ReadableDuration),2,5,0.7142857142857143,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,isContiguous,(org.joda.time.ReadablePartial) → boolean,org.joda.time.DateTimeUtils.isContiguous(ReadablePartial),2,37,0.9487179487179487,2,8,0.8,6,1,9,0.9,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getDateFormatSymbols,(java.util.Locale) → java.text.DateFormatSymbols,org.joda.time.DateTimeUtils.getDateFormatSymbols(Locale),6,21,0.7777777777777778,0,0,coverage not available since no branches,1,2,2,0.5,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils,getDefaultTimeZoneNames,() → java.util.Map,org.joda.time.DateTimeUtils.getDefaultTimeZoneNames(),19,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,setDefaultTimeZoneNames,(java.util.Map) → void,org.joda.time.DateTimeUtils.setDefaultTimeZoneNames(Map),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,buildDefaultTimeZoneNames,() → java.util.Map,org.joda.time.DateTimeUtils.buildDefaultTimeZoneNames(),54,0,0.0,0,0,coverage not available since no branches,1,13,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,put,"(java.util.Map, java.lang.String, java.lang.String) → void","org.joda.time.DateTimeUtils.put(Map,String,String)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,toJulianDay,(long) → double,org.joda.time.DateTimeUtils.toJulianDay(long),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,toJulianDayNumber,(long) → long,org.joda.time.DateTimeUtils.toJulianDayNumber(long),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,fromJulianDay,(double) → long,org.joda.time.DateTimeUtils.fromJulianDay(double),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils,<clinit>,() → void,org.joda.time.DateTimeUtils.<clinit>(),0,11,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,<init>,() → void,org.joda.time.UTCDateTimeZone.<init>(),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,getNameKey,(long) → java.lang.String,org.joda.time.UTCDateTimeZone.getNameKey(long),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,getOffset,(long) → int,org.joda.time.UTCDateTimeZone.getOffset(long),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,getStandardOffset,(long) → int,org.joda.time.UTCDateTimeZone.getStandardOffset(long),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,getOffsetFromLocal,(long) → int,org.joda.time.UTCDateTimeZone.getOffsetFromLocal(long),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,isFixed,() → boolean,org.joda.time.UTCDateTimeZone.isFixed(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/UTCDateTimeZone,nextTransition,(long) → long,org.joda.time.UTCDateTimeZone.nextTransition(long),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,previousTransition,(long) → long,org.joda.time.UTCDateTimeZone.previousTransition(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/UTCDateTimeZone,toTimeZone,() → java.util.TimeZone,org.joda.time.UTCDateTimeZone.toTimeZone(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/UTCDateTimeZone,equals,(java.lang.Object) → boolean,org.joda.time.UTCDateTimeZone.equals(Object),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,hashCode,() → int,org.joda.time.UTCDateTimeZone.hashCode(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/UTCDateTimeZone,<clinit>,() → void,org.joda.time.UTCDateTimeZone.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/MonthDay$Property,<init>,"(org.joda.time.MonthDay, int) → void","org.joda.time.MonthDay$Property.<init>(MonthDay,int)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.MonthDay$Property.getField(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,getReadablePartial,() → org.joda.time.ReadablePartial,org.joda.time.MonthDay$Property.getReadablePartial(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,getMonthDay,() → org.joda.time.MonthDay,org.joda.time.MonthDay$Property.getMonthDay(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,get,() → int,org.joda.time.MonthDay$Property.get(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,addToCopy,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay$Property.addToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,addWrapFieldToCopy,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay$Property.addWrapFieldToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,setCopy,(int) → org.joda.time.MonthDay,org.joda.time.MonthDay$Property.setCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.MonthDay","org.joda.time.MonthDay$Property.setCopy(String,Locale)",22,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MonthDay$Property,setCopy,(java.lang.String) → org.joda.time.MonthDay,org.joda.time.MonthDay$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,parse,(java.lang.String) → org.joda.time.MutablePeriod,org.joda.time.MutablePeriod.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,parse,"(java.lang.String, org.joda.time.format.PeriodFormatter) → org.joda.time.MutablePeriod","org.joda.time.MutablePeriod.parse(String,PeriodFormatter)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,() → void,org.joda.time.MutablePeriod.<init>(),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,(org.joda.time.PeriodType) → void,org.joda.time.MutablePeriod.<init>(PeriodType),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(int, int, int, int) → void","org.joda.time.MutablePeriod.<init>(int,int,int,int)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(int, int, int, int, int, int, int, int) → void","org.joda.time.MutablePeriod.<init>(int,int,int,int,int,int,int,int)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(int, int, int, int, int, int, int, int, org.joda.time.PeriodType) → void","org.joda.time.MutablePeriod.<init>(int,int,int,int,int,int,int,int,PeriodType)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,(long) → void,org.joda.time.MutablePeriod.<init>(long),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(long, org.joda.time.PeriodType) → void","org.joda.time.MutablePeriod.<init>(long,PeriodType)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.<init>(long,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(long, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.<init>(long,PeriodType,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(long, long) → void","org.joda.time.MutablePeriod.<init>(long,long)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(long, long, org.joda.time.PeriodType) → void","org.joda.time.MutablePeriod.<init>(long,long,PeriodType)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(long, long, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.<init>(long,long,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(long, long, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.<init>(long,long,PeriodType,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.MutablePeriod.<init>(ReadableInstant,ReadableInstant)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant, org.joda.time.PeriodType) → void","org.joda.time.MutablePeriod.<init>(ReadableInstant,ReadableInstant,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration) → void","org.joda.time.MutablePeriod.<init>(ReadableInstant,ReadableDuration)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration, org.joda.time.PeriodType) → void","org.joda.time.MutablePeriod.<init>(ReadableInstant,ReadableDuration,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant) → void","org.joda.time.MutablePeriod.<init>(ReadableDuration,ReadableInstant)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant, org.joda.time.PeriodType) → void","org.joda.time.MutablePeriod.<init>(ReadableDuration,ReadableInstant,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,(java.lang.Object) → void,org.joda.time.MutablePeriod.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(java.lang.Object, org.joda.time.PeriodType) → void","org.joda.time.MutablePeriod.<init>(Object,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.<init>(Object,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,<init>,"(java.lang.Object, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.<init>(Object,PeriodType,Chronology)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,clear,() → void,org.joda.time.MutablePeriod.clear(),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,setValue,"(int, int) → void","org.joda.time.MutablePeriod.setValue(int,int)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,set,"(org.joda.time.DurationFieldType, int) → void","org.joda.time.MutablePeriod.set(DurationFieldType,int)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,(org.joda.time.ReadablePeriod) → void,org.joda.time.MutablePeriod.setPeriod(ReadablePeriod),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,"(int, int, int, int, int, int, int, int) → void","org.joda.time.MutablePeriod.setPeriod(int,int,int,int,int,int,int,int)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,(org.joda.time.ReadableInterval) → void,org.joda.time.MutablePeriod.setPeriod(ReadableInterval),18,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.MutablePeriod.setPeriod(ReadableInstant,ReadableInstant)",23,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,"(long, long) → void","org.joda.time.MutablePeriod.setPeriod(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,"(long, long, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.setPeriod(long,long,Chronology)",11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,(org.joda.time.ReadableDuration) → void,org.joda.time.MutablePeriod.setPeriod(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,"(org.joda.time.ReadableDuration, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.setPeriod(ReadableDuration,Chronology)",8,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,(long) → void,org.joda.time.MutablePeriod.setPeriod(long),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setPeriod,"(long, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.setPeriod(long,Chronology)",10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,add,"(org.joda.time.DurationFieldType, int) → void","org.joda.time.MutablePeriod.add(DurationFieldType,int)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,add,(org.joda.time.ReadablePeriod) → void,org.joda.time.MutablePeriod.add(ReadablePeriod),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,add,"(int, int, int, int, int, int, int, int) → void","org.joda.time.MutablePeriod.add(int,int,int,int,int,int,int,int)",35,0,0.0,0,0,coverage not available since no branches,1,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,add,(org.joda.time.ReadableInterval) → void,org.joda.time.MutablePeriod.add(ReadableInterval),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,add,(org.joda.time.ReadableDuration) → void,org.joda.time.MutablePeriod.add(ReadableDuration),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,add,(long) → void,org.joda.time.MutablePeriod.add(long),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,add,"(long, org.joda.time.Chronology) → void","org.joda.time.MutablePeriod.add(long,Chronology)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,mergePeriod,(org.joda.time.ReadablePeriod) → void,org.joda.time.MutablePeriod.mergePeriod(ReadablePeriod),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getYears,() → int,org.joda.time.MutablePeriod.getYears(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getMonths,() → int,org.joda.time.MutablePeriod.getMonths(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getWeeks,() → int,org.joda.time.MutablePeriod.getWeeks(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getDays,() → int,org.joda.time.MutablePeriod.getDays(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getHours,() → int,org.joda.time.MutablePeriod.getHours(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getMinutes,() → int,org.joda.time.MutablePeriod.getMinutes(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getSeconds,() → int,org.joda.time.MutablePeriod.getSeconds(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,getMillis,() → int,org.joda.time.MutablePeriod.getMillis(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setYears,(int) → void,org.joda.time.MutablePeriod.setYears(int),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,addYears,(int) → void,org.joda.time.MutablePeriod.addYears(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setMonths,(int) → void,org.joda.time.MutablePeriod.setMonths(int),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,addMonths,(int) → void,org.joda.time.MutablePeriod.addMonths(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setWeeks,(int) → void,org.joda.time.MutablePeriod.setWeeks(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,addWeeks,(int) → void,org.joda.time.MutablePeriod.addWeeks(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setDays,(int) → void,org.joda.time.MutablePeriod.setDays(int),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,addDays,(int) → void,org.joda.time.MutablePeriod.addDays(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setHours,(int) → void,org.joda.time.MutablePeriod.setHours(int),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,addHours,(int) → void,org.joda.time.MutablePeriod.addHours(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setMinutes,(int) → void,org.joda.time.MutablePeriod.setMinutes(int),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutablePeriod,addMinutes,(int) → void,org.joda.time.MutablePeriod.addMinutes(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setSeconds,(int) → void,org.joda.time.MutablePeriod.setSeconds(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,addSeconds,(int) → void,org.joda.time.MutablePeriod.addSeconds(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,setMillis,(int) → void,org.joda.time.MutablePeriod.setMillis(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,addMillis,(int) → void,org.joda.time.MutablePeriod.addMillis(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,copy,() → org.joda.time.MutablePeriod,org.joda.time.MutablePeriod.copy(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutablePeriod,clone,() → java.lang.Object,org.joda.time.MutablePeriod.clone(),9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeComparator,getInstance,() → org.joda.time.DateTimeComparator,org.joda.time.DateTimeComparator.getInstance(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeComparator,getInstance,(org.joda.time.DateTimeFieldType) → org.joda.time.DateTimeComparator,org.joda.time.DateTimeComparator.getInstance(DateTimeFieldType),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeComparator,getInstance,"(org.joda.time.DateTimeFieldType, org.joda.time.DateTimeFieldType) → org.joda.time.DateTimeComparator","org.joda.time.DateTimeComparator.getInstance(DateTimeFieldType,DateTimeFieldType)",13,13,0.5,9,3,0.25,7,3,4,0.5714285714285714,0,1,1.0
org/joda/time,org/joda/time/DateTimeComparator,getDateOnlyInstance,() → org.joda.time.DateTimeComparator,org.joda.time.DateTimeComparator.getDateOnlyInstance(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeComparator,getTimeOnlyInstance,() → org.joda.time.DateTimeComparator,org.joda.time.DateTimeComparator.getTimeOnlyInstance(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeComparator,<init>,"(org.joda.time.DateTimeFieldType, org.joda.time.DateTimeFieldType) → void","org.joda.time.DateTimeComparator.<init>(DateTimeFieldType,DateTimeFieldType)",0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeComparator,getLowerLimit,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeComparator.getLowerLimit(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeComparator,getUpperLimit,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeComparator.getUpperLimit(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeComparator,compare,"(java.lang.Object, java.lang.Object) → int","org.joda.time.DateTimeComparator.compare(Object,Object)",32,51,0.6144578313253012,4,6,0.6,6,6,13,0.6842105263157895,0,1,1.0
org/joda/time,org/joda/time/DateTimeComparator,readResolve,() → java.lang.Object,org.joda.time.DateTimeComparator.readResolve(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeComparator,equals,(java.lang.Object) → boolean,org.joda.time.DateTimeComparator.equals(Object),40,0,0.0,14,0,0.0,8,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeComparator,hashCode,() → int,org.joda.time.DateTimeComparator.hashCode(),20,0,0.0,4,0,0.0,3,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeComparator,toString,() → java.lang.String,org.joda.time.DateTimeComparator.toString(),4,48,0.9230769230769231,2,6,0.75,5,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeComparator,<clinit>,() → void,org.joda.time.DateTimeComparator.<clinit>(),0,19,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationField,<init>,() → void,org.joda.time.DurationField.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationField,subtract,"(long, int) → long","org.joda.time.DurationField.subtract(long,int)",6,9,0.6,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/DurationField,subtract,"(long, long) → long","org.joda.time.DurationField.subtract(long,long)",15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,weeks,(int) → org.joda.time.Weeks,org.joda.time.Weeks.weeks(int),0,19,1.0,0,7,1.0,7,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/Weeks,weeksBetween,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Weeks","org.joda.time.Weeks.weeksBetween(ReadableInstant,ReadableInstant)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,weeksBetween,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Weeks","org.joda.time.Weeks.weeksBetween(ReadablePartial,ReadablePartial)",31,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,weeksIn,(org.joda.time.ReadableInterval) → org.joda.time.Weeks,org.joda.time.Weeks.weeksIn(ReadableInterval),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,standardWeeksIn,(org.joda.time.ReadablePeriod) → org.joda.time.Weeks,org.joda.time.Weeks.standardWeeksIn(ReadablePeriod),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,parseWeeks,(java.lang.String) → org.joda.time.Weeks,org.joda.time.Weeks.parseWeeks(String),12,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,<init>,(int) → void,org.joda.time.Weeks.<init>(int),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Weeks,readResolve,() → java.lang.Object,org.joda.time.Weeks.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,getFieldType,() → org.joda.time.DurationFieldType,org.joda.time.Weeks.getFieldType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.Weeks.getPeriodType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Weeks,toStandardDays,() → org.joda.time.Days,org.joda.time.Weeks.toStandardDays(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,toStandardHours,() → org.joda.time.Hours,org.joda.time.Weeks.toStandardHours(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,toStandardMinutes,() → org.joda.time.Minutes,org.joda.time.Weeks.toStandardMinutes(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,toStandardSeconds,() → org.joda.time.Seconds,org.joda.time.Weeks.toStandardSeconds(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,toStandardDuration,() → org.joda.time.Duration,org.joda.time.Weeks.toStandardDuration(),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,getWeeks,() → int,org.joda.time.Weeks.getWeeks(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,plus,(int) → org.joda.time.Weeks,org.joda.time.Weeks.plus(int),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,plus,(org.joda.time.Weeks) → org.joda.time.Weeks,org.joda.time.Weeks.plus(Weeks),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,minus,(int) → org.joda.time.Weeks,org.joda.time.Weeks.minus(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,minus,(org.joda.time.Weeks) → org.joda.time.Weeks,org.joda.time.Weeks.minus(Weeks),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,multipliedBy,(int) → org.joda.time.Weeks,org.joda.time.Weeks.multipliedBy(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,dividedBy,(int) → org.joda.time.Weeks,org.joda.time.Weeks.dividedBy(int),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,negated,() → org.joda.time.Weeks,org.joda.time.Weeks.negated(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,isGreaterThan,(org.joda.time.Weeks) → boolean,org.joda.time.Weeks.isGreaterThan(Weeks),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,isLessThan,(org.joda.time.Weeks) → boolean,org.joda.time.Weeks.isLessThan(Weeks),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Weeks,toString,() → java.lang.String,org.joda.time.Weeks.toString(),0,13,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Weeks,<clinit>,() → void,org.joda.time.Weeks.<clinit>(),0,35,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/Days,days,(int) → org.joda.time.Days,org.joda.time.Days.days(int),14,13,0.48148148148148145,7,4,0.36363636363636365,11,7,5,0.4166666666666667,0,1,1.0
org/joda/time,org/joda/time/Days,daysBetween,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Days","org.joda.time.Days.daysBetween(ReadableInstant,ReadableInstant)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,daysBetween,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Days","org.joda.time.Days.daysBetween(ReadablePartial,ReadablePartial)",31,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,daysIn,(org.joda.time.ReadableInterval) → org.joda.time.Days,org.joda.time.Days.daysIn(ReadableInterval),0,14,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/Days,standardDaysIn,(org.joda.time.ReadablePeriod) → org.joda.time.Days,org.joda.time.Days.standardDaysIn(ReadablePeriod),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,parseDays,(java.lang.String) → org.joda.time.Days,org.joda.time.Days.parseDays(String),12,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,<init>,(int) → void,org.joda.time.Days.<init>(int),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Days,readResolve,() → java.lang.Object,org.joda.time.Days.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,getFieldType,() → org.joda.time.DurationFieldType,org.joda.time.Days.getFieldType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Days,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.Days.getPeriodType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Days,toStandardWeeks,() → org.joda.time.Weeks,org.joda.time.Days.toStandardWeeks(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,toStandardHours,() → org.joda.time.Hours,org.joda.time.Days.toStandardHours(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,toStandardMinutes,() → org.joda.time.Minutes,org.joda.time.Days.toStandardMinutes(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,toStandardSeconds,() → org.joda.time.Seconds,org.joda.time.Days.toStandardSeconds(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,toStandardDuration,() → org.joda.time.Duration,org.joda.time.Days.toStandardDuration(),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,getDays,() → int,org.joda.time.Days.getDays(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,plus,(int) → org.joda.time.Days,org.joda.time.Days.plus(int),0,10,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Days,plus,(org.joda.time.Days) → org.joda.time.Days,org.joda.time.Days.plus(Days),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,minus,(int) → org.joda.time.Days,org.joda.time.Days.minus(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,minus,(org.joda.time.Days) → org.joda.time.Days,org.joda.time.Days.minus(Days),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,multipliedBy,(int) → org.joda.time.Days,org.joda.time.Days.multipliedBy(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,dividedBy,(int) → org.joda.time.Days,org.joda.time.Days.dividedBy(int),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,negated,() → org.joda.time.Days,org.joda.time.Days.negated(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,isGreaterThan,(org.joda.time.Days) → boolean,org.joda.time.Days.isGreaterThan(Days),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,isLessThan,(org.joda.time.Days) → boolean,org.joda.time.Days.isLessThan(Days),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Days,toString,() → java.lang.String,org.joda.time.Days.toString(),0,13,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Days,<clinit>,() → void,org.joda.time.Days.<clinit>(),0,55,1.0,0,0,coverage not available since no branches,1,0,11,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,now,() → org.joda.time.LocalTime,org.joda.time.LocalTime.now(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,now,(org.joda.time.DateTimeZone) → org.joda.time.LocalTime,org.joda.time.LocalTime.now(DateTimeZone),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,now,(org.joda.time.Chronology) → org.joda.time.LocalTime,org.joda.time.LocalTime.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,parse,(java.lang.String) → org.joda.time.LocalTime,org.joda.time.LocalTime.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.LocalTime","org.joda.time.LocalTime.parse(String,DateTimeFormatter)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,fromMillisOfDay,(long) → org.joda.time.LocalTime,org.joda.time.LocalTime.fromMillisOfDay(long),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,fromMillisOfDay,"(long, org.joda.time.Chronology) → org.joda.time.LocalTime","org.joda.time.LocalTime.fromMillisOfDay(long,Chronology)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,fromCalendarFields,(java.util.Calendar) → org.joda.time.LocalTime,org.joda.time.LocalTime.fromCalendarFields(Calendar),23,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,fromDateFields,(java.util.Date) → org.joda.time.LocalTime,org.joda.time.LocalTime.fromDateFields(Date),26,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,() → void,org.joda.time.LocalTime.<init>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.LocalTime.<init>(DateTimeZone),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,<init>,(org.joda.time.Chronology) → void,org.joda.time.LocalTime.<init>(Chronology),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,(long) → void,org.joda.time.LocalTime.<init>(long),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,"(long, org.joda.time.DateTimeZone) → void","org.joda.time.LocalTime.<init>(long,DateTimeZone)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.LocalTime.<init>(long,Chronology)",0,25,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,<init>,(java.lang.Object) → void,org.joda.time.LocalTime.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,"(java.lang.Object, org.joda.time.DateTimeZone) → void","org.joda.time.LocalTime.<init>(Object,DateTimeZone)",44,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.LocalTime.<init>(Object,Chronology)",44,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,"(int, int) → void","org.joda.time.LocalTime.<init>(int,int)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,"(int, int, int) → void","org.joda.time.LocalTime.<init>(int,int,int)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<init>,"(int, int, int, int) → void","org.joda.time.LocalTime.<init>(int,int,int,int)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,<init>,"(int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.LocalTime.<init>(int,int,int,int,Chronology)",0,21,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,readResolve,() → java.lang.Object,org.joda.time.LocalTime.readResolve(),27,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,size,() → int,org.joda.time.LocalTime.size(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.LocalTime.getField(int,Chronology)",9,17,0.6538461538461539,3,2,0.4,5,3,3,0.5,0,1,1.0
org/joda/time,org/joda/time/LocalTime,getValue,(int) → int,org.joda.time.LocalTime.getValue(int),42,0,0.0,5,0,0.0,5,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,get,(org.joda.time.DateTimeFieldType) → int,org.joda.time.LocalTime.get(DateTimeFieldType),8,25,0.7575757575757576,1,3,0.75,3,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/LocalTime,isSupported,(org.joda.time.DateTimeFieldType) → boolean,org.joda.time.LocalTime.isSupported(DateTimeFieldType),4,21,0.84,3,5,0.625,5,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,isSupported,(org.joda.time.DurationFieldType) → boolean,org.joda.time.LocalTime.isSupported(DurationFieldType),10,16,0.6153846153846154,3,3,0.5,4,2,5,0.7142857142857143,0,1,1.0
org/joda/time,org/joda/time/LocalTime,getLocalMillis,() → long,org.joda.time.LocalTime.getLocalMillis(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,getChronology,() → org.joda.time.Chronology,org.joda.time.LocalTime.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalTime,equals,(java.lang.Object) → boolean,org.joda.time.LocalTime.equals(Object),31,0,0.0,8,0,0.0,5,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,hashCode,() → int,org.joda.time.LocalTime.hashCode(),94,0,0.0,0,0,coverage not available since no branches,1,11,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,compareTo,(org.joda.time.ReadablePartial) → int,org.joda.time.LocalTime.compareTo(ReadablePartial),7,32,0.8205128205128205,4,6,0.6,6,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/LocalTime,withLocalMillis,(long) → org.joda.time.LocalTime,org.joda.time.LocalTime.withLocalMillis(long),14,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withFields,(org.joda.time.ReadablePartial) → org.joda.time.LocalTime,org.joda.time.LocalTime.withFields(ReadablePartial),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.LocalTime","org.joda.time.LocalTime.withField(DateTimeFieldType,int)",38,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.LocalTime","org.joda.time.LocalTime.withFieldAdded(DurationFieldType,int)",42,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.LocalTime","org.joda.time.LocalTime.withPeriodAdded(ReadablePeriod,int)",18,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,plus,(org.joda.time.ReadablePeriod) → org.joda.time.LocalTime,org.joda.time.LocalTime.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,plusHours,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.plusHours(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,plusMinutes,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.plusMinutes(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,plusSeconds,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.plusSeconds(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,plusMillis,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.plusMillis(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,minus,(org.joda.time.ReadablePeriod) → org.joda.time.LocalTime,org.joda.time.LocalTime.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,minusHours,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.minusHours(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,minusMinutes,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.minusMinutes(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,minusSeconds,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.minusSeconds(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,minusMillis,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.minusMillis(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,property,(org.joda.time.DateTimeFieldType) → org.joda.time.LocalTime$Property,org.joda.time.LocalTime.property(DateTimeFieldType),34,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,getHourOfDay,() → int,org.joda.time.LocalTime.getHourOfDay(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,getMinuteOfHour,() → int,org.joda.time.LocalTime.getMinuteOfHour(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,getSecondOfMinute,() → int,org.joda.time.LocalTime.getSecondOfMinute(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,getMillisOfSecond,() → int,org.joda.time.LocalTime.getMillisOfSecond(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,getMillisOfDay,() → int,org.joda.time.LocalTime.getMillisOfDay(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withHourOfDay,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.withHourOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withMinuteOfHour,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.withMinuteOfHour(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withSecondOfMinute,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.withSecondOfMinute(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withMillisOfSecond,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.withMillisOfSecond(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,withMillisOfDay,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime.withMillisOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,hourOfDay,() → org.joda.time.LocalTime$Property,org.joda.time.LocalTime.hourOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,minuteOfHour,() → org.joda.time.LocalTime$Property,org.joda.time.LocalTime.minuteOfHour(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,secondOfMinute,() → org.joda.time.LocalTime$Property,org.joda.time.LocalTime.secondOfMinute(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,millisOfSecond,() → org.joda.time.LocalTime$Property,org.joda.time.LocalTime.millisOfSecond(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,millisOfDay,() → org.joda.time.LocalTime$Property,org.joda.time.LocalTime.millisOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,toDateTimeToday,() → org.joda.time.DateTime,org.joda.time.LocalTime.toDateTimeToday(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,toDateTimeToday,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.LocalTime.toDateTimeToday(DateTimeZone),18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,toString,() → java.lang.String,org.joda.time.LocalTime.toString(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,toString,(java.lang.String) → java.lang.String,org.joda.time.LocalTime.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.LocalTime.toString(String,Locale)",12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime,<clinit>,() → void,org.joda.time.LocalTime.<clinit>(),0,29,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,fromCalendarFields,(java.util.Calendar) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.fromCalendarFields(Calendar),0,23,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,fromDateFields,(java.util.Date) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.fromDateFields(Date),26,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,fromMillisOfDay,(long) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.fromMillisOfDay(long),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,fromMillisOfDay,"(long, org.joda.time.Chronology) → org.joda.time.TimeOfDay","org.joda.time.TimeOfDay.fromMillisOfDay(long,Chronology)",12,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,() → void,org.joda.time.TimeOfDay.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.TimeOfDay.<init>(DateTimeZone),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,(org.joda.time.Chronology) → void,org.joda.time.TimeOfDay.<init>(Chronology),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,(long) → void,org.joda.time.TimeOfDay.<init>(long),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.TimeOfDay.<init>(long,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,(java.lang.Object) → void,org.joda.time.TimeOfDay.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.TimeOfDay.<init>(Object,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(int, int) → void","org.joda.time.TimeOfDay.<init>(int,int)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(int, int, org.joda.time.Chronology) → void","org.joda.time.TimeOfDay.<init>(int,int,Chronology)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(int, int, int) → void","org.joda.time.TimeOfDay.<init>(int,int,int)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(int, int, int, org.joda.time.Chronology) → void","org.joda.time.TimeOfDay.<init>(int,int,int,Chronology)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(int, int, int, int) → void","org.joda.time.TimeOfDay.<init>(int,int,int,int)",0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.TimeOfDay.<init>(int,int,int,int,Chronology)",0,22,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(org.joda.time.TimeOfDay, int[]) → void","org.joda.time.TimeOfDay.<init>(TimeOfDay,int[])",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<init>,"(org.joda.time.TimeOfDay, org.joda.time.Chronology) → void","org.joda.time.TimeOfDay.<init>(TimeOfDay,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,size,() → int,org.joda.time.TimeOfDay.size(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.TimeOfDay.getField(int,Chronology)",12,14,0.5384615384615384,1,4,0.8,5,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,getFieldType,(int) → org.joda.time.DateTimeFieldType,org.joda.time.TimeOfDay.getFieldType(int),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,getFieldTypes,() → org.joda.time.DateTimeFieldType[],org.joda.time.TimeOfDay.getFieldTypes(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withChronologyRetainFields,(org.joda.time.Chronology) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.withChronologyRetainFields(Chronology),25,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.TimeOfDay","org.joda.time.TimeOfDay.withField(DateTimeFieldType,int)",29,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.TimeOfDay","org.joda.time.TimeOfDay.withFieldAdded(DurationFieldType,int)",26,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.TimeOfDay","org.joda.time.TimeOfDay.withPeriodAdded(ReadablePeriod,int)",46,0,0.0,8,0,0.0,5,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,plus,(org.joda.time.ReadablePeriod) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,plusHours,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.plusHours(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,plusMinutes,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.plusMinutes(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,plusSeconds,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.plusSeconds(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,plusMillis,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.plusMillis(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,minus,(org.joda.time.ReadablePeriod) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,minusHours,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.minusHours(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,minusMinutes,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.minusMinutes(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,minusSeconds,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.minusSeconds(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,minusMillis,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.minusMillis(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,property,(org.joda.time.DateTimeFieldType) → org.joda.time.TimeOfDay$Property,org.joda.time.TimeOfDay.property(DateTimeFieldType),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,toLocalTime,() → org.joda.time.LocalTime,org.joda.time.TimeOfDay.toLocalTime(),14,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,toDateTimeToday,() → org.joda.time.DateTime,org.joda.time.TimeOfDay.toDateTimeToday(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,toDateTimeToday,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.TimeOfDay.toDateTimeToday(DateTimeZone),18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,getHourOfDay,() → int,org.joda.time.TimeOfDay.getHourOfDay(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,getMinuteOfHour,() → int,org.joda.time.TimeOfDay.getMinuteOfHour(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,getSecondOfMinute,() → int,org.joda.time.TimeOfDay.getSecondOfMinute(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/TimeOfDay,getMillisOfSecond,() → int,org.joda.time.TimeOfDay.getMillisOfSecond(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withHourOfDay,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.withHourOfDay(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withMinuteOfHour,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.withMinuteOfHour(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withSecondOfMinute,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.withSecondOfMinute(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,withMillisOfSecond,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay.withMillisOfSecond(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,hourOfDay,() → org.joda.time.TimeOfDay$Property,org.joda.time.TimeOfDay.hourOfDay(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,minuteOfHour,() → org.joda.time.TimeOfDay$Property,org.joda.time.TimeOfDay.minuteOfHour(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,secondOfMinute,() → org.joda.time.TimeOfDay$Property,org.joda.time.TimeOfDay.secondOfMinute(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,millisOfSecond,() → org.joda.time.TimeOfDay$Property,org.joda.time.TimeOfDay.millisOfSecond(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,toString,() → java.lang.String,org.joda.time.TimeOfDay.toString(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay,<clinit>,() → void,org.joda.time.TimeOfDay.<clinit>(),0,28,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/Duration,parse,(java.lang.String) → org.joda.time.Duration,org.joda.time.Duration.parse(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,standardDays,(long) → org.joda.time.Duration,org.joda.time.Duration.standardDays(long),0,13,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Duration,standardHours,(long) → org.joda.time.Duration,org.joda.time.Duration.standardHours(long),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,standardMinutes,(long) → org.joda.time.Duration,org.joda.time.Duration.standardMinutes(long),2,11,0.8461538461538461,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/Duration,standardSeconds,(long) → org.joda.time.Duration,org.joda.time.Duration.standardSeconds(long),2,11,0.8461538461538461,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/Duration,millis,(long) → org.joda.time.Duration,org.joda.time.Duration.millis(long),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,<init>,(long) → void,org.joda.time.Duration.<init>(long),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Duration,<init>,"(long, long) → void","org.joda.time.Duration.<init>(long,long)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.Duration.<init>(ReadableInstant,ReadableInstant)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,<init>,(java.lang.Object) → void,org.joda.time.Duration.<init>(Object),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,getStandardDays,() → long,org.joda.time.Duration.getStandardDays(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,getStandardHours,() → long,org.joda.time.Duration.getStandardHours(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,getStandardMinutes,() → long,org.joda.time.Duration.getStandardMinutes(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,getStandardSeconds,() → long,org.joda.time.Duration.getStandardSeconds(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,toDuration,() → org.joda.time.Duration,org.joda.time.Duration.toDuration(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,toStandardDays,() → org.joda.time.Days,org.joda.time.Duration.toStandardDays(),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,toStandardHours,() → org.joda.time.Hours,org.joda.time.Duration.toStandardHours(),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,toStandardMinutes,() → org.joda.time.Minutes,org.joda.time.Duration.toStandardMinutes(),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,toStandardSeconds,() → org.joda.time.Seconds,org.joda.time.Duration.toStandardSeconds(),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,withMillis,(long) → org.joda.time.Duration,org.joda.time.Duration.withMillis(long),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,withDurationAdded,"(long, int) → org.joda.time.Duration","org.joda.time.Duration.withDurationAdded(long,int)",0,22,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/Duration,withDurationAdded,"(org.joda.time.ReadableDuration, int) → org.joda.time.Duration","org.joda.time.Duration.withDurationAdded(ReadableDuration,int)",12,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,plus,(long) → org.joda.time.Duration,org.joda.time.Duration.plus(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,plus,(org.joda.time.ReadableDuration) → org.joda.time.Duration,org.joda.time.Duration.plus(ReadableDuration),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,minus,(long) → org.joda.time.Duration,org.joda.time.Duration.minus(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,minus,(org.joda.time.ReadableDuration) → org.joda.time.Duration,org.joda.time.Duration.minus(ReadableDuration),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,multipliedBy,(long) → org.joda.time.Duration,org.joda.time.Duration.multipliedBy(long),0,14,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Duration,dividedBy,(long) → org.joda.time.Duration,org.joda.time.Duration.dividedBy(long),14,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,dividedBy,"(long, java.math.RoundingMode) → org.joda.time.Duration","org.joda.time.Duration.dividedBy(long,RoundingMode)",15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,negated,() → org.joda.time.Duration,org.joda.time.Duration.negated(),17,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,abs,() → org.joda.time.Duration,org.joda.time.Duration.abs(),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Duration,<clinit>,() → void,org.joda.time.Duration.<clinit>(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,standard,() → org.joda.time.PeriodType,org.joda.time.PeriodType.standard(),0,81,1.0,0,2,1.0,2,0,9,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,yearMonthDayTime,() → org.joda.time.PeriodType,org.joda.time.PeriodType.yearMonthDayTime(),0,77,1.0,0,2,1.0,2,0,9,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,yearMonthDay,() → org.joda.time.PeriodType,org.joda.time.PeriodType.yearMonthDay(),0,61,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,yearWeekDayTime,() → org.joda.time.PeriodType,org.joda.time.PeriodType.yearWeekDayTime(),0,77,1.0,0,2,1.0,2,0,9,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,yearWeekDay,() → org.joda.time.PeriodType,org.joda.time.PeriodType.yearWeekDay(),0,61,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,yearDayTime,() → org.joda.time.PeriodType,org.joda.time.PeriodType.yearDayTime(),0,73,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,yearDay,() → org.joda.time.PeriodType,org.joda.time.PeriodType.yearDay(),0,57,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,dayTime,() → org.joda.time.PeriodType,org.joda.time.PeriodType.dayTime(),0,69,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,time,() → org.joda.time.PeriodType,org.joda.time.PeriodType.time(),0,65,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,years,() → org.joda.time.PeriodType,org.joda.time.PeriodType.years(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,months,() → org.joda.time.PeriodType,org.joda.time.PeriodType.months(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,weeks,() → org.joda.time.PeriodType,org.joda.time.PeriodType.weeks(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,days,() → org.joda.time.PeriodType,org.joda.time.PeriodType.days(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,hours,() → org.joda.time.PeriodType,org.joda.time.PeriodType.hours(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,minutes,() → org.joda.time.PeriodType,org.joda.time.PeriodType.minutes(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,seconds,() → org.joda.time.PeriodType,org.joda.time.PeriodType.seconds(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,millis,() → org.joda.time.PeriodType,org.joda.time.PeriodType.millis(),0,53,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,forFields,(org.joda.time.DurationFieldType[]) → org.joda.time.PeriodType,org.joda.time.PeriodType.forFields(DurationFieldType[]),137,124,0.47509578544061304,26,8,0.23529411764705882,18,32,26,0.4482758620689655,0,1,1.0
org/joda/time,org/joda/time/PeriodType,<init>,"(java.lang.String, org.joda.time.DurationFieldType[], int[]) → void","org.joda.time.PeriodType.<init>(String,DurationFieldType[],int[])",0,12,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,getName,() → java.lang.String,org.joda.time.PeriodType.getName(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,size,() → int,org.joda.time.PeriodType.size(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,getFieldType,(int) → org.joda.time.DurationFieldType,org.joda.time.PeriodType.getFieldType(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,isSupported,(org.joda.time.DurationFieldType) → boolean,org.joda.time.PeriodType.isSupported(DurationFieldType),0,8,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,indexOf,(org.joda.time.DurationFieldType) → int,org.joda.time.PeriodType.indexOf(DurationFieldType),0,21,1.0,0,4,1.0,3,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,toString,() → java.lang.String,org.joda.time.PeriodType.toString(),0,12,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,getIndexedField,"(org.joda.time.ReadablePeriod, int) → int","org.joda.time.PeriodType.getIndexedField(ReadablePeriod,int)",0,14,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,setIndexedField,"(org.joda.time.ReadablePeriod, int, int[], int) → boolean","org.joda.time.PeriodType.setIndexedField(ReadablePeriod,int,int[],int)",5,14,0.7368421052631579,1,1,0.5,2,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/PeriodType,addIndexedField,"(org.joda.time.ReadablePeriod, int, int[], int) → boolean","org.joda.time.PeriodType.addIndexedField(ReadablePeriod,int,int[],int)",5,22,0.8148148148148148,1,3,0.75,3,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/PeriodType,withYearsRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withYearsRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withMonthsRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withMonthsRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withWeeksRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withWeeksRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withDaysRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withDaysRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withHoursRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withHoursRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withMinutesRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withMinutesRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withSecondsRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withSecondsRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withMillisRemoved,() → org.joda.time.PeriodType,org.joda.time.PeriodType.withMillisRemoved(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/PeriodType,withFieldRemoved,"(int, java.lang.String) → org.joda.time.PeriodType","org.joda.time.PeriodType.withFieldRemoved(int,String)",8,102,0.9272727272727272,1,15,0.9375,9,1,16,0.9411764705882353,0,1,1.0
org/joda/time,org/joda/time/PeriodType,equals,(java.lang.Object) → boolean,org.joda.time.PeriodType.equals(Object),0,19,1.0,0,4,1.0,3,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,hashCode,() → int,org.joda.time.PeriodType.hashCode(),0,21,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/PeriodType,<clinit>,() → void,org.joda.time.PeriodType.<clinit>(),0,22,1.0,0,0,coverage not available since no branches,1,0,9,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,now,() → org.joda.time.Instant,org.joda.time.Instant.now(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,ofEpochMilli,(long) → org.joda.time.Instant,org.joda.time.Instant.ofEpochMilli(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,ofEpochSecond,(long) → org.joda.time.Instant,org.joda.time.Instant.ofEpochSecond(long),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,parse,(java.lang.String) → org.joda.time.Instant,org.joda.time.Instant.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.Instant","org.joda.time.Instant.parse(String,DateTimeFormatter)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,<init>,() → void,org.joda.time.Instant.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,<init>,(long) → void,org.joda.time.Instant.<init>(long),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,<init>,(java.lang.Object) → void,org.joda.time.Instant.<init>(Object),13,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,toInstant,() → org.joda.time.Instant,org.joda.time.Instant.toInstant(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,withMillis,(long) → org.joda.time.Instant,org.joda.time.Instant.withMillis(long),2,10,0.8333333333333334,1,1,0.5,2,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,withDurationAdded,"(long, int) → org.joda.time.Instant","org.joda.time.Instant.withDurationAdded(long,int)",0,20,1.0,1,3,0.75,3,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,withDurationAdded,"(org.joda.time.ReadableDuration, int) → org.joda.time.Instant","org.joda.time.Instant.withDurationAdded(ReadableDuration,int)",0,12,1.0,1,3,0.75,3,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,plus,(long) → org.joda.time.Instant,org.joda.time.Instant.plus(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,plus,(org.joda.time.ReadableDuration) → org.joda.time.Instant,org.joda.time.Instant.plus(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,minus,(long) → org.joda.time.Instant,org.joda.time.Instant.minus(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,minus,(org.joda.time.ReadableDuration) → org.joda.time.Instant,org.joda.time.Instant.minus(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,getMillis,() → long,org.joda.time.Instant.getMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,getChronology,() → org.joda.time.Chronology,org.joda.time.Instant.getChronology(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Instant,toDateTime,() → org.joda.time.DateTime,org.joda.time.Instant.toDateTime(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,toDateTimeISO,() → org.joda.time.DateTime,org.joda.time.Instant.toDateTimeISO(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,toMutableDateTime,() → org.joda.time.MutableDateTime,org.joda.time.Instant.toMutableDateTime(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,toMutableDateTimeISO,() → org.joda.time.MutableDateTime,org.joda.time.Instant.toMutableDateTimeISO(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Instant,<clinit>,() → void,org.joda.time.Instant.<clinit>(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate$Property,<init>,"(org.joda.time.LocalDate, org.joda.time.DateTimeField) → void","org.joda.time.LocalDate$Property.<init>(LocalDate,DateTimeField)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.LocalDate$Property.writeObject(ObjectOutputStream),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,readObject,(java.io.ObjectInputStream) → void,org.joda.time.LocalDate$Property.readObject(ObjectInputStream),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.LocalDate$Property.getField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,getMillis,() → long,org.joda.time.LocalDate$Property.getMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,getChronology,() → org.joda.time.Chronology,org.joda.time.LocalDate$Property.getChronology(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,getLocalDate,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.getLocalDate(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,addToCopy,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.addToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,addWrapFieldToCopy,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.addWrapFieldToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,setCopy,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.setCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.LocalDate","org.joda.time.LocalDate$Property.setCopy(String,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,setCopy,(java.lang.String) → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,withMaximumValue,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.withMaximumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,withMinimumValue,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.withMinimumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,roundFloorCopy,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.roundFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,roundCeilingCopy,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.roundCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,roundHalfFloorCopy,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.roundHalfFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,roundHalfCeilingCopy,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.roundHalfCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate$Property,roundHalfEvenCopy,() → org.joda.time.LocalDate,org.joda.time.LocalDate$Property.roundHalfEvenCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DurationFieldType$StandardDurationFieldType,<init>,"(java.lang.String, byte) → void","org.joda.time.DurationFieldType$StandardDurationFieldType.<init>(String,byte)",0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType$StandardDurationFieldType,equals,(java.lang.Object) → boolean,org.joda.time.DurationFieldType$StandardDurationFieldType.equals(Object),2,18,0.9,1,5,0.8333333333333334,4,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType$StandardDurationFieldType,hashCode,() → int,org.joda.time.DurationFieldType$StandardDurationFieldType.hashCode(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType$StandardDurationFieldType,getField,(org.joda.time.Chronology) → org.joda.time.DurationField,org.joda.time.DurationFieldType$StandardDurationFieldType.getField(Chronology),16,30,0.6521739130434783,5,8,0.6153846153846154,13,5,10,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType$StandardDurationFieldType,readResolve,() → java.lang.Object,org.joda.time.DurationFieldType$StandardDurationFieldType.readResolve(),29,0,0.0,13,0,0.0,13,14,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils$OffsetMillisProvider,<init>,(long) → void,org.joda.time.DateTimeUtils$OffsetMillisProvider.<init>(long),6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils$OffsetMillisProvider,getMillis,() → long,org.joda.time.DateTimeUtils$OffsetMillisProvider.getMillis(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeFieldType$StandardDateTimeFieldType,<init>,"(java.lang.String, byte, org.joda.time.DurationFieldType, org.joda.time.DurationFieldType) → void","org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.<init>(String,byte,DurationFieldType,DurationFieldType)",0,13,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType$StandardDateTimeFieldType,getDurationType,() → org.joda.time.DurationFieldType,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getDurationType(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType$StandardDateTimeFieldType,getRangeDurationType,() → org.joda.time.DurationFieldType,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getRangeDurationType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeFieldType$StandardDateTimeFieldType,equals,(java.lang.Object) → boolean,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.equals(Object),4,16,0.8,2,4,0.6666666666666666,4,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType$StandardDateTimeFieldType,hashCode,() → int,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.hashCode(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType$StandardDateTimeFieldType,getField,(org.joda.time.Chronology) → org.joda.time.DateTimeField,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.getField(Chronology),34,45,0.569620253164557,11,13,0.5416666666666666,24,11,15,0.5769230769230769,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType$StandardDateTimeFieldType,readResolve,() → java.lang.Object,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType.readResolve(),51,0,0.0,24,0,0.0,24,25,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,<init>,"(org.joda.time.YearMonthDay, int) → void","org.joda.time.YearMonthDay$Property.<init>(YearMonthDay,int)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.YearMonthDay$Property.getField(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,getReadablePartial,() → org.joda.time.ReadablePartial,org.joda.time.YearMonthDay$Property.getReadablePartial(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,getYearMonthDay,() → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay$Property.getYearMonthDay(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,get,() → int,org.joda.time.YearMonthDay$Property.get(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,addToCopy,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay$Property.addToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,addWrapFieldToCopy,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay$Property.addWrapFieldToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,setCopy,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay$Property.setCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.YearMonthDay","org.joda.time.YearMonthDay$Property.setCopy(String,Locale)",22,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,setCopy,(java.lang.String) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,withMaximumValue,() → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay$Property.withMaximumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay$Property,withMinimumValue,() → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay$Property.withMinimumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,<init>,"(org.joda.time.LocalTime, org.joda.time.DateTimeField) → void","org.joda.time.LocalTime$Property.<init>(LocalTime,DateTimeField)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.LocalTime$Property.writeObject(ObjectOutputStream),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,readObject,(java.io.ObjectInputStream) → void,org.joda.time.LocalTime$Property.readObject(ObjectInputStream),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.LocalTime$Property.getField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,getMillis,() → long,org.joda.time.LocalTime$Property.getMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,getChronology,() → org.joda.time.Chronology,org.joda.time.LocalTime$Property.getChronology(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,getLocalTime,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.getLocalTime(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,addCopy,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.addCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,addCopy,(long) → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.addCopy(long),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,addNoWrapToCopy,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.addNoWrapToCopy(int),30,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,addWrapFieldToCopy,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.addWrapFieldToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,setCopy,(int) → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.setCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.LocalTime","org.joda.time.LocalTime$Property.setCopy(String,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,setCopy,(java.lang.String) → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,withMaximumValue,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.withMaximumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,withMinimumValue,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.withMinimumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,roundFloorCopy,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.roundFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,roundCeilingCopy,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.roundCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,roundHalfFloorCopy,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.roundHalfFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,roundHalfCeilingCopy,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.roundHalfCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalTime$Property,roundHalfEvenCopy,() → org.joda.time.LocalTime,org.joda.time.LocalTime$Property.roundHalfEvenCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,now,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.now(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,now,(org.joda.time.DateTimeZone) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.now(DateTimeZone),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,now,(org.joda.time.Chronology) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,parse,(java.lang.String) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime.parse(String,DateTimeFormatter)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,fromCalendarFields,(java.util.Calendar) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.fromCalendarFields(Calendar),3,44,0.9361702127659575,1,3,0.75,3,0,11,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,fromDateFields,(java.util.Date) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.fromDateFields(Date),51,0,0.0,4,0,0.0,3,14,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,<init>,() → void,org.joda.time.LocalDateTime.<init>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.LocalDateTime.<init>(DateTimeZone),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,<init>,(org.joda.time.Chronology) → void,org.joda.time.LocalDateTime.<init>(Chronology),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,<init>,(long) → void,org.joda.time.LocalDateTime.<init>(long),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(long, org.joda.time.DateTimeZone) → void","org.joda.time.LocalDateTime.<init>(long,DateTimeZone)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.LocalDateTime.<init>(long,Chronology)",0,19,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,<init>,(java.lang.Object) → void,org.joda.time.LocalDateTime.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(java.lang.Object, org.joda.time.DateTimeZone) → void","org.joda.time.LocalDateTime.<init>(Object,DateTimeZone)",43,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.LocalDateTime.<init>(Object,Chronology)",43,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(int, int, int, int, int) → void","org.joda.time.LocalDateTime.<init>(int,int,int,int,int)",0,11,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(int, int, int, int, int, int) → void","org.joda.time.LocalDateTime.<init>(int,int,int,int,int,int)",0,11,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(int, int, int, int, int, int, int) → void","org.joda.time.LocalDateTime.<init>(int,int,int,int,int,int,int)",0,11,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,<init>,"(int, int, int, int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.LocalDateTime.<init>(int,int,int,int,int,int,int,Chronology)",0,23,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,readResolve,() → java.lang.Object,org.joda.time.LocalDateTime.readResolve(),27,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,size,() → int,org.joda.time.LocalDateTime.size(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.LocalDateTime.getField(int,Chronology)",12,14,0.5384615384615384,1,4,0.8,5,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getValue,(int) → int,org.joda.time.LocalDateTime.getValue(int),0,42,1.0,0,5,1.0,5,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,get,(org.joda.time.DateTimeFieldType) → int,org.joda.time.LocalDateTime.get(DateTimeFieldType),5,10,0.6666666666666666,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,isSupported,(org.joda.time.DateTimeFieldType) → boolean,org.joda.time.LocalDateTime.isSupported(DateTimeFieldType),2,8,0.8,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,isSupported,(org.joda.time.DurationFieldType) → boolean,org.joda.time.LocalDateTime.isSupported(DurationFieldType),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getLocalMillis,() → long,org.joda.time.LocalDateTime.getLocalMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getChronology,() → org.joda.time.Chronology,org.joda.time.LocalDateTime.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,equals,(java.lang.Object) → boolean,org.joda.time.LocalDateTime.equals(Object),4,27,0.8709677419354839,2,6,0.75,5,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,hashCode,() → int,org.joda.time.LocalDateTime.hashCode(),94,0,0.0,0,0,coverage not available since no branches,1,11,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,compareTo,(org.joda.time.ReadablePartial) → int,org.joda.time.LocalDateTime.compareTo(ReadablePartial),6,33,0.8461538461538461,3,7,0.7,6,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,toDateTime,() → org.joda.time.DateTime,org.joda.time.LocalDateTime.toDateTime(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,toDateTime,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.LocalDateTime.toDateTime(DateTimeZone),0,27,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,toLocalDate,() → org.joda.time.LocalDate,org.joda.time.LocalDateTime.toLocalDate(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,toLocalTime,() → org.joda.time.LocalTime,org.joda.time.LocalDateTime.toLocalTime(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,toDate,() → java.util.Date,org.joda.time.LocalDateTime.toDate(),35,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,toDate,(java.util.TimeZone) → java.util.Date,org.joda.time.LocalDateTime.toDate(TimeZone),37,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,correctDstTransition,"(java.util.Date, java.util.TimeZone) → java.util.Date","org.joda.time.LocalDateTime.correctDstTransition(Date,TimeZone)",75,0,0.0,10,0,0.0,6,18,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withLocalMillis,(long) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withLocalMillis(long),0,14,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,withDate,"(int, int, int) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime.withDate(int,int,int)",28,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withTime,"(int, int, int, int) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime.withTime(int,int,int,int)",34,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withFields,(org.joda.time.ReadablePartial) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withFields(ReadablePartial),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime.withField(DateTimeFieldType,int)",0,20,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime.withFieldAdded(DurationFieldType,int)",13,11,0.4583333333333333,1,3,0.75,3,2,4,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,withDurationAdded,"(org.joda.time.ReadableDuration, int) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime.withDurationAdded(ReadableDuration,int)",19,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime.withPeriodAdded(ReadablePeriod,int)",18,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plus,(org.joda.time.ReadableDuration) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plus(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plus,(org.joda.time.ReadablePeriod) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plusYears,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusYears(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plusMonths,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusMonths(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,plusWeeks,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusWeeks(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plusDays,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusDays(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plusHours,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusHours(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plusMinutes,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusMinutes(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,plusSeconds,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusSeconds(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,plusMillis,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.plusMillis(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,minus,(org.joda.time.ReadableDuration) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minus(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,minus,(org.joda.time.ReadablePeriod) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,minusYears,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusYears(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,minusMonths,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusMonths(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,minusWeeks,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusWeeks(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,minusDays,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusDays(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,minusHours,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusHours(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,minusMinutes,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusMinutes(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,minusSeconds,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusSeconds(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,minusMillis,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.minusMillis(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,property,(org.joda.time.DateTimeFieldType) → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.property(DateTimeFieldType),34,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getEra,() → int,org.joda.time.LocalDateTime.getEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getCenturyOfEra,() → int,org.joda.time.LocalDateTime.getCenturyOfEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getYearOfEra,() → int,org.joda.time.LocalDateTime.getYearOfEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getYearOfCentury,() → int,org.joda.time.LocalDateTime.getYearOfCentury(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getYear,() → int,org.joda.time.LocalDateTime.getYear(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getWeekyear,() → int,org.joda.time.LocalDateTime.getWeekyear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getMonthOfYear,() → int,org.joda.time.LocalDateTime.getMonthOfYear(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getWeekOfWeekyear,() → int,org.joda.time.LocalDateTime.getWeekOfWeekyear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getDayOfYear,() → int,org.joda.time.LocalDateTime.getDayOfYear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getDayOfMonth,() → int,org.joda.time.LocalDateTime.getDayOfMonth(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getDayOfWeek,() → int,org.joda.time.LocalDateTime.getDayOfWeek(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,getHourOfDay,() → int,org.joda.time.LocalDateTime.getHourOfDay(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getMinuteOfHour,() → int,org.joda.time.LocalDateTime.getMinuteOfHour(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getSecondOfMinute,() → int,org.joda.time.LocalDateTime.getSecondOfMinute(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getMillisOfSecond,() → int,org.joda.time.LocalDateTime.getMillisOfSecond(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,getMillisOfDay,() → int,org.joda.time.LocalDateTime.getMillisOfDay(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withEra,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withCenturyOfEra,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withCenturyOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withYearOfEra,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withYearOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withYearOfCentury,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withYearOfCentury(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withYear,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withWeekyear,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withMonthOfYear,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withMonthOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withWeekOfWeekyear,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withWeekOfWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withDayOfYear,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withDayOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withDayOfMonth,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withDayOfMonth(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withDayOfWeek,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withDayOfWeek(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withHourOfDay,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withHourOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withMinuteOfHour,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withMinuteOfHour(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withSecondOfMinute,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withSecondOfMinute(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withMillisOfSecond,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withMillisOfSecond(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,withMillisOfDay,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime.withMillisOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,era,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.era(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,centuryOfEra,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.centuryOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,yearOfCentury,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.yearOfCentury(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,yearOfEra,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.yearOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,year,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.year(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,weekyear,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.weekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,monthOfYear,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.monthOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,weekOfWeekyear,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.weekOfWeekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,dayOfYear,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.dayOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,dayOfMonth,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.dayOfMonth(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,dayOfWeek,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.dayOfWeek(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,hourOfDay,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.hourOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,minuteOfHour,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.minuteOfHour(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,secondOfMinute,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.secondOfMinute(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,millisOfSecond,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.millisOfSecond(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,millisOfDay,() → org.joda.time.LocalDateTime$Property,org.joda.time.LocalDateTime.millisOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,toString,() → java.lang.String,org.joda.time.LocalDateTime.toString(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime,toString,(java.lang.String) → java.lang.String,org.joda.time.LocalDateTime.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.LocalDateTime.toString(String,Locale)",12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,seconds,(int) → org.joda.time.Seconds,org.joda.time.Seconds.seconds(int),0,19,1.0,0,7,1.0,7,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/Seconds,secondsBetween,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Seconds","org.joda.time.Seconds.secondsBetween(ReadableInstant,ReadableInstant)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,secondsBetween,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Seconds","org.joda.time.Seconds.secondsBetween(ReadablePartial,ReadablePartial)",31,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,secondsIn,(org.joda.time.ReadableInterval) → org.joda.time.Seconds,org.joda.time.Seconds.secondsIn(ReadableInterval),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,standardSecondsIn,(org.joda.time.ReadablePeriod) → org.joda.time.Seconds,org.joda.time.Seconds.standardSecondsIn(ReadablePeriod),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,parseSeconds,(java.lang.String) → org.joda.time.Seconds,org.joda.time.Seconds.parseSeconds(String),12,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,<init>,(int) → void,org.joda.time.Seconds.<init>(int),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Seconds,readResolve,() → java.lang.Object,org.joda.time.Seconds.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,getFieldType,() → org.joda.time.DurationFieldType,org.joda.time.Seconds.getFieldType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.Seconds.getPeriodType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Seconds,toStandardWeeks,() → org.joda.time.Weeks,org.joda.time.Seconds.toStandardWeeks(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,toStandardDays,() → org.joda.time.Days,org.joda.time.Seconds.toStandardDays(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,toStandardHours,() → org.joda.time.Hours,org.joda.time.Seconds.toStandardHours(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,toStandardMinutes,() → org.joda.time.Minutes,org.joda.time.Seconds.toStandardMinutes(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,toStandardDuration,() → org.joda.time.Duration,org.joda.time.Seconds.toStandardDuration(),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,getSeconds,() → int,org.joda.time.Seconds.getSeconds(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,plus,(int) → org.joda.time.Seconds,org.joda.time.Seconds.plus(int),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,plus,(org.joda.time.Seconds) → org.joda.time.Seconds,org.joda.time.Seconds.plus(Seconds),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,minus,(int) → org.joda.time.Seconds,org.joda.time.Seconds.minus(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,minus,(org.joda.time.Seconds) → org.joda.time.Seconds,org.joda.time.Seconds.minus(Seconds),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,multipliedBy,(int) → org.joda.time.Seconds,org.joda.time.Seconds.multipliedBy(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,dividedBy,(int) → org.joda.time.Seconds,org.joda.time.Seconds.dividedBy(int),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,negated,() → org.joda.time.Seconds,org.joda.time.Seconds.negated(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,isGreaterThan,(org.joda.time.Seconds) → boolean,org.joda.time.Seconds.isGreaterThan(Seconds),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,isLessThan,(org.joda.time.Seconds) → boolean,org.joda.time.Seconds.isLessThan(Seconds),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Seconds,toString,() → java.lang.String,org.joda.time.Seconds.toString(),0,13,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Seconds,<clinit>,() → void,org.joda.time.Seconds.<clinit>(),0,35,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime$Property,<init>,"(org.joda.time.DateTime, org.joda.time.DateTimeField) → void","org.joda.time.DateTime$Property.<init>(DateTime,DateTimeField)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.DateTime$Property.writeObject(ObjectOutputStream),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,readObject,(java.io.ObjectInputStream) → void,org.joda.time.DateTime$Property.readObject(ObjectInputStream),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.DateTime$Property.getField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,getMillis,() → long,org.joda.time.DateTime$Property.getMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,getChronology,() → org.joda.time.Chronology,org.joda.time.DateTime$Property.getChronology(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,getDateTime,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.getDateTime(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,addToCopy,(int) → org.joda.time.DateTime,org.joda.time.DateTime$Property.addToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,addToCopy,(long) → org.joda.time.DateTime,org.joda.time.DateTime$Property.addToCopy(long),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,addWrapFieldToCopy,(int) → org.joda.time.DateTime,org.joda.time.DateTime$Property.addWrapFieldToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,setCopy,(int) → org.joda.time.DateTime,org.joda.time.DateTime$Property.setCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.DateTime","org.joda.time.DateTime$Property.setCopy(String,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,setCopy,(java.lang.String) → org.joda.time.DateTime,org.joda.time.DateTime$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,withMaximumValue,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.withMaximumValue(),27,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,withMinimumValue,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.withMinimumValue(),27,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,roundFloorCopy,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.roundFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,roundCeilingCopy,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.roundCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,roundHalfFloorCopy,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.roundHalfFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,roundHalfCeilingCopy,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.roundHalfCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime$Property,roundHalfEvenCopy,() → org.joda.time.DateTime,org.joda.time.DateTime$Property.roundHalfEvenCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,now,() → org.joda.time.DateTime,org.joda.time.DateTime.now(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,now,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.DateTime.now(DateTimeZone),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,now,(org.joda.time.Chronology) → org.joda.time.DateTime,org.joda.time.DateTime.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,parse,(java.lang.String) → org.joda.time.DateTime,org.joda.time.DateTime.parse(String),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.DateTime","org.joda.time.DateTime.parse(String,DateTimeFormatter)",0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,() → void,org.joda.time.DateTime.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.DateTime.<init>(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,(org.joda.time.Chronology) → void,org.joda.time.DateTime.<init>(Chronology),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,(long) → void,org.joda.time.DateTime.<init>(long),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,"(long, org.joda.time.DateTimeZone) → void","org.joda.time.DateTime.<init>(long,DateTimeZone)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.DateTime.<init>(long,Chronology)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,(java.lang.Object) → void,org.joda.time.DateTime.<init>(Object),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,"(java.lang.Object, org.joda.time.DateTimeZone) → void","org.joda.time.DateTime.<init>(Object,DateTimeZone)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.DateTime.<init>(Object,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int) → void","org.joda.time.DateTime.<init>(int,int,int,int,int)",0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, org.joda.time.DateTimeZone) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,DateTimeZone)",0,11,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,Chronology)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, int) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,int)",0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, int, org.joda.time.DateTimeZone) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,int,DateTimeZone)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,int,Chronology)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, int, int) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,int,int)",0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, int, int, org.joda.time.DateTimeZone) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,int,int,DateTimeZone)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,<init>,"(int, int, int, int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.DateTime.<init>(int,int,int,int,int,int,int,Chronology)",0,11,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,toDateTime,() → org.joda.time.DateTime,org.joda.time.DateTime.toDateTime(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,toDateTimeISO,() → org.joda.time.DateTime,org.joda.time.DateTime.toDateTimeISO(),3,6,0.6666666666666666,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/DateTime,toDateTime,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.DateTime.toDateTime(DateTimeZone),13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,toDateTime,(org.joda.time.Chronology) → org.joda.time.DateTime,org.joda.time.DateTime.toDateTime(Chronology),13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withMillis,(long) → org.joda.time.DateTime,org.joda.time.DateTime.withMillis(long),2,12,0.8571428571428571,1,1,0.5,2,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,withChronology,(org.joda.time.Chronology) → org.joda.time.DateTime,org.joda.time.DateTime.withChronology(Chronology),16,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withZone,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.DateTime.withZone(DateTimeZone),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withZoneRetainFields,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.DateTime.withZoneRetainFields(DateTimeZone),0,27,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,withEarlierOffsetAtOverlap,() → org.joda.time.DateTime,org.joda.time.DateTime.withEarlierOffsetAtOverlap(),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withLaterOffsetAtOverlap,() → org.joda.time.DateTime,org.joda.time.DateTime.withLaterOffsetAtOverlap(),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withDate,"(int, int, int) → org.joda.time.DateTime","org.joda.time.DateTime.withDate(int,int,int)",22,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withDate,(org.joda.time.LocalDate) → org.joda.time.DateTime,org.joda.time.DateTime.withDate(LocalDate),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withTime,"(int, int, int, int) → org.joda.time.DateTime","org.joda.time.DateTime.withTime(int,int,int,int)",27,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withTime,(org.joda.time.LocalTime) → org.joda.time.DateTime,org.joda.time.DateTime.withTime(LocalTime),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withTimeAtStartOfDay,() → org.joda.time.DateTime,org.joda.time.DateTime.withTimeAtStartOfDay(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withFields,(org.joda.time.ReadablePartial) → org.joda.time.DateTime,org.joda.time.DateTime.withFields(ReadablePartial),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.DateTime","org.joda.time.DateTime.withField(DateTimeFieldType,int)",20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.DateTime","org.joda.time.DateTime.withFieldAdded(DurationFieldType,int)",24,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withDurationAdded,"(long, int) → org.joda.time.DateTime","org.joda.time.DateTime.withDurationAdded(long,int)",0,20,1.0,1,3,0.75,3,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,withDurationAdded,"(org.joda.time.ReadableDuration, int) → org.joda.time.DateTime","org.joda.time.DateTime.withDurationAdded(ReadableDuration,int)",0,12,1.0,1,3,0.75,3,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.DateTime","org.joda.time.DateTime.withPeriodAdded(ReadablePeriod,int)",18,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,plus,(long) → org.joda.time.DateTime,org.joda.time.DateTime.plus(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,plus,(org.joda.time.ReadableDuration) → org.joda.time.DateTime,org.joda.time.DateTime.plus(ReadableDuration),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,plus,(org.joda.time.ReadablePeriod) → org.joda.time.DateTime,org.joda.time.DateTime.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,plusYears,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusYears(int),2,14,0.875,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/DateTime,plusMonths,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusMonths(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,plusWeeks,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusWeeks(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,plusDays,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusDays(int),2,14,0.875,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/DateTime,plusHours,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusHours(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,plusMinutes,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusMinutes(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,plusSeconds,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusSeconds(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,plusMillis,(int) → org.joda.time.DateTime,org.joda.time.DateTime.plusMillis(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minus,(long) → org.joda.time.DateTime,org.joda.time.DateTime.minus(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,minus,(org.joda.time.ReadableDuration) → org.joda.time.DateTime,org.joda.time.DateTime.minus(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minus,(org.joda.time.ReadablePeriod) → org.joda.time.DateTime,org.joda.time.DateTime.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minusYears,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusYears(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,minusMonths,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusMonths(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,minusWeeks,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusWeeks(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minusDays,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusDays(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minusHours,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusHours(int),2,14,0.875,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/DateTime,minusMinutes,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusMinutes(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,minusSeconds,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusSeconds(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minusMillis,(int) → org.joda.time.DateTime,org.joda.time.DateTime.minusMillis(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,property,(org.joda.time.DateTimeFieldType) → org.joda.time.DateTime$Property,org.joda.time.DateTime.property(DateTimeFieldType),35,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,toDateMidnight,() → org.joda.time.DateMidnight,org.joda.time.DateTime.toDateMidnight(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,toYearMonthDay,() → org.joda.time.YearMonthDay,org.joda.time.DateTime.toYearMonthDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,toTimeOfDay,() → org.joda.time.TimeOfDay,org.joda.time.DateTime.toTimeOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,toLocalDateTime,() → org.joda.time.LocalDateTime,org.joda.time.DateTime.toLocalDateTime(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,toLocalDate,() → org.joda.time.LocalDate,org.joda.time.DateTime.toLocalDate(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTime,toLocalTime,() → org.joda.time.LocalTime,org.joda.time.DateTime.toLocalTime(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withEra,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withCenturyOfEra,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withCenturyOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withYearOfEra,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withYearOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withYearOfCentury,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withYearOfCentury(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withYear,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withWeekyear,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withMonthOfYear,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withMonthOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withWeekOfWeekyear,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withWeekOfWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withDayOfYear,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withDayOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withDayOfMonth,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withDayOfMonth(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withDayOfWeek,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withDayOfWeek(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withHourOfDay,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withHourOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withMinuteOfHour,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withMinuteOfHour(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withSecondOfMinute,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withSecondOfMinute(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withMillisOfSecond,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withMillisOfSecond(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,withMillisOfDay,(int) → org.joda.time.DateTime,org.joda.time.DateTime.withMillisOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,era,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.era(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,centuryOfEra,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.centuryOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,yearOfCentury,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.yearOfCentury(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,yearOfEra,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.yearOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,year,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.year(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,weekyear,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.weekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,monthOfYear,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.monthOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,weekOfWeekyear,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.weekOfWeekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,dayOfYear,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.dayOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,dayOfMonth,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.dayOfMonth(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,dayOfWeek,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.dayOfWeek(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,hourOfDay,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.hourOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minuteOfDay,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.minuteOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,minuteOfHour,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.minuteOfHour(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,secondOfDay,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.secondOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,secondOfMinute,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.secondOfMinute(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,millisOfDay,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.millisOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTime,millisOfSecond,() → org.joda.time.DateTime$Property,org.joda.time.DateTime.millisOfSecond(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,minutes,(int) → org.joda.time.Minutes,org.joda.time.Minutes.minutes(int),12,7,0.3684210526315789,6,1,0.14285714285714285,7,6,2,0.25,0,1,1.0
org/joda/time,org/joda/time/Minutes,minutesBetween,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Minutes","org.joda.time.Minutes.minutesBetween(ReadableInstant,ReadableInstant)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,minutesBetween,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Minutes","org.joda.time.Minutes.minutesBetween(ReadablePartial,ReadablePartial)",31,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,minutesIn,(org.joda.time.ReadableInterval) → org.joda.time.Minutes,org.joda.time.Minutes.minutesIn(ReadableInterval),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,standardMinutesIn,(org.joda.time.ReadablePeriod) → org.joda.time.Minutes,org.joda.time.Minutes.standardMinutesIn(ReadablePeriod),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,parseMinutes,(java.lang.String) → org.joda.time.Minutes,org.joda.time.Minutes.parseMinutes(String),12,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,<init>,(int) → void,org.joda.time.Minutes.<init>(int),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Minutes,readResolve,() → java.lang.Object,org.joda.time.Minutes.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,getFieldType,() → org.joda.time.DurationFieldType,org.joda.time.Minutes.getFieldType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.Minutes.getPeriodType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Minutes,toStandardWeeks,() → org.joda.time.Weeks,org.joda.time.Minutes.toStandardWeeks(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,toStandardDays,() → org.joda.time.Days,org.joda.time.Minutes.toStandardDays(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,toStandardHours,() → org.joda.time.Hours,org.joda.time.Minutes.toStandardHours(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,toStandardSeconds,() → org.joda.time.Seconds,org.joda.time.Minutes.toStandardSeconds(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,toStandardDuration,() → org.joda.time.Duration,org.joda.time.Minutes.toStandardDuration(),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,getMinutes,() → int,org.joda.time.Minutes.getMinutes(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,plus,(int) → org.joda.time.Minutes,org.joda.time.Minutes.plus(int),2,8,0.8,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/Minutes,plus,(org.joda.time.Minutes) → org.joda.time.Minutes,org.joda.time.Minutes.plus(Minutes),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,minus,(int) → org.joda.time.Minutes,org.joda.time.Minutes.minus(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Minutes,minus,(org.joda.time.Minutes) → org.joda.time.Minutes,org.joda.time.Minutes.minus(Minutes),0,9,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Minutes,multipliedBy,(int) → org.joda.time.Minutes,org.joda.time.Minutes.multipliedBy(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,dividedBy,(int) → org.joda.time.Minutes,org.joda.time.Minutes.dividedBy(int),0,11,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Minutes,negated,() → org.joda.time.Minutes,org.joda.time.Minutes.negated(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,isGreaterThan,(org.joda.time.Minutes) → boolean,org.joda.time.Minutes.isGreaterThan(Minutes),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,isLessThan,(org.joda.time.Minutes) → boolean,org.joda.time.Minutes.isLessThan(Minutes),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Minutes,toString,() → java.lang.String,org.joda.time.Minutes.toString(),0,13,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Minutes,<clinit>,() → void,org.joda.time.Minutes.<clinit>(),0,35,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,<init>,(java.lang.String) → void,org.joda.time.DateTimeFieldType.<init>(String),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,millisOfSecond,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.millisOfSecond(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,millisOfDay,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.millisOfDay(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,secondOfMinute,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.secondOfMinute(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,secondOfDay,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.secondOfDay(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,minuteOfHour,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.minuteOfHour(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,minuteOfDay,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.minuteOfDay(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,hourOfDay,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.hourOfDay(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,clockhourOfDay,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.clockhourOfDay(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,hourOfHalfday,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.hourOfHalfday(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,clockhourOfHalfday,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.clockhourOfHalfday(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,halfdayOfDay,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.halfdayOfDay(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,dayOfWeek,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.dayOfWeek(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,dayOfMonth,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.dayOfMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,dayOfYear,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.dayOfYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,weekOfWeekyear,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.weekOfWeekyear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,weekyear,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.weekyear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,weekyearOfCentury,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.weekyearOfCentury(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,monthOfYear,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.monthOfYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,year,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.year(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,yearOfEra,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.yearOfEra(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,yearOfCentury,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.yearOfCentury(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,centuryOfEra,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.centuryOfEra(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,era,() → org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType.era(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,getName,() → java.lang.String,org.joda.time.DateTimeFieldType.getName(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,isSupported,(org.joda.time.Chronology) → boolean,org.joda.time.DateTimeFieldType.isSupported(Chronology),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeFieldType,toString,() → java.lang.String,org.joda.time.DateTimeFieldType.toString(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeFieldType,<clinit>,() → void,org.joda.time.DateTimeFieldType.<clinit>(),0,185,1.0,0,0,coverage not available since no branches,1,0,46,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils$FixedMillisProvider,<init>,(long) → void,org.joda.time.DateTimeUtils$FixedMillisProvider.<init>(long),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils$FixedMillisProvider,getMillis,() → long,org.joda.time.DateTimeUtils$FixedMillisProvider.getMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,() → void,org.joda.time.Partial.<init>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,(org.joda.time.Chronology) → void,org.joda.time.Partial.<init>(Chronology),0,16,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,"(org.joda.time.DateTimeFieldType, int) → void","org.joda.time.Partial.<init>(DateTimeFieldType,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,"(org.joda.time.DateTimeFieldType, int, org.joda.time.Chronology) → void","org.joda.time.Partial.<init>(DateTimeFieldType,int,Chronology)",5,33,0.868421052631579,1,1,0.5,2,1,8,0.8888888888888888,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,"(org.joda.time.DateTimeFieldType[], int[]) → void","org.joda.time.Partial.<init>(DateTimeFieldType[],int[])",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,"(org.joda.time.DateTimeFieldType[], int[], org.joda.time.Chronology) → void","org.joda.time.Partial.<init>(DateTimeFieldType[],int[],Chronology)",247,97,0.2819767441860465,24,16,0.4,21,32,27,0.4576271186440678,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,(org.joda.time.ReadablePartial) → void,org.joda.time.Partial.<init>(ReadablePartial),48,0,0.0,4,0,0.0,3,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,<init>,"(org.joda.time.Partial, int[]) → void","org.joda.time.Partial.<init>(Partial,int[])",0,14,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,<init>,"(org.joda.time.Chronology, org.joda.time.DateTimeFieldType[], int[]) → void","org.joda.time.Partial.<init>(Chronology,DateTimeFieldType[],int[])",0,12,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,size,() → int,org.joda.time.Partial.size(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,getChronology,() → org.joda.time.Chronology,org.joda.time.Partial.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.Partial.getField(int,Chronology)",0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,getFieldType,(int) → org.joda.time.DateTimeFieldType,org.joda.time.Partial.getFieldType(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,getFieldTypes,() → org.joda.time.DateTimeFieldType[],org.joda.time.Partial.getFieldTypes(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,getValue,(int) → int,org.joda.time.Partial.getValue(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,getValues,() → int[],org.joda.time.Partial.getValues(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,withChronologyRetainFields,(org.joda.time.Chronology) → org.joda.time.Partial,org.joda.time.Partial.withChronologyRetainFields(Chronology),2,26,0.9285714285714286,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/Partial,with,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.Partial","org.joda.time.Partial.with(DateTimeFieldType,int)",181,0,0.0,22,0,0.0,12,39,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,without,(org.joda.time.DateTimeFieldType) → org.joda.time.Partial,org.joda.time.Partial.without(DateTimeFieldType),74,0,0.0,2,0,0.0,2,12,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.Partial","org.joda.time.Partial.withField(DateTimeFieldType,int)",29,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.Partial","org.joda.time.Partial.withFieldAdded(DurationFieldType,int)",26,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,withFieldAddWrapped,"(org.joda.time.DurationFieldType, int) → org.joda.time.Partial","org.joda.time.Partial.withFieldAddWrapped(DurationFieldType,int)",26,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.Partial","org.joda.time.Partial.withPeriodAdded(ReadablePeriod,int)",0,46,1.0,0,8,1.0,5,0,10,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,plus,(org.joda.time.ReadablePeriod) → org.joda.time.Partial,org.joda.time.Partial.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,minus,(org.joda.time.ReadablePeriod) → org.joda.time.Partial,org.joda.time.Partial.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,property,(org.joda.time.DateTimeFieldType) → org.joda.time.Partial$Property,org.joda.time.Partial.property(DateTimeFieldType),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,isMatch,(org.joda.time.ReadableInstant) → boolean,org.joda.time.Partial.isMatch(ReadableInstant),2,32,0.9411764705882353,1,3,0.75,3,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,isMatch,(org.joda.time.ReadablePartial) → boolean,org.joda.time.Partial.isMatch(ReadablePartial),33,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,getFormatter,() → org.joda.time.format.DateTimeFormatter,org.joda.time.Partial.getFormatter(),1,44,0.9777777777777777,2,4,0.6666666666666666,4,1,12,0.9230769230769231,0,1,1.0
org/joda/time,org/joda/time/Partial,toString,() → java.lang.String,org.joda.time.Partial.toString(),3,26,0.896551724137931,2,4,0.6666666666666666,4,1,9,0.9,0,1,1.0
org/joda/time,org/joda/time/Partial,toStringList,() → java.lang.String,org.joda.time.Partial.toStringList(),0,55,1.0,0,4,1.0,3,0,11,1.0,0,1,1.0
org/joda/time,org/joda/time/Partial,toString,(java.lang.String) → java.lang.String,org.joda.time.Partial.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.Partial.toString(String,Locale)",12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeUtils$SystemMillisProvider,<init>,() → void,org.joda.time.DateTimeUtils$SystemMillisProvider.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeUtils$SystemMillisProvider,getMillis,() → long,org.joda.time.DateTimeUtils$SystemMillisProvider.getMillis(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDateTime$Property,<init>,"(org.joda.time.LocalDateTime, org.joda.time.DateTimeField) → void","org.joda.time.LocalDateTime$Property.<init>(LocalDateTime,DateTimeField)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.LocalDateTime$Property.writeObject(ObjectOutputStream),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,readObject,(java.io.ObjectInputStream) → void,org.joda.time.LocalDateTime$Property.readObject(ObjectInputStream),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.LocalDateTime$Property.getField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,getMillis,() → long,org.joda.time.LocalDateTime$Property.getMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,getChronology,() → org.joda.time.Chronology,org.joda.time.LocalDateTime$Property.getChronology(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,getLocalDateTime,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.getLocalDateTime(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,addToCopy,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.addToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,addToCopy,(long) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.addToCopy(long),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,addWrapFieldToCopy,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.addWrapFieldToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,setCopy,(int) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.setCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.LocalDateTime","org.joda.time.LocalDateTime$Property.setCopy(String,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,setCopy,(java.lang.String) → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,withMaximumValue,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.withMaximumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,withMinimumValue,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.withMinimumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,roundFloorCopy,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.roundFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,roundCeilingCopy,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.roundCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,roundHalfFloorCopy,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.roundHalfFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,roundHalfCeilingCopy,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.roundHalfCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDateTime$Property,roundHalfEvenCopy,() → org.joda.time.LocalDateTime,org.joda.time.LocalDateTime$Property.roundHalfEvenCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit$1,<init>,() → void,org.joda.time.DateTimeZone$LazyInit$1.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit$1,getZone,() → org.joda.time.DateTimeZone,org.joda.time.DateTimeZone$LazyInit$1.getZone(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit$1,withUTC,() → org.joda.time.Chronology,org.joda.time.DateTimeZone$LazyInit$1.withUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit$1,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.DateTimeZone$LazyInit$1.withZone(DateTimeZone),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit$1,toString,() → java.lang.String,org.joda.time.DateTimeZone$LazyInit$1.toString(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,<init>,"(org.joda.time.Partial, int) → void","org.joda.time.Partial$Property.<init>(Partial,int)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.Partial$Property.getField(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,getReadablePartial,() → org.joda.time.ReadablePartial,org.joda.time.Partial$Property.getReadablePartial(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,getPartial,() → org.joda.time.Partial,org.joda.time.Partial$Property.getPartial(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,get,() → int,org.joda.time.Partial$Property.get(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,addToCopy,(int) → org.joda.time.Partial,org.joda.time.Partial$Property.addToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,addWrapFieldToCopy,(int) → org.joda.time.Partial,org.joda.time.Partial$Property.addWrapFieldToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,setCopy,(int) → org.joda.time.Partial,org.joda.time.Partial$Property.setCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.Partial","org.joda.time.Partial$Property.setCopy(String,Locale)",22,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,setCopy,(java.lang.String) → org.joda.time.Partial,org.joda.time.Partial$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,withMaximumValue,() → org.joda.time.Partial,org.joda.time.Partial$Property.withMaximumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Partial$Property,withMinimumValue,() → org.joda.time.Partial,org.joda.time.Partial$Property.withMinimumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeField,<init>,() → void,org.joda.time.DateTimeField.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeField,setExtended,"(long, int) → long","org.joda.time.DateTimeField.setExtended(long,int)",0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonthDay,fromCalendarFields,(java.util.Calendar) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.fromCalendarFields(Calendar),22,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,fromDateFields,(java.util.Date) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.fromDateFields(Date),21,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,() → void,org.joda.time.YearMonthDay.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.YearMonthDay.<init>(DateTimeZone),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,(org.joda.time.Chronology) → void,org.joda.time.YearMonthDay.<init>(Chronology),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,(long) → void,org.joda.time.YearMonthDay.<init>(long),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.YearMonthDay.<init>(long,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,(java.lang.Object) → void,org.joda.time.YearMonthDay.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.YearMonthDay.<init>(Object,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,"(int, int, int) → void","org.joda.time.YearMonthDay.<init>(int,int,int)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,"(int, int, int, org.joda.time.Chronology) → void","org.joda.time.YearMonthDay.<init>(int,int,int,Chronology)",18,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,"(org.joda.time.YearMonthDay, int[]) → void","org.joda.time.YearMonthDay.<init>(YearMonthDay,int[])",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<init>,"(org.joda.time.YearMonthDay, org.joda.time.Chronology) → void","org.joda.time.YearMonthDay.<init>(YearMonthDay,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,size,() → int,org.joda.time.YearMonthDay.size(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.YearMonthDay.getField(int,Chronology)",23,0,0.0,4,0,0.0,4,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,getFieldType,(int) → org.joda.time.DateTimeFieldType,org.joda.time.YearMonthDay.getFieldType(int),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,getFieldTypes,() → org.joda.time.DateTimeFieldType[],org.joda.time.YearMonthDay.getFieldTypes(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,withChronologyRetainFields,(org.joda.time.Chronology) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.withChronologyRetainFields(Chronology),25,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.YearMonthDay","org.joda.time.YearMonthDay.withField(DateTimeFieldType,int)",29,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.YearMonthDay","org.joda.time.YearMonthDay.withFieldAdded(DurationFieldType,int)",26,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.YearMonthDay","org.joda.time.YearMonthDay.withPeriodAdded(ReadablePeriod,int)",46,0,0.0,8,0,0.0,5,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,plus,(org.joda.time.ReadablePeriod) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,plusYears,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.plusYears(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,plusMonths,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.plusMonths(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,plusDays,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.plusDays(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,minus,(org.joda.time.ReadablePeriod) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,minusYears,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.minusYears(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,minusMonths,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.minusMonths(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,minusDays,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.minusDays(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,property,(org.joda.time.DateTimeFieldType) → org.joda.time.YearMonthDay$Property,org.joda.time.YearMonthDay.property(DateTimeFieldType),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toLocalDate,() → org.joda.time.LocalDate,org.joda.time.YearMonthDay.toLocalDate(),12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateTimeAtMidnight,() → org.joda.time.DateTime,org.joda.time.YearMonthDay.toDateTimeAtMidnight(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateTimeAtMidnight,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.YearMonthDay.toDateTimeAtMidnight(DateTimeZone),20,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateTimeAtCurrentTime,() → org.joda.time.DateTime,org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateTimeAtCurrentTime,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.YearMonthDay.toDateTimeAtCurrentTime(DateTimeZone),18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateMidnight,() → org.joda.time.DateMidnight,org.joda.time.YearMonthDay.toDateMidnight(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateMidnight,(org.joda.time.DateTimeZone) → org.joda.time.DateMidnight,org.joda.time.YearMonthDay.toDateMidnight(DateTimeZone),16,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateTime,(org.joda.time.TimeOfDay) → org.joda.time.DateTime,org.joda.time.YearMonthDay.toDateTime(TimeOfDay),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toDateTime,"(org.joda.time.TimeOfDay, org.joda.time.DateTimeZone) → org.joda.time.DateTime","org.joda.time.YearMonthDay.toDateTime(TimeOfDay,DateTimeZone)",25,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toInterval,() → org.joda.time.Interval,org.joda.time.YearMonthDay.toInterval(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toInterval,(org.joda.time.DateTimeZone) → org.joda.time.Interval,org.joda.time.YearMonthDay.toInterval(DateTimeZone),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,getYear,() → int,org.joda.time.YearMonthDay.getYear(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,getMonthOfYear,() → int,org.joda.time.YearMonthDay.getMonthOfYear(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,getDayOfMonth,() → int,org.joda.time.YearMonthDay.getDayOfMonth(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,withYear,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.withYear(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,withMonthOfYear,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.withMonthOfYear(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,withDayOfMonth,(int) → org.joda.time.YearMonthDay,org.joda.time.YearMonthDay.withDayOfMonth(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,year,() → org.joda.time.YearMonthDay$Property,org.joda.time.YearMonthDay.year(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,monthOfYear,() → org.joda.time.YearMonthDay$Property,org.joda.time.YearMonthDay.monthOfYear(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,dayOfMonth,() → org.joda.time.YearMonthDay$Property,org.joda.time.YearMonthDay.dayOfMonth(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,toString,() → java.lang.String,org.joda.time.YearMonthDay.toString(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonthDay,<clinit>,() → void,org.joda.time.YearMonthDay.<clinit>(),16,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit,<init>,() → void,org.joda.time.DateTimeZone$LazyInit.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit,buildFormatter,() → org.joda.time.format.DateTimeFormatter,org.joda.time.DateTimeZone$LazyInit.buildFormatter(),0,16,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit,buildMap,() → java.util.Map,org.joda.time.DateTimeZone$LazyInit.buildMap(),0,172,1.0,0,0,coverage not available since no branches,1,0,35,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone$LazyInit,<clinit>,() → void,org.joda.time.DateTimeZone$LazyInit.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeConstants,<init>,() → void,org.joda.time.DateTimeConstants.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,<init>,"(org.joda.time.TimeOfDay, int) → void","org.joda.time.TimeOfDay$Property.<init>(TimeOfDay,int)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.TimeOfDay$Property.getField(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,getReadablePartial,() → org.joda.time.ReadablePartial,org.joda.time.TimeOfDay$Property.getReadablePartial(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,getTimeOfDay,() → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.getTimeOfDay(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,get,() → int,org.joda.time.TimeOfDay$Property.get(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,addToCopy,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.addToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,addNoWrapToCopy,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.addNoWrapToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,addWrapFieldToCopy,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.addWrapFieldToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,setCopy,(int) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.setCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.TimeOfDay","org.joda.time.TimeOfDay$Property.setCopy(String,Locale)",22,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,setCopy,(java.lang.String) → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,withMaximumValue,() → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.withMaximumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/TimeOfDay$Property,withMinimumValue,() → org.joda.time.TimeOfDay,org.joda.time.TimeOfDay$Property.withMinimumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,parse,(java.lang.String) → org.joda.time.MutableInterval,org.joda.time.MutableInterval.parse(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,<init>,() → void,org.joda.time.MutableInterval.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(long, long) → void","org.joda.time.MutableInterval.<init>(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(long, long, org.joda.time.Chronology) → void","org.joda.time.MutableInterval.<init>(long,long,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.MutableInterval.<init>(ReadableInstant,ReadableInstant)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration) → void","org.joda.time.MutableInterval.<init>(ReadableInstant,ReadableDuration)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant) → void","org.joda.time.MutableInterval.<init>(ReadableDuration,ReadableInstant)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadablePeriod) → void","org.joda.time.MutableInterval.<init>(ReadableInstant,ReadablePeriod)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(org.joda.time.ReadablePeriod, org.joda.time.ReadableInstant) → void","org.joda.time.MutableInterval.<init>(ReadablePeriod,ReadableInstant)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,<init>,(java.lang.Object) → void,org.joda.time.MutableInterval.<init>(Object),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.MutableInterval.<init>(Object,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setInterval,"(long, long) → void","org.joda.time.MutableInterval.setInterval(long,long)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,setInterval,(org.joda.time.ReadableInterval) → void,org.joda.time.MutableInterval.setInterval(ReadableInterval),5,17,0.7727272727272727,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,setInterval,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.MutableInterval.setInterval(ReadableInstant,ReadableInstant)",26,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setChronology,(org.joda.time.Chronology) → void,org.joda.time.MutableInterval.setChronology(Chronology),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,setStartMillis,(long) → void,org.joda.time.MutableInterval.setStartMillis(long),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,setStart,(org.joda.time.ReadableInstant) → void,org.joda.time.MutableInterval.setStart(ReadableInstant),11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setEndMillis,(long) → void,org.joda.time.MutableInterval.setEndMillis(long),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,setEnd,(org.joda.time.ReadableInstant) → void,org.joda.time.MutableInterval.setEnd(ReadableInstant),11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setDurationAfterStart,(long) → void,org.joda.time.MutableInterval.setDurationAfterStart(long),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setDurationBeforeEnd,(long) → void,org.joda.time.MutableInterval.setDurationBeforeEnd(long),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setDurationAfterStart,(org.joda.time.ReadableDuration) → void,org.joda.time.MutableInterval.setDurationAfterStart(ReadableDuration),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setDurationBeforeEnd,(org.joda.time.ReadableDuration) → void,org.joda.time.MutableInterval.setDurationBeforeEnd(ReadableDuration),11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setPeriodAfterStart,(org.joda.time.ReadablePeriod) → void,org.joda.time.MutableInterval.setPeriodAfterStart(ReadablePeriod),17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,setPeriodBeforeEnd,(org.joda.time.ReadablePeriod) → void,org.joda.time.MutableInterval.setPeriodBeforeEnd(ReadablePeriod),5,12,0.7058823529411765,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/MutableInterval,copy,() → org.joda.time.MutableInterval,org.joda.time.MutableInterval.copy(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableInterval,clone,() → java.lang.Object,org.joda.time.MutableInterval.clone(),9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Chronology,<init>,() → void,org.joda.time.Chronology.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/JodaTimePermission,<init>,(java.lang.String) → void,org.joda.time.JodaTimePermission.<init>(String),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Months,months,(int) → org.joda.time.Months,org.joda.time.Months.months(int),29,8,0.21621621621621623,13,3,0.1875,16,13,4,0.23529411764705882,0,1,1.0
org/joda/time,org/joda/time/Months,monthsBetween,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Months","org.joda.time.Months.monthsBetween(ReadableInstant,ReadableInstant)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,monthsBetween,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Months","org.joda.time.Months.monthsBetween(ReadablePartial,ReadablePartial)",8,23,0.7419354838709677,2,2,0.5,3,2,5,0.7142857142857143,0,1,1.0
org/joda/time,org/joda/time/Months,monthsIn,(org.joda.time.ReadableInterval) → org.joda.time.Months,org.joda.time.Months.monthsIn(ReadableInterval),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,parseMonths,(java.lang.String) → org.joda.time.Months,org.joda.time.Months.parseMonths(String),0,12,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/Months,<init>,(int) → void,org.joda.time.Months.<init>(int),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Months,readResolve,() → java.lang.Object,org.joda.time.Months.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,getFieldType,() → org.joda.time.DurationFieldType,org.joda.time.Months.getFieldType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.Months.getPeriodType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,getMonths,() → int,org.joda.time.Months.getMonths(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Months,plus,(int) → org.joda.time.Months,org.joda.time.Months.plus(int),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,plus,(org.joda.time.Months) → org.joda.time.Months,org.joda.time.Months.plus(Months),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,minus,(int) → org.joda.time.Months,org.joda.time.Months.minus(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,minus,(org.joda.time.Months) → org.joda.time.Months,org.joda.time.Months.minus(Months),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,multipliedBy,(int) → org.joda.time.Months,org.joda.time.Months.multipliedBy(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,dividedBy,(int) → org.joda.time.Months,org.joda.time.Months.dividedBy(int),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,negated,() → org.joda.time.Months,org.joda.time.Months.negated(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,isGreaterThan,(org.joda.time.Months) → boolean,org.joda.time.Months.isGreaterThan(Months),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,isLessThan,(org.joda.time.Months) → boolean,org.joda.time.Months.isLessThan(Months),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,toString,() → java.lang.String,org.joda.time.Months.toString(),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Months,<clinit>,() → void,org.joda.time.Months.<clinit>(),0,80,1.0,0,0,coverage not available since no branches,1,0,16,1.0,0,1,1.0
org/joda/time,org/joda/time/Interval,parse,(java.lang.String) → org.joda.time.Interval,org.joda.time.Interval.parse(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,parseWithOffset,(java.lang.String) → org.joda.time.Interval,org.joda.time.Interval.parseWithOffset(String),143,0,0.0,18,0,0.0,10,27,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,<init>,"(long, long) → void","org.joda.time.Interval.<init>(long,long)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Interval,<init>,"(long, long, org.joda.time.DateTimeZone) → void","org.joda.time.Interval.<init>(long,long,DateTimeZone)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Interval,<init>,"(long, long, org.joda.time.Chronology) → void","org.joda.time.Interval.<init>(long,long,Chronology)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Interval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.Interval.<init>(ReadableInstant,ReadableInstant)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Interval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration) → void","org.joda.time.Interval.<init>(ReadableInstant,ReadableDuration)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Interval,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant) → void","org.joda.time.Interval.<init>(ReadableDuration,ReadableInstant)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadablePeriod) → void","org.joda.time.Interval.<init>(ReadableInstant,ReadablePeriod)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,<init>,"(org.joda.time.ReadablePeriod, org.joda.time.ReadableInstant) → void","org.joda.time.Interval.<init>(ReadablePeriod,ReadableInstant)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,<init>,(java.lang.Object) → void,org.joda.time.Interval.<init>(Object),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.Interval.<init>(Object,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,toInterval,() → org.joda.time.Interval,org.joda.time.Interval.toInterval(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,overlap,(org.joda.time.ReadableInterval) → org.joda.time.Interval,org.joda.time.Interval.overlap(ReadableInterval),20,9,0.3103448275862069,1,1,0.5,2,3,3,0.5,0,1,1.0
org/joda/time,org/joda/time/Interval,gap,(org.joda.time.ReadableInterval) → org.joda.time.Interval,org.joda.time.Interval.gap(ReadableInterval),41,0,0.0,4,0,0.0,3,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,abuts,(org.joda.time.ReadableInterval) → boolean,org.joda.time.Interval.abuts(ReadableInterval),34,0,0.0,10,0,0.0,6,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,withChronology,(org.joda.time.Chronology) → org.joda.time.Interval,org.joda.time.Interval.withChronology(Chronology),15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,withStartMillis,(long) → org.joda.time.Interval,org.joda.time.Interval.withStartMillis(long),2,14,0.875,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/Interval,withStart,(org.joda.time.ReadableInstant) → org.joda.time.Interval,org.joda.time.Interval.withStart(ReadableInstant),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,withEndMillis,(long) → org.joda.time.Interval,org.joda.time.Interval.withEndMillis(long),16,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,withEnd,(org.joda.time.ReadableInstant) → org.joda.time.Interval,org.joda.time.Interval.withEnd(ReadableInstant),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,withDurationAfterStart,(org.joda.time.ReadableDuration) → org.joda.time.Interval,org.joda.time.Interval.withDurationAfterStart(ReadableDuration),19,10,0.3448275862068966,1,1,0.5,2,4,3,0.42857142857142855,0,1,1.0
org/joda/time,org/joda/time/Interval,withDurationBeforeEnd,(org.joda.time.ReadableDuration) → org.joda.time.Interval,org.joda.time.Interval.withDurationBeforeEnd(ReadableDuration),2,27,0.9310344827586207,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/Interval,withPeriodAfterStart,(org.joda.time.ReadablePeriod) → org.joda.time.Interval,org.joda.time.Interval.withPeriodAfterStart(ReadablePeriod),25,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Interval,withPeriodBeforeEnd,(org.joda.time.ReadablePeriod) → org.joda.time.Interval,org.joda.time.Interval.withPeriodBeforeEnd(ReadablePeriod),25,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,hours,(int) → org.joda.time.Hours,org.joda.time.Hours.hours(int),14,15,0.5172413793103449,7,5,0.4166666666666667,12,7,6,0.46153846153846156,0,1,1.0
org/joda/time,org/joda/time/Hours,hoursBetween,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Hours","org.joda.time.Hours.hoursBetween(ReadableInstant,ReadableInstant)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,hoursBetween,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Hours","org.joda.time.Hours.hoursBetween(ReadablePartial,ReadablePartial)",31,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,hoursIn,(org.joda.time.ReadableInterval) → org.joda.time.Hours,org.joda.time.Hours.hoursIn(ReadableInterval),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,standardHoursIn,(org.joda.time.ReadablePeriod) → org.joda.time.Hours,org.joda.time.Hours.standardHoursIn(ReadablePeriod),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,parseHours,(java.lang.String) → org.joda.time.Hours,org.joda.time.Hours.parseHours(String),0,12,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/Hours,<init>,(int) → void,org.joda.time.Hours.<init>(int),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Hours,readResolve,() → java.lang.Object,org.joda.time.Hours.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,getFieldType,() → org.joda.time.DurationFieldType,org.joda.time.Hours.getFieldType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.Hours.getPeriodType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Hours,toStandardWeeks,() → org.joda.time.Weeks,org.joda.time.Hours.toStandardWeeks(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,toStandardDays,() → org.joda.time.Days,org.joda.time.Hours.toStandardDays(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,toStandardMinutes,() → org.joda.time.Minutes,org.joda.time.Hours.toStandardMinutes(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,toStandardSeconds,() → org.joda.time.Seconds,org.joda.time.Hours.toStandardSeconds(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,toStandardDuration,() → org.joda.time.Duration,org.joda.time.Hours.toStandardDuration(),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,getHours,() → int,org.joda.time.Hours.getHours(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,plus,(int) → org.joda.time.Hours,org.joda.time.Hours.plus(int),0,10,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Hours,plus,(org.joda.time.Hours) → org.joda.time.Hours,org.joda.time.Hours.plus(Hours),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,minus,(int) → org.joda.time.Hours,org.joda.time.Hours.minus(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Hours,minus,(org.joda.time.Hours) → org.joda.time.Hours,org.joda.time.Hours.minus(Hours),0,9,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Hours,multipliedBy,(int) → org.joda.time.Hours,org.joda.time.Hours.multipliedBy(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,dividedBy,(int) → org.joda.time.Hours,org.joda.time.Hours.dividedBy(int),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,negated,() → org.joda.time.Hours,org.joda.time.Hours.negated(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,isGreaterThan,(org.joda.time.Hours) → boolean,org.joda.time.Hours.isGreaterThan(Hours),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,isLessThan,(org.joda.time.Hours) → boolean,org.joda.time.Hours.isLessThan(Hours),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,toString,() → java.lang.String,org.joda.time.Hours.toString(),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Hours,<clinit>,() → void,org.joda.time.Hours.<clinit>(),0,60,1.0,0,0,coverage not available since no branches,1,0,12,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,now,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight.now(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,now,(org.joda.time.DateTimeZone) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.now(DateTimeZone),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,now,(org.joda.time.Chronology) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,parse,(java.lang.String) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.parse(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.DateMidnight","org.joda.time.DateMidnight.parse(String,DateTimeFormatter)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,<init>,() → void,org.joda.time.DateMidnight.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.DateMidnight.<init>(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,(org.joda.time.Chronology) → void,org.joda.time.DateMidnight.<init>(Chronology),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,(long) → void,org.joda.time.DateMidnight.<init>(long),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,<init>,"(long, org.joda.time.DateTimeZone) → void","org.joda.time.DateMidnight.<init>(long,DateTimeZone)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.DateMidnight.<init>(long,Chronology)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,(java.lang.Object) → void,org.joda.time.DateMidnight.<init>(Object),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,"(java.lang.Object, org.joda.time.DateTimeZone) → void","org.joda.time.DateMidnight.<init>(Object,DateTimeZone)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.DateMidnight.<init>(Object,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,<init>,"(int, int, int) → void","org.joda.time.DateMidnight.<init>(int,int,int)",0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,"(int, int, int, org.joda.time.DateTimeZone) → void","org.joda.time.DateMidnight.<init>(int,int,int,DateTimeZone)",0,11,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,<init>,"(int, int, int, org.joda.time.Chronology) → void","org.joda.time.DateMidnight.<init>(int,int,int,Chronology)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,checkInstant,"(long, org.joda.time.Chronology) → long","org.joda.time.DateMidnight.checkInstant(long,Chronology)",0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,withMillis,(long) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withMillis(long),0,21,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,withChronology,(org.joda.time.Chronology) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withChronology(Chronology),13,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withZoneRetainFields,(org.joda.time.DateTimeZone) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withZoneRetainFields(DateTimeZone),27,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withFields,(org.joda.time.ReadablePartial) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withFields(ReadablePartial),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.DateMidnight","org.joda.time.DateMidnight.withField(DateTimeFieldType,int)",20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.DateMidnight","org.joda.time.DateMidnight.withFieldAdded(DurationFieldType,int)",24,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withDurationAdded,"(long, int) → org.joda.time.DateMidnight","org.joda.time.DateMidnight.withDurationAdded(long,int)",2,18,0.9,2,2,0.5,3,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,withDurationAdded,"(org.joda.time.ReadableDuration, int) → org.joda.time.DateMidnight","org.joda.time.DateMidnight.withDurationAdded(ReadableDuration,int)",0,12,1.0,1,3,0.75,3,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.DateMidnight","org.joda.time.DateMidnight.withPeriodAdded(ReadablePeriod,int)",18,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,plus,(long) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.plus(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,plus,(org.joda.time.ReadableDuration) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.plus(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,plus,(org.joda.time.ReadablePeriod) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,plusYears,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.plusYears(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,plusMonths,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.plusMonths(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,plusWeeks,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.plusWeeks(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,plusDays,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.plusDays(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,minus,(long) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.minus(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,minus,(org.joda.time.ReadableDuration) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.minus(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,minus,(org.joda.time.ReadablePeriod) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,minusYears,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.minusYears(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,minusMonths,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.minusMonths(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,minusWeeks,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.minusWeeks(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,minusDays,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.minusDays(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight,property,(org.joda.time.DateTimeFieldType) → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.property(DateTimeFieldType),35,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,toYearMonthDay,() → org.joda.time.YearMonthDay,org.joda.time.DateMidnight.toYearMonthDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,toLocalDate,() → org.joda.time.LocalDate,org.joda.time.DateMidnight.toLocalDate(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,toInterval,() → org.joda.time.Interval,org.joda.time.DateMidnight.toInterval(),20,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withEra,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withCenturyOfEra,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withCenturyOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withYearOfEra,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withYearOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withYearOfCentury,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withYearOfCentury(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withYear,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withWeekyear,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withMonthOfYear,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withMonthOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withWeekOfWeekyear,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withWeekOfWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withDayOfYear,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withDayOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withDayOfMonth,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withDayOfMonth(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,withDayOfWeek,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight.withDayOfWeek(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,era,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.era(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,centuryOfEra,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.centuryOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,yearOfCentury,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.yearOfCentury(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,yearOfEra,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.yearOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,year,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.year(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,weekyear,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.weekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,monthOfYear,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.monthOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,weekOfWeekyear,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.weekOfWeekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,dayOfYear,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.dayOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,dayOfMonth,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.dayOfMonth(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight,dayOfWeek,() → org.joda.time.DateMidnight$Property,org.joda.time.DateMidnight.dayOfWeek(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,<init>,"(org.joda.time.YearMonth, int) → void","org.joda.time.YearMonth$Property.<init>(YearMonth,int)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.YearMonth$Property.getField(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,getReadablePartial,() → org.joda.time.ReadablePartial,org.joda.time.YearMonth$Property.getReadablePartial(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,getYearMonth,() → org.joda.time.YearMonth,org.joda.time.YearMonth$Property.getYearMonth(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,get,() → int,org.joda.time.YearMonth$Property.get(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,addToCopy,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth$Property.addToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,addWrapFieldToCopy,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth$Property.addWrapFieldToCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,setCopy,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth$Property.setCopy(int),21,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.YearMonth","org.joda.time.YearMonth$Property.setCopy(String,Locale)",22,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth$Property,setCopy,(java.lang.String) → org.joda.time.YearMonth,org.joda.time.YearMonth$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalInstantException,<init>,(java.lang.String) → void,org.joda.time.IllegalInstantException.<init>(String),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/IllegalInstantException,<init>,"(long, java.lang.String) → void","org.joda.time.IllegalInstantException.<init>(long,String)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalInstantException,createMessage,"(long, java.lang.String) → java.lang.String","org.joda.time.IllegalInstantException.createMessage(long,String)",34,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalInstantException,isIllegalInstant,(java.lang.Throwable) → boolean,org.joda.time.IllegalInstantException.isIllegalInstant(Throwable),0,18,1.0,1,5,0.8333333333333334,4,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/DateMidnight$Property,<init>,"(org.joda.time.DateMidnight, org.joda.time.DateTimeField) → void","org.joda.time.DateMidnight$Property.<init>(DateMidnight,DateTimeField)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.DateMidnight$Property.writeObject(ObjectOutputStream),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,readObject,(java.io.ObjectInputStream) → void,org.joda.time.DateMidnight$Property.readObject(ObjectInputStream),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.DateMidnight$Property.getField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,getMillis,() → long,org.joda.time.DateMidnight$Property.getMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,getChronology,() → org.joda.time.Chronology,org.joda.time.DateMidnight$Property.getChronology(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,getDateMidnight,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.getDateMidnight(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,addToCopy,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.addToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,addToCopy,(long) → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.addToCopy(long),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,addWrapFieldToCopy,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.addWrapFieldToCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,setCopy,(int) → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.setCopy(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,setCopy,"(java.lang.String, java.util.Locale) → org.joda.time.DateMidnight","org.joda.time.DateMidnight$Property.setCopy(String,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,setCopy,(java.lang.String) → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.setCopy(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,withMaximumValue,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.withMaximumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,withMinimumValue,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.withMinimumValue(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,roundFloorCopy,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.roundFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,roundCeilingCopy,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.roundCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,roundHalfFloorCopy,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.roundHalfFloorCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,roundHalfCeilingCopy,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.roundHalfCeilingCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateMidnight$Property,roundHalfEvenCopy,() → org.joda.time.DateMidnight,org.joda.time.DateMidnight$Property.roundHalfEvenCopy(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,now,() → org.joda.time.LocalDate,org.joda.time.LocalDate.now(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,now,(org.joda.time.DateTimeZone) → org.joda.time.LocalDate,org.joda.time.LocalDate.now(DateTimeZone),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,now,(org.joda.time.Chronology) → org.joda.time.LocalDate,org.joda.time.LocalDate.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,parse,(java.lang.String) → org.joda.time.LocalDate,org.joda.time.LocalDate.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.LocalDate","org.joda.time.LocalDate.parse(String,DateTimeFormatter)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,fromCalendarFields,(java.util.Calendar) → org.joda.time.LocalDate,org.joda.time.LocalDate.fromCalendarFields(Calendar),3,32,0.9142857142857143,1,3,0.75,3,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,fromDateFields,(java.util.Date) → org.joda.time.LocalDate,org.joda.time.LocalDate.fromDateFields(Date),36,0,0.0,4,0,0.0,3,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,<init>,() → void,org.joda.time.LocalDate.<init>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.LocalDate.<init>(DateTimeZone),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,<init>,(org.joda.time.Chronology) → void,org.joda.time.LocalDate.<init>(Chronology),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,<init>,(long) → void,org.joda.time.LocalDate.<init>(long),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,<init>,"(long, org.joda.time.DateTimeZone) → void","org.joda.time.LocalDate.<init>(long,DateTimeZone)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.LocalDate.<init>(long,Chronology)",0,24,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,<init>,(java.lang.Object) → void,org.joda.time.LocalDate.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,<init>,"(java.lang.Object, org.joda.time.DateTimeZone) → void","org.joda.time.LocalDate.<init>(Object,DateTimeZone)",41,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.LocalDate.<init>(Object,Chronology)",41,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,<init>,"(int, int, int) → void","org.joda.time.LocalDate.<init>(int,int,int)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,<init>,"(int, int, int, org.joda.time.Chronology) → void","org.joda.time.LocalDate.<init>(int,int,int,Chronology)",0,20,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,readResolve,() → java.lang.Object,org.joda.time.LocalDate.readResolve(),16,11,0.4074074074074074,2,2,0.5,3,2,3,0.6,0,1,1.0
org/joda/time,org/joda/time/LocalDate,size,() → int,org.joda.time.LocalDate.size(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.LocalDate.getField(int,Chronology)",12,11,0.4782608695652174,1,3,0.75,4,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getValue,(int) → int,org.joda.time.LocalDate.getValue(int),12,23,0.6571428571428571,1,3,0.75,4,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/LocalDate,get,(org.joda.time.DateTimeFieldType) → int,org.joda.time.LocalDate.get(DateTimeFieldType),14,19,0.5757575757575758,1,3,0.75,3,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/LocalDate,isSupported,(org.joda.time.DateTimeFieldType) → boolean,org.joda.time.LocalDate.isSupported(DateTimeFieldType),0,30,1.0,1,5,0.8333333333333334,4,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,isSupported,(org.joda.time.DurationFieldType) → boolean,org.joda.time.LocalDate.isSupported(DurationFieldType),2,24,0.9230769230769231,2,4,0.6666666666666666,4,1,6,0.8571428571428571,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getLocalMillis,() → long,org.joda.time.LocalDate.getLocalMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getChronology,() → org.joda.time.Chronology,org.joda.time.LocalDate.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,equals,(java.lang.Object) → boolean,org.joda.time.LocalDate.equals(Object),0,31,1.0,1,7,0.875,5,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,hashCode,() → int,org.joda.time.LocalDate.hashCode(),13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,compareTo,(org.joda.time.ReadablePartial) → int,org.joda.time.LocalDate.compareTo(ReadablePartial),39,0,0.0,10,0,0.0,6,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTimeAtStartOfDay,() → org.joda.time.DateTime,org.joda.time.LocalDate.toDateTimeAtStartOfDay(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTimeAtStartOfDay,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.LocalDate.toDateTimeAtStartOfDay(DateTimeZone),30,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTimeAtMidnight,() → org.joda.time.DateTime,org.joda.time.LocalDate.toDateTimeAtMidnight(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTimeAtMidnight,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.LocalDate.toDateTimeAtMidnight(DateTimeZone),23,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTimeAtCurrentTime,() → org.joda.time.DateTime,org.joda.time.LocalDate.toDateTimeAtCurrentTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTimeAtCurrentTime,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.LocalDate.toDateTimeAtCurrentTime(DateTimeZone),21,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateMidnight,() → org.joda.time.DateMidnight,org.joda.time.LocalDate.toDateMidnight(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateMidnight,(org.joda.time.DateTimeZone) → org.joda.time.DateMidnight,org.joda.time.LocalDate.toDateMidnight(DateTimeZone),19,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toLocalDateTime,(org.joda.time.LocalTime) → org.joda.time.LocalDateTime,org.joda.time.LocalDate.toLocalDateTime(LocalTime),30,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTime,(org.joda.time.LocalTime) → org.joda.time.DateTime,org.joda.time.LocalDate.toDateTime(LocalTime),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDateTime,"(org.joda.time.LocalTime, org.joda.time.DateTimeZone) → org.joda.time.DateTime","org.joda.time.LocalDate.toDateTime(LocalTime,DateTimeZone)",40,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toInterval,() → org.joda.time.Interval,org.joda.time.LocalDate.toInterval(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toInterval,(org.joda.time.DateTimeZone) → org.joda.time.Interval,org.joda.time.LocalDate.toInterval(DateTimeZone),19,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toDate,() → java.util.Date,org.joda.time.LocalDate.toDate(),77,0,0.0,10,0,0.0,6,15,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withLocalMillis,(long) → org.joda.time.LocalDate,org.joda.time.LocalDate.withLocalMillis(long),0,20,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,withFields,(org.joda.time.ReadablePartial) → org.joda.time.LocalDate,org.joda.time.LocalDate.withFields(ReadablePartial),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.LocalDate","org.joda.time.LocalDate.withField(DateTimeFieldType,int)",14,24,0.631578947368421,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/LocalDate,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.LocalDate","org.joda.time.LocalDate.withFieldAdded(DurationFieldType,int)",42,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.LocalDate","org.joda.time.LocalDate.withPeriodAdded(ReadablePeriod,int)",0,46,1.0,0,8,1.0,5,0,10,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,plus,(org.joda.time.ReadablePeriod) → org.joda.time.LocalDate,org.joda.time.LocalDate.plus(ReadablePeriod),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,plusYears,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.plusYears(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,plusMonths,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.plusMonths(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,plusWeeks,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.plusWeeks(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,plusDays,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.plusDays(int),0,16,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,minus,(org.joda.time.ReadablePeriod) → org.joda.time.LocalDate,org.joda.time.LocalDate.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,minusYears,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.minusYears(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,minusMonths,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.minusMonths(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,minusWeeks,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.minusWeeks(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,minusDays,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.minusDays(int),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,property,(org.joda.time.DateTimeFieldType) → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.property(DateTimeFieldType),27,7,0.20588235294117646,3,1,0.25,3,3,2,0.4,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getEra,() → int,org.joda.time.LocalDate.getEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,getCenturyOfEra,() → int,org.joda.time.LocalDate.getCenturyOfEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,getYearOfEra,() → int,org.joda.time.LocalDate.getYearOfEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,getYearOfCentury,() → int,org.joda.time.LocalDate.getYearOfCentury(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,getYear,() → int,org.joda.time.LocalDate.getYear(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getWeekyear,() → int,org.joda.time.LocalDate.getWeekyear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,getMonthOfYear,() → int,org.joda.time.LocalDate.getMonthOfYear(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getWeekOfWeekyear,() → int,org.joda.time.LocalDate.getWeekOfWeekyear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,getDayOfYear,() → int,org.joda.time.LocalDate.getDayOfYear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,getDayOfMonth,() → int,org.joda.time.LocalDate.getDayOfMonth(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,getDayOfWeek,() → int,org.joda.time.LocalDate.getDayOfWeek(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withEra,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withCenturyOfEra,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withCenturyOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withYearOfEra,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withYearOfEra(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withYearOfCentury,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withYearOfCentury(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withYear,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withWeekyear,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withMonthOfYear,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withMonthOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withWeekOfWeekyear,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withWeekOfWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withDayOfYear,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withDayOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withDayOfMonth,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withDayOfMonth(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,withDayOfWeek,(int) → org.joda.time.LocalDate,org.joda.time.LocalDate.withDayOfWeek(int),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,era,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.era(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,centuryOfEra,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.centuryOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,yearOfCentury,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.yearOfCentury(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,yearOfEra,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.yearOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,year,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.year(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,weekyear,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.weekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,monthOfYear,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.monthOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,weekOfWeekyear,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.weekOfWeekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,dayOfYear,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.dayOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,dayOfMonth,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.dayOfMonth(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,dayOfWeek,() → org.joda.time.LocalDate$Property,org.joda.time.LocalDate.dayOfWeek(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toString,() → java.lang.String,org.joda.time.LocalDate.toString(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/LocalDate,toString,(java.lang.String) → java.lang.String,org.joda.time.LocalDate.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/LocalDate,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.LocalDate.toString(String,Locale)",3,9,0.75,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/LocalDate,<clinit>,() → void,org.joda.time.LocalDate.<clinit>(),0,33,1.0,0,0,coverage not available since no branches,1,0,9,1.0,0,1,1.0
org/joda/time,org/joda/time/IllegalFieldValueException,createMessage,"(java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.String) → java.lang.String","org.joda.time.IllegalFieldValueException.createMessage(String,Number,Number,Number,String)",14,48,0.7741935483870968,2,6,0.75,5,2,14,0.875,0,1,1.0
org/joda/time,org/joda/time/IllegalFieldValueException,createMessage,"(java.lang.String, java.lang.String) → java.lang.String","org.joda.time.IllegalFieldValueException.createMessage(String,String)",38,0,0.0,2,0,0.0,2,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(org.joda.time.DateTimeFieldType, java.lang.Number, java.lang.Number, java.lang.Number) → void","org.joda.time.IllegalFieldValueException.<init>(DateTimeFieldType,Number,Number,Number)",0,36,1.0,0,0,coverage not available since no branches,1,0,10,1.0,0,1,1.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(org.joda.time.DateTimeFieldType, java.lang.Number, java.lang.Number, java.lang.Number, java.lang.String) → void","org.joda.time.IllegalFieldValueException.<init>(DateTimeFieldType,Number,Number,Number,String)",0,36,1.0,0,0,coverage not available since no branches,1,0,10,1.0,0,1,1.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(org.joda.time.DateTimeFieldType, java.lang.Number, java.lang.String) → void","org.joda.time.IllegalFieldValueException.<init>(DateTimeFieldType,Number,String)",0,36,1.0,0,0,coverage not available since no branches,1,0,10,1.0,0,1,1.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(org.joda.time.DurationFieldType, java.lang.Number, java.lang.Number, java.lang.Number) → void","org.joda.time.IllegalFieldValueException.<init>(DurationFieldType,Number,Number,Number)",36,0,0.0,0,0,coverage not available since no branches,1,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(java.lang.String, java.lang.Number, java.lang.Number, java.lang.Number) → void","org.joda.time.IllegalFieldValueException.<init>(String,Number,Number,Number)",34,0,0.0,0,0,coverage not available since no branches,1,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(org.joda.time.DateTimeFieldType, java.lang.String) → void","org.joda.time.IllegalFieldValueException.<init>(DateTimeFieldType,String)",33,0,0.0,0,0,coverage not available since no branches,1,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(org.joda.time.DurationFieldType, java.lang.String) → void","org.joda.time.IllegalFieldValueException.<init>(DurationFieldType,String)",33,0,0.0,0,0,coverage not available since no branches,1,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,<init>,"(java.lang.String, java.lang.String) → void","org.joda.time.IllegalFieldValueException.<init>(String,String)",31,0,0.0,0,0,coverage not available since no branches,1,10,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getDateTimeFieldType,() → org.joda.time.DateTimeFieldType,org.joda.time.IllegalFieldValueException.getDateTimeFieldType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getDurationFieldType,() → org.joda.time.DurationFieldType,org.joda.time.IllegalFieldValueException.getDurationFieldType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getFieldName,() → java.lang.String,org.joda.time.IllegalFieldValueException.getFieldName(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getIllegalNumberValue,() → java.lang.Number,org.joda.time.IllegalFieldValueException.getIllegalNumberValue(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getIllegalStringValue,() → java.lang.String,org.joda.time.IllegalFieldValueException.getIllegalStringValue(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getIllegalValueAsString,() → java.lang.String,org.joda.time.IllegalFieldValueException.getIllegalValueAsString(),0,11,1.0,1,1,0.5,2,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/IllegalFieldValueException,getLowerBound,() → java.lang.Number,org.joda.time.IllegalFieldValueException.getLowerBound(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getUpperBound,() → java.lang.Number,org.joda.time.IllegalFieldValueException.getUpperBound(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/IllegalFieldValueException,getMessage,() → java.lang.String,org.joda.time.IllegalFieldValueException.getMessage(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/IllegalFieldValueException,prependMessage,(java.lang.String) → void,org.joda.time.IllegalFieldValueException.prependMessage(String),4,19,0.8260869565217391,2,2,0.5,3,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/Period,parse,(java.lang.String) → org.joda.time.Period,org.joda.time.Period.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,parse,"(java.lang.String, org.joda.time.format.PeriodFormatter) → org.joda.time.Period","org.joda.time.Period.parse(String,PeriodFormatter)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,years,(int) → org.joda.time.Period,org.joda.time.Period.years(int),0,39,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,months,(int) → org.joda.time.Period,org.joda.time.Period.months(int),39,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,weeks,(int) → org.joda.time.Period,org.joda.time.Period.weeks(int),0,39,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,days,(int) → org.joda.time.Period,org.joda.time.Period.days(int),0,39,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,hours,(int) → org.joda.time.Period,org.joda.time.Period.hours(int),39,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minutes,(int) → org.joda.time.Period,org.joda.time.Period.minutes(int),39,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,seconds,(int) → org.joda.time.Period,org.joda.time.Period.seconds(int),39,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,millis,(int) → org.joda.time.Period,org.joda.time.Period.millis(int),39,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,fieldDifference,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Period","org.joda.time.Period.fieldDifference(ReadablePartial,ReadablePartial)",15,75,0.8333333333333334,3,11,0.7857142857142857,8,3,11,0.7857142857142857,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,() → void,org.joda.time.Period.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(int, int, int, int) → void","org.joda.time.Period.<init>(int,int,int,int)",0,12,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(int, int, int, int, int, int, int, int) → void","org.joda.time.Period.<init>(int,int,int,int,int,int,int,int)",0,12,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(int, int, int, int, int, int, int, int, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(int,int,int,int,int,int,int,int,PeriodType)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,(long) → void,org.joda.time.Period.<init>(long),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(long, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(long,PeriodType)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.Period.<init>(long,Chronology)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(long, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.Period.<init>(long,PeriodType,Chronology)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(long, long) → void","org.joda.time.Period.<init>(long,long)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(long, long, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(long,long,PeriodType)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(long, long, org.joda.time.Chronology) → void","org.joda.time.Period.<init>(long,long,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(long, long, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.Period.<init>(long,long,PeriodType,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.Period.<init>(ReadableInstant,ReadableInstant)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(ReadableInstant,ReadableInstant,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → void","org.joda.time.Period.<init>(ReadablePartial,ReadablePartial)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(ReadablePartial,ReadablePartial,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration) → void","org.joda.time.Period.<init>(ReadableInstant,ReadableDuration)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(ReadableInstant,ReadableDuration,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant) → void","org.joda.time.Period.<init>(ReadableDuration,ReadableInstant)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(ReadableDuration,ReadableInstant,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,(java.lang.Object) → void,org.joda.time.Period.<init>(Object),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<init>,"(java.lang.Object, org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(Object,PeriodType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.Period.<init>(Object,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(java.lang.Object, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.Period.<init>(Object,PeriodType,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,<init>,"(int[], org.joda.time.PeriodType) → void","org.joda.time.Period.<init>(int[],PeriodType)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,toPeriod,() → org.joda.time.Period,org.joda.time.Period.toPeriod(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,getYears,() → int,org.joda.time.Period.getYears(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,getMonths,() → int,org.joda.time.Period.getMonths(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,getWeeks,() → int,org.joda.time.Period.getWeeks(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,getDays,() → int,org.joda.time.Period.getDays(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,getHours,() → int,org.joda.time.Period.getHours(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,getMinutes,() → int,org.joda.time.Period.getMinutes(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,getSeconds,() → int,org.joda.time.Period.getSeconds(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,getMillis,() → int,org.joda.time.Period.getMillis(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,withPeriodType,(org.joda.time.PeriodType) → org.joda.time.Period,org.joda.time.Period.withPeriodType(PeriodType),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,withFields,(org.joda.time.ReadablePeriod) → org.joda.time.Period,org.joda.time.Period.withFields(ReadablePeriod),2,17,0.8947368421052632,1,1,0.5,2,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/Period,withField,"(org.joda.time.DurationFieldType, int) → org.joda.time.Period","org.joda.time.Period.withField(DurationFieldType,int)",15,7,0.3181818181818182,1,1,0.5,2,3,2,0.4,0,1,1.0
org/joda/time,org/joda/time/Period,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.Period","org.joda.time.Period.withFieldAdded(DurationFieldType,int)",26,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,withYears,(int) → org.joda.time.Period,org.joda.time.Period.withYears(int),0,18,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,withMonths,(int) → org.joda.time.Period,org.joda.time.Period.withMonths(int),0,18,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,withWeeks,(int) → org.joda.time.Period,org.joda.time.Period.withWeeks(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,withDays,(int) → org.joda.time.Period,org.joda.time.Period.withDays(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,withHours,(int) → org.joda.time.Period,org.joda.time.Period.withHours(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,withMinutes,(int) → org.joda.time.Period,org.joda.time.Period.withMinutes(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,withSeconds,(int) → org.joda.time.Period,org.joda.time.Period.withSeconds(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,withMillis,(int) → org.joda.time.Period,org.joda.time.Period.withMillis(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,plus,(org.joda.time.ReadablePeriod) → org.joda.time.Period,org.joda.time.Period.plus(ReadablePeriod),94,0,0.0,2,0,0.0,2,12,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,plusYears,(int) → org.joda.time.Period,org.joda.time.Period.plusYears(int),22,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,plusMonths,(int) → org.joda.time.Period,org.joda.time.Period.plusMonths(int),22,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,plusWeeks,(int) → org.joda.time.Period,org.joda.time.Period.plusWeeks(int),22,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,plusDays,(int) → org.joda.time.Period,org.joda.time.Period.plusDays(int),22,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,plusHours,(int) → org.joda.time.Period,org.joda.time.Period.plusHours(int),22,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,plusMinutes,(int) → org.joda.time.Period,org.joda.time.Period.plusMinutes(int),0,22,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,plusSeconds,(int) → org.joda.time.Period,org.joda.time.Period.plusSeconds(int),0,22,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,plusMillis,(int) → org.joda.time.Period,org.joda.time.Period.plusMillis(int),22,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minus,(org.joda.time.ReadablePeriod) → org.joda.time.Period,org.joda.time.Period.minus(ReadablePeriod),98,4,0.0392156862745098,1,1,0.5,2,10,2,0.16666666666666666,0,1,1.0
org/joda/time,org/joda/time/Period,minusYears,(int) → org.joda.time.Period,org.joda.time.Period.minusYears(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minusMonths,(int) → org.joda.time.Period,org.joda.time.Period.minusMonths(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minusWeeks,(int) → org.joda.time.Period,org.joda.time.Period.minusWeeks(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minusDays,(int) → org.joda.time.Period,org.joda.time.Period.minusDays(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minusHours,(int) → org.joda.time.Period,org.joda.time.Period.minusHours(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minusMinutes,(int) → org.joda.time.Period,org.joda.time.Period.minusMinutes(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minusSeconds,(int) → org.joda.time.Period,org.joda.time.Period.minusSeconds(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,minusMillis,(int) → org.joda.time.Period,org.joda.time.Period.minusMillis(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,multipliedBy,(int) → org.joda.time.Period,org.joda.time.Period.multipliedBy(int),34,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,negated,() → org.joda.time.Period,org.joda.time.Period.negated(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,toStandardWeeks,() → org.joda.time.Weeks,org.joda.time.Period.toStandardWeeks(),51,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,toStandardDays,() → org.joda.time.Days,org.joda.time.Period.toStandardDays(),53,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,toStandardHours,() → org.joda.time.Hours,org.joda.time.Period.toStandardHours(),53,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,toStandardMinutes,() → org.joda.time.Minutes,org.joda.time.Period.toStandardMinutes(),53,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,toStandardSeconds,() → org.joda.time.Seconds,org.joda.time.Period.toStandardSeconds(),51,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Period,toStandardDuration,() → org.joda.time.Duration,org.joda.time.Period.toStandardDuration(),0,52,1.0,0,0,coverage not available since no branches,1,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,checkYearsAndMonths,(java.lang.String) → void,org.joda.time.Period.checkYearsAndMonths(String),28,7,0.2,2,2,0.5,3,2,3,0.6,0,1,1.0
org/joda/time,org/joda/time/Period,normalizedStandard,() → org.joda.time.Period,org.joda.time.Period.normalizedStandard(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,normalizedStandard,(org.joda.time.PeriodType) → org.joda.time.Period,org.joda.time.Period.normalizedStandard(PeriodType),0,127,1.0,0,10,1.0,6,0,23,1.0,0,1,1.0
org/joda/time,org/joda/time/Period,<clinit>,() → void,org.joda.time.Period.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,<init>,(java.lang.String) → void,org.joda.time.DurationFieldType.<init>(String),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,millis,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.millis(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,seconds,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.seconds(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,minutes,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.minutes(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,hours,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.hours(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,halfdays,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.halfdays(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,days,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.days(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,weeks,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.weeks(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,weekyears,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.weekyears(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,months,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.months(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,years,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.years(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,centuries,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.centuries(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,eras,() → org.joda.time.DurationFieldType,org.joda.time.DurationFieldType.eras(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,getName,() → java.lang.String,org.joda.time.DurationFieldType.getName(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,isSupported,(org.joda.time.Chronology) → boolean,org.joda.time.DurationFieldType.isSupported(Chronology),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DurationFieldType,toString,() → java.lang.String,org.joda.time.DurationFieldType.toString(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DurationFieldType,<clinit>,() → void,org.joda.time.DurationFieldType.<clinit>(),0,73,1.0,0,0,coverage not available since no branches,1,0,12,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,now,() → org.joda.time.YearMonth,org.joda.time.YearMonth.now(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,now,(org.joda.time.DateTimeZone) → org.joda.time.YearMonth,org.joda.time.YearMonth.now(DateTimeZone),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,now,(org.joda.time.Chronology) → org.joda.time.YearMonth,org.joda.time.YearMonth.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,parse,(java.lang.String) → org.joda.time.YearMonth,org.joda.time.YearMonth.parse(String),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.YearMonth","org.joda.time.YearMonth.parse(String,DateTimeFormatter)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,fromCalendarFields,(java.util.Calendar) → org.joda.time.YearMonth,org.joda.time.YearMonth.fromCalendarFields(Calendar),0,19,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,fromDateFields,(java.util.Date) → org.joda.time.YearMonth,org.joda.time.YearMonth.fromDateFields(Date),19,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<init>,() → void,org.joda.time.YearMonth.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.YearMonth.<init>(DateTimeZone),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<init>,(org.joda.time.Chronology) → void,org.joda.time.YearMonth.<init>(Chronology),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<init>,(long) → void,org.joda.time.YearMonth.<init>(long),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.YearMonth.<init>(long,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<init>,(java.lang.Object) → void,org.joda.time.YearMonth.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.YearMonth.<init>(Object,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<init>,"(int, int) → void","org.joda.time.YearMonth.<init>(int,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,<init>,"(int, int, org.joda.time.Chronology) → void","org.joda.time.YearMonth.<init>(int,int,Chronology)",0,14,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,<init>,"(org.joda.time.YearMonth, int[]) → void","org.joda.time.YearMonth.<init>(YearMonth,int[])",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,<init>,"(org.joda.time.YearMonth, org.joda.time.Chronology) → void","org.joda.time.YearMonth.<init>(YearMonth,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,readResolve,() → java.lang.Object,org.joda.time.YearMonth.readResolve(),16,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,size,() → int,org.joda.time.YearMonth.size(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,getField,"(int, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.YearMonth.getField(int,Chronology)",12,8,0.4,1,2,0.6666666666666666,3,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/YearMonth,getFieldType,(int) → org.joda.time.DateTimeFieldType,org.joda.time.YearMonth.getFieldType(int),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,getFieldTypes,() → org.joda.time.DateTimeFieldType[],org.joda.time.YearMonth.getFieldTypes(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,withChronologyRetainFields,(org.joda.time.Chronology) → org.joda.time.YearMonth,org.joda.time.YearMonth.withChronologyRetainFields(Chronology),25,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,withField,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.YearMonth","org.joda.time.YearMonth.withField(DateTimeFieldType,int)",29,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,withFieldAdded,"(org.joda.time.DurationFieldType, int) → org.joda.time.YearMonth","org.joda.time.YearMonth.withFieldAdded(DurationFieldType,int)",2,24,0.9230769230769231,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/YearMonth,withPeriodAdded,"(org.joda.time.ReadablePeriod, int) → org.joda.time.YearMonth","org.joda.time.YearMonth.withPeriodAdded(ReadablePeriod,int)",0,46,1.0,1,7,0.875,5,0,10,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,plus,(org.joda.time.ReadablePeriod) → org.joda.time.YearMonth,org.joda.time.YearMonth.plus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,plusYears,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth.plusYears(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,plusMonths,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth.plusMonths(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,minus,(org.joda.time.ReadablePeriod) → org.joda.time.YearMonth,org.joda.time.YearMonth.minus(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,minusYears,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth.minusYears(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,minusMonths,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth.minusMonths(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,toLocalDate,(int) → org.joda.time.LocalDate,org.joda.time.YearMonth.toLocalDate(int),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,toInterval,() → org.joda.time.Interval,org.joda.time.YearMonth.toInterval(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,toInterval,(org.joda.time.DateTimeZone) → org.joda.time.Interval,org.joda.time.YearMonth.toInterval(DateTimeZone),23,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,getYear,() → int,org.joda.time.YearMonth.getYear(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,getMonthOfYear,() → int,org.joda.time.YearMonth.getMonthOfYear(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,withYear,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth.withYear(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,withMonthOfYear,(int) → org.joda.time.YearMonth,org.joda.time.YearMonth.withMonthOfYear(int),18,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,property,(org.joda.time.DateTimeFieldType) → org.joda.time.YearMonth$Property,org.joda.time.YearMonth.property(DateTimeFieldType),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,year,() → org.joda.time.YearMonth$Property,org.joda.time.YearMonth.year(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,monthOfYear,() → org.joda.time.YearMonth$Property,org.joda.time.YearMonth.monthOfYear(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,toString,() → java.lang.String,org.joda.time.YearMonth.toString(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/YearMonth,toString,(java.lang.String) → java.lang.String,org.joda.time.YearMonth.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.YearMonth.toString(String,Locale)",12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/YearMonth,<clinit>,() → void,org.joda.time.YearMonth.<clinit>(),0,12,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime$Property,<init>,"(org.joda.time.MutableDateTime, org.joda.time.DateTimeField) → void","org.joda.time.MutableDateTime$Property.<init>(MutableDateTime,DateTimeField)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.MutableDateTime$Property.writeObject(ObjectOutputStream),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,readObject,(java.io.ObjectInputStream) → void,org.joda.time.MutableDateTime$Property.readObject(ObjectInputStream),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,getField,() → org.joda.time.DateTimeField,org.joda.time.MutableDateTime$Property.getField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,getMillis,() → long,org.joda.time.MutableDateTime$Property.getMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,getChronology,() → org.joda.time.Chronology,org.joda.time.MutableDateTime$Property.getChronology(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,getMutableDateTime,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.getMutableDateTime(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,add,(int) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.add(int),13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,add,(long) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.add(long),13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,addWrapField,(int) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.addWrapField(int),13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,set,(int) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.set(int),13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,set,"(java.lang.String, java.util.Locale) → org.joda.time.MutableDateTime","org.joda.time.MutableDateTime$Property.set(String,Locale)",14,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,set,(java.lang.String) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.set(String),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,roundFloor,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.roundFloor(),12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,roundCeiling,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.roundCeiling(),12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,roundHalfFloor,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.roundHalfFloor(),12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,roundHalfCeiling,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.roundHalfCeiling(),12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime$Property,roundHalfEven,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime$Property.roundHalfEven(),12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$Stub,<init>,(java.lang.String) → void,org.joda.time.DateTimeZone$Stub.<init>(String),6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$Stub,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.DateTimeZone$Stub.writeObject(ObjectOutputStream),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$Stub,readObject,(java.io.ObjectInputStream) → void,org.joda.time.DateTimeZone$Stub.readObject(ObjectInputStream),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone$Stub,readResolve,() → java.lang.Object,org.joda.time.DateTimeZone$Stub.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,years,(int) → org.joda.time.Years,org.joda.time.Years.years(int),0,19,1.0,0,7,1.0,7,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/Years,yearsBetween,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → org.joda.time.Years","org.joda.time.Years.yearsBetween(ReadableInstant,ReadableInstant)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,yearsBetween,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial) → org.joda.time.Years","org.joda.time.Years.yearsBetween(ReadablePartial,ReadablePartial)",0,31,1.0,1,3,0.75,3,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/Years,yearsIn,(org.joda.time.ReadableInterval) → org.joda.time.Years,org.joda.time.Years.yearsIn(ReadableInterval),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,parseYears,(java.lang.String) → org.joda.time.Years,org.joda.time.Years.parseYears(String),12,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,<init>,(int) → void,org.joda.time.Years.<init>(int),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/Years,readResolve,() → java.lang.Object,org.joda.time.Years.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,getFieldType,() → org.joda.time.DurationFieldType,org.joda.time.Years.getFieldType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.Years.getPeriodType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Years,getYears,() → int,org.joda.time.Years.getYears(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Years,plus,(int) → org.joda.time.Years,org.joda.time.Years.plus(int),0,10,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/Years,plus,(org.joda.time.Years) → org.joda.time.Years,org.joda.time.Years.plus(Years),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,minus,(int) → org.joda.time.Years,org.joda.time.Years.minus(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/Years,minus,(org.joda.time.Years) → org.joda.time.Years,org.joda.time.Years.minus(Years),2,7,0.7777777777777778,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/Years,multipliedBy,(int) → org.joda.time.Years,org.joda.time.Years.multipliedBy(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,dividedBy,(int) → org.joda.time.Years,org.joda.time.Years.dividedBy(int),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,negated,() → org.joda.time.Years,org.joda.time.Years.negated(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,isGreaterThan,(org.joda.time.Years) → boolean,org.joda.time.Years.isGreaterThan(Years),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,isLessThan,(org.joda.time.Years) → boolean,org.joda.time.Years.isLessThan(Years),18,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,toString,() → java.lang.String,org.joda.time.Years.toString(),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/Years,<clinit>,() → void,org.joda.time.Years.<clinit>(),0,35,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getDefault,() → org.joda.time.DateTimeZone,org.joda.time.DateTimeZone.getDefault(),11,27,0.7105263157894737,4,6,0.6,6,5,11,0.6875,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,setDefault,(org.joda.time.DateTimeZone) → void,org.joda.time.DateTimeZone.setDefault(DateTimeZone),21,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,forID,(java.lang.String) → org.joda.time.DateTimeZone,org.joda.time.DateTimeZone.forID(String),0,106,1.0,1,29,0.9666666666666667,16,0,21,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,forOffsetHours,(int) → org.joda.time.DateTimeZone,org.joda.time.DateTimeZone.forOffsetHours(int),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,forOffsetHoursMinutes,"(int, int) → org.joda.time.DateTimeZone","org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)",6,84,0.9333333333333333,0,18,1.0,10,2,16,0.8888888888888888,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,forOffsetMillis,(int) → org.joda.time.DateTimeZone,org.joda.time.DateTimeZone.forOffsetMillis(int),12,13,0.52,2,2,0.5,3,1,3,0.75,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,forTimeZone,(java.util.TimeZone) → org.joda.time.DateTimeZone,org.joda.time.DateTimeZone.forTimeZone(TimeZone),77,30,0.2803738317757009,20,6,0.23076923076923078,14,18,12,0.4,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,convertToAsciiNumber,(java.lang.String) → java.lang.String,org.joda.time.DateTimeZone.convertToAsciiNumber(String),33,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,fixedOffsetZone,"(java.lang.String, int) → org.joda.time.DateTimeZone","org.joda.time.DateTimeZone.fixedOffsetZone(String,int)",2,10,0.8333333333333334,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getAvailableIDs,() → java.util.Set,org.joda.time.DateTimeZone.getAvailableIDs(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,getProvider,() → org.joda.time.tz.Provider,org.joda.time.DateTimeZone.getProvider(),4,15,0.7894736842105263,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,setProvider,(org.joda.time.tz.Provider) → void,org.joda.time.DateTimeZone.setProvider(Provider),18,4,0.18181818181818182,3,1,0.25,3,6,2,0.25,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,validateProvider,(org.joda.time.tz.Provider) → org.joda.time.tz.Provider,org.joda.time.DateTimeZone.validateProvider(Provider),10,25,0.7142857142857143,3,5,0.625,5,2,6,0.75,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getDefaultProvider,() → org.joda.time.tz.Provider,org.joda.time.DateTimeZone.getDefaultProvider(),68,20,0.22727272727272727,4,2,0.3333333333333333,4,16,8,0.3333333333333333,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getNameProvider,() → org.joda.time.tz.NameProvider,org.joda.time.DateTimeZone.getNameProvider(),4,15,0.7894736842105263,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,setNameProvider,(org.joda.time.tz.NameProvider) → void,org.joda.time.DateTimeZone.setNameProvider(NameProvider),8,10,0.5555555555555556,2,2,0.5,3,2,5,0.7142857142857143,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getDefaultNameProvider,() → org.joda.time.tz.NameProvider,org.joda.time.DateTimeZone.getDefaultNameProvider(),41,16,0.2807017543859649,4,2,0.3333333333333333,4,8,7,0.4666666666666667,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getConvertedId,(java.lang.String) → java.lang.String,org.joda.time.DateTimeZone.getConvertedId(String),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,parseOffset,(java.lang.String) → int,org.joda.time.DateTimeZone.parseOffset(String),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,printOffset,(int) → java.lang.String,org.joda.time.DateTimeZone.printOffset(int),3,86,0.9662921348314607,1,5,0.8333333333333334,4,1,22,0.9565217391304348,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,<init>,(java.lang.String) → void,org.joda.time.DateTimeZone.<init>(String),5,8,0.6153846153846154,1,1,0.5,2,1,4,0.8,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getID,() → java.lang.String,org.joda.time.DateTimeZone.getID(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getShortName,(long) → java.lang.String,org.joda.time.DateTimeZone.getShortName(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,getShortName,"(long, java.util.Locale) → java.lang.String","org.joda.time.DateTimeZone.getShortName(long,Locale)",10,36,0.782608695652174,2,6,0.75,5,2,10,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getName,(long) → java.lang.String,org.joda.time.DateTimeZone.getName(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,getName,"(long, java.util.Locale) → java.lang.String","org.joda.time.DateTimeZone.getName(long,Locale)",46,0,0.0,8,0,0.0,5,12,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,getOffset,(org.joda.time.ReadableInstant) → int,org.joda.time.DateTimeZone.getOffset(ReadableInstant),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,isStandardOffset,(long) → boolean,org.joda.time.DateTimeZone.isStandardOffset(long),1,10,0.9090909090909091,1,1,0.5,2,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getOffsetFromLocal,(long) → int,org.joda.time.DateTimeZone.getOffsetFromLocal(long),42,43,0.5058823529411764,11,5,0.3125,9,11,11,0.5,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,convertUTCToLocal,(long) → long,org.joda.time.DateTimeZone.convertUTCToLocal(long),0,29,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,convertLocalToUTC,"(long, boolean, long) → long","org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean,long)",0,23,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,convertLocalToUTC,"(long, boolean) → long","org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)",63,27,0.3,16,2,0.1111111111111111,10,12,6,0.3333333333333333,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,getMillisKeepLocal,"(org.joda.time.DateTimeZone, long) → long","org.joda.time.DateTimeZone.getMillisKeepLocal(DateTimeZone,long)",2,17,0.8947368421052632,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,isLocalDateTimeGap,(org.joda.time.LocalDateTime) → boolean,org.joda.time.DateTimeZone.isLocalDateTimeGap(LocalDateTime),14,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,adjustOffset,"(long, boolean) → long","org.joda.time.DateTimeZone.adjustOffset(long,boolean)",74,0,0.0,12,0,0.0,7,16,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,toTimeZone,() → java.util.TimeZone,org.joda.time.DateTimeZone.toTimeZone(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,hashCode,() → int,org.joda.time.DateTimeZone.hashCode(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,toString,() → java.lang.String,org.joda.time.DateTimeZone.toString(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/DateTimeZone,writeReplace,() → java.lang.Object,org.joda.time.DateTimeZone.writeReplace(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/DateTimeZone,<clinit>,() → void,org.joda.time.DateTimeZone.<clinit>(),0,15,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,now,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime.now(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,now,(org.joda.time.DateTimeZone) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime.now(DateTimeZone),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,now,(org.joda.time.Chronology) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime.now(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,parse,(java.lang.String) → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime.parse(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,parse,"(java.lang.String, org.joda.time.format.DateTimeFormatter) → org.joda.time.MutableDateTime","org.joda.time.MutableDateTime.parse(String,DateTimeFormatter)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,<init>,() → void,org.joda.time.MutableDateTime.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.MutableDateTime.<init>(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,(org.joda.time.Chronology) → void,org.joda.time.MutableDateTime.<init>(Chronology),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,(long) → void,org.joda.time.MutableDateTime.<init>(long),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,"(long, org.joda.time.DateTimeZone) → void","org.joda.time.MutableDateTime.<init>(long,DateTimeZone)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.MutableDateTime.<init>(long,Chronology)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,(java.lang.Object) → void,org.joda.time.MutableDateTime.<init>(Object),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,<init>,"(java.lang.Object, org.joda.time.DateTimeZone) → void","org.joda.time.MutableDateTime.<init>(Object,DateTimeZone)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.MutableDateTime.<init>(Object,Chronology)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,<init>,"(int, int, int, int, int, int, int) → void","org.joda.time.MutableDateTime.<init>(int,int,int,int,int,int,int)",0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,"(int, int, int, int, int, int, int, org.joda.time.DateTimeZone) → void","org.joda.time.MutableDateTime.<init>(int,int,int,int,int,int,int,DateTimeZone)",0,11,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,<init>,"(int, int, int, int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.MutableDateTime.<init>(int,int,int,int,int,int,int,Chronology)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,getRoundingField,() → org.joda.time.DateTimeField,org.joda.time.MutableDateTime.getRoundingField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,getRoundingMode,() → int,org.joda.time.MutableDateTime.getRoundingMode(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setRounding,(org.joda.time.DateTimeField) → void,org.joda.time.MutableDateTime.setRounding(DateTimeField),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setRounding,"(org.joda.time.DateTimeField, int) → void","org.joda.time.MutableDateTime.setRounding(DateTimeField,int)",0,38,1.0,0,10,1.0,6,0,6,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setMillis,(long) → void,org.joda.time.MutableDateTime.setMillis(long),23,14,0.3783783783783784,5,2,0.2857142857142857,7,7,6,0.46153846153846156,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setMillis,(org.joda.time.ReadableInstant) → void,org.joda.time.MutableDateTime.setMillis(ReadableInstant),7,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,add,(long) → void,org.joda.time.MutableDateTime.add(long),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,add,(org.joda.time.ReadableDuration) → void,org.joda.time.MutableDateTime.add(ReadableDuration),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,add,"(org.joda.time.ReadableDuration, int) → void","org.joda.time.MutableDateTime.add(ReadableDuration,int)",9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,add,(org.joda.time.ReadablePeriod) → void,org.joda.time.MutableDateTime.add(ReadablePeriod),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,add,"(org.joda.time.ReadablePeriod, int) → void","org.joda.time.MutableDateTime.add(ReadablePeriod,int)",12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setChronology,(org.joda.time.Chronology) → void,org.joda.time.MutableDateTime.setChronology(Chronology),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setZone,(org.joda.time.DateTimeZone) → void,org.joda.time.MutableDateTime.setZone(DateTimeZone),16,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setZoneRetainFields,(org.joda.time.DateTimeZone) → void,org.joda.time.MutableDateTime.setZoneRetainFields(DateTimeZone),0,27,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,set,"(org.joda.time.DateTimeFieldType, int) → void","org.joda.time.MutableDateTime.set(DateTimeFieldType,int)",11,7,0.3888888888888889,1,1,0.5,2,2,2,0.5,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,add,"(org.joda.time.DurationFieldType, int) → void","org.joda.time.MutableDateTime.add(DurationFieldType,int)",0,20,1.0,1,3,0.75,3,0,5,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setYear,(int) → void,org.joda.time.MutableDateTime.setYear(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addYears,(int) → void,org.joda.time.MutableDateTime.addYears(int),0,12,1.0,1,1,0.5,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setWeekyear,(int) → void,org.joda.time.MutableDateTime.setWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addWeekyears,(int) → void,org.joda.time.MutableDateTime.addWeekyears(int),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setMonthOfYear,(int) → void,org.joda.time.MutableDateTime.setMonthOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addMonths,(int) → void,org.joda.time.MutableDateTime.addMonths(int),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setWeekOfWeekyear,(int) → void,org.joda.time.MutableDateTime.setWeekOfWeekyear(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addWeeks,(int) → void,org.joda.time.MutableDateTime.addWeeks(int),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setDayOfYear,(int) → void,org.joda.time.MutableDateTime.setDayOfYear(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setDayOfMonth,(int) → void,org.joda.time.MutableDateTime.setDayOfMonth(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setDayOfWeek,(int) → void,org.joda.time.MutableDateTime.setDayOfWeek(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addDays,(int) → void,org.joda.time.MutableDateTime.addDays(int),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setHourOfDay,(int) → void,org.joda.time.MutableDateTime.setHourOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addHours,(int) → void,org.joda.time.MutableDateTime.addHours(int),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setMinuteOfDay,(int) → void,org.joda.time.MutableDateTime.setMinuteOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setMinuteOfHour,(int) → void,org.joda.time.MutableDateTime.setMinuteOfHour(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addMinutes,(int) → void,org.joda.time.MutableDateTime.addMinutes(int),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setSecondOfDay,(int) → void,org.joda.time.MutableDateTime.setSecondOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setSecondOfMinute,(int) → void,org.joda.time.MutableDateTime.setSecondOfMinute(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addSeconds,(int) → void,org.joda.time.MutableDateTime.addSeconds(int),9,3,0.25,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setMillisOfDay,(int) → void,org.joda.time.MutableDateTime.setMillisOfDay(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setMillisOfSecond,(int) → void,org.joda.time.MutableDateTime.setMillisOfSecond(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,addMillis,(int) → void,org.joda.time.MutableDateTime.addMillis(int),0,12,1.0,1,1,0.5,2,0,3,1.0,0,1,1.0
org/joda/time,org/joda/time/MutableDateTime,setDate,(long) → void,org.joda.time.MutableDateTime.setDate(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setDate,(org.joda.time.ReadableInstant) → void,org.joda.time.MutableDateTime.setDate(ReadableInstant),28,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setDate,"(int, int, int) → void","org.joda.time.MutableDateTime.setDate(int,int,int)",14,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setTime,(long) → void,org.joda.time.MutableDateTime.setTime(long),15,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setTime,(org.joda.time.ReadableInstant) → void,org.joda.time.MutableDateTime.setTime(ReadableInstant),20,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setTime,"(int, int, int, int) → void","org.joda.time.MutableDateTime.setTime(int,int,int,int)",14,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,setDateTime,"(int, int, int, int, int, int, int) → void","org.joda.time.MutableDateTime.setDateTime(int,int,int,int,int,int,int)",15,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,property,(org.joda.time.DateTimeFieldType) → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.property(DateTimeFieldType),35,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,era,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.era(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,centuryOfEra,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.centuryOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,yearOfCentury,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.yearOfCentury(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,yearOfEra,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.yearOfEra(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,year,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.year(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,weekyear,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.weekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,monthOfYear,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.monthOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,weekOfWeekyear,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.weekOfWeekyear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,dayOfYear,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.dayOfYear(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,dayOfMonth,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.dayOfMonth(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,dayOfWeek,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.dayOfWeek(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,hourOfDay,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.hourOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,minuteOfDay,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.minuteOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,minuteOfHour,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.minuteOfHour(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,secondOfDay,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.secondOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,secondOfMinute,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.secondOfMinute(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,millisOfDay,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.millisOfDay(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,millisOfSecond,() → org.joda.time.MutableDateTime$Property,org.joda.time.MutableDateTime.millisOfSecond(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,copy,() → org.joda.time.MutableDateTime,org.joda.time.MutableDateTime.copy(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time,org/joda/time/MutableDateTime,clone,() → java.lang.Object,org.joda.time.MutableDateTime.clone(),9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,<init>,"(org.joda.time.chrono.LimitChronology, org.joda.time.DurationField) → void","org.joda.time.chrono.LimitChronology$LimitDurationField.<init>(LimitChronology,DurationField)",0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,getValue,"(long, long) → int","org.joda.time.chrono.LimitChronology$LimitDurationField.getValue(long,long)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,getValueAsLong,"(long, long) → long","org.joda.time.chrono.LimitChronology$LimitDurationField.getValueAsLong(long,long)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,getMillis,"(int, long) → long","org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(int,long)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,getMillis,"(long, long) → long","org.joda.time.chrono.LimitChronology$LimitDurationField.getMillis(long,long)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,add,"(long, int) → long","org.joda.time.chrono.LimitChronology$LimitDurationField.add(long,int)",18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,add,"(long, long) → long","org.joda.time.chrono.LimitChronology$LimitDurationField.add(long,long)",18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,getDifference,"(long, long) → int","org.joda.time.chrono.LimitChronology$LimitDurationField.getDifference(long,long)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.LimitChronology$LimitDurationField.getDifferenceAsLong(long,long)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, int) → void","org.joda.time.chrono.BasicGJChronology.<init>(Chronology,Object,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,isLeapDay,(long) → boolean,org.joda.time.chrono.BasicGJChronology.isLeapDay(long),15,0,0.0,4,0,0.0,3,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,getMonthOfYear,"(long, int) → int","org.joda.time.chrono.BasicGJChronology.getMonthOfYear(long,int)",7,120,0.9448818897637795,3,43,0.9347826086956522,24,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,getDaysInYearMonth,"(int, int) → int","org.joda.time.chrono.BasicGJChronology.getDaysInYearMonth(int,int)",0,16,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,getDaysInMonthMax,(int) → int,org.joda.time.chrono.BasicGJChronology.getDaysInMonthMax(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,getDaysInMonthMaxForSet,"(long, int) → int","org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)",0,12,1.0,1,3,0.75,3,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,getTotalMillisByYearMonth,"(int, int) → long","org.joda.time.chrono.BasicGJChronology.getTotalMillisByYearMonth(int,int)",0,16,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,getYearDifference,"(long, long) → long","org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)",26,35,0.5737704918032787,10,2,0.16666666666666666,7,6,8,0.5714285714285714,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,setYear,"(long, int) → long","org.joda.time.chrono.BasicGJChronology.setYear(long,int)",0,44,1.0,1,7,0.875,5,0,12,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicGJChronology,<clinit>,() → void,org.joda.time.chrono.BasicGJChronology.<clinit>(),0,154,1.0,0,2,1.0,2,0,14,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology$YearInfo,<init>,"(int, long) → void","org.joda.time.chrono.BasicChronology$YearInfo.<init>(int,long)",0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitException,<init>,"(org.joda.time.chrono.LimitChronology, java.lang.String, boolean) → void","org.joda.time.chrono.LimitChronology$LimitException.<init>(LimitChronology,String,boolean)",10,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitException,getMessage,() → java.lang.String,org.joda.time.chrono.LimitChronology$LimitException.getMessage(),77,0,0.0,4,0,0.0,3,18,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitException,toString,() → java.lang.String,org.joda.time.chrono.LimitChronology$LimitException.toString(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,forLocale,(java.util.Locale) → org.joda.time.chrono.GJLocaleSymbols,org.joda.time.chrono.GJLocaleSymbols.forLocale(Locale),28,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,realignMonths,(java.lang.String[]) → java.lang.String[],org.joda.time.chrono.GJLocaleSymbols.realignMonths(String[]),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,realignDaysOfWeek,(java.lang.String[]) → java.lang.String[],org.joda.time.chrono.GJLocaleSymbols.realignDaysOfWeek(String[]),25,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,addSymbols,"(java.util.TreeMap, java.lang.String[], java.lang.Integer[]) → void","org.joda.time.chrono.GJLocaleSymbols.addSymbols(TreeMap,String[],Integer[])",21,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,addNumerals,"(java.util.TreeMap, int, int, java.lang.Integer[]) → void","org.joda.time.chrono.GJLocaleSymbols.addNumerals(TreeMap,int,int,Integer[])",17,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,maxLength,(java.lang.String[]) → int,org.joda.time.chrono.GJLocaleSymbols.maxLength(String[]),25,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,<init>,(java.util.Locale) → void,org.joda.time.chrono.GJLocaleSymbols.<init>(Locale),160,0,0.0,4,0,0.0,3,31,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,eraValueToText,(int) → java.lang.String,org.joda.time.chrono.GJLocaleSymbols.eraValueToText(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,eraTextToValue,(java.lang.String) → int,org.joda.time.chrono.GJLocaleSymbols.eraTextToValue(String),17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,getEraMaxTextLength,() → int,org.joda.time.chrono.GJLocaleSymbols.getEraMaxTextLength(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,monthOfYearValueToText,(int) → java.lang.String,org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToText(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,monthOfYearValueToShortText,(int) → java.lang.String,org.joda.time.chrono.GJLocaleSymbols.monthOfYearValueToShortText(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,monthOfYearTextToValue,(java.lang.String) → int,org.joda.time.chrono.GJLocaleSymbols.monthOfYearTextToValue(String),17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,getMonthMaxTextLength,() → int,org.joda.time.chrono.GJLocaleSymbols.getMonthMaxTextLength(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,getMonthMaxShortTextLength,() → int,org.joda.time.chrono.GJLocaleSymbols.getMonthMaxShortTextLength(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,dayOfWeekValueToText,(int) → java.lang.String,org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToText(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,dayOfWeekValueToShortText,(int) → java.lang.String,org.joda.time.chrono.GJLocaleSymbols.dayOfWeekValueToShortText(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,dayOfWeekTextToValue,(java.lang.String) → int,org.joda.time.chrono.GJLocaleSymbols.dayOfWeekTextToValue(String),17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,getDayOfWeekMaxTextLength,() → int,org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxTextLength(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,getDayOfWeekMaxShortTextLength,() → int,org.joda.time.chrono.GJLocaleSymbols.getDayOfWeekMaxShortTextLength(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,halfdayValueToText,(int) → java.lang.String,org.joda.time.chrono.GJLocaleSymbols.halfdayValueToText(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,halfdayTextToValue,(java.lang.String) → int,org.joda.time.chrono.GJLocaleSymbols.halfdayTextToValue(String),23,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,getHalfdayMaxTextLength,() → int,org.joda.time.chrono.GJLocaleSymbols.getHalfdayMaxTextLength(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJLocaleSymbols,<clinit>,() → void,org.joda.time.chrono.GJLocaleSymbols.<clinit>(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,getInstance,(org.joda.time.Chronology) → org.joda.time.chrono.LenientChronology,org.joda.time.chrono.LenientChronology.getInstance(Chronology),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,<init>,(org.joda.time.Chronology) → void,org.joda.time.chrono.LenientChronology.<init>(Chronology),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.LenientChronology.withUTC(),20,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.LenientChronology.withZone(DateTimeZone),22,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.LenientChronology.assemble(Fields),139,0,0.0,0,0,coverage not available since no branches,1,24,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,convertField,(org.joda.time.DateTimeField) → org.joda.time.DateTimeField,org.joda.time.chrono.LenientChronology.convertField(DateTimeField),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.LenientChronology.equals(Object),19,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,hashCode,() → int,org.joda.time.chrono.LenientChronology.hashCode(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LenientChronology,toString,() → java.lang.String,org.joda.time.chrono.LenientChronology.toString(),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology$HalfdayField,<init>,() → void,org.joda.time.chrono.BasicChronology$HalfdayField.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology$HalfdayField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.BasicChronology$HalfdayField.getAsText(int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology$HalfdayField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.chrono.BasicChronology$HalfdayField.set(long,String,Locale)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology$HalfdayField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.BasicChronology$HalfdayField.getMaximumTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,<init>,(org.joda.time.chrono.BasicChronology) → void,org.joda.time.chrono.BasicYearDateTimeField.<init>(BasicChronology),0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,isLenient,() → boolean,org.joda.time.chrono.BasicYearDateTimeField.isLenient(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,get,(long) → int,org.joda.time.chrono.BasicYearDateTimeField.get(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,add,"(long, int) → long","org.joda.time.chrono.BasicYearDateTimeField.add(long,int)",0,17,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,add,"(long, long) → long","org.joda.time.chrono.BasicYearDateTimeField.add(long,long)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,addWrapField,"(long, int) → long","org.joda.time.chrono.BasicYearDateTimeField.addWrapField(long,int)",24,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,set,"(long, int) → long","org.joda.time.chrono.BasicYearDateTimeField.set(long,int)",0,15,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,setExtended,"(long, int) → long","org.joda.time.chrono.BasicYearDateTimeField.setExtended(long,int)",0,19,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.BasicYearDateTimeField.getDifferenceAsLong(long,long)",0,17,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicYearDateTimeField.getRangeDurationField(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,isLeap,(long) → boolean,org.joda.time.chrono.BasicYearDateTimeField.isLeap(long),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,getLeapAmount,(long) → int,org.joda.time.chrono.BasicYearDateTimeField.getLeapAmount(long),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicYearDateTimeField.getLeapDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.BasicYearDateTimeField.getMinimumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.BasicYearDateTimeField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.BasicYearDateTimeField.roundFloor(long),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.BasicYearDateTimeField.roundCeiling(long),0,22,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,remainder,(long) → long,org.joda.time.chrono.BasicYearDateTimeField.remainder(long),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicYearDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.BasicYearDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,<init>,"(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField) → void","org.joda.time.chrono.GJDayOfWeekDateTimeField.<init>(BasicChronology,DurationField)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,get,(long) → int,org.joda.time.chrono.GJDayOfWeekDateTimeField.get(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsText(int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,getAsShortText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJDayOfWeekDateTimeField.getAsShortText(int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,convertText,"(java.lang.String, java.util.Locale) → int","org.joda.time.chrono.GJDayOfWeekDateTimeField.convertText(String,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.GJDayOfWeekDateTimeField.getRangeDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.GJDayOfWeekDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.chrono.GJDayOfWeekDateTimeField.getMaximumShortTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJDayOfWeekDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.GJDayOfWeekDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,getInstanceUTC,() → org.joda.time.chrono.CopticChronology,org.joda.time.chrono.CopticChronology.getInstanceUTC(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,getInstance,() → org.joda.time.chrono.CopticChronology,org.joda.time.chrono.CopticChronology.getInstance(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.CopticChronology,org.joda.time.chrono.CopticChronology.getInstance(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,getInstance,"(org.joda.time.DateTimeZone, int) → org.joda.time.chrono.CopticChronology","org.joda.time.chrono.CopticChronology.getInstance(DateTimeZone,int)",15,100,0.8695652173913043,2,10,0.8333333333333334,7,3,25,0.8928571428571429,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, int) → void","org.joda.time.chrono.CopticChronology.<init>(Chronology,Object,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,readResolve,() → java.lang.Object,org.joda.time.chrono.CopticChronology.readResolve(),2,21,0.9130434782608695,1,3,0.75,3,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.CopticChronology.withUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.CopticChronology.withZone(DateTimeZone),4,9,0.6923076923076923,2,2,0.5,3,2,3,0.6,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,isLeapDay,(long) → boolean,org.joda.time.chrono.CopticChronology.isLeapDay(long),15,0,0.0,4,0,0.0,3,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,calculateFirstDayOfYearMillis,(int) → long,org.joda.time.chrono.CopticChronology.calculateFirstDayOfYearMillis(int),9,27,0.75,3,1,0.25,3,3,5,0.625,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,getMinYear,() → int,org.joda.time.chrono.CopticChronology.getMinYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,getMaxYear,() → int,org.joda.time.chrono.CopticChronology.getMaxYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,getApproxMillisAtEpochDividedByTwo,() → long,org.joda.time.chrono.CopticChronology.getApproxMillisAtEpochDividedByTwo(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.CopticChronology.assemble(Fields),0,38,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/CopticChronology,<clinit>,() → void,org.joda.time.chrono.CopticChronology.<clinit>(),0,13,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJCacheKey,<init>,"(org.joda.time.DateTimeZone, org.joda.time.Instant, int) → void","org.joda.time.chrono.GJCacheKey.<init>(DateTimeZone,Instant,int)",0,12,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJCacheKey,hashCode,() → int,org.joda.time.chrono.GJCacheKey.hashCode(),4,33,0.8918918918918919,2,2,0.5,3,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJCacheKey,equals,(java.lang.Object) → boolean,org.joda.time.chrono.GJCacheKey.equals(Object),0,58,1.0,1,19,0.95,11,0,20,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,getInstance,"(org.joda.time.Chronology, org.joda.time.DateTimeZone) → org.joda.time.chrono.ZonedChronology","org.joda.time.chrono.ZonedChronology.getInstance(Chronology,DateTimeZone)",10,20,0.6666666666666666,2,4,0.6666666666666666,4,2,6,0.75,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,useTimeArithmetic,(org.joda.time.DurationField) → boolean,org.joda.time.chrono.ZonedChronology.useTimeArithmetic(DurationField),0,11,1.0,1,3,0.75,3,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,<init>,"(org.joda.time.Chronology, org.joda.time.DateTimeZone) → void","org.joda.time.chrono.ZonedChronology.<init>(Chronology,DateTimeZone)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,getZone,() → org.joda.time.DateTimeZone,org.joda.time.chrono.ZonedChronology.getZone(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.ZonedChronology.withUTC(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.ZonedChronology.withZone(DateTimeZone),15,8,0.34782608695652173,4,2,0.3333333333333333,4,4,3,0.42857142857142855,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,getDateTimeMillis,"(int, int, int, int) → long","org.joda.time.chrono.ZonedChronology.getDateTimeMillis(int,int,int,int)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,getDateTimeMillis,"(int, int, int, int, int, int, int) → long","org.joda.time.chrono.ZonedChronology.getDateTimeMillis(int,int,int,int,int,int,int)",0,13,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,getDateTimeMillis,"(long, int, int, int, int) → long","org.joda.time.chrono.ZonedChronology.getDateTimeMillis(long,int,int,int,int)",17,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,localToUTC,(long) → long,org.joda.time.chrono.ZonedChronology.localToUTC(long),11,49,0.8166666666666667,3,11,0.7857142857142857,8,3,12,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.ZonedChronology.assemble(Fields),0,250,1.0,0,0,coverage not available since no branches,1,0,37,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,convertField,"(org.joda.time.DurationField, java.util.HashMap) → org.joda.time.DurationField","org.joda.time.chrono.ZonedChronology.convertField(DurationField,HashMap)",0,30,1.0,0,6,1.0,4,0,7,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,convertField,"(org.joda.time.DateTimeField, java.util.HashMap) → org.joda.time.DateTimeField","org.joda.time.chrono.ZonedChronology.convertField(DateTimeField,HashMap)",7,38,0.8444444444444444,3,3,0.5,4,2,9,0.8181818181818182,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.ZonedChronology.equals(Object),29,0,0.0,8,0,0.0,5,8,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,hashCode,() → int,org.joda.time.chrono.ZonedChronology.hashCode(),14,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology,toString,() → java.lang.String,org.joda.time.chrono.ZonedChronology.toString(),0,18,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,getInstance,(org.joda.time.Chronology) → org.joda.time.chrono.StrictChronology,org.joda.time.chrono.StrictChronology.getInstance(Chronology),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,<init>,(org.joda.time.Chronology) → void,org.joda.time.chrono.StrictChronology.<init>(Chronology),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.StrictChronology.withUTC(),20,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.StrictChronology.withZone(DateTimeZone),3,19,0.8636363636363636,1,5,0.8333333333333334,4,1,6,0.8571428571428571,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.StrictChronology.assemble(Fields),0,116,1.0,0,0,coverage not available since no branches,1,0,24,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,convertField,(org.joda.time.DateTimeField) → org.joda.time.DateTimeField,org.joda.time.chrono.StrictChronology.convertField(DateTimeField),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.StrictChronology.equals(Object),19,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,hashCode,() → int,org.joda.time.chrono.StrictChronology.hashCode(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/StrictChronology,toString,() → java.lang.String,org.joda.time.chrono.StrictChronology.toString(),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$LinkedDurationField,<init>,"(org.joda.time.DurationField, org.joda.time.chrono.GJChronology$ImpreciseCutoverField) → void","org.joda.time.chrono.GJChronology$LinkedDurationField.<init>(DurationField,ImpreciseCutoverField)",0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$LinkedDurationField,add,"(long, int) → long","org.joda.time.chrono.GJChronology$LinkedDurationField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$LinkedDurationField,add,"(long, long) → long","org.joda.time.chrono.GJChronology$LinkedDurationField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$LinkedDurationField,getDifference,"(long, long) → int","org.joda.time.chrono.GJChronology$LinkedDurationField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$LinkedDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.GJChronology$LinkedDurationField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,<init>,"(org.joda.time.Chronology, java.lang.Object) → void","org.joda.time.chrono.AssembledChronology.<init>(Chronology,Object)",0,11,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,getZone,() → org.joda.time.DateTimeZone,org.joda.time.chrono.AssembledChronology.getZone(),2,8,0.8,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,getDateTimeMillis,"(int, int, int, int) → long","org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)",7,18,0.72,1,3,0.75,3,1,2,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,getDateTimeMillis,"(int, int, int, int, int, int, int) → long","org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)",0,31,1.0,0,4,1.0,3,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,getDateTimeMillis,"(long, int, int, int, int) → long","org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)",0,27,1.0,1,3,0.75,3,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,millis,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.millis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,millisOfSecond,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.millisOfSecond(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,millisOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.millisOfDay(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,seconds,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.seconds(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,secondOfMinute,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.secondOfMinute(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,secondOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.secondOfDay(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,minutes,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.minutes(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,minuteOfHour,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.minuteOfHour(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,minuteOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.minuteOfDay(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,hours,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.hours(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,hourOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.hourOfDay(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,clockhourOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.clockhourOfDay(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,halfdays,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.halfdays(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,hourOfHalfday,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.hourOfHalfday(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,clockhourOfHalfday,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.clockhourOfHalfday(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,halfdayOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.halfdayOfDay(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,days,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.days(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,dayOfWeek,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.dayOfWeek(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,dayOfMonth,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.dayOfMonth(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,dayOfYear,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.dayOfYear(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,weeks,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.weeks(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,weekOfWeekyear,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.weekOfWeekyear(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,weekyears,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.weekyears(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,weekyear,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.weekyear(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,weekyearOfCentury,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.weekyearOfCentury(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,months,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.months(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,monthOfYear,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.monthOfYear(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,years,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.years(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,year,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.year(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,yearOfEra,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.yearOfEra(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,yearOfCentury,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.yearOfCentury(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,centuries,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.centuries(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,centuryOfEra,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.centuryOfEra(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,eras,() → org.joda.time.DurationField,org.joda.time.chrono.AssembledChronology.eras(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,era,() → org.joda.time.DateTimeField,org.joda.time.chrono.AssembledChronology.era(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,getBase,() → org.joda.time.Chronology,org.joda.time.chrono.AssembledChronology.getBase(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,getParam,() → java.lang.Object,org.joda.time.chrono.AssembledChronology.getParam(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,setFields,() → void,org.joda.time.chrono.AssembledChronology.setFields(),0,469,1.0,5,85,0.9444444444444444,46,0,52,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology,readObject,(java.io.ObjectInputStream) → void,org.joda.time.chrono.AssembledChronology.readObject(ObjectInputStream),5,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,<init>,"(org.joda.time.chrono.BasicChronology, int) → void","org.joda.time.chrono.BasicMonthOfYearDateTimeField.<init>(BasicChronology,int)",0,17,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,isLenient,() → boolean,org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLenient(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,get,(long) → int,org.joda.time.chrono.BasicMonthOfYearDateTimeField.get(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,add,"(long, int) → long","org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,int)",13,129,0.9084507042253521,5,11,0.6875,9,5,27,0.84375,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,add,"(long, long) → long","org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)",149,13,0.08024691358024691,13,1,0.07142857142857142,8,27,3,0.1,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,add,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(ReadablePartial,int,int[],int)",34,51,0.6,5,7,0.5833333333333334,7,4,9,0.6923076923076923,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,addWrapField,"(long, int) → long","org.joda.time.chrono.BasicMonthOfYearDateTimeField.addWrapField(long,int)",12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.BasicMonthOfYearDateTimeField.getDifferenceAsLong(long,long)",21,84,0.8,4,4,0.5,5,5,16,0.7619047619047619,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,set,"(long, int) → long","org.joda.time.chrono.BasicMonthOfYearDateTimeField.set(long,int)",0,41,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicMonthOfYearDateTimeField.getRangeDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,isLeap,(long) → boolean,org.joda.time.chrono.BasicMonthOfYearDateTimeField.isLeap(long),24,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,getLeapAmount,(long) → int,org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapAmount(long),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicMonthOfYearDateTimeField.getLeapDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.BasicMonthOfYearDateTimeField.getMaximumValue(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.BasicMonthOfYearDateTimeField.roundFloor(long),0,17,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,remainder,(long) → long,org.joda.time.chrono.BasicMonthOfYearDateTimeField.remainder(long),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicMonthOfYearDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.BasicMonthOfYearDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getInstanceUTC,() → org.joda.time.chrono.IslamicChronology,org.joda.time.chrono.IslamicChronology.getInstanceUTC(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getInstance,() → org.joda.time.chrono.IslamicChronology,org.joda.time.chrono.IslamicChronology.getInstance(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.IslamicChronology,org.joda.time.chrono.IslamicChronology.getInstance(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getInstance,"(org.joda.time.DateTimeZone, org.joda.time.chrono.IslamicChronology$LeapYearPatternType) → org.joda.time.chrono.IslamicChronology","org.joda.time.chrono.IslamicChronology.getInstance(DateTimeZone,LeapYearPatternType)",4,94,0.9591836734693877,3,9,0.75,7,2,23,0.92,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, org.joda.time.chrono.IslamicChronology$LeapYearPatternType) → void","org.joda.time.chrono.IslamicChronology.<init>(Chronology,Object,LeapYearPatternType)",0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,readResolve,() → java.lang.Object,org.joda.time.chrono.IslamicChronology.readResolve(),11,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getLeapYearPatternType,() → org.joda.time.chrono.IslamicChronology$LeapYearPatternType,org.joda.time.chrono.IslamicChronology.getLeapYearPatternType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.IslamicChronology.withUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.IslamicChronology.withZone(DateTimeZone),13,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.IslamicChronology.equals(Object),28,0,0.0,8,0,0.0,5,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,hashCode,() → int,org.joda.time.chrono.IslamicChronology.hashCode(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getYear,(long) → int,org.joda.time.chrono.IslamicChronology.getYear(long),2,45,0.9574468085106383,1,5,0.8333333333333334,4,0,9,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,setYear,"(long, int) → long","org.joda.time.chrono.IslamicChronology.setYear(long,int)",5,29,0.8529411764705882,3,1,0.25,3,1,7,0.875,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getYearDifference,"(long, long) → long","org.joda.time.chrono.IslamicChronology.getYearDifference(long,long)",0,32,1.0,1,1,0.5,2,0,8,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getTotalMillisByYearMonth,"(int, int) → long","org.joda.time.chrono.IslamicChronology.getTotalMillisByYearMonth(int,int)",11,15,0.5769230769230769,1,1,0.5,2,2,3,0.6,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getDayOfMonth,(long) → int,org.joda.time.chrono.IslamicChronology.getDayOfMonth(long),19,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,isLeapYear,(int) → boolean,org.joda.time.chrono.IslamicChronology.isLeapYear(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getDaysInYearMax,() → int,org.joda.time.chrono.IslamicChronology.getDaysInYearMax(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getDaysInYear,(int) → int,org.joda.time.chrono.IslamicChronology.getDaysInYear(int),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getDaysInYearMonth,"(int, int) → int","org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)",2,16,0.8888888888888888,1,5,0.8333333333333334,4,1,2,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getDaysInMonthMax,() → int,org.joda.time.chrono.IslamicChronology.getDaysInMonthMax(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getDaysInMonthMax,(int) → int,org.joda.time.chrono.IslamicChronology.getDaysInMonthMax(int),14,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getMonthOfYear,"(long, int) → int","org.joda.time.chrono.IslamicChronology.getMonthOfYear(long,int)",22,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getAverageMillisPerYear,() → long,org.joda.time.chrono.IslamicChronology.getAverageMillisPerYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getAverageMillisPerYearDividedByTwo,() → long,org.joda.time.chrono.IslamicChronology.getAverageMillisPerYearDividedByTwo(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getAverageMillisPerMonth,() → long,org.joda.time.chrono.IslamicChronology.getAverageMillisPerMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,calculateFirstDayOfYearMillis,(int) → long,org.joda.time.chrono.IslamicChronology.calculateFirstDayOfYearMillis(int),32,43,0.5733333333333334,2,6,0.75,5,2,9,0.8181818181818182,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getMinYear,() → int,org.joda.time.chrono.IslamicChronology.getMinYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getMaxYear,() → int,org.joda.time.chrono.IslamicChronology.getMaxYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,getApproxMillisAtEpochDividedByTwo,() → long,org.joda.time.chrono.IslamicChronology.getApproxMillisAtEpochDividedByTwo(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.IslamicChronology.assemble(Fields),0,22,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology,<clinit>,() → void,org.joda.time.chrono.IslamicChronology.<clinit>(),0,37,1.0,0,0,coverage not available since no branches,1,0,8,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,<init>,() → void,org.joda.time.chrono.BaseChronology.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,getDateTimeMillis,"(int, int, int, int) → long","org.joda.time.chrono.BaseChronology.getDateTimeMillis(int,int,int,int)",24,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,getDateTimeMillis,"(int, int, int, int, int, int, int) → long","org.joda.time.chrono.BaseChronology.getDateTimeMillis(int,int,int,int,int,int,int)",0,42,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,getDateTimeMillis,"(long, int, int, int, int) → long","org.joda.time.chrono.BaseChronology.getDateTimeMillis(long,int,int,int,int)",0,24,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,validate,"(org.joda.time.ReadablePartial, int[]) → void","org.joda.time.chrono.BaseChronology.validate(ReadablePartial,int[])",52,54,0.5094339622641509,4,8,0.6666666666666666,7,12,12,0.5,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,get,"(org.joda.time.ReadablePartial, long) → int[]","org.joda.time.chrono.BaseChronology.get(ReadablePartial,long)",0,25,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,set,"(org.joda.time.ReadablePartial, long) → long","org.joda.time.chrono.BaseChronology.set(ReadablePartial,long)",0,23,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,get,"(org.joda.time.ReadablePeriod, long, long) → int[]","org.joda.time.chrono.BaseChronology.get(ReadablePeriod,long,long)",0,41,1.0,0,6,1.0,4,0,10,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,get,"(org.joda.time.ReadablePeriod, long) → int[]","org.joda.time.chrono.BaseChronology.get(ReadablePeriod,long)",0,44,1.0,0,6,1.0,4,0,11,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,add,"(org.joda.time.ReadablePeriod, long, int) → long","org.joda.time.chrono.BaseChronology.add(ReadablePeriod,long,int)",0,37,1.0,2,6,0.75,5,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,add,"(long, long, int) → long","org.joda.time.chrono.BaseChronology.add(long,long,int)",0,16,1.0,1,3,0.75,3,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,millis,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.millis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,millisOfSecond,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.millisOfSecond(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,millisOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.millisOfDay(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,seconds,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.seconds(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,secondOfMinute,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.secondOfMinute(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,secondOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.secondOfDay(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,minutes,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.minutes(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,minuteOfHour,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.minuteOfHour(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,minuteOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.minuteOfDay(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,hours,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.hours(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,hourOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.hourOfDay(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,clockhourOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.clockhourOfDay(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,halfdays,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.halfdays(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,hourOfHalfday,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.hourOfHalfday(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,clockhourOfHalfday,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.clockhourOfHalfday(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,halfdayOfDay,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.halfdayOfDay(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,days,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.days(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,dayOfWeek,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.dayOfWeek(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,dayOfMonth,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.dayOfMonth(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,dayOfYear,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.dayOfYear(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,weeks,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.weeks(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,weekOfWeekyear,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.weekOfWeekyear(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,weekyears,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.weekyears(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,weekyear,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.weekyear(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,weekyearOfCentury,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.weekyearOfCentury(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,months,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.months(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,monthOfYear,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.monthOfYear(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,years,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.years(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,year,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.year(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,yearOfEra,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.yearOfEra(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,yearOfCentury,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.yearOfCentury(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,centuries,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.centuries(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,centuryOfEra,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.centuryOfEra(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,eras,() → org.joda.time.DurationField,org.joda.time.chrono.BaseChronology.eras(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BaseChronology,era,() → org.joda.time.DateTimeField,org.joda.time.chrono.BaseChronology.era(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,<init>,"(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField) → void","org.joda.time.chrono.BasicDayOfYearDateTimeField.<init>(BasicChronology,DurationField)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,get,(long) → int,org.joda.time.chrono.BasicDayOfYearDateTimeField.get(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicDayOfYearDateTimeField.getRangeDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.BasicDayOfYearDateTimeField.getMinimumValue(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,getMaximumValue,(long) → int,org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(ReadablePartial),17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValue(ReadablePartial,int[])",28,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,getMaximumValueForSet,"(long, int) → int","org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)",18,0,0.0,4,0,0.0,3,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,isLeap,(long) → boolean,org.joda.time.chrono.BasicDayOfYearDateTimeField.isLeap(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfYearDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.BasicDayOfYearDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,getInstanceUTC,() → org.joda.time.chrono.BuddhistChronology,org.joda.time.chrono.BuddhistChronology.getInstanceUTC(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,getInstance,() → org.joda.time.chrono.BuddhistChronology,org.joda.time.chrono.BuddhistChronology.getInstance(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.BuddhistChronology,org.joda.time.chrono.BuddhistChronology.getInstance(DateTimeZone),2,50,0.9615384615384616,1,5,0.8333333333333334,4,1,10,0.9090909090909091,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,<init>,"(org.joda.time.Chronology, java.lang.Object) → void","org.joda.time.chrono.BuddhistChronology.<init>(Chronology,Object)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,readResolve,() → java.lang.Object,org.joda.time.chrono.BuddhistChronology.readResolve(),11,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.BuddhistChronology.withUTC(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.BuddhistChronology.withZone(DateTimeZone),13,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.BuddhistChronology.equals(Object),14,5,0.2631578947368421,3,1,0.25,3,4,2,0.3333333333333333,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,hashCode,() → int,org.joda.time.chrono.BuddhistChronology.hashCode(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,toString,() → java.lang.String,org.joda.time.chrono.BuddhistChronology.toString(),0,23,1.0,1,1,0.5,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.BuddhistChronology.assemble(Fields),0,107,1.0,0,2,1.0,2,0,22,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BuddhistChronology,<clinit>,() → void,org.joda.time.chrono.BuddhistChronology.<clinit>(),0,13,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,<init>,"(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField) → void","org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.<init>(BasicChronology,DurationField)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,get,(long) → int,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.get(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getRangeDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundFloor(long),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.roundCeiling(long),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,remainder,(long) → long,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.remainder(long),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,getMaximumValue,(long) → int,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(ReadablePartial),15,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValue(ReadablePartial,int[])",9,17,0.6538461538461539,1,3,0.75,3,2,4,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,getMaximumValueForSet,"(long, int) → int","org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.getMaximumValueForSet(long,int)",9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,<init>,"(org.joda.time.chrono.BasicChronology, org.joda.time.DurationField) → void","org.joda.time.chrono.BasicDayOfMonthDateTimeField.<init>(BasicChronology,DurationField)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,get,(long) → int,org.joda.time.chrono.BasicDayOfMonthDateTimeField.get(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicDayOfMonthDateTimeField.getRangeDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,getMaximumValue,(long) → int,org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(ReadablePartial),30,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValue(ReadablePartial,int[])",0,49,1.0,0,8,1.0,5,0,10,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,getMaximumValueForSet,"(long, int) → int","org.joda.time.chrono.BasicDayOfMonthDateTimeField.getMaximumValueForSet(long,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,isLeap,(long) → boolean,org.joda.time.chrono.BasicDayOfMonthDateTimeField.isLeap(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicDayOfMonthDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.BasicDayOfMonthDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,<init>,"(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long) → void","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.<init>(GJChronology,DateTimeField,DateTimeField,long)",0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,<init>,"(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long) → void","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.<init>(GJChronology,DateTimeField,DateTimeField,DurationField,long)",0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,<init>,"(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DurationField, long) → void","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.<init>(GJChronology,DateTimeField,DateTimeField,DurationField,DurationField,long)",0,12,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,<init>,"(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long, boolean) → void","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.<init>(GJChronology,DateTimeField,DateTimeField,DurationField,long,boolean)",0,23,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,add,"(long, int) → long","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,int)",94,0,0.0,16,0,0.0,9,18,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,add,"(long, long) → long","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(long,long)",94,0,0.0,16,0,0.0,9,18,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,getDifference,"(long, long) → int","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifference(long,long)",47,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getDifferenceAsLong(long,long)",47,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,getMinimumValue,(long) → int,org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMinimumValue(long),15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$ImpreciseCutoverField,getMaximumValue,(long) → int,org.joda.time.chrono.GJChronology$ImpreciseCutoverField.getMaximumValue(long),15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, int) → void","org.joda.time.chrono.BasicChronology.<init>(Chronology,Object,int)",0,30,1.0,1,3,0.75,3,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getZone,() → org.joda.time.DateTimeZone,org.joda.time.chrono.BasicChronology.getZone(),0,10,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDateTimeMillis,"(int, int, int, int) → long","org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int)",7,17,0.7083333333333334,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDateTimeMillis,"(int, int, int, int, int, int, int) → long","org.joda.time.chrono.BasicChronology.getDateTimeMillis(int,int,int,int,int,int,int)",10,51,0.8360655737704918,1,1,0.5,2,1,7,0.875,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDateTimeMillis0,"(int, int, int, int) → long","org.joda.time.chrono.BasicChronology.getDateTimeMillis0(int,int,int,int)",16,33,0.673469387755102,3,7,0.7,6,4,6,0.6,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getMinimumDaysInFirstWeek,() → int,org.joda.time.chrono.BasicChronology.getMinimumDaysInFirstWeek(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.BasicChronology.equals(Object),4,28,0.875,4,6,0.6,6,1,6,0.8571428571428571,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,hashCode,() → int,org.joda.time.chrono.BasicChronology.hashCode(),14,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,toString,() → java.lang.String,org.joda.time.chrono.BasicChronology.toString(),9,50,0.847457627118644,3,3,0.5,4,2,13,0.8666666666666667,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.BasicChronology.assemble(Fields),0,187,1.0,0,0,coverage not available since no branches,1,0,42,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDaysInYearMax,() → int,org.joda.time.chrono.BasicChronology.getDaysInYearMax(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDaysInYear,(int) → int,org.joda.time.chrono.BasicChronology.getDaysInYear(int),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getWeeksInYear,(int) → int,org.joda.time.chrono.BasicChronology.getWeeksInYear(int),0,17,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getFirstWeekOfYearMillis,(int) → long,org.joda.time.chrono.BasicChronology.getFirstWeekOfYearMillis(int),0,32,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getYearMillis,(int) → long,org.joda.time.chrono.BasicChronology.getYearMillis(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getYearMonthMillis,"(int, int) → long","org.joda.time.chrono.BasicChronology.getYearMonthMillis(int,int)",0,13,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getYearMonthDayMillis,"(int, int, int) → long","org.joda.time.chrono.BasicChronology.getYearMonthDayMillis(int,int,int)",0,20,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getYear,(long) → int,org.joda.time.chrono.BasicChronology.getYear(long),3,60,0.9523809523809523,2,8,0.8,6,1,16,0.9411764705882353,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getMonthOfYear,(long) → int,org.joda.time.chrono.BasicChronology.getMonthOfYear(long),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDayOfMonth,(long) → int,org.joda.time.chrono.BasicChronology.getDayOfMonth(long),0,15,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDayOfMonth,"(long, int) → int","org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int)",0,11,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDayOfMonth,"(long, int, int) → int","org.joda.time.chrono.BasicChronology.getDayOfMonth(long,int,int)",0,20,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDayOfYear,(long) → int,org.joda.time.chrono.BasicChronology.getDayOfYear(long),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDayOfYear,"(long, int) → int","org.joda.time.chrono.BasicChronology.getDayOfYear(long,int)",0,13,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getWeekyear,(long) → int,org.joda.time.chrono.BasicChronology.getWeekyear(long),2,27,0.9310344827586207,1,3,0.75,3,1,6,0.8571428571428571,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getWeekOfWeekyear,(long) → int,org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getWeekOfWeekyear,"(long, int) → int","org.joda.time.chrono.BasicChronology.getWeekOfWeekyear(long,int)",6,29,0.8285714285714286,1,3,0.75,3,1,6,0.8571428571428571,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDayOfWeek,(long) → int,org.joda.time.chrono.BasicChronology.getDayOfWeek(long),0,37,1.0,0,4,1.0,3,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getMillisOfDay,(long) → int,org.joda.time.chrono.BasicChronology.getMillisOfDay(long),0,18,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDaysInMonthMax,() → int,org.joda.time.chrono.BasicChronology.getDaysInMonthMax(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDaysInMonthMax,(long) → int,org.joda.time.chrono.BasicChronology.getDaysInMonthMax(long),0,14,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDaysInMonthMaxForSet,"(long, int) → int","org.joda.time.chrono.BasicChronology.getDaysInMonthMaxForSet(long,int)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getDateMidnightMillis,"(int, int, int) → long","org.joda.time.chrono.BasicChronology.getDateMidnightMillis(int,int,int)",4,80,0.9523809523809523,3,9,0.75,7,2,13,0.8666666666666667,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,isLeapDay,(long) → boolean,org.joda.time.chrono.BasicChronology.isLeapDay(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getMaxMonth,(int) → int,org.joda.time.chrono.BasicChronology.getMaxMonth(int),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getMaxMonth,() → int,org.joda.time.chrono.BasicChronology.getMaxMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,getYearInfo,(int) → org.joda.time.chrono.BasicChronology$YearInfo,org.joda.time.chrono.BasicChronology.getYearInfo(int),0,30,1.0,1,3,0.75,3,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicChronology,<clinit>,() → void,org.joda.time.chrono.BasicChronology.<clinit>(),0,111,1.0,0,0,coverage not available since no branches,1,0,35,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.chrono.BasicChronology) → void","org.joda.time.chrono.GJYearOfEraDateTimeField.<init>(DateTimeField,BasicChronology)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.GJYearOfEraDateTimeField.getRangeDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,get,(long) → int,org.joda.time.chrono.GJYearOfEraDateTimeField.get(long),13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,add,"(long, int) → long","org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,add,"(long, long) → long","org.joda.time.chrono.GJYearOfEraDateTimeField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,addWrapField,"(long, int) → long","org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,addWrapField,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.chrono.GJYearOfEraDateTimeField.addWrapField(ReadablePartial,int,int[],int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,getDifference,"(long, long) → int","org.joda.time.chrono.GJYearOfEraDateTimeField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.GJYearOfEraDateTimeField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,set,"(long, int) → long","org.joda.time.chrono.GJYearOfEraDateTimeField.set(long,int)",20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.GJYearOfEraDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.GJYearOfEraDateTimeField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.GJYearOfEraDateTimeField.roundFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.GJYearOfEraDateTimeField.roundCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,remainder,(long) → long,org.joda.time.chrono.GJYearOfEraDateTimeField.remainder(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJYearOfEraDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.GJYearOfEraDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,<init>,"(org.joda.time.chrono.LimitChronology, org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DurationField, org.joda.time.DurationField) → void","org.joda.time.chrono.LimitChronology$LimitDateTimeField.<init>(LimitChronology,DateTimeField,DurationField,DurationField,DurationField)",0,18,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,get,(long) → int,org.joda.time.chrono.LimitChronology$LimitDateTimeField.get(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getAsText,"(long, java.util.Locale) → java.lang.String","org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsText(long,Locale)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getAsShortText,"(long, java.util.Locale) → java.lang.String","org.joda.time.chrono.LimitChronology$LimitDateTimeField.getAsShortText(long,Locale)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,add,"(long, int) → long","org.joda.time.chrono.LimitChronology$LimitDateTimeField.add(long,int)",18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,add,"(long, long) → long","org.joda.time.chrono.LimitChronology$LimitDateTimeField.add(long,long)",18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,addWrapField,"(long, int) → long","org.joda.time.chrono.LimitChronology$LimitDateTimeField.addWrapField(long,int)",18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getDifference,"(long, long) → int","org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifference(long,long)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDifferenceAsLong(long,long)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,set,"(long, int) → long","org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(long,int)",18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.chrono.LimitChronology$LimitDateTimeField.set(long,String,Locale)",19,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getRangeDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,isLeap,(long) → boolean,org.joda.time.chrono.LimitChronology$LimitDateTimeField.isLeap(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getLeapAmount,(long) → int,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapAmount(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getLeapDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundFloor(long),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundCeiling(long),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,roundHalfFloor,(long) → long,org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfFloor(long),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfCeiling(long),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,roundHalfEven,(long) → long,org.joda.time.chrono.LimitChronology$LimitDateTimeField.roundHalfEven(long),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,remainder,(long) → long,org.joda.time.chrono.LimitChronology$LimitDateTimeField.remainder(long),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getMinimumValue,(long) → int,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMinimumValue(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getMaximumValue,(long) → int,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumValue(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology$LimitDateTimeField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.chrono.LimitChronology$LimitDateTimeField.getMaximumShortTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,adjustYearForSet,(int) → int,org.joda.time.chrono.JulianChronology.adjustYearForSet(int),9,7,0.4375,2,2,0.5,3,2,4,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getInstanceUTC,() → org.joda.time.chrono.JulianChronology,org.joda.time.chrono.JulianChronology.getInstanceUTC(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getInstance,() → org.joda.time.chrono.JulianChronology,org.joda.time.chrono.JulianChronology.getInstance(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.JulianChronology,org.joda.time.chrono.JulianChronology.getInstance(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getInstance,"(org.joda.time.DateTimeZone, int) → org.joda.time.chrono.JulianChronology","org.joda.time.chrono.JulianChronology.getInstance(DateTimeZone,int)",2,91,0.978494623655914,2,10,0.8333333333333334,7,1,23,0.9583333333333334,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, int) → void","org.joda.time.chrono.JulianChronology.<init>(Chronology,Object,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,readResolve,() → java.lang.Object,org.joda.time.chrono.JulianChronology.readResolve(),6,17,0.7391304347826086,2,2,0.5,3,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.JulianChronology.withUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.JulianChronology.withZone(DateTimeZone),0,13,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getDateMidnightMillis,"(int, int, int) → long","org.joda.time.chrono.JulianChronology.getDateMidnightMillis(int,int,int)",0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,isLeapYear,(int) → boolean,org.joda.time.chrono.JulianChronology.isLeapYear(int),2,6,0.75,1,1,0.5,2,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,calculateFirstDayOfYearMillis,(int) → long,org.joda.time.chrono.JulianChronology.calculateFirstDayOfYearMillis(int),0,36,1.0,1,3,0.75,3,0,8,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getMinYear,() → int,org.joda.time.chrono.JulianChronology.getMinYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getMaxYear,() → int,org.joda.time.chrono.JulianChronology.getMaxYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getAverageMillisPerYear,() → long,org.joda.time.chrono.JulianChronology.getAverageMillisPerYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getAverageMillisPerYearDividedByTwo,() → long,org.joda.time.chrono.JulianChronology.getAverageMillisPerYearDividedByTwo(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getAverageMillisPerMonth,() → long,org.joda.time.chrono.JulianChronology.getAverageMillisPerMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,getApproxMillisAtEpochDividedByTwo,() → long,org.joda.time.chrono.JulianChronology.getApproxMillisAtEpochDividedByTwo(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.JulianChronology.assemble(Fields),0,23,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/JulianChronology,<clinit>,() → void,org.joda.time.chrono.JulianChronology.<clinit>(),0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,getInstance,"(org.joda.time.Chronology, org.joda.time.ReadableDateTime, org.joda.time.ReadableDateTime) → org.joda.time.chrono.LimitChronology","org.joda.time.chrono.LimitChronology.getInstance(Chronology,ReadableDateTime,ReadableDateTime)",0,43,1.0,0,12,1.0,7,0,7,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,<init>,"(org.joda.time.Chronology, org.joda.time.DateTime, org.joda.time.DateTime) → void","org.joda.time.chrono.LimitChronology.<init>(Chronology,DateTime,DateTime)",0,11,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,getLowerLimit,() → org.joda.time.DateTime,org.joda.time.chrono.LimitChronology.getLowerLimit(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,getUpperLimit,() → org.joda.time.DateTime,org.joda.time.chrono.LimitChronology.getUpperLimit(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.LimitChronology.withUTC(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.LimitChronology.withZone(DateTimeZone),3,60,0.9523809523809523,1,13,0.9285714285714286,8,1,20,0.9523809523809523,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,getDateTimeMillis,"(int, int, int, int) → long","org.joda.time.chrono.LimitChronology.getDateTimeMillis(int,int,int,int)",14,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,getDateTimeMillis,"(int, int, int, int, int, int, int) → long","org.joda.time.chrono.LimitChronology.getDateTimeMillis(int,int,int,int,int,int,int)",17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,getDateTimeMillis,"(long, int, int, int, int) → long","org.joda.time.chrono.LimitChronology.getDateTimeMillis(long,int,int,int,int)",19,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.LimitChronology.assemble(Fields),0,250,1.0,0,0,coverage not available since no branches,1,0,37,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,convertField,"(org.joda.time.DurationField, java.util.HashMap) → org.joda.time.DurationField","org.joda.time.chrono.LimitChronology.convertField(DurationField,HashMap)",0,29,1.0,0,6,1.0,4,0,7,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,convertField,"(org.joda.time.DateTimeField, java.util.HashMap) → org.joda.time.DateTimeField","org.joda.time.chrono.LimitChronology.convertField(DateTimeField,HashMap)",5,39,0.8863636363636364,2,4,0.6666666666666666,4,1,9,0.9,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,checkLimits,"(long, java.lang.String) → void","org.joda.time.chrono.LimitChronology.checkLimits(long,String)",19,16,0.45714285714285713,5,3,0.375,5,2,3,0.6,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.LimitChronology.equals(Object),4,31,0.8857142857142857,4,6,0.6,6,2,7,0.7777777777777778,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,hashCode,() → int,org.joda.time.chrono.LimitChronology.hashCode(),34,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/LimitChronology,toString,() → java.lang.String,org.joda.time.chrono.LimitChronology.toString(),2,33,0.9428571428571428,1,3,0.75,3,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology$Fields,<init>,() → void,org.joda.time.chrono.AssembledChronology$Fields.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology$Fields,copyFieldsFrom,(org.joda.time.Chronology) → void,org.joda.time.chrono.AssembledChronology$Fields.copyFieldsFrom(Chronology),3,313,0.990506329113924,1,69,0.9857142857142858,36,1,70,0.9859154929577465,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology$Fields,isSupported,(org.joda.time.DurationField) → boolean,org.joda.time.chrono.AssembledChronology$Fields.isSupported(DurationField),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/AssembledChronology$Fields,isSupported,(org.joda.time.DateTimeField) → boolean,org.joda.time.chrono.AssembledChronology$Fields.isSupported(DateTimeField),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,<init>,() → void,org.joda.time.chrono.ISOYearOfEraDateTimeField.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.ISOYearOfEraDateTimeField.getRangeDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,get,(long) → int,org.joda.time.chrono.ISOYearOfEraDateTimeField.get(long),12,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,add,"(long, int) → long","org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,add,"(long, long) → long","org.joda.time.chrono.ISOYearOfEraDateTimeField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,addWrapField,"(long, int) → long","org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,addWrapField,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.chrono.ISOYearOfEraDateTimeField.addWrapField(ReadablePartial,int,int[],int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,getDifference,"(long, long) → int","org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.ISOYearOfEraDateTimeField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,set,"(long, int) → long","org.joda.time.chrono.ISOYearOfEraDateTimeField.set(long,int)",19,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.ISOYearOfEraDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.ISOYearOfEraDateTimeField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.ISOYearOfEraDateTimeField.roundFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.ISOYearOfEraDateTimeField.roundCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,remainder,(long) → long,org.joda.time.chrono.ISOYearOfEraDateTimeField.remainder(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.ISOYearOfEraDateTimeField.readResolve(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOYearOfEraDateTimeField,<clinit>,() → void,org.joda.time.chrono.ISOYearOfEraDateTimeField.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, int) → void","org.joda.time.chrono.BasicFixedMonthChronology.<init>(Chronology,Object,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,setYear,"(long, int) → long","org.joda.time.chrono.BasicFixedMonthChronology.setYear(long,int)",34,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getYearDifference,"(long, long) → long","org.joda.time.chrono.BasicFixedMonthChronology.getYearDifference(long,long)",32,0,0.0,2,0,0.0,2,8,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getTotalMillisByYearMonth,"(int, int) → long","org.joda.time.chrono.BasicFixedMonthChronology.getTotalMillisByYearMonth(int,int)",0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getDayOfMonth,(long) → int,org.joda.time.chrono.BasicFixedMonthChronology.getDayOfMonth(long),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,isLeapYear,(int) → boolean,org.joda.time.chrono.BasicFixedMonthChronology.isLeapYear(int),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getDaysInYearMonth,"(int, int) → int","org.joda.time.chrono.BasicFixedMonthChronology.getDaysInYearMonth(int,int)",7,6,0.46153846153846156,3,1,0.25,3,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getDaysInMonthMax,() → int,org.joda.time.chrono.BasicFixedMonthChronology.getDaysInMonthMax(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getDaysInMonthMax,(int) → int,org.joda.time.chrono.BasicFixedMonthChronology.getDaysInMonthMax(int),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getMonthOfYear,(long) → int,org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getMonthOfYear,"(long, int) → int","org.joda.time.chrono.BasicFixedMonthChronology.getMonthOfYear(long,int)",13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getMaxMonth,() → int,org.joda.time.chrono.BasicFixedMonthChronology.getMaxMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getAverageMillisPerYear,() → long,org.joda.time.chrono.BasicFixedMonthChronology.getAverageMillisPerYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getAverageMillisPerYearDividedByTwo,() → long,org.joda.time.chrono.BasicFixedMonthChronology.getAverageMillisPerYearDividedByTwo(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicFixedMonthChronology,getAverageMillisPerMonth,() → long,org.joda.time.chrono.BasicFixedMonthChronology.getAverageMillisPerMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,<init>,(java.lang.String) → void,org.joda.time.chrono.BasicSingleEraDateTimeField.<init>(String),0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,isLenient,() → boolean,org.joda.time.chrono.BasicSingleEraDateTimeField.isLenient(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,get,(long) → int,org.joda.time.chrono.BasicSingleEraDateTimeField.get(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,set,"(long, int) → long","org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,int)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,String,Locale)",17,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.BasicSingleEraDateTimeField.roundFloor(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.BasicSingleEraDateTimeField.roundCeiling(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,roundHalfFloor,(long) → long,org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfFloor(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfCeiling(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,roundHalfEven,(long) → long,org.joda.time.chrono.BasicSingleEraDateTimeField.roundHalfEven(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicSingleEraDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicSingleEraDateTimeField.getRangeDurationField(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.BasicSingleEraDateTimeField.getMinimumValue(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumValue(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.BasicSingleEraDateTimeField.getAsText(int,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicSingleEraDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.BasicSingleEraDateTimeField.getMaximumTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology$LeapYearPatternType,<init>,"(int, int) → void","org.joda.time.chrono.IslamicChronology$LeapYearPatternType.<init>(int,int)",0,10,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology$LeapYearPatternType,isLeapYear,(int) → boolean,org.joda.time.chrono.IslamicChronology$LeapYearPatternType.isLeapYear(int),0,15,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology$LeapYearPatternType,readResolve,() → java.lang.Object,org.joda.time.chrono.IslamicChronology$LeapYearPatternType.readResolve(),13,0,0.0,5,0,0.0,5,6,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology$LeapYearPatternType,equals,(java.lang.Object) → boolean,org.joda.time.chrono.IslamicChronology$LeapYearPatternType.equals(Object),15,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/IslamicChronology$LeapYearPatternType,hashCode,() → int,org.joda.time.chrono.IslamicChronology$LeapYearPatternType.hashCode(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,getInstanceUTC,() → org.joda.time.chrono.ISOChronology,org.joda.time.chrono.ISOChronology.getInstanceUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,getInstance,() → org.joda.time.chrono.ISOChronology,org.joda.time.chrono.ISOChronology.getInstance(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.ISOChronology,org.joda.time.chrono.ISOChronology.getInstance(DateTimeZone),2,28,0.9333333333333333,1,5,0.8333333333333334,4,1,8,0.8888888888888888,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,<init>,(org.joda.time.Chronology) → void,org.joda.time.chrono.ISOChronology.<init>(Chronology),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.ISOChronology.withUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.ISOChronology.withZone(DateTimeZone),2,11,0.8461538461538461,1,3,0.75,3,1,4,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,toString,() → java.lang.String,org.joda.time.chrono.ISOChronology.toString(),0,23,1.0,1,1,0.5,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.ISOChronology.assemble(Fields),0,39,1.0,0,2,1.0,2,0,9,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.ISOChronology.equals(Object),0,19,1.0,0,4,1.0,3,0,6,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,hashCode,() → int,org.joda.time.chrono.ISOChronology.hashCode(),0,9,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,writeReplace,() → java.lang.Object,org.joda.time.chrono.ISOChronology.writeReplace(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology,<clinit>,() → void,org.joda.time.chrono.ISOChronology.<clinit>(),0,15,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeZone, org.joda.time.DurationField, org.joda.time.DurationField, org.joda.time.DurationField) → void","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.<init>(DateTimeField,DateTimeZone,DurationField,DurationField,DurationField)",4,27,0.8709677419354839,1,1,0.5,2,1,9,0.9,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,isLenient,() → boolean,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLenient(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,get,(long) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.get(long),0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getAsText,"(long, java.util.Locale) → java.lang.String","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(long,Locale)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getAsShortText,"(long, java.util.Locale) → java.lang.String","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(long,Locale)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsText(int,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getAsShortText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getAsShortText(int,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,add,"(long, int) → long","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,int)",39,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,add,"(long, long) → long","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.add(long,long)",39,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,addWrapField,"(long, int) → long","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.addWrapField(long,int)",39,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,set,"(long, int) → long","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long,int)",25,25,0.5,1,1,0.5,2,4,5,0.5555555555555556,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.set(long,String,Locale)",19,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getDifference,"(long, long) → int","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifference(long,long)",23,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDifferenceAsLong(long,long)",23,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getRangeDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,isLeap,(long) → boolean,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.isLeap(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getLeapAmount,(long) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapAmount(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getLeapDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundFloor(long),0,37,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.roundCeiling(long),37,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,remainder,(long) → long,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.remainder(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMinimumValue,(long) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMinimumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(ReadablePartial),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMinimumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMinimumValue(ReadablePartial,int[])",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMaximumValue,(long) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(ReadablePartial),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumValue(ReadablePartial,int[])",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getMaximumShortTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,getOffsetToAdd,(long) → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long),12,18,0.6,3,1,0.25,3,1,4,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,equals,(java.lang.Object) → boolean,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(Object),22,19,0.4634146341463415,8,4,0.3333333333333333,7,3,6,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDateTimeField,hashCode,() → int,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.hashCode(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,<init>,"(org.joda.time.DurationField, org.joda.time.DateTimeZone) → void","org.joda.time.chrono.ZonedChronology$ZonedDurationField.<init>(DurationField,DateTimeZone)",4,18,0.8181818181818182,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,isPrecise,() → boolean,org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise(),6,13,0.6842105263157895,3,3,0.5,4,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getUnitMillis,() → long,org.joda.time.chrono.ZonedChronology$ZonedDurationField.getUnitMillis(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getValue,"(long, long) → int","org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValue(long,long)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getValueAsLong,"(long, long) → long","org.joda.time.chrono.ZonedChronology$ZonedDurationField.getValueAsLong(long,long)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getMillis,"(int, long) → long","org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(int,long)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getMillis,"(long, long) → long","org.joda.time.chrono.ZonedChronology$ZonedDurationField.getMillis(long,long)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,add,"(long, int) → long","org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,int)",0,25,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,add,"(long, long) → long","org.joda.time.chrono.ZonedChronology$ZonedDurationField.add(long,long)",0,25,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getDifference,"(long, long) → int","org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifference(long,long)",0,23,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.ZonedChronology$ZonedDurationField.getDifferenceAsLong(long,long)",23,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getOffsetToAdd,(long) → int,org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long),5,25,0.8333333333333334,1,3,0.75,3,1,4,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,getOffsetFromLocalToSubtract,(long) → int,org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long),12,18,0.6,3,1,0.25,3,1,4,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,addOffset,(long) → long,org.joda.time.chrono.ZonedChronology$ZonedDurationField.addOffset(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,equals,(java.lang.Object) → boolean,org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(Object),29,0,0.0,8,0,0.0,5,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ZonedChronology$ZonedDurationField,hashCode,() → int,org.joda.time.chrono.ZonedChronology$ZonedDurationField.hashCode(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology$Stub,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.chrono.ISOChronology$Stub.<init>(DateTimeZone),6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology$Stub,readResolve,() → java.lang.Object,org.joda.time.chrono.ISOChronology$Stub.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology$Stub,writeObject,(java.io.ObjectOutputStream) → void,org.joda.time.chrono.ISOChronology$Stub.writeObject(ObjectOutputStream),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/ISOChronology$Stub,readObject,(java.io.ObjectInputStream) → void,org.joda.time.chrono.ISOChronology$Stub.readObject(ObjectInputStream),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,<init>,(org.joda.time.chrono.BasicChronology) → void,org.joda.time.chrono.BasicWeekyearDateTimeField.<init>(BasicChronology),0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,isLenient,() → boolean,org.joda.time.chrono.BasicWeekyearDateTimeField.isLenient(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,get,(long) → int,org.joda.time.chrono.BasicWeekyearDateTimeField.get(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,add,"(long, int) → long","org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,int)",2,11,0.8461538461538461,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,add,"(long, long) → long","org.joda.time.chrono.BasicWeekyearDateTimeField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,addWrapField,"(long, int) → long","org.joda.time.chrono.BasicWeekyearDateTimeField.addWrapField(long,int)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)",53,0,0.0,8,0,0.0,5,12,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,set,"(long, int) → long","org.joda.time.chrono.BasicWeekyearDateTimeField.set(long,int)",13,88,0.8712871287128713,4,6,0.6,6,4,19,0.8260869565217391,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicWeekyearDateTimeField.getRangeDurationField(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,isLeap,(long) → boolean,org.joda.time.chrono.BasicWeekyearDateTimeField.isLeap(long),13,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,getLeapAmount,(long) → int,org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapAmount(long),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.BasicWeekyearDateTimeField.getLeapDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.BasicWeekyearDateTimeField.getMinimumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.BasicWeekyearDateTimeField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.BasicWeekyearDateTimeField.roundFloor(long),0,25,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,remainder,(long) → long,org.joda.time.chrono.BasicWeekyearDateTimeField.remainder(long),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/BasicWeekyearDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.BasicWeekyearDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,getInstanceUTC,() → org.joda.time.chrono.EthiopicChronology,org.joda.time.chrono.EthiopicChronology.getInstanceUTC(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,getInstance,() → org.joda.time.chrono.EthiopicChronology,org.joda.time.chrono.EthiopicChronology.getInstance(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.EthiopicChronology,org.joda.time.chrono.EthiopicChronology.getInstance(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,getInstance,"(org.joda.time.DateTimeZone, int) → org.joda.time.chrono.EthiopicChronology","org.joda.time.chrono.EthiopicChronology.getInstance(DateTimeZone,int)",4,111,0.9652173913043478,3,9,0.75,7,2,26,0.9285714285714286,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, int) → void","org.joda.time.chrono.EthiopicChronology.<init>(Chronology,Object,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,readResolve,() → java.lang.Object,org.joda.time.chrono.EthiopicChronology.readResolve(),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.EthiopicChronology.withUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.EthiopicChronology.withZone(DateTimeZone),0,13,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,isLeapDay,(long) → boolean,org.joda.time.chrono.EthiopicChronology.isLeapDay(long),15,0,0.0,4,0,0.0,3,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,calculateFirstDayOfYearMillis,(int) → long,org.joda.time.chrono.EthiopicChronology.calculateFirstDayOfYearMillis(int),9,27,0.75,3,1,0.25,3,3,5,0.625,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,getMinYear,() → int,org.joda.time.chrono.EthiopicChronology.getMinYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,getMaxYear,() → int,org.joda.time.chrono.EthiopicChronology.getMaxYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,getApproxMillisAtEpochDividedByTwo,() → long,org.joda.time.chrono.EthiopicChronology.getApproxMillisAtEpochDividedByTwo(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.EthiopicChronology.assemble(Fields),0,38,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/EthiopicChronology,<clinit>,() → void,org.joda.time.chrono.EthiopicChronology.<clinit>(),0,13,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,convertByYear,"(long, org.joda.time.Chronology, org.joda.time.Chronology) → long","org.joda.time.chrono.GJChronology.convertByYear(long,Chronology,Chronology)",0,19,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,convertByWeekyear,"(long, org.joda.time.Chronology, org.joda.time.Chronology) → long","org.joda.time.chrono.GJChronology.convertByWeekyear(long,Chronology,Chronology)",38,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getInstanceUTC,() → org.joda.time.chrono.GJChronology,org.joda.time.chrono.GJChronology.getInstanceUTC(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getInstance,() → org.joda.time.chrono.GJChronology,org.joda.time.chrono.GJChronology.getInstance(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.GJChronology,org.joda.time.chrono.GJChronology.getInstance(DateTimeZone),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getInstance,"(org.joda.time.DateTimeZone, org.joda.time.ReadableInstant) → org.joda.time.chrono.GJChronology","org.joda.time.chrono.GJChronology.getInstance(DateTimeZone,ReadableInstant)",0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getInstance,"(org.joda.time.DateTimeZone, org.joda.time.ReadableInstant, int) → org.joda.time.chrono.GJChronology","org.joda.time.chrono.GJChronology.getInstance(DateTimeZone,ReadableInstant,int)",7,79,0.9186046511627907,2,8,0.8,6,2,19,0.9047619047619048,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getInstance,"(org.joda.time.DateTimeZone, long, int) → org.joda.time.chrono.GJChronology","org.joda.time.chrono.GJChronology.getInstance(DateTimeZone,long,int)",3,15,0.8333333333333334,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,<init>,"(org.joda.time.chrono.JulianChronology, org.joda.time.chrono.GregorianChronology, org.joda.time.Instant) → void","org.joda.time.chrono.GJChronology.<init>(JulianChronology,GregorianChronology,Instant)",0,18,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,<init>,"(org.joda.time.Chronology, org.joda.time.chrono.JulianChronology, org.joda.time.chrono.GregorianChronology, org.joda.time.Instant) → void","org.joda.time.chrono.GJChronology.<init>(Chronology,JulianChronology,GregorianChronology,Instant)",0,18,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,readResolve,() → java.lang.Object,org.joda.time.chrono.GJChronology.readResolve(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getZone,() → org.joda.time.DateTimeZone,org.joda.time.chrono.GJChronology.getZone(),0,10,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.GJChronology.withUTC(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.GJChronology.withZone(DateTimeZone),2,15,0.8823529411764706,1,3,0.75,3,1,4,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getDateTimeMillis,"(int, int, int, int) → long","org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int)",45,0,0.0,6,0,0.0,4,10,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getDateTimeMillis,"(int, int, int, int, int, int, int) → long","org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)",82,0,0.0,12,0,0.0,7,19,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getGregorianCutover,() → org.joda.time.Instant,org.joda.time.chrono.GJChronology.getGregorianCutover(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,getMinimumDaysInFirstWeek,() → int,org.joda.time.chrono.GJChronology.getMinimumDaysInFirstWeek(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,equals,(java.lang.Object) → boolean,org.joda.time.chrono.GJChronology.equals(Object),13,21,0.6176470588235294,5,5,0.5,6,1,7,0.875,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,hashCode,() → int,org.joda.time.chrono.GJChronology.hashCode(),16,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,toString,() → java.lang.String,org.joda.time.chrono.GJChronology.toString(),12,59,0.8309859154929577,3,3,0.5,4,3,12,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.GJChronology.assemble(Fields),4,382,0.9896373056994818,1,5,0.8333333333333334,4,1,55,0.9821428571428571,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,julianToGregorianByYear,(long) → long,org.joda.time.chrono.GJChronology.julianToGregorianByYear(long),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,gregorianToJulianByYear,(long) → long,org.joda.time.chrono.GJChronology.gregorianToJulianByYear(long),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,julianToGregorianByWeekyear,(long) → long,org.joda.time.chrono.GJChronology.julianToGregorianByWeekyear(long),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,gregorianToJulianByWeekyear,(long) → long,org.joda.time.chrono.GJChronology.gregorianToJulianByWeekyear(long),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology,<clinit>,() → void,org.joda.time.chrono.GJChronology.<clinit>(),0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,<init>,"(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long) → void","org.joda.time.chrono.GJChronology$CutoverField.<init>(GJChronology,DateTimeField,DateTimeField,long)",0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,<init>,"(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long, boolean) → void","org.joda.time.chrono.GJChronology$CutoverField.<init>(GJChronology,DateTimeField,DateTimeField,long,boolean)",0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,<init>,"(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, org.joda.time.DurationField, long, boolean) → void","org.joda.time.chrono.GJChronology$CutoverField.<init>(GJChronology,DateTimeField,DateTimeField,DurationField,long,boolean)",0,37,1.0,0,4,1.0,3,0,13,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,isLenient,() → boolean,org.joda.time.chrono.GJChronology$CutoverField.isLenient(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,get,(long) → int,org.joda.time.chrono.GJChronology$CutoverField.get(long),0,15,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getAsText,"(long, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJChronology$CutoverField.getAsText(long,Locale)",17,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJChronology$CutoverField.getAsText(int,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getAsShortText,"(long, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(long,Locale)",17,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getAsShortText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJChronology$CutoverField.getAsShortText(int,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,add,"(long, int) → long","org.joda.time.chrono.GJChronology$CutoverField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,add,"(long, long) → long","org.joda.time.chrono.GJChronology$CutoverField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,add,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.chrono.GJChronology$CutoverField.add(ReadablePartial,int,int[],int)",49,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getDifference,"(long, long) → int","org.joda.time.chrono.GJChronology$CutoverField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getDifferenceAsLong,"(long, long) → long","org.joda.time.chrono.GJChronology$CutoverField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,set,"(long, int) → long","org.joda.time.chrono.GJChronology$CutoverField.set(long,int)",40,47,0.5402298850574713,7,7,0.5,8,7,9,0.5625,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.chrono.GJChronology$CutoverField.set(long,String,Locale)",58,0,0.0,10,0,0.0,6,10,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.GJChronology$CutoverField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.GJChronology$CutoverField.getRangeDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,isLeap,(long) → boolean,org.joda.time.chrono.GJChronology$CutoverField.isLeap(long),15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getLeapAmount,(long) → int,org.joda.time.chrono.GJChronology$CutoverField.getLeapAmount(long),15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.GJChronology$CutoverField.getLeapDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMinimumValue,() → int,org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMinimumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(ReadablePartial),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMinimumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(ReadablePartial,int[])",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMinimumValue,(long) → int,org.joda.time.chrono.GJChronology$CutoverField.getMinimumValue(long),34,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMaximumValue,() → int,org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMaximumValue,(long) → int,org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(long),38,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(ReadablePartial),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.chrono.GJChronology$CutoverField.getMaximumValue(ReadablePartial,int[])",38,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,roundFloor,(long) → long,org.joda.time.chrono.GJChronology$CutoverField.roundFloor(long),14,22,0.6111111111111112,3,3,0.5,4,2,5,0.7142857142857143,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,roundCeiling,(long) → long,org.joda.time.chrono.GJChronology$CutoverField.roundCeiling(long),36,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.GJChronology$CutoverField.getMaximumTextLength(Locale),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.chrono.GJChronology$CutoverField.getMaximumShortTextLength(Locale),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,julianToGregorian,(long) → long,org.joda.time.chrono.GJChronology$CutoverField.julianToGregorian(long),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJChronology$CutoverField,gregorianToJulian,(long) → long,org.joda.time.chrono.GJChronology$CutoverField.gregorianToJulian(long),5,8,0.6153846153846154,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getInstanceUTC,() → org.joda.time.chrono.GregorianChronology,org.joda.time.chrono.GregorianChronology.getInstanceUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getInstance,() → org.joda.time.chrono.GregorianChronology,org.joda.time.chrono.GregorianChronology.getInstance(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getInstance,(org.joda.time.DateTimeZone) → org.joda.time.chrono.GregorianChronology,org.joda.time.chrono.GregorianChronology.getInstance(DateTimeZone),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getInstance,"(org.joda.time.DateTimeZone, int) → org.joda.time.chrono.GregorianChronology","org.joda.time.chrono.GregorianChronology.getInstance(DateTimeZone,int)",17,76,0.8172043010752689,3,9,0.75,7,4,20,0.8333333333333334,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,<init>,"(org.joda.time.Chronology, java.lang.Object, int) → void","org.joda.time.chrono.GregorianChronology.<init>(Chronology,Object,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,readResolve,() → java.lang.Object,org.joda.time.chrono.GregorianChronology.readResolve(),23,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,withUTC,() → org.joda.time.Chronology,org.joda.time.chrono.GregorianChronology.withUTC(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,withZone,(org.joda.time.DateTimeZone) → org.joda.time.Chronology,org.joda.time.chrono.GregorianChronology.withZone(DateTimeZone),2,11,0.8461538461538461,1,3,0.75,3,1,4,0.8,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,assemble,(org.joda.time.chrono.AssembledChronology$Fields) → void,org.joda.time.chrono.GregorianChronology.assemble(Fields),0,7,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,isLeapYear,(int) → boolean,org.joda.time.chrono.GregorianChronology.isLeapYear(int),0,16,1.0,1,5,0.8333333333333334,4,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,calculateFirstDayOfYearMillis,(int) → long,org.joda.time.chrono.GregorianChronology.calculateFirstDayOfYearMillis(int),0,50,1.0,0,4,1.0,3,0,7,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getMinYear,() → int,org.joda.time.chrono.GregorianChronology.getMinYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getMaxYear,() → int,org.joda.time.chrono.GregorianChronology.getMaxYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getAverageMillisPerYear,() → long,org.joda.time.chrono.GregorianChronology.getAverageMillisPerYear(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getAverageMillisPerYearDividedByTwo,() → long,org.joda.time.chrono.GregorianChronology.getAverageMillisPerYearDividedByTwo(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getAverageMillisPerMonth,() → long,org.joda.time.chrono.GregorianChronology.getAverageMillisPerMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,getApproxMillisAtEpochDividedByTwo,() → long,org.joda.time.chrono.GregorianChronology.getApproxMillisAtEpochDividedByTwo(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GregorianChronology,<clinit>,() → void,org.joda.time.chrono.GregorianChronology.<clinit>(),0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJMonthOfYearDateTimeField,<init>,(org.joda.time.chrono.BasicChronology) → void,org.joda.time.chrono.GJMonthOfYearDateTimeField.<init>(BasicChronology),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJMonthOfYearDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsText(int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJMonthOfYearDateTimeField,getAsShortText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJMonthOfYearDateTimeField.getAsShortText(int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJMonthOfYearDateTimeField,convertText,"(java.lang.String, java.util.Locale) → int","org.joda.time.chrono.GJMonthOfYearDateTimeField.convertText(String,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJMonthOfYearDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJMonthOfYearDateTimeField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.chrono.GJMonthOfYearDateTimeField.getMaximumShortTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,<init>,(org.joda.time.chrono.BasicChronology) → void,org.joda.time.chrono.GJEraDateTimeField.<init>(BasicChronology),0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,isLenient,() → boolean,org.joda.time.chrono.GJEraDateTimeField.isLenient(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,get,(long) → int,org.joda.time.chrono.GJEraDateTimeField.get(long),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.chrono.GJEraDateTimeField.getAsText(int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,set,"(long, int) → long","org.joda.time.chrono.GJEraDateTimeField.set(long,int)",21,5,0.19230769230769232,2,0,0.0,2,5,1,0.16666666666666666,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.chrono.GJEraDateTimeField.set(long,String,Locale)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,roundFloor,(long) → long,org.joda.time.chrono.GJEraDateTimeField.roundFloor(long),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,roundCeiling,(long) → long,org.joda.time.chrono.GJEraDateTimeField.roundCeiling(long),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,roundHalfFloor,(long) → long,org.joda.time.chrono.GJEraDateTimeField.roundHalfFloor(long),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.chrono.GJEraDateTimeField.roundHalfCeiling(long),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,roundHalfEven,(long) → long,org.joda.time.chrono.GJEraDateTimeField.roundHalfEven(long),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.GJEraDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.chrono.GJEraDateTimeField.getRangeDurationField(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,getMinimumValue,() → int,org.joda.time.chrono.GJEraDateTimeField.getMinimumValue(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,getMaximumValue,() → int,org.joda.time.chrono.GJEraDateTimeField.getMaximumValue(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.chrono.GJEraDateTimeField.getMaximumTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/chrono,org/joda/time/chrono/GJEraDateTimeField,readResolve,() → java.lang.Object,org.joda.time.chrono.GJEraDateTimeField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$RuleSet,<init>,(org.joda.time.tz.ZoneInfoCompiler$Rule) → void,org.joda.time.tz.ZoneInfoCompiler$RuleSet.<init>(Rule),13,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$RuleSet,addRule,(org.joda.time.tz.ZoneInfoCompiler$Rule) → void,org.joda.time.tz.ZoneInfoCompiler$RuleSet.addRule(Rule),21,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$RuleSet,addRecurring,"(org.joda.time.tz.DateTimeZoneBuilder, int, java.lang.String) → void","org.joda.time.tz.ZoneInfoCompiler$RuleSet.addRecurring(DateTimeZoneBuilder,int,String)",117,0,0.0,14,0,0.0,8,20,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,<init>,() → void,org.joda.time.tz.DefaultNameProvider.<init>(),0,11,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,getShortName,"(java.util.Locale, java.lang.String, java.lang.String) → java.lang.String","org.joda.time.tz.DefaultNameProvider.getShortName(Locale,String,String)",14,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,getName,"(java.util.Locale, java.lang.String, java.lang.String) → java.lang.String","org.joda.time.tz.DefaultNameProvider.getName(Locale,String,String)",14,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,getNameSet,"(java.util.Locale, java.lang.String, java.lang.String) → java.lang.String[]","org.joda.time.tz.DefaultNameProvider.getNameSet(Locale,String,String)",200,0,0.0,32,0,0.0,17,26,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,getShortName,"(java.util.Locale, java.lang.String, java.lang.String, boolean) → java.lang.String","org.joda.time.tz.DefaultNameProvider.getShortName(Locale,String,String,boolean)",0,15,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,getName,"(java.util.Locale, java.lang.String, java.lang.String, boolean) → java.lang.String","org.joda.time.tz.DefaultNameProvider.getName(Locale,String,String,boolean)",15,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,getNameSet,"(java.util.Locale, java.lang.String, java.lang.String, boolean) → java.lang.String[]","org.joda.time.tz.DefaultNameProvider.getNameSet(Locale,String,String,boolean)",4,165,0.9763313609467456,10,22,0.6875,17,1,25,0.9615384615384616,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DefaultNameProvider,createCache,() → java.util.HashMap,org.joda.time.tz.DefaultNameProvider.createCache(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,forZone,(org.joda.time.DateTimeZone) → org.joda.time.tz.CachedDateTimeZone,org.joda.time.tz.CachedDateTimeZone.forZone(DateTimeZone),3,8,0.7272727272727273,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.tz.CachedDateTimeZone.<init>(DateTimeZone),0,14,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,getUncachedZone,() → org.joda.time.DateTimeZone,org.joda.time.tz.CachedDateTimeZone.getUncachedZone(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,getNameKey,(long) → java.lang.String,org.joda.time.tz.CachedDateTimeZone.getNameKey(long),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,getOffset,(long) → int,org.joda.time.tz.CachedDateTimeZone.getOffset(long),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,getStandardOffset,(long) → int,org.joda.time.tz.CachedDateTimeZone.getStandardOffset(long),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,isFixed,() → boolean,org.joda.time.tz.CachedDateTimeZone.isFixed(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,nextTransition,(long) → long,org.joda.time.tz.CachedDateTimeZone.nextTransition(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,previousTransition,(long) → long,org.joda.time.tz.CachedDateTimeZone.previousTransition(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,hashCode,() → int,org.joda.time.tz.CachedDateTimeZone.hashCode(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,equals,(java.lang.Object) → boolean,org.joda.time.tz.CachedDateTimeZone.equals(Object),0,17,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,getInfo,(long) → org.joda.time.tz.CachedDateTimeZone$Info,org.joda.time.tz.CachedDateTimeZone.getInfo(long),0,35,1.0,0,4,1.0,3,0,8,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,createInfo,(long) → org.joda.time.tz.CachedDateTimeZone$Info,org.joda.time.tz.CachedDateTimeZone.createInfo(long),0,46,1.0,0,4,1.0,3,0,11,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone,<clinit>,() → void,org.joda.time.tz.CachedDateTimeZone.<clinit>(),21,14,0.4,3,1,0.25,3,9,6,0.4,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,readFrom,"(java.io.DataInput, java.lang.String) → org.joda.time.tz.DateTimeZoneBuilder$DSTZone","org.joda.time.tz.DateTimeZoneBuilder$DSTZone.readFrom(DataInput,String)",0,12,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,<init>,"(java.lang.String, int, org.joda.time.tz.DateTimeZoneBuilder$Recurrence, org.joda.time.tz.DateTimeZoneBuilder$Recurrence) → void","org.joda.time.tz.DateTimeZoneBuilder$DSTZone.<init>(String,int,Recurrence,Recurrence)",0,13,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,getNameKey,(long) → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getNameKey(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,getOffset,(long) → int,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getOffset(long),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,getStandardOffset,(long) → int,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.getStandardOffset(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,isFixed,() → boolean,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.isFixed(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,nextTransition,(long) → long,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long),12,55,0.8208955223880597,3,7,0.7,6,7,15,0.6818181818181818,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,previousTransition,(long) → long,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long),26,47,0.6438356164383562,6,4,0.4,6,10,13,0.5652173913043478,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,equals,(java.lang.Object) → boolean,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(Object),40,0,0.0,12,0,0.0,7,9,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,hashCode,() → int,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.hashCode(),20,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,writeTo,(java.io.DataOutput) → void,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.writeTo(DataOutput),14,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,(long) → org.joda.time.tz.DateTimeZoneBuilder$Recurrence,org.joda.time.tz.DateTimeZoneBuilder$DSTZone.findMatchingRecurrence(long),10,37,0.7872340425531915,0,2,1.0,2,6,12,0.6666666666666666,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,readFrom,(java.io.DataInput) → org.joda.time.tz.DateTimeZoneBuilder$Recurrence,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.readFrom(DataInput),0,11,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,<init>,"(org.joda.time.tz.DateTimeZoneBuilder$OfYear, java.lang.String, int) → void","org.joda.time.tz.DateTimeZoneBuilder$Recurrence.<init>(OfYear,String,int)",0,12,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,getOfYear,() → org.joda.time.tz.DateTimeZoneBuilder$OfYear,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getOfYear(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,next,"(long, int, int) → long","org.joda.time.tz.DateTimeZoneBuilder$Recurrence.next(long,int,int)",0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,previous,"(long, int, int) → long","org.joda.time.tz.DateTimeZoneBuilder$Recurrence.previous(long,int,int)",0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,getNameKey,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getNameKey(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,getSaveMillis,() → int,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.getSaveMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,equals,(java.lang.Object) → boolean,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(Object),34,0,0.0,10,0,0.0,6,8,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,hashCode,() → int,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.hashCode(),20,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,writeTo,(java.io.DataOutput) → void,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.writeTo(DataOutput),14,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,rename,(java.lang.String) → org.joda.time.tz.DateTimeZoneBuilder$Recurrence,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.rename(String),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,renameAppend,(java.lang.String) → org.joda.time.tz.DateTimeZoneBuilder$Recurrence,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.renameAppend(String),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Recurrence,toString,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$Recurrence.toString(),18,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,<init>,() → void,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.<init>(),12,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,<init>,(org.joda.time.tz.DateTimeZoneBuilder$RuleSet) → void,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.<init>(RuleSet),30,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,getStandardOffset,() → int,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getStandardOffset(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,setStandardOffset,(int) → void,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setStandardOffset(int),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,setFixedSavings,"(java.lang.String, int) → void","org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setFixedSavings(String,int)",7,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,addRule,(org.joda.time.tz.DateTimeZoneBuilder$Rule) → void,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.addRule(Rule),11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,setUpperLimit,"(int, org.joda.time.tz.DateTimeZoneBuilder$OfYear) → void","org.joda.time.tz.DateTimeZoneBuilder$RuleSet.setUpperLimit(int,OfYear)",7,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,firstTransition,(long) → org.joda.time.tz.DateTimeZoneBuilder$Transition,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.firstTransition(long),108,0,0.0,16,0,0.0,9,24,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,nextTransition,"(long, int) → org.joda.time.tz.DateTimeZoneBuilder$Transition","org.joda.time.tz.DateTimeZoneBuilder$RuleSet.nextTransition(long,int)",79,0,0.0,14,0,0.0,8,24,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,getUpperLimit,(int) → long,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.getUpperLimit(int),15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,buildTailZone,(java.lang.String) → org.joda.time.tz.DateTimeZoneBuilder$DSTZone,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(String),38,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,toString,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.toString(),33,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$RuleSet,<clinit>,() → void,org.joda.time.tz.DateTimeZoneBuilder$RuleSet.<clinit>(),10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,<init>,"(org.joda.time.tz.DateTimeZoneBuilder$Recurrence, int, int) → void","org.joda.time.tz.DateTimeZoneBuilder$Rule.<init>(Recurrence,int,int)",12,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,getFromYear,() → int,org.joda.time.tz.DateTimeZoneBuilder$Rule.getFromYear(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,getToYear,() → int,org.joda.time.tz.DateTimeZoneBuilder$Rule.getToYear(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,getOfYear,() → org.joda.time.tz.DateTimeZoneBuilder$OfYear,org.joda.time.tz.DateTimeZoneBuilder$Rule.getOfYear(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,getNameKey,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$Rule.getNameKey(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,getSaveMillis,() → int,org.joda.time.tz.DateTimeZoneBuilder$Rule.getSaveMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,next,"(long, int, int) → long","org.joda.time.tz.DateTimeZoneBuilder$Rule.next(long,int,int)",68,0,0.0,8,0,0.0,5,15,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Rule,toString,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$Rule.toString(),18,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,readFrom,"(java.io.InputStream, java.lang.String) → org.joda.time.DateTimeZone","org.joda.time.tz.DateTimeZoneBuilder.readFrom(InputStream,String)",5,10,0.6666666666666666,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,readFrom,"(java.io.DataInput, java.lang.String) → org.joda.time.DateTimeZone","org.joda.time.tz.DateTimeZoneBuilder.readFrom(DataInput,String)",11,27,0.7105263157894737,3,3,0.5,5,3,6,0.6666666666666666,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,writeMillis,"(java.io.DataOutput, long) → void","org.joda.time.tz.DateTimeZoneBuilder.writeMillis(DataOutput,long)",100,0,0.0,14,0,0.0,8,19,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,readMillis,(java.io.DataInput) → long,org.joda.time.tz.DateTimeZoneBuilder.readMillis(DataInput),0,92,1.0,0,4,1.0,4,0,16,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,buildFixedZone,"(java.lang.String, java.lang.String, int, int) → org.joda.time.DateTimeZone","org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(String,String,int,int)",22,0,0.0,8,0,0.0,5,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,<init>,() → void,org.joda.time.tz.DateTimeZoneBuilder.<init>(),0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,addCutover,"(int, char, int, int, int, boolean, int) → org.joda.time.tz.DateTimeZoneBuilder","org.joda.time.tz.DateTimeZoneBuilder.addCutover(int,char,int,int,int,boolean,int)",37,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,setStandardOffset,(int) → org.joda.time.tz.DateTimeZoneBuilder,org.joda.time.tz.DateTimeZoneBuilder.setStandardOffset(int),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,setFixedSavings,"(java.lang.String, int) → org.joda.time.tz.DateTimeZoneBuilder","org.joda.time.tz.DateTimeZoneBuilder.setFixedSavings(String,int)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,addRecurringSavings,"(java.lang.String, int, int, int, char, int, int, int, boolean, int) → org.joda.time.tz.DateTimeZoneBuilder","org.joda.time.tz.DateTimeZoneBuilder.addRecurringSavings(String,int,int,int,char,int,int,int,boolean,int)",33,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,getLastRuleSet,() → org.joda.time.tz.DateTimeZoneBuilder$RuleSet,org.joda.time.tz.DateTimeZoneBuilder.getLastRuleSet(),24,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,toDateTimeZone,"(java.lang.String, boolean) → org.joda.time.DateTimeZone","org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(String,boolean)",140,0,0.0,26,0,0.0,14,36,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,addTransition,"(java.util.ArrayList, org.joda.time.tz.DateTimeZoneBuilder$Transition) → boolean","org.joda.time.tz.DateTimeZoneBuilder.addTransition(ArrayList,Transition)",79,0,0.0,8,0,0.0,5,19,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,writeTo,"(java.lang.String, java.io.OutputStream) → void","org.joda.time.tz.DateTimeZoneBuilder.writeTo(String,OutputStream)",21,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder,writeTo,"(java.lang.String, java.io.DataOutput) → void","org.joda.time.tz.DateTimeZoneBuilder.writeTo(String,DataOutput)",48,0,0.0,4,0,0.0,3,12,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Rule,<init>,(java.util.StringTokenizer) → void,org.joda.time.tz.ZoneInfoCompiler$Rule.<init>(StringTokenizer),60,0,0.0,4,0,0.0,3,13,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Rule,<init>,(org.joda.time.tz.ZoneInfoCompiler$Rule) → void,org.joda.time.tz.ZoneInfoCompiler$Rule.<init>(Rule),28,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Rule,addRecurring,"(org.joda.time.tz.DateTimeZoneBuilder, int, int, java.lang.String) → void","org.joda.time.tz.ZoneInfoCompiler$Rule.addRecurring(DateTimeZoneBuilder,int,int,String)",24,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Rule,formatName,"(java.lang.String, int, int, java.lang.String) → java.lang.String","org.joda.time.tz.ZoneInfoCompiler$Rule.formatName(String,int,int,String)",74,0,0.0,12,0,0.0,7,16,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Rule,formatOffset,(int) → java.lang.String,org.joda.time.tz.ZoneInfoCompiler$Rule.formatOffset(int),68,0,0.0,6,0,0.0,4,10,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Rule,twoDigitString,(int) → java.lang.String,org.joda.time.tz.ZoneInfoCompiler$Rule.twoDigitString(int),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Rule,toString,() → java.lang.String,org.joda.time.tz.ZoneInfoCompiler$Rule.toString(),42,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/UTCProvider,<init>,() → void,org.joda.time.tz.UTCProvider.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/UTCProvider,getZone,(java.lang.String) → org.joda.time.DateTimeZone,org.joda.time.tz.UTCProvider.getZone(String),0,8,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/UTCProvider,getAvailableIDs,() → java.util.Set,org.joda.time.tz.UTCProvider.getAvailableIDs(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/UTCProvider,<clinit>,() → void,org.joda.time.tz.UTCProvider.<clinit>(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,<init>,"(long, org.joda.time.tz.DateTimeZoneBuilder$Transition) → void","org.joda.time.tz.DateTimeZoneBuilder$Transition.<init>(long,Transition)",18,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,<init>,"(long, org.joda.time.tz.DateTimeZoneBuilder$Rule, int) → void","org.joda.time.tz.DateTimeZoneBuilder$Transition.<init>(long,Rule,int)",19,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,<init>,"(long, java.lang.String, int, int) → void","org.joda.time.tz.DateTimeZoneBuilder$Transition.<init>(long,String,int,int)",15,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,getMillis,() → long,org.joda.time.tz.DateTimeZoneBuilder$Transition.getMillis(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,getNameKey,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$Transition.getNameKey(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,getWallOffset,() → int,org.joda.time.tz.DateTimeZoneBuilder$Transition.getWallOffset(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,getStandardOffset,() → int,org.joda.time.tz.DateTimeZoneBuilder$Transition.getStandardOffset(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,getSaveMillis,() → int,org.joda.time.tz.DateTimeZoneBuilder$Transition.getSaveMillis(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,withMillis,(long) → org.joda.time.tz.DateTimeZoneBuilder$Transition,org.joda.time.tz.DateTimeZoneBuilder$Transition.withMillis(long),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,isTransitionFrom,(org.joda.time.tz.DateTimeZoneBuilder$Transition) → boolean,org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(Transition),30,0,0.0,10,0,0.0,6,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$Transition,toString,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$Transition.toString(),22,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,readFrom,"(java.io.DataInput, java.lang.String) → org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone","org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.readFrom(DataInput,String)",9,90,0.9090909090909091,1,7,0.875,5,3,21,0.875,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,create,"(java.lang.String, boolean, java.util.ArrayList, org.joda.time.tz.DateTimeZoneBuilder$DSTZone) → org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone","org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(String,boolean,ArrayList,DSTZone)",339,0,0.0,46,0,0.0,24,58,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,<init>,"(java.lang.String, long[], int[], int[], java.lang.String[], org.joda.time.tz.DateTimeZoneBuilder$DSTZone) → void","org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.<init>(String,long[],int[],int[],String[],DSTZone)",0,19,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,getNameKey,(long) → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getNameKey(long),48,0,0.0,8,0,0.0,5,12,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,getOffset,(long) → int,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getOffset(long),7,41,0.8541666666666666,2,6,0.75,5,2,10,0.8333333333333334,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,getStandardOffset,(long) → int,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.getStandardOffset(long),48,0,0.0,8,0,0.0,5,12,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,isFixed,() → boolean,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isFixed(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,nextTransition,(long) → long,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.nextTransition(long),2,46,0.9583333333333334,1,7,0.875,5,1,10,0.9090909090909091,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,previousTransition,(long) → long,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.previousTransition(long),26,49,0.6533333333333333,8,8,0.5,9,7,14,0.6666666666666666,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,equals,(java.lang.Object) → boolean,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(Object),44,17,0.2786885245901639,17,3,0.15,11,6,6,0.5,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,hashCode,() → int,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.hashCode(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,writeTo,(java.io.DataOutput) → void,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.writeTo(DataOutput),142,0,0.0,20,0,0.0,11,30,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$PrecalculatedZone,isCachable,() → boolean,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.isCachable(),65,0,0.0,12,0,0.0,7,18,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone$Info,<init>,"(org.joda.time.DateTimeZone, long) → void","org.joda.time.tz.CachedDateTimeZone$Info.<init>(DateTimeZone,long)",0,15,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone$Info,getNameKey,(long) → java.lang.String,org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long),27,0,0.0,6,0,0.0,4,5,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone$Info,getOffset,(long) → int,org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long),0,28,1.0,0,6,1.0,4,0,5,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/CachedDateTimeZone$Info,getStandardOffset,(long) → int,org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long),28,0,0.0,6,0,0.0,4,5,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,<init>,"(java.lang.String, java.lang.String, int, int) → void","org.joda.time.tz.FixedDateTimeZone.<init>(String,String,int,int)",0,13,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,getNameKey,(long) → java.lang.String,org.joda.time.tz.FixedDateTimeZone.getNameKey(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,getOffset,(long) → int,org.joda.time.tz.FixedDateTimeZone.getOffset(long),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,getStandardOffset,(long) → int,org.joda.time.tz.FixedDateTimeZone.getStandardOffset(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,getOffsetFromLocal,(long) → int,org.joda.time.tz.FixedDateTimeZone.getOffsetFromLocal(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,isFixed,() → boolean,org.joda.time.tz.FixedDateTimeZone.isFixed(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,nextTransition,(long) → long,org.joda.time.tz.FixedDateTimeZone.nextTransition(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,previousTransition,(long) → long,org.joda.time.tz.FixedDateTimeZone.previousTransition(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,toTimeZone,() → java.util.TimeZone,org.joda.time.tz.FixedDateTimeZone.toTimeZone(),12,22,0.6470588235294118,4,2,0.3333333333333333,4,1,3,0.75,0,1,1.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,equals,(java.lang.Object) → boolean,org.joda.time.tz.FixedDateTimeZone.equals(Object),3,30,0.9090909090909091,4,6,0.6,6,1,6,0.8571428571428571,0,1,1.0
org/joda/time/tz,org/joda/time/tz/FixedDateTimeZone,hashCode,() → int,org.joda.time.tz.FixedDateTimeZone.hashCode(),0,14,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoLogger$1,<init>,() → void,org.joda.time.tz.ZoneInfoLogger$1.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoLogger$1,initialValue,() → java.lang.Boolean,org.joda.time.tz.ZoneInfoLogger$1.initialValue(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear,<init>,() → void,org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.<init>(),21,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear,<init>,(java.util.StringTokenizer) → void,org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.<init>(StringTokenizer),200,0,0.0,26,0,0.0,14,54,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear,addRecurring,"(org.joda.time.tz.DateTimeZoneBuilder, java.lang.String, int, int, int) → void","org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.addRecurring(DateTimeZoneBuilder,String,int,int,int)",20,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear,addCutover,"(org.joda.time.tz.DateTimeZoneBuilder, int) → void","org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.addCutover(DateTimeZoneBuilder,int)",17,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$DateTimeOfYear,toString,() → java.lang.String,org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear.toString(),37,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Zone,<init>,(java.util.StringTokenizer) → void,org.joda.time.tz.ZoneInfoCompiler$Zone.<init>(StringTokenizer),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Zone,<init>,"(java.lang.String, java.util.StringTokenizer) → void","org.joda.time.tz.ZoneInfoCompiler$Zone.<init>(String,StringTokenizer)",47,0,0.0,4,0,0.0,3,14,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Zone,chain,(java.util.StringTokenizer) → void,org.joda.time.tz.ZoneInfoCompiler$Zone.chain(StringTokenizer),17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Zone,addToBuilder,"(org.joda.time.tz.DateTimeZoneBuilder, java.util.Map) → void","org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(DateTimeZoneBuilder,Map)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Zone,addToBuilder,"(org.joda.time.tz.ZoneInfoCompiler$Zone, org.joda.time.tz.DateTimeZoneBuilder, java.util.Map) → void","org.joda.time.tz.ZoneInfoCompiler$Zone.addToBuilder(Zone,DateTimeZoneBuilder,Map)",78,0,0.0,8,0,0.0,5,17,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler$Zone,toString,() → java.lang.String,org.joda.time.tz.ZoneInfoCompiler$Zone.toString(),53,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider$1,<init>,"(org.joda.time.tz.ZoneInfoProvider, java.lang.String) → void","org.joda.time.tz.ZoneInfoProvider$1.<init>(ZoneInfoProvider,String)",0,9,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider$1,run,() → java.io.InputStream,org.joda.time.tz.ZoneInfoProvider$1.run(),4,11,0.7333333333333333,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoLogger,<init>,() → void,org.joda.time.tz.ZoneInfoLogger.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoLogger,verbose,() → boolean,org.joda.time.tz.ZoneInfoLogger.verbose(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoLogger,set,(boolean) → void,org.joda.time.tz.ZoneInfoLogger.set(boolean),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoLogger,<clinit>,() → void,org.joda.time.tz.ZoneInfoLogger.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,put,"(java.util.Set, int, java.util.Map) → void","org.joda.time.tz.ZoneInfoCompiler.put(Set,int,Map)",0,15,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,expand,"(java.lang.String, java.lang.String) → java.util.Set","org.joda.time.tz.ZoneInfoCompiler.expand(String,String)",0,29,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,main,(java.lang.String[]) → void,org.joda.time.tz.ZoneInfoCompiler.main(String[]),8,122,0.9384615384615385,1,21,0.9545454545454546,12,4,28,0.875,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,printUsage,() → void,org.joda.time.tz.ZoneInfoCompiler.printUsage(),0,16,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,getStartOfYear,() → org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear,org.joda.time.tz.ZoneInfoCompiler.getStartOfYear(),8,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,getLenientISOChronology,() → org.joda.time.Chronology,org.joda.time.tz.ZoneInfoCompiler.getLenientISOChronology(),7,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,writeZoneInfoMap,"(java.io.DataOutputStream, java.util.Map) → void","org.joda.time.tz.ZoneInfoCompiler.writeZoneInfoMap(DataOutputStream,Map)",159,0,0.0,16,0,0.0,9,33,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,parseYear,"(java.lang.String, int) → int","org.joda.time.tz.ZoneInfoCompiler.parseYear(String,int)",0,25,1.0,0,6,1.0,4,0,8,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,parseMonth,(java.lang.String) → int,org.joda.time.tz.ZoneInfoCompiler.parseMonth(String),24,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,parseDayOfWeek,(java.lang.String) → int,org.joda.time.tz.ZoneInfoCompiler.parseDayOfWeek(String),24,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,parseOptional,(java.lang.String) → java.lang.String,org.joda.time.tz.ZoneInfoCompiler.parseOptional(String),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,parseTime,(java.lang.String) → int,org.joda.time.tz.ZoneInfoCompiler.parseTime(String),50,0,0.0,8,0,0.0,5,14,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,parseZoneChar,(char) → char,org.joda.time.tz.ZoneInfoCompiler.parseZoneChar(char),8,0,0.0,3,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,test,"(java.lang.String, org.joda.time.DateTimeZone) → boolean","org.joda.time.tz.ZoneInfoCompiler.test(String,DateTimeZone)",221,0,0.0,28,0,0.0,15,42,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,<init>,() → void,org.joda.time.tz.ZoneInfoCompiler.<init>(),0,23,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,compile,"(java.io.File, java.io.File[]) → java.util.Map","org.joda.time.tz.ZoneInfoCompiler.compile(File,File[])",348,12,0.03333333333333333,41,3,0.06818181818181818,23,60,4,0.0625,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,writeZone,"(java.io.File, org.joda.time.tz.DateTimeZoneBuilder, org.joda.time.DateTimeZone) → void","org.joda.time.tz.ZoneInfoCompiler.writeZone(File,DateTimeZoneBuilder,DateTimeZone)",70,0,0.0,6,0,0.0,4,14,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,parseDataFile,"(java.io.BufferedReader, boolean) → void","org.joda.time.tz.ZoneInfoCompiler.parseDataFile(BufferedReader,boolean)",224,0,0.0,46,0,0.0,24,48,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoCompiler,<clinit>,() → void,org.joda.time.tz.ZoneInfoCompiler.<clinit>(),0,147,1.0,0,0,coverage not available since no branches,1,0,28,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,<init>,() → void,org.joda.time.tz.ZoneInfoProvider.<init>(),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,<init>,(java.io.File) → void,org.joda.time.tz.ZoneInfoProvider.<init>(File),25,39,0.609375,1,5,0.8333333333333334,4,6,7,0.5384615384615384,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,<init>,(java.lang.String) → void,org.joda.time.tz.ZoneInfoProvider.<init>(String),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,<init>,"(java.lang.String, java.lang.ClassLoader) → void","org.joda.time.tz.ZoneInfoProvider.<init>(String,ClassLoader)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,<init>,"(java.lang.String, java.lang.ClassLoader, boolean) → void","org.joda.time.tz.ZoneInfoProvider.<init>(String,ClassLoader,boolean)",0,55,1.0,3,5,0.625,5,0,13,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,getZone,(java.lang.String) → org.joda.time.DateTimeZone,org.joda.time.tz.ZoneInfoProvider.getZone(String),6,38,0.8636363636363636,2,8,0.8,6,2,12,0.8571428571428571,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,getAvailableIDs,() → java.util.Set,org.joda.time.tz.ZoneInfoProvider.getAvailableIDs(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,uncaughtException,(java.lang.Exception) → void,org.joda.time.tz.ZoneInfoProvider.uncaughtException(Exception),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,openResource,(java.lang.String) → java.io.InputStream,org.joda.time.tz.ZoneInfoProvider.openResource(String),37,20,0.3508771929824561,4,2,0.3333333333333333,4,7,5,0.4166666666666667,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,loadZoneData,(java.lang.String) → org.joda.time.DateTimeZone,org.joda.time.tz.ZoneInfoProvider.loadZoneData(String),14,28,0.6666666666666666,1,1,0.5,2,5,8,0.6153846153846154,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,loadZoneInfoMap,(java.io.InputStream) → java.util.Map,org.joda.time.tz.ZoneInfoProvider.loadZoneInfoMap(InputStream),1,25,0.9615384615384616,0,0,coverage not available since no branches,1,1,7,0.875,0,1,1.0
org/joda/time/tz,org/joda/time/tz/ZoneInfoProvider,readZoneInfoMap,"(java.io.DataInputStream, java.util.Map) → void","org.joda.time.tz.ZoneInfoProvider.readZoneInfoMap(DataInputStream,Map)",6,42,0.875,0,4,1.0,3,2,9,0.8181818181818182,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,readFrom,(java.io.DataInput) → org.joda.time.tz.DateTimeZoneBuilder$OfYear,org.joda.time.tz.DateTimeZoneBuilder$OfYear.readFrom(DataInput),0,18,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,<init>,"(char, int, int, int, boolean, int) → void","org.joda.time.tz.DateTimeZoneBuilder$OfYear.<init>(char,int,int,int,boolean,int)",12,30,0.7142857142857143,1,5,0.8333333333333334,4,1,9,0.9,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,setInstant,"(int, int, int) → long","org.joda.time.tz.DateTimeZoneBuilder$OfYear.setInstant(int,int,int)",58,0,0.0,6,0,0.0,4,13,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,next,"(long, int, int) → long","org.joda.time.tz.DateTimeZoneBuilder$OfYear.next(long,int,int)",16,105,0.8677685950413223,3,7,0.7,6,3,21,0.875,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,previous,"(long, int, int) → long","org.joda.time.tz.DateTimeZoneBuilder$OfYear.previous(long,int,int)",21,98,0.8235294117647058,4,6,0.6,6,4,20,0.8333333333333334,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,equals,(java.lang.Object) → boolean,org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(Object),47,0,0.0,16,0,0.0,9,6,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,hashCode,() → int,org.joda.time.tz.DateTimeZoneBuilder$OfYear.hashCode(),40,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,toString,() → java.lang.String,org.joda.time.tz.DateTimeZoneBuilder$OfYear.toString(),47,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,writeTo,(java.io.DataOutput) → void,org.joda.time.tz.DateTimeZoneBuilder$OfYear.writeTo(DataOutput),26,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,setDayOfMonthNext,"(org.joda.time.Chronology, long) → long","org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(Chronology,long)",29,8,0.21621621621621623,6,0,0.0,4,6,3,0.3333333333333333,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,setDayOfMonthPrevious,"(org.joda.time.Chronology, long) → long","org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(Chronology,long)",29,8,0.21621621621621623,6,0,0.0,4,6,3,0.3333333333333333,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,setDayOfMonth,"(org.joda.time.Chronology, long) → long","org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonth(Chronology,long)",0,32,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/tz,org/joda/time/tz/DateTimeZoneBuilder$OfYear,setDayOfWeek,"(org.joda.time.Chronology, long) → long","org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfWeek(Chronology,long)",2,28,0.9333333333333333,2,6,0.75,5,1,9,0.9,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipDateTimeField,<init>,"(org.joda.time.Chronology, org.joda.time.DateTimeField) → void","org.joda.time.field.SkipDateTimeField.<init>(Chronology,DateTimeField)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipDateTimeField,<init>,"(org.joda.time.Chronology, org.joda.time.DateTimeField, int) → void","org.joda.time.field.SkipDateTimeField.<init>(Chronology,DateTimeField,int)",12,22,0.6470588235294118,3,1,0.25,3,3,7,0.7,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipDateTimeField,get,(long) → int,org.joda.time.field.SkipDateTimeField.get(long),0,11,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipDateTimeField,set,"(long, int) → long","org.joda.time.field.SkipDateTimeField.set(long,int)",30,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/SkipDateTimeField,getMinimumValue,() → int,org.joda.time.field.SkipDateTimeField.getMinimumValue(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipDateTimeField,readResolve,() → java.lang.Object,org.joda.time.field.SkipDateTimeField.readResolve(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDurationField,<init>,(org.joda.time.DurationFieldType) → void,org.joda.time.field.BaseDurationField.<init>(DurationFieldType),5,8,0.6153846153846154,1,1,0.5,2,1,4,0.8,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getType,() → org.joda.time.DurationFieldType,org.joda.time.field.BaseDurationField.getType(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getName,() → java.lang.String,org.joda.time.field.BaseDurationField.getName(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDurationField,isSupported,() → boolean,org.joda.time.field.BaseDurationField.isSupported(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getValue,(long) → int,org.joda.time.field.BaseDurationField.getValue(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getValueAsLong,(long) → long,org.joda.time.field.BaseDurationField.getValueAsLong(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getValue,"(long, long) → int","org.joda.time.field.BaseDurationField.getValue(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getMillis,(int) → long,org.joda.time.field.BaseDurationField.getMillis(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getMillis,(long) → long,org.joda.time.field.BaseDurationField.getMillis(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDurationField,getDifference,"(long, long) → int","org.joda.time.field.BaseDurationField.getDifference(long,long)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDurationField,compareTo,(org.joda.time.DurationField) → int,org.joda.time.field.BaseDurationField.compareTo(DurationField),4,16,0.8,2,2,0.5,3,2,5,0.7142857142857143,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDurationField,toString,() → java.lang.String,org.joda.time.field.BaseDurationField.toString(),12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType, int) → void","org.joda.time.field.DividedDateTimeField.<init>(DateTimeField,DateTimeFieldType,int)",0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DateTimeFieldType, int) → void","org.joda.time.field.DividedDateTimeField.<init>(DateTimeField,DurationField,DateTimeFieldType,int)",16,61,0.7922077922077922,3,5,0.625,5,2,15,0.8823529411764706,0,1,1.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,<init>,"(org.joda.time.field.RemainderDateTimeField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.DividedDateTimeField.<init>(RemainderDateTimeField,DateTimeFieldType)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,<init>,"(org.joda.time.field.RemainderDateTimeField, org.joda.time.DurationField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.DividedDateTimeField.<init>(RemainderDateTimeField,DurationField,DateTimeFieldType)",62,0,0.0,4,0,0.0,3,12,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.DividedDateTimeField.getRangeDurationField(),0,9,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,get,(long) → int,org.joda.time.field.DividedDateTimeField.get(long),21,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,add,"(long, int) → long","org.joda.time.field.DividedDateTimeField.add(long,int)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,add,"(long, long) → long","org.joda.time.field.DividedDateTimeField.add(long,long)",10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.DividedDateTimeField.addWrapField(long,int)",13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getDifference,"(long, long) → int","org.joda.time.field.DividedDateTimeField.getDifference(long,long)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.DividedDateTimeField.getDifferenceAsLong(long,long)",10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,set,"(long, int) → long","org.joda.time.field.DividedDateTimeField.set(long,int)",25,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.DividedDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getMinimumValue,() → int,org.joda.time.field.DividedDateTimeField.getMinimumValue(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getMaximumValue,() → int,org.joda.time.field.DividedDateTimeField.getMaximumValue(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,roundFloor,(long) → long,org.joda.time.field.DividedDateTimeField.roundFloor(long),15,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,remainder,(long) → long,org.joda.time.field.DividedDateTimeField.remainder(long),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getDivisor,() → int,org.joda.time.field.DividedDateTimeField.getDivisor(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DividedDateTimeField,getRemainder,(int) → int,org.joda.time.field.DividedDateTimeField.getRemainder(int),19,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField,<init>,"(org.joda.time.DateTimeFieldType, long) → void","org.joda.time.field.ImpreciseDateTimeField.<init>(DateTimeFieldType,long)",0,15,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField,getDifference,"(long, long) → int","org.joda.time.field.ImpreciseDateTimeField.getDifference(long,long)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.ImpreciseDateTimeField.getDifferenceAsLong(long,long)",60,0,0.0,10,0,0.0,6,11,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.ImpreciseDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField,getDurationUnitMillis,() → long,org.joda.time.field.ImpreciseDateTimeField.getDurationUnitMillis(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeNegate,(int) → int,org.joda.time.field.FieldUtils.safeNegate(int),5,6,0.5454545454545454,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeAdd,"(int, int) → int","org.joda.time.field.FieldUtils.safeAdd(int,int)",16,14,0.4666666666666667,1,3,0.75,3,1,3,0.75,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeAdd,"(long, long) → long","org.joda.time.field.FieldUtils.safeAdd(long,long)",16,18,0.5294117647058824,1,3,0.75,3,1,3,0.75,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeSubtract,"(long, long) → long","org.joda.time.field.FieldUtils.safeSubtract(long,long)",16,18,0.5294117647058824,1,3,0.75,3,1,3,0.75,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeMultiply,"(int, int) → int","org.joda.time.field.FieldUtils.safeMultiply(int,int)",16,17,0.5151515151515151,2,2,0.5,3,1,3,0.75,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeMultiply,"(long, int) → long","org.joda.time.field.FieldUtils.safeMultiply(long,int)",34,25,0.423728813559322,3,5,0.625,6,3,7,0.7,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeMultiply,"(long, long) → long","org.joda.time.field.FieldUtils.safeMultiply(long,long)",26,40,0.6060606060606061,9,9,0.5,10,2,8,0.8,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeDivide,"(long, long) → long","org.joda.time.field.FieldUtils.safeDivide(long,long)",28,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeDivide,"(long, long, java.math.RoundingMode) → long","org.joda.time.field.FieldUtils.safeDivide(long,long,RoundingMode)",40,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeToInt,(long) → int,org.joda.time.field.FieldUtils.safeToInt(long),12,11,0.4782608695652174,2,2,0.5,3,1,2,0.6666666666666666,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,safeMultiplyToInt,"(long, long) → int","org.joda.time.field.FieldUtils.safeMultiplyToInt(long,long)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/FieldUtils,verifyValueBounds,"(org.joda.time.DateTimeField, int, int, int) → void","org.joda.time.field.FieldUtils.verifyValueBounds(DateTimeField,int,int,int)",0,19,1.0,1,3,0.75,3,0,5,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,verifyValueBounds,"(org.joda.time.DateTimeFieldType, int, int, int) → void","org.joda.time.field.FieldUtils.verifyValueBounds(DateTimeFieldType,int,int,int)",0,18,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/FieldUtils,verifyValueBounds,"(java.lang.String, int, int, int) → void","org.joda.time.field.FieldUtils.verifyValueBounds(String,int,int,int)",18,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/FieldUtils,getWrappedValue,"(int, int, int, int) → int","org.joda.time.field.FieldUtils.getWrappedValue(int,int,int,int)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/FieldUtils,getWrappedValue,"(int, int, int) → int","org.joda.time.field.FieldUtils.getWrappedValue(int,int,int)",43,0,0.0,6,0,0.0,4,10,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/FieldUtils,equals,"(java.lang.Object, java.lang.Object) → boolean","org.joda.time.field.FieldUtils.equals(Object,Object)",2,13,0.8666666666666667,2,4,0.6666666666666666,4,1,4,0.8,0,1,1.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,<init>,() → void,org.joda.time.field.AbstractPartialFieldProperty.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getFieldType,() → org.joda.time.DateTimeFieldType,org.joda.time.field.AbstractPartialFieldProperty.getFieldType(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getName,() → java.lang.String,org.joda.time.field.AbstractPartialFieldProperty.getName(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getAsString,() → java.lang.String,org.joda.time.field.AbstractPartialFieldProperty.getAsString(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getAsText,() → java.lang.String,org.joda.time.field.AbstractPartialFieldProperty.getAsText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getAsText,(java.util.Locale) → java.lang.String,org.joda.time.field.AbstractPartialFieldProperty.getAsText(Locale),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getAsShortText,() → java.lang.String,org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getAsShortText,(java.util.Locale) → java.lang.String,org.joda.time.field.AbstractPartialFieldProperty.getAsShortText(Locale),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.AbstractPartialFieldProperty.getDurationField(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.AbstractPartialFieldProperty.getRangeDurationField(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getMinimumValueOverall,() → int,org.joda.time.field.AbstractPartialFieldProperty.getMinimumValueOverall(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getMinimumValue,() → int,org.joda.time.field.AbstractPartialFieldProperty.getMinimumValue(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getMaximumValueOverall,() → int,org.joda.time.field.AbstractPartialFieldProperty.getMaximumValueOverall(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getMaximumValue,() → int,org.joda.time.field.AbstractPartialFieldProperty.getMaximumValue(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.field.AbstractPartialFieldProperty.getMaximumTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.field.AbstractPartialFieldProperty.getMaximumShortTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,compareTo,(org.joda.time.ReadableInstant) → int,org.joda.time.field.AbstractPartialFieldProperty.compareTo(ReadableInstant),27,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,compareTo,(org.joda.time.ReadablePartial) → int,org.joda.time.field.AbstractPartialFieldProperty.compareTo(ReadablePartial),27,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,equals,(java.lang.Object) → boolean,org.joda.time.field.AbstractPartialFieldProperty.equals(Object),35,0,0.0,10,0,0.0,6,9,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,hashCode,() → int,org.joda.time.field.AbstractPartialFieldProperty.hashCode(),28,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractPartialFieldProperty,toString,() → java.lang.String,org.joda.time.field.AbstractPartialFieldProperty.toString(),12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,<init>,(org.joda.time.DateTimeField) → void,org.joda.time.field.DelegatedDateTimeField.<init>(DateTimeField),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.DelegatedDateTimeField.<init>(DateTimeField,DateTimeFieldType)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.DelegatedDateTimeField.<init>(DateTimeField,DurationField,DateTimeFieldType)",5,19,0.7916666666666666,1,3,0.75,3,1,6,0.8571428571428571,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getWrappedField,() → org.joda.time.DateTimeField,org.joda.time.field.DelegatedDateTimeField.getWrappedField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getType,() → org.joda.time.DateTimeFieldType,org.joda.time.field.DelegatedDateTimeField.getType(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getName,() → java.lang.String,org.joda.time.field.DelegatedDateTimeField.getName(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,isSupported,() → boolean,org.joda.time.field.DelegatedDateTimeField.isSupported(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,isLenient,() → boolean,org.joda.time.field.DelegatedDateTimeField.isLenient(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,get,(long) → int,org.joda.time.field.DelegatedDateTimeField.get(long),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsText,"(long, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsText(long,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsText,(long) → java.lang.String,org.joda.time.field.DelegatedDateTimeField.getAsText(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsText,"(org.joda.time.ReadablePartial, int, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsText(ReadablePartial,int,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsText,"(org.joda.time.ReadablePartial, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsText(ReadablePartial,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsText(int,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsShortText,"(long, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsShortText(long,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsShortText,(long) → java.lang.String,org.joda.time.field.DelegatedDateTimeField.getAsShortText(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsShortText,"(org.joda.time.ReadablePartial, int, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsShortText(ReadablePartial,int,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsShortText,"(org.joda.time.ReadablePartial, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsShortText(ReadablePartial,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getAsShortText,"(int, java.util.Locale) → java.lang.String","org.joda.time.field.DelegatedDateTimeField.getAsShortText(int,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,add,"(long, int) → long","org.joda.time.field.DelegatedDateTimeField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,add,"(long, long) → long","org.joda.time.field.DelegatedDateTimeField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,add,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.DelegatedDateTimeField.add(ReadablePartial,int,int[],int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,addWrapPartial,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.DelegatedDateTimeField.addWrapPartial(ReadablePartial,int,int[],int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.DelegatedDateTimeField.addWrapField(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,addWrapField,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.DelegatedDateTimeField.addWrapField(ReadablePartial,int,int[],int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getDifference,"(long, long) → int","org.joda.time.field.DelegatedDateTimeField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.DelegatedDateTimeField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,set,"(long, int) → long","org.joda.time.field.DelegatedDateTimeField.set(long,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.field.DelegatedDateTimeField.set(long,String,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,set,"(long, java.lang.String) → long","org.joda.time.field.DelegatedDateTimeField.set(long,String)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,set,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.DelegatedDateTimeField.set(ReadablePartial,int,int[],int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,set,"(org.joda.time.ReadablePartial, int, int[], java.lang.String, java.util.Locale) → int[]","org.joda.time.field.DelegatedDateTimeField.set(ReadablePartial,int,int[],String,Locale)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.DelegatedDateTimeField.getDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.DelegatedDateTimeField.getRangeDurationField(),0,10,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,isLeap,(long) → boolean,org.joda.time.field.DelegatedDateTimeField.isLeap(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getLeapAmount,(long) → int,org.joda.time.field.DelegatedDateTimeField.getLeapAmount(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.field.DelegatedDateTimeField.getLeapDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMinimumValue,() → int,org.joda.time.field.DelegatedDateTimeField.getMinimumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMinimumValue,(long) → int,org.joda.time.field.DelegatedDateTimeField.getMinimumValue(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMinimumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.DelegatedDateTimeField.getMinimumValue(ReadablePartial),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMinimumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.DelegatedDateTimeField.getMinimumValue(ReadablePartial,int[])",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMaximumValue,() → int,org.joda.time.field.DelegatedDateTimeField.getMaximumValue(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMaximumValue,(long) → int,org.joda.time.field.DelegatedDateTimeField.getMaximumValue(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.DelegatedDateTimeField.getMaximumValue(ReadablePartial),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.DelegatedDateTimeField.getMaximumValue(ReadablePartial,int[])",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.field.DelegatedDateTimeField.getMaximumTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.field.DelegatedDateTimeField.getMaximumShortTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,roundFloor,(long) → long,org.joda.time.field.DelegatedDateTimeField.roundFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,roundCeiling,(long) → long,org.joda.time.field.DelegatedDateTimeField.roundCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,roundHalfFloor,(long) → long,org.joda.time.field.DelegatedDateTimeField.roundHalfFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.field.DelegatedDateTimeField.roundHalfCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,roundHalfEven,(long) → long,org.joda.time.field.DelegatedDateTimeField.roundHalfEven(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,remainder,(long) → long,org.joda.time.field.DelegatedDateTimeField.remainder(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDateTimeField,toString,() → java.lang.String,org.joda.time.field.DelegatedDateTimeField.toString(),12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.DecoratedDateTimeField.<init>(DateTimeField,DateTimeFieldType)",5,17,0.7727272727272727,1,3,0.75,3,1,6,0.8571428571428571,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,getWrappedField,() → org.joda.time.DateTimeField,org.joda.time.field.DecoratedDateTimeField.getWrappedField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,isLenient,() → boolean,org.joda.time.field.DecoratedDateTimeField.isLenient(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,get,(long) → int,org.joda.time.field.DecoratedDateTimeField.get(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,set,"(long, int) → long","org.joda.time.field.DecoratedDateTimeField.set(long,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.DecoratedDateTimeField.getDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.DecoratedDateTimeField.getRangeDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,getMinimumValue,() → int,org.joda.time.field.DecoratedDateTimeField.getMinimumValue(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,getMaximumValue,() → int,org.joda.time.field.DecoratedDateTimeField.getMaximumValue(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDateTimeField,roundFloor,(long) → long,org.joda.time.field.DecoratedDateTimeField.roundFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,<init>,"(org.joda.time.DateTimeFieldType, org.joda.time.DurationField) → void","org.joda.time.field.PreciseDurationDateTimeField.<init>(DateTimeFieldType,DurationField)",5,24,0.8275862068965517,1,3,0.75,3,1,7,0.875,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,isLenient,() → boolean,org.joda.time.field.PreciseDurationDateTimeField.isLenient(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,set,"(long, int) → long","org.joda.time.field.PreciseDurationDateTimeField.set(long,int)",0,21,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,roundFloor,(long) → long,org.joda.time.field.PreciseDurationDateTimeField.roundFloor(long),0,25,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,roundCeiling,(long) → long,org.joda.time.field.PreciseDurationDateTimeField.roundCeiling(long),25,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,remainder,(long) → long,org.joda.time.field.PreciseDurationDateTimeField.remainder(long),0,21,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.PreciseDurationDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,getMinimumValue,() → int,org.joda.time.field.PreciseDurationDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,getUnitMillis,() → long,org.joda.time.field.PreciseDurationDateTimeField.getUnitMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationDateTimeField,getMaximumValueForSet,"(long, int) → int","org.joda.time.field.PreciseDurationDateTimeField.getMaximumValueForSet(long,int)",0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,<init>,"(org.joda.time.DateTimeField, int) → void","org.joda.time.field.OffsetDateTimeField.<init>(DateTimeField,int)",2,11,0.8461538461538461,1,1,0.5,2,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType, int) → void","org.joda.time.field.OffsetDateTimeField.<init>(DateTimeField,DateTimeFieldType,int)",0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType, int, int, int) → void","org.joda.time.field.OffsetDateTimeField.<init>(DateTimeField,DateTimeFieldType,int,int,int)",11,36,0.7659574468085106,3,3,0.5,4,3,8,0.7272727272727273,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,get,(long) → int,org.joda.time.field.OffsetDateTimeField.get(long),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,add,"(long, int) → long","org.joda.time.field.OffsetDateTimeField.add(long,int)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,add,"(long, long) → long","org.joda.time.field.OffsetDateTimeField.add(long,long)",16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.OffsetDateTimeField.addWrapField(long,int)",13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,set,"(long, int) → long","org.joda.time.field.OffsetDateTimeField.set(long,int)",0,15,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,isLeap,(long) → boolean,org.joda.time.field.OffsetDateTimeField.isLeap(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,getLeapAmount,(long) → int,org.joda.time.field.OffsetDateTimeField.getLeapAmount(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.field.OffsetDateTimeField.getLeapDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,getMinimumValue,() → int,org.joda.time.field.OffsetDateTimeField.getMinimumValue(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,getMaximumValue,() → int,org.joda.time.field.OffsetDateTimeField.getMaximumValue(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,roundFloor,(long) → long,org.joda.time.field.OffsetDateTimeField.roundFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,roundCeiling,(long) → long,org.joda.time.field.OffsetDateTimeField.roundCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,roundHalfFloor,(long) → long,org.joda.time.field.OffsetDateTimeField.roundHalfFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.field.OffsetDateTimeField.roundHalfCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,roundHalfEven,(long) → long,org.joda.time.field.OffsetDateTimeField.roundHalfEven(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,remainder,(long) → long,org.joda.time.field.OffsetDateTimeField.remainder(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/OffsetDateTimeField,getOffset,() → int,org.joda.time.field.OffsetDateTimeField.getOffset(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/SkipUndoDateTimeField,<init>,"(org.joda.time.Chronology, org.joda.time.DateTimeField) → void","org.joda.time.field.SkipUndoDateTimeField.<init>(Chronology,DateTimeField)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipUndoDateTimeField,<init>,"(org.joda.time.Chronology, org.joda.time.DateTimeField, int) → void","org.joda.time.field.SkipUndoDateTimeField.<init>(Chronology,DateTimeField,int)",12,22,0.6470588235294118,3,1,0.25,3,3,7,0.7,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipUndoDateTimeField,get,(long) → int,org.joda.time.field.SkipUndoDateTimeField.get(long),11,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/SkipUndoDateTimeField,set,"(long, int) → long","org.joda.time.field.SkipUndoDateTimeField.set(long,int)",0,17,1.0,1,1,0.5,2,0,4,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipUndoDateTimeField,getMinimumValue,() → int,org.joda.time.field.SkipUndoDateTimeField.getMinimumValue(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/SkipUndoDateTimeField,readResolve,() → java.lang.Object,org.joda.time.field.SkipUndoDateTimeField.readResolve(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,<init>,(org.joda.time.DateTimeFieldType) → void,org.joda.time.field.BaseDateTimeField.<init>(DateTimeFieldType),0,13,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getType,() → org.joda.time.DateTimeFieldType,org.joda.time.field.BaseDateTimeField.getType(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getName,() → java.lang.String,org.joda.time.field.BaseDateTimeField.getName(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,isSupported,() → boolean,org.joda.time.field.BaseDateTimeField.isSupported(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsText,"(long, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsText(long,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsText,(long) → java.lang.String,org.joda.time.field.BaseDateTimeField.getAsText(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsText,"(org.joda.time.ReadablePartial, int, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsText(ReadablePartial,int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsText,"(org.joda.time.ReadablePartial, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsText(ReadablePartial,Locale)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsText(int,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsShortText,"(long, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsShortText(long,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsShortText,(long) → java.lang.String,org.joda.time.field.BaseDateTimeField.getAsShortText(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsShortText,"(org.joda.time.ReadablePartial, int, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsShortText(ReadablePartial,int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsShortText,"(org.joda.time.ReadablePartial, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsShortText(ReadablePartial,Locale)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getAsShortText,"(int, java.util.Locale) → java.lang.String","org.joda.time.field.BaseDateTimeField.getAsShortText(int,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,add,"(long, int) → long","org.joda.time.field.BaseDateTimeField.add(long,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,add,"(long, long) → long","org.joda.time.field.BaseDateTimeField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,add,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.BaseDateTimeField.add(ReadablePartial,int,int[],int)",131,42,0.24277456647398843,17,5,0.22727272727272727,12,25,11,0.3055555555555556,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,addWrapPartial,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.BaseDateTimeField.addWrapPartial(ReadablePartial,int,int[],int)",199,0,0.0,22,0,0.0,12,40,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.BaseDateTimeField.addWrapField(long,int)",19,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,addWrapField,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.BaseDateTimeField.addWrapField(ReadablePartial,int,int[],int)",21,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getDifference,"(long, long) → int","org.joda.time.field.BaseDateTimeField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.BaseDateTimeField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,set,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.BaseDateTimeField.set(ReadablePartial,int,int[],int)",14,47,0.7704918032786885,2,4,0.6666666666666666,4,2,7,0.7777777777777778,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.field.BaseDateTimeField.set(long,String,Locale)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,set,"(long, java.lang.String) → long","org.joda.time.field.BaseDateTimeField.set(long,String)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,set,"(org.joda.time.ReadablePartial, int, int[], java.lang.String, java.util.Locale) → int[]","org.joda.time.field.BaseDateTimeField.set(ReadablePartial,int,int[],String,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,convertText,"(java.lang.String, java.util.Locale) → int","org.joda.time.field.BaseDateTimeField.convertText(String,Locale)",11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,isLeap,(long) → boolean,org.joda.time.field.BaseDateTimeField.isLeap(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getLeapAmount,(long) → int,org.joda.time.field.BaseDateTimeField.getLeapAmount(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.field.BaseDateTimeField.getLeapDurationField(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMinimumValue,(long) → int,org.joda.time.field.BaseDateTimeField.getMinimumValue(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMinimumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.BaseDateTimeField.getMinimumValue(ReadablePartial),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMinimumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.BaseDateTimeField.getMinimumValue(ReadablePartial,int[])",0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMaximumValue,(long) → int,org.joda.time.field.BaseDateTimeField.getMaximumValue(long),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.BaseDateTimeField.getMaximumValue(ReadablePartial),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.BaseDateTimeField.getMaximumValue(ReadablePartial,int[])",0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.field.BaseDateTimeField.getMaximumTextLength(Locale),24,0,0.0,8,0,0.0,5,9,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.field.BaseDateTimeField.getMaximumShortTextLength(Locale),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,roundCeiling,(long) → long,org.joda.time.field.BaseDateTimeField.roundCeiling(long),0,15,1.0,1,1,0.5,2,0,4,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,roundHalfFloor,(long) → long,org.joda.time.field.BaseDateTimeField.roundHalfFloor(long),24,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.field.BaseDateTimeField.roundHalfCeiling(long),24,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,roundHalfEven,(long) → long,org.joda.time.field.BaseDateTimeField.roundHalfEven(long),38,0,0.0,6,0,0.0,4,11,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,remainder,(long) → long,org.joda.time.field.BaseDateTimeField.remainder(long),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/BaseDateTimeField,toString,() → java.lang.String,org.joda.time.field.BaseDateTimeField.toString(),0,12,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,<init>,"(org.joda.time.DurationField, org.joda.time.DurationFieldType, int) → void","org.joda.time.field.ScaledDurationField.<init>(DurationField,DurationFieldType,int)",5,13,0.7222222222222222,2,2,0.5,3,1,4,0.8,0,1,1.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getValue,(long) → int,org.joda.time.field.ScaledDurationField.getValue(long),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getValueAsLong,(long) → long,org.joda.time.field.ScaledDurationField.getValueAsLong(long),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getValue,"(long, long) → int","org.joda.time.field.ScaledDurationField.getValue(long,long)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getValueAsLong,"(long, long) → long","org.joda.time.field.ScaledDurationField.getValueAsLong(long,long)",10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getMillis,(int) → long,org.joda.time.field.ScaledDurationField.getMillis(int),12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getMillis,(long) → long,org.joda.time.field.ScaledDurationField.getMillis(long),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getMillis,"(int, long) → long","org.joda.time.field.ScaledDurationField.getMillis(int,long)",13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getMillis,"(long, long) → long","org.joda.time.field.ScaledDurationField.getMillis(long,long)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,add,"(long, int) → long","org.joda.time.field.ScaledDurationField.add(long,int)",13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,add,"(long, long) → long","org.joda.time.field.ScaledDurationField.add(long,long)",11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getDifference,"(long, long) → int","org.joda.time.field.ScaledDurationField.getDifference(long,long)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.ScaledDurationField.getDifferenceAsLong(long,long)",10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getUnitMillis,() → long,org.joda.time.field.ScaledDurationField.getUnitMillis(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,getScalar,() → int,org.joda.time.field.ScaledDurationField.getScalar(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,equals,(java.lang.Object) → boolean,org.joda.time.field.ScaledDurationField.equals(Object),33,0,0.0,10,0,0.0,6,7,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ScaledDurationField,hashCode,() → int,org.joda.time.field.ScaledDurationField.hashCode(),0,25,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,<init>,"(org.joda.time.DurationFieldType, long) → void","org.joda.time.field.PreciseDurationField.<init>(DurationFieldType,long)",0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,isPrecise,() → boolean,org.joda.time.field.PreciseDurationField.isPrecise(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,getUnitMillis,() → long,org.joda.time.field.PreciseDurationField.getUnitMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,getValueAsLong,"(long, long) → long","org.joda.time.field.PreciseDurationField.getValueAsLong(long,long)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,getMillis,"(int, long) → long","org.joda.time.field.PreciseDurationField.getMillis(int,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,getMillis,"(long, long) → long","org.joda.time.field.PreciseDurationField.getMillis(long,long)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,add,"(long, int) → long","org.joda.time.field.PreciseDurationField.add(long,int)",0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,add,"(long, long) → long","org.joda.time.field.PreciseDurationField.add(long,long)",0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.PreciseDurationField.getDifferenceAsLong(long,long)",0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,equals,(java.lang.Object) → boolean,org.joda.time.field.PreciseDurationField.equals(Object),0,28,1.0,1,7,0.875,5,0,6,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDurationField,hashCode,() → int,org.joda.time.field.PreciseDurationField.hashCode(),0,18,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.ZeroIsMaxDateTimeField.<init>(DateTimeField,DateTimeFieldType)",5,8,0.6153846153846154,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,get,(long) → int,org.joda.time.field.ZeroIsMaxDateTimeField.get(long),12,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,add,"(long, int) → long","org.joda.time.field.ZeroIsMaxDateTimeField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,add,"(long, long) → long","org.joda.time.field.ZeroIsMaxDateTimeField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,addWrapField,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.ZeroIsMaxDateTimeField.addWrapField(ReadablePartial,int,int[],int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getDifference,"(long, long) → int","org.joda.time.field.ZeroIsMaxDateTimeField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.ZeroIsMaxDateTimeField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,set,"(long, int) → long","org.joda.time.field.ZeroIsMaxDateTimeField.set(long,int)",19,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,isLeap,(long) → boolean,org.joda.time.field.ZeroIsMaxDateTimeField.isLeap(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getLeapAmount,(long) → int,org.joda.time.field.ZeroIsMaxDateTimeField.getLeapAmount(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.field.ZeroIsMaxDateTimeField.getLeapDurationField(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMinimumValue,() → int,org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMinimumValue,(long) → int,org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMinimumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(ReadablePartial),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMinimumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.ZeroIsMaxDateTimeField.getMinimumValue(ReadablePartial,int[])",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMaximumValue,() → int,org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMaximumValue,(long) → int,org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(long),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(ReadablePartial),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.ZeroIsMaxDateTimeField.getMaximumValue(ReadablePartial,int[])",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,roundFloor,(long) → long,org.joda.time.field.ZeroIsMaxDateTimeField.roundFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,roundCeiling,(long) → long,org.joda.time.field.ZeroIsMaxDateTimeField.roundCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,roundHalfFloor,(long) → long,org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,roundHalfEven,(long) → long,org.joda.time.field.ZeroIsMaxDateTimeField.roundHalfEven(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ZeroIsMaxDateTimeField,remainder,(long) → long,org.joda.time.field.ZeroIsMaxDateTimeField.remainder(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/LenientDateTimeField,getInstance,"(org.joda.time.DateTimeField, org.joda.time.Chronology) → org.joda.time.DateTimeField","org.joda.time.field.LenientDateTimeField.getInstance(DateTimeField,Chronology)",22,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/LenientDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.Chronology) → void","org.joda.time.field.LenientDateTimeField.<init>(DateTimeField,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/LenientDateTimeField,isLenient,() → boolean,org.joda.time.field.LenientDateTimeField.isLenient(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/LenientDateTimeField,set,"(long, int) → long","org.joda.time.field.LenientDateTimeField.set(long,int)",32,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,<init>,"(org.joda.time.DurationField, org.joda.time.DurationFieldType) → void","org.joda.time.field.DecoratedDurationField.<init>(DurationField,DurationFieldType)",10,12,0.5454545454545454,2,2,0.5,3,2,5,0.7142857142857143,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,getWrappedField,() → org.joda.time.DurationField,org.joda.time.field.DecoratedDurationField.getWrappedField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,isPrecise,() → boolean,org.joda.time.field.DecoratedDurationField.isPrecise(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,getValueAsLong,"(long, long) → long","org.joda.time.field.DecoratedDurationField.getValueAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,getMillis,"(int, long) → long","org.joda.time.field.DecoratedDurationField.getMillis(int,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,getMillis,"(long, long) → long","org.joda.time.field.DecoratedDurationField.getMillis(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,add,"(long, int) → long","org.joda.time.field.DecoratedDurationField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,add,"(long, long) → long","org.joda.time.field.DecoratedDurationField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.DecoratedDurationField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DecoratedDurationField,getUnitMillis,() → long,org.joda.time.field.DecoratedDurationField.getUnitMillis(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,<init>,() → void,org.joda.time.field.AbstractReadableInstantFieldProperty.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getFieldType,() → org.joda.time.DateTimeFieldType,org.joda.time.field.AbstractReadableInstantFieldProperty.getFieldType(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getName,() → java.lang.String,org.joda.time.field.AbstractReadableInstantFieldProperty.getName(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getChronology,() → org.joda.time.Chronology,org.joda.time.field.AbstractReadableInstantFieldProperty.getChronology(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,get,() → int,org.joda.time.field.AbstractReadableInstantFieldProperty.get(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getAsString,() → java.lang.String,org.joda.time.field.AbstractReadableInstantFieldProperty.getAsString(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getAsText,() → java.lang.String,org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getAsText,(java.util.Locale) → java.lang.String,org.joda.time.field.AbstractReadableInstantFieldProperty.getAsText(Locale),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getAsShortText,() → java.lang.String,org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getAsShortText,(java.util.Locale) → java.lang.String,org.joda.time.field.AbstractReadableInstantFieldProperty.getAsShortText(Locale),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getDifference,(org.joda.time.ReadableInstant) → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getDifference(ReadableInstant),17,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getDifferenceAsLong,(org.joda.time.ReadableInstant) → long,org.joda.time.field.AbstractReadableInstantFieldProperty.getDifferenceAsLong(ReadableInstant),17,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.AbstractReadableInstantFieldProperty.getDurationField(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.AbstractReadableInstantFieldProperty.getRangeDurationField(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,isLeap,() → boolean,org.joda.time.field.AbstractReadableInstantFieldProperty.isLeap(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getLeapAmount,() → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapAmount(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.field.AbstractReadableInstantFieldProperty.getLeapDurationField(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getMinimumValueOverall,() → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValueOverall(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getMinimumValue,() → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getMinimumValue(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getMaximumValueOverall,() → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValueOverall(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getMaximumValue,() → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumValue(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.field.AbstractReadableInstantFieldProperty.getMaximumShortTextLength(Locale),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,remainder,() → long,org.joda.time.field.AbstractReadableInstantFieldProperty.remainder(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,toInterval,() → org.joda.time.Interval,org.joda.time.field.AbstractReadableInstantFieldProperty.toInterval(),23,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,compareTo,(org.joda.time.ReadableInstant) → int,org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(ReadableInstant),27,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,compareTo,(org.joda.time.ReadablePartial) → int,org.joda.time.field.AbstractReadableInstantFieldProperty.compareTo(ReadablePartial),27,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,equals,(java.lang.Object) → boolean,org.joda.time.field.AbstractReadableInstantFieldProperty.equals(Object),34,0,0.0,10,0,0.0,6,9,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,hashCode,() → int,org.joda.time.field.AbstractReadableInstantFieldProperty.hashCode(),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/AbstractReadableInstantFieldProperty,toString,() → java.lang.String,org.joda.time.field.AbstractReadableInstantFieldProperty.toString(),12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,<init>,"(org.joda.time.field.ImpreciseDateTimeField, org.joda.time.DurationFieldType) → void","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.<init>(ImpreciseDateTimeField,DurationFieldType)",0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,isPrecise,() → boolean,org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.isPrecise(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,getUnitMillis,() → long,org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getUnitMillis(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,getValue,"(long, long) → int","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValue(long,long)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,getValueAsLong,"(long, long) → long","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getValueAsLong(long,long)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,getMillis,"(int, long) → long","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(int,long)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,getMillis,"(long, long) → long","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getMillis(long,long)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,add,"(long, int) → long","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.add(long,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,add,"(long, long) → long","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.add(long,long)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,getDifference,"(long, long) → int","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifference(long,long)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getInstance,"(org.joda.time.DateTimeFieldType, org.joda.time.DurationField) → org.joda.time.field.UnsupportedDateTimeField","org.joda.time.field.UnsupportedDateTimeField.getInstance(DateTimeFieldType,DurationField)",2,36,0.9473684210526315,1,7,0.875,5,1,9,0.9,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,<init>,"(org.joda.time.DateTimeFieldType, org.joda.time.DurationField) → void","org.joda.time.field.UnsupportedDateTimeField.<init>(DateTimeFieldType,DurationField)",4,13,0.7647058823529411,2,2,0.5,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getType,() → org.joda.time.DateTimeFieldType,org.joda.time.field.UnsupportedDateTimeField.getType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getName,() → java.lang.String,org.joda.time.field.UnsupportedDateTimeField.getName(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,isSupported,() → boolean,org.joda.time.field.UnsupportedDateTimeField.isSupported(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,isLenient,() → boolean,org.joda.time.field.UnsupportedDateTimeField.isLenient(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,get,(long) → int,org.joda.time.field.UnsupportedDateTimeField.get(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsText,"(long, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsText(long,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsText,(long) → java.lang.String,org.joda.time.field.UnsupportedDateTimeField.getAsText(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsText,"(org.joda.time.ReadablePartial, int, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsText(ReadablePartial,int,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsText,"(org.joda.time.ReadablePartial, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsText(ReadablePartial,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsText,"(int, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsText(int,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsShortText,"(long, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsShortText,(long) → java.lang.String,org.joda.time.field.UnsupportedDateTimeField.getAsShortText(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsShortText,"(org.joda.time.ReadablePartial, int, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsShortText(ReadablePartial,int,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsShortText,"(org.joda.time.ReadablePartial, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsShortText(ReadablePartial,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getAsShortText,"(int, java.util.Locale) → java.lang.String","org.joda.time.field.UnsupportedDateTimeField.getAsShortText(int,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,add,"(long, int) → long","org.joda.time.field.UnsupportedDateTimeField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,add,"(long, long) → long","org.joda.time.field.UnsupportedDateTimeField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,add,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.UnsupportedDateTimeField.add(ReadablePartial,int,int[],int)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,addWrapPartial,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.UnsupportedDateTimeField.addWrapPartial(ReadablePartial,int,int[],int)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.UnsupportedDateTimeField.addWrapField(long,int)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,addWrapField,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.UnsupportedDateTimeField.addWrapField(ReadablePartial,int,int[],int)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getDifference,"(long, long) → int","org.joda.time.field.UnsupportedDateTimeField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.UnsupportedDateTimeField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,set,"(long, int) → long","org.joda.time.field.UnsupportedDateTimeField.set(long,int)",0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,set,"(org.joda.time.ReadablePartial, int, int[], int) → int[]","org.joda.time.field.UnsupportedDateTimeField.set(ReadablePartial,int,int[],int)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,set,"(long, java.lang.String, java.util.Locale) → long","org.joda.time.field.UnsupportedDateTimeField.set(long,String,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,set,"(long, java.lang.String) → long","org.joda.time.field.UnsupportedDateTimeField.set(long,String)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,set,"(org.joda.time.ReadablePartial, int, int[], java.lang.String, java.util.Locale) → int[]","org.joda.time.field.UnsupportedDateTimeField.set(ReadablePartial,int,int[],String,Locale)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.UnsupportedDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.UnsupportedDateTimeField.getRangeDurationField(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,isLeap,(long) → boolean,org.joda.time.field.UnsupportedDateTimeField.isLeap(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getLeapAmount,(long) → int,org.joda.time.field.UnsupportedDateTimeField.getLeapAmount(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getLeapDurationField,() → org.joda.time.DurationField,org.joda.time.field.UnsupportedDateTimeField.getLeapDurationField(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMinimumValue,() → int,org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMinimumValue,(long) → int,org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMinimumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(ReadablePartial),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMinimumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.UnsupportedDateTimeField.getMinimumValue(ReadablePartial,int[])",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMaximumValue,() → int,org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMaximumValue,(long) → int,org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMaximumValue,(org.joda.time.ReadablePartial) → int,org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(ReadablePartial),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMaximumValue,"(org.joda.time.ReadablePartial, int[]) → int","org.joda.time.field.UnsupportedDateTimeField.getMaximumValue(ReadablePartial,int[])",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMaximumTextLength,(java.util.Locale) → int,org.joda.time.field.UnsupportedDateTimeField.getMaximumTextLength(Locale),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,getMaximumShortTextLength,(java.util.Locale) → int,org.joda.time.field.UnsupportedDateTimeField.getMaximumShortTextLength(Locale),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,roundFloor,(long) → long,org.joda.time.field.UnsupportedDateTimeField.roundFloor(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,roundCeiling,(long) → long,org.joda.time.field.UnsupportedDateTimeField.roundCeiling(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,roundHalfFloor,(long) → long,org.joda.time.field.UnsupportedDateTimeField.roundHalfFloor(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.field.UnsupportedDateTimeField.roundHalfCeiling(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,roundHalfEven,(long) → long,org.joda.time.field.UnsupportedDateTimeField.roundHalfEven(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,remainder,(long) → long,org.joda.time.field.UnsupportedDateTimeField.remainder(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,toString,() → java.lang.String,org.joda.time.field.UnsupportedDateTimeField.toString(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,readResolve,() → java.lang.Object,org.joda.time.field.UnsupportedDateTimeField.readResolve(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDateTimeField,unsupported,() → java.lang.UnsupportedOperationException,org.joda.time.field.UnsupportedDateTimeField.unsupported(),0,13,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getInstance,(org.joda.time.DurationFieldType) → org.joda.time.field.UnsupportedDurationField,org.joda.time.field.UnsupportedDurationField.getInstance(DurationFieldType),0,29,1.0,0,4,1.0,3,0,8,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,<init>,(org.joda.time.DurationFieldType) → void,org.joda.time.field.UnsupportedDurationField.<init>(DurationFieldType),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getType,() → org.joda.time.DurationFieldType,org.joda.time.field.UnsupportedDurationField.getType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getName,() → java.lang.String,org.joda.time.field.UnsupportedDurationField.getName(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,isSupported,() → boolean,org.joda.time.field.UnsupportedDurationField.isSupported(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,isPrecise,() → boolean,org.joda.time.field.UnsupportedDurationField.isPrecise(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getValue,(long) → int,org.joda.time.field.UnsupportedDurationField.getValue(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getValueAsLong,(long) → long,org.joda.time.field.UnsupportedDurationField.getValueAsLong(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getValue,"(long, long) → int","org.joda.time.field.UnsupportedDurationField.getValue(long,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getValueAsLong,"(long, long) → long","org.joda.time.field.UnsupportedDurationField.getValueAsLong(long,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getMillis,(int) → long,org.joda.time.field.UnsupportedDurationField.getMillis(int),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getMillis,(long) → long,org.joda.time.field.UnsupportedDurationField.getMillis(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getMillis,"(int, long) → long","org.joda.time.field.UnsupportedDurationField.getMillis(int,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getMillis,"(long, long) → long","org.joda.time.field.UnsupportedDurationField.getMillis(long,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,add,"(long, int) → long","org.joda.time.field.UnsupportedDurationField.add(long,int)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,add,"(long, long) → long","org.joda.time.field.UnsupportedDurationField.add(long,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getDifference,"(long, long) → int","org.joda.time.field.UnsupportedDurationField.getDifference(long,long)",0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.UnsupportedDurationField.getDifferenceAsLong(long,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,getUnitMillis,() → long,org.joda.time.field.UnsupportedDurationField.getUnitMillis(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,compareTo,(org.joda.time.DurationField) → int,org.joda.time.field.UnsupportedDurationField.compareTo(DurationField),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,equals,(java.lang.Object) → boolean,org.joda.time.field.UnsupportedDurationField.equals(Object),29,0,0.0,8,0,0.0,5,8,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,hashCode,() → int,org.joda.time.field.UnsupportedDurationField.hashCode(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,toString,() → java.lang.String,org.joda.time.field.UnsupportedDurationField.toString(),12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,readResolve,() → java.lang.Object,org.joda.time.field.UnsupportedDurationField.readResolve(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/UnsupportedDurationField,unsupported,() → java.lang.UnsupportedOperationException,org.joda.time.field.UnsupportedDurationField.unsupported(),0,13,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DateTimeFieldType, int) → void","org.joda.time.field.RemainderDateTimeField.<init>(DateTimeField,DateTimeFieldType,int)",38,0,0.0,4,0,0.0,3,11,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,<init>,"(org.joda.time.DateTimeField, org.joda.time.DurationField, org.joda.time.DateTimeFieldType, int) → void","org.joda.time.field.RemainderDateTimeField.<init>(DateTimeField,DurationField,DateTimeFieldType,int)",5,18,0.782608695652174,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,<init>,(org.joda.time.field.DividedDateTimeField) → void,org.joda.time.field.RemainderDateTimeField.<init>(DividedDateTimeField),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,<init>,"(org.joda.time.field.DividedDateTimeField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.RemainderDateTimeField.<init>(DividedDateTimeField,DateTimeFieldType)",0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,<init>,"(org.joda.time.field.DividedDateTimeField, org.joda.time.DurationField, org.joda.time.DateTimeFieldType) → void","org.joda.time.field.RemainderDateTimeField.<init>(DividedDateTimeField,DurationField,DateTimeFieldType)",0,17,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,get,(long) → int,org.joda.time.field.RemainderDateTimeField.get(long),24,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.RemainderDateTimeField.addWrapField(long,int)",14,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,set,"(long, int) → long","org.joda.time.field.RemainderDateTimeField.set(long,int)",26,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,getDurationField,() → org.joda.time.DurationField,org.joda.time.field.RemainderDateTimeField.getDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.RemainderDateTimeField.getRangeDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,getMinimumValue,() → int,org.joda.time.field.RemainderDateTimeField.getMinimumValue(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,getMaximumValue,() → int,org.joda.time.field.RemainderDateTimeField.getMaximumValue(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,roundFloor,(long) → long,org.joda.time.field.RemainderDateTimeField.roundFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,roundCeiling,(long) → long,org.joda.time.field.RemainderDateTimeField.roundCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,roundHalfFloor,(long) → long,org.joda.time.field.RemainderDateTimeField.roundHalfFloor(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,roundHalfCeiling,(long) → long,org.joda.time.field.RemainderDateTimeField.roundHalfCeiling(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,roundHalfEven,(long) → long,org.joda.time.field.RemainderDateTimeField.roundHalfEven(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,remainder,(long) → long,org.joda.time.field.RemainderDateTimeField.remainder(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,getDivisor,() → int,org.joda.time.field.RemainderDateTimeField.getDivisor(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/RemainderDateTimeField,getDivided,(int) → int,org.joda.time.field.RemainderDateTimeField.getDivided(int),16,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/StrictDateTimeField,getInstance,(org.joda.time.DateTimeField) → org.joda.time.DateTimeField,org.joda.time.field.StrictDateTimeField.getInstance(DateTimeField),11,10,0.47619047619047616,3,3,0.5,4,3,4,0.5714285714285714,0,1,1.0
org/joda/time/field,org/joda/time/field/StrictDateTimeField,<init>,(org.joda.time.DateTimeField) → void,org.joda.time.field.StrictDateTimeField.<init>(DateTimeField),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/StrictDateTimeField,isLenient,() → boolean,org.joda.time.field.StrictDateTimeField.isLenient(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/StrictDateTimeField,set,"(long, int) → long","org.joda.time.field.StrictDateTimeField.set(long,int)",14,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,<init>,(org.joda.time.DurationField) → void,org.joda.time.field.DelegatedDurationField.<init>(DurationField),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,<init>,"(org.joda.time.DurationField, org.joda.time.DurationFieldType) → void","org.joda.time.field.DelegatedDurationField.<init>(DurationField,DurationFieldType)",3,18,0.8571428571428571,1,3,0.75,3,0,6,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getWrappedField,() → org.joda.time.DurationField,org.joda.time.field.DelegatedDurationField.getWrappedField(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getType,() → org.joda.time.DurationFieldType,org.joda.time.field.DelegatedDurationField.getType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getName,() → java.lang.String,org.joda.time.field.DelegatedDurationField.getName(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,isSupported,() → boolean,org.joda.time.field.DelegatedDurationField.isSupported(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,isPrecise,() → boolean,org.joda.time.field.DelegatedDurationField.isPrecise(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getValue,(long) → int,org.joda.time.field.DelegatedDurationField.getValue(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getValueAsLong,(long) → long,org.joda.time.field.DelegatedDurationField.getValueAsLong(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getValue,"(long, long) → int","org.joda.time.field.DelegatedDurationField.getValue(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getValueAsLong,"(long, long) → long","org.joda.time.field.DelegatedDurationField.getValueAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getMillis,(int) → long,org.joda.time.field.DelegatedDurationField.getMillis(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getMillis,(long) → long,org.joda.time.field.DelegatedDurationField.getMillis(long),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getMillis,"(int, long) → long","org.joda.time.field.DelegatedDurationField.getMillis(int,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getMillis,"(long, long) → long","org.joda.time.field.DelegatedDurationField.getMillis(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,add,"(long, int) → long","org.joda.time.field.DelegatedDurationField.add(long,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,add,"(long, long) → long","org.joda.time.field.DelegatedDurationField.add(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getDifference,"(long, long) → int","org.joda.time.field.DelegatedDurationField.getDifference(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(long,long)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,getUnitMillis,() → long,org.joda.time.field.DelegatedDurationField.getUnitMillis(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,compareTo,(org.joda.time.DurationField) → int,org.joda.time.field.DelegatedDurationField.compareTo(DurationField),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,equals,(java.lang.Object) → boolean,org.joda.time.field.DelegatedDurationField.equals(Object),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,hashCode,() → int,org.joda.time.field.DelegatedDurationField.hashCode(),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/DelegatedDurationField,toString,() → java.lang.String,org.joda.time.field.DelegatedDurationField.toString(),19,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/PreciseDateTimeField,<init>,"(org.joda.time.DateTimeFieldType, org.joda.time.DurationField, org.joda.time.DurationField) → void","org.joda.time.field.PreciseDateTimeField.<init>(DateTimeFieldType,DurationField,DurationField)",10,25,0.7142857142857143,2,2,0.5,3,2,7,0.7777777777777778,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDateTimeField,get,(long) → int,org.joda.time.field.PreciseDateTimeField.get(long),0,31,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDateTimeField,addWrapField,"(long, int) → long","org.joda.time.field.PreciseDateTimeField.addWrapField(long,int)",22,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/PreciseDateTimeField,set,"(long, int) → long","org.joda.time.field.PreciseDateTimeField.set(long,int)",0,19,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDateTimeField,getRangeDurationField,() → org.joda.time.DurationField,org.joda.time.field.PreciseDateTimeField.getRangeDurationField(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDateTimeField,getMaximumValue,() → int,org.joda.time.field.PreciseDateTimeField.getMaximumValue(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/PreciseDateTimeField,getRange,() → int,org.joda.time.field.PreciseDateTimeField.getRange(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getType,() → org.joda.time.DurationFieldType,org.joda.time.field.MillisDurationField.getType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getName,() → java.lang.String,org.joda.time.field.MillisDurationField.getName(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,isSupported,() → boolean,org.joda.time.field.MillisDurationField.isSupported(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/MillisDurationField,isPrecise,() → boolean,org.joda.time.field.MillisDurationField.isPrecise(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getUnitMillis,() → long,org.joda.time.field.MillisDurationField.getUnitMillis(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getValue,(long) → int,org.joda.time.field.MillisDurationField.getValue(long),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getValueAsLong,(long) → long,org.joda.time.field.MillisDurationField.getValueAsLong(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getValue,"(long, long) → int","org.joda.time.field.MillisDurationField.getValue(long,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getValueAsLong,"(long, long) → long","org.joda.time.field.MillisDurationField.getValueAsLong(long,long)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getMillis,(int) → long,org.joda.time.field.MillisDurationField.getMillis(int),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getMillis,(long) → long,org.joda.time.field.MillisDurationField.getMillis(long),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getMillis,"(int, long) → long","org.joda.time.field.MillisDurationField.getMillis(int,long)",3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getMillis,"(long, long) → long","org.joda.time.field.MillisDurationField.getMillis(long,long)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,add,"(long, int) → long","org.joda.time.field.MillisDurationField.add(long,int)",0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/MillisDurationField,add,"(long, long) → long","org.joda.time.field.MillisDurationField.add(long,long)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getDifference,"(long, long) → int","org.joda.time.field.MillisDurationField.getDifference(long,long)",0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/MillisDurationField,getDifferenceAsLong,"(long, long) → long","org.joda.time.field.MillisDurationField.getDifferenceAsLong(long,long)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,compareTo,(org.joda.time.DurationField) → int,org.joda.time.field.MillisDurationField.compareTo(DurationField),20,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,equals,(java.lang.Object) → boolean,org.joda.time.field.MillisDurationField.equals(Object),16,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,hashCode,() → int,org.joda.time.field.MillisDurationField.hashCode(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/field,org/joda/time/field/MillisDurationField,toString,() → java.lang.String,org.joda.time.field.MillisDurationField.toString(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,readResolve,() → java.lang.Object,org.joda.time.field.MillisDurationField.readResolve(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/field,org/joda/time/field/MillisDurationField,<clinit>,() → void,org.joda.time.field.MillisDurationField.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber,<init>,"(org.joda.time.DateTimeFieldType, int, boolean) → void","org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.<init>(DateTimeFieldType,int,boolean)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.estimatePrintedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",17,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$UnpaddedNumber,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber.printTo(Appendable,ReadablePartial,Locale)",23,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$MatchingParser,<init>,(org.joda.time.format.InternalParser[]) → void,org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.<init>(InternalParser[]),0,32,1.0,0,6,1.0,4,0,12,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$MatchingParser,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.estimateParsedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$MatchingParser,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(DateTimeParserBucket,CharSequence,int)",0,108,1.0,4,24,0.8571428571428571,15,0,31,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,<init>,() → void,org.joda.time.format.ISODateTimeFormat$Constants.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateParser(),2,20,0.9090909090909091,1,1,0.5,2,1,8,0.8888888888888888,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,localDateParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.localDateParser(),2,5,0.7142857142857143,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateElementParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateElementParser(),0,57,1.0,0,2,1.0,2,0,18,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,timeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.timeParser(),2,15,0.8823529411764706,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,localTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.localTimeParser(),2,13,0.8666666666666667,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,timeElementParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.timeElementParser(),0,106,1.0,0,2,1.0,2,0,28,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateTimeParser(),2,32,0.9411764705882353,1,1,0.5,2,1,9,0.9,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateOptionalTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateOptionalTimeParser(),2,24,0.9230769230769231,1,1,0.5,2,1,10,0.9090909090909091,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,localDateOptionalTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.localDateOptionalTimeParser(),2,21,0.9130434782608695,1,1,0.5,2,1,9,0.9,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,time,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.time(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,timeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.timeNoMillis(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,tTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.tTime(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,tTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.tTimeNoMillis(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateTime(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateTimeNoMillis(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,ordinalDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.ordinalDate(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,ordinalDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.ordinalDateTime(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,ordinalDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.ordinalDateTimeNoMillis(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,weekDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.weekDateTime(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,weekDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.weekDateTimeNoMillis(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicDate(),0,18,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicTime(),0,28,1.0,0,2,1.0,2,0,10,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicTimeNoMillis(),0,23,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicTTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicTTime(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicTTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicTTimeNoMillis(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicDateTime(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicDateTimeNoMillis(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicOrdinalDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDate(),0,15,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicOrdinalDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDateTime(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicOrdinalDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicOrdinalDateTimeNoMillis(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicWeekDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDate(),0,20,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicWeekDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDateTime(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,basicWeekDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.basicWeekDateTimeNoMillis(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,yearMonth,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.yearMonth(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,yearMonthDay,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.yearMonthDay(),2,13,0.8666666666666667,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,weekyearWeek,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.weekyearWeek(),2,11,0.8461538461538461,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,weekyearWeekDay,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.weekyearWeekDay(),2,13,0.8666666666666667,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,hourMinute,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.hourMinute(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,hourMinuteSecond,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecond(),0,15,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,hourMinuteSecondMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecondMillis(),0,20,1.0,0,2,1.0,2,0,9,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,hourMinuteSecondFraction,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.hourMinuteSecondFraction(),0,17,1.0,0,2,1.0,2,0,8,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateHour,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateHour(),2,13,0.8666666666666667,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateHourMinute,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinute(),2,13,0.8666666666666667,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateHourMinuteSecond,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecond(),2,13,0.8666666666666667,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateHourMinuteSecondMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecondMillis(),2,13,0.8666666666666667,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dateHourMinuteSecondFraction,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dateHourMinuteSecondFraction(),2,13,0.8666666666666667,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,yearElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.yearElement(),0,12,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,monthElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.monthElement(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dayOfMonthElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dayOfMonthElement(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,weekyearElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.weekyearElement(),0,12,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,weekElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.weekElement(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dayOfWeekElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dayOfWeekElement(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,dayOfYearElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.dayOfYearElement(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,literalTElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.literalTElement(),0,11,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,hourElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.hourElement(),0,11,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,minuteElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.minuteElement(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,secondElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.secondElement(),0,13,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,fractionElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.fractionElement(),0,14,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,offsetElement,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat$Constants.offsetElement(),0,14,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat$Constants,<clinit>,() → void,org.joda.time.format.ISODateTimeFormat$Constants.<clinit>(),0,119,1.0,0,0,coverage not available since no branches,1,0,59,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimePrinterInternalPrinter,of,(org.joda.time.format.DateTimePrinter) → org.joda.time.format.InternalPrinter,org.joda.time.format.DateTimePrinterInternalPrinter.of(DateTimePrinter),0,15,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimePrinterInternalPrinter,<init>,(org.joda.time.format.DateTimePrinter) → void,org.joda.time.format.DateTimePrinterInternalPrinter.<init>(DateTimePrinter),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimePrinterInternalPrinter,getUnderlying,() → org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimePrinterInternalPrinter.getUnderlying(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimePrinterInternalPrinter,estimatePrintedLength,() → int,org.joda.time.format.DateTimePrinterInternalPrinter.estimatePrintedLength(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimePrinterInternalPrinter,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimePrinterInternalPrinter.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",35,17,0.3269230769230769,3,1,0.25,3,6,5,0.45454545454545453,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimePrinterInternalPrinter,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimePrinterInternalPrinter.printTo(Appendable,ReadablePartial,Locale)",43,0,0.0,4,0,0.0,3,11,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Separator,<init>,"(java.lang.String, java.lang.String, java.lang.String[], org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser, boolean, boolean) → void","org.joda.time.format.PeriodFormatterBuilder$Separator.<init>(String,String,String[],PeriodPrinter,PeriodParser,boolean,boolean)",46,38,0.4523809523809524,9,3,0.25,7,9,10,0.5263157894736842,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Separator,countFieldsToPrint,"(org.joda.time.ReadablePeriod, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Separator.countFieldsToPrint(ReadablePeriod,int,Locale)",21,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Separator,calculatePrintedLength,"(org.joda.time.ReadablePeriod, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(ReadablePeriod,Locale)",37,36,0.4931506849315068,10,4,0.2857142857142857,8,7,8,0.5333333333333333,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Separator,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(StringBuffer,ReadablePeriod,Locale)",35,34,0.4927536231884058,10,4,0.2857142857142857,8,7,8,0.5333333333333333,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Separator,printTo,"(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(Writer,ReadablePeriod,Locale)",66,0,0.0,14,0,0.0,8,15,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Separator,parseInto,"(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(ReadWritablePeriod,String,int,Locale)",17,88,0.8380952380952381,11,17,0.6071428571428571,15,3,23,0.8846153846153846,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Separator,finish,"(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser) → org.joda.time.format.PeriodFormatterBuilder$Separator","org.joda.time.format.PeriodFormatterBuilder$Separator.finish(PeriodPrinter,PeriodParser)",0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral,<init>,(char) → void,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.<init>(char),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.estimatePrintedLength(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.printTo(Appendable,ReadablePartial,Locale)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.estimateParsedLength(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$CharacterLiteral,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral.parseInto(DateTimeParserBucket,CharSequence,int)",0,44,1.0,2,6,0.75,5,0,13,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,<init>,"(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser) → void","org.joda.time.format.PeriodFormatter.<init>(PeriodPrinter,PeriodParser)",0,15,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,<init>,"(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser, java.util.Locale, org.joda.time.PeriodType) → void","org.joda.time.format.PeriodFormatter.<init>(PeriodPrinter,PeriodParser,Locale,PeriodType)",0,15,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,isPrinter,() → boolean,org.joda.time.format.PeriodFormatter.isPrinter(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,getPrinter,() → org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodFormatter.getPrinter(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,isParser,() → boolean,org.joda.time.format.PeriodFormatter.isParser(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,getParser,() → org.joda.time.format.PeriodParser,org.joda.time.format.PeriodFormatter.getParser(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,withLocale,(java.util.Locale) → org.joda.time.format.PeriodFormatter,org.joda.time.format.PeriodFormatter.withLocale(Locale),24,0,0.0,6,0,0.0,4,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,getLocale,() → java.util.Locale,org.joda.time.format.PeriodFormatter.getLocale(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,withParseType,(org.joda.time.PeriodType) → org.joda.time.format.PeriodFormatter,org.joda.time.format.PeriodFormatter.withParseType(PeriodType),2,15,0.8823529411764706,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,getParseType,() → org.joda.time.PeriodType,org.joda.time.format.PeriodFormatter.getParseType(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePeriod) → void","org.joda.time.format.PeriodFormatter.printTo(StringBuffer,ReadablePeriod)",13,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,printTo,"(java.io.Writer, org.joda.time.ReadablePeriod) → void","org.joda.time.format.PeriodFormatter.printTo(Writer,ReadablePeriod)",13,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,print,(org.joda.time.ReadablePeriod) → java.lang.String,org.joda.time.format.PeriodFormatter.print(ReadablePeriod),0,26,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,checkPrinter,() → void,org.joda.time.format.PeriodFormatter.checkPrinter(),5,4,0.4444444444444444,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,checkPeriod,(org.joda.time.ReadablePeriod) → void,org.joda.time.format.PeriodFormatter.checkPeriod(ReadablePeriod),5,3,0.375,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,parseInto,"(org.joda.time.ReadWritablePeriod, java.lang.String, int) → int","org.joda.time.format.PeriodFormatter.parseInto(ReadWritablePeriod,String,int)",0,14,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,parsePeriod,(java.lang.String) → org.joda.time.Period,org.joda.time.format.PeriodFormatter.parsePeriod(String),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,parseMutablePeriod,(java.lang.String) → org.joda.time.MutablePeriod,org.joda.time.format.PeriodFormatter.parseMutablePeriod(String),0,37,1.0,0,4,1.0,3,0,8,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatter,checkParser,() → void,org.joda.time.format.PeriodFormatter.checkParser(),5,4,0.4444444444444444,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormat,<init>,() → void,org.joda.time.format.PeriodFormat.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,getDefault,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.PeriodFormat.getDefault(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,wordBased,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.PeriodFormat.wordBased(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,wordBased,(java.util.Locale) → org.joda.time.format.PeriodFormatter,org.joda.time.format.PeriodFormat.wordBased(Locale),33,0,0.0,4,0,0.0,3,8,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,buildWordBased,(java.util.Locale) → org.joda.time.format.PeriodFormatter,org.joda.time.format.PeriodFormat.buildWordBased(Locale),16,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,buildRegExFormatter,"(java.util.ResourceBundle, java.util.Locale) → org.joda.time.format.PeriodFormatter","org.joda.time.format.PeriodFormat.buildRegExFormatter(ResourceBundle,Locale)",326,0,0.0,16,0,0.0,9,59,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,buildNonRegExFormatter,"(java.util.ResourceBundle, java.util.Locale) → org.joda.time.format.PeriodFormatter","org.joda.time.format.PeriodFormat.buildNonRegExFormatter(ResourceBundle,Locale)",130,0,0.0,0,0,coverage not available since no branches,1,26,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,retrieveVariants,(java.util.ResourceBundle) → java.lang.String[],org.joda.time.format.PeriodFormat.retrieveVariants(ResourceBundle),27,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,containsKey,"(java.util.ResourceBundle, java.lang.String) → boolean","org.joda.time.format.PeriodFormat.containsKey(ResourceBundle,String)",16,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat,<clinit>,() → void,org.joda.time.format.PeriodFormat.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendPaddedInteger,"(java.lang.StringBuffer, int, int) → void","org.joda.time.format.FormatUtils.appendPaddedInteger(StringBuffer,int,int)",1,6,0.8571428571428571,0,0,coverage not available since no branches,1,1,3,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendPaddedInteger,"(java.lang.Appendable, int, int) → void","org.joda.time.format.FormatUtils.appendPaddedInteger(Appendable,int,int)",46,80,0.6349206349206349,8,12,0.6,11,10,18,0.6428571428571429,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendPaddedInteger,"(java.lang.StringBuffer, long, int) → void","org.joda.time.format.FormatUtils.appendPaddedInteger(StringBuffer,long,int)",7,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendPaddedInteger,"(java.lang.Appendable, long, int) → void","org.joda.time.format.FormatUtils.appendPaddedInteger(Appendable,long,int)",76,0,0.0,12,0,0.0,7,18,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/FormatUtils,writePaddedInteger,"(java.io.Writer, int, int) → void","org.joda.time.format.FormatUtils.writePaddedInteger(Writer,int,int)",113,0,0.0,20,0,0.0,11,28,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/FormatUtils,writePaddedInteger,"(java.io.Writer, long, int) → void","org.joda.time.format.FormatUtils.writePaddedInteger(Writer,long,int)",70,0,0.0,12,0,0.0,7,18,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendUnpaddedInteger,"(java.lang.StringBuffer, int) → void","org.joda.time.format.FormatUtils.appendUnpaddedInteger(StringBuffer,int)",1,5,0.8333333333333334,0,0,coverage not available since no branches,1,1,3,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendUnpaddedInteger,"(java.lang.Appendable, int) → void","org.joda.time.format.FormatUtils.appendUnpaddedInteger(Appendable,int)",10,59,0.855072463768116,2,6,0.75,5,3,12,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendUnpaddedInteger,"(java.lang.StringBuffer, long) → void","org.joda.time.format.FormatUtils.appendUnpaddedInteger(StringBuffer,long)",6,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/FormatUtils,appendUnpaddedInteger,"(java.lang.Appendable, long) → void","org.joda.time.format.FormatUtils.appendUnpaddedInteger(Appendable,long)",18,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/FormatUtils,writeUnpaddedInteger,"(java.io.Writer, int) → void","org.joda.time.format.FormatUtils.writeUnpaddedInteger(Writer,int)",47,13,0.21666666666666667,5,3,0.375,5,10,5,0.3333333333333333,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,writeUnpaddedInteger,"(java.io.Writer, long) → void","org.joda.time.format.FormatUtils.writeUnpaddedInteger(Writer,long)",4,13,0.7647058823529411,1,1,0.5,2,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,calculateDigitCount,(long) → int,org.joda.time.format.FormatUtils.calculateDigitCount(long),12,37,0.7551020408163265,3,9,0.75,7,2,4,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,parseTwoDigits,"(java.lang.CharSequence, int) → int","org.joda.time.format.FormatUtils.parseTwoDigits(CharSequence,int)",0,22,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,createErrorMessage,"(java.lang.String, int) → java.lang.String","org.joda.time.format.FormatUtils.createErrorMessage(String,int)",7,58,0.8923076923076924,1,5,0.8333333333333334,4,1,9,0.9,0,1,1.0
org/joda/time/format,org/joda/time/format/FormatUtils,<clinit>,() → void,org.joda.time.format.FormatUtils.<clinit>(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,of,(org.joda.time.format.InternalPrinter) → org.joda.time.format.DateTimePrinter,org.joda.time.format.InternalPrinterDateTimePrinter.of(InternalPrinter),9,13,0.5909090909090909,3,3,0.5,4,3,4,0.5714285714285714,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,<init>,(org.joda.time.format.InternalPrinter) → void,org.joda.time.format.InternalPrinterDateTimePrinter.<init>(InternalPrinter),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,estimatePrintedLength,() → int,org.joda.time.format.InternalPrinterDateTimePrinter.estimatePrintedLength(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,printTo,"(java.lang.StringBuffer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.InternalPrinterDateTimePrinter.printTo(StringBuffer,long,Chronology,int,DateTimeZone,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,printTo,"(java.io.Writer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.InternalPrinterDateTimePrinter.printTo(Writer,long,Chronology,int,DateTimeZone,Locale)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.InternalPrinterDateTimePrinter.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.InternalPrinterDateTimePrinter.printTo(StringBuffer,ReadablePartial,Locale)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,printTo,"(java.io.Writer, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.InternalPrinterDateTimePrinter.printTo(Writer,ReadablePartial,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.InternalPrinterDateTimePrinter.printTo(Appendable,ReadablePartial,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,equals,(java.lang.Object) → boolean,org.joda.time.format.InternalPrinterDateTimePrinter.equals(Object),19,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalPrinterDateTimePrinter,hashCode,() → int,org.joda.time.format.InternalPrinterDateTimePrinter.hashCode(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,<init>,"(org.joda.time.DateTimeFieldType, int, int) → void","org.joda.time.format.DateTimeFormatterBuilder$Fraction.<init>(DateTimeFieldType,int,int)",2,15,0.8823529411764706,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$Fraction.estimatePrintedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(Appendable,ReadablePartial,Locale)",0,13,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology) → void","org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(Appendable,long,Chronology)",14,103,0.8803418803418803,5,15,0.75,11,7,28,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,getFractionData,"(long, org.joda.time.DateTimeField) → long[]","org.joda.time.format.DateTimeFormatterBuilder$Fraction.getFractionData(long,DateTimeField)",55,37,0.40217391304347827,19,2,0.09523809523809523,20,19,7,0.2692307692307692,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$Fraction.estimateParsedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Fraction,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(DateTimeParserBucket,CharSequence,int)",8,84,0.9130434782608695,2,8,0.8,6,2,22,0.9166666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$CompositeAffix,<init>,"(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) → void","org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.<init>(PeriodFieldAffix,PeriodFieldAffix)",68,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$CompositeAffix,calculatePrintedLength,(int) → int,org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.calculatePrintedLength(int),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$CompositeAffix,printTo,"(java.lang.StringBuffer, int) → void","org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.printTo(StringBuffer,int)",11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$CompositeAffix,printTo,"(java.io.Writer, int) → void","org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.printTo(Writer,int)",11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$CompositeAffix,parse,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(String,int)",33,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$CompositeAffix,scan,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(String,int)",42,0,0.0,8,0,0.0,5,8,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$CompositeAffix,getAffixes,() → java.lang.String[],org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.getAffixes(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,<init>,(java.util.List) → void,org.joda.time.format.PeriodFormatterBuilder$Composite.<init>(List),8,38,0.8260869565217391,2,2,0.5,3,2,11,0.8461538461538461,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,countFieldsToPrint,"(org.joda.time.ReadablePeriod, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(ReadablePeriod,int,Locale)",0,27,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,calculatePrintedLength,"(org.joda.time.ReadablePeriod, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Composite.calculatePrintedLength(ReadablePeriod,Locale)",0,23,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$Composite.printTo(StringBuffer,ReadablePeriod,Locale)",0,21,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,printTo,"(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$Composite.printTo(Writer,ReadablePeriod,Locale)",21,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,parseInto,"(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(ReadWritablePeriod,String,int,Locale)",4,28,0.875,1,5,0.8333333333333334,4,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,decompose,"(java.util.List, java.util.List, java.util.List) → void","org.joda.time.format.PeriodFormatterBuilder$Composite.decompose(List,List,List)",14,41,0.7454545454545455,4,6,0.6,6,2,11,0.8461538461538461,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Composite,addArrayToList,"(java.util.List, java.lang.Object[]) → void","org.joda.time.format.PeriodFormatterBuilder$Composite.addArrayToList(List,Object[])",17,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,<init>,"(java.lang.String[], java.lang.String[]) → void","org.joda.time.format.PeriodFormatterBuilder$RegExAffix.<init>(String[],String[])",0,57,1.0,0,4,1.0,3,0,12,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,selectSuffixIndex,(int) → int,org.joda.time.format.PeriodFormatterBuilder$RegExAffix.selectSuffixIndex(int),28,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,calculatePrintedLength,(int) → int,org.joda.time.format.PeriodFormatterBuilder$RegExAffix.calculatePrintedLength(int),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,printTo,"(java.lang.StringBuffer, int) → void","org.joda.time.format.PeriodFormatterBuilder$RegExAffix.printTo(StringBuffer,int)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,printTo,"(java.io.Writer, int) → void","org.joda.time.format.PeriodFormatterBuilder$RegExAffix.printTo(Writer,int)",9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,parse,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$RegExAffix.parse(String,int)",42,0,0.0,6,0,0.0,4,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,scan,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$RegExAffix.scan(String,int)",49,0,0.0,8,0,0.0,5,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,getAffixes,() → java.lang.String[],org.joda.time.format.PeriodFormatterBuilder$RegExAffix.getAffixes(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix,<clinit>,() → void,org.joda.time.format.PeriodFormatterBuilder$RegExAffix.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalParserDateTimeParser,of,(org.joda.time.format.InternalParser) → org.joda.time.format.DateTimeParser,org.joda.time.format.InternalParserDateTimeParser.of(InternalParser),9,13,0.5909090909090909,3,3,0.5,4,3,4,0.5714285714285714,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalParserDateTimeParser,<init>,(org.joda.time.format.InternalParser) → void,org.joda.time.format.InternalParserDateTimeParser.<init>(InternalParser),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalParserDateTimeParser,estimateParsedLength,() → int,org.joda.time.format.InternalParserDateTimeParser.estimateParsedLength(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalParserDateTimeParser,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.InternalParserDateTimeParser.parseInto(DateTimeParserBucket,CharSequence,int)",0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/InternalParserDateTimeParser,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.String, int) → int","org.joda.time.format.InternalParserDateTimeParser.parseInto(DateTimeParserBucket,String,int)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalParserDateTimeParser,equals,(java.lang.Object) → boolean,org.joda.time.format.InternalParserDateTimeParser.equals(Object),19,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/InternalParserDateTimeParser,hashCode,() → int,org.joda.time.format.InternalParserDateTimeParser.hashCode(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset,<init>,"(java.lang.String, java.lang.String, boolean, int, int) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.<init>(String,String,boolean,int,int)",8,26,0.7647058823529411,3,3,0.5,4,3,9,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength(),4,27,0.8709677419354839,1,5,0.8333333333333334,4,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",56,76,0.5757575757575758,20,12,0.375,17,19,19,0.5,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(Appendable,ReadablePartial,Locale)",0,1,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimateParsedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(DateTimeParserBucket,CharSequence,int)",155,143,0.4798657718120805,47,25,0.3472222222222222,37,44,43,0.4942528735632184,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset,digitCount,"(java.lang.CharSequence, int, int) → int","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(CharSequence,int,int)",0,29,1.0,1,5,0.8333333333333334,4,0,8,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$NumberFormatter,<init>,"(org.joda.time.DateTimeFieldType, int, boolean) → void","org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.<init>(DateTimeFieldType,int,boolean)",0,12,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$NumberFormatter,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.estimateParsedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$NumberFormatter,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(DateTimeParserBucket,CharSequence,int)",27,153,0.85,11,27,0.7105263157894737,20,6,33,0.8461538461538461,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,<init>,(org.joda.time.format.PeriodFormatter) → void,org.joda.time.format.PeriodFormat$DynamicWordBased.<init>(PeriodFormatter),6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,countFieldsToPrint,"(org.joda.time.ReadablePeriod, int, java.util.Locale) → int","org.joda.time.format.PeriodFormat$DynamicWordBased.countFieldsToPrint(ReadablePeriod,int,Locale)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,calculatePrintedLength,"(org.joda.time.ReadablePeriod, java.util.Locale) → int","org.joda.time.format.PeriodFormat$DynamicWordBased.calculatePrintedLength(ReadablePeriod,Locale)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormat$DynamicWordBased.printTo(StringBuffer,ReadablePeriod,Locale)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,printTo,"(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormat$DynamicWordBased.printTo(Writer,ReadablePeriod,Locale)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,getPrinter,(java.util.Locale) → org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(Locale),16,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,parseInto,"(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale) → int","org.joda.time.format.PeriodFormat$DynamicWordBased.parseInto(ReadWritablePeriod,String,int,Locale)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormat$DynamicWordBased,getParser,(java.util.Locale) → org.joda.time.format.PeriodParser,org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(Locale),16,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,<init>,"(int, int, int) → void","org.joda.time.format.DateTimeFormat$StyleFormatter.<init>(int,int,int)",12,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormat$StyleFormatter.estimatePrintedLength(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",14,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormat$StyleFormatter.printTo(Appendable,ReadablePartial,Locale)",11,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormat$StyleFormatter.estimateParsedLength(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormat$StyleFormatter.parseInto(DateTimeParserBucket,CharSequence,int)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,getFormatter,(java.util.Locale) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat$StyleFormatter.getFormatter(Locale),41,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,getPattern,(java.util.Locale) → java.lang.String,org.joda.time.format.DateTimeFormat$StyleFormatter.getPattern(Locale),43,0,0.0,6,0,0.0,5,10,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatter,<clinit>,() → void,org.joda.time.format.DateTimeFormat$StyleFormatter.<clinit>(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,<init>,"(org.joda.time.format.DateTimePrinter, org.joda.time.format.DateTimeParser) → void","org.joda.time.format.DateTimeFormatter.<init>(DateTimePrinter,DateTimeParser)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,<init>,"(org.joda.time.format.InternalPrinter, org.joda.time.format.InternalParser) → void","org.joda.time.format.DateTimeFormatter.<init>(InternalPrinter,InternalParser)",0,27,1.0,0,0,coverage not available since no branches,1,0,10,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,<init>,"(org.joda.time.format.InternalPrinter, org.joda.time.format.InternalParser, java.util.Locale, boolean, org.joda.time.Chronology, org.joda.time.DateTimeZone, java.lang.Integer, int) → void","org.joda.time.format.DateTimeFormatter.<init>(InternalPrinter,InternalParser,Locale,boolean,Chronology,DateTimeZone,Integer,int)",0,27,1.0,0,0,coverage not available since no branches,1,0,10,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,isPrinter,() → boolean,org.joda.time.format.DateTimeFormatter.isPrinter(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getPrinter,() → org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeFormatter.getPrinter(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getPrinter0,() → org.joda.time.format.InternalPrinter,org.joda.time.format.DateTimeFormatter.getPrinter0(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,isParser,() → boolean,org.joda.time.format.DateTimeFormatter.isParser(),2,5,0.7142857142857143,1,1,0.5,2,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getParser,() → org.joda.time.format.DateTimeParser,org.joda.time.format.DateTimeFormatter.getParser(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getParser0,() → org.joda.time.format.InternalParser,org.joda.time.format.DateTimeFormatter.getParser0(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withLocale,(java.util.Locale) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withLocale(Locale),2,30,0.9375,3,3,0.5,4,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getLocale,() → java.util.Locale,org.joda.time.format.DateTimeFormatter.getLocale(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withOffsetParsed,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withOffsetParsed(),2,22,0.9166666666666666,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,isOffsetParsed,() → boolean,org.joda.time.format.DateTimeFormatter.isOffsetParsed(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withChronology,(org.joda.time.Chronology) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withChronology(Chronology),0,25,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getChronology,() → org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getChronolgy,() → org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter.getChronolgy(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withZoneUTC,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withZoneUTC(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withZone,(org.joda.time.DateTimeZone) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withZone(DateTimeZone),2,22,0.9166666666666666,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getZone,() → org.joda.time.DateTimeZone,org.joda.time.format.DateTimeFormatter.getZone(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withPivotYear,(java.lang.Integer) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withPivotYear(Integer),43,0,0.0,6,0,0.0,4,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withPivotYear,(int) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withPivotYear(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getPivotYear,() → java.lang.Integer,org.joda.time.format.DateTimeFormatter.getPivotYear(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,withDefaultYear,(int) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatter.withDefaultYear(int),19,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,getDefaultYear,() → int,org.joda.time.format.DateTimeFormatter.getDefaultYear(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.StringBuffer, org.joda.time.ReadableInstant) → void","org.joda.time.format.DateTimeFormatter.printTo(StringBuffer,ReadableInstant)",7,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.StringBuilder, org.joda.time.ReadableInstant) → void","org.joda.time.format.DateTimeFormatter.printTo(StringBuilder,ReadableInstant)",7,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.io.Writer, org.joda.time.ReadableInstant) → void","org.joda.time.format.DateTimeFormatter.printTo(Writer,ReadableInstant)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.Appendable, org.joda.time.ReadableInstant) → void","org.joda.time.format.DateTimeFormatter.printTo(Appendable,ReadableInstant)",0,12,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.StringBuffer, long) → void","org.joda.time.format.DateTimeFormatter.printTo(StringBuffer,long)",1,6,0.8571428571428571,0,0,coverage not available since no branches,1,1,3,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.StringBuilder, long) → void","org.joda.time.format.DateTimeFormatter.printTo(StringBuilder,long)",7,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.io.Writer, long) → void","org.joda.time.format.DateTimeFormatter.printTo(Writer,long)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.Appendable, long) → void","org.joda.time.format.DateTimeFormatter.printTo(Appendable,long)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePartial) → void","org.joda.time.format.DateTimeFormatter.printTo(StringBuffer,ReadablePartial)",1,6,0.8571428571428571,0,0,coverage not available since no branches,1,1,3,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.StringBuilder, org.joda.time.ReadablePartial) → void","org.joda.time.format.DateTimeFormatter.printTo(StringBuilder,ReadablePartial)",7,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.io.Writer, org.joda.time.ReadablePartial) → void","org.joda.time.format.DateTimeFormatter.printTo(Writer,ReadablePartial)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial) → void","org.joda.time.format.DateTimeFormatter.printTo(Appendable,ReadablePartial)",5,12,0.7058823529411765,1,1,0.5,2,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,print,(org.joda.time.ReadableInstant) → java.lang.String,org.joda.time.format.DateTimeFormatter.print(ReadableInstant),1,15,0.9375,0,0,coverage not available since no branches,1,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,print,(long) → java.lang.String,org.joda.time.format.DateTimeFormatter.print(long),1,15,0.9375,0,0,coverage not available since no branches,1,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,print,(org.joda.time.ReadablePartial) → java.lang.String,org.joda.time.format.DateTimeFormatter.print(ReadablePartial),1,15,0.9375,0,0,coverage not available since no branches,1,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology) → void","org.joda.time.format.DateTimeFormatter.printTo(Appendable,long,Chronology)",6,43,0.8775510204081632,1,3,0.75,3,3,8,0.7272727272727273,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,requirePrinter,() → org.joda.time.format.InternalPrinter,org.joda.time.format.DateTimeFormatter.requirePrinter(),5,7,0.5833333333333334,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,parseInto,"(org.joda.time.ReadWritableInstant, java.lang.String, int) → int","org.joda.time.format.DateTimeFormatter.parseInto(ReadWritableInstant,String,int)",95,0,0.0,10,0,0.0,6,21,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,parseMillis,(java.lang.String) → long,org.joda.time.format.DateTimeFormatter.parseMillis(String),0,25,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,parseLocalDate,(java.lang.String) → org.joda.time.LocalDate,org.joda.time.format.DateTimeFormatter.parseLocalDate(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,parseLocalTime,(java.lang.String) → org.joda.time.LocalTime,org.joda.time.format.DateTimeFormatter.parseLocalTime(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,parseLocalDateTime,(java.lang.String) → org.joda.time.LocalDateTime,org.joda.time.format.DateTimeFormatter.parseLocalDateTime(String),34,43,0.5584415584415584,4,4,0.5,5,8,8,0.5,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,parseDateTime,(java.lang.String) → org.joda.time.DateTime,org.joda.time.format.DateTimeFormatter.parseDateTime(String),5,84,0.9438202247191011,2,10,0.8333333333333334,7,1,18,0.9473684210526315,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,parseMutableDateTime,(java.lang.String) → org.joda.time.MutableDateTime,org.joda.time.format.DateTimeFormatter.parseMutableDateTime(String),19,69,0.7840909090909091,6,6,0.5,7,4,15,0.7894736842105263,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,requireParser,() → org.joda.time.format.InternalParser,org.joda.time.format.DateTimeFormatter.requireParser(),5,7,0.5833333333333334,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatter,selectChronology,(org.joda.time.Chronology) → org.joda.time.Chronology,org.joda.time.format.DateTimeFormatter.selectChronology(Chronology),5,14,0.7368421052631579,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/ISOPeriodFormat,<init>,() → void,org.joda.time.format.ISOPeriodFormat.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISOPeriodFormat,standard,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.ISOPeriodFormat.standard(),0,34,1.0,0,2,1.0,2,0,20,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISOPeriodFormat,alternate,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.ISOPeriodFormat.alternate(),0,24,1.0,0,2,1.0,2,0,15,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISOPeriodFormat,alternateExtended,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.ISOPeriodFormat.alternateExtended(),0,32,1.0,1,1,0.5,2,0,19,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISOPeriodFormat,alternateWithWeeks,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.ISOPeriodFormat.alternateWithWeeks(),26,0,0.0,2,0,0.0,2,16,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISOPeriodFormat,alternateExtendedWithWeeks,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.ISOPeriodFormat.alternateExtendedWithWeeks(),34,0,0.0,2,0,0.0,2,20,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Literal,<init>,(java.lang.String) → void,org.joda.time.format.PeriodFormatterBuilder$Literal.<init>(String),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Literal,countFieldsToPrint,"(org.joda.time.ReadablePeriod, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Literal.countFieldsToPrint(ReadablePeriod,int,Locale)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Literal,calculatePrintedLength,"(org.joda.time.ReadablePeriod, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Literal.calculatePrintedLength(ReadablePeriod,Locale)",0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Literal,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$Literal.printTo(StringBuffer,ReadablePeriod,Locale)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Literal,printTo,"(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$Literal.printTo(Writer,ReadablePeriod,Locale)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Literal,parseInto,"(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$Literal.parseInto(ReadWritablePeriod,String,int,Locale)",0,21,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$Literal,<clinit>,() → void,org.joda.time.format.PeriodFormatterBuilder$Literal.<clinit>(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,forPattern,(java.lang.String) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.forPattern(String),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,forStyle,(java.lang.String) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.forStyle(String),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,patternForStyle,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.format.DateTimeFormat.patternForStyle(String,Locale)",13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,shortDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.shortDate(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,shortTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.shortTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,shortDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.shortDateTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,mediumDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.mediumDate(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,mediumTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.mediumTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,mediumDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.mediumDateTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,longDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.longDate(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,longTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.longTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,longDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.longDateTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,fullDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.fullDate(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,fullTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.fullTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,fullDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.fullDateTime(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,appendPatternTo,"(org.joda.time.format.DateTimeFormatterBuilder, java.lang.String) → void","org.joda.time.format.DateTimeFormat.appendPatternTo(DateTimeFormatterBuilder,String)",4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,<init>,() → void,org.joda.time.format.DateTimeFormat.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,parsePatternTo,"(org.joda.time.format.DateTimeFormatterBuilder, java.lang.String) → void","org.joda.time.format.DateTimeFormat.parsePatternTo(DateTimeFormatterBuilder,String)",160,156,0.4936708860759494,34,21,0.38181818181818183,39,50,42,0.45652173913043476,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,parseToken,"(java.lang.String, int[]) → java.lang.String","org.joda.time.format.DateTimeFormat.parseToken(String,int[])",6,115,0.9504132231404959,5,27,0.84375,17,2,25,0.9259259259259259,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,isNumericToken,(java.lang.String) → boolean,org.joda.time.format.DateTimeFormat.isNumericToken(String),7,13,0.65,5,2,0.2857142857142857,5,3,5,0.625,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,createFormatterForPattern,(java.lang.String) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.createFormatterForPattern(String),2,41,0.9534883720930233,2,8,0.8,6,1,11,0.9166666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,createFormatterForStyle,(java.lang.String) → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormat.createFormatterForStyle(String),43,0,0.0,8,0,0.0,5,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,createFormatterForStyleIndex,"(int, int) → org.joda.time.format.DateTimeFormatter","org.joda.time.format.DateTimeFormat.createFormatterForStyleIndex(int,int)",40,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,createDateTimeFormatter,"(int, int) → org.joda.time.format.DateTimeFormatter","org.joda.time.format.DateTimeFormat.createDateTimeFormatter(int,int)",26,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,selectStyle,(char) → int,org.joda.time.format.DateTimeFormat.selectStyle(char),24,0,0.0,6,0,0.0,6,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat,<clinit>,() → void,org.joda.time.format.DateTimeFormat.<clinit>(),0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,<init>,"(long, org.joda.time.Chronology, java.util.Locale) → void","org.joda.time.format.DateTimeParserBucket.<init>(long,Chronology,Locale)",0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,<init>,"(long, org.joda.time.Chronology, java.util.Locale, java.lang.Integer) → void","org.joda.time.format.DateTimeParserBucket.<init>(long,Chronology,Locale,Integer)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,<init>,"(long, org.joda.time.Chronology, java.util.Locale, java.lang.Integer, int) → void","org.joda.time.format.DateTimeParserBucket.<init>(long,Chronology,Locale,Integer,int)",1,41,0.9761904761904762,1,1,0.5,2,0,12,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,reset,() → void,org.joda.time.format.DateTimeParserBucket.reset(),21,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,parseMillis,"(org.joda.time.format.DateTimeParser, java.lang.CharSequence) → long","org.joda.time.format.DateTimeParserBucket.parseMillis(DateTimeParser,CharSequence)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,doParseMillis,"(org.joda.time.format.InternalParser, java.lang.CharSequence) → long","org.joda.time.format.DateTimeParserBucket.doParseMillis(InternalParser,CharSequence)",0,29,1.0,0,4,1.0,3,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,getChronology,() → org.joda.time.Chronology,org.joda.time.format.DateTimeParserBucket.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,getLocale,() → java.util.Locale,org.joda.time.format.DateTimeParserBucket.getLocale(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,getZone,() → org.joda.time.DateTimeZone,org.joda.time.format.DateTimeParserBucket.getZone(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,setZone,(org.joda.time.DateTimeZone) → void,org.joda.time.format.DateTimeParserBucket.setZone(DateTimeZone),7,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,getOffset,() → int,org.joda.time.format.DateTimeParserBucket.getOffset(),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,getOffsetInteger,() → java.lang.Integer,org.joda.time.format.DateTimeParserBucket.getOffsetInteger(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,setOffset,(int) → void,org.joda.time.format.DateTimeParserBucket.setOffset(int),8,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,setOffset,(java.lang.Integer) → void,org.joda.time.format.DateTimeParserBucket.setOffset(Integer),0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,getPivotYear,() → java.lang.Integer,org.joda.time.format.DateTimeParserBucket.getPivotYear(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,setPivotYear,(java.lang.Integer) → void,org.joda.time.format.DateTimeParserBucket.setPivotYear(Integer),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,saveField,"(org.joda.time.DateTimeField, int) → void","org.joda.time.format.DateTimeParserBucket.saveField(DateTimeField,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,saveField,"(org.joda.time.DateTimeFieldType, int) → void","org.joda.time.format.DateTimeParserBucket.saveField(DateTimeFieldType,int)",0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,saveField,"(org.joda.time.DateTimeFieldType, java.lang.String, java.util.Locale) → void","org.joda.time.format.DateTimeParserBucket.saveField(DateTimeFieldType,String,Locale)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,obtainSaveField,() → org.joda.time.format.DateTimeParserBucket$SavedField,org.joda.time.format.DateTimeParserBucket.obtainSaveField(),4,59,0.9365079365079365,3,5,0.625,5,0,13,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,saveState,() → java.lang.Object,org.joda.time.format.DateTimeParserBucket.saveState(),0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,restoreState,(java.lang.Object) → boolean,org.joda.time.format.DateTimeParserBucket.restoreState(Object),2,13,0.8666666666666667,2,2,0.5,3,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,computeMillis,() → long,org.joda.time.format.DateTimeParserBucket.computeMillis(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,computeMillis,(boolean) → long,org.joda.time.format.DateTimeParserBucket.computeMillis(boolean),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,computeMillis,"(boolean, java.lang.String) → long","org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,String)",0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,computeMillis,"(boolean, java.lang.CharSequence) → long","org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,CharSequence)",46,142,0.7553191489361702,9,19,0.6785714285714286,15,6,30,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,sort,"(org.joda.time.format.DateTimeParserBucket$SavedField[], int) → void","org.joda.time.format.DateTimeParserBucket.sort(SavedField[],int)",25,25,0.5,2,6,0.75,5,4,4,0.5,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket,compareReverse,"(org.joda.time.DurationField, org.joda.time.DurationField) → int","org.joda.time.format.DateTimeParserBucket.compareReverse(DurationField,DurationField)",4,22,0.8461538461538461,5,7,0.5833333333333334,7,2,5,0.7142857142857143,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$PaddedNumber,<init>,"(org.joda.time.DateTimeFieldType, int, boolean, int) → void","org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.<init>(DateTimeFieldType,int,boolean,int)",0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$PaddedNumber,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.estimatePrintedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$PaddedNumber,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",5,14,0.7368421052631579,0,0,coverage not available since no branches,1,2,4,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$PaddedNumber,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.printTo(Appendable,ReadablePartial,Locale)",6,19,0.76,0,2,1.0,2,2,5,0.7142857142857143,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,<init>,() → void,org.joda.time.format.DateTimeFormatterBuilder.<init>(),0,8,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,toFormatter,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.DateTimeFormatterBuilder.toFormatter(),0,36,1.0,0,8,1.0,5,0,10,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,toPrinter,() → org.joda.time.format.DateTimePrinter,org.joda.time.format.DateTimeFormatterBuilder.toPrinter(),6,12,0.6666666666666666,1,1,0.5,2,2,3,0.6,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,toParser,() → org.joda.time.format.DateTimeParser,org.joda.time.format.DateTimeFormatterBuilder.toParser(),0,18,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,canBuildFormatter,() → boolean,org.joda.time.format.DateTimeFormatterBuilder.canBuildFormatter(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,canBuildPrinter,() → boolean,org.joda.time.format.DateTimeFormatterBuilder.canBuildPrinter(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,canBuildParser,() → boolean,org.joda.time.format.DateTimeFormatterBuilder.canBuildParser(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,clear,() → void,org.joda.time.format.DateTimeFormatterBuilder.clear(),7,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,append,(org.joda.time.format.DateTimeFormatter) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.append(DateTimeFormatter),0,14,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,append,(org.joda.time.format.DateTimePrinter) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.append(DateTimePrinter),0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,append,(org.joda.time.format.DateTimeParser) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.append(DateTimeParser),0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,append,"(org.joda.time.format.DateTimePrinter, org.joda.time.format.DateTimeParser) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.append(DateTimePrinter,DateTimeParser)",13,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,append,"(org.joda.time.format.DateTimePrinter, org.joda.time.format.DateTimeParser[]) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.append(DateTimePrinter,DateTimeParser[])",0,78,1.0,0,12,1.0,7,0,15,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendOptional,(org.joda.time.format.DateTimeParser) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendOptional(DateTimeParser),0,23,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,checkParser,(org.joda.time.format.DateTimeParser) → void,org.joda.time.format.DateTimeFormatterBuilder.checkParser(DateTimeParser),5,3,0.375,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,checkPrinter,(org.joda.time.format.DateTimePrinter) → void,org.joda.time.format.DateTimeFormatterBuilder.checkPrinter(DateTimePrinter),5,3,0.375,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,append0,(java.lang.Object) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.append0(Object),0,15,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,append0,"(org.joda.time.format.InternalPrinter, org.joda.time.format.InternalParser) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.append0(InternalPrinter,InternalParser)",0,15,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendLiteral,(char) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(char),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendLiteral,(java.lang.String) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendLiteral(String),14,14,0.5,2,3,0.6,4,2,4,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendDecimal,"(org.joda.time.DateTimeFieldType, int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(DateTimeFieldType,int,int)",11,31,0.7380952380952381,4,6,0.6,6,3,6,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendFixedDecimal,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendFixedDecimal(DateTimeFieldType,int)",17,13,0.43333333333333335,2,2,0.5,3,2,3,0.6,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendSignedDecimal,"(org.joda.time.DateTimeFieldType, int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(DateTimeFieldType,int,int)",20,22,0.5238095238095238,5,5,0.5,6,4,5,0.5555555555555556,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendFixedSignedDecimal,"(org.joda.time.DateTimeFieldType, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendFixedSignedDecimal(DateTimeFieldType,int)",30,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendText,(org.joda.time.DateTimeFieldType) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendText(DateTimeFieldType),8,7,0.4666666666666667,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendShortText,(org.joda.time.DateTimeFieldType) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendShortText(DateTimeFieldType),0,15,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendFraction,"(org.joda.time.DateTimeFieldType, int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendFraction(DateTimeFieldType,int,int)",11,18,0.6206896551724138,4,4,0.5,5,3,4,0.5714285714285714,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendFractionOfSecond,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(int,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendFractionOfMinute,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfMinute(int,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendFractionOfHour,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfHour(int,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendFractionOfDay,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfDay(int,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendMillisOfSecond,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfSecond(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendMillisOfDay,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendMillisOfDay(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendSecondOfMinute,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfMinute(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendSecondOfDay,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendSecondOfDay(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendMinuteOfHour,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfHour(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendMinuteOfDay,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendMinuteOfDay(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendHourOfDay,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendHourOfDay(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendClockhourOfDay,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfDay(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendHourOfHalfday,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendHourOfHalfday(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendClockhourOfHalfday,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendClockhourOfHalfday(int),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendDayOfWeek,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeek(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendDayOfMonth,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendDayOfMonth(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendDayOfYear,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendDayOfYear(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendWeekOfWeekyear,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendWeekOfWeekyear(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendWeekyear,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendWeekyear(int,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendMonthOfYear,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYear(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendYear,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendYear(int,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTwoDigitYear,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTwoDigitYear,"(int, boolean) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitYear(int,boolean)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTwoDigitWeekyear,(int) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(int),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTwoDigitWeekyear,"(int, boolean) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendTwoDigitWeekyear(int,boolean)",9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendYearOfEra,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendYearOfEra(int,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendYearOfCentury,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendYearOfCentury(int,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendCenturyOfEra,"(int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendCenturyOfEra(int,int)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendHalfdayOfDayText,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendHalfdayOfDayText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendDayOfWeekText,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendDayOfWeekShortText,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendDayOfWeekShortText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendMonthOfYearText,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendMonthOfYearShortText,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendMonthOfYearShortText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendEraText,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendEraText(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTimeZoneName,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTimeZoneName,(java.util.Map) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneName(Map),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTimeZoneShortName,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTimeZoneShortName,(java.util.Map) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneShortName(Map),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTimeZoneId,() → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneId(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTimeZoneOffset,"(java.lang.String, boolean, int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(String,boolean,int,int)",0,11,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendTimeZoneOffset,"(java.lang.String, java.lang.String, boolean, int, int) → org.joda.time.format.DateTimeFormatterBuilder","org.joda.time.format.DateTimeFormatterBuilder.appendTimeZoneOffset(String,String,boolean,int,int)",0,11,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendPattern,(java.lang.String) → org.joda.time.format.DateTimeFormatterBuilder,org.joda.time.format.DateTimeFormatterBuilder.appendPattern(String),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,getFormatter,() → java.lang.Object,org.joda.time.format.DateTimeFormatterBuilder.getFormatter(),2,43,0.9555555555555556,3,9,0.75,7,0,13,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,isPrinter,(java.lang.Object) → boolean,org.joda.time.format.DateTimeFormatterBuilder.isPrinter(Object),0,14,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,isParser,(java.lang.Object) → boolean,org.joda.time.format.DateTimeFormatterBuilder.isParser(Object),2,12,0.8571428571428571,1,3,0.75,3,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,isFormatter,(java.lang.Object) → boolean,org.joda.time.format.DateTimeFormatterBuilder.isFormatter(Object),5,7,0.5833333333333334,3,1,0.25,3,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,appendUnknownString,"(java.lang.Appendable, int) → void","org.joda.time.format.DateTimeFormatterBuilder.appendUnknownString(Appendable,int)",0,11,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,csStartsWith,"(java.lang.CharSequence, int, java.lang.String) → boolean","org.joda.time.format.DateTimeFormatterBuilder.csStartsWith(CharSequence,int,String)",31,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder,csStartsWithIgnoreCase,"(java.lang.CharSequence, int, java.lang.String) → boolean","org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(CharSequence,int,String)",0,49,1.0,2,8,0.8,6,0,12,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$PluralAffix,<init>,"(java.lang.String, java.lang.String) → void","org.joda.time.format.PeriodFormatterBuilder$PluralAffix.<init>(String,String)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$PluralAffix,calculatePrintedLength,(int) → int,org.joda.time.format.PeriodFormatterBuilder$PluralAffix.calculatePrintedLength(int),10,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$PluralAffix,printTo,"(java.lang.StringBuffer, int) → void","org.joda.time.format.PeriodFormatterBuilder$PluralAffix.printTo(StringBuffer,int)",12,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$PluralAffix,printTo,"(java.io.Writer, int) → void","org.joda.time.format.PeriodFormatterBuilder$PluralAffix.printTo(Writer,int)",11,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$PluralAffix,parse,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$PluralAffix.parse(String,int)",63,0,0.0,10,0,0.0,6,13,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$PluralAffix,scan,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$PluralAffix.scan(String,int)",71,0,0.0,12,0,0.0,7,17,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$PluralAffix,getAffixes,() → java.lang.String[],org.joda.time.format.PeriodFormatterBuilder$PluralAffix.getAffixes(),13,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatterCacheKey,<init>,"(int, int, int, java.util.Locale) → void","org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.<init>(int,int,int,Locale)",17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatterCacheKey,hashCode,() → int,org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.hashCode(),24,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormat$StyleFormatterCacheKey,equals,(java.lang.Object) → boolean,org.joda.time.format.DateTimeFormat$StyleFormatterCacheKey.equals(Object),42,0,0.0,14,0,0.0,8,15,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket$SavedState,<init>,(org.joda.time.format.DateTimeParserBucket) → void,org.joda.time.format.DateTimeParserBucket$SavedState.<init>(DateTimeParserBucket),0,22,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket$SavedState,restoreState,(org.joda.time.format.DateTimeParserBucket) → boolean,org.joda.time.format.DateTimeParserBucket$SavedState.restoreState(DateTimeParserBucket),2,35,0.9459459459459459,1,3,0.75,3,1,8,0.8888888888888888,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.estimatePrintedLength(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",10,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.printTo(Appendable,ReadablePartial,Locale)",1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.estimateParsedLength(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(DateTimeParserBucket,CharSequence,int)",122,0,0.0,18,0,0.0,10,25,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId,<clinit>,() → void,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.<clinit>(),102,0,0.0,8,0,0.0,5,26,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket$SavedField,<init>,() → void,org.joda.time.format.DateTimeParserBucket$SavedField.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket$SavedField,init,"(org.joda.time.DateTimeField, int) → void","org.joda.time.format.DateTimeParserBucket$SavedField.init(DateTimeField,int)",0,13,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket$SavedField,init,"(org.joda.time.DateTimeField, java.lang.String, java.util.Locale) → void","org.joda.time.format.DateTimeParserBucket$SavedField.init(DateTimeField,String,Locale)",13,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket$SavedField,set,"(long, boolean) → long","org.joda.time.format.DateTimeParserBucket$SavedField.set(long,boolean)",9,20,0.6896551724137931,1,3,0.75,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserBucket$SavedField,compareTo,(org.joda.time.format.DateTimeParserBucket$SavedField) → int,org.joda.time.format.DateTimeParserBucket$SavedField.compareTo(SavedField),7,14,0.6666666666666666,1,1,0.5,2,2,5,0.7142857142857143,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneName,<init>,"(int, java.util.Map) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.<init>(int,Map)",9,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneName,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.estimatePrintedLength(),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneName,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneName,print,"(long, org.joda.time.DateTimeZone, java.util.Locale) → java.lang.String","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.print(long,DateTimeZone,Locale)",19,0,0.0,5,0,0.0,4,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneName,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.printTo(Appendable,ReadablePartial,Locale)",1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneName,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.estimateParsedLength(),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TimeZoneName,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(DateTimeParserBucket,CharSequence,int)",54,0,0.0,12,0,0.0,7,12,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,<init>,() → void,org.joda.time.format.ISODateTimeFormat.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,forFields,"(java.util.Collection, boolean, boolean) → org.joda.time.format.DateTimeFormatter","org.joda.time.format.ISODateTimeFormat.forFields(Collection,boolean,boolean)",40,99,0.7122302158273381,6,16,0.7272727272727273,12,8,22,0.7333333333333333,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateByMonth,"(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean) → boolean","org.joda.time.format.ISODateTimeFormat.dateByMonth(DateTimeFormatterBuilder,Collection,boolean,boolean)",88,32,0.26666666666666666,11,3,0.21428571428571427,8,23,9,0.28125,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateByOrdinal,"(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean) → boolean","org.joda.time.format.ISODateTimeFormat.dateByOrdinal(DateTimeFormatterBuilder,Collection,boolean,boolean)",39,0,0.0,6,0,0.0,4,11,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateByWeek,"(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean) → boolean","org.joda.time.format.ISODateTimeFormat.dateByWeek(DateTimeFormatterBuilder,Collection,boolean,boolean)",30,89,0.7478991596638656,4,10,0.7142857142857143,8,8,24,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,time,"(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean, boolean, boolean) → void","org.joda.time.format.ISODateTimeFormat.time(DateTimeFormatterBuilder,Collection,boolean,boolean,boolean,boolean)",98,89,0.47593582887700536,52,32,0.38095238095238093,43,14,23,0.6216216216216216,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,checkNotStrictISO,"(java.util.Collection, boolean) → void","org.joda.time.format.ISODateTimeFormat.checkNotStrictISO(Collection,boolean)",15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,appendSeparator,"(org.joda.time.format.DateTimeFormatterBuilder, boolean) → void","org.joda.time.format.ISODateTimeFormat.appendSeparator(DateTimeFormatterBuilder,boolean)",0,7,1.0,1,1,0.5,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateParser(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,localDateParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.localDateParser(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateElementParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateElementParser(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,timeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.timeParser(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,localTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.localTimeParser(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,timeElementParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.timeElementParser(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateTimeParser(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateOptionalTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateOptionalTimeParser(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,localDateOptionalTimeParser,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.localDateOptionalTimeParser(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,date,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.date(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,time,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.time(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,timeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.timeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,tTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.tTime(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,tTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.tTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateTime(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,ordinalDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.ordinalDate(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,ordinalDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.ordinalDateTime(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,ordinalDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.ordinalDateTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,weekDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.weekDate(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,weekDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.weekDateTime(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,weekDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.weekDateTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicDate(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicTime(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicTTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicTTime(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicTTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicTTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicDateTime(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicDateTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicOrdinalDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicOrdinalDate(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicOrdinalDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicOrdinalDateTime(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicOrdinalDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicOrdinalDateTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicWeekDate,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicWeekDate(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicWeekDateTime,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicWeekDateTime(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,basicWeekDateTimeNoMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.basicWeekDateTimeNoMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,year,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.year(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,yearMonth,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.yearMonth(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,yearMonthDay,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.yearMonthDay(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,weekyear,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.weekyear(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,weekyearWeek,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.weekyearWeek(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,weekyearWeekDay,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.weekyearWeekDay(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,hour,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.hour(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,hourMinute,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.hourMinute(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,hourMinuteSecond,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.hourMinuteSecond(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,hourMinuteSecondMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.hourMinuteSecondMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,hourMinuteSecondFraction,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.hourMinuteSecondFraction(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateHour,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateHour(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateHourMinute,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateHourMinute(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateHourMinuteSecond,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateHourMinuteSecond(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateHourMinuteSecondMillis,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateHourMinuteSecondMillis(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/ISODateTimeFormat,dateHourMinuteSecondFraction,() → org.joda.time.format.DateTimeFormatter,org.joda.time.format.ISODateTimeFormat.dateHourMinuteSecondFraction(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,<init>,() → void,org.joda.time.format.PeriodFormatterBuilder.<init>(),0,5,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,toFormatter,() → org.joda.time.format.PeriodFormatter,org.joda.time.format.PeriodFormatterBuilder.toFormatter(),0,40,1.0,0,4,1.0,3,0,6,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,toPrinter,() → org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodFormatterBuilder.toPrinter(),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,toParser,() → org.joda.time.format.PeriodParser,org.joda.time.format.PeriodFormatterBuilder.toParser(),2,7,0.7777777777777778,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,clear,() → void,org.joda.time.format.PeriodFormatterBuilder.clear(),3,35,0.9210526315789473,1,1,0.5,2,1,11,0.9166666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,append,(org.joda.time.format.PeriodFormatter) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.append(PeriodFormatter),18,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,append,"(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.append(PeriodPrinter,PeriodParser)",18,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendLiteral,(java.lang.String) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendLiteral(String),5,16,0.7619047619047619,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,minimumPrintedDigits,(int) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.minimumPrintedDigits(int),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,maximumParsedDigits,(int) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.maximumParsedDigits(int),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,rejectSignedValues,(boolean) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.rejectSignedValues(boolean),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,printZeroRarelyLast,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.printZeroRarelyLast(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,printZeroRarelyFirst,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.printZeroRarelyFirst(),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,printZeroIfSupported,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.printZeroIfSupported(),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,printZeroAlways,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.printZeroAlways(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,printZeroNever,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.printZeroNever(),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendPrefix,(java.lang.String) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendPrefix(String),13,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendPrefix,"(java.lang.String, java.lang.String) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.appendPrefix(String,String)",8,8,0.5,1,3,0.75,3,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendPrefix,"(java.lang.String[], java.lang.String[]) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.appendPrefix(String[],String[])",25,0,0.0,8,0,0.0,5,3,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendPrefix,(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendPrefix(PeriodFieldAffix),21,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendYears,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendYears(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendMonths,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendMonths(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendWeeks,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendWeeks(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendDays,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendDays(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendHours,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendHours(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendMinutes,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendMinutes(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSeconds,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSeconds(),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSecondsWithMillis,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithMillis(),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSecondsWithOptionalMillis,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSecondsWithOptionalMillis(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendMillis,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendMillis(),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendMillis3Digit,() → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendMillis3Digit(),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendField,(int) → void,org.joda.time.format.PeriodFormatterBuilder.appendField(int),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendField,"(int, int) → void","org.joda.time.format.PeriodFormatterBuilder.appendField(int,int)",0,31,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSuffix,(java.lang.String) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSuffix(String),0,13,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSuffix,"(java.lang.String, java.lang.String) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.appendSuffix(String,String)",10,6,0.375,3,1,0.25,3,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSuffix,"(java.lang.String[], java.lang.String[]) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.appendSuffix(String[],String[])",8,17,0.68,1,7,0.875,5,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSuffix,(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSuffix(PeriodFieldAffix),0,79,1.0,3,7,0.7,6,0,13,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSeparator,(java.lang.String) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSeparator(String),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSeparatorIfFieldsAfter,(java.lang.String) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsAfter(String),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSeparatorIfFieldsBefore,(java.lang.String) → org.joda.time.format.PeriodFormatterBuilder,org.joda.time.format.PeriodFormatterBuilder.appendSeparatorIfFieldsBefore(String),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSeparator,"(java.lang.String, java.lang.String) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.appendSeparator(String,String)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSeparator,"(java.lang.String, java.lang.String, java.lang.String[]) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.appendSeparator(String,String,String[])",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,appendSeparator,"(java.lang.String, java.lang.String, java.lang.String[], boolean, boolean) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.appendSeparator(String,String,String[],boolean,boolean)",31,78,0.7155963302752294,8,10,0.5555555555555556,10,6,18,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,clearPrefix,() → void,org.joda.time.format.PeriodFormatterBuilder.clearPrefix(),5,7,0.5833333333333334,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,append0,"(org.joda.time.format.PeriodPrinter, org.joda.time.format.PeriodParser) → org.joda.time.format.PeriodFormatterBuilder","org.joda.time.format.PeriodFormatterBuilder.append0(PeriodPrinter,PeriodParser)",4,28,0.875,2,2,0.5,3,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,toFormatter,"(java.util.List, boolean, boolean) → org.joda.time.format.PeriodFormatter","org.joda.time.format.PeriodFormatterBuilder.toFormatter(List,boolean,boolean)",25,64,0.7191011235955056,6,10,0.625,9,3,12,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,createComposite,(java.util.List) → java.lang.Object[],org.joda.time.format.PeriodFormatterBuilder.createComposite(List),15,30,0.6666666666666666,1,2,0.6666666666666666,3,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder,<clinit>,() → void,org.joda.time.format.PeriodFormatterBuilder.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,<init>,"(org.joda.time.DateTimeFieldType, boolean) → void","org.joda.time.format.DateTimeFormatterBuilder$TextField.<init>(DateTimeFieldType,boolean)",0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TextField.estimatePrintedLength(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",15,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TextField.printTo(Appendable,ReadablePartial,Locale)",14,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,print,"(long, org.joda.time.Chronology, java.util.Locale) → java.lang.String","org.joda.time.format.DateTimeFormatterBuilder$TextField.print(long,Chronology,Locale)",18,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,print,"(org.joda.time.ReadablePartial, java.util.Locale) → java.lang.String","org.joda.time.format.DateTimeFormatterBuilder$TextField.print(ReadablePartial,Locale)",26,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TextField.estimateParsedLength(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(DateTimeParserBucket,CharSequence,int)",224,0,0.0,16,0,0.0,9,43,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TextField,<clinit>,() → void,org.joda.time.format.DateTimeFormatterBuilder$TextField.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,<init>,"(int, int, int, boolean, int, org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[], org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) → void","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.<init>(int,int,int,boolean,int,FieldFormatter[],PeriodFieldAffix,PeriodFieldAffix)",0,27,1.0,0,0,coverage not available since no branches,1,0,10,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,<init>,"(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter, org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix) → void","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.<init>(FieldFormatter,PeriodFieldAffix)",7,37,0.8409090909090909,1,1,0.5,2,1,11,0.9166666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,finish,(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[]) → void,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(FieldFormatter[]),4,51,0.9272727272727272,1,9,0.9,6,1,10,0.9090909090909091,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,countFieldsToPrint,"(org.joda.time.ReadablePeriod, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(ReadablePeriod,int,Locale)",2,16,0.8888888888888888,1,5,0.8333333333333334,4,1,4,0.8,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,calculatePrintedLength,"(org.joda.time.ReadablePeriod, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(ReadablePeriod,Locale)",11,63,0.8513513513513513,3,11,0.7857142857142857,8,1,16,0.9411764705882353,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,printTo,"(java.lang.StringBuffer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(StringBuffer,ReadablePeriod,Locale)",14,78,0.8478260869565217,5,15,0.75,11,2,21,0.9130434782608695,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,printTo,"(java.io.Writer, org.joda.time.ReadablePeriod, java.util.Locale) → void","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(Writer,ReadablePeriod,Locale)",75,0,0.0,16,0,0.0,9,20,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,parseInto,"(org.joda.time.ReadWritablePeriod, java.lang.String, int, java.util.Locale) → int","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(ReadWritablePeriod,String,int,Locale)",210,134,0.38953488372093026,59,27,0.313953488372093,44,42,33,0.44,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,parseInt,"(java.lang.String, int, int) → int","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInt(String,int,int)",26,40,0.6060606060606061,6,6,0.5,7,6,10,0.625,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,getFieldValue,(org.joda.time.ReadablePeriod) → long,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(ReadablePeriod),52,120,0.6976744186046512,17,25,0.5952380952380952,27,14,29,0.6744186046511628,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,isZero,(org.joda.time.ReadablePeriod) → boolean,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isZero(ReadablePeriod),0,18,1.0,0,4,1.0,3,0,4,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,isSupported,"(org.joda.time.PeriodType, int) → boolean","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(PeriodType,int)",2,46,0.9583333333333334,2,12,0.8571428571428571,12,1,11,0.9166666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,setFieldValue,"(org.joda.time.ReadWritablePeriod, int, int) → void","org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.setFieldValue(ReadWritablePeriod,int,int)",12,23,0.6571428571428571,4,5,0.5555555555555556,9,6,12,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$FieldFormatter,getFieldType,() → int,org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldType(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,<init>,"(org.joda.time.DateTimeFieldType, int, boolean) → void","org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.<init>(DateTimeFieldType,int,boolean)",12,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.estimateParsedLength(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(DateTimeParserBucket,CharSequence,int)",243,0,0.0,48,0,0.0,25,59,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.estimatePrintedLength(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",21,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,getTwoDigitYear,"(long, org.joda.time.Chronology) → int","org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(long,Chronology)",19,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.printTo(Appendable,ReadablePartial,Locale)",20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$TwoDigitYear,getTwoDigitYear,(org.joda.time.ReadablePartial) → int,org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.getTwoDigitYear(ReadablePartial),22,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,<init>,(java.util.List) → void,org.joda.time.format.DateTimeFormatterBuilder$Composite.<init>(List),0,112,1.0,0,12,1.0,7,0,27,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$Composite.estimatePrintedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",4,30,0.8823529411764706,2,4,0.6666666666666666,4,1,8,0.8888888888888888,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$Composite.printTo(Appendable,ReadablePartial,Locale)",4,27,0.8709677419354839,1,5,0.8333333333333334,4,1,8,0.8888888888888888,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$Composite.estimateParsedLength(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(DateTimeParserBucket,CharSequence,int)",4,27,0.8709677419354839,1,5,0.8333333333333334,4,1,6,0.8571428571428571,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,isPrinter,() → boolean,org.joda.time.format.DateTimeFormatterBuilder$Composite.isPrinter(),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,isParser,() → boolean,org.joda.time.format.DateTimeFormatterBuilder$Composite.isParser(),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,decompose,"(java.util.List, java.util.List, java.util.List) → void","org.joda.time.format.DateTimeFormatterBuilder$Composite.decompose(List,List,List)",0,49,1.0,0,6,1.0,4,0,11,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$Composite,addArrayToList,"(java.util.List, java.lang.Object[]) → void","org.joda.time.format.DateTimeFormatterBuilder$Composite.addArrayToList(List,Object[])",0,17,1.0,1,3,0.75,3,0,4,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix,<init>,() → void,org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix,finish,(java.util.Set) → void,org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(Set),4,88,0.9565217391304348,5,13,0.7222222222222222,10,1,16,0.9411764705882353,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$IgnorableAffix,matchesOtherAffix,"(int, java.lang.String, int) → boolean","org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,String,int)",33,16,0.32653061224489793,10,2,0.16666666666666666,7,4,3,0.42857142857142855,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix$1,<init>,() → void,org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$RegExAffix$1,compare,"(java.lang.String, java.lang.String) → int","org.joda.time.format.PeriodFormatterBuilder$RegExAffix$1.compare(String,String)",0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserInternalParser,of,(org.joda.time.format.DateTimeParser) → org.joda.time.format.InternalParser,org.joda.time.format.DateTimeParserInternalParser.of(DateTimeParser),0,15,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserInternalParser,<init>,(org.joda.time.format.DateTimeParser) → void,org.joda.time.format.DateTimeParserInternalParser.<init>(DateTimeParser),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserInternalParser,getUnderlying,() → org.joda.time.format.DateTimeParser,org.joda.time.format.DateTimeParserInternalParser.getUnderlying(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeParserInternalParser,estimateParsedLength,() → int,org.joda.time.format.DateTimeParserInternalParser.estimateParsedLength(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeParserInternalParser,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeParserInternalParser.parseInto(DateTimeParserBucket,CharSequence,int)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$StringLiteral,<init>,(java.lang.String) → void,org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.<init>(String),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$StringLiteral,estimatePrintedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimatePrintedLength(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$StringLiteral,printTo,"(java.lang.Appendable, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(Appendable,long,Chronology,int,DateTimeZone,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$StringLiteral,printTo,"(java.lang.Appendable, org.joda.time.ReadablePartial, java.util.Locale) → void","org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.printTo(Appendable,ReadablePartial,Locale)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$StringLiteral,estimateParsedLength,() → int,org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.estimateParsedLength(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$StringLiteral,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$StringLiteral.parseInto(DateTimeParserBucket,CharSequence,int)",6,10,0.625,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$FixedNumber,<init>,"(org.joda.time.DateTimeFieldType, int, boolean) → void","org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.<init>(DateTimeFieldType,int,boolean)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/DateTimeFormatterBuilder$FixedNumber,parseInto,"(org.joda.time.format.DateTimeParserBucket, java.lang.CharSequence, int) → int","org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(DateTimeParserBucket,CharSequence,int)",50,0,0.0,14,0,0.0,8,14,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$SimpleAffix,<init>,(java.lang.String) → void,org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.<init>(String),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$SimpleAffix,calculatePrintedLength,(int) → int,org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.calculatePrintedLength(int),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$SimpleAffix,printTo,"(java.lang.StringBuffer, int) → void","org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.printTo(StringBuffer,int)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$SimpleAffix,printTo,"(java.io.Writer, int) → void","org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.printTo(Writer,int)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$SimpleAffix,parse,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.parse(String,int)",4,24,0.8571428571428571,2,2,0.5,3,1,5,0.8333333333333334,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$SimpleAffix,scan,"(java.lang.String, int) → int","org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.scan(String,int)",0,42,1.0,1,7,0.875,5,0,11,1.0,0,1,1.0
org/joda/time/format,org/joda/time/format/PeriodFormatterBuilder$SimpleAffix,getAffixes,() → java.lang.String[],org.joda.time.format.PeriodFormatterBuilder$SimpleAffix.getAffixes(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/StringConverter,<init>,() → void,org.joda.time.convert.StringConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/StringConverter,getInstantMillis,"(java.lang.Object, org.joda.time.Chronology) → long","org.joda.time.convert.StringConverter.getInstantMillis(Object,Chronology)",0,11,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/StringConverter,getPartialValues,"(org.joda.time.ReadablePartial, java.lang.Object, org.joda.time.Chronology, org.joda.time.format.DateTimeFormatter) → int[]","org.joda.time.convert.StringConverter.getPartialValues(ReadablePartial,Object,Chronology,DateTimeFormatter)",20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/StringConverter,getDurationMillis,(java.lang.Object) → long,org.joda.time.convert.StringConverter.getDurationMillis(Object),181,25,0.12135922330097088,41,1,0.023809523809523808,22,27,5,0.15625,0,1,1.0
org/joda/time/convert,org/joda/time/convert/StringConverter,setInto,"(org.joda.time.ReadWritablePeriod, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.StringConverter.setInto(ReadWritablePeriod,Object,Chronology)",23,18,0.43902439024390244,3,1,0.25,3,3,6,0.6666666666666666,0,1,1.0
org/joda/time/convert,org/joda/time/convert/StringConverter,setInto,"(org.joda.time.ReadWritableInterval, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.StringConverter.setInto(ReadWritableInterval,Object,Chronology)",0,188,1.0,2,22,0.9166666666666666,13,0,38,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/StringConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.StringConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/StringConverter,<clinit>,() → void,org.joda.time.convert.StringConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,<init>,(org.joda.time.convert.Converter[]) → void,org.joda.time.convert.ConverterSet.<init>(Converter[]),0,10,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,select,(java.lang.Class) → org.joda.time.convert.Converter,org.joda.time.convert.ConverterSet.select(Class),55,69,0.5564516129032258,10,10,0.5,11,13,15,0.5357142857142857,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,size,() → int,org.joda.time.convert.ConverterSet.size(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,copyInto,(org.joda.time.convert.Converter[]) → void,org.joda.time.convert.ConverterSet.copyInto(Converter[]),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,add,"(org.joda.time.convert.Converter, org.joda.time.convert.Converter[]) → org.joda.time.convert.ConverterSet","org.joda.time.convert.ConverterSet.add(Converter,Converter[])",43,52,0.5473684210526316,11,5,0.3125,9,11,12,0.5217391304347826,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,remove,"(org.joda.time.convert.Converter, org.joda.time.convert.Converter[]) → org.joda.time.convert.ConverterSet","org.joda.time.convert.ConverterSet.remove(Converter,Converter[])",32,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,remove,"(int, org.joda.time.convert.Converter[]) → org.joda.time.convert.ConverterSet","org.joda.time.convert.ConverterSet.remove(int,Converter[])",10,40,0.8,2,6,0.75,5,2,10,0.8333333333333334,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterSet,selectSlow,"(org.joda.time.convert.ConverterSet, java.lang.Class) → org.joda.time.convert.Converter","org.joda.time.convert.ConverterSet.selectSlow(ConverterSet,Class)",111,56,0.33532934131736525,17,13,0.43333333333333335,16,24,16,0.4,0,1,1.0
org/joda/time/convert,org/joda/time/convert/NullConverter,<init>,() → void,org.joda.time.convert.NullConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/NullConverter,getDurationMillis,(java.lang.Object) → long,org.joda.time.convert.NullConverter.getDurationMillis(Object),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/NullConverter,setInto,"(org.joda.time.ReadWritablePeriod, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.NullConverter.setInto(ReadWritablePeriod,Object,Chronology)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/NullConverter,setInto,"(org.joda.time.ReadWritableInterval, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.NullConverter.setInto(ReadWritableInterval,Object,Chronology)",10,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/NullConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.NullConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/NullConverter,<clinit>,() → void,org.joda.time.convert.NullConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/CalendarConverter,<init>,() → void,org.joda.time.convert.CalendarConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/CalendarConverter,getChronology,"(java.lang.Object, org.joda.time.Chronology) → org.joda.time.Chronology","org.joda.time.convert.CalendarConverter.getChronology(Object,Chronology)",22,0,0.0,2,0,0.0,2,9,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/CalendarConverter,getChronology,"(java.lang.Object, org.joda.time.DateTimeZone) → org.joda.time.Chronology","org.joda.time.convert.CalendarConverter.getChronology(Object,DateTimeZone)",41,0,0.0,8,0,0.0,5,11,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/CalendarConverter,getInstantMillis,"(java.lang.Object, org.joda.time.Chronology) → long","org.joda.time.convert.CalendarConverter.getInstantMillis(Object,Chronology)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/CalendarConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.CalendarConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/CalendarConverter,<clinit>,() → void,org.joda.time.convert.CalendarConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableInstantConverter,<init>,() → void,org.joda.time.convert.ReadableInstantConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableInstantConverter,getChronology,"(java.lang.Object, org.joda.time.DateTimeZone) → org.joda.time.Chronology","org.joda.time.convert.ReadableInstantConverter.getChronology(Object,DateTimeZone)",6,20,0.7692307692307693,3,3,0.5,4,2,7,0.7777777777777778,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableInstantConverter,getChronology,"(java.lang.Object, org.joda.time.Chronology) → org.joda.time.Chronology","org.joda.time.convert.ReadableInstantConverter.getChronology(Object,Chronology)",0,11,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableInstantConverter,getInstantMillis,"(java.lang.Object, org.joda.time.Chronology) → long","org.joda.time.convert.ReadableInstantConverter.getInstantMillis(Object,Chronology)",0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableInstantConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.ReadableInstantConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableInstantConverter,<clinit>,() → void,org.joda.time.convert.ReadableInstantConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableDurationConverter,<init>,() → void,org.joda.time.convert.ReadableDurationConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableDurationConverter,getDurationMillis,(java.lang.Object) → long,org.joda.time.convert.ReadableDurationConverter.getDurationMillis(Object),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ReadableDurationConverter,setInto,"(org.joda.time.ReadWritablePeriod, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.ReadableDurationConverter.setInto(ReadWritablePeriod,Object,Chronology)",23,6,0.20689655172413793,2,0,0.0,2,5,2,0.2857142857142857,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableDurationConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.ReadableDurationConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableDurationConverter,<clinit>,() → void,org.joda.time.convert.ReadableDurationConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterSet$Entry,<init>,"(java.lang.Class, org.joda.time.convert.Converter) → void","org.joda.time.convert.ConverterSet$Entry.<init>(Class,Converter)",0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,<init>,() → void,org.joda.time.convert.AbstractConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,getInstantMillis,"(java.lang.Object, org.joda.time.Chronology) → long","org.joda.time.convert.AbstractConverter.getInstantMillis(Object,Chronology)",0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,getChronology,"(java.lang.Object, org.joda.time.DateTimeZone) → org.joda.time.Chronology","org.joda.time.convert.AbstractConverter.getChronology(Object,DateTimeZone)",0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,getChronology,"(java.lang.Object, org.joda.time.Chronology) → org.joda.time.Chronology","org.joda.time.convert.AbstractConverter.getChronology(Object,Chronology)",0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,getPartialValues,"(org.joda.time.ReadablePartial, java.lang.Object, org.joda.time.Chronology) → int[]","org.joda.time.convert.AbstractConverter.getPartialValues(ReadablePartial,Object,Chronology)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,getPartialValues,"(org.joda.time.ReadablePartial, java.lang.Object, org.joda.time.Chronology, org.joda.time.format.DateTimeFormatter) → int[]","org.joda.time.convert.AbstractConverter.getPartialValues(ReadablePartial,Object,Chronology,DateTimeFormatter)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,getPeriodType,(java.lang.Object) → org.joda.time.PeriodType,org.joda.time.convert.AbstractConverter.getPeriodType(Object),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,isReadableInterval,"(java.lang.Object, org.joda.time.Chronology) → boolean","org.joda.time.convert.AbstractConverter.isReadableInterval(Object,Chronology)",0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/AbstractConverter,toString,() → java.lang.String,org.joda.time.convert.AbstractConverter.toString(),18,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager$LazyConverterManagerHolder,<clinit>,() → void,org.joda.time.convert.ConverterManager$LazyConverterManagerHolder.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/DateConverter,<init>,() → void,org.joda.time.convert.DateConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/DateConverter,getInstantMillis,"(java.lang.Object, org.joda.time.Chronology) → long","org.joda.time.convert.DateConverter.getInstantMillis(Object,Chronology)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/DateConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.DateConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/DateConverter,<clinit>,() → void,org.joda.time.convert.DateConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/LongConverter,<init>,() → void,org.joda.time.convert.LongConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/LongConverter,getInstantMillis,"(java.lang.Object, org.joda.time.Chronology) → long","org.joda.time.convert.LongConverter.getInstantMillis(Object,Chronology)",4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/LongConverter,getDurationMillis,(java.lang.Object) → long,org.joda.time.convert.LongConverter.getDurationMillis(Object),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/LongConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.LongConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/LongConverter,<clinit>,() → void,org.joda.time.convert.LongConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePeriodConverter,<init>,() → void,org.joda.time.convert.ReadablePeriodConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePeriodConverter,setInto,"(org.joda.time.ReadWritablePeriod, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.ReadablePeriodConverter.setInto(ReadWritablePeriod,Object,Chronology)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePeriodConverter,getPeriodType,(java.lang.Object) → org.joda.time.PeriodType,org.joda.time.convert.ReadablePeriodConverter.getPeriodType(Object),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePeriodConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.ReadablePeriodConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePeriodConverter,<clinit>,() → void,org.joda.time.convert.ReadablePeriodConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableIntervalConverter,<init>,() → void,org.joda.time.convert.ReadableIntervalConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableIntervalConverter,getDurationMillis,(java.lang.Object) → long,org.joda.time.convert.ReadableIntervalConverter.getDurationMillis(Object),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ReadableIntervalConverter,setInto,"(org.joda.time.ReadWritablePeriod, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.ReadableIntervalConverter.setInto(ReadWritablePeriod,Object,Chronology)",37,0,0.0,4,0,0.0,3,8,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ReadableIntervalConverter,isReadableInterval,"(java.lang.Object, org.joda.time.Chronology) → boolean","org.joda.time.convert.ReadableIntervalConverter.isReadableInterval(Object,Chronology)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ReadableIntervalConverter,setInto,"(org.joda.time.ReadWritableInterval, java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.convert.ReadableIntervalConverter.setInto(ReadWritableInterval,Object,Chronology)",17,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ReadableIntervalConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.ReadableIntervalConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadableIntervalConverter,<clinit>,() → void,org.joda.time.convert.ReadableIntervalConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePartialConverter,<init>,() → void,org.joda.time.convert.ReadablePartialConverter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePartialConverter,getChronology,"(java.lang.Object, org.joda.time.DateTimeZone) → org.joda.time.Chronology","org.joda.time.convert.ReadablePartialConverter.getChronology(Object,DateTimeZone)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ReadablePartialConverter,getChronology,"(java.lang.Object, org.joda.time.Chronology) → org.joda.time.Chronology","org.joda.time.convert.ReadablePartialConverter.getChronology(Object,Chronology)",9,2,0.18181818181818182,1,1,0.5,2,3,1,0.25,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePartialConverter,getPartialValues,"(org.joda.time.ReadablePartial, java.lang.Object, org.joda.time.Chronology) → int[]","org.joda.time.convert.ReadablePartialConverter.getPartialValues(ReadablePartial,Object,Chronology)",0,30,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePartialConverter,getSupportedType,() → java.lang.Class,org.joda.time.convert.ReadablePartialConverter.getSupportedType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ReadablePartialConverter,<clinit>,() → void,org.joda.time.convert.ReadablePartialConverter.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getInstance,() → org.joda.time.convert.ConverterManager,org.joda.time.convert.ConverterManager.getInstance(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,<init>,() → void,org.joda.time.convert.ConverterManager.<init>(),0,142,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getInstantConverter,(java.lang.Object) → org.joda.time.convert.InstantConverter,org.joda.time.convert.ConverterManager.getInstantConverter(Object),2,31,0.9393939393939394,1,5,0.8333333333333334,4,0,6,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getInstantConverters,() → org.joda.time.convert.InstantConverter[],org.joda.time.convert.ConverterManager.getInstantConverters(),12,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,addInstantConverter,(org.joda.time.convert.InstantConverter) → org.joda.time.convert.InstantConverter,org.joda.time.convert.ConverterManager.addInstantConverter(InstantConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,removeInstantConverter,(org.joda.time.convert.InstantConverter) → org.joda.time.convert.InstantConverter,org.joda.time.convert.ConverterManager.removeInstantConverter(InstantConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,checkAlterInstantConverters,() → void,org.joda.time.convert.ConverterManager.checkAlterInstantConverters(),6,5,0.45454545454545453,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getPartialConverter,(java.lang.Object) → org.joda.time.convert.PartialConverter,org.joda.time.convert.ConverterManager.getPartialConverter(Object),2,31,0.9393939393939394,1,5,0.8333333333333334,4,0,6,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getPartialConverters,() → org.joda.time.convert.PartialConverter[],org.joda.time.convert.ConverterManager.getPartialConverters(),12,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,addPartialConverter,(org.joda.time.convert.PartialConverter) → org.joda.time.convert.PartialConverter,org.joda.time.convert.ConverterManager.addPartialConverter(PartialConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,removePartialConverter,(org.joda.time.convert.PartialConverter) → org.joda.time.convert.PartialConverter,org.joda.time.convert.ConverterManager.removePartialConverter(PartialConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,checkAlterPartialConverters,() → void,org.joda.time.convert.ConverterManager.checkAlterPartialConverters(),11,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getDurationConverter,(java.lang.Object) → org.joda.time.convert.DurationConverter,org.joda.time.convert.ConverterManager.getDurationConverter(Object),20,13,0.3939393939393939,4,2,0.3333333333333333,4,2,4,0.6666666666666666,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getDurationConverters,() → org.joda.time.convert.DurationConverter[],org.joda.time.convert.ConverterManager.getDurationConverters(),12,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,addDurationConverter,(org.joda.time.convert.DurationConverter) → org.joda.time.convert.DurationConverter,org.joda.time.convert.ConverterManager.addDurationConverter(DurationConverter),0,20,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,removeDurationConverter,(org.joda.time.convert.DurationConverter) → org.joda.time.convert.DurationConverter,org.joda.time.convert.ConverterManager.removeDurationConverter(DurationConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,checkAlterDurationConverters,() → void,org.joda.time.convert.ConverterManager.checkAlterDurationConverters(),6,5,0.45454545454545453,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getPeriodConverter,(java.lang.Object) → org.joda.time.convert.PeriodConverter,org.joda.time.convert.ConverterManager.getPeriodConverter(Object),4,29,0.8787878787878788,2,4,0.6666666666666666,4,0,6,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getPeriodConverters,() → org.joda.time.convert.PeriodConverter[],org.joda.time.convert.ConverterManager.getPeriodConverters(),12,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,addPeriodConverter,(org.joda.time.convert.PeriodConverter) → org.joda.time.convert.PeriodConverter,org.joda.time.convert.ConverterManager.addPeriodConverter(PeriodConverter),0,20,1.0,0,2,1.0,2,0,6,1.0,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,removePeriodConverter,(org.joda.time.convert.PeriodConverter) → org.joda.time.convert.PeriodConverter,org.joda.time.convert.ConverterManager.removePeriodConverter(PeriodConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,checkAlterPeriodConverters,() → void,org.joda.time.convert.ConverterManager.checkAlterPeriodConverters(),6,5,0.45454545454545453,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getIntervalConverter,(java.lang.Object) → org.joda.time.convert.IntervalConverter,org.joda.time.convert.ConverterManager.getIntervalConverter(Object),20,13,0.3939393939393939,4,2,0.3333333333333333,4,2,4,0.6666666666666666,0,1,1.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,getIntervalConverters,() → org.joda.time.convert.IntervalConverter[],org.joda.time.convert.ConverterManager.getIntervalConverters(),12,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,addIntervalConverter,(org.joda.time.convert.IntervalConverter) → org.joda.time.convert.IntervalConverter,org.joda.time.convert.ConverterManager.addIntervalConverter(IntervalConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,removeIntervalConverter,(org.joda.time.convert.IntervalConverter) → org.joda.time.convert.IntervalConverter,org.joda.time.convert.ConverterManager.removeIntervalConverter(IntervalConverter),20,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,checkAlterIntervalConverters,() → void,org.joda.time.convert.ConverterManager.checkAlterIntervalConverters(),11,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/convert,org/joda/time/convert/ConverterManager,toString,() → java.lang.String,org.joda.time.convert.ConverterManager.toString(),37,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,<init>,() → void,org.joda.time.base.AbstractDateTime.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,get,(org.joda.time.DateTimeFieldType) → int,org.joda.time.base.AbstractDateTime.get(DateTimeFieldType),15,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getEra,() → int,org.joda.time.base.AbstractDateTime.getEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getCenturyOfEra,() → int,org.joda.time.base.AbstractDateTime.getCenturyOfEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getYearOfEra,() → int,org.joda.time.base.AbstractDateTime.getYearOfEra(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getYearOfCentury,() → int,org.joda.time.base.AbstractDateTime.getYearOfCentury(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getYear,() → int,org.joda.time.base.AbstractDateTime.getYear(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getWeekyear,() → int,org.joda.time.base.AbstractDateTime.getWeekyear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getMonthOfYear,() → int,org.joda.time.base.AbstractDateTime.getMonthOfYear(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getWeekOfWeekyear,() → int,org.joda.time.base.AbstractDateTime.getWeekOfWeekyear(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getDayOfYear,() → int,org.joda.time.base.AbstractDateTime.getDayOfYear(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getDayOfMonth,() → int,org.joda.time.base.AbstractDateTime.getDayOfMonth(),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getDayOfWeek,() → int,org.joda.time.base.AbstractDateTime.getDayOfWeek(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getHourOfDay,() → int,org.joda.time.base.AbstractDateTime.getHourOfDay(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getMinuteOfDay,() → int,org.joda.time.base.AbstractDateTime.getMinuteOfDay(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getMinuteOfHour,() → int,org.joda.time.base.AbstractDateTime.getMinuteOfHour(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getSecondOfDay,() → int,org.joda.time.base.AbstractDateTime.getSecondOfDay(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getSecondOfMinute,() → int,org.joda.time.base.AbstractDateTime.getSecondOfMinute(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getMillisOfDay,() → int,org.joda.time.base.AbstractDateTime.getMillisOfDay(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,getMillisOfSecond,() → int,org.joda.time.base.AbstractDateTime.getMillisOfSecond(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,toCalendar,(java.util.Locale) → java.util.Calendar,org.joda.time.base.AbstractDateTime.toCalendar(Locale),18,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,toGregorianCalendar,() → java.util.GregorianCalendar,org.joda.time.base.AbstractDateTime.toGregorianCalendar(),15,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,toString,() → java.lang.String,org.joda.time.base.AbstractDateTime.toString(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,toString,(java.lang.String) → java.lang.String,org.joda.time.base.AbstractDateTime.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDateTime,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.base.AbstractDateTime.toString(String,Locale)",12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,<init>,() → void,org.joda.time.base.AbstractInstant.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,getZone,() → org.joda.time.DateTimeZone,org.joda.time.base.AbstractInstant.getZone(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,get,(org.joda.time.DateTimeFieldType) → int,org.joda.time.base.AbstractInstant.get(DateTimeFieldType),8,7,0.4666666666666667,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isSupported,(org.joda.time.DateTimeFieldType) → boolean,org.joda.time.base.AbstractInstant.isSupported(DateTimeFieldType),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,get,(org.joda.time.DateTimeField) → int,org.joda.time.base.AbstractInstant.get(DateTimeField),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toInstant,() → org.joda.time.Instant,org.joda.time.base.AbstractInstant.toInstant(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toDateTime,() → org.joda.time.DateTime,org.joda.time.base.AbstractInstant.toDateTime(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toDateTimeISO,() → org.joda.time.DateTime,org.joda.time.base.AbstractInstant.toDateTimeISO(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toDateTime,(org.joda.time.DateTimeZone) → org.joda.time.DateTime,org.joda.time.base.AbstractInstant.toDateTime(DateTimeZone),0,15,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toDateTime,(org.joda.time.Chronology) → org.joda.time.DateTime,org.joda.time.base.AbstractInstant.toDateTime(Chronology),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toMutableDateTime,() → org.joda.time.MutableDateTime,org.joda.time.base.AbstractInstant.toMutableDateTime(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toMutableDateTimeISO,() → org.joda.time.MutableDateTime,org.joda.time.base.AbstractInstant.toMutableDateTimeISO(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toMutableDateTime,(org.joda.time.DateTimeZone) → org.joda.time.MutableDateTime,org.joda.time.base.AbstractInstant.toMutableDateTime(DateTimeZone),15,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toMutableDateTime,(org.joda.time.Chronology) → org.joda.time.MutableDateTime,org.joda.time.base.AbstractInstant.toMutableDateTime(Chronology),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toDate,() → java.util.Date,org.joda.time.base.AbstractInstant.toDate(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,equals,(java.lang.Object) → boolean,org.joda.time.base.AbstractInstant.equals(Object),0,29,1.0,0,8,1.0,5,0,8,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,hashCode,() → int,org.joda.time.base.AbstractInstant.hashCode(),0,13,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,compareTo,(org.joda.time.ReadableInstant) → int,org.joda.time.base.AbstractInstant.compareTo(ReadableInstant),25,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isAfter,(long) → boolean,org.joda.time.base.AbstractInstant.isAfter(long),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isAfterNow,() → boolean,org.joda.time.base.AbstractInstant.isAfterNow(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isAfter,(org.joda.time.ReadableInstant) → boolean,org.joda.time.base.AbstractInstant.isAfter(ReadableInstant),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isBefore,(long) → boolean,org.joda.time.base.AbstractInstant.isBefore(long),0,9,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isBeforeNow,() → boolean,org.joda.time.base.AbstractInstant.isBeforeNow(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isBefore,(org.joda.time.ReadableInstant) → boolean,org.joda.time.base.AbstractInstant.isBefore(ReadableInstant),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isEqual,(long) → boolean,org.joda.time.base.AbstractInstant.isEqual(long),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isEqualNow,() → boolean,org.joda.time.base.AbstractInstant.isEqualNow(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,isEqual,(org.joda.time.ReadableInstant) → boolean,org.joda.time.base.AbstractInstant.isEqual(ReadableInstant),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toString,() → java.lang.String,org.joda.time.base.AbstractInstant.toString(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInstant,toString,(org.joda.time.format.DateTimeFormatter) → java.lang.String,org.joda.time.base.AbstractInstant.toString(DateTimeFormatter),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(int, int, int, int, int, int, int, int, org.joda.time.PeriodType) → void","org.joda.time.base.BasePeriod.<init>(int,int,int,int,int,int,int,int,PeriodType)",0,22,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(long, long, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.base.BasePeriod.<init>(long,long,PeriodType,Chronology)",0,20,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant, org.joda.time.PeriodType) → void","org.joda.time.base.BasePeriod.<init>(ReadableInstant,ReadableInstant,PeriodType)",40,0,0.0,4,0,0.0,3,11,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial, org.joda.time.PeriodType) → void","org.joda.time.base.BasePeriod.<init>(ReadablePartial,ReadablePartial,PeriodType)",115,0,0.0,18,0,0.0,10,23,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration, org.joda.time.PeriodType) → void","org.joda.time.base.BasePeriod.<init>(ReadableInstant,ReadableDuration,PeriodType)",30,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant, org.joda.time.PeriodType) → void","org.joda.time.base.BasePeriod.<init>(ReadableDuration,ReadableInstant,PeriodType)",30,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,(long) → void,org.joda.time.base.BasePeriod.<init>(long),0,22,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(long, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.base.BasePeriod.<init>(long,PeriodType,Chronology)",0,19,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(java.lang.Object, org.joda.time.PeriodType, org.joda.time.Chronology) → void","org.joda.time.base.BasePeriod.<init>(Object,PeriodType,Chronology)",0,49,1.0,0,4,1.0,3,0,11,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,<init>,"(int[], org.joda.time.PeriodType) → void","org.joda.time.base.BasePeriod.<init>(int[],PeriodType)",0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,checkPeriodType,(org.joda.time.PeriodType) → org.joda.time.PeriodType,org.joda.time.base.BasePeriod.checkPeriodType(PeriodType),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.base.BasePeriod.getPeriodType(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,getValue,(int) → int,org.joda.time.base.BasePeriod.getValue(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,toDurationFrom,(org.joda.time.ReadableInstant) → org.joda.time.Duration,org.joda.time.base.BasePeriod.toDurationFrom(ReadableInstant),18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,toDurationTo,(org.joda.time.ReadableInstant) → org.joda.time.Duration,org.joda.time.base.BasePeriod.toDurationTo(ReadableInstant),18,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,checkAndUpdate,"(org.joda.time.DurationFieldType, int[], int) → void","org.joda.time.base.BasePeriod.checkAndUpdate(DurationFieldType,int[],int)",0,29,1.0,0,4,1.0,3,0,7,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,setPeriod,(org.joda.time.ReadablePeriod) → void,org.joda.time.base.BasePeriod.setPeriod(ReadablePeriod),0,12,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,setPeriodInternal,(org.joda.time.ReadablePeriod) → void,org.joda.time.base.BasePeriod.setPeriodInternal(ReadablePeriod),0,31,1.0,0,2,1.0,2,0,7,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,setPeriod,"(int, int, int, int, int, int, int, int) → void","org.joda.time.base.BasePeriod.setPeriod(int,int,int,int,int,int,int,int)",15,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,setPeriodInternal,"(int, int, int, int, int, int, int, int) → int[]","org.joda.time.base.BasePeriod.setPeriodInternal(int,int,int,int,int,int,int,int)",0,46,1.0,0,0,coverage not available since no branches,1,0,10,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,setField,"(org.joda.time.DurationFieldType, int) → void","org.joda.time.base.BasePeriod.setField(DurationFieldType,int)",0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,setFieldInto,"(int[], org.joda.time.DurationFieldType, int) → void","org.joda.time.base.BasePeriod.setFieldInto(int[],DurationFieldType,int)",18,12,0.4,5,1,0.16666666666666666,4,2,4,0.6666666666666666,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,addField,"(org.joda.time.DurationFieldType, int) → void","org.joda.time.base.BasePeriod.addField(DurationFieldType,int)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,addFieldInto,"(int[], org.joda.time.DurationFieldType, int) → void","org.joda.time.base.BasePeriod.addFieldInto(int[],DurationFieldType,int)",34,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,mergePeriod,(org.joda.time.ReadablePeriod) → void,org.joda.time.base.BasePeriod.mergePeriod(ReadablePeriod),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,mergePeriodInto,"(int[], org.joda.time.ReadablePeriod) → int[]","org.joda.time.base.BasePeriod.mergePeriodInto(int[],ReadablePeriod)",0,25,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,addPeriod,(org.joda.time.ReadablePeriod) → void,org.joda.time.base.BasePeriod.addPeriod(ReadablePeriod),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,addPeriodInto,"(int[], org.joda.time.ReadablePeriod) → int[]","org.joda.time.base.BasePeriod.addPeriodInto(int[],ReadablePeriod)",52,0,0.0,6,0,0.0,4,10,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,setValue,"(int, int) → void","org.joda.time.base.BasePeriod.setValue(int,int)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod,setValues,(int[]) → void,org.joda.time.base.BasePeriod.setValues(int[]),0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod,<clinit>,() → void,org.joda.time.base.BasePeriod.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,between,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant, org.joda.time.DurationFieldType) → int","org.joda.time.base.BaseSingleFieldPeriod.between(ReadableInstant,ReadableInstant,DurationFieldType)",5,18,0.782608695652174,2,2,0.5,3,1,4,0.8,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,between,"(org.joda.time.ReadablePartial, org.joda.time.ReadablePartial, org.joda.time.ReadablePeriod) → int","org.joda.time.base.BaseSingleFieldPeriod.between(ReadablePartial,ReadablePartial,ReadablePeriod)",24,46,0.6571428571428571,6,6,0.5,7,4,8,0.6666666666666666,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,standardPeriodIn,"(org.joda.time.ReadablePeriod, long) → int","org.joda.time.base.BaseSingleFieldPeriod.standardPeriodIn(ReadablePeriod,long)",60,0,0.0,8,0,0.0,5,13,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,<init>,(int) → void,org.joda.time.base.BaseSingleFieldPeriod.<init>(int),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,getValue,() → int,org.joda.time.base.BaseSingleFieldPeriod.getValue(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,setValue,(int) → void,org.joda.time.base.BaseSingleFieldPeriod.setValue(int),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,size,() → int,org.joda.time.base.BaseSingleFieldPeriod.size(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,getFieldType,(int) → org.joda.time.DurationFieldType,org.joda.time.base.BaseSingleFieldPeriod.getFieldType(int),0,11,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,getValue,(int) → int,org.joda.time.base.BaseSingleFieldPeriod.getValue(int),6,5,0.45454545454545453,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,get,(org.joda.time.DurationFieldType) → int,org.joda.time.base.BaseSingleFieldPeriod.get(DurationFieldType),2,7,0.7777777777777778,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,isSupported,(org.joda.time.DurationFieldType) → boolean,org.joda.time.base.BaseSingleFieldPeriod.isSupported(DurationFieldType),8,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,toPeriod,() → org.joda.time.Period,org.joda.time.base.BaseSingleFieldPeriod.toPeriod(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,toMutablePeriod,() → org.joda.time.MutablePeriod,org.joda.time.base.BaseSingleFieldPeriod.toMutablePeriod(),9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,equals,(java.lang.Object) → boolean,org.joda.time.base.BaseSingleFieldPeriod.equals(Object),2,26,0.9285714285714286,2,6,0.75,5,1,5,0.8333333333333334,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,hashCode,() → int,org.joda.time.base.BaseSingleFieldPeriod.hashCode(),19,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseSingleFieldPeriod,compareTo,(org.joda.time.base.BaseSingleFieldPeriod) → int,org.joda.time.base.BaseSingleFieldPeriod.compareTo(BaseSingleFieldPeriod),39,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseInterval,<init>,"(long, long, org.joda.time.Chronology) → void","org.joda.time.base.BaseInterval.<init>(long,long,Chronology)",0,17,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.base.BaseInterval.<init>(ReadableInstant,ReadableInstant)",12,23,0.6571428571428571,3,1,0.25,3,2,7,0.7777777777777778,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableDuration) → void","org.joda.time.base.BaseInterval.<init>(ReadableInstant,ReadableDuration)",0,26,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,<init>,"(org.joda.time.ReadableDuration, org.joda.time.ReadableInstant) → void","org.joda.time.base.BaseInterval.<init>(ReadableDuration,ReadableInstant)",27,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseInterval,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadablePeriod) → void","org.joda.time.base.BaseInterval.<init>(ReadableInstant,ReadablePeriod)",34,0,0.0,2,0,0.0,2,9,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseInterval,<init>,"(org.joda.time.ReadablePeriod, org.joda.time.ReadableInstant) → void","org.joda.time.base.BaseInterval.<init>(ReadablePeriod,ReadableInstant)",0,34,1.0,0,2,1.0,2,0,9,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.base.BaseInterval.<init>(Object,Chronology)",41,28,0.4057971014492754,4,2,0.3333333333333333,4,9,7,0.4375,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,getChronology,() → org.joda.time.Chronology,org.joda.time.base.BaseInterval.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,getStartMillis,() → long,org.joda.time.base.BaseInterval.getStartMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,getEndMillis,() → long,org.joda.time.base.BaseInterval.getEndMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseInterval,setInterval,"(long, long, org.joda.time.Chronology) → void","org.joda.time.base.BaseInterval.setInterval(long,long,Chronology)",0,15,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDuration,<init>,() → void,org.joda.time.base.AbstractDuration.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDuration,toDuration,() → org.joda.time.Duration,org.joda.time.base.AbstractDuration.toDuration(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDuration,toPeriod,() → org.joda.time.Period,org.joda.time.base.AbstractDuration.toPeriod(),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDuration,compareTo,(org.joda.time.ReadableDuration) → int,org.joda.time.base.AbstractDuration.compareTo(ReadableDuration),20,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDuration,isEqual,(org.joda.time.ReadableDuration) → boolean,org.joda.time.base.AbstractDuration.isEqual(ReadableDuration),12,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDuration,isLongerThan,(org.joda.time.ReadableDuration) → boolean,org.joda.time.base.AbstractDuration.isLongerThan(ReadableDuration),12,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDuration,isShorterThan,(org.joda.time.ReadableDuration) → boolean,org.joda.time.base.AbstractDuration.isShorterThan(ReadableDuration),12,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDuration,equals,(java.lang.Object) → boolean,org.joda.time.base.AbstractDuration.equals(Object),2,21,0.9130434782608695,1,5,0.8333333333333334,4,1,5,0.8333333333333334,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractDuration,hashCode,() → int,org.joda.time.base.AbstractDuration.hashCode(),10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractDuration,toString,() → java.lang.String,org.joda.time.base.AbstractDuration.toString(),70,0,0.0,10,0,0.0,6,12,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,<init>,() → void,org.joda.time.base.AbstractInterval.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInterval,checkInterval,"(long, long) → void","org.joda.time.base.AbstractInterval.checkInterval(long,long)",0,10,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInterval,getStart,() → org.joda.time.DateTime,org.joda.time.base.AbstractInterval.getStart(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInterval,getEnd,() → org.joda.time.DateTime,org.joda.time.base.AbstractInterval.getEnd(),0,8,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInterval,contains,(long) → boolean,org.joda.time.base.AbstractInterval.contains(long),18,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,containsNow,() → boolean,org.joda.time.base.AbstractInterval.containsNow(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,contains,(org.joda.time.ReadableInstant) → boolean,org.joda.time.base.AbstractInterval.contains(ReadableInstant),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,contains,(org.joda.time.ReadableInterval) → boolean,org.joda.time.base.AbstractInterval.contains(ReadableInterval),33,0,0.0,8,0,0.0,5,7,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,overlaps,(org.joda.time.ReadableInterval) → boolean,org.joda.time.base.AbstractInterval.overlaps(ReadableInterval),20,20,0.5,8,2,0.2,6,2,6,0.75,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isEqual,(org.joda.time.ReadableInterval) → boolean,org.joda.time.base.AbstractInterval.isEqual(ReadableInterval),16,0,0.0,4,0,0.0,3,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isBefore,(long) → boolean,org.joda.time.base.AbstractInterval.isBefore(long),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isBeforeNow,() → boolean,org.joda.time.base.AbstractInterval.isBeforeNow(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isBefore,(org.joda.time.ReadableInstant) → boolean,org.joda.time.base.AbstractInterval.isBefore(ReadableInstant),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isBefore,(org.joda.time.ReadableInterval) → boolean,org.joda.time.base.AbstractInterval.isBefore(ReadableInterval),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isAfter,(long) → boolean,org.joda.time.base.AbstractInterval.isAfter(long),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isAfterNow,() → boolean,org.joda.time.base.AbstractInterval.isAfterNow(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isAfter,(org.joda.time.ReadableInstant) → boolean,org.joda.time.base.AbstractInterval.isAfter(ReadableInstant),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,isAfter,(org.joda.time.ReadableInterval) → boolean,org.joda.time.base.AbstractInterval.isAfter(ReadableInterval),17,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,toInterval,() → org.joda.time.Interval,org.joda.time.base.AbstractInterval.toInterval(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,toMutableInterval,() → org.joda.time.MutableInterval,org.joda.time.base.AbstractInterval.toMutableInterval(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,toDurationMillis,() → long,org.joda.time.base.AbstractInterval.toDurationMillis(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInterval,toDuration,() → org.joda.time.Duration,org.joda.time.base.AbstractInterval.toDuration(),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,toPeriod,() → org.joda.time.Period,org.joda.time.base.AbstractInterval.toPeriod(),10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,toPeriod,(org.joda.time.PeriodType) → org.joda.time.Period,org.joda.time.base.AbstractInterval.toPeriod(PeriodType),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,equals,(java.lang.Object) → boolean,org.joda.time.base.AbstractInterval.equals(Object),4,31,0.8857142857142857,4,6,0.6,6,2,7,0.7777777777777778,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractInterval,hashCode,() → int,org.joda.time.base.AbstractInterval.hashCode(),40,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractInterval,toString,() → java.lang.String,org.joda.time.base.AbstractInterval.toString(),0,29,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseLocal,<init>,() → void,org.joda.time.base.BaseLocal.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDuration,<init>,(long) → void,org.joda.time.base.BaseDuration.<init>(long),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDuration,<init>,"(long, long) → void","org.joda.time.base.BaseDuration.<init>(long,long)",8,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,<init>,"(org.joda.time.ReadableInstant, org.joda.time.ReadableInstant) → void","org.joda.time.base.BaseDuration.<init>(ReadableInstant,ReadableInstant)",21,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,<init>,(java.lang.Object) → void,org.joda.time.base.BaseDuration.<init>(Object),6,6,0.5,0,0,coverage not available since no branches,1,2,2,0.5,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDuration,getMillis,() → long,org.joda.time.base.BaseDuration.getMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDuration,setMillis,(long) → void,org.joda.time.base.BaseDuration.setMillis(long),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toPeriod,(org.joda.time.PeriodType) → org.joda.time.Period,org.joda.time.base.BaseDuration.toPeriod(PeriodType),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toPeriod,(org.joda.time.Chronology) → org.joda.time.Period,org.joda.time.base.BaseDuration.toPeriod(Chronology),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toPeriod,"(org.joda.time.PeriodType, org.joda.time.Chronology) → org.joda.time.Period","org.joda.time.base.BaseDuration.toPeriod(PeriodType,Chronology)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toPeriodFrom,(org.joda.time.ReadableInstant) → org.joda.time.Period,org.joda.time.base.BaseDuration.toPeriodFrom(ReadableInstant),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toPeriodFrom,"(org.joda.time.ReadableInstant, org.joda.time.PeriodType) → org.joda.time.Period","org.joda.time.base.BaseDuration.toPeriodFrom(ReadableInstant,PeriodType)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toPeriodTo,(org.joda.time.ReadableInstant) → org.joda.time.Period,org.joda.time.base.BaseDuration.toPeriodTo(ReadableInstant),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toPeriodTo,"(org.joda.time.ReadableInstant, org.joda.time.PeriodType) → org.joda.time.Period","org.joda.time.base.BaseDuration.toPeriodTo(ReadableInstant,PeriodType)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toIntervalFrom,(org.joda.time.ReadableInstant) → org.joda.time.Interval,org.joda.time.base.BaseDuration.toIntervalFrom(ReadableInstant),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDuration,toIntervalTo,(org.joda.time.ReadableInstant) → org.joda.time.Interval,org.joda.time.base.BaseDuration.toIntervalTo(ReadableInstant),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,<init>,() → void,org.joda.time.base.AbstractPartial.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,getFieldType,(int) → org.joda.time.DateTimeFieldType,org.joda.time.base.AbstractPartial.getFieldType(int),0,7,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,getFieldTypes,() → org.joda.time.DateTimeFieldType[],org.joda.time.base.AbstractPartial.getFieldTypes(),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,getField,(int) → org.joda.time.DateTimeField,org.joda.time.base.AbstractPartial.getField(int),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,getFields,() → org.joda.time.DateTimeField[],org.joda.time.base.AbstractPartial.getFields(),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,getValues,() → int[],org.joda.time.base.AbstractPartial.getValues(),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,get,(org.joda.time.DateTimeFieldType) → int,org.joda.time.base.AbstractPartial.get(DateTimeFieldType),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,isSupported,(org.joda.time.DateTimeFieldType) → boolean,org.joda.time.base.AbstractPartial.isSupported(DateTimeFieldType),0,9,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,indexOf,(org.joda.time.DateTimeFieldType) → int,org.joda.time.base.AbstractPartial.indexOf(DateTimeFieldType),0,19,1.0,0,4,1.0,3,0,4,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,indexOfSupported,(org.joda.time.DateTimeFieldType) → int,org.joda.time.base.AbstractPartial.indexOfSupported(DateTimeFieldType),14,9,0.391304347826087,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,indexOf,(org.joda.time.DurationFieldType) → int,org.joda.time.base.AbstractPartial.indexOf(DurationFieldType),0,20,1.0,0,4,1.0,3,0,4,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,indexOfSupported,(org.joda.time.DurationFieldType) → int,org.joda.time.base.AbstractPartial.indexOfSupported(DurationFieldType),0,23,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,toDateTime,(org.joda.time.ReadableInstant) → org.joda.time.DateTime,org.joda.time.base.AbstractPartial.toDateTime(ReadableInstant),17,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,equals,(java.lang.Object) → boolean,org.joda.time.base.AbstractPartial.equals(Object),2,50,0.9615384615384616,1,11,0.9166666666666666,7,0,11,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,hashCode,() → int,org.joda.time.base.AbstractPartial.hashCode(),37,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,compareTo,(org.joda.time.ReadablePartial) → int,org.joda.time.base.AbstractPartial.compareTo(ReadablePartial),67,0,0.0,14,0,0.0,8,13,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,isAfter,(org.joda.time.ReadablePartial) → boolean,org.joda.time.base.AbstractPartial.isAfter(ReadablePartial),15,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,isBefore,(org.joda.time.ReadablePartial) → boolean,org.joda.time.base.AbstractPartial.isBefore(ReadablePartial),8,7,0.4666666666666667,3,1,0.25,3,1,2,0.6666666666666666,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPartial,isEqual,(org.joda.time.ReadablePartial) → boolean,org.joda.time.base.AbstractPartial.isEqual(ReadablePartial),15,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPartial,toString,(org.joda.time.format.DateTimeFormatter) → java.lang.String,org.joda.time.base.AbstractPartial.toString(DateTimeFormatter),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,() → void,org.joda.time.base.BaseDateTime.<init>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,(org.joda.time.DateTimeZone) → void,org.joda.time.base.BaseDateTime.<init>(DateTimeZone),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,(org.joda.time.Chronology) → void,org.joda.time.base.BaseDateTime.<init>(Chronology),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,(long) → void,org.joda.time.base.BaseDateTime.<init>(long),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,"(long, org.joda.time.DateTimeZone) → void","org.joda.time.base.BaseDateTime.<init>(long,DateTimeZone)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.base.BaseDateTime.<init>(long,Chronology)",0,17,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,"(java.lang.Object, org.joda.time.DateTimeZone) → void","org.joda.time.base.BaseDateTime.<init>(Object,DateTimeZone)",0,28,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.base.BaseDateTime.<init>(Object,Chronology)",0,27,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,"(int, int, int, int, int, int, int) → void","org.joda.time.base.BaseDateTime.<init>(int,int,int,int,int,int,int)",0,11,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,"(int, int, int, int, int, int, int, org.joda.time.DateTimeZone) → void","org.joda.time.base.BaseDateTime.<init>(int,int,int,int,int,int,int,DateTimeZone)",0,12,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,<init>,"(int, int, int, int, int, int, int, org.joda.time.Chronology) → void","org.joda.time.base.BaseDateTime.<init>(int,int,int,int,int,int,int,Chronology)",0,28,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,adjustForMinMax,() → void,org.joda.time.base.BaseDateTime.adjustForMinMax(),5,11,0.6875,2,2,0.5,3,1,2,0.6666666666666666,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,checkChronology,(org.joda.time.Chronology) → org.joda.time.Chronology,org.joda.time.base.BaseDateTime.checkChronology(Chronology),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,checkInstant,"(long, org.joda.time.Chronology) → long","org.joda.time.base.BaseDateTime.checkInstant(long,Chronology)",0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,getMillis,() → long,org.joda.time.base.BaseDateTime.getMillis(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,getChronology,() → org.joda.time.Chronology,org.joda.time.base.BaseDateTime.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,setMillis,(long) → void,org.joda.time.base.BaseDateTime.setMillis(long),0,8,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BaseDateTime,setChronology,(org.joda.time.Chronology) → void,org.joda.time.base.BaseDateTime.setChronology(Chronology),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,<init>,() → void,org.joda.time.base.AbstractPeriod.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,size,() → int,org.joda.time.base.AbstractPeriod.size(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,getFieldType,(int) → org.joda.time.DurationFieldType,org.joda.time.base.AbstractPeriod.getFieldType(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,getFieldTypes,() → org.joda.time.DurationFieldType[],org.joda.time.base.AbstractPeriod.getFieldTypes(),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,getValues,() → int[],org.joda.time.base.AbstractPeriod.getValues(),0,20,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,get,(org.joda.time.DurationFieldType) → int,org.joda.time.base.AbstractPeriod.get(DurationFieldType),2,11,0.8461538461538461,1,1,0.5,2,1,3,0.75,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,isSupported,(org.joda.time.DurationFieldType) → boolean,org.joda.time.base.AbstractPeriod.isSupported(DurationFieldType),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,indexOf,(org.joda.time.DurationFieldType) → int,org.joda.time.base.AbstractPeriod.indexOf(DurationFieldType),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,toPeriod,() → org.joda.time.Period,org.joda.time.base.AbstractPeriod.toPeriod(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,toMutablePeriod,() → org.joda.time.MutablePeriod,org.joda.time.base.AbstractPeriod.toMutablePeriod(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,equals,(java.lang.Object) → boolean,org.joda.time.base.AbstractPeriod.equals(Object),0,48,1.0,1,11,0.9166666666666666,7,0,11,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,hashCode,() → int,org.joda.time.base.AbstractPeriod.hashCode(),31,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,toString,() → java.lang.String,org.joda.time.base.AbstractPeriod.toString(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/AbstractPeriod,toString,(org.joda.time.format.PeriodFormatter) → java.lang.String,org.joda.time.base.AbstractPeriod.toString(PeriodFormatter),9,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod$1,<init>,() → void,org.joda.time.base.BasePeriod$1.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePeriod$1,getValue,(int) → int,org.joda.time.base.BasePeriod$1.getValue(int),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePeriod$1,getPeriodType,() → org.joda.time.PeriodType,org.joda.time.base.BasePeriod$1.getPeriodType(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,() → void,org.joda.time.base.BasePartial.<init>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,(org.joda.time.Chronology) → void,org.joda.time.base.BasePartial.<init>(Chronology),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,(long) → void,org.joda.time.base.BasePartial.<init>(long),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,"(long, org.joda.time.Chronology) → void","org.joda.time.base.BasePartial.<init>(long,Chronology)",0,16,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,"(java.lang.Object, org.joda.time.Chronology) → void","org.joda.time.base.BasePartial.<init>(Object,Chronology)",26,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,"(java.lang.Object, org.joda.time.Chronology, org.joda.time.format.DateTimeFormatter) → void","org.joda.time.base.BasePartial.<init>(Object,Chronology,DateTimeFormatter)",27,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,"(int[], org.joda.time.Chronology) → void","org.joda.time.base.BasePartial.<init>(int[],Chronology)",0,17,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,"(org.joda.time.base.BasePartial, int[]) → void","org.joda.time.base.BasePartial.<init>(BasePartial,int[])",0,10,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,<init>,"(org.joda.time.base.BasePartial, org.joda.time.Chronology) → void","org.joda.time.base.BasePartial.<init>(BasePartial,Chronology)",11,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,getValue,(int) → int,org.joda.time.base.BasePartial.getValue(int),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,getValues,() → int[],org.joda.time.base.BasePartial.getValues(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,getChronology,() → org.joda.time.Chronology,org.joda.time.base.BasePartial.getChronology(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
org/joda/time/base,org/joda/time/base/BasePartial,setValue,"(int, int) → void","org.joda.time.base.BasePartial.setValue(int,int)",22,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,setValues,(int[]) → void,org.joda.time.base.BasePartial.setValues(int[]),15,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,toString,(java.lang.String) → java.lang.String,org.joda.time.base.BasePartial.toString(String),10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
org/joda/time/base,org/joda/time/base/BasePartial,toString,"(java.lang.String, java.util.Locale) → java.lang.String","org.joda.time.base.BasePartial.toString(String,Locale)",0,12,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
