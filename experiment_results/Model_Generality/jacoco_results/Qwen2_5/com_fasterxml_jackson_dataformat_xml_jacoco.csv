package_name,class_name,method_name,method_signature,method_FEN,missed_instr,covered_instr,percentage_instr,missed_branches,covered_branches,percentage_branches,complexity,missed_lines,covered_lines,percentage_lines,missed_methods,covered_methods,percentage_methods
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerModifier,<init>,() → void,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerModifier,changeProperties,"(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List) → java.util.List","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.changeProperties(SerializationConfig,BeanDescription,List)",93,0,0.0,12,0,0.0,7,20,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerModifier,modifySerializer,"(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.JsonSerializer) → com.fasterxml.jackson.databind.JsonSerializer","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.modifySerializer(SerializationConfig,BeanDescription,JsonSerializer)",11,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,<init>,(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) → void,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(BeanSerializerBase),130,0,0.0,20,0,0.0,11,28,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,ObjectIdWriter)",21,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter, java.lang.Object) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,ObjectIdWriter,Object)",22,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, java.util.Set, java.util.Set) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,Set,Set)",22,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.util.NameTransformer) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,NameTransformer)",21,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,BeanPropertyWriter[],BeanPropertyWriter[])",22,0,0.0,0,0,coverage not available since no branches,1,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,serializeFields,"(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)",158,0,0.0,30,0,0.0,16,40,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,serializeFieldsFiltered,"(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)",176,0,0.0,32,0,0.0,17,44,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,serializeWithType,"(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",40,0,0.0,6,0,0.0,4,12,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,_serializeObjectId,"(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.ser.impl.WritableObjectId) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)",32,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,_isAttribute,(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) → boolean,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._isAttribute(BeanPropertyWriter),14,0,0.0,4,0,0.0,3,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,_isCData,(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) → boolean,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._isCData(BeanPropertyWriter),0,14,1.0,1,3,0.75,3,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,_orderAttributesFirst,"(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) → int","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(BeanPropertyWriter[],BeanPropertyWriter[])",59,0,0.0,8,0,0.0,5,15,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializerBase,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<clinit>(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter,<init>,"(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, com.fasterxml.jackson.databind.PropertyName, com.fasterxml.jackson.databind.PropertyName) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter.<init>(BeanPropertyWriter,PropertyName,PropertyName)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter,<init>,"(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, com.fasterxml.jackson.databind.PropertyName, com.fasterxml.jackson.databind.PropertyName, com.fasterxml.jackson.databind.JsonSerializer) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter.<init>(BeanPropertyWriter,PropertyName,PropertyName,JsonSerializer)",19,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter,_qname,(com.fasterxml.jackson.databind.PropertyName) → javax.xml.namespace.QName,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter._qname(PropertyName),14,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanPropertyWriter,serializeAsField,"(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)",105,0,0.0,26,0,0.0,14,29,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,<init>,"(com.fasterxml.jackson.core.io.IOContext, int, int, com.fasterxml.jackson.core.ObjectCodec, javax.xml.stream.XMLStreamWriter, com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.<init>(IOContext,int,int,ObjectCodec,XMLStreamWriter,XmlNameProcessor)",4,61,0.9384615384615385,1,3,0.75,3,0,15,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,initGenerator,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.initGenerator(),65,0,0.0,14,0,0.0,8,19,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,_constructDefaultPrettyPrinter,() → com.fasterxml.jackson.core.PrettyPrinter,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._constructDefaultPrettyPrinter(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,setPrettyPrinter,(com.fasterxml.jackson.core.PrettyPrinter) → com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setPrettyPrinter(PrettyPrinter),14,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,getOutputTarget,() → java.lang.Object,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getOutputTarget(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,getOutputBuffered,() → int,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getOutputBuffered(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,getFormatFeatures,() → int,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getFormatFeatures(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,overrideFormatFeatures,"(int, int) → com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.overrideFormatFeatures(int,int)",22,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,streamWriteConstraints,() → com.fasterxml.jackson.core.StreamWriteConstraints,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.streamWriteConstraints(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,enable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.enable(Feature),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,disable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.disable(Feature),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,isEnabled,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → boolean,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.isEnabled(Feature),2,8,0.8,1,1,0.5,2,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,configure,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.configure(Feature,boolean)",13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,canWriteFormattedNumbers,() → boolean,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.canWriteFormattedNumbers(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,getWriteCapabilities,() → com.fasterxml.jackson.core.util.JacksonFeatureSet,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getWriteCapabilities(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,inRoot,() → boolean,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.inRoot(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,getStaxWriter,() → javax.xml.stream.XMLStreamWriter,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getStaxWriter(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,setNextIsAttribute,(boolean) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextIsAttribute(boolean),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,setNextIsUnwrapped,(boolean) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextIsUnwrapped(boolean),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,setNextIsCData,(boolean) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextIsCData(boolean),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,setNextName,(javax.xml.namespace.QName) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextName(QName),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,setNextNameIfMissing,(javax.xml.namespace.QName) → boolean,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextNameIfMissing(QName),2,8,0.8,1,1,0.5,2,1,3,0.75,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,startWrappedValue,"(javax.xml.namespace.QName, javax.xml.namespace.QName) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.startWrappedValue(QName,QName)",14,18,0.5625,1,3,0.75,3,3,7,0.7,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,finishWrappedValue,"(javax.xml.namespace.QName, javax.xml.namespace.QName) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.finishWrappedValue(QName,QName)",5,19,0.7916666666666666,0,4,1.0,3,2,6,0.75,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRepeatedFieldName,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRepeatedFieldName(),12,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeFieldName,(com.fasterxml.jackson.core.SerializableString) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeFieldName(SerializableString),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeFieldName,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeFieldName(String),64,0,0.0,8,0,0.0,5,12,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeStringField,"(java.lang.String, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStringField(String,String)",7,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeStartArray,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStartArray(),22,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeEndArray,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeEndArray(),32,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeStartObject,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStartObject(),25,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeEndObject,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeEndObject(),42,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,_handleStartObject,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._handleStartObject(),21,5,0.19230769230769232,1,1,0.5,2,6,2,0.25,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,_handleEndObject,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._handleEndObject(),4,40,0.9090909090909091,2,6,0.75,5,1,11,0.9166666666666666,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeString,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeString(String),92,0,0.0,14,0,0.0,8,24,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeString,"(char[], int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeString(char[],int,int)",102,0,0.0,12,0,0.0,7,21,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeString,(com.fasterxml.jackson.core.SerializableString) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeString(SerializableString),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRawUTF8String,"(byte[], int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawUTF8String(byte[],int,int)",3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeUTF8String,"(byte[], int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeUTF8String(byte[],int,int)",3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRawValue,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(String),59,0,0.0,8,0,0.0,5,16,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRawValue,"(java.lang.String, int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(String,int,int)",68,0,0.0,8,0,0.0,5,16,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRawValue,"(char[], int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(char[],int,int)",68,0,0.0,8,0,0.0,5,16,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRawValue,(com.fasterxml.jackson.core.SerializableString) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(SerializableString),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRaw,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(String),17,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRaw,"(java.lang.String, int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(String,int,int)",19,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRaw,"(char[], int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(char[],int,int)",16,3,0.15789473684210525,0,2,1.0,2,6,1,0.14285714285714285,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeRaw,(char) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(char),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeBinary,"(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBinary(Base64Variant,byte[],int,int)",17,77,0.8191489361702128,1,9,0.9,6,5,18,0.782608695652174,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeBinary,"(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) → int","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBinary(Base64Variant,InputStream,int)",94,0,0.0,10,0,0.0,6,24,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeStreamAsBinary,"(org.codehaus.stax2.typed.Base64Variant, java.io.InputStream, int) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStreamAsBinary(Base64Variant,InputStream,int)",51,0,0.0,8,0,0.0,5,13,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,toFullBuffer,"(byte[], int, int) → byte[]","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.toFullBuffer(byte[],int,int)",6,15,0.7142857142857143,4,2,0.3333333333333333,4,1,5,0.8333333333333334,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,toFullBuffer,"(java.io.InputStream, int) → byte[]","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.toFullBuffer(InputStream,int)",43,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeBoolean,(boolean) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBoolean(boolean),4,66,0.9428571428571428,0,8,1.0,5,1,16,0.9411764705882353,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNull,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNull(),60,32,0.34782608695652173,8,6,0.42857142857142855,8,11,10,0.47619047619047616,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNumber,(int) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(int),24,46,0.6571428571428571,2,6,0.75,5,5,12,0.7058823529411765,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNumber,(long) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(long),11,59,0.8428571428571429,1,7,0.875,5,3,14,0.8235294117647058,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNumber,(double) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(double),87,0,0.0,14,0,0.0,8,20,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNumber,(float) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(float),87,0,0.0,14,0,0.0,8,20,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNumber,(java.math.BigDecimal) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(BigDecimal),127,0,0.0,18,0,0.0,10,32,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNumber,(java.math.BigInteger) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(BigInteger),11,64,0.8533333333333334,1,9,0.9,6,3,18,0.8571428571428571,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,writeNumber,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(String),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,_verifyValueWrite,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._verifyValueWrite(String),12,8,0.4,1,1,0.5,2,1,3,0.75,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,flush,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.flush(),14,0,0.0,2,0,0.0,2,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,close,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.close(),31,23,0.42592592592592593,7,5,0.4166666666666667,7,11,8,0.42105263157894735,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,_releaseBuffers,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._releaseBuffers(),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,checkNextIsUnwrapped,() → boolean,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.checkNextIsUnwrapped(),0,10,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,handleMissingName,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.handleMissingName(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator,_reportUnimplementedStax2,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._reportUnimplementedStax2(String),0,22,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,<init>,(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) → void,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(BeanSerializerBase),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter, java.lang.Object) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,ObjectIdWriter,Object)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,ObjectIdWriter)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, java.util.Set, java.util.Set) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,Set,Set)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,BeanPropertyWriter[],BeanPropertyWriter[])",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,unwrappingSerializer,(com.fasterxml.jackson.databind.util.NameTransformer) → com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.unwrappingSerializer(NameTransformer),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,withObjectIdWriter,(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withObjectIdWriter(ObjectIdWriter),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,withFilterId,(java.lang.Object) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withFilterId(Object),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,withByNameInclusion,"(java.util.Set, java.util.Set) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withByNameInclusion(Set,Set)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,withProperties,"(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,asArraySerializer,() → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.asArraySerializer(),13,0,0.0,4,0,0.0,3,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,serialize,"(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(Object,JsonGenerator,SerializerProvider)",29,0,0.0,4,0,0.0,3,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlBeanSerializer,toString,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.toString(),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,<init>,(com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup) → void,com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlRootNameLookup),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.SerializerFactory) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlSerializerProvider,SerializationConfig,SerializerFactory)",10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider, com.fasterxml.jackson.databind.cfg.CacheProvider) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlSerializerProvider,CacheProvider)",9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,<init>,(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider) → void,com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlSerializerProvider),9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,copy,() → com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.copy(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,withCaches,(com.fasterxml.jackson.databind.cfg.CacheProvider) → com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.withCaches(CacheProvider),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,createInstance,"(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.SerializerFactory) → com.fasterxml.jackson.databind.ser.DefaultSerializerProvider","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.createInstance(SerializationConfig,SerializerFactory)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,serializeValue,"(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator,Object)",83,0,0.0,12,0,0.0,7,26,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,serializeValue,"(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JavaType) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator,Object,JavaType)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,serializeValue,"(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator,Object,JavaType,JsonSerializer)",110,0,0.0,22,0,0.0,12,32,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,serializePolymorphic,"(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializePolymorphic(JsonGenerator,Object,JavaType,JsonSerializer,TypeSerializer)",111,0,0.0,24,0,0.0,13,31,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_serializeXmlNull,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._serializeXmlNull(JsonGenerator),20,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_startRootArray,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator, javax.xml.namespace.QName) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._startRootArray(ToXmlGenerator,QName)",6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_initWithRootName,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator, javax.xml.namespace.QName) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._initWithRootName(ToXmlGenerator,QName)",31,0,0.0,8,0,0.0,5,11,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_rootNameFromConfig,() → javax.xml.namespace.QName,com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._rootNameFromConfig(),29,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_shouldUnwrapObjectNode,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator, java.lang.Object) → boolean","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._shouldUnwrapObjectNode(ToXmlGenerator,Object)",16,0,0.0,6,0,0.0,4,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_serializeUnwrappedObjectNode,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator, java.lang.Object, com.fasterxml.jackson.databind.JsonSerializer) → void","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._serializeUnwrappedObjectNode(ToXmlGenerator,Object,JsonSerializer)",43,0,0.0,2,0,0.0,2,11,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_asXmlGenerator,(com.fasterxml.jackson.core.JsonGenerator) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._asXmlGenerator(JsonGenerator),26,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider,_wrapAsIOE,"(com.fasterxml.jackson.core.JsonGenerator, java.lang.Exception) → java.io.IOException","com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._wrapAsIOE(JsonGenerator,Exception)",31,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase, com.fasterxml.jackson.databind.util.NameTransformer) → void","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(XmlBeanSerializerBase,NameTransformer)",8,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) → void","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,ObjectIdWriter)",9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter, java.lang.Object) → void","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,ObjectIdWriter,Object)",10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer, java.util.Set, java.util.Set) → void","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,Set,Set)",10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,<init>,"(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer, com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) → void","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,BeanPropertyWriter[],BeanPropertyWriter[])",10,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,unwrappingSerializer,(com.fasterxml.jackson.databind.util.NameTransformer) → com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.unwrappingSerializer(NameTransformer),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,isUnwrappingSerializer,() → boolean,com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.isUnwrappingSerializer(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,withObjectIdWriter,(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withObjectIdWriter(ObjectIdWriter),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,withFilterId,(java.lang.Object) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withFilterId(Object),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,withByNameInclusion,"(java.util.Set, java.util.Set) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withByNameInclusion(Set,Set)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,withProperties,"(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,asArraySerializer,() → com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.asArraySerializer(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,serialize,"(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) → void","com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.serialize(Object,JsonGenerator,SerializerProvider)",25,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/UnwrappingXmlBeanSerializer,toString,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.toString(),11,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator$Feature,collectDefaults,() → int,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.collectDefaults(),5,23,0.8214285714285714,1,3,0.75,3,1,4,0.8,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator$Feature,<init>,"(java.lang.String, int, boolean) → void","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.<init>(String,int,boolean)",0,14,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator$Feature,enabledByDefault,() → boolean,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.enabledByDefault(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator$Feature,getMask,() → int,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.getMask(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator$Feature,enabledIn,(int) → boolean,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.enabledIn(int),9,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/ser,com/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator$Feature,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.<clinit>(),0,70,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/TypeUtil,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.TypeUtil.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/TypeUtil,isIndexedType,(com.fasterxml.jackson.databind.JavaType) → boolean,com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(JavaType),29,0,0.0,12,0,0.0,7,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlInfo,<init>,"(java.lang.Boolean, java.lang.String, java.lang.Boolean, java.lang.Boolean) → void","com.fasterxml.jackson.dataformat.xml.util.XmlInfo.<init>(Boolean,String,Boolean,Boolean)",0,34,1.0,0,8,1.0,5,0,6,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlInfo,getNamespace,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.util.XmlInfo.getNamespace(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlInfo,isAttribute,() → boolean,com.fasterxml.jackson.dataformat.xml.util.XmlInfo.isAttribute(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlInfo,isText,() → boolean,com.fasterxml.jackson.dataformat.xml.util.XmlInfo.isText(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlInfo,isCData,() → boolean,com.fasterxml.jackson.dataformat.xml.util.XmlInfo.isCData(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$FixedSpaceIndenter,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$FixedSpaceIndenter,writeIndentation,"(org.codehaus.stax2.XMLStreamWriter2, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.writeIndentation(XMLStreamWriter2,int)",4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$FixedSpaceIndenter,writeIndentation,"(com.fasterxml.jackson.core.JsonGenerator, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.writeIndentation(JsonGenerator,int)",4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$FixedSpaceIndenter,isInline,() → boolean,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.isInline(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$Lf2SpacesIndenter,<init>,(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter.<init>(DefaultXmlPrettyPrinter),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$Lf2SpacesIndenter,isInline,() → boolean,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter.isInline(),0,2,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$Lf2SpacesIndenter,writeIndentation,"(org.codehaus.stax2.XMLStreamWriter2, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter.writeIndentation(XMLStreamWriter2,int)",11,18,0.6206896551724138,1,1,0.5,2,2,5,0.7142857142857143,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$Lf2SpacesIndenter,writeIndentation,"(com.fasterxml.jackson.core.JsonGenerator, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter.writeIndentation(JsonGenerator,int)",29,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/Stax2JacksonReaderAdapter,<init>,(javax.xml.stream.XMLStreamReader) → void,com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.<init>(XMLStreamReader),0,7,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/Stax2JacksonReaderAdapter,wrapIfNecessary,(javax.xml.stream.XMLStreamReader) → org.codehaus.stax2.XMLStreamReader2,com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.wrapIfNecessary(XMLStreamReader),0,11,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/Stax2JacksonReaderAdapter,next,() → int,com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.next(),0,24,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/AnnotationUtil,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/AnnotationUtil,findNamespaceAnnotation,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.AnnotatedMember) → java.lang.String","com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findNamespaceAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",27,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/AnnotationUtil,findIsAttributeAnnotation,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.AnnotatedMember) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findIsAttributeAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",27,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/AnnotationUtil,findIsTextAnnotation,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.AnnotatedMember) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findIsTextAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",27,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/AnnotationUtil,findIsCDataAnnotation,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.AnnotatedMember) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findIsCDataAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",27,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.StaxUtil.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,throwAsParseException,"(javax.xml.stream.XMLStreamException, com.fasterxml.jackson.core.JsonParser) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwAsParseException(XMLStreamException,JsonParser)",0,12,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,throwAsGenerationException,"(javax.xml.stream.XMLStreamException, com.fasterxml.jackson.core.JsonGenerator) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwAsGenerationException(XMLStreamException,JsonGenerator)",0,12,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,_unwrap,(java.lang.Throwable) → java.lang.Throwable,com.fasterxml.jackson.dataformat.xml.util.StaxUtil._unwrap(Throwable),10,11,0.5238095238095238,3,3,0.5,4,1,4,0.8,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,_message,"(java.lang.Throwable, java.lang.Throwable) → java.lang.String","com.fasterxml.jackson.dataformat.xml.util.StaxUtil._message(Throwable,Throwable)",0,10,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,sanitizeXmlTypeName,(java.lang.String) → java.lang.String,com.fasterxml.jackson.dataformat.xml.util.StaxUtil.sanitizeXmlTypeName(String),116,0,0.0,34,0,0.0,18,26,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,toStax2Base64Variant,(com.fasterxml.jackson.core.Base64Variant) → org.codehaus.stax2.typed.Base64Variant,com.fasterxml.jackson.dataformat.xml.util.StaxUtil.toStax2Base64Variant(Base64Variant),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,defaultInputFactory,(java.lang.ClassLoader) → javax.xml.stream.XMLInputFactory,com.fasterxml.jackson.dataformat.xml.util.StaxUtil.defaultInputFactory(ClassLoader),3,5,0.625,0,0,coverage not available since no branches,1,2,1,0.3333333333333333,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil,defaultOutputFactory,(java.lang.ClassLoader) → javax.xml.stream.XMLOutputFactory,com.fasterxml.jackson.dataformat.xml.util.StaxUtil.defaultOutputFactory(ClassLoader),3,5,0.625,0,0,coverage not available since no branches,1,2,1,0.3333333333333333,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$NopIndenter,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$NopIndenter,writeIndentation,"(com.fasterxml.jackson.core.JsonGenerator, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.writeIndentation(JsonGenerator,int)",1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$NopIndenter,isInline,() → boolean,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.isInline(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter$NopIndenter,writeIndentation,"(org.codehaus.stax2.XMLStreamWriter2, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.writeIndentation(XMLStreamWriter2,int)",1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/CaseInsensitiveNameSet,<init>,(java.util.Set) → void,com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.<init>(Set),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/CaseInsensitiveNameSet,construct,(java.util.Set) → com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet,com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.construct(Set),0,26,1.0,0,2,1.0,2,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/CaseInsensitiveNameSet,contains,(java.lang.Object) → boolean,com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.contains(Object),0,25,1.0,1,5,0.8333333333333334,4,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/CaseInsensitiveNameSet,iterator,() → java.util.Iterator,com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.iterator(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/CaseInsensitiveNameSet,size,() → int,com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.size(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.<init>(),0,10,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,readResolve,() → java.lang.Object,com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.readResolve(),2,7,0.7777777777777778,1,1,0.5,2,1,2,0.6666666666666666,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,findRootName,"(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.cfg.MapperConfig) → javax.xml.namespace.QName","com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.findRootName(JavaType,MapperConfig)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,findRootName,"(java.lang.Class, com.fasterxml.jackson.databind.cfg.MapperConfig) → javax.xml.namespace.QName","com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.findRootName(Class,MapperConfig)",28,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,_findRootName,"(com.fasterxml.jackson.databind.cfg.MapperConfig, java.lang.Class) → javax.xml.namespace.QName","com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup._findRootName(MapperConfig,Class)",56,0,0.0,10,0,0.0,6,15,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,_qname,"(java.lang.String, java.lang.String) → javax.xml.namespace.QName","com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup._qname(String,String)",10,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,_findNamespace,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.AnnotatedClass) → java.lang.String","com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup._findNamespace(MapperConfig,AnnotationIntrospector,AnnotatedClass)",27,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.<clinit>(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.<init>(),0,20,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,<init>,(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.<init>(DefaultXmlPrettyPrinter),36,0,0.0,0,0,coverage not available since no branches,1,10,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,indentArraysWith,(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.indentArraysWith(Indenter),0,10,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,indentObjectsWith,(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.indentObjectsWith(Indenter),10,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,withCustomNewLine,(java.lang.String) → com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.withCustomNewLine(String),0,9,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,createInstance,() → com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.createInstance(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeRootValueSeparator,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeRootValueSeparator(JsonGenerator),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,beforeArrayValues,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.beforeArrayValues(JsonGenerator),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeStartArray,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartArray(JsonGenerator),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeArrayValueSeparator,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeArrayValueSeparator(JsonGenerator),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeEndArray,"(com.fasterxml.jackson.core.JsonGenerator, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndArray(JsonGenerator,int)",1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,beforeObjectEntries,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.beforeObjectEntries(JsonGenerator),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeStartObject,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartObject(JsonGenerator),4,22,0.8461538461538461,1,3,0.75,3,2,5,0.7142857142857143,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeObjectEntrySeparator,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeObjectEntrySeparator(JsonGenerator),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeObjectFieldValueSeparator,(com.fasterxml.jackson.core.JsonGenerator) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeObjectFieldValueSeparator(JsonGenerator),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeEndObject,"(com.fasterxml.jackson.core.JsonGenerator, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndObject(JsonGenerator,int)",27,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeStartElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartElement(XMLStreamWriter2,String,String)",30,0,0.0,4,0,0.0,3,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeEndElement,"(org.codehaus.stax2.XMLStreamWriter2, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndElement(XMLStreamWriter2,int)",0,26,1.0,1,3,0.75,3,0,7,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, java.lang.String, boolean) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,String,boolean)",0,29,1.0,0,4,1.0,3,0,9,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, char[], int, int, boolean) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,char[],int,int,boolean)",0,33,1.0,1,3,0.75,3,0,9,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, boolean) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,boolean)",13,10,0.43478260869565216,1,1,0.5,2,5,2,0.2857142857142857,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,int)",6,17,0.7391304347826086,1,1,0.5,2,1,6,0.8571428571428571,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, long) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,long)",23,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, double) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,double)",23,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, float) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,float)",23,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, java.math.BigInteger) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigInteger)",0,23,1.0,1,1,0.5,2,0,7,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, java.math.BigDecimal) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigDecimal)",23,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String, org.codehaus.stax2.typed.Base64Variant, byte[], int, int) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,Base64Variant,byte[],int,int)",26,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafNullElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafNullElement(XMLStreamWriter2,String,String)",0,18,1.0,1,1,0.5,2,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writeLeafXsiNilElement,"(org.codehaus.stax2.XMLStreamWriter2, java.lang.String, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafXsiNilElement(XMLStreamWriter2,String,String)",0,24,1.0,1,1,0.5,2,0,6,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,writePrologLinefeed,(org.codehaus.stax2.XMLStreamWriter2) → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writePrologLinefeed(XMLStreamWriter2),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/DefaultXmlPrettyPrinter,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.<clinit>(),1,15,0.9375,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil$Base64Mapper,<init>,() → void,com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper.<init>(),0,36,1.0,0,0,coverage not available since no branches,1,0,7,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil$Base64Mapper,map,(com.fasterxml.jackson.core.Base64Variant) → org.codehaus.stax2.typed.Base64Variant,com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper.map(Base64Variant),0,13,1.0,0,2,1.0,2,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/util,com/fasterxml/jackson/dataformat/xml/util/StaxUtil$Base64Mapper,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser$Feature,collectDefaults,() → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.collectDefaults(),0,28,1.0,0,4,1.0,3,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser$Feature,<init>,"(java.lang.String, int, boolean) → void","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.<init>(String,int,boolean)",0,14,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser$Feature,enabledByDefault,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.enabledByDefault(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser$Feature,getMask,() → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.getMask(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser$Feature,enabledIn,(int) → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.enabledIn(int),0,9,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser$Feature,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.<clinit>(),0,37,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,<init>,(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper) → void,com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.<init>(ElementWrapper),12,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,<init>,"(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper, java.lang.String, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.<init>(ElementWrapper,String,String)",1,15,0.9375,1,1,0.5,2,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,matchingWrapper,"(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper, java.lang.String, java.lang.String) → com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper","com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchingWrapper(ElementWrapper,String,String)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,intermediateWrapper,() → com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.intermediateWrapper(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,isMatching,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.isMatching(),7,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,getWrapperLocalName,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.getWrapperLocalName(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,getWrapperNamespace,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.getWrapperNamespace(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,getParent,() → com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.getParent(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,matchesWrapper,"(java.lang.String, java.lang.String) → boolean","com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchesWrapper(String,String)",23,0,0.0,8,0,0.0,5,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/ElementWrapper,toString,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.toString(),28,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,<init>,"(javax.xml.stream.XMLStreamReader, com.fasterxml.jackson.core.io.ContentReference, int, com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.<init>(XMLStreamReader,ContentReference,int,XmlNameProcessor)",0,33,1.0,0,0,coverage not available since no branches,1,0,9,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,initialize,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.initialize(),23,38,0.6229508196721312,7,3,0.3,6,4,7,0.6363636363636364,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,getXmlReader,() → org.codehaus.stax2.XMLStreamReader2,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getXmlReader(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,setFormatFeatures,(int) → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.setFormatFeatures(int),14,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,next,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.next(),21,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,skipEndElement,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.skipEndElement(),21,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,getCurrentToken,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getCurrentToken(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,getText,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getText(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,getLocalName,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getLocalName(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,getNamespaceURI,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getNamespaceURI(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,hasXsiNil,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.hasXsiNil(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,closeCompletely,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.closeCompletely(),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,close,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.close(),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,getCurrentLocation,() → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getCurrentLocation(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,getTokenLocation,() → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getTokenLocation(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,repeatStartElement,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.repeatStartElement(),27,21,0.4375,4,2,0.3333333333333333,4,6,3,0.3333333333333333,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,pushbackCurrentToken,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.pushbackCurrentToken(),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,skipAttributes,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.skipAttributes(),10,16,0.6153846153846154,3,1,0.25,4,6,3,0.3333333333333333,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_next,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._next(),98,68,0.40963855421686746,16,12,0.42857142857142855,18,27,17,0.38636363636363635,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_collectUntilTag,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._collectUntilTag(),41,20,0.32786885245901637,11,5,0.3125,10,12,6,0.3333333333333333,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_skipAndCollectTextUntilTag,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._skipAndCollectTextUntilTag(),0,52,1.0,2,9,0.8181818181818182,7,0,14,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_getText,(org.codehaus.stax2.XMLStreamReader2) → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._getText(XMLStreamReader2),12,3,0.2,2,0,0.0,2,5,1,0.16666666666666666,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_initStartElement,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._initStartElement(),50,13,0.20634920634920634,3,1,0.25,3,11,4,0.26666666666666666,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_checkXsiAttributes,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._checkXsiAttributes(),29,17,0.3695652173913043,7,1,0.125,5,6,6,0.5,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_decodeElementName,"(java.lang.String, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._decodeElementName(String,String)",15,27,0.6428571428571429,5,1,0.16666666666666666,4,4,7,0.6363636363636364,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_decodeAttributeName,"(java.lang.String, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._decodeAttributeName(String,String)",31,11,0.2619047619047619,5,1,0.16666666666666666,4,8,3,0.2727272727272727,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_handleRepeatElement,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._handleRepeatElement(),47,27,0.36486486486486486,6,4,0.4,6,12,6,0.3333333333333333,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_handleEndElement,() → int,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._handleEndElement(),35,14,0.2857142857142857,3,1,0.25,3,10,4,0.2857142857142857,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_extractLocation,(org.codehaus.stax2.XMLStreamLocation2) → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._extractLocation(XMLStreamLocation2),9,15,0.625,1,1,0.5,2,1,5,0.8333333333333334,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_allWs,(java.lang.String) → boolean,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._allWs(String),16,9,0.36,6,2,0.25,5,3,3,0.5,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_currentStateDesc,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._currentStateDesc(),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTokenStream,_stateDesc,(int) → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._stateDesc(int),8,20,0.7142857142857143,4,4,0.5,8,4,5,0.5555555555555556,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,<init>,(com.fasterxml.jackson.databind.deser.BeanDeserializerBase) → void,com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.<init>(BeanDeserializerBase),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,<init>,"(com.fasterxml.jackson.databind.deser.BeanDeserializerBase, java.util.Set) → void","com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.<init>(BeanDeserializerBase,Set)",0,15,1.0,0,0,coverage not available since no branches,1,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,newDelegatingInstance,(com.fasterxml.jackson.databind.JsonDeserializer) → com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.newDelegatingInstance(JsonDeserializer),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,createContextual,"(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) → com.fasterxml.jackson.databind.JsonDeserializer","com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.createContextual(DeserializationContext,BeanProperty)",86,5,0.054945054945054944,15,1,0.0625,9,23,2,0.08,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,deserialize,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.deserialize(JsonParser,DeserializationContext)",9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,deserialize,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.deserialize(JsonParser,DeserializationContext,Object)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,deserializeWithType,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",10,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,_configureParser,(com.fasterxml.jackson.core.JsonParser) → void,com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer._configureParser(JsonParser),27,7,0.20588235294117646,10,2,0.16666666666666666,7,4,3,0.42857142857142855,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/WrapperHandlingDeserializer,_verifyDeserType,(com.fasterxml.jackson.databind.JsonDeserializer) → com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer._verifyDeserType(JsonDeserializer),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier,<init>,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.<init>(String),0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier,updateProperties,"(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List) → java.util.List","com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.updateProperties(DeserializationConfig,BeanDescription,List)",89,0,0.0,22,0,0.0,12,23,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier,modifyDeserializer,"(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.JsonDeserializer) → com.fasterxml.jackson.databind.JsonDeserializer","com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.modifyDeserializer(DeserializationConfig,BeanDescription,JsonDeserializer)",33,0,0.0,6,0,0.0,4,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlBeanDeserializerModifier,_findSoleTextProp,"(com.fasterxml.jackson.databind.DeserializationConfig, java.util.Iterator) → com.fasterxml.jackson.databind.deser.SettableBeanProperty","com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier._findSoleTextProp(DeserializationConfig,Iterator)",44,0,0.0,10,0,0.0,6,15,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,<init>,"(com.fasterxml.jackson.core.io.IOContext, int, int, com.fasterxml.jackson.core.ObjectCodec, javax.xml.stream.XMLStreamReader, com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → void","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.<init>(IOContext,int,int,ObjectCodec,XMLStreamReader,XmlNameProcessor)",32,55,0.632183908045977,5,2,0.2857142857142857,5,10,16,0.6153846153846154,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,version,() → com.fasterxml.jackson.core.Version,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.version(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getCodec,() → com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getCodec(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,setCodec,(com.fasterxml.jackson.core.ObjectCodec) → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.setCodec(ObjectCodec),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,setXMLTextElementName,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.setXMLTextElementName(String),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,requiresCustomCodec,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.requiresCustomCodec(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,canReadObjectId,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.canReadObjectId(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,canReadTypeId,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.canReadTypeId(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getReadCapabilities,() → com.fasterxml.jackson.core.util.JacksonFeatureSet,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getReadCapabilities(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,enable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.enable(Feature),14,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,disable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.disable(Feature),16,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,isEnabled,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isEnabled(Feature),10,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,configure,"(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.configure(Feature,boolean)",13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getFormatFeatures,() → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getFormatFeatures(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,overrideFormatFeatures,"(int, int) → com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.overrideFormatFeatures(int,int)",19,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getStaxReader,() → javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getStaxReader(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,addVirtualWrapping,"(java.util.Set, boolean) → void","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.addVirtualWrapping(Set,boolean)",34,0,0.0,10,0,0.0,6,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,currentName,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.currentName(),37,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getCurrentName,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getCurrentName(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,overrideCurrentName,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.overrideCurrentName(String),18,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,close,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.close(),12,20,0.625,4,2,0.3333333333333333,4,3,7,0.7,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,isClosed,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isClosed(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getParsingContext,() → com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getParsingContext(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,currentTokenLocation,() → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.currentTokenLocation(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,currentLocation,() → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.currentLocation(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getCurrentLocation,() → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getCurrentLocation(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getTokenLocation,() → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTokenLocation(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,isExpectedStartArrayToken,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isExpectedStartArrayToken(),43,0,0.0,6,0,0.0,4,13,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,isExpectedNumberIntToken,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isExpectedNumberIntToken(),144,0,0.0,20,0,0.0,11,43,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,nextToken,() → com.fasterxml.jackson.core.JsonToken,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.nextToken(),369,0,0.0,53,0,0.0,31,93,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,nextTextValue,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.nextTextValue(),223,0,0.0,26,0,0.0,16,62,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_updateState,(com.fasterxml.jackson.core.JsonToken) → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._updateState(JsonToken),39,0,0.0,5,0,0.0,5,11,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getText,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getText(),21,0,0.0,5,0,0.0,4,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getTextCharacters,() → char[],com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextCharacters(),10,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getTextLength,() → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextLength(),10,0,0.0,2,0,0.0,2,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getTextOffset,() → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextOffset(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,hasTextCharacters,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.hasTextCharacters(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getText,(java.io.Writer) → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getText(Writer),13,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getEmbeddedObject,() → java.lang.Object,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getEmbeddedObject(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getBinaryValue,(com.fasterxml.jackson.core.Base64Variant) → byte[],com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getBinaryValue(Base64Variant),53,0,0.0,8,0,0.0,5,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_decodeBase64,(com.fasterxml.jackson.core.Base64Variant) → byte[],com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._decodeBase64(Base64Variant),14,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,isNaN,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isNaN(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getNumberType,() → com.fasterxml.jackson.core.JsonParser$NumberType,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberType(),22,0,0.0,6,0,0.0,4,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getNumberTypeFP,() → com.fasterxml.jackson.core.JsonParser$NumberTypeFP,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberTypeFP(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getNumberValue,() → java.lang.Number,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberValue(),36,0,0.0,8,0,0.0,5,10,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getIntValue,() → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getIntValue(),21,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getLongValue,() → long,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getLongValue(),21,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getBigIntegerValue,() → java.math.BigInteger,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getBigIntegerValue(),21,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getFloatValue,() → float,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getFloatValue(),14,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getDoubleValue,() → double,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getDoubleValue(),14,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,getDecimalValue,() → java.math.BigDecimal,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getDecimalValue(),14,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_checkNumericValue,(int) → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._checkNumericValue(int),19,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_isIntNumber,(java.lang.String) → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._isIntNumber(String),41,0,0.0,10,0,0.0,6,10,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_convertNumberToInt,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToInt(),64,0,0.0,10,0,0.0,6,13,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_convertNumberToLong,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToLong(),43,0,0.0,8,0,0.0,5,10,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_convertNumberToBigInteger,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToBigInteger(),32,0,0.0,4,0,0.0,3,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_convertNumberToFloat,() → float,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToFloat(),31,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_convertNumberToDouble,() → double,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToDouble(),31,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_convertNumberToBigDecimal,() → java.math.BigDecimal,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToBigDecimal(),34,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_handleEOF,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._handleEOF(),33,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_releaseBuffers,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._releaseBuffers(),0,1,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_getByteArrayBuilder,() → com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._getByteArrayBuilder(),15,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_internalErrorUnknownToken,(java.lang.Object) → java.lang.Object,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._internalErrorUnknownToken(Object),12,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_nextToken,() → int,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._nextToken(),20,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,_skipEndElement,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._skipEndElement(),20,0,0.0,0,0,coverage not available since no branches,1,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/FromXmlParser,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.<clinit>(),0,9,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,<init>,"(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext, int, int, int, int) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.<init>(XmlReadContext,int,int,int,int)",0,24,1.0,0,0,coverage not available since no branches,1,0,9,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,<init>,"(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext, int, int, int) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.<init>(XmlReadContext,int,int,int)",4,11,0.7333333333333333,1,1,0.5,2,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,reset,"(int, int, int) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.reset(int,int,int)",22,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,getCurrentValue,() → java.lang.Object,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.getCurrentValue(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,setCurrentValue,(java.lang.Object) → void,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.setCurrentValue(Object),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,createRootContext,"(int, int) → com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createRootContext(int,int)",0,9,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,createRootContext,() → com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createRootContext(),9,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,createChildArrayContext,"(int, int) → com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createChildArrayContext(int,int)",35,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,createChildObjectContext,"(int, int) → com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createChildObjectContext(int,int)",31,0,0.0,2,0,0.0,2,7,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,getCurrentName,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.getCurrentName(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,hasCurrentName,() → boolean,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.hasCurrentName(),0,7,1.0,0,2,1.0,2,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,getParent,() → com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.getParent(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,startLocation,(com.fasterxml.jackson.core.io.ContentReference) → com.fasterxml.jackson.core.JsonLocation,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.startLocation(ContentReference),12,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,valueStarted,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.valueStarted(),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,setCurrentName,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.setCurrentName(String),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,setNamesToWrap,(java.util.Set) → void,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.setNamesToWrap(Set),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,shouldWrap,(java.lang.String) → boolean,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.shouldWrap(String),0,12,1.0,0,4,1.0,3,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,convertToArray,() → void,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.convertToArray(),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlReadContext,toString,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.toString(),0,58,1.0,1,5,0.8333333333333334,5,0,16,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,<init>,(com.fasterxml.jackson.databind.deser.DeserializerFactory) → void,com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(DeserializerFactory),0,7,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,<init>,"(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext, com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.InjectableValues) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,DeserializationConfig,JsonParser,InjectableValues)",7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,<init>,(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext) → void,com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,<init>,"(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,DeserializerFactory)",0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,<init>,"(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext, com.fasterxml.jackson.databind.DeserializationConfig) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,DeserializationConfig)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,<init>,"(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext, com.fasterxml.jackson.databind.cfg.CacheProvider) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,CacheProvider)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,copy,() → com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.copy(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,createInstance,"(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.InjectableValues) → com.fasterxml.jackson.databind.deser.DefaultDeserializationContext","com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.createInstance(DeserializationConfig,JsonParser,InjectableValues)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,createDummyInstance,(com.fasterxml.jackson.databind.DeserializationConfig) → com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.createDummyInstance(DeserializationConfig),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,with,(com.fasterxml.jackson.databind.deser.DeserializerFactory) → com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.with(DeserializerFactory),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,withCaches,(com.fasterxml.jackson.databind.cfg.CacheProvider) → com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.withCaches(CacheProvider),6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,readRootValue,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Object) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.readRootValue(JsonParser,JavaType,JsonDeserializer,Object)",24,0,0.0,4,0,0.0,3,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlDeserializationContext,extractScalarFromObject,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JsonDeserializer, java.lang.Class) → java.lang.String","com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.extractScalarFromObject(JsonParser,JsonDeserializer,Class)",29,0,0.0,6,0,0.0,4,10,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,<init>,"(com.fasterxml.jackson.databind.deser.BeanDeserializerBase, com.fasterxml.jackson.databind.deser.SettableBeanProperty) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.<init>(BeanDeserializerBase,SettableBeanProperty)",15,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,<init>,"(com.fasterxml.jackson.databind.deser.BeanDeserializerBase, int) → void","com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.<init>(BeanDeserializerBase,int)",16,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,newDelegatingInstance,(com.fasterxml.jackson.databind.JsonDeserializer) → com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.newDelegatingInstance(JsonDeserializer),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,createContextual,"(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.BeanProperty) → com.fasterxml.jackson.databind.JsonDeserializer","com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.createContextual(DeserializationContext,BeanProperty)",10,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,deserialize,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserialize(JsonParser,DeserializationContext)",23,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,deserialize,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserialize(JsonParser,DeserializationContext,Object)",19,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,deserializeWithType,"(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/deser,com/fasterxml/jackson/dataformat/xml/deser/XmlTextDeserializer,_verifyDeserType,(com.fasterxml.jackson.databind.JsonDeserializer) → com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer._verifyDeserType(JsonDeserializer),20,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/jaxb,com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector,<init>,() → void,com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/jaxb,com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector,<init>,(com.fasterxml.jackson.databind.type.TypeFactory) → void,com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.<init>(TypeFactory),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/jaxb,com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector,findNamespace,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.String","com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.findNamespace(MapperConfig,Annotated)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/jaxb,com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector,isOutputAsAttribute,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.isOutputAsAttribute(MapperConfig,Annotated)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/jaxb,com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector,isOutputAsText,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.isOutputAsText(MapperConfig,Annotated)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml/jaxb,com/fasterxml/jackson/dataformat/xml/jaxb/XmlJaxbAnnotationIntrospector,isOutputAsCData,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.isOutputAsCData(MapperConfig,Annotated)",2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver,<init>,"(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) → void","com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver.<init>(JavaType,TypeFactory,PolymorphicTypeValidator)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver,idFromValue,(java.lang.Object) → java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver.idFromValue(Object),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver,typeFromId,"(com.fasterxml.jackson.databind.DatabindContext, java.lang.String) → com.fasterxml.jackson.databind.JavaType","com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver.typeFromId(DatabindContext,String)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,<init>,() → void,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.<init>(),0,15,1.0,0,0,coverage not available since no branches,1,0,6,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,<init>,(com.fasterxml.jackson.dataformat.xml.XmlFactory) → void,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.<init>(XmlFactory),31,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,formatParserFeaturesMask,() → int,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.formatParserFeaturesMask(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,formatGeneratorFeaturesMask,() → int,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.formatGeneratorFeaturesMask(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,nameForTextElement,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.nameForTextElement(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,xmlInputFactory,() → javax.xml.stream.XMLInputFactory,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlInputFactory(),0,9,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,defaultInputFactory,() → javax.xml.stream.XMLInputFactory,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.defaultInputFactory(),0,14,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,xmlOutputFactory,() → javax.xml.stream.XMLOutputFactory,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlOutputFactory(),0,9,1.0,0,2,1.0,2,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,defaultOutputFactory,() → javax.xml.stream.XMLOutputFactory,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.defaultOutputFactory(),0,10,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,staxClassLoader,() → java.lang.ClassLoader,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.staxClassLoader(),0,10,1.0,0,2,1.0,2,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,xmlNameProcessor,() → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlNameProcessor(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,enable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.enable(Feature),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,enable,"(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature, com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder","com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.enable(Feature,Feature[])",34,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,disable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.disable(Feature),13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,disable,"(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature, com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder","com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.disable(Feature,Feature[])",38,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,configure,"(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder","com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.configure(Feature,boolean)",10,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,enable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.enable(Feature),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,enable,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature, com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder","com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.enable(Feature,Feature[])",34,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,disable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.disable(Feature),13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,disable,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature, com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder","com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.disable(Feature,Feature[])",38,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,configure,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder","com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.configure(Feature,boolean)",10,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,nameForTextElement,(java.lang.String) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.nameForTextElement(String),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,xmlInputFactory,(javax.xml.stream.XMLInputFactory) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlInputFactory(XMLInputFactory),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,xmlOutputFactory,(javax.xml.stream.XMLOutputFactory) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlOutputFactory(XMLOutputFactory),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,inputFactory,(javax.xml.stream.XMLInputFactory) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.inputFactory(XMLInputFactory),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,outputFactory,(javax.xml.stream.XMLOutputFactory) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.outputFactory(XMLOutputFactory),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,staxClassLoader,(java.lang.ClassLoader) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.staxClassLoader(ClassLoader),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,xmlNameProcessor,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlNameProcessor(XmlNameProcessor),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactoryBuilder,build,() → com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.build(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$AlwaysOnBase64NameProcessor,<init>,() → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$AlwaysOnBase64NameProcessor,encodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor.encodeName(XmlName),13,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$AlwaysOnBase64NameProcessor,decodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor.decodeName(XmlName),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$AlwaysOnBase64NameProcessor,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor.<clinit>(),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$PassthroughProcessor,<init>,() → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$PassthroughProcessor,encodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor.encodeName(XmlName),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$PassthroughProcessor,decodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor.decodeName(XmlName),0,1,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,() → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,(com.fasterxml.jackson.core.ObjectCodec) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec),6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,(javax.xml.stream.XMLInputFactory) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XMLInputFactory),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,"(javax.xml.stream.XMLInputFactory, javax.xml.stream.XMLOutputFactory) → void","com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XMLInputFactory,XMLOutputFactory)",0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,"(com.fasterxml.jackson.core.ObjectCodec, javax.xml.stream.XMLInputFactory, javax.xml.stream.XMLOutputFactory) → void","com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec,XMLInputFactory,XMLOutputFactory)",0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,"(com.fasterxml.jackson.core.ObjectCodec, int, int, javax.xml.stream.XMLInputFactory, javax.xml.stream.XMLOutputFactory, java.lang.String) → void","com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec,int,int,XMLInputFactory,XMLOutputFactory,String)",0,10,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,"(com.fasterxml.jackson.core.ObjectCodec, int, int, javax.xml.stream.XMLInputFactory, javax.xml.stream.XMLOutputFactory, java.lang.String, com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → void","com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec,int,int,XMLInputFactory,XMLOutputFactory,String,XmlNameProcessor)",0,52,1.0,0,4,1.0,3,0,16,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,"(com.fasterxml.jackson.dataformat.xml.XmlFactory, com.fasterxml.jackson.core.ObjectCodec) → void","com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XmlFactory,ObjectCodec)",29,0,0.0,0,0,coverage not available since no branches,1,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<init>,(com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XmlFactoryBuilder),35,0,0.0,0,0,coverage not available since no branches,1,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,builder,() → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactory.builder(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,rebuild,() → com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder,com.fasterxml.jackson.dataformat.xml.XmlFactory.rebuild(),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_initFactories,"(javax.xml.stream.XMLInputFactory, javax.xml.stream.XMLOutputFactory) → void","com.fasterxml.jackson.dataformat.xml.XmlFactory._initFactories(XMLInputFactory,XMLOutputFactory)",0,9,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,copy,() → com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.XmlFactory.copy(),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,version,() → com.fasterxml.jackson.core.Version,com.fasterxml.jackson.dataformat.xml.XmlFactory.version(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,readResolve,() → java.lang.Object,com.fasterxml.jackson.dataformat.xml.XmlFactory.readResolve(),59,0,0.0,4,0,0.0,3,10,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,readObject,(java.io.ObjectInputStream) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.readObject(ObjectInputStream),11,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,writeObject,(java.io.ObjectOutputStream) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.writeObject(ObjectOutputStream),15,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,setXMLTextElementName,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.setXMLTextElementName(String),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getXMLTextElementName,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlFactory.getXMLTextElementName(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,configure,"(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.XmlFactory","com.fasterxml.jackson.dataformat.xml.XmlFactory.configure(Feature,boolean)",13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,enable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.XmlFactory.enable(Feature),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,disable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.XmlFactory.disable(Feature),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,isEnabled,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → boolean,com.fasterxml.jackson.dataformat.xml.XmlFactory.isEnabled(Feature),10,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getFormatParserFeatures,() → int,com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatParserFeatures(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getFormatGeneratorFeatures,() → int,com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatGeneratorFeatures(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getXmlNameProcessor,() → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlFactory.getXmlNameProcessor(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,setXmlNameProcessor,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.setXmlNameProcessor(XmlNameProcessor),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,configure,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.XmlFactory","com.fasterxml.jackson.dataformat.xml.XmlFactory.configure(Feature,boolean)",13,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,enable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.XmlFactory.enable(Feature),9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,disable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.XmlFactory.disable(Feature),11,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,isEnabled,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → boolean,com.fasterxml.jackson.dataformat.xml.XmlFactory.isEnabled(Feature),10,0,0.0,2,0,0.0,2,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getXMLInputFactory,() → javax.xml.stream.XMLInputFactory,com.fasterxml.jackson.dataformat.xml.XmlFactory.getXMLInputFactory(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,setXMLInputFactory,(javax.xml.stream.XMLInputFactory) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.setXMLInputFactory(XMLInputFactory),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getXMLOutputFactory,() → javax.xml.stream.XMLOutputFactory,com.fasterxml.jackson.dataformat.xml.XmlFactory.getXMLOutputFactory(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,setXMLOutputFactory,(javax.xml.stream.XMLOutputFactory) → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.setXMLOutputFactory(XMLOutputFactory),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getFormatName,() → java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatName(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,hasFormat,(com.fasterxml.jackson.core.format.InputAccessor) → com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.dataformat.xml.XmlFactory.hasFormat(InputAccessor),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,requiresCustomCodec,() → boolean,com.fasterxml.jackson.dataformat.xml.XmlFactory.requiresCustomCodec(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,canUseCharArrays,() → boolean,com.fasterxml.jackson.dataformat.xml.XmlFactory.canUseCharArrays(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getFormatReadFeatureType,() → java.lang.Class,com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatReadFeatureType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,getFormatWriteFeatureType,() → java.lang.Class,com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatWriteFeatureType(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,createParser,(java.lang.String) → com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.dataformat.xml.XmlFactory.createParser(String),6,20,0.7692307692307693,1,1,0.5,2,1,4,0.8,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,createGenerator,(java.io.OutputStream) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(OutputStream),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,createGenerator,"(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator","com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(OutputStream,JsonEncoding)",0,27,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,createGenerator,(java.io.Writer) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(Writer),0,24,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,createGenerator,"(java.io.File, com.fasterxml.jackson.core.JsonEncoding) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator","com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(File,JsonEncoding)",32,0,0.0,0,0,coverage not available since no branches,1,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,createParser,(javax.xml.stream.XMLStreamReader) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser,com.fasterxml.jackson.dataformat.xml.XmlFactory.createParser(XMLStreamReader),36,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,createGenerator,(javax.xml.stream.XMLStreamWriter) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(XMLStreamWriter),0,25,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_createParser,"(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser","com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(InputStream,IOContext)",39,0,0.0,2,0,0.0,2,9,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_createParser,"(java.io.Reader, com.fasterxml.jackson.core.io.IOContext) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser","com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(Reader,IOContext)",10,29,0.7435897435897436,1,1,0.5,2,3,6,0.6666666666666666,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_createParser,"(char[], int, int, com.fasterxml.jackson.core.io.IOContext, boolean) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser","com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(char[],int,int,IOContext,boolean)",9,50,0.847457627118644,1,3,0.75,3,2,9,0.8181818181818182,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_createParser,"(byte[], int, int, com.fasterxml.jackson.core.io.IOContext) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser","com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(byte[],int,int,IOContext)",20,61,0.7530864197530864,1,3,0.75,3,4,12,0.75,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_createGenerator,"(java.io.Writer, com.fasterxml.jackson.core.io.IOContext) → com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.dataformat.xml.XmlFactory._createGenerator(Writer,IOContext)",3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_createXmlWriter,"(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream) → javax.xml.stream.XMLStreamWriter","com.fasterxml.jackson.dataformat.xml.XmlFactory._createXmlWriter(IOContext,OutputStream)",9,14,0.6086956521739131,0,0,coverage not available since no branches,1,2,3,0.6,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_createXmlWriter,"(com.fasterxml.jackson.core.io.IOContext, java.io.Writer) → javax.xml.stream.XMLStreamWriter","com.fasterxml.jackson.dataformat.xml.XmlFactory._createXmlWriter(IOContext,Writer)",9,13,0.5909090909090909,0,0,coverage not available since no branches,1,2,3,0.6,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_initializeXmlWriter,(javax.xml.stream.XMLStreamWriter) → javax.xml.stream.XMLStreamWriter,com.fasterxml.jackson.dataformat.xml.XmlFactory._initializeXmlWriter(XMLStreamWriter),9,6,0.4,0,0,coverage not available since no branches,1,2,3,0.6,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_initializeXmlReader,(javax.xml.stream.XMLStreamReader) → javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.XmlFactory._initializeXmlReader(XMLStreamReader),1,16,0.9411764705882353,1,1,0.5,2,0,5,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,hasXMLFormat,(com.fasterxml.jackson.core.format.InputAccessor) → com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.dataformat.xml.XmlFactory.hasXMLFormat(InputAccessor),150,0,0.0,54,0,0.0,28,50,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,validXmlNameStartChar,"(com.fasterxml.jackson.core.format.InputAccessor, byte) → boolean","com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(InputAccessor,byte)",11,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,tryMatch,"(com.fasterxml.jackson.core.format.InputAccessor, java.lang.String, com.fasterxml.jackson.core.format.MatchStrength) → com.fasterxml.jackson.core.format.MatchStrength","com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(InputAccessor,String,MatchStrength)",25,0,0.0,6,0,0.0,4,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,skipSpace,"(com.fasterxml.jackson.core.format.InputAccessor, byte) → int","com.fasterxml.jackson.dataformat.xml.XmlFactory.skipSpace(InputAccessor,byte)",31,0,0.0,10,0,0.0,6,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_decorate,"(com.fasterxml.jackson.core.io.IOContext, java.io.OutputStream) → java.io.OutputStream","com.fasterxml.jackson.dataformat.xml.XmlFactory._decorate(IOContext,OutputStream)",10,5,0.3333333333333333,3,1,0.25,3,3,2,0.4,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,_decorate,"(com.fasterxml.jackson.core.io.IOContext, java.io.Writer) → java.io.Writer","com.fasterxml.jackson.dataformat.xml.XmlFactory._decorate(IOContext,Writer)",10,5,0.3333333333333333,3,1,0.25,3,3,2,0.4,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlFactory,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.XmlFactory.<clinit>(),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,<init>,(com.fasterxml.jackson.dataformat.xml.XmlMapper) → void,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.<init>(XmlMapper),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,enable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.enable(Feature[]),24,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,disable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.disable(Feature[]),24,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,configure,"(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder","com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.configure(Feature,boolean)",17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,enable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.enable(Feature[]),24,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,disable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature[]) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.disable(Feature[]),24,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,configure,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature, boolean) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder","com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.configure(Feature,boolean)",17,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,nameForTextElement,(java.lang.String) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.nameForTextElement(String),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,defaultUseWrapper,(boolean) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.defaultUseWrapper(boolean),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper$Builder,xmlNameProcessor,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.xmlNameProcessor(XmlNameProcessor),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessor$XmlName,<init>,() → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName.<init>(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlModule,<init>,() → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.<init>(),0,11,1.0,0,0,coverage not available since no branches,1,0,4,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlModule,setupModule,(com.fasterxml.jackson.databind.Module$SetupContext) → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.setupModule(SetupContext),4,28,0.875,0,2,1.0,2,1,7,0.875,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlModule,setDefaultUseWrapper,(boolean) → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.setDefaultUseWrapper(boolean),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlModule,setXMLTextElementName,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.setXMLTextElementName(String),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlModule,overrideSerializerFactory,(com.fasterxml.jackson.databind.ser.SerializerFactory) → com.fasterxml.jackson.dataformat.xml.JacksonXmlModule,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.overrideSerializerFactory(SerializerFactory),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlModule,serializerFactoryOverride,() → com.fasterxml.jackson.databind.ser.SerializerFactory,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.serializerFactoryOverride(),0,3,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlModule,_constructIntrospector,() → com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule._constructIntrospector(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,<init>,() → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.<init>(),0,4,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,<init>,(boolean) → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.<init>(boolean),0,6,1.0,0,0,coverage not available since no branches,1,0,3,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,setDefaultUseWrapper,(boolean) → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.setDefaultUseWrapper(boolean),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,findWrapperName,(com.fasterxml.jackson.databind.introspect.Annotated) → com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findWrapperName(Annotated),18,18,0.5,6,4,0.4,6,5,6,0.5454545454545454,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,findRootName,(com.fasterxml.jackson.databind.introspect.AnnotatedClass) → com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findRootName(AnnotatedClass),32,0,0.0,6,0,0.0,4,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,findNamespace,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.String","com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNamespace(MapperConfig,Annotated)",41,0,0.0,10,0,0.0,6,15,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,findAndAddVirtualProperties,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedClass, java.util.List) → void","com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findAndAddVirtualProperties(MapperConfig,AnnotatedClass,List)",1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,isOutputAsAttribute,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.isOutputAsAttribute(MapperConfig,Annotated)",17,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,isOutputAsText,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.isOutputAsText(MapperConfig,Annotated)",17,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,isOutputAsCData,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.isOutputAsCData(MapperConfig,Annotated)",16,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,findNameForSerialization,(com.fasterxml.jackson.databind.introspect.Annotated) → com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNameForSerialization(Annotated),2,17,0.8947368421052632,2,2,0.5,3,1,5,0.8333333333333334,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,findNameForDeserialization,(com.fasterxml.jackson.databind.introspect.Annotated) → com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNameForDeserialization(Annotated),2,17,0.8947368421052632,2,2,0.5,3,1,5,0.8333333333333334,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,_constructStdTypeResolverBuilder,() → com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector._constructStdTypeResolverBuilder(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,_constructStdTypeResolverBuilder,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.annotation.JsonTypeInfo$Value, com.fasterxml.jackson.databind.JavaType) → com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder","com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector._constructStdTypeResolverBuilder(MapperConfig,Value,JavaType)",5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,_findXmlName,(com.fasterxml.jackson.databind.introspect.Annotated) → com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector._findXmlName(Annotated),6,10,0.625,1,1,0.5,2,1,3,0.75,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/JacksonXmlAnnotationIntrospector,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.<clinit>(),0,13,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$Base64NameProcessor,<init>,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor.<init>(String),6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$Base64NameProcessor,encodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor.encodeName(XmlName),27,0,0.0,2,0,0.0,2,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$Base64NameProcessor,decodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor.decodeName(XmlName),25,0,0.0,2,0,0.0,2,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$Base64NameProcessor,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor.<clinit>(),9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder$XmlClassNameIdResolver,<init>,"(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) → void","com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver.<init>(JavaType,TypeFactory,PolymorphicTypeValidator)",6,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder$XmlClassNameIdResolver,idFromValue,(java.lang.Object) → java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver.idFromValue(Object),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder$XmlClassNameIdResolver,typeFromId,"(com.fasterxml.jackson.databind.DatabindContext, java.lang.String) → com.fasterxml.jackson.databind.JavaType","com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver.typeFromId(DatabindContext,String)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/DefaultingXmlTypeResolverBuilder,<init>,"(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) → void","com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.<init>(DefaultTyping,PolymorphicTypeValidator)",5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/DefaultingXmlTypeResolverBuilder,init,"(com.fasterxml.jackson.annotation.JsonTypeInfo$Id, com.fasterxml.jackson.databind.jsontype.TypeIdResolver) → com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder","com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.init(Id,TypeIdResolver)",15,0,0.0,2,0,0.0,2,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/DefaultingXmlTypeResolverBuilder,typeProperty,(java.lang.String) → com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder,com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.typeProperty(String),15,0,0.0,4,0,0.0,3,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/DefaultingXmlTypeResolverBuilder,idResolver,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, java.util.Collection, boolean, boolean) → com.fasterxml.jackson.databind.jsontype.TypeIdResolver","com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.idResolver(MapperConfig,JavaType,PolymorphicTypeValidator,Collection,boolean,boolean)",41,0,0.0,5,0,0.0,4,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder,<init>,() → void,com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder,<init>,(com.fasterxml.jackson.annotation.JsonTypeInfo$Value) → void,com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.<init>(Value),4,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder,_propName,"(java.lang.String, com.fasterxml.jackson.annotation.JsonTypeInfo$Id) → java.lang.String","com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder._propName(String,Id)",20,0,0.0,6,0,0.0,4,5,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder,idResolver,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, java.util.Collection, boolean, boolean) → com.fasterxml.jackson.databind.jsontype.TypeIdResolver","com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.idResolver(MapperConfig,JavaType,PolymorphicTypeValidator,Collection,boolean,boolean)",41,0,0.0,5,0,0.0,4,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder,encodeXmlClassName,(java.lang.String) → java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.encodeXmlClassName(String),33,0,0.0,4,0,0.0,3,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlTypeResolverBuilder,decodeXmlClassName,(java.lang.String) → java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.decodeXmlClassName(String),33,0,0.0,4,0,0.0,3,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/PackageVersion,<init>,() → void,com.fasterxml.jackson.dataformat.xml.PackageVersion.<init>(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/PackageVersion,version,() → com.fasterxml.jackson.core.Version,com.fasterxml.jackson.dataformat.xml.PackageVersion.version(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/PackageVersion,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.PackageVersion.<clinit>(),0,6,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<init>,() → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(),0,6,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<init>,"(javax.xml.stream.XMLInputFactory, javax.xml.stream.XMLOutputFactory) → void","com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XMLInputFactory,XMLOutputFactory)",8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<init>,(javax.xml.stream.XMLInputFactory) → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XMLInputFactory),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<init>,(com.fasterxml.jackson.dataformat.xml.XmlFactory) → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XmlFactory),0,5,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<init>,(com.fasterxml.jackson.dataformat.xml.JacksonXmlModule) → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(JacksonXmlModule),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<init>,"(com.fasterxml.jackson.dataformat.xml.XmlFactory, com.fasterxml.jackson.dataformat.xml.JacksonXmlModule) → void","com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XmlFactory,JacksonXmlModule)",4,71,0.9466666666666667,2,2,0.5,3,1,19,0.95,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<init>,(com.fasterxml.jackson.dataformat.xml.XmlMapper) → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XmlMapper),8,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,copy,() → com.fasterxml.jackson.dataformat.xml.XmlMapper,com.fasterxml.jackson.dataformat.xml.XmlMapper.copy(),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,xmlBuilder,() → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper.xmlBuilder(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,builder,() → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper.builder(),7,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,builder,(com.fasterxml.jackson.dataformat.xml.XmlFactory) → com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder,com.fasterxml.jackson.dataformat.xml.XmlMapper.builder(XmlFactory),8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,version,() → com.fasterxml.jackson.core.Version,com.fasterxml.jackson.dataformat.xml.XmlMapper.version(),2,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,_constructDefaultTypeResolverBuilder,"(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) → com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder","com.fasterxml.jackson.dataformat.xml.XmlMapper._constructDefaultTypeResolverBuilder(DefaultTyping,PolymorphicTypeValidator)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,setXMLTextElementName,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.setXMLTextElementName(String),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,setDefaultUseWrapper,(boolean) → com.fasterxml.jackson.dataformat.xml.XmlMapper,com.fasterxml.jackson.dataformat.xml.XmlMapper.setDefaultUseWrapper(boolean),25,0,0.0,4,0,0.0,3,6,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,setXmlNameProcessor,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor) → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.setXmlNameProcessor(XmlNameProcessor),5,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,getFactory,() → com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.XmlMapper.getFactory(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,configure,"(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature, boolean) → com.fasterxml.jackson.databind.ObjectMapper","com.fasterxml.jackson.dataformat.xml.XmlMapper.configure(Feature,boolean)",9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,configure,"(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature, boolean) → com.fasterxml.jackson.databind.ObjectMapper","com.fasterxml.jackson.dataformat.xml.XmlMapper.configure(Feature,boolean)",9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,enable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.dataformat.xml.XmlMapper.enable(Feature),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,enable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.dataformat.xml.XmlMapper.enable(Feature),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,disable,(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature) → com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.dataformat.xml.XmlMapper.disable(Feature),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,disable,(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature) → com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.dataformat.xml.XmlMapper.disable(Feature),8,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,createParser,(javax.xml.stream.XMLStreamReader) → com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser,com.fasterxml.jackson.dataformat.xml.XmlMapper.createParser(XMLStreamReader),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,createGenerator,(javax.xml.stream.XMLStreamWriter) → com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,com.fasterxml.jackson.dataformat.xml.XmlMapper.createGenerator(XMLStreamWriter),0,5,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,readValue,"(javax.xml.stream.XMLStreamReader, java.lang.Class) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(XMLStreamReader,Class)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,readValue,"(javax.xml.stream.XMLStreamReader, com.fasterxml.jackson.core.type.TypeReference) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(XMLStreamReader,TypeReference)",8,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,readValue,"(javax.xml.stream.XMLStreamReader, com.fasterxml.jackson.databind.JavaType) → java.lang.Object","com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(XMLStreamReader,JavaType)",9,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,writeValue,"(javax.xml.stream.XMLStreamWriter, java.lang.Object) → void","com.fasterxml.jackson.dataformat.xml.XmlMapper.writeValue(XMLStreamWriter,Object)",9,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlMapper,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.XmlMapper.<clinit>(),0,9,1.0,0,0,coverage not available since no branches,1,0,2,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors,newPassthroughProcessor,() → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newPassthroughProcessor(),0,4,1.0,0,0,coverage not available since no branches,1,0,1,1.0,0,1,1.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors,newReplacementProcessor,(java.lang.String) → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newReplacementProcessor(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors,newReplacementProcessor,() → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newReplacementProcessor(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors,newBase64Processor,(java.lang.String) → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newBase64Processor(String),5,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors,newBase64Processor,() → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newBase64Processor(),3,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors,newAlwaysOnBase64Processor,() → com.fasterxml.jackson.dataformat.xml.XmlNameProcessor,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newAlwaysOnBase64Processor(),4,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$ReplaceNameProcessor,<init>,(java.lang.String) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor.<init>(String),6,0,0.0,0,0,coverage not available since no branches,1,3,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$ReplaceNameProcessor,encodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor.encodeName(XmlName),19,0,0.0,0,0,coverage not available since no branches,1,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$ReplaceNameProcessor,decodeName,(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName) → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor.decodeName(XmlName),1,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlNameProcessors$ReplaceNameProcessor,<clinit>,() → void,com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor.<clinit>(),7,0,0.0,0,0,coverage not available since no branches,1,2,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlAnnotationIntrospector$Pair,<init>,"(com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.AnnotationIntrospector) → void","com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.<init>(AnnotationIntrospector,AnnotationIntrospector)",27,0,0.0,4,0,0.0,3,8,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlAnnotationIntrospector$Pair,instance,"(com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.AnnotationIntrospector) → com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair","com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.instance(AnnotationIntrospector,AnnotationIntrospector)",6,0,0.0,0,0,coverage not available since no branches,1,1,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlAnnotationIntrospector$Pair,findNamespace,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.String","com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.findNamespace(MapperConfig,Annotated)",24,0,0.0,6,0,0.0,4,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlAnnotationIntrospector$Pair,isOutputAsAttribute,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.isOutputAsAttribute(MapperConfig,Annotated)",24,0,0.0,6,0,0.0,4,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlAnnotationIntrospector$Pair,isOutputAsText,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.isOutputAsText(MapperConfig,Annotated)",24,0,0.0,6,0,0.0,4,4,0,0.0,1,0,0.0
com/fasterxml/jackson/dataformat/xml,com/fasterxml/jackson/dataformat/xml/XmlAnnotationIntrospector$Pair,isOutputAsCData,"(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.Annotated) → java.lang.Boolean","com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.isOutputAsCData(MapperConfig,Annotated)",24,0,0.0,6,0,0.0,4,4,0,0.0,1,0,0.0
