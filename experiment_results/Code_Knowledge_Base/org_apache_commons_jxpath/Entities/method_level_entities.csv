FEN:ID,:LABEL,Comment,Source Code,Signature,CFG,Modifiers
org.apache.commons.jxpath.JXPathContext.newContext(Object),Method,* Creates a new JXPathContext with the specified object as the root node.\n     * @param contextBean Object\n     * @return JXPathContext,"public static JXPathContext newContext(final Object contextBean) {\n    return getContextFactory().newContext(null, contextBean);\n}",org.apache.commons.jxpath.JXPathContext newContext(java.lang.Object),"digraph cfg_newContext {\n	""1"" [label=""$stack1 = staticinvoke <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContextFactory getContextFactory()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.JXPathContextFactory: org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(null, contextBean)""];\n	""3"" [label=""contextBean := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.JXPathContext.newContext(JXPathContext,Object)",Method,* Creates a new JXPathContext with the specified bean as the root node and\n     * the specified parent context. Variables defined in a parent context can\n     * be referenced in XPaths passed to the child context.\n     * @param parentContext parent context\n     * @param contextBean Object\n     * @return JXPathContext,"public static JXPathContext newContext(final JXPathContext parentContext, final Object contextBean) {\n    return getContextFactory().newContext(parentContext, contextBean);\n}","org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_newContext {\n	""1"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContextFactory getContextFactory()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.JXPathContextFactory: org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(parentContext, contextBean)""];\n	""3"" [label=""contextBean := @parameter1: java.lang.Object""];\n	""4"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""return $stack3""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.JXPathContext.getContextFactory(),Method,* Acquires a context factory and caches it.\n     * @return JXPathContextFactory,private static JXPathContextFactory getContextFactory() {\n    if (contextFactory == null) {\n        contextFactory = JXPathContextFactory.newInstance();\n    }\n    return contextFactory;\n},org.apache.commons.jxpath.JXPathContextFactory getContextFactory(),"digraph cfg_getContextFactory {\n	""1"" [label=""$stack0 = <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContextFactory contextFactory>""];\n	""2"" [label=""$stack1 = <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContextFactory contextFactory>""];\n	""3"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.JXPathContextFactory: org.apache.commons.jxpath.JXPathContextFactory newInstance()>()""];\n	""4"" [label=""<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContextFactory contextFactory> = $stack2""];\n	""5"" [label=""if $stack0 != null""];\n	""6"" [label=""return $stack1""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n}\n","private , static "
org.apache.commons.jxpath.JXPathContext.getParentContext(),Method,* Returns the parent context of this context or null.\n     * @return JXPathContext,public JXPathContext getParentContext() {\n    return parentContext;\n},org.apache.commons.jxpath.JXPathContext getParentContext(),"digraph cfg_getParentContext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getContextBean(),Method,* Returns the JavaBean associated with this context.\n     * @return Object,public Object getContextBean() {\n    return contextBean;\n},java.lang.Object getContextBean(),"digraph cfg_getContextBean {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: java.lang.Object contextBean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getContextPointer(),Abstract Method,* Returns a Pointer for the context bean.\n     * @return Pointer,public abstract Pointer getContextPointer();,org.apache.commons.jxpath.Pointer getContextPointer(),digraph cfg_getContextPointer {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.getRelativeContext(Pointer),Abstract Method,"* Returns a JXPathContext that is relative to the current JXPathContext.\n     * The supplied pointer becomes the context pointer of the new context.\n     * The relative context inherits variables, extension functions, locale etc\n     * from the parent context.\n     * @param pointer Pointer\n     * @return JXPathContext",public abstract JXPathContext getRelativeContext(Pointer pointer);,org.apache.commons.jxpath.JXPathContext getRelativeContext(org.apache.commons.jxpath.Pointer),digraph cfg_getRelativeContext {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.setVariables(Variables),Method,* Installs a custom implementation of the Variables interface.\n     * @param vars Variables,public void setVariables(final Variables vars) {\n    this.vars = vars;\n},void setVariables(org.apache.commons.jxpath.Variables),"digraph cfg_setVariables {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Variables vars> = vars""];\n	""4"" [label=""vars := @parameter0: org.apache.commons.jxpath.Variables""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getVariables(),Method,"* Returns the variable pool associated with the context. If no such\n     * pool was specified with the {@link #setVariables} method,\n     * returns the default implementation of Variables,\n     * {@link BasicVariables BasicVariables}.\n     * @return Variables",public Variables getVariables() {\n    if (vars == null) {\n        vars = new BasicVariables();\n    }\n    return vars;\n},org.apache.commons.jxpath.Variables getVariables(),"digraph cfg_getVariables {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Variables vars>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Variables vars>""];\n	""3"" [label=""$stack3 = new org.apache.commons.jxpath.BasicVariables""];\n	""4"" [label=""if $stack1 != null""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.BasicVariables: void <init>()>()""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""8"" [label=""this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Variables vars> = $stack3""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.setFunctions(Functions),Method,* Install a library of extension functions.\n     * @param functions Functions\n     * @see FunctionLibrary,public void setFunctions(final Functions functions) {\n    this.functions = functions;\n},void setFunctions(org.apache.commons.jxpath.Functions),"digraph cfg_setFunctions {\n	""1"" [label=""functions := @parameter0: org.apache.commons.jxpath.Functions""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Functions functions> = functions""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getFunctions(),Method,* Returns the set of functions installed on the context.\n     * @return Functions,public Functions getFunctions() {\n    if (functions != null) {\n        return functions;\n    }\n    if (parentContext == null) {\n        return GENERIC_FUNCTIONS;\n    }\n    return null;\n},org.apache.commons.jxpath.Functions getFunctions(),"digraph cfg_getFunctions {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Functions functions>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""3"" [label=""$stack3 = <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.PackageFunctions GENERIC_FUNCTIONS>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Functions functions>""];\n	""5"" [label=""if $stack1 == null""];\n	""6"" [label=""if $stack2 != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""return null""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.setFactory(AbstractFactory),Method,* Install an abstract factory that should be used by the\n     * {@code createPath()} and {@code createPathAndSetValue()}\n     * methods.\n     * @param factory AbstractFactory,public void setFactory(final AbstractFactory factory) {\n    this.factory = factory;\n},void setFactory(org.apache.commons.jxpath.AbstractFactory),"digraph cfg_setFactory {\n	""1"" [label=""factory := @parameter0: org.apache.commons.jxpath.AbstractFactory""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.AbstractFactory factory> = factory""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getFactory(),Method,"* Returns the AbstractFactory installed on this context.\n     * If none has been installed and this context has a parent context,\n     * returns the parent's factory.  Otherwise returns null.\n     * @return AbstractFactory",public AbstractFactory getFactory() {\n    if (factory == null && parentContext != null) {\n        return parentContext.getFactory();\n    }\n    return factory;\n},org.apache.commons.jxpath.AbstractFactory getFactory(),"digraph cfg_getFactory {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.AbstractFactory factory>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.AbstractFactory factory>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.AbstractFactory getFactory()>()""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""return $stack2""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.setLocale(Locale),Method,"* Sets the locale for this context.  The value of the ""lang""\n     * attribute as well as the lang() function will be\n     * affected by the locale.  By default, JXPath uses\n     * {@code Locale.getDefault()}\n     * @param locale Locale",public synchronized void setLocale(final Locale locale) {\n    this.locale = locale;\n},void setLocale(java.util.Locale),"digraph cfg_setLocale {\n	""1"" [label=""locale := @parameter0: java.util.Locale""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathContext: java.util.Locale locale> = locale""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.JXPathContext.getLocale(),Method,"* Returns the locale set with setLocale. If none was set and\n     * the context has a parent, returns the parent's locale.\n     * Otherwise, returns Locale.getDefault().\n     * @return Locale",public synchronized Locale getLocale() {\n    if (locale == null) {\n        if (parentContext != null) {\n            return parentContext.getLocale();\n        }\n        locale = Locale.getDefault();\n    }\n    return locale;\n},java.util.Locale getLocale(),"digraph cfg_getLocale {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: java.util.Locale locale>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: java.util.Locale locale>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""4"" [label=""$stack4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>()""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.JXPathContext: java.util.Locale getLocale()>()""];\n	""7"" [label=""if $stack1 != null""];\n	""8"" [label=""if $stack3 == null""];\n	""9"" [label=""return $stack2""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""12"" [label=""this.<org.apache.commons.jxpath.JXPathContext: java.util.Locale locale> = $stack4""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n","public , synchronized "
"org.apache.commons.jxpath.JXPathContext.setDecimalFormatSymbols(String,DecimalFormatSymbols)",Method,"* Sets {@link DecimalFormatSymbols} for a given name. The DecimalFormatSymbols\n     * can be referenced as the third, optional argument in the invocation of\n     * {@code format-number (number,format,decimal-format-name)} function.\n     * By default, JXPath uses the symbols for the current locale.\n     *\n     * @param name the format name or null for default format.\n     * @param symbols DecimalFormatSymbols","public synchronized void setDecimalFormatSymbols(final String name, final DecimalFormatSymbols symbols) {\n    if (decimalFormats == null) {\n        decimalFormats = new HashMap<>();\n    }\n    decimalFormats.put(name, symbols);\n}","void setDecimalFormatSymbols(java.lang.String,java.text.DecimalFormatSymbols)","digraph cfg_setDecimalFormatSymbols {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContext: java.util.HashMap decimalFormats>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathContext: java.util.HashMap decimalFormats>""];\n	""3"" [label=""$stack5 = new java.util.HashMap""];\n	""4"" [label=""if $stack3 != null""];\n	""5"" [label=""name := @parameter0: java.lang.String""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke $stack5.<java.util.HashMap: void <init>()>()""];\n	""8"" [label=""symbols := @parameter1: java.text.DecimalFormatSymbols""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""10"" [label=""this.<org.apache.commons.jxpath.JXPathContext: java.util.HashMap decimalFormats> = $stack5""];\n	""11"" [label=""virtualinvoke $stack4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, symbols)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.JXPathContext.getDecimalFormatSymbols(String),Method,"* Gets the named DecimalFormatSymbols.\n     * @param name key\n     * @return DecimalFormatSymbols\n     * @see #setDecimalFormatSymbols(String, DecimalFormatSymbols)",public synchronized DecimalFormatSymbols getDecimalFormatSymbols(final String name) {\n    if (decimalFormats == null) {\n        return parentContext == null ? null : parentContext.getDecimalFormatSymbols(name);\n    }\n    return decimalFormats.get(name);\n},java.text.DecimalFormatSymbols getDecimalFormatSymbols(java.lang.String),"digraph cfg_getDecimalFormatSymbols {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: java.util.HashMap decimalFormats>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContext: java.util.HashMap decimalFormats>""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(name)""];\n	""4"" [label=""$stack5 = (java.text.DecimalFormatSymbols) $stack4""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""7"" [label=""$stack8 = null""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.JXPathContext: java.text.DecimalFormatSymbols getDecimalFormatSymbols(java.lang.String)>(name)""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack2 != null""];\n	""11"" [label=""if $stack6 != null""];\n	""12"" [label=""name := @parameter0: java.lang.String""];\n	""13"" [label=""return $stack5""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_goto""];\n}\n","public , synchronized "
org.apache.commons.jxpath.JXPathContext.setLenient(boolean),Method,"* If the context is in the lenient mode, then getValue() returns null\n     * for inexistent paths.  Otherwise, a path that does not map to\n     * an existing property will throw an exception.  Note that if the\n     * property exists, but its value is null, the exception is <em>not</em>\n     * thrown.\n     * <p>\n     * By default, lenient = false\n     * @param lenient flag",public synchronized void setLenient(final boolean lenient) {\n    this.lenient = lenient;\n    lenientSet = true;\n},void setLenient(boolean),"digraph cfg_setLenient {\n	""1"" [label=""lenient := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathContext: boolean lenient> = lenient""];\n	""5"" [label=""this.<org.apache.commons.jxpath.JXPathContext: boolean lenientSet> = 1""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.JXPathContext.isLenient(),Method,* Learn whether this JXPathContext is lenient.\n     * @return boolean\n     * @see #setLenient(boolean),public synchronized boolean isLenient() {\n    if (!lenientSet && parentContext != null) {\n        return parentContext.isLenient();\n    }\n    return lenient;\n},boolean isLenient(),"digraph cfg_isLenient {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: boolean lenientSet>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: boolean lenient>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.JXPathContext: boolean isLenient()>()""];\n	""6"" [label=""if $stack1 != 0""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""return $stack2""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n}\n","public , synchronized "
org.apache.commons.jxpath.JXPathContext.compile(String),Method,* Compiles the supplied XPath and returns an internal representation\n     * of the path that can then be evaluated.  Use CompiledExpressions\n     * when you need to evaluate the same expression multiple times\n     * and there is a convenient place to cache CompiledExpression\n     * between invocations.\n     * @param xpath to compile\n     * @return CompiledExpression,public static CompiledExpression compile(final String xpath) {\n    if (compilationContext == null) {\n        compilationContext = newContext(null);\n    }\n    return compilationContext.compilePath(xpath);\n},org.apache.commons.jxpath.CompiledExpression compile(java.lang.String),"digraph cfg_compile {\n	""1"" [label=""$stack1 = <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext compilationContext>""];\n	""2"" [label=""$stack2 = <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext compilationContext>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.CompiledExpression compilePath(java.lang.String)>(xpath)""];\n	""4"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext newContext(java.lang.Object)>(null)""];\n	""5"" [label=""<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext compilationContext> = $stack4""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.JXPathContext.compilePath(String),Abstract Method,* Overridden by each concrete implementation of JXPathContext\n     * to perform compilation. Is called by {@code compile()}.\n     * @param xpath to compile\n     * @return CompiledExpression,protected abstract CompiledExpression compilePath(String xpath);,org.apache.commons.jxpath.CompiledExpression compilePath(java.lang.String),digraph cfg_compilePath {\n}\n,"protected , abstract "
org.apache.commons.jxpath.JXPathContext.selectSingleNode(String),Method,"* Finds the first object that matches the specified XPath. It is equivalent\n     * to {@code getPointer(xpath).getNode()}. Note that this method\n     * produces the same result as {@code getValue()} on object models\n     * like JavaBeans, but a different result for DOM/JDOM etc., because it\n     * returns the Node itself, rather than its textual contents.\n     *\n     * @param xpath the xpath to be evaluated\n     * @return the found object",public Object selectSingleNode(final String xpath) {\n    final Pointer pointer = getPointer(xpath);\n    return pointer == null ? null : pointer.getNode();\n},java.lang.Object selectSingleNode(java.lang.String),"digraph cfg_selectSingleNode {\n	""1"" [label=""$stack3 = interfaceinvoke pointer.<org.apache.commons.jxpath.Pointer: java.lang.Object getNode()>()""];\n	""2"" [label=""$stack3 = null""];\n	""3"" [label=""goto""];\n	""4"" [label=""if pointer != null""];\n	""5"" [label=""pointer = virtualinvoke this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Pointer getPointer(java.lang.String)>(xpath)""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""8"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_true""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.selectNodes(String),Method,* Finds all nodes that match the specified XPath.\n     *\n     * @param xpath the xpath to be evaluated\n     * @return a list of found objects,public List selectNodes(final String xpath) {\n    final ArrayList list = new ArrayList();\n    final Iterator<Pointer> iterator = iteratePointers(xpath);\n    while (iterator.hasNext()) {\n        final Pointer pointer = iterator.next();\n        list.add(pointer.getNode());\n    }\n    return list;\n},java.util.List selectNodes(java.lang.String),"digraph cfg_selectNodes {\n	""1"" [label=""$stack5 = new java.util.ArrayList""];\n	""2"" [label=""$stack6 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>()""];\n	""3"" [label=""$stack7 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>()""];\n	""4"" [label=""$stack8 = interfaceinvoke pointer.<org.apache.commons.jxpath.Pointer: java.lang.Object getNode()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 == 0""];\n	""7"" [label=""iterator = virtualinvoke this.<org.apache.commons.jxpath.JXPathContext: java.util.Iterator iteratePointers(java.lang.String)>(xpath)""];\n	""8"" [label=""list = $stack5""];\n	""9"" [label=""pointer = (org.apache.commons.jxpath.Pointer) $stack7""];\n	""10"" [label=""return list""];\n	""11"" [label=""specialinvoke $stack5.<java.util.ArrayList: void <init>()>()""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""13"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>($stack8)""];\n	""14"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_goto""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getValue(String),Abstract Method,* Evaluates the xpath and returns the resulting object. Primitive\n     * types are wrapped into objects.\n     * @param xpath to evaluate\n     * @return Object found,public abstract Object getValue(String xpath);,java.lang.Object getValue(java.lang.String),digraph cfg_getValue {\n}\n,"public , abstract "
"org.apache.commons.jxpath.JXPathContext.getValue(String,Class)",Abstract Method,"* Evaluates the xpath, converts the result to the specified class and\n     * returns the resulting object.\n     * @param xpath to evaluate\n     * @param requiredType required type\n     * @return Object found","public abstract Object getValue(String xpath, Class requiredType);","java.lang.Object getValue(java.lang.String,java.lang.Class)",digraph cfg_getValue {\n}\n,"public , abstract "
"org.apache.commons.jxpath.JXPathContext.setValue(String,Object)",Abstract Method,"* Modifies the value of the property described by the supplied xpath.\n     * Will throw an exception if one of the following conditions occurs:\n     * <ul>\n     * <li>The xpath does not in fact describe an existing property\n     * <li>The property is not writable (no public, non-static set method)\n     * </ul>\n     * @param xpath indicating position\n     * @param value to set","public abstract void setValue(String xpath, Object value);","void setValue(java.lang.String,java.lang.Object)",digraph cfg_setValue {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.createPath(String),Abstract Method,"* Creates missing elements of the path by invoking an {@link AbstractFactory},\n     * which should first be installed on the context by calling {@link #setFactory}.\n     * <p>\n     * Will throw an exception if the AbstractFactory fails to create\n     * an instance for a path element.\n     * @param xpath indicating destination to create\n     * @return pointer to new location",public abstract Pointer createPath(String xpath);,org.apache.commons.jxpath.Pointer createPath(java.lang.String),digraph cfg_createPath {\n}\n,"public , abstract "
"org.apache.commons.jxpath.JXPathContext.createPathAndSetValue(String,Object)",Abstract Method,"* The same as setValue, except it creates intermediate elements of\n     * the path by invoking an {@link AbstractFactory}, which should first be\n     * installed on the context by calling {@link #setFactory}.\n     * <p>\n     * Will throw an exception if one of the following conditions occurs:\n     * <ul>\n     * <li>Elements of the xpath aleady exist, but the path does not in\n     *  fact describe an existing property\n     * <li>The AbstractFactory fails to create an instance for an intermediate\n     * element.\n     * <li>The property is not writable (no public, non-static set method)\n     * </ul>\n     * @param xpath indicating position to create\n     * @param value to set\n     * @return pointer to new location","public abstract Pointer createPathAndSetValue(String xpath, Object value);","org.apache.commons.jxpath.Pointer createPathAndSetValue(java.lang.String,java.lang.Object)",digraph cfg_createPathAndSetValue {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.removePath(String),Abstract Method,* Removes the element of the object graph described by the xpath.\n     * @param xpath indicating position to remove,public abstract void removePath(String xpath);,void removePath(java.lang.String),digraph cfg_removePath {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.removeAll(String),Abstract Method,* Removes all elements of the object graph described by the xpath.\n     * @param xpath indicating positions to remove,public abstract void removeAll(String xpath);,void removeAll(java.lang.String),digraph cfg_removeAll {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.iterate(String),Abstract Method,"* Traverses the xpath and returns an Iterator of all results found\n     * for the path. If the xpath matches no properties\n     * in the graph, the Iterator will be empty, but not null.\n     *\n     * @param <E> the type of elements returned by the iterator.\n     * @param xpath to iterate\n     * @return Iterator",public abstract <E> Iterator<E> iterate(String xpath);,java.util.Iterator iterate(java.lang.String),digraph cfg_iterate {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.getPointer(String),Abstract Method,"* Traverses the xpath and returns a Pointer. A Pointer provides easy access\n     * to a property.\n     * <p>\n     * If the xpath <a href='#matches_no_property_in_the_graph'>matches no\n     * properties in the graph</a> the behavior depends on the value that has\n     * been configured with {@link #setLenient(boolean)}:</p>\n     * <ul>\n     * <li> {@code false} (default) the method will throw a\n     * {@link JXPathNotFoundException}.\n     * <li> {@code true} the method returns a pointer whose\n     * {@link Pointer#getValue()} method will always return null.\n     * </ul>\n     *\n     * @param xpath desired\n     * @return Pointer A {@link Pointer}, never {@code null}.\n     * @throws JXPathNotFoundException see method description.",public abstract Pointer getPointer(String xpath);,org.apache.commons.jxpath.Pointer getPointer(java.lang.String),digraph cfg_getPointer {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.iteratePointers(String),Abstract Method,"* Traverses the xpath and returns an Iterator of Pointers.\n     * A Pointer provides easy access to a property.\n     * If the xpath matches no properties\n     * in the graph, the Iterator be empty, but not null.\n     * @param xpath to iterate\n     * @return Iterator",public abstract Iterator<Pointer> iteratePointers(String xpath);,java.util.Iterator iteratePointers(java.lang.String),digraph cfg_iteratePointers {\n}\n,"public , abstract "
org.apache.commons.jxpath.JXPathContext.setIdentityManager(IdentityManager),Method,* Install an identity manager that will be used by the context\n     * to look up a node by its ID.\n     * @param idManager IdentityManager to set,public void setIdentityManager(final IdentityManager idManager) {\n    this.idManager = idManager;\n},void setIdentityManager(org.apache.commons.jxpath.IdentityManager),"digraph cfg_setIdentityManager {\n	""1"" [label=""idManager := @parameter0: org.apache.commons.jxpath.IdentityManager""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.IdentityManager idManager> = idManager""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getIdentityManager(),Method,"* Returns this context's identity manager. If none has been installed,\n     * returns the identity manager of the parent context.\n     * @return IdentityManager",public IdentityManager getIdentityManager() {\n    if (idManager == null && parentContext != null) {\n        return parentContext.getIdentityManager();\n    }\n    return idManager;\n},org.apache.commons.jxpath.IdentityManager getIdentityManager(),"digraph cfg_getIdentityManager {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.IdentityManager idManager>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.IdentityManager idManager>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.IdentityManager getIdentityManager()>()""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""return $stack2""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getPointerByID(String),Method,* Locates a Node by its ID.\n     *\n     * @param id is the ID of the sought node.\n     * @return Pointer,"public Pointer getPointerByID(final String id) {\n    final IdentityManager manager = getIdentityManager();\n    if (manager != null) {\n        return manager.getPointerByID(this, id);\n    }\n    throw new JXPathException(""Cannot find an element by ID - "" + ""no IdentityManager has been specified"");\n}",org.apache.commons.jxpath.Pointer getPointerByID(java.lang.String),"digraph cfg_getPointerByID {\n	""1"" [label=""$stack3 = new org.apache.commons.jxpath.JXPathException""];\n	""2"" [label=""$stack4 = interfaceinvoke manager.<org.apache.commons.jxpath.IdentityManager: org.apache.commons.jxpath.Pointer getPointerByID(org.apache.commons.jxpath.JXPathContext,java.lang.String)>(this, id)""];\n	""3"" [label=""id := @parameter0: java.lang.String""];\n	""4"" [label=""if manager == null""];\n	""5"" [label=""manager = virtualinvoke this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.IdentityManager getIdentityManager()>()""];\n	""6"" [label=""return $stack4""];\n	""7"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""Cannot find an element by ID - no IdentityManager has been specified\"")""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""9"" [label=""throw $stack3""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_true""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.setKeyManager(KeyManager),Method,* Install a key manager that will be used by the context\n     * to look up a node by a key value.\n     * @param keyManager KeyManager,public void setKeyManager(final KeyManager keyManager) {\n    this.keyManager = keyManager;\n},void setKeyManager(org.apache.commons.jxpath.KeyManager),"digraph cfg_setKeyManager {\n	""1"" [label=""keyManager := @parameter0: org.apache.commons.jxpath.KeyManager""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.KeyManager keyManager> = keyManager""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getKeyManager(),Method,"* Returns this context's key manager. If none has been installed,\n     * returns the key manager of the parent context.\n     * @return KeyManager",public KeyManager getKeyManager() {\n    if (keyManager == null && parentContext != null) {\n        return parentContext.getKeyManager();\n    }\n    return keyManager;\n},org.apache.commons.jxpath.KeyManager getKeyManager(),"digraph cfg_getKeyManager {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.KeyManager keyManager>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.KeyManager keyManager>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.KeyManager getKeyManager()>()""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""return $stack2""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.JXPathContext.getPointerByKey(String,String)",Method,* Locates a Node by a key value.\n     * @param key string\n     * @param value string\n     * @return Pointer found,"public Pointer getPointerByKey(final String key, final String value) {\n    final KeyManager manager = getKeyManager();\n    if (manager != null) {\n        return manager.getPointerByKey(this, key, value);\n    }\n    throw new JXPathException(""Cannot find an element by key - "" + ""no KeyManager has been specified"");\n}","org.apache.commons.jxpath.Pointer getPointerByKey(java.lang.String,java.lang.String)","digraph cfg_getPointerByKey {\n	""1"" [label=""$stack4 = new org.apache.commons.jxpath.JXPathException""];\n	""2"" [label=""$stack5 = interfaceinvoke manager.<org.apache.commons.jxpath.KeyManager: org.apache.commons.jxpath.Pointer getPointerByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.String)>(this, key, value)""];\n	""3"" [label=""if manager == null""];\n	""4"" [label=""key := @parameter0: java.lang.String""];\n	""5"" [label=""manager = virtualinvoke this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.KeyManager getKeyManager()>()""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""Cannot find an element by key - no KeyManager has been specified\"")""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""9"" [label=""throw $stack4""];\n	""10"" [label=""value := @parameter1: java.lang.String""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_true""];\n	""3"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathContext.getNodeSetByKey(String,Object)",Method,* Locates a NodeSet by key/value.\n     * @param key string\n     * @param value object\n     * @return NodeSet found,"public NodeSet getNodeSetByKey(final String key, final Object value) {\n    final KeyManager manager = getKeyManager();\n    if (manager != null) {\n        return KeyManagerUtils.getExtendedKeyManager(manager).getNodeSetByKey(this, key, value);\n    }\n    throw new JXPathException(""Cannot find an element by key - "" + ""no KeyManager has been specified"");\n}","org.apache.commons.jxpath.NodeSet getNodeSetByKey(java.lang.String,java.lang.Object)","digraph cfg_getNodeSetByKey {\n	""1"" [label=""$stack4 = new org.apache.commons.jxpath.JXPathException""];\n	""2"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.util.KeyManagerUtils: org.apache.commons.jxpath.ExtendedKeyManager getExtendedKeyManager(org.apache.commons.jxpath.KeyManager)>(manager)""];\n	""3"" [label=""$stack6 = interfaceinvoke $stack5.<org.apache.commons.jxpath.ExtendedKeyManager: org.apache.commons.jxpath.NodeSet getNodeSetByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.Object)>(this, key, value)""];\n	""4"" [label=""if manager == null""];\n	""5"" [label=""key := @parameter0: java.lang.String""];\n	""6"" [label=""manager = virtualinvoke this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.KeyManager getKeyManager()>()""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""Cannot find an element by key - no KeyManager has been specified\"")""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""10"" [label=""throw $stack4""];\n	""11"" [label=""value := @parameter1: java.lang.Object""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_true""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathContext.registerNamespace(String,String)",Method,* Registers a namespace prefix.\n     *\n     * @param prefix A namespace prefix\n     * @param namespaceURI A URI for that prefix,"public void registerNamespace(final String prefix, final String namespaceURI) {\n    throw new UnsupportedOperationException(""Namespace registration is not implemented by "" + getClass());\n}","void registerNamespace(java.lang.String,java.lang.String)","digraph cfg_registerNamespace {\n	""1"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack4 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Namespace registration is not implemented by \"")""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack4)""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack8 = new java.lang.UnsupportedOperationException""];\n	""7"" [label=""namespaceURI := @parameter1: java.lang.String""];\n	""8"" [label=""prefix := @parameter0: java.lang.String""];\n	""9"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""10"" [label=""specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack7)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""12"" [label=""throw $stack8""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getNamespaceURI(String),Method,"* Given a prefix, returns a registered namespace URI. If the requested\n     * prefix was not defined explicitly using the registerNamespace method,\n     * JXPathContext will then check the context node to see if the prefix is\n     * defined there. See\n     * {@link #setNamespaceContextPointer(Pointer) setNamespaceContextPointer}.\n     *\n     * @param prefix The namespace prefix to look up\n     * @return namespace URI or null if the prefix is undefined.","public String getNamespaceURI(final String prefix) {\n    throw new UnsupportedOperationException(""Namespace registration is not implemented by "" + getClass());\n}",java.lang.String getNamespaceURI(java.lang.String),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Namespace registration is not implemented by \"")""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack7 = new java.lang.UnsupportedOperationException""];\n	""7"" [label=""prefix := @parameter0: java.lang.String""];\n	""8"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""specialinvoke $stack7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack6)""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""11"" [label=""throw $stack7""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getPrefix(String),Method,* Gets the prefix associated with the specifed namespace URI.\n     * @param namespaceURI the ns URI to check.\n     * @return String prefix\n     * @since JXPath 1.3,"public String getPrefix(final String namespaceURI) {\n    throw new UnsupportedOperationException(""Namespace registration is not implemented by "" + getClass());\n}",java.lang.String getPrefix(java.lang.String),"digraph cfg_getPrefix {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Namespace registration is not implemented by \"")""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack7 = new java.lang.UnsupportedOperationException""];\n	""7"" [label=""namespaceURI := @parameter0: java.lang.String""];\n	""8"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""specialinvoke $stack7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack6)""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""11"" [label=""throw $stack7""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.setNamespaceContextPointer(Pointer),Method,"* Namespace prefixes can be defined implicitly by specifying a pointer to a\n     * context where the namespaces are defined. By default,\n     * NamespaceContextPointer is the same as the Context Pointer, see\n     * {@link #getContextPointer() getContextPointer()}\n     *\n     * @param namespaceContextPointer The pointer to the context where prefixes used in\n     *        XPath expressions should be resolved.","public void setNamespaceContextPointer(final Pointer namespaceContextPointer) {\n    throw new UnsupportedOperationException(""Namespace registration is not implemented by "" + getClass());\n}",void setNamespaceContextPointer(org.apache.commons.jxpath.Pointer),"digraph cfg_setNamespaceContextPointer {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Namespace registration is not implemented by \"")""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack7 = new java.lang.UnsupportedOperationException""];\n	""7"" [label=""namespaceContextPointer := @parameter0: org.apache.commons.jxpath.Pointer""];\n	""8"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""specialinvoke $stack7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack6)""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""11"" [label=""throw $stack7""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.getNamespaceContextPointer(),Method,"* Returns the namespace context pointer set with\n     * {@link #setNamespaceContextPointer(Pointer) setNamespaceContextPointer()}\n     * or, if none has been specified, the context pointer otherwise.\n     *\n     * @return The namespace context pointer.","public Pointer getNamespaceContextPointer() {\n    throw new UnsupportedOperationException(""Namespace registration is not implemented by "" + getClass());\n}",org.apache.commons.jxpath.Pointer getNamespaceContextPointer(),"digraph cfg_getNamespaceContextPointer {\n	""1"" [label=""$stack1 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack2 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack3 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Namespace registration is not implemented by \"")""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack2)""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack6 = new java.lang.UnsupportedOperationException""];\n	""7"" [label=""specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>()""];\n	""8"" [label=""specialinvoke $stack6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack5)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""10"" [label=""throw $stack6""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContext.setExceptionHandler(ExceptionHandler),Method,"* Sets the ExceptionHandler used by this context, if any.\n     * @param exceptionHandler to set\n     * @since 1.4","public void setExceptionHandler(final ExceptionHandler exceptionHandler) {\n    throw new UnsupportedOperationException(""ExceptionHandler registration is not implemented by "" + getClass());\n}",void setExceptionHandler(org.apache.commons.jxpath.ExceptionHandler),"digraph cfg_setExceptionHandler {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""ExceptionHandler registration is not implemented by \"")""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack7 = new java.lang.UnsupportedOperationException""];\n	""7"" [label=""exceptionHandler := @parameter0: org.apache.commons.jxpath.ExceptionHandler""];\n	""8"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""specialinvoke $stack7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack6)""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""11"" [label=""throw $stack7""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathContext.<init>(JXPathContext,Object)",Constructor,"* This constructor should remain protected - it is to be overridden by\n     * subclasses, but never explicitly invoked by clients.\n     * @param parentContext parent context\n     * @param contextBean Object","protected JXPathContext(final JXPathContext parentContext, final Object contextBean) {\n    this.parentContext = parentContext;\n    this.contextBean = contextBean;\n}","void <init>(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""contextBean := @parameter1: java.lang.Object""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathContext: boolean lenient> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.JXPathContext: boolean lenientSet> = 0""];\n	""8"" [label=""this.<org.apache.commons.jxpath.JXPathContext: java.lang.Object contextBean> = contextBean""];\n	""9"" [label=""this.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext parentContext> = parentContext""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.JXPathTypeConversionException.<init>(String),Constructor,* Create a new JXPathTypeConversionException.\n     * @param message exception text,public JXPathTypeConversionException(final String message) {\n    super(message);\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""message := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(message)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathTypeConversionException""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathTypeConversionException.<init>(String,Exception)",Constructor,* Create a new JXPathTypeConversionException.\n     * @param message exception text\n     * @param ex underlying cause,"public JXPathTypeConversionException(final String message, final Exception ex) {\n    super(message, ex);\n}","void <init>(java.lang.String,java.lang.Exception)","digraph cfg_init {\n	""1"" [label=""ex := @parameter1: java.lang.Exception""];\n	""2"" [label=""message := @parameter0: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>(message, ex)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathTypeConversionException""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.ServletRequestHandler.collectPropertyNames(HashSet,Object)",Method,No Comment,"@Override\nprotected void collectPropertyNames(final HashSet set, final Object bean) {\n    super.collectPropertyNames(set, bean);\n    final ServletRequestAndContext handle = (ServletRequestAndContext) bean;\n    final ServletRequest servletRequest = handle.getServletRequest();\n    Enumeration e = servletRequest.getAttributeNames();\n    while (e.hasMoreElements()) {\n        set.add(e.nextElement());\n    }\n    e = servletRequest.getParameterNames();\n    while (e.hasMoreElements()) {\n        set.add(e.nextElement());\n    }\n}","void collectPropertyNames(java.util.HashSet,java.lang.Object)","digraph cfg_collectPropertyNames {\n	""1"" [label=""$stack6 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""2"" [label=""$stack7 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""3"" [label=""$stack8 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""4"" [label=""$stack9 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""5"" [label=""bean := @parameter1: java.lang.Object""];\n	""6"" [label=""e = interfaceinvoke servletRequest.<javax.servlet.ServletRequest: java.util.Enumeration getAttributeNames()>()""];\n	""7"" [label=""e = interfaceinvoke servletRequest.<javax.servlet.ServletRequest: java.util.Enumeration getParameterNames()>()""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""handle = (org.apache.commons.jxpath.servlet.ServletRequestAndContext) bean""];\n	""11"" [label=""if $stack6 == 0""];\n	""12"" [label=""if $stack7 == 0""];\n	""13"" [label=""return""];\n	""14"" [label=""servletRequest = virtualinvoke handle.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest getServletRequest()>()""];\n	""15"" [label=""set := @parameter0: java.util.HashSet""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.servlet.HttpSessionHandler: void collectPropertyNames(java.util.HashSet,java.lang.Object)>(set, bean)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletRequestHandler""];\n	""18"" [label=""virtualinvoke set.<java.util.HashSet: boolean add(java.lang.Object)>($stack8)""];\n	""19"" [label=""virtualinvoke set.<java.util.HashSet: boolean add(java.lang.Object)>($stack9)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""13""[label=""cfg_true""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""9""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_goto""];\n	""9"" -> ""2""[label=""cfg_goto""];\n}\n",protected 
"org.apache.commons.jxpath.servlet.ServletRequestHandler.getProperty(Object,String)",Method,No Comment,"@Override\npublic Object getProperty(final Object bean, final String property) {\n    final ServletRequestAndContext handle = (ServletRequestAndContext) bean;\n    final ServletRequest servletRequest = handle.getServletRequest();\n    final String[] strings = servletRequest.getParameterValues(property);\n    if (strings != null) {\n        if (strings.length == 0) {\n            return null;\n        }\n        if (strings.length == 1) {\n            return strings[0];\n        }\n        return strings;\n    }\n    final Object object = servletRequest.getAttribute(property);\n    if (object != null) {\n        return object;\n    }\n    return super.getProperty(bean, property);\n}","java.lang.Object getProperty(java.lang.Object,java.lang.String)","digraph cfg_getProperty {\n	""1"" [label=""$stack10 = strings[0]""];\n	""2"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.servlet.HttpSessionHandler: java.lang.Object getProperty(java.lang.Object,java.lang.String)>(bean, property)""];\n	""3"" [label=""$stack8 = lengthof strings""];\n	""4"" [label=""$stack9 = lengthof strings""];\n	""5"" [label=""bean := @parameter0: java.lang.Object""];\n	""6"" [label=""handle = (org.apache.commons.jxpath.servlet.ServletRequestAndContext) bean""];\n	""7"" [label=""if $stack8 != 0""];\n	""8"" [label=""if $stack9 != 1""];\n	""9"" [label=""if object == null""];\n	""10"" [label=""if strings == null""];\n	""11"" [label=""object = interfaceinvoke servletRequest.<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>(property)""];\n	""12"" [label=""property := @parameter1: java.lang.String""];\n	""13"" [label=""return $stack10""];\n	""14"" [label=""return $stack7""];\n	""15"" [label=""return null""];\n	""16"" [label=""return object""];\n	""17"" [label=""return strings""];\n	""18"" [label=""servletRequest = virtualinvoke handle.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest getServletRequest()>()""];\n	""19"" [label=""strings = interfaceinvoke servletRequest.<javax.servlet.ServletRequest: java.lang.String[] getParameterValues(java.lang.String)>(property)""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletRequestHandler""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_false""];\n	""8"" -> ""17""[label=""cfg_true""];\n	""9"" -> ""16""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n}\n",public 
"org.apache.commons.jxpath.servlet.ServletRequestHandler.setProperty(Object,String,Object)",Method,No Comment,"@Override\npublic void setProperty(final Object request, final String property, final Object value) {\n    ((ServletRequestAndContext) request).getServletRequest().setAttribute(property, value);\n}","void setProperty(java.lang.Object,java.lang.String,java.lang.Object)","digraph cfg_setProperty {\n	""1"" [label=""$stack4 = (org.apache.commons.jxpath.servlet.ServletRequestAndContext) request""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest getServletRequest()>()""];\n	""3"" [label=""interfaceinvoke $stack5.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>(property, value)""];\n	""4"" [label=""property := @parameter1: java.lang.String""];\n	""5"" [label=""request := @parameter0: java.lang.Object""];\n	""6"" [label=""return""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletRequestHandler""];\n	""8"" [label=""value := @parameter2: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.PageScopeContextHandler.getPropertyNames(Object),Method,No Comment,@Override\npublic String[] getPropertyNames(final Object pageScope) {\n    final Enumeration e = ((PageScopeContext) pageScope).getAttributeNames();\n    final ArrayList list = new ArrayList(DEFAULT_LIST_SIZE);\n    while (e.hasMoreElements()) {\n        list.add(e.nextElement());\n    }\n    return (String[]) list.toArray(new String[list.size()]);\n},java.lang.String[] getPropertyNames(java.lang.Object),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack10 = (java.lang.String[]) $stack9""];\n	""2"" [label=""$stack11 = (java.lang.String[]) $stack10""];\n	""3"" [label=""$stack12 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.servlet.PageScopeContext) pageScope""];\n	""5"" [label=""$stack5 = new java.util.ArrayList""];\n	""6"" [label=""$stack6 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""7"" [label=""$stack7 = virtualinvoke list.<java.util.ArrayList: int size()>()""];\n	""8"" [label=""$stack8 = newarray (java.lang.String)[$stack7]""];\n	""9"" [label=""$stack9 = virtualinvoke list.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($stack8)""];\n	""10"" [label=""e = virtualinvoke $stack4.<org.apache.commons.jxpath.servlet.PageScopeContext: java.util.Enumeration getAttributeNames()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack6 == 0""];\n	""13"" [label=""list = $stack5""];\n	""14"" [label=""pageScope := @parameter0: java.lang.Object""];\n	""15"" [label=""return $stack11""];\n	""16"" [label=""specialinvoke $stack5.<java.util.ArrayList: void <init>(int)>(16)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageScopeContextHandler""];\n	""18"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>($stack12)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_goto""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.PageScopeContextHandler.getProperty(Object,String)",Method,No Comment,"@Override\npublic Object getProperty(final Object pageScope, final String property) {\n    return ((PageScopeContext) pageScope).getAttribute(property);\n}","java.lang.Object getProperty(java.lang.Object,java.lang.String)","digraph cfg_getProperty {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.servlet.PageScopeContext) pageScope""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.servlet.PageScopeContext: java.lang.Object getAttribute(java.lang.String)>(property)""];\n	""3"" [label=""pageScope := @parameter0: java.lang.Object""];\n	""4"" [label=""property := @parameter1: java.lang.String""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageScopeContextHandler""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.PageScopeContextHandler.setProperty(Object,String,Object)",Method,No Comment,"@Override\npublic void setProperty(final Object pageScope, final String property, final Object value) {\n    ((PageScopeContext) pageScope).setAttribute(property, value);\n}","void setProperty(java.lang.Object,java.lang.String,java.lang.Object)","digraph cfg_setProperty {\n	""1"" [label=""$stack4 = (org.apache.commons.jxpath.servlet.PageScopeContext) pageScope""];\n	""2"" [label=""pageScope := @parameter0: java.lang.Object""];\n	""3"" [label=""property := @parameter1: java.lang.String""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageScopeContextHandler""];\n	""6"" [label=""value := @parameter2: java.lang.Object""];\n	""7"" [label=""virtualinvoke $stack4.<org.apache.commons.jxpath.servlet.PageScopeContext: void setAttribute(java.lang.String,java.lang.Object)>(property, value)""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.ServletContextHandler.getPropertyNames(Object),Method,No Comment,"@Override\npublic String[] getPropertyNames(final Object context) {\n    final HashSet list = new HashSet(DEFAULT_PROPERTY_COUNT);\n    collectPropertyNames(list, context);\n    return (String[]) list.toArray(new String[list.size()]);\n}",java.lang.String[] getPropertyNames(java.lang.Object),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack3 = new java.util.HashSet""];\n	""2"" [label=""$stack4 = virtualinvoke list.<java.util.HashSet: int size()>()""];\n	""3"" [label=""$stack5 = newarray (java.lang.String)[$stack4]""];\n	""4"" [label=""$stack6 = virtualinvoke list.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($stack5)""];\n	""5"" [label=""$stack7 = (java.lang.String[]) $stack6""];\n	""6"" [label=""$stack8 = (java.lang.String[]) $stack7""];\n	""7"" [label=""context := @parameter0: java.lang.Object""];\n	""8"" [label=""list = $stack3""];\n	""9"" [label=""return $stack8""];\n	""10"" [label=""specialinvoke $stack3.<java.util.HashSet: void <init>(int)>(16)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletContextHandler""];\n	""12"" [label=""virtualinvoke this.<org.apache.commons.jxpath.servlet.ServletContextHandler: void collectPropertyNames(java.util.HashSet,java.lang.Object)>(list, context)""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""12""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.ServletContextHandler.collectPropertyNames(HashSet,Object)",Method,"* Collect the property names from bean, storing in set.\n     * @param set destination\n     * @param bean to read","protected void collectPropertyNames(final HashSet set, Object bean) {\n    if (bean instanceof HttpSessionAndServletContext) {\n        bean = ((HttpSessionAndServletContext) bean).getServletContext();\n    }\n    final Enumeration e = ((ServletContext) bean).getAttributeNames();\n    while (e.hasMoreElements()) {\n        set.add(e.nextElement());\n    }\n}","void collectPropertyNames(java.util.HashSet,java.lang.Object)","digraph cfg_collectPropertyNames {\n	""1"" [label=""$stack4 = bean instanceof org.apache.commons.jxpath.servlet.HttpSessionAndServletContext""];\n	""2"" [label=""$stack5 = (javax.servlet.ServletContext) bean""];\n	""3"" [label=""$stack6 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""4"" [label=""$stack7 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""5"" [label=""$stack8 = (org.apache.commons.jxpath.servlet.HttpSessionAndServletContext) bean""];\n	""6"" [label=""bean := @parameter1: java.lang.Object""];\n	""7"" [label=""bean = virtualinvoke $stack8.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.ServletContext getServletContext()>()""];\n	""8"" [label=""e = interfaceinvoke $stack5.<javax.servlet.ServletContext: java.util.Enumeration getAttributeNames()>()""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack4 == 0""];\n	""11"" [label=""if $stack6 == 0""];\n	""12"" [label=""return""];\n	""13"" [label=""set := @parameter0: java.util.HashSet""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletContextHandler""];\n	""15"" [label=""virtualinvoke set.<java.util.HashSet: boolean add(java.lang.Object)>($stack7)""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""11"" -> ""12""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_goto""];\n}\n",protected 
"org.apache.commons.jxpath.servlet.ServletContextHandler.getProperty(Object,String)",Method,No Comment,"@Override\npublic Object getProperty(final Object context, final String property) {\n    return ((ServletContext) context).getAttribute(property);\n}","java.lang.Object getProperty(java.lang.Object,java.lang.String)","digraph cfg_getProperty {\n	""1"" [label=""$stack3 = (javax.servlet.ServletContext) context""];\n	""2"" [label=""$stack4 = interfaceinvoke $stack3.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>(property)""];\n	""3"" [label=""context := @parameter0: java.lang.Object""];\n	""4"" [label=""property := @parameter1: java.lang.String""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletContextHandler""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.ServletContextHandler.setProperty(Object,String,Object)",Method,No Comment,"@Override\npublic void setProperty(final Object context, final String property, final Object value) {\n    ((ServletContext) context).setAttribute(property, value);\n}","void setProperty(java.lang.Object,java.lang.String,java.lang.Object)","digraph cfg_setProperty {\n	""1"" [label=""$stack4 = (javax.servlet.ServletContext) context""];\n	""2"" [label=""context := @parameter0: java.lang.Object""];\n	""3"" [label=""interfaceinvoke $stack4.<javax.servlet.ServletContext: void setAttribute(java.lang.String,java.lang.Object)>(property, value)""];\n	""4"" [label=""property := @parameter1: java.lang.String""];\n	""5"" [label=""return""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletContextHandler""];\n	""7"" [label=""value := @parameter2: java.lang.Object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.PageScopeContext.getAttributeNames(),Method,"* Returns attributes of the pageContext declared in the ""page"" scope.\n     * @return Enumeration of attribute names",public Enumeration getAttributeNames() {\n    return pageContext.getAttributeNamesInScope(PageContext.PAGE_SCOPE);\n},java.util.Enumeration getAttributeNames(),"digraph cfg_getAttributeNames {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.servlet.PageScopeContext: javax.servlet.jsp.PageContext pageContext>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<javax.servlet.jsp.PageContext: java.util.Enumeration getAttributeNamesInScope(int)>(1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageScopeContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.PageScopeContext.getAttribute(String),Method,* Gets the value of the specified attribute.\n     * @param attribute name\n     * @return Object,"public Object getAttribute(final String attribute) {\n    return pageContext.getAttribute(attribute, PageContext.PAGE_SCOPE);\n}",java.lang.Object getAttribute(java.lang.String),"digraph cfg_getAttribute {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.servlet.PageScopeContext: javax.servlet.jsp.PageContext pageContext>""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<javax.servlet.jsp.PageContext: java.lang.Object getAttribute(java.lang.String,int)>(attribute, 1)""];\n	""3"" [label=""attribute := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageScopeContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.PageScopeContext.setAttribute(String,Object)",Method,* Sets the specified attribute.\n     * @param attribute to set\n     * @param value to set,"public void setAttribute(final String attribute, final Object value) {\n    pageContext.setAttribute(attribute, value, PageContext.PAGE_SCOPE);\n}","void setAttribute(java.lang.String,java.lang.Object)","digraph cfg_setAttribute {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.servlet.PageScopeContext: javax.servlet.jsp.PageContext pageContext>""];\n	""2"" [label=""attribute := @parameter0: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageScopeContext""];\n	""5"" [label=""value := @parameter1: java.lang.Object""];\n	""6"" [label=""virtualinvoke $stack3.<javax.servlet.jsp.PageContext: void setAttribute(java.lang.String,java.lang.Object,int)>(attribute, value, 1)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.PageScopeContext.<init>(PageContext),Constructor,* Create a new PageScopeContext.\n     * @param pageContext base,public PageScopeContext(final PageContext pageContext) {\n    this.pageContext = pageContext;\n},void <init>(javax.servlet.jsp.PageContext),"digraph cfg_init {\n	""1"" [label=""pageContext := @parameter0: javax.servlet.jsp.PageContext""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageScopeContext""];\n	""5"" [label=""this.<org.apache.commons.jxpath.servlet.PageScopeContext: javax.servlet.jsp.PageContext pageContext> = pageContext""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.HttpSessionHandler.collectPropertyNames(HashSet,Object)",Method,No Comment,"@Override\nprotected void collectPropertyNames(final HashSet set, final Object bean) {\n    final HttpSessionAndServletContext handle = (HttpSessionAndServletContext) bean;\n    super.collectPropertyNames(set, handle.getServletContext());\n    final HttpSession session = handle.getSession();\n    if (session != null) {\n        final Enumeration e = session.getAttributeNames();\n        while (e.hasMoreElements()) {\n            set.add(e.nextElement());\n        }\n    }\n}","void collectPropertyNames(java.util.HashSet,java.lang.Object)","digraph cfg_collectPropertyNames {\n	""1"" [label=""$stack6 = virtualinvoke handle.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.ServletContext getServletContext()>()""];\n	""2"" [label=""$stack7 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""3"" [label=""$stack8 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""4"" [label=""bean := @parameter1: java.lang.Object""];\n	""5"" [label=""e = interfaceinvoke session.<javax.servlet.http.HttpSession: java.util.Enumeration getAttributeNames()>()""];\n	""6"" [label=""goto""];\n	""7"" [label=""handle = (org.apache.commons.jxpath.servlet.HttpSessionAndServletContext) bean""];\n	""8"" [label=""if $stack7 == 0""];\n	""9"" [label=""if session == null""];\n	""10"" [label=""return""];\n	""11"" [label=""session = virtualinvoke handle.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.http.HttpSession getSession()>()""];\n	""12"" [label=""set := @parameter0: java.util.HashSet""];\n	""13"" [label=""specialinvoke this.<org.apache.commons.jxpath.servlet.ServletContextHandler: void collectPropertyNames(java.util.HashSet,java.lang.Object)>(set, $stack6)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.servlet.HttpSessionHandler""];\n	""15"" [label=""virtualinvoke set.<java.util.HashSet: boolean add(java.lang.Object)>($stack8)""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_goto""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",protected 
"org.apache.commons.jxpath.servlet.HttpSessionHandler.getProperty(Object,String)",Method,No Comment,"@Override\npublic Object getProperty(final Object bean, final String property) {\n    final HttpSessionAndServletContext handle = (HttpSessionAndServletContext) bean;\n    final HttpSession session = handle.getSession();\n    if (session != null) {\n        final Object object = session.getAttribute(property);\n        if (object != null) {\n            return object;\n        }\n    }\n    return super.getProperty(handle.getServletContext(), property);\n}","java.lang.Object getProperty(java.lang.Object,java.lang.String)","digraph cfg_getProperty {\n	""1"" [label=""$stack6 = virtualinvoke handle.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.ServletContext getServletContext()>()""];\n	""2"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.servlet.ServletContextHandler: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($stack6, property)""];\n	""3"" [label=""bean := @parameter0: java.lang.Object""];\n	""4"" [label=""handle = (org.apache.commons.jxpath.servlet.HttpSessionAndServletContext) bean""];\n	""5"" [label=""if object == null""];\n	""6"" [label=""if session == null""];\n	""7"" [label=""object = interfaceinvoke session.<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>(property)""];\n	""8"" [label=""property := @parameter1: java.lang.String""];\n	""9"" [label=""return $stack7""];\n	""10"" [label=""return object""];\n	""11"" [label=""session = virtualinvoke handle.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.http.HttpSession getSession()>()""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.servlet.HttpSessionHandler""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_true""];\n	""6"" -> ""7""[label=""cfg_false""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.HttpSessionHandler.setProperty(Object,String,Object)",Method,No Comment,"@Override\npublic void setProperty(final Object bean, final String property, final Object value) {\n    final HttpSessionAndServletContext handle = (HttpSessionAndServletContext) bean;\n    final HttpSession session = handle.getSession();\n    if (session != null) {\n        session.setAttribute(property, value);\n    } else {\n        throw new JXPathException(""Cannot set session attribute: "" + ""there is no session"");\n    }\n}","void setProperty(java.lang.Object,java.lang.String,java.lang.Object)","digraph cfg_setProperty {\n	""1"" [label=""$stack6 = new org.apache.commons.jxpath.JXPathException""];\n	""2"" [label=""bean := @parameter0: java.lang.Object""];\n	""3"" [label=""goto""];\n	""4"" [label=""handle = (org.apache.commons.jxpath.servlet.HttpSessionAndServletContext) bean""];\n	""5"" [label=""if session == null""];\n	""6"" [label=""interfaceinvoke session.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>(property, value)""];\n	""7"" [label=""property := @parameter1: java.lang.String""];\n	""8"" [label=""return""];\n	""9"" [label=""session = virtualinvoke handle.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.http.HttpSession getSession()>()""];\n	""10"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""Cannot set session attribute: there is no session\"")""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.servlet.HttpSessionHandler""];\n	""12"" [label=""throw $stack6""];\n	""13"" [label=""value := @parameter2: java.lang.Object""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_goto""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""6""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.KeywordVariables.isDeclaredVariable(String),Method,No Comment,@Override\npublic boolean isDeclaredVariable(final String variable) {\n    return variable.equals(keyword);\n},boolean isDeclaredVariable(java.lang.String),"digraph cfg_isDeclaredVariable {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.servlet.KeywordVariables: java.lang.String keyword>""];\n	""2"" [label=""$stack3 = virtualinvoke variable.<java.lang.String: boolean equals(java.lang.Object)>($stack2)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""5"" [label=""variable := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.KeywordVariables.getVariable(String),Method,No Comment,@Override\npublic Object getVariable(final String variable) {\n    return isDeclaredVariable(variable) ? object : null;\n},java.lang.Object getVariable(java.lang.String),"digraph cfg_getVariable {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.servlet.KeywordVariables: boolean isDeclaredVariable(java.lang.String)>(variable)""];\n	""2"" [label=""$stack3 = null""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.servlet.KeywordVariables: java.lang.Object object>""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""8"" [label=""variable := @parameter0: java.lang.String""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.KeywordVariables.declareVariable(String,Object)",Method,No Comment,"@Override\npublic void declareVariable(final String variable, final Object value) {\n    throw new UnsupportedOperationException(""Cannot declare new keyword variables."");\n}","void declareVariable(java.lang.String,java.lang.Object)","digraph cfg_declareVariable {\n	""1"" [label=""$stack3 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot declare new keyword variables.\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""4"" [label=""throw $stack3""];\n	""5"" [label=""value := @parameter1: java.lang.Object""];\n	""6"" [label=""variable := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.KeywordVariables.undeclareVariable(String),Method,No Comment,"@Override\npublic void undeclareVariable(final String variable) {\n    throw new UnsupportedOperationException(""Cannot undeclare keyword variables."");\n}",void undeclareVariable(java.lang.String),"digraph cfg_undeclareVariable {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot undeclare keyword variables.\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""4"" [label=""throw $stack2""];\n	""5"" [label=""variable := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.KeywordVariables.<init>(String,Object)",Constructor,* Create a new KeywordVariables.\n     * @param keyword String\n     * @param object value,"public KeywordVariables(final String keyword, final Object object) {\n    if (keyword == null) {\n        throw new IllegalArgumentException(""keyword cannot be null"");\n    }\n    this.keyword = keyword;\n    this.object = object;\n}","void <init>(java.lang.String,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""$stack3 = new java.lang.IllegalArgumentException""];\n	""2"" [label=""if keyword != null""];\n	""3"" [label=""keyword := @parameter0: java.lang.String""];\n	""4"" [label=""object := @parameter1: java.lang.Object""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke $stack3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\""keyword cannot be null\"")""];\n	""7"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""9"" [label=""this.<org.apache.commons.jxpath.servlet.KeywordVariables: java.lang.Object object> = object""];\n	""10"" [label=""this.<org.apache.commons.jxpath.servlet.KeywordVariables: java.lang.String keyword> = keyword""];\n	""11"" [label=""throw $stack3""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_false""];\n	""2"" -> ""10""[label=""cfg_true""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.PageContextHandler.getPropertyNames(Object),Method,No Comment,@Override\npublic String[] getPropertyNames(final Object pageContext) {\n    final HashSet list = new HashSet();\n    Enumeration e = ((PageContext) pageContext).getAttributeNamesInScope(PageContext.PAGE_SCOPE);\n    while (e.hasMoreElements()) {\n        list.add(e.nextElement());\n    }\n    e = ((PageContext) pageContext).getAttributeNamesInScope(PageContext.REQUEST_SCOPE);\n    while (e.hasMoreElements()) {\n        list.add(e.nextElement());\n    }\n    e = ((PageContext) pageContext).getAttributeNamesInScope(PageContext.SESSION_SCOPE);\n    while (e.hasMoreElements()) {\n        list.add(e.nextElement());\n    }\n    e = ((PageContext) pageContext).getAttributeNamesInScope(PageContext.APPLICATION_SCOPE);\n    while (e.hasMoreElements()) {\n        list.add(e.nextElement());\n    }\n    return (String[]) list.toArray(new String[list.size()]);\n},java.lang.String[] getPropertyNames(java.lang.Object),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack10 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""2"" [label=""$stack11 = (javax.servlet.jsp.PageContext) pageContext""];\n	""3"" [label=""$stack12 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""4"" [label=""$stack13 = virtualinvoke list.<java.util.HashSet: int size()>()""];\n	""5"" [label=""$stack14 = newarray (java.lang.String)[$stack13]""];\n	""6"" [label=""$stack15 = virtualinvoke list.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($stack14)""];\n	""7"" [label=""$stack16 = (java.lang.String[]) $stack15""];\n	""8"" [label=""$stack17 = (java.lang.String[]) $stack16""];\n	""9"" [label=""$stack18 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""10"" [label=""$stack19 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""11"" [label=""$stack20 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""12"" [label=""$stack21 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""13"" [label=""$stack4 = new java.util.HashSet""];\n	""14"" [label=""$stack5 = (javax.servlet.jsp.PageContext) pageContext""];\n	""15"" [label=""$stack6 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""16"" [label=""$stack7 = (javax.servlet.jsp.PageContext) pageContext""];\n	""17"" [label=""$stack8 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""18"" [label=""$stack9 = (javax.servlet.jsp.PageContext) pageContext""];\n	""19"" [label=""e = virtualinvoke $stack11.<javax.servlet.jsp.PageContext: java.util.Enumeration getAttributeNamesInScope(int)>(4)""];\n	""20"" [label=""e = virtualinvoke $stack5.<javax.servlet.jsp.PageContext: java.util.Enumeration getAttributeNamesInScope(int)>(1)""];\n	""21"" [label=""e = virtualinvoke $stack7.<javax.servlet.jsp.PageContext: java.util.Enumeration getAttributeNamesInScope(int)>(2)""];\n	""22"" [label=""e = virtualinvoke $stack9.<javax.servlet.jsp.PageContext: java.util.Enumeration getAttributeNamesInScope(int)>(3)""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""if $stack10 == 0""];\n	""28"" [label=""if $stack12 == 0""];\n	""29"" [label=""if $stack6 == 0""];\n	""30"" [label=""if $stack8 == 0""];\n	""31"" [label=""list = $stack4""];\n	""32"" [label=""pageContext := @parameter0: java.lang.Object""];\n	""33"" [label=""return $stack17""];\n	""34"" [label=""specialinvoke $stack4.<java.util.HashSet: void <init>()>()""];\n	""35"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageContextHandler""];\n	""36"" [label=""virtualinvoke list.<java.util.HashSet: boolean add(java.lang.Object)>($stack18)""];\n	""37"" [label=""virtualinvoke list.<java.util.HashSet: boolean add(java.lang.Object)>($stack19)""];\n	""38"" [label=""virtualinvoke list.<java.util.HashSet: boolean add(java.lang.Object)>($stack20)""];\n	""39"" [label=""virtualinvoke list.<java.util.HashSet: boolean add(java.lang.Object)>($stack21)""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""37""[label=""cfg_next""];\n	""11"" -> ""38""[label=""cfg_next""];\n	""12"" -> ""39""[label=""cfg_next""];\n	""13"" -> ""34""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""29""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""30""[label=""cfg_next""];\n	""18"" -> ""22""[label=""cfg_next""];\n	""19"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""15""[label=""cfg_goto""];\n	""24"" -> ""17""[label=""cfg_goto""];\n	""25"" -> ""1""[label=""cfg_goto""];\n	""26"" -> ""3""[label=""cfg_goto""];\n	""27"" -> ""10""[label=""cfg_false""];\n	""27"" -> ""2""[label=""cfg_true""];\n	""28"" -> ""4""[label=""cfg_true""];\n	""28"" -> ""9""[label=""cfg_false""];\n	""29"" -> ""12""[label=""cfg_false""];\n	""29"" -> ""16""[label=""cfg_true""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_false""];\n	""30"" -> ""18""[label=""cfg_true""];\n	""31"" -> ""14""[label=""cfg_next""];\n	""32"" -> ""13""[label=""cfg_next""];\n	""34"" -> ""31""[label=""cfg_next""];\n	""35"" -> ""32""[label=""cfg_next""];\n	""36"" -> ""26""[label=""cfg_next""];\n	""37"" -> ""25""[label=""cfg_next""];\n	""38"" -> ""24""[label=""cfg_next""];\n	""39"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""33""[label=""cfg_next""];\n	""9"" -> ""36""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.PageContextHandler.getProperty(Object,String)",Method,* Returns {@code pageContext.findAttribute(property)}.\n     * @param pageContext to search\n     * @param property name\n     * @return Object value,"@Override\npublic Object getProperty(final Object pageContext, final String property) {\n    return ((PageContext) pageContext).findAttribute(property);\n}","java.lang.Object getProperty(java.lang.Object,java.lang.String)","digraph cfg_getProperty {\n	""1"" [label=""$stack3 = (javax.servlet.jsp.PageContext) pageContext""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<javax.servlet.jsp.PageContext: java.lang.Object findAttribute(java.lang.String)>(property)""];\n	""3"" [label=""pageContext := @parameter0: java.lang.Object""];\n	""4"" [label=""property := @parameter1: java.lang.String""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageContextHandler""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.PageContextHandler.setProperty(Object,String,Object)",Method,No Comment,"@Override\npublic void setProperty(final Object pageContext, final String property, final Object value) {\n    ((PageContext) pageContext).setAttribute(property, value, PageContext.PAGE_SCOPE);\n}","void setProperty(java.lang.Object,java.lang.String,java.lang.Object)","digraph cfg_setProperty {\n	""1"" [label=""$stack4 = (javax.servlet.jsp.PageContext) pageContext""];\n	""2"" [label=""pageContext := @parameter0: java.lang.Object""];\n	""3"" [label=""property := @parameter1: java.lang.String""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.servlet.PageContextHandler""];\n	""6"" [label=""value := @parameter2: java.lang.Object""];\n	""7"" [label=""virtualinvoke $stack4.<javax.servlet.jsp.PageContext: void setAttribute(java.lang.String,java.lang.Object,int)>(property, value, 1)""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.HttpSessionAndServletContext.getSession(),Method,* Gets the session.\n     * @return HttpSession,public HttpSession getSession() {\n    return session;\n},javax.servlet.http.HttpSession getSession(),"digraph cfg_getSession {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.http.HttpSession session>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.servlet.HttpSessionAndServletContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.HttpSessionAndServletContext.getServletContext(),Method,* Gets the ServletContext.\n     * @return ServletContext,public ServletContext getServletContext() {\n    return context;\n},javax.servlet.ServletContext getServletContext(),"digraph cfg_getServletContext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.ServletContext context>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.servlet.HttpSessionAndServletContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.HttpSessionAndServletContext.<init>(HttpSession,ServletContext)",Constructor,* Create a new HttpSessionAndServletContext.\n     * @param session HttpSession\n     * @param context ServletContext,"public HttpSessionAndServletContext(final HttpSession session, final ServletContext context) {\n    this.session = session;\n    this.context = context;\n}","void <init>(javax.servlet.http.HttpSession,javax.servlet.ServletContext)","digraph cfg_init {\n	""1"" [label=""context := @parameter1: javax.servlet.ServletContext""];\n	""2"" [label=""return""];\n	""3"" [label=""session := @parameter0: javax.servlet.http.HttpSession""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.servlet.HttpSessionAndServletContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.ServletContext context> = context""];\n	""7"" [label=""this.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: javax.servlet.http.HttpSession session> = session""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.servlet.JXPathServletContexts.getPageContext(PageContext),Method,"* Returns a JXPathContext bound to the ""page"" scope. Caches that context\n     * within the PageContext itself.\n     * @param pageContext as described\n     * @return JXPathContext","public static JXPathContext getPageContext(final PageContext pageContext) {\n    JXPathContext context = (JXPathContext) pageContext.getAttribute(Constants.JXPATH_CONTEXT);\n    if (context == null) {\n        final JXPathContext parentContext = getRequestContext(pageContext.getRequest(), pageContext.getServletContext());\n        context = factory.newContext(parentContext, pageContext);\n        context.setVariables(new KeywordVariables(Constants.PAGE_SCOPE, new PageScopeContext(pageContext)));\n        pageContext.setAttribute(Constants.JXPATH_CONTEXT, context);\n    }\n    return context;\n}",org.apache.commons.jxpath.JXPathContext getPageContext(javax.servlet.jsp.PageContext),"digraph cfg_getPageContext {\n	""1"" [label=""$stack3 = virtualinvoke pageContext.<javax.servlet.jsp.PageContext: java.lang.Object getAttribute(java.lang.String)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"")""];\n	""2"" [label=""$stack4 = virtualinvoke pageContext.<javax.servlet.jsp.PageContext: javax.servlet.ServletContext getServletContext()>()""];\n	""3"" [label=""$stack5 = virtualinvoke pageContext.<javax.servlet.jsp.PageContext: javax.servlet.ServletRequest getRequest()>()""];\n	""4"" [label=""$stack6 = <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContextFactory factory>""];\n	""5"" [label=""$stack7 = new org.apache.commons.jxpath.servlet.PageScopeContext""];\n	""6"" [label=""$stack8 = new org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""7"" [label=""context = (org.apache.commons.jxpath.JXPathContext) $stack3""];\n	""8"" [label=""context = virtualinvoke $stack6.<org.apache.commons.jxpath.JXPathContextFactory: org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(parentContext, pageContext)""];\n	""9"" [label=""if context != null""];\n	""10"" [label=""pageContext := @parameter0: javax.servlet.jsp.PageContext""];\n	""11"" [label=""parentContext = staticinvoke <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContext getRequestContext(javax.servlet.ServletRequest,javax.servlet.ServletContext)>($stack5, $stack4)""];\n	""12"" [label=""return context""];\n	""13"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.servlet.PageScopeContext: void <init>(javax.servlet.jsp.PageContext)>(pageContext)""];\n	""14"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.servlet.KeywordVariables: void <init>(java.lang.String,java.lang.Object)>(\""page\"", $stack7)""];\n	""15"" [label=""virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: void setVariables(org.apache.commons.jxpath.Variables)>($stack8)""];\n	""16"" [label=""virtualinvoke pageContext.<javax.servlet.jsp.PageContext: void setAttribute(java.lang.String,java.lang.Object)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"", context)""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n}\n","public , static "
"org.apache.commons.jxpath.servlet.JXPathServletContexts.getRequestContext(ServletRequest,ServletContext)",Method,"* Returns a JXPathContext bound to the ""request"" scope. Caches that context\n     * within the request itself.\n     * @param request as described\n     * @param servletContext operative\n     * @return JXPathContext","public static JXPathContext getRequestContext(final ServletRequest request, final ServletContext servletContext) {\n    JXPathContext context = (JXPathContext) request.getAttribute(Constants.JXPATH_CONTEXT);\n    // If we are in an included JSP or Servlet, the request parameter\n    // will represent the included URL, but the JXPathContext we have\n    // just acquired will represent the outer request.\n    if (context != null) {\n        final ServletRequestAndContext handle = (ServletRequestAndContext) context.getContextBean();\n        if (handle.getServletRequest() == request) {\n            return context;\n        }\n    }\n    JXPathContext parentContext = null;\n    if (request instanceof HttpServletRequest) {\n        final HttpSession session = ((HttpServletRequest) request).getSession(false);\n        if (session != null) {\n            parentContext = getSessionContext(session, servletContext);\n        } else {\n            parentContext = getApplicationContext(servletContext);\n        }\n    }\n    final ServletRequestAndContext handle = new ServletRequestAndContext(request, servletContext);\n    context = factory.newContext(parentContext, handle);\n    context.setVariables(new KeywordVariables(Constants.REQUEST_SCOPE, handle));\n    request.setAttribute(Constants.JXPATH_CONTEXT, context);\n    return context;\n}","org.apache.commons.jxpath.JXPathContext getRequestContext(javax.servlet.ServletRequest,javax.servlet.ServletContext)","digraph cfg_getRequestContext {\n	""1"" [label=""$stack10 = (javax.servlet.http.HttpServletRequest) request""];\n	""2"" [label=""$stack11 = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: java.lang.Object getContextBean()>()""];\n	""3"" [label=""$stack12 = virtualinvoke handle.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest getServletRequest()>()""];\n	""4"" [label=""$stack5 = interfaceinvoke request.<javax.servlet.ServletRequest: java.lang.Object getAttribute(java.lang.String)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"")""];\n	""5"" [label=""$stack6 = request instanceof javax.servlet.http.HttpServletRequest""];\n	""6"" [label=""$stack7 = new org.apache.commons.jxpath.servlet.ServletRequestAndContext""];\n	""7"" [label=""$stack8 = <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContextFactory factory>""];\n	""8"" [label=""$stack9 = new org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""9"" [label=""context = (org.apache.commons.jxpath.JXPathContext) $stack5""];\n	""10"" [label=""context = virtualinvoke $stack8.<org.apache.commons.jxpath.JXPathContextFactory: org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(handle, session)""];\n	""11"" [label=""goto""];\n	""12"" [label=""handle = (org.apache.commons.jxpath.servlet.ServletRequestAndContext) $stack11""];\n	""13"" [label=""handle = null""];\n	""14"" [label=""handle = staticinvoke <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContext getApplicationContext(javax.servlet.ServletContext)>(servletContext)""];\n	""15"" [label=""handle = staticinvoke <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContext getSessionContext(javax.servlet.http.HttpSession,javax.servlet.ServletContext)>(session, servletContext)""];\n	""16"" [label=""if $stack12 != request""];\n	""17"" [label=""if $stack6 == 0""];\n	""18"" [label=""if context == null""];\n	""19"" [label=""if session == null""];\n	""20"" [label=""interfaceinvoke request.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"", context)""];\n	""21"" [label=""request := @parameter0: javax.servlet.ServletRequest""];\n	""22"" [label=""return context""];\n	""23"" [label=""return context""];\n	""24"" [label=""servletContext := @parameter1: javax.servlet.ServletContext""];\n	""25"" [label=""session = $stack7""];\n	""26"" [label=""session = interfaceinvoke $stack10.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>(0)""];\n	""27"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: void <init>(javax.servlet.ServletRequest,javax.servlet.ServletContext)>(request, servletContext)""];\n	""28"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.servlet.KeywordVariables: void <init>(java.lang.String,java.lang.Object)>(\""request\"", session)""];\n	""29"" [label=""virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: void setVariables(org.apache.commons.jxpath.Variables)>($stack9)""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_goto""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_true""];\n	""16"" -> ""22""[label=""cfg_false""];\n	""17"" -> ""1""[label=""cfg_false""];\n	""17"" -> ""6""[label=""cfg_true""];\n	""18"" -> ""13""[label=""cfg_true""];\n	""18"" -> ""2""[label=""cfg_false""];\n	""19"" -> ""14""[label=""cfg_true""];\n	""19"" -> ""15""[label=""cfg_false""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""4""[label=""cfg_next""];\n	""25"" -> ""7""[label=""cfg_next""];\n	""26"" -> ""19""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""27""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.servlet.JXPathServletContexts.getSessionContext(HttpSession,ServletContext)",Method,"* Returns a JXPathContext bound to the ""session"" scope. Caches that context\n     * within the session itself.\n     * @param session as described\n     * @param servletContext operative\n     * @return JXPathContext","public static JXPathContext getSessionContext(final HttpSession session, final ServletContext servletContext) {\n    JXPathContext context = (JXPathContext) session.getAttribute(Constants.JXPATH_CONTEXT);\n    if (context == null) {\n        final JXPathContext parentContext = getApplicationContext(servletContext);\n        final HttpSessionAndServletContext handle = new HttpSessionAndServletContext(session, servletContext);\n        context = factory.newContext(parentContext, handle);\n        context.setVariables(new KeywordVariables(Constants.SESSION_SCOPE, handle));\n        session.setAttribute(Constants.JXPATH_CONTEXT, context);\n    }\n    return context;\n}","org.apache.commons.jxpath.JXPathContext getSessionContext(javax.servlet.http.HttpSession,javax.servlet.ServletContext)","digraph cfg_getSessionContext {\n	""1"" [label=""$stack5 = interfaceinvoke session.<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"")""];\n	""2"" [label=""$stack6 = new org.apache.commons.jxpath.servlet.HttpSessionAndServletContext""];\n	""3"" [label=""$stack7 = <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContextFactory factory>""];\n	""4"" [label=""$stack8 = new org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""5"" [label=""context = (org.apache.commons.jxpath.JXPathContext) $stack5""];\n	""6"" [label=""context = virtualinvoke $stack7.<org.apache.commons.jxpath.JXPathContextFactory: org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(parentContext, handle)""];\n	""7"" [label=""handle = $stack6""];\n	""8"" [label=""if context != null""];\n	""9"" [label=""interfaceinvoke session.<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"", context)""];\n	""10"" [label=""parentContext = staticinvoke <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContext getApplicationContext(javax.servlet.ServletContext)>(servletContext)""];\n	""11"" [label=""return context""];\n	""12"" [label=""servletContext := @parameter1: javax.servlet.ServletContext""];\n	""13"" [label=""session := @parameter0: javax.servlet.http.HttpSession""];\n	""14"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: void <init>(javax.servlet.http.HttpSession,javax.servlet.ServletContext)>(session, servletContext)""];\n	""15"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.servlet.KeywordVariables: void <init>(java.lang.String,java.lang.Object)>(\""session\"", handle)""];\n	""16"" [label=""virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: void setVariables(org.apache.commons.jxpath.Variables)>($stack8)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.servlet.JXPathServletContexts.getApplicationContext(ServletContext),Method,"* Returns  a JXPathContext bound to the ""application"" scope. Caches that\n     * context within the servlet context itself.\n     * @param servletContext operative\n     * @return JXPathContext","public static JXPathContext getApplicationContext(final ServletContext servletContext) {\n    JXPathContext context = (JXPathContext) servletContext.getAttribute(Constants.JXPATH_CONTEXT);\n    if (context == null) {\n        context = factory.newContext(null, servletContext);\n        context.setVariables(new KeywordVariables(Constants.APPLICATION_SCOPE, servletContext));\n        servletContext.setAttribute(Constants.JXPATH_CONTEXT, context);\n    }\n    return context;\n}",org.apache.commons.jxpath.JXPathContext getApplicationContext(javax.servlet.ServletContext),"digraph cfg_getApplicationContext {\n	""1"" [label=""$stack2 = interfaceinvoke servletContext.<javax.servlet.ServletContext: java.lang.Object getAttribute(java.lang.String)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"")""];\n	""2"" [label=""$stack3 = <org.apache.commons.jxpath.servlet.JXPathServletContexts: org.apache.commons.jxpath.JXPathContextFactory factory>""];\n	""3"" [label=""$stack4 = new org.apache.commons.jxpath.servlet.KeywordVariables""];\n	""4"" [label=""context = (org.apache.commons.jxpath.JXPathContext) $stack2""];\n	""5"" [label=""context = virtualinvoke $stack3.<org.apache.commons.jxpath.JXPathContextFactory: org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(null, servletContext)""];\n	""6"" [label=""if context != null""];\n	""7"" [label=""interfaceinvoke servletContext.<javax.servlet.ServletContext: void setAttribute(java.lang.String,java.lang.Object)>(\""org.apache.commons.jxpath.JXPATH_CONTEXT\"", context)""];\n	""8"" [label=""return context""];\n	""9"" [label=""servletContext := @parameter0: javax.servlet.ServletContext""];\n	""10"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.servlet.KeywordVariables: void <init>(java.lang.String,java.lang.Object)>(\""application\"", servletContext)""];\n	""11"" [label=""virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: void setVariables(org.apache.commons.jxpath.Variables)>($stack4)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""8""[label=""cfg_true""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.servlet.ServletRequestAndContext.getSession(),Method,No Comment,@Override\npublic HttpSession getSession() {\n    return request instanceof HttpServletRequest ? ((HttpServletRequest) request).getSession(false) : null;\n},javax.servlet.http.HttpSession getSession(),"digraph cfg_getSession {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest request>""];\n	""2"" [label=""$stack2 = $stack1 instanceof javax.servlet.http.HttpServletRequest""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest request>""];\n	""4"" [label=""$stack4 = (javax.servlet.http.HttpServletRequest) $stack3""];\n	""5"" [label=""$stack5 = interfaceinvoke $stack4.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>(0)""];\n	""6"" [label=""$stack5 = null""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletRequestAndContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.servlet.ServletRequestAndContext.getServletRequest(),Method,* Gets the request.\n     *\n     * @return ServletRequest,public ServletRequest getServletRequest() {\n    return request;\n},javax.servlet.ServletRequest getServletRequest(),"digraph cfg_getServletRequest {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest request>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletRequestAndContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.servlet.ServletRequestAndContext.<init>(ServletRequest,ServletContext)",Constructor,* Create a new ServletRequestAndContext.\n     *\n     * @param request ServletRequest\n     * @param context ServletContext,"public ServletRequestAndContext(final ServletRequest request, final ServletContext context) {\n    super(null, context);\n    this.request = request;\n}","void <init>(javax.servlet.ServletRequest,javax.servlet.ServletContext)","digraph cfg_init {\n	""1"" [label=""context := @parameter1: javax.servlet.ServletContext""];\n	""2"" [label=""request := @parameter0: javax.servlet.ServletRequest""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.servlet.HttpSessionAndServletContext: void <init>(javax.servlet.http.HttpSession,javax.servlet.ServletContext)>(null, context)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.servlet.ServletRequestAndContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.servlet.ServletRequestAndContext: javax.servlet.ServletRequest request> = request""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.Pointer.getValue(),Abstract Method,"* Returns the value of the object, property or collection element\n     * this pointer represents. May convert the value to one of the\n     * canonical InfoSet types: String, Number, Boolean, Set.\n     *\n     * For example, in the case of an XML element, getValue() will\n     * return the text contained by the element rather than\n     * the element itself.\n     * @return Object value",Object getValue();,java.lang.Object getValue(),digraph cfg_getValue {\n}\n,default
org.apache.commons.jxpath.Pointer.getNode(),Abstract Method,"* Returns the raw value of the object, property or collection element\n     * this pointer represents.  Never converts the object to a\n     * canonical type: returns it as is.\n     *\n     * For example, for an XML element, getNode() will\n     * return the element itself rather than the text it contains.\n     * @return Object node",Object getNode();,java.lang.Object getNode(),digraph cfg_getNode {\n}\n,default
org.apache.commons.jxpath.Pointer.setValue(Object),Abstract Method,"* Modifies the value of the object, property or collection element\n     * this pointer represents.\n     * @param value value to set",void setValue(Object value);,void setValue(java.lang.Object),digraph cfg_setValue {\n}\n,default
org.apache.commons.jxpath.Pointer.getRootNode(),Abstract Method,* Returns the node this pointer is based on.\n     * @return Object,Object getRootNode();,java.lang.Object getRootNode(),digraph cfg_getRootNode {\n}\n,default
org.apache.commons.jxpath.Pointer.asPath(),Abstract Method,"* Returns a string that is a proper ""canonical"" XPath that corresponds to\n     * this pointer.  Consider this example:\n     * <p>{@code Pointer  ptr = ctx.getPointer(""//employees[firstName = 'John']"")\n     * }\n     * <p>The  value of {@code ptr.asPath()} will look something like\n     * {@code ""/departments[2]/employees[3]""}, so, basically, it represents\n     * the concrete location(s) of the result of a search performed by JXPath.\n     * If an object in the pointer's path is a Dynamic Property object (like a\n     * Map), the asPath method generates an XPath that looks like this: {@code ""\n     * /departments[@name = 'HR']/employees[3]""}.\n     * @return String path",String asPath();,java.lang.String asPath(),digraph cfg_asPath {\n}\n,default
org.apache.commons.jxpath.Pointer.clone(),Abstract Method,* Pointers are cloneable.\n     * @return cloned Object,Object clone();,java.lang.Object clone(),digraph cfg_clone {\n}\n,default
org.apache.commons.jxpath.Functions.getUsedNamespaces(),Abstract Method,* Returns all namespaces in which this function collection defines\n     * functions.\n     * @return Set,Set getUsedNamespaces();,java.util.Set getUsedNamespaces(),digraph cfg_getUsedNamespaces {\n}\n,default
"org.apache.commons.jxpath.Functions.getFunction(String,String,Object[])",Abstract Method,"* Returns a Function, if any, for the specified namespace,\n     * name and parameter types.\n     * @param namespace ns\n     * @param name function name\n     * @param parameters Object[]\n     * @return Function","Function getFunction(String namespace, String name, Object[] parameters);","org.apache.commons.jxpath.Function getFunction(java.lang.String,java.lang.String,java.lang.Object[])",digraph cfg_getFunction {\n}\n,default
org.apache.commons.jxpath.ExpressionContext.getJXPathContext(),Abstract Method,* Gets the JXPathContext in which this function is being evaluated.\n     *\n     * @return A list representing the current context nodes.,JXPathContext getJXPathContext();,org.apache.commons.jxpath.JXPathContext getJXPathContext(),digraph cfg_getJXPathContext {\n}\n,default
org.apache.commons.jxpath.ExpressionContext.getContextNodePointer(),Abstract Method,* Gets the current context node.\n     *\n     * @return The current context node pointer.,Pointer getContextNodePointer();,org.apache.commons.jxpath.Pointer getContextNodePointer(),digraph cfg_getContextNodePointer {\n}\n,default
org.apache.commons.jxpath.ExpressionContext.getContextNodeList(),Abstract Method,* Gets the current context node list.  Each element of the list is\n     * a Pointer.\n     *\n     * @return A list representing the current context nodes.,List getContextNodeList();,java.util.List getContextNodeList(),digraph cfg_getContextNodeList {\n}\n,default
org.apache.commons.jxpath.ExpressionContext.getPosition(),Abstract Method,* Returns the current context position.\n     * @return int,int getPosition();,int getPosition(),digraph cfg_getPosition {\n}\n,default
"org.apache.commons.jxpath.ExceptionHandler.handle(Throwable,Pointer)",Abstract Method,* Handle an encountered Throwable.\n     * @param t to handle\n     * @param ptr specific context,"void handle(Throwable t, Pointer ptr);","void handle(java.lang.Throwable,org.apache.commons.jxpath.Pointer)",digraph cfg_handle {\n}\n,default
"org.apache.commons.jxpath.IdentityManager.getPointerByID(JXPathContext,String)",Abstract Method,* Finds a node by its ID.\n     * @param context JXPathContext\n     * @param id String\n     * @return Pointer,"Pointer getPointerByID(JXPathContext context, String id);","org.apache.commons.jxpath.Pointer getPointerByID(org.apache.commons.jxpath.JXPathContext,java.lang.String)",digraph cfg_getPointerByID {\n}\n,default
org.apache.commons.jxpath.JXPathBasicBeanInfo.isAtomic(),Method,* Returns true if objects of this class are treated as atomic\n     * objects which have no properties of their own.\n     * @return boolean,@Override\npublic boolean isAtomic() {\n    return atomic;\n},boolean isAtomic(),"digraph cfg_isAtomic {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean atomic>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathBasicBeanInfo.isDynamic(),Method,* Return true if the corresponding objects have dynamic properties.\n     * @return boolean,@Override\npublic boolean isDynamic() {\n    return dynamicPropertyHandlerClass != null;\n},boolean isDynamic(),"digraph cfg_isDynamic {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class dynamicPropertyHandlerClass>""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathBasicBeanInfo.getPropertyDescriptors(),Method,No Comment,"@Override\npublic synchronized PropertyDescriptor[] getPropertyDescriptors() {\n    if (propertyDescriptors == null) {\n        if (clazz == Object.class) {\n            propertyDescriptors = new PropertyDescriptor[0];\n        } else {\n            try {\n                BeanInfo bi;\n                if (clazz.isInterface()) {\n                    bi = Introspector.getBeanInfo(clazz);\n                } else {\n                    bi = Introspector.getBeanInfo(clazz, Object.class);\n                }\n                final PropertyDescriptor[] pds = bi.getPropertyDescriptors();\n                final PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];\n                System.arraycopy(pds, 0, descriptors, 0, pds.length);\n                Arrays.sort(descriptors, PROPERTY_DESCRIPTOR_COMPARATOR);\n                propertyDescriptors = descriptors;\n            } catch (final IntrospectionException ex) {\n                ex.printStackTrace();\n                return new PropertyDescriptor[0];\n            }\n        }\n    }\n    if (propertyDescriptors.length == 0) {\n        return propertyDescriptors;\n    }\n    final PropertyDescriptor[] result = new PropertyDescriptor[propertyDescriptors.length];\n    System.arraycopy(propertyDescriptors, 0, result, 0, propertyDescriptors.length);\n    return result;\n}",java.beans.PropertyDescriptor[] getPropertyDescriptors(),"digraph cfg_getPropertyDescriptors {\n	""1"" [label=""$stack10 = lengthof $stack9""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.Class: boolean isInterface()>()""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz>""];\n	""8"" [label=""$stack17 = lengthof pds""];\n	""9"" [label=""$stack18 = lengthof pds""];\n	""10"" [label=""$stack19 = <org.apache.commons.jxpath.JXPathBasicBeanInfo: java.util.Comparator PROPERTY_DESCRIPTOR_COMPARATOR>""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz>""];\n	""12"" [label=""$stack21 = newarray (java.beans.PropertyDescriptor)[0]""];\n	""13"" [label=""$stack22 := @caughtexception""];\n	""14"" [label=""$stack23 = newarray (java.beans.PropertyDescriptor)[0]""];\n	""15"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""16"" [label=""$stack5 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""17"" [label=""$stack6 = lengthof $stack5""];\n	""18"" [label=""$stack7 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""19"" [label=""$stack8 = lengthof $stack7""];\n	""20"" [label=""$stack9 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""21"" [label=""bi = $stack22""];\n	""22"" [label=""bi = newarray (java.beans.PropertyDescriptor)[$stack8]""];\n	""23"" [label=""bi = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>($stack20)""];\n	""24"" [label=""bi = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class,java.lang.Class)>($stack16, class \""Ljava/lang/Object;\"")""];\n	""25"" [label=""descriptors = newarray (java.beans.PropertyDescriptor)[$stack17]""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""if $stack13 != class \""Ljava/lang/Object;\""""];\n	""30"" [label=""if $stack15 == 0""];\n	""31"" [label=""if $stack4 != null""];\n	""32"" [label=""if $stack6 != 0""];\n	""33"" [label=""pds = interfaceinvoke bi.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>()""];\n	""34"" [label=""return $stack12""];\n	""35"" [label=""return $stack23""];\n	""36"" [label=""return bi""];\n	""37"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack11, 0, bi, 0, $stack10)""];\n	""38"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(pds, 0, descriptors, 0, $stack18)""];\n	""39"" [label=""staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(descriptors, $stack19)""];\n	""40"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""41"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors> = $stack21""];\n	""42"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] propertyDescriptors> = descriptors""];\n	""43"" [label=""virtualinvoke bi.<java.beans.IntrospectionException: void printStackTrace()>()""];\n	""1"" -> ""37""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_except""];\n	""10"" -> ""39""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_except""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""35""[label=""cfg_next""];\n	""15"" -> ""31""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""32""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""43""[label=""cfg_next""];\n	""22"" -> ""2""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_except""];\n	""23"" -> ""27""[label=""cfg_next""];\n	""24"" -> ""13""[label=""cfg_except""];\n	""24"" -> ""33""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_except""];\n	""25"" -> ""9""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_goto""];\n	""27"" -> ""13""[label=""cfg_except""];\n	""27"" -> ""33""[label=""cfg_goto""];\n	""28"" -> ""16""[label=""cfg_goto""];\n	""29"" -> ""12""[label=""cfg_false""];\n	""29"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""34""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_false""];\n	""30"" -> ""13""[label=""cfg_except""];\n	""30"" -> ""7""[label=""cfg_true""];\n	""31"" -> ""16""[label=""cfg_true""];\n	""31"" -> ""4""[label=""cfg_false""];\n	""32"" -> ""18""[label=""cfg_true""];\n	""32"" -> ""3""[label=""cfg_false""];\n	""33"" -> ""13""[label=""cfg_except""];\n	""33"" -> ""8""[label=""cfg_next""];\n	""37"" -> ""36""[label=""cfg_next""];\n	""38"" -> ""10""[label=""cfg_next""];\n	""38"" -> ""13""[label=""cfg_except""];\n	""39"" -> ""13""[label=""cfg_except""];\n	""39"" -> ""42""[label=""cfg_next""];\n	""4"" -> ""29""[label=""cfg_next""];\n	""40"" -> ""15""[label=""cfg_next""];\n	""41"" -> ""26""[label=""cfg_next""];\n	""42"" -> ""13""[label=""cfg_except""];\n	""42"" -> ""28""[label=""cfg_next""];\n	""43"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_except""];\n	""6"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_except""];\n	""7"" -> ""24""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_except""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_except""];\n	""9"" -> ""38""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.JXPathBasicBeanInfo.getPropertyDescriptor(String),Method,No Comment,"@Override\npublic synchronized PropertyDescriptor getPropertyDescriptor(final String propertyName) {\n    if (propertyDescriptorMap == null) {\n        propertyDescriptorMap = new HashMap();\n        final PropertyDescriptor[] pds = getPropertyDescriptors();\n        for (final PropertyDescriptor pd : pds) {\n            propertyDescriptorMap.put(pd.getName(), pd);\n        }\n    }\n    return (PropertyDescriptor) propertyDescriptorMap.get(propertyName);\n}",java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String),"digraph cfg_getPropertyDescriptor {\n	""1"" [label=""$stack10 = (java.beans.PropertyDescriptor) $stack9""];\n	""2"" [label=""$stack11 = new java.util.HashMap""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.util.HashMap propertyDescriptorMap>""];\n	""4"" [label=""$stack13 = virtualinvoke pd.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.util.HashMap propertyDescriptorMap>""];\n	""6"" [label=""$stack8 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.util.HashMap propertyDescriptorMap>""];\n	""7"" [label=""$stack9 = virtualinvoke $stack8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(propertyName)""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack7 != null""];\n	""10"" [label=""if l5 >= l4""];\n	""11"" [label=""l3 = pds""];\n	""12"" [label=""l4 = lengthof l3""];\n	""13"" [label=""l5 = 0""];\n	""14"" [label=""l5 = l5 + 1""];\n	""15"" [label=""pd = l3[l5]""];\n	""16"" [label=""pds = virtualinvoke this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>()""];\n	""17"" [label=""propertyName := @parameter0: java.lang.String""];\n	""18"" [label=""return $stack10""];\n	""19"" [label=""specialinvoke $stack11.<java.util.HashMap: void <init>()>()""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""21"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.util.HashMap propertyDescriptorMap> = $stack11""];\n	""22"" [label=""virtualinvoke $stack12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack13, pd)""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_next""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_goto""];\n	""9"" -> ""2""[label=""cfg_false""];\n	""9"" -> ""6""[label=""cfg_true""];\n}\n","public , synchronized "
org.apache.commons.jxpath.JXPathBasicBeanInfo.getDynamicPropertyHandlerClass(),Method,"* For a dynamic class, returns the corresponding DynamicPropertyHandler\n     * class.\n     * @return Class",@Override\npublic Class getDynamicPropertyHandlerClass() {\n    return dynamicPropertyHandlerClass;\n},java.lang.Class getDynamicPropertyHandlerClass(),"digraph cfg_getDynamicPropertyHandlerClass {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class dynamicPropertyHandlerClass>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathBasicBeanInfo.toString(),Method,No Comment,"@Override\npublic String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(""BeanInfo [class = "");\n    buffer.append(clazz.getName());\n    if (isDynamic()) {\n        buffer.append("", dynamic"");\n    }\n    if (isAtomic()) {\n        buffer.append("", atomic"");\n    }\n    buffer.append("", properties = "");\n    final PropertyDescriptor[] jpds = getPropertyDescriptors();\n    for (final PropertyDescriptor jpd : jpds) {\n        buffer.append(""\n    "");\n        buffer.append(jpd.getPropertyType());\n        buffer.append("": "");\n        buffer.append(jpd.getName());\n    }\n    buffer.append(""]"");\n    return buffer.toString();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean isDynamic()>()""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean isAtomic()>()""];\n	""3"" [label=""$stack12 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = virtualinvoke jpd.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>()""];\n	""5"" [label=""$stack14 = virtualinvoke jpd.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""6"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack8 = this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz>""];\n	""8"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.Class: java.lang.String getName()>()""];\n	""9"" [label=""buffer = $stack7""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack10 == 0""];\n	""12"" [label=""if $stack11 == 0""];\n	""13"" [label=""if l5 >= l4""];\n	""14"" [label=""jpd = l3[l5]""];\n	""15"" [label=""jpds = virtualinvoke this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>()""];\n	""16"" [label=""l3 = jpds""];\n	""17"" [label=""l4 = lengthof l3""];\n	""18"" [label=""l5 = 0""];\n	""19"" [label=""l5 = l5 + 1""];\n	""20"" [label=""return $stack12""];\n	""21"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""23"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack13)""];\n	""24"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", atomic\"")""];\n	""25"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", dynamic\"")""];\n	""26"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", properties = \"")""];\n	""27"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"": \"")""];\n	""28"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""BeanInfo [class = \"")""];\n	""29"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\n    \"")""];\n	""30"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""]\"")""];\n	""31"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)""];\n	""32"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_goto""];\n	""11"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""25""[label=""cfg_false""];\n	""12"" -> ""24""[label=""cfg_false""];\n	""12"" -> ""26""[label=""cfg_true""];\n	""13"" -> ""14""[label=""cfg_false""];\n	""13"" -> ""30""[label=""cfg_true""];\n	""14"" -> ""29""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""22"" -> ""6""[label=""cfg_next""];\n	""23"" -> ""27""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""2""[label=""cfg_next""];\n	""26"" -> ""15""[label=""cfg_next""];\n	""27"" -> ""5""[label=""cfg_next""];\n	""28"" -> ""7""[label=""cfg_next""];\n	""29"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""30"" -> ""3""[label=""cfg_next""];\n	""31"" -> ""19""[label=""cfg_next""];\n	""32"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""31""[label=""cfg_next""];\n	""6"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""32""[label=""cfg_next""];\n	""9"" -> ""28""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathBasicBeanInfo.<init>(Class),Constructor,* Create a new JXPathBasicBeanInfo.\n     * @param clazz bean class,public JXPathBasicBeanInfo(final Class clazz) {\n    this.clazz = clazz;\n},void <init>(java.lang.Class),"digraph cfg_init {\n	""1"" [label=""clazz := @parameter0: java.lang.Class""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""5"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean atomic> = 0""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz> = clazz""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathBasicBeanInfo.<init>(Class,boolean)",Constructor,* Create a new JXPathBasicBeanInfo.\n     * @param clazz bean class\n     * @param atomic whether objects of this class are treated as atomic\n     *               objects which have no properties of their own.,"public JXPathBasicBeanInfo(final Class clazz, final boolean atomic) {\n    this.clazz = clazz;\n    this.atomic = atomic;\n}","void <init>(java.lang.Class,boolean)","digraph cfg_init {\n	""1"" [label=""atomic := @parameter1: boolean""];\n	""2"" [label=""clazz := @parameter0: java.lang.Class""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean atomic> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean atomic> = atomic""];\n	""8"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz> = clazz""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathBasicBeanInfo.<init>(Class,Class)",Constructor,* Create a new JXPathBasicBeanInfo.\n     * @param clazz bean class\n     * @param dynamicPropertyHandlerClass dynamic property handler class,"public JXPathBasicBeanInfo(final Class clazz, final Class dynamicPropertyHandlerClass) {\n    this.clazz = clazz;\n    this.atomic = false;\n    this.dynamicPropertyHandlerClass = dynamicPropertyHandlerClass;\n}","void <init>(java.lang.Class,java.lang.Class)","digraph cfg_init {\n	""1"" [label=""clazz := @parameter0: java.lang.Class""];\n	""2"" [label=""dynamicPropertyHandlerClass := @parameter1: java.lang.Class""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean atomic> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: boolean atomic> = 0""];\n	""8"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class clazz> = clazz""];\n	""9"" [label=""this.<org.apache.commons.jxpath.JXPathBasicBeanInfo: java.lang.Class dynamicPropertyHandlerClass> = dynamicPropertyHandlerClass""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.Variables.isDeclaredVariable(String),Abstract Method,* Returns true if the specified variable is declared.\n     * @param varName variable name\n     * @return boolean,boolean isDeclaredVariable(String varName);,boolean isDeclaredVariable(java.lang.String),digraph cfg_isDeclaredVariable {\n}\n,default
org.apache.commons.jxpath.Variables.getVariable(String),Abstract Method,* Returns the value of the specified variable.\n     * @param varName variable name\n     * @return Object value\n     * @throws IllegalArgumentException if there is no such variable.,Object getVariable(String varName);,java.lang.Object getVariable(java.lang.String),digraph cfg_getVariable {\n}\n,default
"org.apache.commons.jxpath.Variables.declareVariable(String,Object)",Abstract Method,* Defines a new variable with the specified value or modifies\n     * the value of an existing variable.\n     * May throw UnsupportedOperationException.\n     * @param varName variable name\n     * @param value to declare,"void declareVariable(String varName, Object value);","void declareVariable(java.lang.String,java.lang.Object)",digraph cfg_declareVariable {\n}\n,default
org.apache.commons.jxpath.Variables.undeclareVariable(String),Abstract Method,"* Removes an existing variable. May throw UnsupportedOperationException.\n     *\n     * @param varName is a variable name without the ""$"" sign",void undeclareVariable(String varName);,void undeclareVariable(java.lang.String),digraph cfg_undeclareVariable {\n}\n,default
"org.apache.commons.jxpath.util.BasicTypeConverter.canConvert(Object,Class)",Method,* Returns true if it can convert the supplied\n     * object to the specified class.\n     * @param object to check\n     * @param toType prospective destination class\n     * @return boolean,"@Override\npublic boolean canConvert(final Object object, final Class toType) {\n    if (object == null) {\n        return true;\n    }\n    final Class useType = TypeUtils.wrapPrimitive(toType);\n    final Class fromType = object.getClass();\n    if (useType.isAssignableFrom(fromType)) {\n        return true;\n    }\n    if (useType == String.class) {\n        return true;\n    }\n    if (object instanceof Boolean && (Number.class.isAssignableFrom(useType) || ""java.util.concurrent.atomic.AtomicBoolean"".equals(useType.getName()))) {\n        return true;\n    }\n    if (object instanceof Number && (Number.class.isAssignableFrom(useType) || useType == Boolean.class)) {\n        return true;\n    }\n    if (object instanceof String && (useType == Boolean.class || useType == Character.class || useType == Byte.class || useType == Short.class || useType == Integer.class || useType == Long.class || useType == Float.class || useType == Double.class)) {\n        return true;\n    }\n    if (fromType.isArray()) {\n        // Collection -> array\n        if (useType.isArray()) {\n            final Class cType = useType.getComponentType();\n            final int length = Array.getLength(object);\n            for (int i = 0; i < length; i++) {\n                final Object value = Array.get(object, i);\n                if (!canConvert(value, cType)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (Collection.class.isAssignableFrom(useType)) {\n            return canCreateCollection(useType);\n        }\n        if (Array.getLength(object) > 0) {\n            final Object value = Array.get(object, 0);\n            return canConvert(value, useType);\n        }\n        return canConvert("""", useType);\n    }\n    if (object instanceof Collection) {\n        // Collection -> array\n        if (useType.isArray()) {\n            final Class cType = useType.getComponentType();\n            final Iterator it = ((Collection) object).iterator();\n            while (it.hasNext()) {\n                final Object value = it.next();\n                if (!canConvert(value, cType)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (Collection.class.isAssignableFrom(useType)) {\n            return canCreateCollection(useType);\n        }\n        if (((Collection) object).size() > 0) {\n            Object value;\n            if (object instanceof List) {\n                value = ((List) object).get(0);\n            } else {\n                final Iterator it = ((Collection) object).iterator();\n                value = it.next();\n            }\n            return canConvert(value, useType);\n        }\n        return canConvert("""", useType);\n    }\n    if (object instanceof NodeSet) {\n        return canConvert(((NodeSet) object).getValues(), useType);\n    }\n    if (object instanceof Pointer) {\n        return canConvert(((Pointer) object).getValue(), useType);\n    }\n    return ConvertUtils.lookup(useType) != null;\n}","boolean canConvert(java.lang.Object,java.lang.Class)","digraph cfg_canConvert {\n	""1"" [label=""$stack10 = object instanceof java.lang.Boolean""];\n	""2"" [label=""$stack11 = object instanceof java.lang.Number""];\n	""3"" [label=""$stack12 = object instanceof java.lang.String""];\n	""4"" [label=""$stack13 = virtualinvoke fromType.<java.lang.Class: boolean isArray()>()""];\n	""5"" [label=""$stack14 = object instanceof java.util.Collection""];\n	""6"" [label=""$stack15 = object instanceof org.apache.commons.jxpath.NodeSet""];\n	""7"" [label=""$stack16 = object instanceof org.apache.commons.jxpath.Pointer""];\n	""8"" [label=""$stack17 = staticinvoke <org.apache.commons.beanutils.ConvertUtils: org.apache.commons.beanutils.Converter lookup(java.lang.Class)>(useType)""];\n	""9"" [label=""$stack18 = 0""];\n	""10"" [label=""$stack18 = 1""];\n	""11"" [label=""$stack19 = (org.apache.commons.jxpath.Pointer) object""];\n	""12"" [label=""$stack20 = interfaceinvoke $stack19.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""13"" [label=""$stack21 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>($stack20, useType)""];\n	""14"" [label=""$stack22 = (org.apache.commons.jxpath.NodeSet) object""];\n	""15"" [label=""$stack23 = interfaceinvoke $stack22.<org.apache.commons.jxpath.NodeSet: java.util.List getValues()>()""];\n	""16"" [label=""$stack24 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>($stack23, useType)""];\n	""17"" [label=""$stack25 = virtualinvoke useType.<java.lang.Class: boolean isArray()>()""];\n	""18"" [label=""$stack26 = class \""Ljava/util/Collection;\""""];\n	""19"" [label=""$stack27 = virtualinvoke $stack26.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""20"" [label=""$stack28 = (java.util.Collection) object""];\n	""21"" [label=""$stack29 = interfaceinvoke $stack28.<java.util.Collection: int size()>()""];\n	""22"" [label=""$stack30 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(\""\"", useType)""];\n	""23"" [label=""$stack31 = object instanceof java.util.List""];\n	""24"" [label=""$stack32 = (java.util.Collection) object""];\n	""25"" [label=""$stack33 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(cType, useType)""];\n	""26"" [label=""$stack34 = (java.util.List) object""];\n	""27"" [label=""$stack35 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canCreateCollection(java.lang.Class)>(useType)""];\n	""28"" [label=""$stack36 = (java.util.Collection) object""];\n	""29"" [label=""$stack37 = interfaceinvoke length.<java.util.Iterator: boolean hasNext()>()""];\n	""30"" [label=""$stack38 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(i, cType)""];\n	""31"" [label=""$stack39 = virtualinvoke useType.<java.lang.Class: boolean isArray()>()""];\n	""32"" [label=""$stack40 = class \""Ljava/util/Collection;\""""];\n	""33"" [label=""$stack41 = virtualinvoke $stack40.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""34"" [label=""$stack42 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(object)""];\n	""35"" [label=""$stack43 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(\""\"", useType)""];\n	""36"" [label=""$stack44 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(cType, useType)""];\n	""37"" [label=""$stack45 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canCreateCollection(java.lang.Class)>(useType)""];\n	""38"" [label=""$stack46 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(value, cType)""];\n	""39"" [label=""$stack47 = class \""Ljava/lang/Number;\""""];\n	""40"" [label=""$stack48 = virtualinvoke $stack47.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""41"" [label=""$stack49 = class \""Ljava/lang/Number;\""""];\n	""42"" [label=""$stack50 = virtualinvoke $stack49.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""43"" [label=""$stack51 = virtualinvoke useType.<java.lang.Class: java.lang.String getName()>()""];\n	""44"" [label=""$stack52 = \""java.util.concurrent.atomic.AtomicBoolean\""""];\n	""45"" [label=""$stack53 = virtualinvoke $stack52.<java.lang.String: boolean equals(java.lang.Object)>($stack51)""];\n	""46"" [label=""$stack9 = virtualinvoke useType.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(fromType)""];\n	""47"" [label=""cType = interfaceinvoke $stack34.<java.util.List: java.lang.Object get(int)>(0)""];\n	""48"" [label=""cType = interfaceinvoke length.<java.util.Iterator: java.lang.Object next()>()""];\n	""49"" [label=""cType = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(object, 0)""];\n	""50"" [label=""cType = virtualinvoke useType.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""51"" [label=""cType = virtualinvoke useType.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""52"" [label=""fromType = virtualinvoke object.<java.lang.Object: java.lang.Class getClass()>()""];\n	""53"" [label=""goto""];\n	""54"" [label=""goto""];\n	""55"" [label=""goto""];\n	""56"" [label=""goto""];\n	""57"" [label=""i = 0""];\n	""58"" [label=""i = i + 1""];\n	""59"" [label=""i = interfaceinvoke length.<java.util.Iterator: java.lang.Object next()>()""];\n	""60"" [label=""if $stack10 == 0""];\n	""61"" [label=""if $stack11 == 0""];\n	""62"" [label=""if $stack12 == 0""];\n	""63"" [label=""if $stack13 == 0""];\n	""64"" [label=""if $stack14 == 0""];\n	""65"" [label=""if $stack15 == 0""];\n	""66"" [label=""if $stack16 == 0""];\n	""67"" [label=""if $stack17 == null""];\n	""68"" [label=""if $stack25 == 0""];\n	""69"" [label=""if $stack27 == 0""];\n	""70"" [label=""if $stack29 <= 0""];\n	""71"" [label=""if $stack31 == 0""];\n	""72"" [label=""if $stack37 == 0""];\n	""73"" [label=""if $stack38 != 0""];\n	""74"" [label=""if $stack39 == 0""];\n	""75"" [label=""if $stack41 == 0""];\n	""76"" [label=""if $stack42 <= 0""];\n	""77"" [label=""if $stack46 != 0""];\n	""78"" [label=""if $stack48 != 0""];\n	""79"" [label=""if $stack50 != 0""];\n	""80"" [label=""if $stack53 == 0""];\n	""81"" [label=""if $stack9 == 0""];\n	""82"" [label=""if i >= length""];\n	""83"" [label=""if object != null""];\n	""84"" [label=""if useType != class \""Ljava/lang/Boolean;\""""];\n	""85"" [label=""if useType != class \""Ljava/lang/Double;\""""];\n	""86"" [label=""if useType != class \""Ljava/lang/String;\""""];\n	""87"" [label=""if useType == class \""Ljava/lang/Boolean;\""""];\n	""88"" [label=""if useType == class \""Ljava/lang/Byte;\""""];\n	""89"" [label=""if useType == class \""Ljava/lang/Character;\""""];\n	""90"" [label=""if useType == class \""Ljava/lang/Float;\""""];\n	""91"" [label=""if useType == class \""Ljava/lang/Integer;\""""];\n	""92"" [label=""if useType == class \""Ljava/lang/Long;\""""];\n	""93"" [label=""if useType == class \""Ljava/lang/Short;\""""];\n	""94"" [label=""length = interfaceinvoke $stack32.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""95"" [label=""length = interfaceinvoke $stack36.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""96"" [label=""length = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(object)""];\n	""97"" [label=""object := @parameter0: java.lang.Object""];\n	""98"" [label=""return $stack18""];\n	""99"" [label=""return $stack21""];\n	""100"" [label=""return $stack24""];\n	""101"" [label=""return $stack30""];\n	""102"" [label=""return $stack33""];\n	""103"" [label=""return $stack35""];\n	""104"" [label=""return $stack43""];\n	""105"" [label=""return $stack44""];\n	""106"" [label=""return $stack45""];\n	""107"" [label=""return 0""];\n	""108"" [label=""return 0""];\n	""109"" [label=""return 1""];\n	""110"" [label=""return 1""];\n	""111"" [label=""return 1""];\n	""112"" [label=""return 1""];\n	""113"" [label=""return 1""];\n	""114"" [label=""return 1""];\n	""115"" [label=""return 1""];\n	""116"" [label=""return 1""];\n	""117"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""118"" [label=""toType := @parameter1: java.lang.Class""];\n	""119"" [label=""useType = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Class wrapPrimitive(java.lang.Class)>(toType)""];\n	""120"" [label=""value = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(object, i)""];\n	""1"" -> ""60""[label=""cfg_next""];\n	""10"" -> ""56""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""117"" -> ""97""[label=""cfg_next""];\n	""118"" -> ""83""[label=""cfg_next""];\n	""119"" -> ""52""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""120"" -> ""38""[label=""cfg_next""];\n	""13"" -> ""99""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""100""[label=""cfg_next""];\n	""17"" -> ""68""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""69""[label=""cfg_next""];\n	""2"" -> ""61""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""70""[label=""cfg_next""];\n	""22"" -> ""101""[label=""cfg_next""];\n	""23"" -> ""71""[label=""cfg_next""];\n	""24"" -> ""94""[label=""cfg_next""];\n	""25"" -> ""102""[label=""cfg_next""];\n	""26"" -> ""47""[label=""cfg_next""];\n	""27"" -> ""103""[label=""cfg_next""];\n	""28"" -> ""95""[label=""cfg_next""];\n	""29"" -> ""72""[label=""cfg_next""];\n	""3"" -> ""62""[label=""cfg_next""];\n	""30"" -> ""73""[label=""cfg_next""];\n	""31"" -> ""74""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""75""[label=""cfg_next""];\n	""34"" -> ""76""[label=""cfg_next""];\n	""35"" -> ""104""[label=""cfg_next""];\n	""36"" -> ""105""[label=""cfg_next""];\n	""37"" -> ""106""[label=""cfg_next""];\n	""38"" -> ""77""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""63""[label=""cfg_next""];\n	""40"" -> ""78""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""79""[label=""cfg_next""];\n	""43"" -> ""45""[label=""cfg_next""];\n	""44"" -> ""43""[label=""cfg_next""];\n	""45"" -> ""80""[label=""cfg_next""];\n	""46"" -> ""81""[label=""cfg_next""];\n	""47"" -> ""55""[label=""cfg_next""];\n	""48"" -> ""25""[label=""cfg_next""];\n	""49"" -> ""36""[label=""cfg_next""];\n	""5"" -> ""64""[label=""cfg_next""];\n	""50"" -> ""96""[label=""cfg_next""];\n	""51"" -> ""28""[label=""cfg_next""];\n	""52"" -> ""46""[label=""cfg_next""];\n	""53"" -> ""82""[label=""cfg_goto""];\n	""54"" -> ""29""[label=""cfg_goto""];\n	""55"" -> ""25""[label=""cfg_goto""];\n	""56"" -> ""98""[label=""cfg_goto""];\n	""57"" -> ""82""[label=""cfg_next""];\n	""58"" -> ""53""[label=""cfg_next""];\n	""59"" -> ""30""[label=""cfg_next""];\n	""6"" -> ""65""[label=""cfg_next""];\n	""60"" -> ""2""[label=""cfg_true""];\n	""60"" -> ""41""[label=""cfg_false""];\n	""61"" -> ""3""[label=""cfg_true""];\n	""61"" -> ""39""[label=""cfg_false""];\n	""62"" -> ""4""[label=""cfg_true""];\n	""62"" -> ""87""[label=""cfg_false""];\n	""63"" -> ""31""[label=""cfg_false""];\n	""63"" -> ""5""[label=""cfg_true""];\n	""64"" -> ""17""[label=""cfg_false""];\n	""64"" -> ""6""[label=""cfg_true""];\n	""65"" -> ""14""[label=""cfg_false""];\n	""65"" -> ""7""[label=""cfg_true""];\n	""66"" -> ""11""[label=""cfg_false""];\n	""66"" -> ""8""[label=""cfg_true""];\n	""67"" -> ""10""[label=""cfg_false""];\n	""67"" -> ""9""[label=""cfg_true""];\n	""68"" -> ""18""[label=""cfg_true""];\n	""68"" -> ""51""[label=""cfg_false""];\n	""69"" -> ""20""[label=""cfg_true""];\n	""69"" -> ""27""[label=""cfg_false""];\n	""7"" -> ""66""[label=""cfg_next""];\n	""70"" -> ""22""[label=""cfg_true""];\n	""70"" -> ""23""[label=""cfg_false""];\n	""71"" -> ""24""[label=""cfg_true""];\n	""71"" -> ""26""[label=""cfg_false""];\n	""72"" -> ""116""[label=""cfg_true""];\n	""72"" -> ""59""[label=""cfg_false""];\n	""73"" -> ""108""[label=""cfg_false""];\n	""73"" -> ""54""[label=""cfg_true""];\n	""74"" -> ""32""[label=""cfg_true""];\n	""74"" -> ""50""[label=""cfg_false""];\n	""75"" -> ""34""[label=""cfg_true""];\n	""75"" -> ""37""[label=""cfg_false""];\n	""76"" -> ""35""[label=""cfg_true""];\n	""76"" -> ""49""[label=""cfg_false""];\n	""77"" -> ""107""[label=""cfg_false""];\n	""77"" -> ""58""[label=""cfg_true""];\n	""78"" -> ""113""[label=""cfg_true""];\n	""78"" -> ""84""[label=""cfg_false""];\n	""79"" -> ""112""[label=""cfg_true""];\n	""79"" -> ""44""[label=""cfg_false""];\n	""8"" -> ""67""[label=""cfg_next""];\n	""80"" -> ""112""[label=""cfg_false""];\n	""80"" -> ""2""[label=""cfg_true""];\n	""81"" -> ""110""[label=""cfg_false""];\n	""81"" -> ""86""[label=""cfg_true""];\n	""82"" -> ""115""[label=""cfg_true""];\n	""82"" -> ""120""[label=""cfg_false""];\n	""83"" -> ""109""[label=""cfg_false""];\n	""83"" -> ""119""[label=""cfg_true""];\n	""84"" -> ""113""[label=""cfg_false""];\n	""84"" -> ""3""[label=""cfg_true""];\n	""85"" -> ""114""[label=""cfg_false""];\n	""85"" -> ""4""[label=""cfg_true""];\n	""86"" -> ""1""[label=""cfg_true""];\n	""86"" -> ""111""[label=""cfg_false""];\n	""87"" -> ""114""[label=""cfg_true""];\n	""87"" -> ""89""[label=""cfg_false""];\n	""88"" -> ""114""[label=""cfg_true""];\n	""88"" -> ""93""[label=""cfg_false""];\n	""89"" -> ""114""[label=""cfg_true""];\n	""89"" -> ""88""[label=""cfg_false""];\n	""9"" -> ""98""[label=""cfg_next""];\n	""90"" -> ""114""[label=""cfg_true""];\n	""90"" -> ""85""[label=""cfg_false""];\n	""91"" -> ""114""[label=""cfg_true""];\n	""91"" -> ""92""[label=""cfg_false""];\n	""92"" -> ""114""[label=""cfg_true""];\n	""92"" -> ""90""[label=""cfg_false""];\n	""93"" -> ""114""[label=""cfg_true""];\n	""93"" -> ""91""[label=""cfg_false""];\n	""94"" -> ""48""[label=""cfg_next""];\n	""95"" -> ""29""[label=""cfg_next""];\n	""96"" -> ""57""[label=""cfg_next""];\n	""97"" -> ""118""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.util.BasicTypeConverter.convert(Object,Class)",Method,* Converts the supplied object to the specified\n     * type. Throws a runtime exception if the conversion is\n     * not possible.\n     * @param object to convert\n     * @param toType destination class\n     * @return converted object,"@Override\npublic Object convert(final Object object, final Class toType) {\n    if (object == null) {\n        return toType.isPrimitive() ? convertNullToPrimitive(toType) : null;\n    }\n    if (toType == Object.class) {\n        if (object instanceof NodeSet) {\n            return convert(((NodeSet) object).getValues(), toType);\n        }\n        if (object instanceof Pointer) {\n            return convert(((Pointer) object).getValue(), toType);\n        }\n        return object;\n    }\n    final Class useType = TypeUtils.wrapPrimitive(toType);\n    final Class fromType = object.getClass();\n    if (useType.isAssignableFrom(fromType)) {\n        return object;\n    }\n    if (fromType.isArray()) {\n        final int length = Array.getLength(object);\n        if (useType.isArray()) {\n            final Class cType = useType.getComponentType();\n            final Object array = Array.newInstance(cType, length);\n            for (int i = 0; i < length; i++) {\n                final Object value = Array.get(object, i);\n                Array.set(array, i, convert(value, cType));\n            }\n            return array;\n        }\n        if (Collection.class.isAssignableFrom(useType)) {\n            final Collection collection = allocateCollection(useType);\n            for (int i = 0; i < length; i++) {\n                collection.add(Array.get(object, i));\n            }\n            return unmodifiableCollection(collection);\n        }\n        if (length > 0) {\n            final Object value = Array.get(object, 0);\n            return convert(value, useType);\n        }\n        return convert("""", useType);\n    }\n    if (object instanceof Collection) {\n        final int length = ((Collection) object).size();\n        if (useType.isArray()) {\n            final Class cType = useType.getComponentType();\n            final Object array = Array.newInstance(cType, length);\n            final Iterator it = ((Collection) object).iterator();\n            for (int i = 0; i < length; i++) {\n                final Object value = it.next();\n                Array.set(array, i, convert(value, cType));\n            }\n            return array;\n        }\n        if (Collection.class.isAssignableFrom(useType)) {\n            final Collection collection = allocateCollection(useType);\n            collection.addAll((Collection) object);\n            return unmodifiableCollection(collection);\n        }\n        if (length > 0) {\n            Object value;\n            if (object instanceof List) {\n                value = ((List) object).get(0);\n            } else {\n                final Iterator it = ((Collection) object).iterator();\n                value = it.next();\n            }\n            return convert(value, useType);\n        }\n        return convert("""", useType);\n    }\n    if (object instanceof NodeSet) {\n        return convert(((NodeSet) object).getValues(), useType);\n    }\n    if (object instanceof Pointer) {\n        return convert(((Pointer) object).getValue(), useType);\n    }\n    if (useType == String.class) {\n        return object.toString();\n    }\n    if (object instanceof Boolean) {\n        if (Number.class.isAssignableFrom(useType)) {\n            return allocateNumber(useType, ((Boolean) object).booleanValue() ? 1 : 0);\n        }\n        if (""java.util.concurrent.atomic.AtomicBoolean"".equals(useType.getName())) {\n            try {\n                return useType.getConstructor(new Class[] { boolean.class }).newInstance(object);\n            } catch (final Exception e) {\n                throw new JXPathTypeConversionException(useType.getName(), e);\n            }\n        }\n    }\n    if (object instanceof Number) {\n        final double value = ((Number) object).doubleValue();\n        if (useType == Boolean.class) {\n            return value == 0.0 ? Boolean.FALSE : Boolean.TRUE;\n        }\n        if (Number.class.isAssignableFrom(useType)) {\n            return allocateNumber(useType, value);\n        }\n    }\n    if (object instanceof String) {\n        final Object value = convertStringToPrimitive(object, useType);\n        if (value != null) {\n            return value;\n        }\n    }\n    final Converter converter = ConvertUtils.lookup(useType);\n    if (converter != null) {\n        return converter.convert(useType, object);\n    }\n    throw new JXPathTypeConversionException(""Cannot convert "" + object.getClass() + "" to "" + useType);\n}","java.lang.Object convert(java.lang.Object,java.lang.Class)","digraph cfg_convert {\n	""1"" [label=""$stack11 = virtualinvoke useType.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(fromType)""];\n	""2"" [label=""$stack12 = virtualinvoke fromType.<java.lang.Class: boolean isArray()>()""];\n	""3"" [label=""$stack13 = object instanceof java.util.Collection""];\n	""4"" [label=""$stack14 = object instanceof org.apache.commons.jxpath.NodeSet""];\n	""5"" [label=""$stack15 = object instanceof org.apache.commons.jxpath.Pointer""];\n	""6"" [label=""$stack16 = object instanceof java.lang.Boolean""];\n	""7"" [label=""$stack17 = object instanceof java.lang.Number""];\n	""8"" [label=""$stack18 = object instanceof java.lang.String""];\n	""9"" [label=""$stack19 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack20 = virtualinvoke object.<java.lang.Object: java.lang.Class getClass()>()""];\n	""11"" [label=""$stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot convert \"")""];\n	""12"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20)""];\n	""13"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" to \"")""];\n	""14"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(useType)""];\n	""15"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""16"" [label=""$stack26 = new org.apache.commons.jxpath.JXPathTypeConversionException""];\n	""17"" [label=""$stack27 = interfaceinvoke length.<org.apache.commons.beanutils.Converter: java.lang.Object convert(java.lang.Class,java.lang.Object)>(useType, object)""];\n	""18"" [label=""$stack28 = (java.lang.Number) object""];\n	""19"" [label=""$stack29 = class \""Ljava/lang/Number;\""""];\n	""20"" [label=""$stack30 = virtualinvoke $stack29.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""21"" [label=""$stack31 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Number allocateNumber(java.lang.Class,double)>(useType, length)""];\n	""22"" [label=""$stack32 = length cmpl 0.0""];\n	""23"" [label=""$stack33 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""24"" [label=""$stack33 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""25"" [label=""$stack34 = class \""Ljava/lang/Number;\""""];\n	""26"" [label=""$stack35 = virtualinvoke $stack34.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""27"" [label=""$stack36 = virtualinvoke useType.<java.lang.Class: java.lang.String getName()>()""];\n	""28"" [label=""$stack37 = \""java.util.concurrent.atomic.AtomicBoolean\""""];\n	""29"" [label=""$stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>($stack36)""];\n	""30"" [label=""$stack39 = newarray (java.lang.Class)[1]""];\n	""31"" [label=""$stack39[0] = $stack40""];\n	""32"" [label=""$stack40 = <java.lang.Boolean: java.lang.Class TYPE>""];\n	""33"" [label=""$stack41 = newarray (java.lang.Object)[1]""];\n	""34"" [label=""$stack41[0] = object""];\n	""35"" [label=""$stack42 = virtualinvoke useType.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack39)""];\n	""36"" [label=""$stack43 = virtualinvoke $stack42.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack41)""];\n	""37"" [label=""$stack44 = (java.lang.Boolean) object""];\n	""38"" [label=""$stack45 = virtualinvoke $stack44.<java.lang.Boolean: boolean booleanValue()>()""];\n	""39"" [label=""$stack46 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Number allocateNumber(java.lang.Class,double)>(useType, $stack47)""];\n	""40"" [label=""$stack47 = 0.0""];\n	""41"" [label=""$stack47 = 1.0""];\n	""42"" [label=""$stack48 = virtualinvoke object.<java.lang.Object: java.lang.String toString()>()""];\n	""43"" [label=""$stack49 = (org.apache.commons.jxpath.Pointer) object""];\n	""44"" [label=""$stack50 = interfaceinvoke $stack49.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""45"" [label=""$stack51 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack50, useType)""];\n	""46"" [label=""$stack52 = (org.apache.commons.jxpath.NodeSet) object""];\n	""47"" [label=""$stack53 = interfaceinvoke $stack52.<org.apache.commons.jxpath.NodeSet: java.util.List getValues()>()""];\n	""48"" [label=""$stack54 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack53, useType)""];\n	""49"" [label=""$stack55 = (java.util.Collection) object""];\n	""50"" [label=""$stack56 = virtualinvoke useType.<java.lang.Class: boolean isArray()>()""];\n	""51"" [label=""$stack57 = class \""Ljava/util/Collection;\""""];\n	""52"" [label=""$stack58 = virtualinvoke $stack57.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""53"" [label=""$stack59 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(\""\"", useType)""];\n	""54"" [label=""$stack60 = object instanceof java.util.List""];\n	""55"" [label=""$stack61 = (java.util.Collection) object""];\n	""56"" [label=""$stack62 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(cType, useType)""];\n	""57"" [label=""$stack63 = (java.util.List) object""];\n	""58"" [label=""$stack64 = (java.util.Collection) object""];\n	""59"" [label=""$stack65 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.util.Collection unmodifiableCollection(java.util.Collection)>(cType)""];\n	""60"" [label=""$stack66 = (java.util.Collection) object""];\n	""61"" [label=""$stack67 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value_1, cType)""];\n	""62"" [label=""$stack68 = virtualinvoke useType.<java.lang.Class: boolean isArray()>()""];\n	""63"" [label=""$stack69 = class \""Ljava/util/Collection;\""""];\n	""64"" [label=""$stack70 = virtualinvoke $stack69.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(useType)""];\n	""65"" [label=""$stack71 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(\""\"", useType)""];\n	""66"" [label=""$stack72 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(cType, useType)""];\n	""67"" [label=""$stack73 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.util.Collection unmodifiableCollection(java.util.Collection)>(cType)""];\n	""68"" [label=""$stack74 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(object, array)""];\n	""69"" [label=""$stack75 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, cType)""];\n	""70"" [label=""$stack76 = object instanceof org.apache.commons.jxpath.NodeSet""];\n	""71"" [label=""$stack77 = object instanceof org.apache.commons.jxpath.Pointer""];\n	""72"" [label=""$stack78 = (org.apache.commons.jxpath.Pointer) object""];\n	""73"" [label=""$stack79 = interfaceinvoke $stack78.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""74"" [label=""$stack80 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack79, toType)""];\n	""75"" [label=""$stack81 = (org.apache.commons.jxpath.NodeSet) object""];\n	""76"" [label=""$stack82 = interfaceinvoke $stack81.<org.apache.commons.jxpath.NodeSet: java.util.List getValues()>()""];\n	""77"" [label=""$stack83 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack82, toType)""];\n	""78"" [label=""$stack84 = virtualinvoke toType.<java.lang.Class: boolean isPrimitive()>()""];\n	""79"" [label=""$stack85 = null""];\n	""80"" [label=""$stack85 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convertNullToPrimitive(java.lang.Class)>(toType)""];\n	""81"" [label=""$stack86 := @caughtexception""];\n	""82"" [label=""$stack87 = virtualinvoke useType.<java.lang.Class: java.lang.String getName()>()""];\n	""83"" [label=""$stack88 = new org.apache.commons.jxpath.JXPathTypeConversionException""];\n	""84"" [label=""array = 0""];\n	""85"" [label=""array = array + 1""];\n	""86"" [label=""array = interfaceinvoke $stack61.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""87"" [label=""array = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(cType, length)""];\n	""88"" [label=""array = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(cType, length)""];\n	""89"" [label=""cType = interfaceinvoke $stack63.<java.util.List: java.lang.Object get(int)>(0)""];\n	""90"" [label=""cType = interfaceinvoke array.<java.util.Iterator: java.lang.Object next()>()""];\n	""91"" [label=""cType = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(object, 0)""];\n	""92"" [label=""cType = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.util.Collection allocateCollection(java.lang.Class)>(useType)""];\n	""93"" [label=""cType = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.util.Collection allocateCollection(java.lang.Class)>(useType)""];\n	""94"" [label=""cType = virtualinvoke useType.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""95"" [label=""cType = virtualinvoke useType.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""96"" [label=""fromType = virtualinvoke object.<java.lang.Object: java.lang.Class getClass()>()""];\n	""97"" [label=""goto""];\n	""98"" [label=""goto""];\n	""99"" [label=""goto""];\n	""100"" [label=""goto""];\n	""101"" [label=""goto""];\n	""102"" [label=""goto""];\n	""103"" [label=""goto""];\n	""104"" [label=""i = 0""];\n	""105"" [label=""i = i + 1""];\n	""106"" [label=""i = interfaceinvoke $stack66.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""107"" [label=""if $stack11 == 0""];\n	""108"" [label=""if $stack12 == 0""];\n	""109"" [label=""if $stack13 == 0""];\n	""110"" [label=""if $stack14 == 0""];\n	""111"" [label=""if $stack15 == 0""];\n	""112"" [label=""if $stack16 == 0""];\n	""113"" [label=""if $stack17 == 0""];\n	""114"" [label=""if $stack18 == 0""];\n	""115"" [label=""if $stack30 == 0""];\n	""116"" [label=""if $stack32 != 0""];\n	""117"" [label=""if $stack35 == 0""];\n	""118"" [label=""if $stack38 == 0""];\n	""119"" [label=""if $stack45 == 0""];\n	""120"" [label=""if $stack56 == 0""];\n	""121"" [label=""if $stack58 == 0""];\n	""122"" [label=""if $stack60 == 0""];\n	""123"" [label=""if $stack68 == 0""];\n	""124"" [label=""if $stack70 == 0""];\n	""125"" [label=""if $stack76 == 0""];\n	""126"" [label=""if $stack77 == 0""];\n	""127"" [label=""if $stack84 == 0""];\n	""128"" [label=""if array >= length""];\n	""129"" [label=""if i >= length""];\n	""130"" [label=""if length <= 0""];\n	""131"" [label=""if length <= 0""];\n	""132"" [label=""if length == null""];\n	""133"" [label=""if length == null""];\n	""134"" [label=""if object != null""];\n	""135"" [label=""if toType != class \""Ljava/lang/Object;\""""];\n	""136"" [label=""if useType != class \""Ljava/lang/Boolean;\""""];\n	""137"" [label=""if useType != class \""Ljava/lang/String;\""""];\n	""138"" [label=""if value >= length""];\n	""139"" [label=""interfaceinvoke cType.<java.util.Collection: boolean add(java.lang.Object)>($stack74)""];\n	""140"" [label=""interfaceinvoke cType.<java.util.Collection: boolean addAll(java.util.Collection)>($stack64)""];\n	""141"" [label=""length = $stack86""];\n	""142"" [label=""length = interfaceinvoke $stack55.<java.util.Collection: int size()>()""];\n	""143"" [label=""length = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(object)""];\n	""144"" [label=""length = staticinvoke <org.apache.commons.beanutils.ConvertUtils: org.apache.commons.beanutils.Converter lookup(java.lang.Class)>(useType)""];\n	""145"" [label=""length = virtualinvoke $stack28.<java.lang.Number: double doubleValue()>()""];\n	""146"" [label=""length = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convertStringToPrimitive(java.lang.Object,java.lang.Class)>(object, useType)""];\n	""147"" [label=""object := @parameter0: java.lang.Object""];\n	""148"" [label=""return $stack27""];\n	""149"" [label=""return $stack31""];\n	""150"" [label=""return $stack33""];\n	""151"" [label=""return $stack43""];\n	""152"" [label=""return $stack46""];\n	""153"" [label=""return $stack48""];\n	""154"" [label=""return $stack51""];\n	""155"" [label=""return $stack54""];\n	""156"" [label=""return $stack59""];\n	""157"" [label=""return $stack62""];\n	""158"" [label=""return $stack65""];\n	""159"" [label=""return $stack71""];\n	""160"" [label=""return $stack72""];\n	""161"" [label=""return $stack73""];\n	""162"" [label=""return $stack80""];\n	""163"" [label=""return $stack83""];\n	""164"" [label=""return $stack85""];\n	""165"" [label=""return array""];\n	""166"" [label=""return array""];\n	""167"" [label=""return length""];\n	""168"" [label=""return object""];\n	""169"" [label=""return object""];\n	""170"" [label=""specialinvoke $stack19.<java.lang.StringBuilder: void <init>()>()""];\n	""171"" [label=""specialinvoke $stack26.<org.apache.commons.jxpath.JXPathTypeConversionException: void <init>(java.lang.String)>($stack25)""];\n	""172"" [label=""specialinvoke $stack88.<org.apache.commons.jxpath.JXPathTypeConversionException: void <init>(java.lang.String,java.lang.Exception)>($stack87, length)""];\n	""173"" [label=""staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(array, i, $stack75)""];\n	""174"" [label=""staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(array, value, $stack67)""];\n	""175"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""176"" [label=""throw $stack26""];\n	""177"" [label=""throw $stack88""];\n	""178"" [label=""toType := @parameter1: java.lang.Class""];\n	""179"" [label=""useType = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Class wrapPrimitive(java.lang.Class)>(toType)""];\n	""180"" [label=""value = 0""];\n	""181"" [label=""value = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(object, i)""];\n	""182"" [label=""value = value + 1""];\n	""183"" [label=""value_1 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>()""];\n	""1"" -> ""107""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""100"" -> ""138""[label=""cfg_goto""];\n	""101"" -> ""56""[label=""cfg_goto""];\n	""102"" -> ""39""[label=""cfg_goto""];\n	""103"" -> ""150""[label=""cfg_goto""];\n	""104"" -> ""129""[label=""cfg_next""];\n	""105"" -> ""98""[label=""cfg_next""];\n	""106"" -> ""180""[label=""cfg_next""];\n	""107"" -> ""169""[label=""cfg_false""];\n	""107"" -> ""2""[label=""cfg_true""];\n	""108"" -> ""143""[label=""cfg_false""];\n	""108"" -> ""3""[label=""cfg_true""];\n	""109"" -> ""4""[label=""cfg_true""];\n	""109"" -> ""49""[label=""cfg_false""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""110"" -> ""46""[label=""cfg_false""];\n	""110"" -> ""5""[label=""cfg_true""];\n	""111"" -> ""137""[label=""cfg_true""];\n	""111"" -> ""43""[label=""cfg_false""];\n	""112"" -> ""25""[label=""cfg_false""];\n	""112"" -> ""7""[label=""cfg_true""];\n	""113"" -> ""18""[label=""cfg_false""];\n	""113"" -> ""8""[label=""cfg_true""];\n	""114"" -> ""144""[label=""cfg_true""];\n	""114"" -> ""146""[label=""cfg_false""];\n	""115"" -> ""21""[label=""cfg_false""];\n	""115"" -> ""8""[label=""cfg_true""];\n	""116"" -> ""23""[label=""cfg_false""];\n	""116"" -> ""24""[label=""cfg_true""];\n	""117"" -> ""28""[label=""cfg_true""];\n	""117"" -> ""37""[label=""cfg_false""];\n	""118"" -> ""30""[label=""cfg_false""];\n	""118"" -> ""7""[label=""cfg_true""];\n	""119"" -> ""40""[label=""cfg_true""];\n	""119"" -> ""41""[label=""cfg_false""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""120"" -> ""51""[label=""cfg_true""];\n	""120"" -> ""95""[label=""cfg_false""];\n	""121"" -> ""131""[label=""cfg_true""];\n	""121"" -> ""93""[label=""cfg_false""];\n	""122"" -> ""55""[label=""cfg_true""];\n	""122"" -> ""57""[label=""cfg_false""];\n	""123"" -> ""63""[label=""cfg_true""];\n	""123"" -> ""94""[label=""cfg_false""];\n	""124"" -> ""130""[label=""cfg_true""];\n	""124"" -> ""92""[label=""cfg_false""];\n	""125"" -> ""71""[label=""cfg_true""];\n	""125"" -> ""75""[label=""cfg_false""];\n	""126"" -> ""168""[label=""cfg_true""];\n	""126"" -> ""72""[label=""cfg_false""];\n	""127"" -> ""79""[label=""cfg_true""];\n	""127"" -> ""80""[label=""cfg_false""];\n	""128"" -> ""67""[label=""cfg_true""];\n	""128"" -> ""68""[label=""cfg_false""];\n	""129"" -> ""165""[label=""cfg_true""];\n	""129"" -> ""181""[label=""cfg_false""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""130"" -> ""65""[label=""cfg_true""];\n	""130"" -> ""91""[label=""cfg_false""];\n	""131"" -> ""53""[label=""cfg_true""];\n	""131"" -> ""54""[label=""cfg_false""];\n	""132"" -> ""144""[label=""cfg_true""];\n	""132"" -> ""167""[label=""cfg_false""];\n	""133"" -> ""16""[label=""cfg_true""];\n	""133"" -> ""17""[label=""cfg_false""];\n	""134"" -> ""135""[label=""cfg_true""];\n	""134"" -> ""78""[label=""cfg_false""];\n	""135"" -> ""179""[label=""cfg_true""];\n	""135"" -> ""70""[label=""cfg_false""];\n	""136"" -> ""19""[label=""cfg_true""];\n	""136"" -> ""22""[label=""cfg_false""];\n	""137"" -> ""42""[label=""cfg_false""];\n	""137"" -> ""6""[label=""cfg_true""];\n	""138"" -> ""166""[label=""cfg_true""];\n	""138"" -> ""183""[label=""cfg_false""];\n	""139"" -> ""85""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""140"" -> ""59""[label=""cfg_next""];\n	""141"" -> ""83""[label=""cfg_next""];\n	""142"" -> ""50""[label=""cfg_next""];\n	""143"" -> ""62""[label=""cfg_next""];\n	""144"" -> ""133""[label=""cfg_next""];\n	""145"" -> ""136""[label=""cfg_next""];\n	""146"" -> ""132""[label=""cfg_next""];\n	""147"" -> ""178""[label=""cfg_next""];\n	""15"" -> ""171""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""17"" -> ""148""[label=""cfg_next""];\n	""170"" -> ""11""[label=""cfg_next""];\n	""171"" -> ""176""[label=""cfg_next""];\n	""172"" -> ""177""[label=""cfg_next""];\n	""173"" -> ""105""[label=""cfg_next""];\n	""174"" -> ""182""[label=""cfg_next""];\n	""175"" -> ""147""[label=""cfg_next""];\n	""178"" -> ""134""[label=""cfg_next""];\n	""179"" -> ""96""[label=""cfg_next""];\n	""18"" -> ""145""[label=""cfg_next""];\n	""180"" -> ""138""[label=""cfg_next""];\n	""181"" -> ""69""[label=""cfg_next""];\n	""182"" -> ""100""[label=""cfg_next""];\n	""183"" -> ""61""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""108""[label=""cfg_next""];\n	""20"" -> ""115""[label=""cfg_next""];\n	""21"" -> ""149""[label=""cfg_next""];\n	""22"" -> ""116""[label=""cfg_next""];\n	""23"" -> ""103""[label=""cfg_next""];\n	""24"" -> ""150""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""117""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""29"" -> ""118""[label=""cfg_next""];\n	""3"" -> ""109""[label=""cfg_next""];\n	""30"" -> ""32""[label=""cfg_next""];\n	""30"" -> ""81""[label=""cfg_except""];\n	""31"" -> ""35""[label=""cfg_next""];\n	""31"" -> ""81""[label=""cfg_except""];\n	""32"" -> ""31""[label=""cfg_next""];\n	""32"" -> ""81""[label=""cfg_except""];\n	""33"" -> ""34""[label=""cfg_next""];\n	""33"" -> ""81""[label=""cfg_except""];\n	""34"" -> ""36""[label=""cfg_next""];\n	""34"" -> ""81""[label=""cfg_except""];\n	""35"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""81""[label=""cfg_except""];\n	""36"" -> ""151""[label=""cfg_next""];\n	""36"" -> ""81""[label=""cfg_except""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""119""[label=""cfg_next""];\n	""39"" -> ""152""[label=""cfg_next""];\n	""4"" -> ""110""[label=""cfg_next""];\n	""40"" -> ""39""[label=""cfg_next""];\n	""41"" -> ""102""[label=""cfg_next""];\n	""42"" -> ""153""[label=""cfg_next""];\n	""43"" -> ""44""[label=""cfg_next""];\n	""44"" -> ""45""[label=""cfg_next""];\n	""45"" -> ""154""[label=""cfg_next""];\n	""46"" -> ""47""[label=""cfg_next""];\n	""47"" -> ""48""[label=""cfg_next""];\n	""48"" -> ""155""[label=""cfg_next""];\n	""49"" -> ""142""[label=""cfg_next""];\n	""5"" -> ""111""[label=""cfg_next""];\n	""50"" -> ""120""[label=""cfg_next""];\n	""51"" -> ""52""[label=""cfg_next""];\n	""52"" -> ""121""[label=""cfg_next""];\n	""53"" -> ""156""[label=""cfg_next""];\n	""54"" -> ""122""[label=""cfg_next""];\n	""55"" -> ""86""[label=""cfg_next""];\n	""56"" -> ""157""[label=""cfg_next""];\n	""57"" -> ""89""[label=""cfg_next""];\n	""58"" -> ""140""[label=""cfg_next""];\n	""59"" -> ""158""[label=""cfg_next""];\n	""6"" -> ""112""[label=""cfg_next""];\n	""60"" -> ""106""[label=""cfg_next""];\n	""61"" -> ""174""[label=""cfg_next""];\n	""62"" -> ""123""[label=""cfg_next""];\n	""63"" -> ""64""[label=""cfg_next""];\n	""64"" -> ""124""[label=""cfg_next""];\n	""65"" -> ""159""[label=""cfg_next""];\n	""66"" -> ""160""[label=""cfg_next""];\n	""67"" -> ""161""[label=""cfg_next""];\n	""68"" -> ""139""[label=""cfg_next""];\n	""69"" -> ""173""[label=""cfg_next""];\n	""7"" -> ""113""[label=""cfg_next""];\n	""70"" -> ""125""[label=""cfg_next""];\n	""71"" -> ""126""[label=""cfg_next""];\n	""72"" -> ""73""[label=""cfg_next""];\n	""73"" -> ""74""[label=""cfg_next""];\n	""74"" -> ""162""[label=""cfg_next""];\n	""75"" -> ""76""[label=""cfg_next""];\n	""76"" -> ""77""[label=""cfg_next""];\n	""77"" -> ""163""[label=""cfg_next""];\n	""78"" -> ""127""[label=""cfg_next""];\n	""79"" -> ""164""[label=""cfg_next""];\n	""8"" -> ""114""[label=""cfg_next""];\n	""80"" -> ""97""[label=""cfg_next""];\n	""81"" -> ""141""[label=""cfg_next""];\n	""82"" -> ""172""[label=""cfg_next""];\n	""83"" -> ""82""[label=""cfg_next""];\n	""84"" -> ""128""[label=""cfg_next""];\n	""85"" -> ""99""[label=""cfg_next""];\n	""86"" -> ""90""[label=""cfg_next""];\n	""87"" -> ""104""[label=""cfg_next""];\n	""88"" -> ""60""[label=""cfg_next""];\n	""89"" -> ""101""[label=""cfg_next""];\n	""9"" -> ""170""[label=""cfg_next""];\n	""90"" -> ""56""[label=""cfg_next""];\n	""91"" -> ""66""[label=""cfg_next""];\n	""92"" -> ""84""[label=""cfg_next""];\n	""93"" -> ""58""[label=""cfg_next""];\n	""94"" -> ""87""[label=""cfg_next""];\n	""95"" -> ""88""[label=""cfg_next""];\n	""96"" -> ""1""[label=""cfg_next""];\n	""97"" -> ""164""[label=""cfg_goto""];\n	""98"" -> ""129""[label=""cfg_goto""];\n	""99"" -> ""128""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter.convertNullToPrimitive(Class),Method,* Convert null to a primitive type.\n     * @param toType destination class\n     * @return a wrapper,protected Object convertNullToPrimitive(final Class toType) {\n    if (toType == boolean.class) {\n        return Boolean.FALSE;\n    }\n    if (toType == char.class) {\n        return Character.valueOf('\0');\n    }\n    if (toType == byte.class) {\n        return Byte.valueOf((byte) 0);\n    }\n    if (toType == short.class) {\n        return Short.valueOf((short) 0);\n    }\n    if (toType == int.class) {\n        return Integer.valueOf(0);\n    }\n    if (toType == long.class) {\n        return Long.valueOf(0L);\n    }\n    if (toType == float.class) {\n        return Float.valueOf(0.0f);\n    }\n    if (toType == double.class) {\n        return Double.valueOf(0.0);\n    }\n    return null;\n},java.lang.Object convertNullToPrimitive(java.lang.Class),"digraph cfg_convertNullToPrimitive {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0)""];\n	""2"" [label=""$stack11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F)""];\n	""3"" [label=""$stack12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)""];\n	""4"" [label=""$stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)""];\n	""5"" [label=""$stack14 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0)""];\n	""6"" [label=""$stack15 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0)""];\n	""7"" [label=""$stack16 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(0)""];\n	""8"" [label=""$stack17 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""9"" [label=""$stack2 = <java.lang.Boolean: java.lang.Class TYPE>""];\n	""10"" [label=""$stack3 = <java.lang.Character: java.lang.Class TYPE>""];\n	""11"" [label=""$stack4 = <java.lang.Byte: java.lang.Class TYPE>""];\n	""12"" [label=""$stack5 = <java.lang.Short: java.lang.Class TYPE>""];\n	""13"" [label=""$stack6 = <java.lang.Integer: java.lang.Class TYPE>""];\n	""14"" [label=""$stack7 = <java.lang.Long: java.lang.Class TYPE>""];\n	""15"" [label=""$stack8 = <java.lang.Float: java.lang.Class TYPE>""];\n	""16"" [label=""$stack9 = <java.lang.Double: java.lang.Class TYPE>""];\n	""17"" [label=""if toType != $stack2""];\n	""18"" [label=""if toType != $stack3""];\n	""19"" [label=""if toType != $stack4""];\n	""20"" [label=""if toType != $stack5""];\n	""21"" [label=""if toType != $stack6""];\n	""22"" [label=""if toType != $stack7""];\n	""23"" [label=""if toType != $stack8""];\n	""24"" [label=""if toType != $stack9""];\n	""25"" [label=""return $stack10""];\n	""26"" [label=""return $stack11""];\n	""27"" [label=""return $stack12""];\n	""28"" [label=""return $stack13""];\n	""29"" [label=""return $stack14""];\n	""30"" [label=""return $stack15""];\n	""31"" [label=""return $stack16""];\n	""32"" [label=""return $stack17""];\n	""33"" [label=""return null""];\n	""34"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""35"" [label=""toType := @parameter0: java.lang.Class""];\n	""1"" -> ""25""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""22""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_next""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_true""];\n	""17"" -> ""8""[label=""cfg_false""];\n	""18"" -> ""11""[label=""cfg_true""];\n	""18"" -> ""7""[label=""cfg_false""];\n	""19"" -> ""12""[label=""cfg_true""];\n	""19"" -> ""6""[label=""cfg_false""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_true""];\n	""20"" -> ""5""[label=""cfg_false""];\n	""21"" -> ""14""[label=""cfg_true""];\n	""21"" -> ""4""[label=""cfg_false""];\n	""22"" -> ""15""[label=""cfg_true""];\n	""22"" -> ""3""[label=""cfg_false""];\n	""23"" -> ""16""[label=""cfg_true""];\n	""23"" -> ""2""[label=""cfg_false""];\n	""24"" -> ""1""[label=""cfg_false""];\n	""24"" -> ""33""[label=""cfg_true""];\n	""3"" -> ""27""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""31""[label=""cfg_next""];\n	""8"" -> ""32""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.util.BasicTypeConverter.convertStringToPrimitive(Object,Class)",Method,* Convert a string to a primitive type.\n     * @param object String\n     * @param toType destination class\n     * @return wrapper,"protected Object convertStringToPrimitive(final Object object, Class toType) {\n    toType = TypeUtils.wrapPrimitive(toType);\n    if (toType == Boolean.class) {\n        return Boolean.valueOf((String) object);\n    }\n    if (toType == Character.class) {\n        return Character.valueOf(((String) object).charAt(0));\n    }\n    if (toType == Byte.class) {\n        return Byte.valueOf((String) object);\n    }\n    if (toType == Short.class) {\n        return Short.valueOf((String) object);\n    }\n    if (toType == Integer.class) {\n        return Integer.valueOf((String) object);\n    }\n    if (toType == Long.class) {\n        return Long.valueOf((String) object);\n    }\n    if (toType == Float.class) {\n        return Float.valueOf((String) object);\n    }\n    if (toType == Double.class) {\n        return Double.valueOf((String) object);\n    }\n    return null;\n}","java.lang.Object convertStringToPrimitive(java.lang.Object,java.lang.Class)","digraph cfg_convertStringToPrimitive {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack9)""];\n	""2"" [label=""$stack11 = (java.lang.String) object""];\n	""3"" [label=""$stack12 = staticinvoke <java.lang.Short: java.lang.Short valueOf(java.lang.String)>($stack11)""];\n	""4"" [label=""$stack13 = (java.lang.String) object""];\n	""5"" [label=""$stack14 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>($stack13)""];\n	""6"" [label=""$stack15 = (java.lang.String) object""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.String: char charAt(int)>(0)""];\n	""8"" [label=""$stack17 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($stack16)""];\n	""9"" [label=""$stack18 = (java.lang.String) object""];\n	""10"" [label=""$stack19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($stack18)""];\n	""11"" [label=""$stack3 = (java.lang.String) object""];\n	""12"" [label=""$stack4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($stack3)""];\n	""13"" [label=""$stack5 = (java.lang.String) object""];\n	""14"" [label=""$stack6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($stack5)""];\n	""15"" [label=""$stack7 = (java.lang.String) object""];\n	""16"" [label=""$stack8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($stack7)""];\n	""17"" [label=""$stack9 = (java.lang.String) object""];\n	""18"" [label=""if toType != class \""Ljava/lang/Boolean;\""""];\n	""19"" [label=""if toType != class \""Ljava/lang/Byte;\""""];\n	""20"" [label=""if toType != class \""Ljava/lang/Character;\""""];\n	""21"" [label=""if toType != class \""Ljava/lang/Double;\""""];\n	""22"" [label=""if toType != class \""Ljava/lang/Float;\""""];\n	""23"" [label=""if toType != class \""Ljava/lang/Integer;\""""];\n	""24"" [label=""if toType != class \""Ljava/lang/Long;\""""];\n	""25"" [label=""if toType != class \""Ljava/lang/Short;\""""];\n	""26"" [label=""object := @parameter0: java.lang.Object""];\n	""27"" [label=""return $stack10""];\n	""28"" [label=""return $stack12""];\n	""29"" [label=""return $stack14""];\n	""30"" [label=""return $stack17""];\n	""31"" [label=""return $stack19""];\n	""32"" [label=""return $stack4""];\n	""33"" [label=""return $stack6""];\n	""34"" [label=""return $stack8""];\n	""35"" [label=""return null""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""37"" [label=""toType := @parameter1: java.lang.Class""];\n	""38"" [label=""toType = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Class wrapPrimitive(java.lang.Class)>(toType)""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""31""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""32""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""33""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""34""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""20""[label=""cfg_true""];\n	""18"" -> ""9""[label=""cfg_false""];\n	""19"" -> ""25""[label=""cfg_true""];\n	""19"" -> ""4""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_true""];\n	""20"" -> ""6""[label=""cfg_false""];\n	""21"" -> ""11""[label=""cfg_false""];\n	""21"" -> ""35""[label=""cfg_true""];\n	""22"" -> ""13""[label=""cfg_false""];\n	""22"" -> ""21""[label=""cfg_true""];\n	""23"" -> ""17""[label=""cfg_false""];\n	""23"" -> ""24""[label=""cfg_true""];\n	""24"" -> ""15""[label=""cfg_false""];\n	""24"" -> ""22""[label=""cfg_true""];\n	""25"" -> ""2""[label=""cfg_false""];\n	""25"" -> ""23""[label=""cfg_true""];\n	""26"" -> ""37""[label=""cfg_next""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""36"" -> ""26""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""30""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.util.BasicTypeConverter.allocateNumber(Class,double)",Method,* Allocate a number of a given type and value.\n     * @param type destination class\n     * @param value double\n     * @return Number,"protected Number allocateNumber(Class type, final double value) {\n    type = TypeUtils.wrapPrimitive(type);\n    if (type == Byte.class) {\n        return Byte.valueOf((byte) value);\n    }\n    if (type == Short.class) {\n        return Short.valueOf((short) value);\n    }\n    if (type == Integer.class) {\n        return Integer.valueOf((int) value);\n    }\n    if (type == Long.class) {\n        return Long.valueOf((long) value);\n    }\n    if (type == Float.class) {\n        return Float.valueOf((float) value);\n    }\n    if (type == Double.class) {\n        return Double.valueOf(value);\n    }\n    if (type == BigInteger.class) {\n        return BigInteger.valueOf((long) value);\n    }\n    if (type == BigDecimal.class) {\n        // TODO ? https://pmd.sourceforge.io/pmd-6.50.0/pmd_rules_java_errorprone.html#avoiddecimalliteralsinbigdecimalconstructor\n        // NOPMD\n        return new BigDecimal(value);\n    }\n    final String className = type.getName();\n    Class initialValueType = null;\n    if (""java.util.concurrent.atomic.AtomicInteger"".equals(className)) {\n        initialValueType = int.class;\n    }\n    if (""java.util.concurrent.atomic.AtomicLong"".equals(className)) {\n        initialValueType = long.class;\n    }\n    if (initialValueType != null) {\n        try {\n            return (Number) type.getConstructor(new Class[] { initialValueType }).newInstance(allocateNumber(initialValueType, value));\n        } catch (final Exception e) {\n            throw new JXPathTypeConversionException(className, e);\n        }\n    }\n    return null;\n}","java.lang.Number allocateNumber(java.lang.Class,double)","digraph cfg_allocateNumber {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(className)""];\n	""2"" [label=""$stack11 = newarray (java.lang.Class)[1]""];\n	""3"" [label=""$stack11[0] = initialValueType""];\n	""4"" [label=""$stack12 = newarray (java.lang.Object)[1]""];\n	""5"" [label=""$stack12[0] = $stack13""];\n	""6"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Number allocateNumber(java.lang.Class,double)>(initialValueType, value)""];\n	""7"" [label=""$stack14 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack11)""];\n	""8"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack12)""];\n	""9"" [label=""$stack16 = (java.lang.Number) $stack15""];\n	""10"" [label=""$stack17 = new java.math.BigDecimal""];\n	""11"" [label=""$stack18 = (long) value""];\n	""12"" [label=""$stack19 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($stack18)""];\n	""13"" [label=""$stack20 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(value)""];\n	""14"" [label=""$stack21 = (float) value""];\n	""15"" [label=""$stack22 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($stack21)""];\n	""16"" [label=""$stack23 = (long) value""];\n	""17"" [label=""$stack24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack23)""];\n	""18"" [label=""$stack25 = (int) value""];\n	""19"" [label=""$stack26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack25)""];\n	""20"" [label=""$stack27 = (int) value""];\n	""21"" [label=""$stack28 = (short) $stack27""];\n	""22"" [label=""$stack29 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($stack28)""];\n	""23"" [label=""$stack30 = (int) value""];\n	""24"" [label=""$stack31 = (byte) $stack30""];\n	""25"" [label=""$stack32 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($stack31)""];\n	""26"" [label=""$stack33 := @caughtexception""];\n	""27"" [label=""$stack34 = new org.apache.commons.jxpath.JXPathTypeConversionException""];\n	""28"" [label=""$stack7 = \""java.util.concurrent.atomic.AtomicInteger\""""];\n	""29"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(className)""];\n	""30"" [label=""$stack9 = \""java.util.concurrent.atomic.AtomicLong\""""];\n	""31"" [label=""className = virtualinvoke type.<java.lang.Class: java.lang.String getName()>()""];\n	""32"" [label=""e = $stack33""];\n	""33"" [label=""if $stack10 == 0""];\n	""34"" [label=""if $stack8 == 0""];\n	""35"" [label=""if initialValueType == null""];\n	""36"" [label=""if type != class \""Ljava/lang/Byte;\""""];\n	""37"" [label=""if type != class \""Ljava/lang/Double;\""""];\n	""38"" [label=""if type != class \""Ljava/lang/Float;\""""];\n	""39"" [label=""if type != class \""Ljava/lang/Integer;\""""];\n	""40"" [label=""if type != class \""Ljava/lang/Long;\""""];\n	""41"" [label=""if type != class \""Ljava/lang/Short;\""""];\n	""42"" [label=""if type != class \""Ljava/math/BigDecimal;\""""];\n	""43"" [label=""if type != class \""Ljava/math/BigInteger;\""""];\n	""44"" [label=""initialValueType = <java.lang.Integer: java.lang.Class TYPE>""];\n	""45"" [label=""initialValueType = <java.lang.Long: java.lang.Class TYPE>""];\n	""46"" [label=""initialValueType = null""];\n	""47"" [label=""return $stack16""];\n	""48"" [label=""return $stack17""];\n	""49"" [label=""return $stack19""];\n	""50"" [label=""return $stack20""];\n	""51"" [label=""return $stack22""];\n	""52"" [label=""return $stack24""];\n	""53"" [label=""return $stack26""];\n	""54"" [label=""return $stack29""];\n	""55"" [label=""return $stack32""];\n	""56"" [label=""return null""];\n	""57"" [label=""specialinvoke $stack17.<java.math.BigDecimal: void <init>(double)>(value)""];\n	""58"" [label=""specialinvoke $stack34.<org.apache.commons.jxpath.JXPathTypeConversionException: void <init>(java.lang.String,java.lang.Exception)>(className, e)""];\n	""59"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""60"" [label=""throw $stack34""];\n	""61"" [label=""type := @parameter0: java.lang.Class""];\n	""62"" [label=""type = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Class wrapPrimitive(java.lang.Class)>(type)""];\n	""63"" [label=""value := @parameter1: double""];\n	""1"" -> ""33""[label=""cfg_next""];\n	""10"" -> ""57""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""49""[label=""cfg_next""];\n	""13"" -> ""50""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""51""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""52""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""53""[label=""cfg_next""];\n	""2"" -> ""26""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""54""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""55""[label=""cfg_next""];\n	""26"" -> ""32""[label=""cfg_next""];\n	""27"" -> ""58""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""34""[label=""cfg_next""];\n	""3"" -> ""26""[label=""cfg_except""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_next""];\n	""31"" -> ""46""[label=""cfg_next""];\n	""32"" -> ""27""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_true""];\n	""33"" -> ""45""[label=""cfg_false""];\n	""34"" -> ""30""[label=""cfg_true""];\n	""34"" -> ""44""[label=""cfg_false""];\n	""35"" -> ""2""[label=""cfg_false""];\n	""35"" -> ""56""[label=""cfg_true""];\n	""36"" -> ""23""[label=""cfg_false""];\n	""36"" -> ""41""[label=""cfg_true""];\n	""37"" -> ""13""[label=""cfg_false""];\n	""37"" -> ""43""[label=""cfg_true""];\n	""38"" -> ""14""[label=""cfg_false""];\n	""38"" -> ""37""[label=""cfg_true""];\n	""39"" -> ""18""[label=""cfg_false""];\n	""39"" -> ""40""[label=""cfg_true""];\n	""4"" -> ""26""[label=""cfg_except""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""40"" -> ""16""[label=""cfg_false""];\n	""40"" -> ""38""[label=""cfg_true""];\n	""41"" -> ""20""[label=""cfg_false""];\n	""41"" -> ""39""[label=""cfg_true""];\n	""42"" -> ""10""[label=""cfg_false""];\n	""42"" -> ""31""[label=""cfg_true""];\n	""43"" -> ""11""[label=""cfg_false""];\n	""43"" -> ""42""[label=""cfg_true""];\n	""44"" -> ""30""[label=""cfg_next""];\n	""45"" -> ""35""[label=""cfg_next""];\n	""46"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""26""[label=""cfg_except""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""57"" -> ""48""[label=""cfg_next""];\n	""58"" -> ""60""[label=""cfg_next""];\n	""59"" -> ""61""[label=""cfg_next""];\n	""6"" -> ""26""[label=""cfg_except""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""61"" -> ""63""[label=""cfg_next""];\n	""62"" -> ""36""[label=""cfg_next""];\n	""63"" -> ""62""[label=""cfg_next""];\n	""7"" -> ""26""[label=""cfg_except""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""26""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""26""[label=""cfg_except""];\n	""9"" -> ""47""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.util.BasicTypeConverter.canCreateCollection(Class),Method,* Learn whether this BasicTypeConverter can create a collection of the specified type.\n     * @param type prospective destination class\n     * @return boolean,protected boolean canCreateCollection(final Class type) {\n    if (!type.isInterface() && (type.getModifiers() & Modifier.ABSTRACT) == 0) {\n        try {\n            type.getConstructor();\n            return true;\n        } catch (final Exception e) {\n            return false;\n        }\n    }\n    return type == List.class || type == Collection.class || type == Set.class;\n},boolean canCreateCollection(java.lang.Class),"digraph cfg_canCreateCollection {\n	""1"" [label=""$stack3 = virtualinvoke type.<java.lang.Class: boolean isInterface()>()""];\n	""2"" [label=""$stack4 = 0""];\n	""3"" [label=""$stack4 = 1""];\n	""4"" [label=""$stack5 = virtualinvoke type.<java.lang.Class: int getModifiers()>()""];\n	""5"" [label=""$stack6 = $stack5 & 1024""];\n	""6"" [label=""$stack7 = newarray (java.lang.Class)[0]""];\n	""7"" [label=""$stack8 = 1""];\n	""8"" [label=""$stack9 := @caughtexception""];\n	""9"" [label=""e = $stack9""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack3 != 0""];\n	""12"" [label=""if $stack6 != 0""];\n	""13"" [label=""if type != class \""Ljava/util/Set;\""""];\n	""14"" [label=""if type == class \""Ljava/util/Collection;\""""];\n	""15"" [label=""if type == class \""Ljava/util/List;\""""];\n	""16"" [label=""return $stack4""];\n	""17"" [label=""return $stack8""];\n	""18"" [label=""return 0""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""20"" [label=""type := @parameter0: java.lang.Class""];\n	""21"" [label=""virtualinvoke type.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack7)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_goto""];\n	""11"" -> ""15""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""12"" -> ""15""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_false""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""14"" -> ""13""[label=""cfg_false""];\n	""14"" -> ""3""[label=""cfg_true""];\n	""15"" -> ""14""[label=""cfg_false""];\n	""15"" -> ""3""[label=""cfg_true""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""21"" -> ""8""[label=""cfg_except""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_except""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.util.BasicTypeConverter.allocateCollection(Class),Method,* Create a collection of a given type.\n     * @param type destination class\n     * @return Collection,"protected Collection allocateCollection(final Class type) {\n    if (!type.isInterface() && (type.getModifiers() & Modifier.ABSTRACT) == 0) {\n        try {\n            return (Collection) type.getConstructor().newInstance();\n        } catch (final Exception ex) {\n            throw new JXPathInvalidAccessException(""Cannot create collection of type: "" + type, ex);\n        }\n    }\n    if (type == List.class || type == Collection.class) {\n        return new ArrayList();\n    }\n    if (type == Set.class) {\n        return new HashSet();\n    }\n    throw new JXPathInvalidAccessException(""Cannot create collection of type: "" + type);\n}",java.util.Collection allocateCollection(java.lang.Class),"digraph cfg_allocateCollection {\n	""1"" [label=""$stack10 = new java.util.HashSet""];\n	""2"" [label=""$stack11 = virtualinvoke type.<java.lang.Class: int getModifiers()>()""];\n	""3"" [label=""$stack12 = $stack11 & 1024""];\n	""4"" [label=""$stack13 = newarray (java.lang.Class)[0]""];\n	""5"" [label=""$stack14 = newarray (java.lang.Object)[0]""];\n	""6"" [label=""$stack15 = virtualinvoke type.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack14)""];\n	""8"" [label=""$stack17 = (java.util.Collection) $stack16""];\n	""9"" [label=""$stack18 := @caughtexception""];\n	""10"" [label=""$stack19 = new java.lang.StringBuilder""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create collection of type: \"")""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type)""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""15"" [label=""$stack3 = virtualinvoke type.<java.lang.Class: boolean isInterface()>()""];\n	""16"" [label=""$stack4 = new java.util.ArrayList""];\n	""17"" [label=""$stack5 = new java.lang.StringBuilder""];\n	""18"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create collection of type: \"")""];\n	""19"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type)""];\n	""20"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""21"" [label=""$stack9 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""22"" [label=""ex = $stack18""];\n	""23"" [label=""if $stack12 != 0""];\n	""24"" [label=""if $stack3 != 0""];\n	""25"" [label=""if type != class \""Ljava/util/Collection;\""""];\n	""26"" [label=""if type != class \""Ljava/util/Set;\""""];\n	""27"" [label=""if type == class \""Ljava/util/List;\""""];\n	""28"" [label=""return $stack10""];\n	""29"" [label=""return $stack17""];\n	""30"" [label=""return $stack4""];\n	""31"" [label=""specialinvoke $stack10.<java.util.HashSet: void <init>()>()""];\n	""32"" [label=""specialinvoke $stack19.<java.lang.StringBuilder: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String,java.lang.Throwable)>($stack22, ex)""];\n	""34"" [label=""specialinvoke $stack4.<java.util.ArrayList: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>()""];\n	""36"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack8)""];\n	""37"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""38"" [label=""throw $stack23""];\n	""39"" [label=""throw $stack9""];\n	""40"" [label=""type := @parameter0: java.lang.Class""];\n	""1"" -> ""31""[label=""cfg_next""];\n	""10"" -> ""32""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""33""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""34""[label=""cfg_next""];\n	""17"" -> ""35""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""36""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_next""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""27""[label=""cfg_true""];\n	""23"" -> ""4""[label=""cfg_false""];\n	""24"" -> ""2""[label=""cfg_false""];\n	""24"" -> ""27""[label=""cfg_true""];\n	""25"" -> ""16""[label=""cfg_false""];\n	""25"" -> ""26""[label=""cfg_true""];\n	""26"" -> ""1""[label=""cfg_false""];\n	""26"" -> ""21""[label=""cfg_true""];\n	""27"" -> ""16""[label=""cfg_true""];\n	""27"" -> ""25""[label=""cfg_false""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""31"" -> ""28""[label=""cfg_next""];\n	""32"" -> ""11""[label=""cfg_next""];\n	""33"" -> ""38""[label=""cfg_next""];\n	""34"" -> ""30""[label=""cfg_next""];\n	""35"" -> ""18""[label=""cfg_next""];\n	""36"" -> ""39""[label=""cfg_next""];\n	""37"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_except""];\n	""40"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_except""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_except""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_except""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.util.BasicTypeConverter.unmodifiableCollection(Collection),Method,* Gets an unmodifiable version of a collection.\n     * @param collection to wrap\n     * @return Collection,protected Collection unmodifiableCollection(final Collection collection) {\n    if (collection instanceof List) {\n        return Collections.unmodifiableList((List) collection);\n    }\n    if (collection instanceof SortedSet) {\n        return Collections.unmodifiableSortedSet((SortedSet) collection);\n    }\n    if (collection instanceof Set) {\n        return Collections.unmodifiableSet((Set) collection);\n    }\n    return Collections.unmodifiableCollection(collection);\n},java.util.Collection unmodifiableCollection(java.util.Collection),"digraph cfg_unmodifiableCollection {\n	""1"" [label=""$stack10 = (java.util.List) collection""];\n	""2"" [label=""$stack11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack10)""];\n	""3"" [label=""$stack2 = collection instanceof java.util.List""];\n	""4"" [label=""$stack3 = collection instanceof java.util.SortedSet""];\n	""5"" [label=""$stack4 = collection instanceof java.util.Set""];\n	""6"" [label=""$stack5 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(collection)""];\n	""7"" [label=""$stack6 = (java.util.Set) collection""];\n	""8"" [label=""$stack7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($stack6)""];\n	""9"" [label=""$stack8 = (java.util.SortedSet) collection""];\n	""10"" [label=""$stack9 = staticinvoke <java.util.Collections: java.util.SortedSet unmodifiableSortedSet(java.util.SortedSet)>($stack8)""];\n	""11"" [label=""collection := @parameter0: java.util.Collection""];\n	""12"" [label=""if $stack2 == 0""];\n	""13"" [label=""if $stack3 == 0""];\n	""14"" [label=""if $stack4 == 0""];\n	""15"" [label=""return $stack11""];\n	""16"" [label=""return $stack5""];\n	""17"" [label=""return $stack7""];\n	""18"" [label=""return $stack9""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_false""];\n	""12"" -> ""4""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""7""[label=""cfg_false""];\n	""19"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet.getValues(),Method,No Comment,@Override\npublic List getValues() {\n    return Collections.unmodifiableList(values);\n},java.util.List getValues(),"digraph cfg_getValues {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List values>""];\n	""2"" [label=""$stack2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet.getNodes(),Method,No Comment,@Override\npublic List getNodes() {\n    return Collections.unmodifiableList(values);\n},java.util.List getNodes(),"digraph cfg_getNodes {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List values>""];\n	""2"" [label=""$stack2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet.getPointers(),Method,No Comment,@Override\npublic List getPointers() {\n    if (pointers == null) {\n        pointers = new ArrayList();\n        for (int i = 0; i < values.size(); i++) {\n            pointers.add(new ValuePointer(values.get(i)));\n        }\n        pointers = Collections.unmodifiableList(pointers);\n    }\n    return pointers;\n},java.util.List getPointers(),"digraph cfg_getPointers {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List pointers>""];\n	""2"" [label=""$stack11 = interfaceinvoke $stack9.<java.util.List: java.lang.Object get(int)>(i)""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""4"" [label=""$stack2 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List pointers>""];\n	""5"" [label=""$stack3 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List pointers>""];\n	""6"" [label=""$stack4 = new java.util.ArrayList""];\n	""7"" [label=""$stack5 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List values>""];\n	""8"" [label=""$stack6 = interfaceinvoke $stack5.<java.util.List: int size()>()""];\n	""9"" [label=""$stack7 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List pointers>""];\n	""10"" [label=""$stack8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack7)""];\n	""11"" [label=""$stack9 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List values>""];\n	""12"" [label=""goto""];\n	""13"" [label=""i = 0""];\n	""14"" [label=""i = i + 1""];\n	""15"" [label=""if $stack2 != null""];\n	""16"" [label=""if i >= $stack6""];\n	""17"" [label=""interfaceinvoke $stack10.<java.util.List: boolean add(java.lang.Object)>($stack12)""];\n	""18"" [label=""return $stack3""];\n	""19"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: void <init>(java.lang.Object)>($stack11)""];\n	""20"" [label=""specialinvoke $stack4.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet""];\n	""22"" [label=""this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List pointers> = $stack4""];\n	""23"" [label=""this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List pointers> = $stack8""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_goto""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_true""];\n	""15"" -> ""6""[label=""cfg_false""];\n	""16"" -> ""1""[label=""cfg_false""];\n	""16"" -> ""9""[label=""cfg_true""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""4""[label=""cfg_next""];\n	""22"" -> ""13""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""20""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet.<init>(List),Constructor,* Create a new ValueNodeSet.\n         * @param values to return,public ValueNodeSet(final List values) {\n    this.values = values;\n},void <init>(java.util.List),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet""];\n	""4"" [label=""this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValueNodeSet: java.util.List values> = values""];\n	""5"" [label=""values := @parameter0: java.util.List""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.getValue(),Method,No Comment,@Override\npublic Object getValue() {\n    return bean;\n},java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.getNode(),Method,No Comment,@Override\npublic Object getNode() {\n    return bean;\n},java.lang.Object getNode(),"digraph cfg_getNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.getRootNode(),Method,No Comment,@Override\npublic Object getRootNode() {\n    return bean;\n},java.lang.Object getRootNode(),"digraph cfg_getRootNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.setValue(Object),Method,No Comment,@Override\npublic void setValue(final Object value) {\n    throw new UnsupportedOperationException();\n},void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""4"" [label=""throw $stack2""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.clone(),Method,No Comment,@Override\npublic Object clone() {\n    return this;\n},java.lang.Object clone(),"digraph cfg_clone {\n	""1"" [label=""return this""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.compareTo(Object),Method,No Comment,@Override\npublic int compareTo(final Object object) {\n    return 0;\n},int compareTo(java.lang.Object),"digraph cfg_compareTo {\n	""1"" [label=""object := @parameter0: java.lang.Object""];\n	""2"" [label=""return 0""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    if (bean == null) {\n        return ""null()"";\n    }\n    if (bean instanceof Number) {\n        String string = bean.toString();\n        if (string.endsWith("".0"")) {\n            string = string.substring(0, string.length() - 2);\n        }\n        return string;\n    }\n    if (bean instanceof Boolean) {\n        return ((Boolean) bean).booleanValue() ? ""true()"" : ""false()"";\n    }\n    if (bean instanceof String) {\n        return ""'"" + bean + ""'"";\n    }\n    return ""{object of type "" + bean.getClass().getName() + ""}"";\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.Class: java.lang.String getName()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\{object of type \"")""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12)""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\}\"")""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack17 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""10"" [label=""$stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""11"" [label=""$stack2 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""12"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18)""];\n	""13"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""14"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""15"" [label=""$stack23 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""16"" [label=""$stack24 = (java.lang.Boolean) $stack23""];\n	""17"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.Boolean: boolean booleanValue()>()""];\n	""18"" [label=""$stack26 = \""false()\""""];\n	""19"" [label=""$stack26 = \""true()\""""];\n	""20"" [label=""$stack27 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""21"" [label=""$stack28 = virtualinvoke string.<java.lang.String: boolean endsWith(java.lang.String)>(\"".0\"")""];\n	""22"" [label=""$stack29 = virtualinvoke string.<java.lang.String: int length()>()""];\n	""23"" [label=""$stack3 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""24"" [label=""$stack30 = $stack29 - 2""];\n	""25"" [label=""$stack4 = $stack3 instanceof java.lang.Number""];\n	""26"" [label=""$stack5 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""27"" [label=""$stack6 = $stack5 instanceof java.lang.Boolean""];\n	""28"" [label=""$stack7 = this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean>""];\n	""29"" [label=""$stack8 = $stack7 instanceof java.lang.String""];\n	""30"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""31"" [label=""goto""];\n	""32"" [label=""if $stack2 != null""];\n	""33"" [label=""if $stack25 == 0""];\n	""34"" [label=""if $stack28 == 0""];\n	""35"" [label=""if $stack4 == 0""];\n	""36"" [label=""if $stack6 == 0""];\n	""37"" [label=""if $stack8 == 0""];\n	""38"" [label=""return \""null()\""""];\n	""39"" [label=""return $stack16""];\n	""40"" [label=""return $stack22""];\n	""41"" [label=""return $stack26""];\n	""42"" [label=""return string""];\n	""43"" [label=""specialinvoke $stack17.<java.lang.StringBuilder: void <init>()>()""];\n	""44"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""45"" [label=""string = virtualinvoke $stack27.<java.lang.Object: java.lang.String toString()>()""];\n	""46"" [label=""string = virtualinvoke string.<java.lang.String: java.lang.String substring(int,int)>(0, $stack30)""];\n	""47"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""32""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""40""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""33""[label=""cfg_next""];\n	""18"" -> ""41""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""45""[label=""cfg_next""];\n	""21"" -> ""34""[label=""cfg_next""];\n	""22"" -> ""24""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""46""[label=""cfg_next""];\n	""25"" -> ""35""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""36""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""37""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""44""[label=""cfg_next""];\n	""31"" -> ""41""[label=""cfg_goto""];\n	""32"" -> ""23""[label=""cfg_true""];\n	""32"" -> ""38""[label=""cfg_false""];\n	""33"" -> ""18""[label=""cfg_true""];\n	""33"" -> ""19""[label=""cfg_false""];\n	""34"" -> ""22""[label=""cfg_false""];\n	""34"" -> ""42""[label=""cfg_true""];\n	""35"" -> ""20""[label=""cfg_false""];\n	""35"" -> ""26""[label=""cfg_true""];\n	""36"" -> ""15""[label=""cfg_false""];\n	""36"" -> ""28""[label=""cfg_true""];\n	""37"" -> ""30""[label=""cfg_true""];\n	""37"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""43"" -> ""10""[label=""cfg_next""];\n	""44"" -> ""4""[label=""cfg_next""];\n	""45"" -> ""21""[label=""cfg_next""];\n	""46"" -> ""42""[label=""cfg_next""];\n	""47"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""39""[label=""cfg_next""];\n	""8"" -> ""43""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer.<init>(Object),Constructor,* Create a new ValuePointer.\n         * @param object value,public ValuePointer(final Object object) {\n    this.bean = object;\n},void <init>(java.lang.Object),"digraph cfg_init {\n	""1"" [label=""object := @parameter0: java.lang.Object""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer""];\n	""5"" [label=""this.<org.apache.commons.jxpath.util.BasicTypeConverter$ValuePointer: java.lang.Object bean> = object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.TypeUtils.setTypeConverter(TypeConverter),Method,* Install an alternative type converter.\n     * @param converter new TypeConverter,public static synchronized void setTypeConverter(final TypeConverter converter) {\n    typeConverter = converter;\n},void setTypeConverter(org.apache.commons.jxpath.util.TypeConverter),"digraph cfg_setTypeConverter {\n	""1"" [label=""<org.apache.commons.jxpath.util.TypeUtils: org.apache.commons.jxpath.util.TypeConverter typeConverter> = converter""];\n	""2"" [label=""converter := @parameter0: org.apache.commons.jxpath.util.TypeConverter""];\n	""3"" [label=""return""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n","public , static , synchronized "
org.apache.commons.jxpath.util.TypeUtils.getTypeConverter(),Method,* Returns the current type converter.\n     * @return TypeConverter,public static TypeConverter getTypeConverter() {\n    return typeConverter;\n},org.apache.commons.jxpath.util.TypeConverter getTypeConverter(),"digraph cfg_getTypeConverter {\n	""1"" [label=""$stack0 = <org.apache.commons.jxpath.util.TypeUtils: org.apache.commons.jxpath.util.TypeConverter typeConverter>""];\n	""2"" [label=""return $stack0""];\n	""1"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.TypeUtils.canConvert(Object,Class)",Method,* Returns true if the global converter can convert the supplied\n     * object to the specified type.\n     * @param object object to test\n     * @param toType target class\n     * @return boolean,"public static boolean canConvert(final Object object, final Class toType) {\n    return typeConverter.canConvert(object, toType);\n}","boolean canConvert(java.lang.Object,java.lang.Class)","digraph cfg_canConvert {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.util.TypeUtils: org.apache.commons.jxpath.util.TypeConverter typeConverter>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<org.apache.commons.jxpath.util.TypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(object, toType)""];\n	""3"" [label=""object := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""toType := @parameter1: java.lang.Class""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.TypeUtils.convert(Object,Class)",Method,* Converts the supplied object to the specified type. May\n     * throw a RuntimeException.\n     * @param object object to convert\n     * @param toType target class\n     * @return resulting Object,"public static Object convert(final Object object, final Class toType) {\n    return typeConverter.convert(object, toType);\n}","java.lang.Object convert(java.lang.Object,java.lang.Class)","digraph cfg_convert {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.util.TypeUtils: org.apache.commons.jxpath.util.TypeConverter typeConverter>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<org.apache.commons.jxpath.util.TypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(object, toType)""];\n	""3"" [label=""object := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""toType := @parameter1: java.lang.Class""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.util.TypeUtils.wrapPrimitive(Class),Method,"* Return the appropriate wrapper type for the specified class.\n     * @param p Class for which to retrieve a wrapper class.\n     * @return the wrapper if {@code p} is primitive, else {@code p}.\n     * @since JXPath 1.3",public static Class wrapPrimitive(final Class p) {\n    return p.isPrimitive() ? (Class) PRIMITIVE_TYPE_MAP.get(p) : p;\n},java.lang.Class wrapPrimitive(java.lang.Class),"digraph cfg_wrapPrimitive {\n	""1"" [label=""$stack1 = virtualinvoke p.<java.lang.Class: boolean isPrimitive()>()""];\n	""2"" [label=""$stack2 = <org.apache.commons.jxpath.util.TypeUtils: java.util.HashMap PRIMITIVE_TYPE_MAP>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(p)""];\n	""4"" [label=""$stack4 = (java.lang.Class) $stack3""];\n	""5"" [label=""$stack4 = p""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack1 == 0""];\n	""8"" [label=""p := @parameter0: java.lang.Class""];\n	""9"" [label=""return $stack4""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""5""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.TypeConverter.canConvert(Object,Class)",Abstract Method,* Returns true if it can convert the supplied\n     * object to the specified class.\n     * @param object object to test\n     * @param toType target class\n     * @return boolean,"boolean canConvert(Object object, Class toType);","boolean canConvert(java.lang.Object,java.lang.Class)",digraph cfg_canConvert {\n}\n,default
"org.apache.commons.jxpath.util.TypeConverter.convert(Object,Class)",Abstract Method,* Converts the supplied object to the specified\n     * type. Throws a runtime exception if the conversion is\n     * not possible.\n     * @param object object to convert\n     * @param toType target class\n     * @return resulting Object,"Object convert(Object object, Class toType);","java.lang.Object convert(java.lang.Object,java.lang.Class)",digraph cfg_convert {\n}\n,default
"org.apache.commons.jxpath.util.ReverseComparator.compare(Object,Object)",Method,No Comment,"@Override\npublic int compare(final Object o1, final Object o2) {\n    return ((Comparable) o2).compareTo(o1);\n}","int compare(java.lang.Object,java.lang.Object)","digraph cfg_compare {\n	""1"" [label=""$stack3 = (java.lang.Comparable) o2""];\n	""2"" [label=""$stack4 = interfaceinvoke $stack3.<java.lang.Comparable: int compareTo(java.lang.Object)>(o1)""];\n	""3"" [label=""o1 := @parameter0: java.lang.Object""];\n	""4"" [label=""o2 := @parameter1: java.lang.Object""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.util.ReverseComparator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.ReverseComparator.<init>(),Constructor,* Create a new ReverseComparator.,private ReverseComparator() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.util.ReverseComparator""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.util.JXPath11CompatibleTypeConverter.canConvert(Object,Class)",Method,No Comment,"@Override\npublic boolean canConvert(final Object object, final Class toType) {\n    return object instanceof NodeSet ? toType.isInstance(object) : super.canConvert(object, toType);\n}","boolean canConvert(java.lang.Object,java.lang.Class)","digraph cfg_canConvert {\n	""1"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.NodeSet""];\n	""2"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: boolean canConvert(java.lang.Object,java.lang.Class)>(object, toType)""];\n	""3"" [label=""$stack4 = virtualinvoke toType.<java.lang.Class: boolean isInstance(java.lang.Object)>(object)""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""object := @parameter0: java.lang.Object""];\n	""7"" [label=""return $stack4""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.util.JXPath11CompatibleTypeConverter""];\n	""9"" [label=""toType := @parameter1: java.lang.Class""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.util.JXPath11CompatibleTypeConverter.convert(Object,Class)",Method,No Comment,"@Override\npublic Object convert(final Object object, final Class toType) {\n    return object instanceof NodeSet && toType.isInstance(object) ? object : super.convert(object, toType);\n}","java.lang.Object convert(java.lang.Object,java.lang.Class)","digraph cfg_convert {\n	""1"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.NodeSet""];\n	""2"" [label=""$stack4 = object""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.util.BasicTypeConverter: java.lang.Object convert(java.lang.Object,java.lang.Class)>(object, toType)""];\n	""4"" [label=""$stack5 = virtualinvoke toType.<java.lang.Class: boolean isInstance(java.lang.Object)>(object)""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""object := @parameter0: java.lang.Object""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.util.JXPath11CompatibleTypeConverter""];\n	""11"" [label=""toType := @parameter1: java.lang.Class""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.util.ClassLoaderUtil.addAbbreviation(String,String)",Method,* Add primitive type abbreviation to maps of abbreviations.\n     *\n     * @param primitive Canonical name of primitive type\n     * @param abbreviation Corresponding abbreviation of primitive type,"private static void addAbbreviation(final String primitive, final String abbreviation) {\n    abbreviationMap.put(primitive, abbreviation);\n}","void addAbbreviation(java.lang.String,java.lang.String)","digraph cfg_addAbbreviation {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.util.ClassLoaderUtil: java.util.Map abbreviationMap>""];\n	""2"" [label=""abbreviation := @parameter1: java.lang.String""];\n	""3"" [label=""interfaceinvoke $stack2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(primitive, abbreviation)""];\n	""4"" [label=""primitive := @parameter0: java.lang.String""];\n	""5"" [label=""return""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.util.ClassLoaderUtil.getClass(ClassLoader,String,boolean)",Method,"* Returns the class represented by {@code className} using the\n     * {@code classLoader}.  This implementation supports names like\n     * ""{@code java.lang.String[]}"" as well as ""{@code [Ljava.lang.String;}"".\n     *\n     * @param classLoader  the class loader to use to load the class\n     * @param className  the class name\n     * @param initialize  whether the class must be initialized\n     * @return the class represented by {@code className} using the {@code classLoader}\n     * @throws ClassNotFoundException if the class is not found","public static Class getClass(final ClassLoader classLoader, final String className, final boolean initialize) throws ClassNotFoundException {\n    Class clazz;\n    if (abbreviationMap.containsKey(className)) {\n        final String clsName = ""["" + abbreviationMap.get(className);\n        clazz = Class.forName(clsName, initialize, classLoader).getComponentType();\n    } else {\n        clazz = Class.forName(toCanonicalName(className), initialize, classLoader);\n    }\n    return clazz;\n}","java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean)","digraph cfg_getClass {\n	""1"" [label=""$stack10 = interfaceinvoke $stack9.<java.util.Map: java.lang.Object get(java.lang.Object)>(className)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10)""];\n	""4"" [label=""$stack13 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(clsName, initialize, classLoader)""];\n	""5"" [label=""$stack5 = <org.apache.commons.jxpath.util.ClassLoaderUtil: java.util.Map abbreviationMap>""];\n	""6"" [label=""$stack6 = interfaceinvoke $stack5.<java.util.Map: boolean containsKey(java.lang.Object)>(className)""];\n	""7"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.String toCanonicalName(java.lang.String)>(className)""];\n	""8"" [label=""$stack8 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack9 = <org.apache.commons.jxpath.util.ClassLoaderUtil: java.util.Map abbreviationMap>""];\n	""10"" [label=""classLoader := @parameter0: java.lang.ClassLoader""];\n	""11"" [label=""className := @parameter1: java.lang.String""];\n	""12"" [label=""clazz = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>($stack7, initialize, classLoader)""];\n	""13"" [label=""clazz = virtualinvoke $stack13.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""14"" [label=""clsName = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack6 == 0""];\n	""17"" [label=""initialize := @parameter2: boolean""];\n	""18"" [label=""return clazz""];\n	""19"" [label=""specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""18""[label=""cfg_goto""];\n	""16"" -> ""7""[label=""cfg_true""];\n	""16"" -> ""8""[label=""cfg_false""];\n	""17"" -> ""5""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ClassLoaderUtil.getClass(ClassLoader,String)",Method,"* Returns the (initialized) class represented by {@code className}\n     * using the {@code classLoader}.  This implementation supports names\n     * like ""{@code java.lang.String[]}"" as well as\n     * ""{@code [Ljava.lang.String;}"".\n     *\n     * @param classLoader  the class loader to use to load the class\n     * @param className  the class name\n     * @return the class represented by {@code className} using the {@code classLoader}\n     * @throws ClassNotFoundException if the class is not found","public static Class getClass(final ClassLoader classLoader, final String className) throws ClassNotFoundException {\n    return getClass(classLoader, className, true);\n}","java.lang.Class getClass(java.lang.ClassLoader,java.lang.String)","digraph cfg_getClass {\n	""1"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean)>(classLoader, className, 1)""];\n	""2"" [label=""classLoader := @parameter0: java.lang.ClassLoader""];\n	""3"" [label=""className := @parameter1: java.lang.String""];\n	""4"" [label=""return $stack2""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.util.ClassLoaderUtil.getClass(String),Method,"* Returns the (initialized) class represented by {@code className}\n     * using the current thread's context class loader. This implementation\n     * supports names like ""{@code java.lang.String[]}"" as well as\n     * ""{@code [Ljava.lang.String;}"".\n     *\n     * @param className  the class name\n     * @return the class represented by {@code className} using the current thread's context class loader\n     * @throws ClassNotFoundException if the class is not found","public static Class getClass(final String className) throws ClassNotFoundException {\n    return getClass(className, true);\n}",java.lang.Class getClass(java.lang.String),"digraph cfg_getClass {\n	""1"" [label=""$stack1 = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.String,boolean)>(className, 1)""];\n	""2"" [label=""className := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack1""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ClassLoaderUtil.getClass(String,boolean)",Method,"* Returns the class represented by {@code className} using the\n     * current thread's context class loader. This implementation supports\n     * names like ""{@code java.lang.String[]}"" as well as\n     * ""{@code [Ljava.lang.String;}"".\n     *\n     * @param className  the class name\n     * @param initialize  whether the class must be initialized\n     * @return the class represented by {@code className} using the current thread's context class loader\n     * @throws ClassNotFoundException if the class is not found","public static Class getClass(final String className, final boolean initialize) throws ClassNotFoundException {\n    final ClassLoader contextCL = Thread.currentThread().getContextClassLoader();\n    final ClassLoader currentCL = ClassLoaderUtil.class.getClassLoader();\n    if (contextCL != null) {\n        try {\n            return getClass(contextCL, className, initialize);\n        } catch (final ClassNotFoundException ignore) {\n            // NOPMD\n            // ignore this exception and try the current class loader\n        }\n    }\n    return getClass(currentCL, className, initialize);\n}","java.lang.Class getClass(java.lang.String,boolean)","digraph cfg_getClass {\n	""1"" [label=""$stack5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>()""];\n	""2"" [label=""$stack6 = class \""Lorg/apache/commons/jxpath/util/ClassLoaderUtil;\""""];\n	""3"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean)>(currentCL, className, initialize)""];\n	""4"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.ClassLoader,java.lang.String,boolean)>(contextCL, className, initialize)""];\n	""5"" [label=""$stack9 := @caughtexception""];\n	""6"" [label=""className := @parameter0: java.lang.String""];\n	""7"" [label=""contextCL = virtualinvoke $stack5.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>()""];\n	""8"" [label=""currentCL = virtualinvoke $stack6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()""];\n	""9"" [label=""if contextCL == null""];\n	""10"" [label=""initialize := @parameter1: boolean""];\n	""11"" [label=""l4 = $stack9""];\n	""12"" [label=""return $stack7""];\n	""13"" [label=""return $stack8""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_except""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n","public , static "
org.apache.commons.jxpath.util.ClassLoaderUtil.toCanonicalName(String),Method,* Converts a class name to a JLS style class name.\n     *\n     * @param className  the class name\n     * @return the converted name,"private static String toCanonicalName(String className) {\n    Objects.requireNonNull(className, ""className"");\n    if (className.endsWith(""[]"")) {\n        final StringBuilder classNameBuffer = new StringBuilder();\n        while (className.endsWith(""[]"")) {\n            className = className.substring(0, className.length() - 2);\n            classNameBuffer.append(""["");\n        }\n        final String abbreviation = (String) abbreviationMap.get(className);\n        if (abbreviation != null) {\n            classNameBuffer.append(abbreviation);\n        } else {\n            classNameBuffer.append(""L"").append(className).append("";"");\n        }\n        className = classNameBuffer.toString();\n    }\n    return className;\n}",java.lang.String toCanonicalName(java.lang.String),"digraph cfg_toCanonicalName {\n	""1"" [label=""$stack10 = virtualinvoke className.<java.lang.String: int length()>()""];\n	""2"" [label=""$stack11 = $stack10 - 2""];\n	""3"" [label=""$stack3 = virtualinvoke className.<java.lang.String: boolean endsWith(java.lang.String)>(\""[]\"")""];\n	""4"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack5 = virtualinvoke className.<java.lang.String: boolean endsWith(java.lang.String)>(\""[]\"")""];\n	""6"" [label=""$stack6 = <org.apache.commons.jxpath.util.ClassLoaderUtil: java.util.Map abbreviationMap>""];\n	""7"" [label=""$stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(className)""];\n	""8"" [label=""$stack8 = virtualinvoke classNameBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""L\"")""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className)""];\n	""10"" [label=""abbreviation = (java.lang.String) $stack7""];\n	""11"" [label=""className := @parameter0: java.lang.String""];\n	""12"" [label=""className = virtualinvoke className.<java.lang.String: java.lang.String substring(int,int)>(0, $stack11)""];\n	""13"" [label=""className = virtualinvoke classNameBuffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""classNameBuffer = $stack4""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""if $stack3 == 0""];\n	""18"" [label=""if $stack5 == 0""];\n	""19"" [label=""if abbreviation == null""];\n	""20"" [label=""return className""];\n	""21"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""22"" [label=""staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(className, \""className\"")""];\n	""23"" [label=""virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"";\"")""];\n	""24"" [label=""virtualinvoke classNameBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""25"" [label=""virtualinvoke classNameBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(abbreviation)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""22""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_goto""];\n	""16"" -> ""13""[label=""cfg_goto""];\n	""17"" -> ""20""[label=""cfg_true""];\n	""17"" -> ""4""[label=""cfg_false""];\n	""18"" -> ""1""[label=""cfg_false""];\n	""18"" -> ""6""[label=""cfg_true""];\n	""19"" -> ""25""[label=""cfg_false""];\n	""19"" -> ""8""[label=""cfg_true""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""14""[label=""cfg_next""];\n	""22"" -> ""3""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_next""];\n	""24"" -> ""15""[label=""cfg_next""];\n	""25"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""23""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.util.ValueUtils.isCollection(Object),Method,* Returns true if the object is an array or a Collection.\n     * @param value to test\n     * @return boolean,public static boolean isCollection(Object value) {\n    value = getValue(value);\n    if (value == null) {\n        return false;\n    }\n    if (value.getClass().isArray()) {\n        return true;\n    }\n    return value instanceof Collection;\n},boolean isCollection(java.lang.Object),"digraph cfg_isCollection {\n	""1"" [label=""$stack1 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.Class: boolean isArray()>()""];\n	""3"" [label=""$stack3 = value instanceof java.util.Collection""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if value != null""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""value := @parameter0: java.lang.Object""];\n	""10"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>(value)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.util.ValueUtils.getCollectionHint(Class),Method,"* Returns 1 if the type is a collection,\n     * -1 if it is definitely not\n     * and 0 if it may be a collection in some cases.\n     * @param clazz to test\n     * @return int",public static int getCollectionHint(final Class clazz) {\n    if (clazz.isArray()) {\n        return 1;\n    }\n    if (Collection.class.isAssignableFrom(clazz)) {\n        return 1;\n    }\n    if (clazz.isPrimitive()) {\n        return -1;\n    }\n    if (clazz.isInterface()) {\n        return 0;\n    }\n    if (Modifier.isFinal(clazz.getModifiers())) {\n        return -1;\n    }\n    return 0;\n},int getCollectionHint(java.lang.Class),"digraph cfg_getCollectionHint {\n	""1"" [label=""$stack1 = virtualinvoke clazz.<java.lang.Class: boolean isArray()>()""];\n	""2"" [label=""$stack2 = class \""Ljava/util/Collection;\""""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(clazz)""];\n	""4"" [label=""$stack4 = virtualinvoke clazz.<java.lang.Class: boolean isPrimitive()>()""];\n	""5"" [label=""$stack5 = virtualinvoke clazz.<java.lang.Class: boolean isInterface()>()""];\n	""6"" [label=""$stack6 = virtualinvoke clazz.<java.lang.Class: int getModifiers()>()""];\n	""7"" [label=""$stack7 = staticinvoke <java.lang.reflect.Modifier: boolean isFinal(int)>($stack6)""];\n	""8"" [label=""clazz := @parameter0: java.lang.Class""];\n	""9"" [label=""if $stack1 == 0""];\n	""10"" [label=""if $stack3 == 0""];\n	""11"" [label=""if $stack4 == 0""];\n	""12"" [label=""if $stack5 == 0""];\n	""13"" [label=""if $stack7 == 0""];\n	""14"" [label=""return -1""];\n	""15"" [label=""return -1""];\n	""16"" [label=""return 0""];\n	""17"" [label=""return 0""];\n	""18"" [label=""return 1""];\n	""19"" [label=""return 1""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_false""];\n	""10"" -> ""4""[label=""cfg_true""];\n	""11"" -> ""14""[label=""cfg_false""];\n	""11"" -> ""5""[label=""cfg_true""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_true""];\n	""13"" -> ""15""[label=""cfg_false""];\n	""13"" -> ""17""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.getIndexedPropertyLength(Object,IndexedPropertyDescriptor)",Method,"* If there is a regular non-indexed read method for this property,\n     * uses this method to obtain the collection and then returns its\n     * length.\n     * Otherwise, attempts to guess the length of the collection by\n     * calling the indexed get method repeatedly.  The method is supposed\n     * to throw an exception if the index is out of bounds.\n     * @param object collection\n     * @param pd IndexedPropertyDescriptor\n     * @return int","public static int getIndexedPropertyLength(final Object object, final IndexedPropertyDescriptor pd) {\n    if (pd.getReadMethod() != null) {\n        return getLength(getValue(object, pd));\n    }\n    final Method readMethod = pd.getIndexedReadMethod();\n    if (readMethod == null) {\n        throw new JXPathException(""No indexed read method for property "" + pd.getName());\n    }\n    for (int i = 0; i < UNKNOWN_LENGTH_MAX_COUNT; i++) {\n        try {\n            readMethod.invoke(object, Integer.valueOf(i));\n        } catch (final Throwable t) {\n            return i;\n        }\n    }\n    throw new JXPathException(""Cannot determine the length of the indexed property "" + pd.getName());\n}","int getIndexedPropertyLength(java.lang.Object,java.beans.IndexedPropertyDescriptor)","digraph cfg_getIndexedPropertyLength {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.JXPathException""];\n	""3"" [label=""$stack12 = newarray (java.lang.Object)[1]""];\n	""4"" [label=""$stack12[0] = $stack13""];\n	""5"" [label=""$stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i)""];\n	""6"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack15 = virtualinvoke pd.<java.beans.IndexedPropertyDescriptor: java.lang.String getName()>()""];\n	""8"" [label=""$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No indexed read method for property \"")""];\n	""9"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15)""];\n	""10"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""11"" [label=""$stack19 = new org.apache.commons.jxpath.JXPathException""];\n	""12"" [label=""$stack20 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,java.beans.PropertyDescriptor)>(object, pd)""];\n	""13"" [label=""$stack21 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>($stack20)""];\n	""14"" [label=""$stack22 := @caughtexception""];\n	""15"" [label=""$stack5 = virtualinvoke pd.<java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getReadMethod()>()""];\n	""16"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""17"" [label=""$stack7 = virtualinvoke pd.<java.beans.IndexedPropertyDescriptor: java.lang.String getName()>()""];\n	""18"" [label=""$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot determine the length of the indexed property \"")""];\n	""19"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""i = 0""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""if $stack5 == null""];\n	""25"" [label=""if i >= 16000""];\n	""26"" [label=""if readMethod != null""];\n	""27"" [label=""object := @parameter0: java.lang.Object""];\n	""28"" [label=""pd := @parameter1: java.beans.IndexedPropertyDescriptor""];\n	""29"" [label=""readMethod = virtualinvoke pd.<java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getIndexedReadMethod()>()""];\n	""30"" [label=""return $stack21""];\n	""31"" [label=""return i""];\n	""32"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack10)""];\n	""33"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""34"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack18)""];\n	""35"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""36"" [label=""t = $stack22""];\n	""37"" [label=""throw $stack11""];\n	""38"" [label=""throw $stack19""];\n	""39"" [label=""virtualinvoke readMethod.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(object, $stack12)""];\n	""1"" -> ""32""[label=""cfg_next""];\n	""10"" -> ""34""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""30""[label=""cfg_next""];\n	""14"" -> ""36""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""35""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_goto""];\n	""21"" -> ""25""[label=""cfg_goto""];\n	""22"" -> ""25""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""12""[label=""cfg_false""];\n	""24"" -> ""29""[label=""cfg_true""];\n	""25"" -> ""2""[label=""cfg_true""];\n	""25"" -> ""3""[label=""cfg_false""];\n	""26"" -> ""11""[label=""cfg_false""];\n	""26"" -> ""22""[label=""cfg_true""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""29"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_except""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""32"" -> ""37""[label=""cfg_next""];\n	""33"" -> ""8""[label=""cfg_next""];\n	""34"" -> ""38""[label=""cfg_next""];\n	""35"" -> ""18""[label=""cfg_next""];\n	""36"" -> ""31""[label=""cfg_next""];\n	""39"" -> ""14""[label=""cfg_except""];\n	""39"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_except""];\n	""4"" -> ""39""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""33""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.util.ValueUtils.getLength(Object),Method,"* Returns the length of the supplied collection. If the supplied object\n     * is not a collection, returns 1. If collection is null, returns 0.\n     * @param collection to check\n     * @return int",public static int getLength(Object collection) {\n    if (collection == null) {\n        return 0;\n    }\n    collection = getValue(collection);\n    if (collection.getClass().isArray()) {\n        return Array.getLength(collection);\n    }\n    if (collection instanceof Collection) {\n        return ((Collection) collection).size();\n    }\n    return 1;\n},int getLength(java.lang.Object),"digraph cfg_getLength {\n	""1"" [label=""$stack1 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.Class: boolean isArray()>()""];\n	""3"" [label=""$stack3 = collection instanceof java.util.Collection""];\n	""4"" [label=""$stack4 = (java.util.Collection) collection""];\n	""5"" [label=""$stack5 = interfaceinvoke $stack4.<java.util.Collection: int size()>()""];\n	""6"" [label=""$stack6 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(collection)""];\n	""7"" [label=""collection := @parameter0: java.lang.Object""];\n	""8"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>(collection)""];\n	""9"" [label=""if $stack2 == 0""];\n	""10"" [label=""if $stack3 == 0""];\n	""11"" [label=""if collection != null""];\n	""12"" [label=""return $stack5""];\n	""13"" [label=""return $stack6""];\n	""14"" [label=""return 0""];\n	""15"" [label=""return 1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_true""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""14""[label=""cfg_false""];\n	""11"" -> ""8""[label=""cfg_true""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n","public , static "
org.apache.commons.jxpath.util.ValueUtils.iterate(Object),Method,"* Returns an iterator for the supplied collection. If the argument\n     * is null, returns an empty iterator. If the argument is not\n     * a collection, returns an iterator that produces just that one object.\n     * @param collection to iterate\n     * @return Iterator","public static Iterator iterate(final Object collection) {\n    if (collection == null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (collection.getClass().isArray()) {\n        final int length = Array.getLength(collection);\n        if (length == 0) {\n            return Collections.EMPTY_LIST.iterator();\n        }\n        final ArrayList list = new ArrayList();\n        for (int i = 0; i < length; i++) {\n            list.add(Array.get(collection, i));\n        }\n        return list.iterator();\n    }\n    if (collection instanceof Collection) {\n        return ((Collection) collection).iterator();\n    }\n    return Collections.singletonList(collection).iterator();\n}",java.util.Iterator iterate(java.lang.Object),"digraph cfg_iterate {\n	""1"" [label=""$stack10 = interfaceinvoke $stack9.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""2"" [label=""$stack11 = new java.util.ArrayList""];\n	""3"" [label=""$stack12 = virtualinvoke list.<java.util.ArrayList: java.util.Iterator iterator()>()""];\n	""4"" [label=""$stack13 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(collection, i)""];\n	""5"" [label=""$stack14 = <java.util.Collections: java.util.List EMPTY_LIST>""];\n	""6"" [label=""$stack15 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>()""];\n	""7"" [label=""$stack16 = <java.util.Collections: java.util.List EMPTY_LIST>""];\n	""8"" [label=""$stack17 = interfaceinvoke $stack16.<java.util.List: java.util.Iterator iterator()>()""];\n	""9"" [label=""$stack4 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""10"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.Class: boolean isArray()>()""];\n	""11"" [label=""$stack6 = collection instanceof java.util.Collection""];\n	""12"" [label=""$stack7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(collection)""];\n	""13"" [label=""$stack8 = interfaceinvoke $stack7.<java.util.List: java.util.Iterator iterator()>()""];\n	""14"" [label=""$stack9 = (java.util.Collection) collection""];\n	""15"" [label=""collection := @parameter0: java.lang.Object""];\n	""16"" [label=""goto""];\n	""17"" [label=""i = 0""];\n	""18"" [label=""i = i + 1""];\n	""19"" [label=""if $stack5 == 0""];\n	""20"" [label=""if $stack6 == 0""];\n	""21"" [label=""if collection != null""];\n	""22"" [label=""if i >= length""];\n	""23"" [label=""if length != 0""];\n	""24"" [label=""length = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(collection)""];\n	""25"" [label=""list = $stack11""];\n	""26"" [label=""return $stack10""];\n	""27"" [label=""return $stack12""];\n	""28"" [label=""return $stack15""];\n	""29"" [label=""return $stack17""];\n	""30"" [label=""return $stack8""];\n	""31"" [label=""specialinvoke $stack11.<java.util.ArrayList: void <init>()>()""];\n	""32"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>($stack13)""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""30""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""21""[label=""cfg_next""];\n	""16"" -> ""22""[label=""cfg_goto""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""11""[label=""cfg_true""];\n	""19"" -> ""24""[label=""cfg_false""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_true""];\n	""20"" -> ""14""[label=""cfg_false""];\n	""21"" -> ""7""[label=""cfg_false""];\n	""21"" -> ""9""[label=""cfg_true""];\n	""22"" -> ""3""[label=""cfg_true""];\n	""22"" -> ""4""[label=""cfg_false""];\n	""23"" -> ""2""[label=""cfg_true""];\n	""23"" -> ""5""[label=""cfg_false""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""27""[label=""cfg_next""];\n	""31"" -> ""25""[label=""cfg_next""];\n	""32"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""32""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.expandCollection(Object,int)",Method,"* Grows the collection if necessary to the specified size. Returns\n     * the new, expanded collection.\n     * @param collection to expand\n     * @param size desired size\n     * @return collection or array","public static Object expandCollection(final Object collection, final int size) {\n    if (collection == null) {\n        return null;\n    }\n    if (size < getLength(collection)) {\n        throw new JXPathException(""adjustment of "" + collection + "" to size "" + size + "" is not an expansion"");\n    }\n    if (collection.getClass().isArray()) {\n        final Object bigger = Array.newInstance(collection.getClass().getComponentType(), size);\n        System.arraycopy(collection, 0, bigger, 0, Array.getLength(collection));\n        return bigger;\n    }\n    if (collection instanceof Collection) {\n        while (((Collection) collection).size() < size) {\n            ((Collection) collection).add(null);\n        }\n        return collection;\n    }\n    throw new JXPathException(""Cannot turn "" + collection.getClass().getName() + "" into a collection of size "" + size);\n}","java.lang.Object expandCollection(java.lang.Object,int)","digraph cfg_expandCollection {\n	""1"" [label=""$stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot turn \"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" into a collection of size \"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(size)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""$stack16 = (java.util.Collection) collection""];\n	""8"" [label=""$stack17 = interfaceinvoke $stack16.<java.util.Collection: int size()>()""];\n	""9"" [label=""$stack18 = (java.util.Collection) collection""];\n	""10"" [label=""$stack19 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""12"" [label=""$stack21 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(collection)""];\n	""13"" [label=""$stack22 = new java.lang.StringBuilder""];\n	""14"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""adjustment of \"")""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(collection)""];\n	""16"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" to size \"")""];\n	""17"" [label=""$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(size)""];\n	""18"" [label=""$stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" is not an expansion\"")""];\n	""19"" [label=""$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""20"" [label=""$stack29 = new org.apache.commons.jxpath.JXPathException""];\n	""21"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>(collection)""];\n	""22"" [label=""$stack4 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""23"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.Class: boolean isArray()>()""];\n	""24"" [label=""$stack6 = collection instanceof java.util.Collection""];\n	""25"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""26"" [label=""$stack8 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""27"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.Class: java.lang.String getName()>()""];\n	""28"" [label=""bigger = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($stack20, size)""];\n	""29"" [label=""collection := @parameter0: java.lang.Object""];\n	""30"" [label=""goto""];\n	""31"" [label=""if $stack17 >= size""];\n	""32"" [label=""if $stack5 == 0""];\n	""33"" [label=""if $stack6 == 0""];\n	""34"" [label=""if collection != null""];\n	""35"" [label=""if size >= $stack3""];\n	""36"" [label=""interfaceinvoke $stack18.<java.util.Collection: boolean add(java.lang.Object)>(null)""];\n	""37"" [label=""return bigger""];\n	""38"" [label=""return collection""];\n	""39"" [label=""return null""];\n	""40"" [label=""size := @parameter1: int""];\n	""41"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack14)""];\n	""42"" [label=""specialinvoke $stack22.<java.lang.StringBuilder: void <init>()>()""];\n	""43"" [label=""specialinvoke $stack29.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack28)""];\n	""44"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""45"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(collection, 0, bigger, 0, $stack21)""];\n	""46"" [label=""throw $stack15""];\n	""47"" [label=""throw $stack29""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""45""[label=""cfg_next""];\n	""13"" -> ""42""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""43""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""21"" -> ""35""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""32""[label=""cfg_next""];\n	""24"" -> ""33""[label=""cfg_next""];\n	""25"" -> ""44""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""2""[label=""cfg_next""];\n	""28"" -> ""12""[label=""cfg_next""];\n	""29"" -> ""40""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""7""[label=""cfg_goto""];\n	""31"" -> ""38""[label=""cfg_true""];\n	""31"" -> ""9""[label=""cfg_false""];\n	""32"" -> ""10""[label=""cfg_false""];\n	""32"" -> ""24""[label=""cfg_true""];\n	""33"" -> ""6""[label=""cfg_true""];\n	""33"" -> ""7""[label=""cfg_false""];\n	""34"" -> ""21""[label=""cfg_true""];\n	""34"" -> ""39""[label=""cfg_false""];\n	""35"" -> ""20""[label=""cfg_false""];\n	""35"" -> ""22""[label=""cfg_true""];\n	""36"" -> ""30""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""34""[label=""cfg_next""];\n	""41"" -> ""46""[label=""cfg_next""];\n	""42"" -> ""14""[label=""cfg_next""];\n	""43"" -> ""47""[label=""cfg_next""];\n	""44"" -> ""1""[label=""cfg_next""];\n	""45"" -> ""37""[label=""cfg_next""];\n	""5"" -> ""41""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""31""[label=""cfg_next""];\n	""9"" -> ""36""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.remove(Object,int)",Method,* Remove the index'th element from the supplied collection.\n     * @param collection to edit\n     * @param index int\n     * @return the resulting collection,"public static Object remove(Object collection, final int index) {\n    collection = getValue(collection);\n    if (collection == null) {\n        return null;\n    }\n    if (index >= getLength(collection)) {\n        throw new JXPathException(""No such element at index "" + index);\n    }\n    if (collection.getClass().isArray()) {\n        final int length = Array.getLength(collection);\n        final Object smaller = Array.newInstance(collection.getClass().getComponentType(), length - 1);\n        if (index > 0) {\n            System.arraycopy(collection, 0, smaller, 0, index);\n        }\n        if (index < length - 1) {\n            System.arraycopy(collection, index + 1, smaller, index, length - index - 1);\n        }\n        return smaller;\n    }\n    if (collection instanceof List) {\n        final int size = ((List) collection).size();\n        if (index < size) {\n            ((List) collection).remove(index);\n        }\n        return collection;\n    }\n    if (collection instanceof Collection) {\n        final Iterator it = ((Collection) collection).iterator();\n        for (int i = 0; i < index; i++) {\n            if (!it.hasNext()) {\n                break;\n            }\n            it.next();\n        }\n        if (it.hasNext()) {\n            it.next();\n            it.remove();\n        }\n        return collection;\n    }\n    throw new JXPathException(""Cannot remove "" + collection.getClass().getName() + ""["" + index + ""]"");\n}","java.lang.Object remove(java.lang.Object,int)","digraph cfg_remove {\n	""1"" [label=""$stack10 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getName()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot remove \"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(index)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""]\"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack18 = new org.apache.commons.jxpath.JXPathException""];\n	""10"" [label=""$stack19 = (java.util.Collection) collection""];\n	""11"" [label=""$stack20 = interfaceinvoke length.<java.util.Iterator: boolean hasNext()>()""];\n	""12"" [label=""$stack21 = interfaceinvoke length.<java.util.Iterator: boolean hasNext()>()""];\n	""13"" [label=""$stack22 = (java.util.List) collection""];\n	""14"" [label=""$stack23 = (java.util.List) collection""];\n	""15"" [label=""$stack24 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""16"" [label=""$stack25 = length - 1""];\n	""17"" [label=""$stack26 = virtualinvoke $stack24.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""18"" [label=""$stack27 = length - 1""];\n	""19"" [label=""$stack28 = length - index""];\n	""20"" [label=""$stack29 = $stack28 - 1""];\n	""21"" [label=""$stack30 = index + 1""];\n	""22"" [label=""$stack31 = new java.lang.StringBuilder""];\n	""23"" [label=""$stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No such element at index \"")""];\n	""24"" [label=""$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(index)""];\n	""25"" [label=""$stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""26"" [label=""$stack35 = new org.apache.commons.jxpath.JXPathException""];\n	""27"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>(collection)""];\n	""28"" [label=""$stack5 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""29"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.Class: boolean isArray()>()""];\n	""30"" [label=""$stack7 = collection instanceof java.util.List""];\n	""31"" [label=""$stack8 = collection instanceof java.util.Collection""];\n	""32"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""33"" [label=""collection := @parameter0: java.lang.Object""];\n	""34"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>(collection)""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""if $stack20 == 0""];\n	""38"" [label=""if $stack21 != 0""];\n	""39"" [label=""if $stack6 == 0""];\n	""40"" [label=""if $stack7 == 0""];\n	""41"" [label=""if $stack8 == 0""];\n	""42"" [label=""if collection != null""];\n	""43"" [label=""if index < $stack4""];\n	""44"" [label=""if index <= 0""];\n	""45"" [label=""if index >= $stack27""];\n	""46"" [label=""if index >= length""];\n	""47"" [label=""if smaller >= index""];\n	""48"" [label=""index := @parameter1: int""];\n	""49"" [label=""interfaceinvoke $stack23.<java.util.List: java.lang.Object remove(int)>(index)""];\n	""50"" [label=""interfaceinvoke length.<java.util.Iterator: java.lang.Object next()>()""];\n	""51"" [label=""interfaceinvoke length.<java.util.Iterator: java.lang.Object next()>()""];\n	""52"" [label=""interfaceinvoke length.<java.util.Iterator: void remove()>()""];\n	""53"" [label=""length = interfaceinvoke $stack19.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""54"" [label=""length = interfaceinvoke $stack22.<java.util.List: int size()>()""];\n	""55"" [label=""length = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(collection)""];\n	""56"" [label=""return collection""];\n	""57"" [label=""return collection""];\n	""58"" [label=""return null""];\n	""59"" [label=""return smaller""];\n	""60"" [label=""smaller = 0""];\n	""61"" [label=""smaller = smaller + 1""];\n	""62"" [label=""smaller = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($stack26, $stack25)""];\n	""63"" [label=""specialinvoke $stack18.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack17)""];\n	""64"" [label=""specialinvoke $stack31.<java.lang.StringBuilder: void <init>()>()""];\n	""65"" [label=""specialinvoke $stack35.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack34)""];\n	""66"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""67"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(collection, $stack30, smaller, index, $stack29)""];\n	""68"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(collection, 0, smaller, 0, index)""];\n	""69"" [label=""throw $stack18""];\n	""70"" [label=""throw $stack35""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""53""[label=""cfg_next""];\n	""11"" -> ""37""[label=""cfg_next""];\n	""12"" -> ""38""[label=""cfg_next""];\n	""13"" -> ""54""[label=""cfg_next""];\n	""14"" -> ""49""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""62""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""45""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""67""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""64""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""65""[label=""cfg_next""];\n	""26"" -> ""22""[label=""cfg_next""];\n	""27"" -> ""43""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""39""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""30"" -> ""40""[label=""cfg_next""];\n	""31"" -> ""41""[label=""cfg_next""];\n	""32"" -> ""66""[label=""cfg_next""];\n	""33"" -> ""48""[label=""cfg_next""];\n	""34"" -> ""42""[label=""cfg_next""];\n	""35"" -> ""11""[label=""cfg_goto""];\n	""36"" -> ""47""[label=""cfg_goto""];\n	""37"" -> ""51""[label=""cfg_false""];\n	""37"" -> ""57""[label=""cfg_true""];\n	""38"" -> ""35""[label=""cfg_false""];\n	""38"" -> ""50""[label=""cfg_true""];\n	""39"" -> ""30""[label=""cfg_true""];\n	""39"" -> ""55""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""13""[label=""cfg_false""];\n	""40"" -> ""31""[label=""cfg_true""];\n	""41"" -> ""10""[label=""cfg_false""];\n	""41"" -> ""9""[label=""cfg_true""];\n	""42"" -> ""27""[label=""cfg_true""];\n	""42"" -> ""58""[label=""cfg_false""];\n	""43"" -> ""26""[label=""cfg_false""];\n	""43"" -> ""28""[label=""cfg_true""];\n	""44"" -> ""18""[label=""cfg_true""];\n	""44"" -> ""68""[label=""cfg_false""];\n	""45"" -> ""21""[label=""cfg_false""];\n	""45"" -> ""59""[label=""cfg_true""];\n	""46"" -> ""14""[label=""cfg_false""];\n	""46"" -> ""56""[label=""cfg_true""];\n	""47"" -> ""11""[label=""cfg_true""];\n	""47"" -> ""12""[label=""cfg_false""];\n	""48"" -> ""34""[label=""cfg_next""];\n	""49"" -> ""56""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""61""[label=""cfg_next""];\n	""51"" -> ""52""[label=""cfg_next""];\n	""52"" -> ""57""[label=""cfg_next""];\n	""53"" -> ""60""[label=""cfg_next""];\n	""54"" -> ""46""[label=""cfg_next""];\n	""55"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""47""[label=""cfg_next""];\n	""61"" -> ""36""[label=""cfg_next""];\n	""62"" -> ""44""[label=""cfg_next""];\n	""63"" -> ""69""[label=""cfg_next""];\n	""64"" -> ""23""[label=""cfg_next""];\n	""65"" -> ""70""[label=""cfg_next""];\n	""66"" -> ""3""[label=""cfg_next""];\n	""67"" -> ""59""[label=""cfg_next""];\n	""68"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""63""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.getValue(Object,int)",Method,* Returns the index'th element of the supplied collection.\n     * @param collection to read\n     * @param index int\n     * @return collection[index],"public static Object getValue(Object collection, final int index) {\n    collection = getValue(collection);\n    Object value = collection;\n    if (collection != null) {\n        if (collection.getClass().isArray()) {\n            if (index < 0 || index >= Array.getLength(collection)) {\n                return null;\n            }\n            value = Array.get(collection, index);\n        } else if (collection instanceof List) {\n            if (index < 0 || index >= ((List) collection).size()) {\n                return null;\n            }\n            value = ((List) collection).get(index);\n        } else if (collection instanceof Collection) {\n            if (index < 0 || index >= ((Collection) collection).size()) {\n                return null;\n            }\n            int i = 0;\n            final Iterator it = ((Collection) collection).iterator();\n            for (; i < index; i++) {\n                it.next();\n            }\n            if (it.hasNext()) {\n                value = it.next();\n            } else {\n                value = null;\n            }\n        }\n    }\n    return value;\n}","java.lang.Object getValue(java.lang.Object,int)","digraph cfg_getValue {\n	""1"" [label=""$stack10 = interfaceinvoke $stack9.<java.util.Collection: int size()>()""];\n	""2"" [label=""$stack11 = (java.util.Collection) collection""];\n	""3"" [label=""$stack12 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack13 = (java.util.List) collection""];\n	""5"" [label=""$stack14 = interfaceinvoke $stack13.<java.util.List: int size()>()""];\n	""6"" [label=""$stack15 = (java.util.List) collection""];\n	""7"" [label=""$stack16 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(collection)""];\n	""8"" [label=""$stack5 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""9"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.Class: boolean isArray()>()""];\n	""10"" [label=""$stack7 = collection instanceof java.util.List""];\n	""11"" [label=""$stack8 = collection instanceof java.util.Collection""];\n	""12"" [label=""$stack9 = (java.util.Collection) collection""];\n	""13"" [label=""collection := @parameter0: java.lang.Object""];\n	""14"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>(collection)""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""i = 0""];\n	""20"" [label=""i = i + 1""];\n	""21"" [label=""if $stack12 == 0""];\n	""22"" [label=""if $stack6 == 0""];\n	""23"" [label=""if $stack7 == 0""];\n	""24"" [label=""if $stack8 == 0""];\n	""25"" [label=""if collection == null""];\n	""26"" [label=""if i >= index""];\n	""27"" [label=""if index < $stack10""];\n	""28"" [label=""if index < $stack14""];\n	""29"" [label=""if index < $stack16""];\n	""30"" [label=""if index < 0""];\n	""31"" [label=""if index < 0""];\n	""32"" [label=""if index < 0""];\n	""33"" [label=""index := @parameter1: int""];\n	""34"" [label=""interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""35"" [label=""it = interfaceinvoke $stack11.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""36"" [label=""return null""];\n	""37"" [label=""return null""];\n	""38"" [label=""return null""];\n	""39"" [label=""return value""];\n	""40"" [label=""value = collection""];\n	""41"" [label=""value = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(index)""];\n	""42"" [label=""value = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""43"" [label=""value = null""];\n	""44"" [label=""value = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(collection, index)""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""24""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""33""[label=""cfg_next""];\n	""14"" -> ""40""[label=""cfg_next""];\n	""15"" -> ""39""[label=""cfg_goto""];\n	""16"" -> ""39""[label=""cfg_goto""];\n	""17"" -> ""26""[label=""cfg_goto""];\n	""18"" -> ""39""[label=""cfg_goto""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""35""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""42""[label=""cfg_false""];\n	""21"" -> ""43""[label=""cfg_true""];\n	""22"" -> ""10""[label=""cfg_true""];\n	""22"" -> ""30""[label=""cfg_false""];\n	""23"" -> ""11""[label=""cfg_true""];\n	""23"" -> ""31""[label=""cfg_false""];\n	""24"" -> ""32""[label=""cfg_false""];\n	""24"" -> ""39""[label=""cfg_true""];\n	""25"" -> ""39""[label=""cfg_true""];\n	""25"" -> ""8""[label=""cfg_false""];\n	""26"" -> ""3""[label=""cfg_true""];\n	""26"" -> ""34""[label=""cfg_false""];\n	""27"" -> ""19""[label=""cfg_true""];\n	""27"" -> ""38""[label=""cfg_false""];\n	""28"" -> ""37""[label=""cfg_false""];\n	""28"" -> ""6""[label=""cfg_true""];\n	""29"" -> ""36""[label=""cfg_false""];\n	""29"" -> ""44""[label=""cfg_true""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""30"" -> ""36""[label=""cfg_true""];\n	""30"" -> ""7""[label=""cfg_false""];\n	""31"" -> ""37""[label=""cfg_true""];\n	""31"" -> ""4""[label=""cfg_false""];\n	""32"" -> ""12""[label=""cfg_false""];\n	""32"" -> ""38""[label=""cfg_true""];\n	""33"" -> ""14""[label=""cfg_next""];\n	""34"" -> ""20""[label=""cfg_next""];\n	""35"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""25""[label=""cfg_next""];\n	""41"" -> ""16""[label=""cfg_next""];\n	""42"" -> ""18""[label=""cfg_next""];\n	""43"" -> ""39""[label=""cfg_next""];\n	""44"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""28""[label=""cfg_next""];\n	""6"" -> ""41""[label=""cfg_next""];\n	""7"" -> ""29""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.setValue(Object,int,Object)",Method,* Modifies the index'th element of the supplied collection.\n     * Converts the value to the required type if necessary.\n     * @param collection to edit\n     * @param index to replace\n     * @param value new value,"public static void setValue(Object collection, final int index, final Object value) {\n    collection = getValue(collection);\n    if (collection != null) {\n        if (collection.getClass().isArray()) {\n            Array.set(collection, index, convert(value, collection.getClass().getComponentType()));\n        } else if (collection instanceof List) {\n            ((List) collection).set(index, value);\n        } else if (collection instanceof Collection) {\n            throw new UnsupportedOperationException(""Cannot set value of an element of a "" + collection.getClass().getName());\n        }\n    }\n}","void setValue(java.lang.Object,int,java.lang.Object)","digraph cfg_setValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot set value of an element of a \"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = new java.lang.UnsupportedOperationException""];\n	""5"" [label=""$stack14 = (java.util.List) collection""];\n	""6"" [label=""$stack15 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""8"" [label=""$stack17 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, $stack16)""];\n	""9"" [label=""$stack3 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""10"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.Class: boolean isArray()>()""];\n	""11"" [label=""$stack5 = collection instanceof java.util.List""];\n	""12"" [label=""$stack6 = collection instanceof java.util.Collection""];\n	""13"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""14"" [label=""$stack8 = virtualinvoke collection.<java.lang.Object: java.lang.Class getClass()>()""];\n	""15"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.Class: java.lang.String getName()>()""];\n	""16"" [label=""collection := @parameter0: java.lang.Object""];\n	""17"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>(collection)""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack4 == 0""];\n	""21"" [label=""if $stack5 == 0""];\n	""22"" [label=""if $stack6 == 0""];\n	""23"" [label=""if collection == null""];\n	""24"" [label=""index := @parameter1: int""];\n	""25"" [label=""interfaceinvoke $stack14.<java.util.List: java.lang.Object set(int,java.lang.Object)>(index, value)""];\n	""26"" [label=""return""];\n	""27"" [label=""specialinvoke $stack13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack12)""];\n	""28"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""29"" [label=""staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(collection, index, $stack17)""];\n	""30"" [label=""throw $stack13""];\n	""31"" [label=""value := @parameter2: java.lang.Object""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""20""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""23""[label=""cfg_next""];\n	""18"" -> ""26""[label=""cfg_goto""];\n	""19"" -> ""26""[label=""cfg_goto""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_true""];\n	""20"" -> ""6""[label=""cfg_false""];\n	""21"" -> ""12""[label=""cfg_true""];\n	""21"" -> ""5""[label=""cfg_false""];\n	""22"" -> ""26""[label=""cfg_true""];\n	""22"" -> ""4""[label=""cfg_false""];\n	""23"" -> ""26""[label=""cfg_true""];\n	""23"" -> ""9""[label=""cfg_false""];\n	""24"" -> ""31""[label=""cfg_next""];\n	""25"" -> ""19""[label=""cfg_next""];\n	""27"" -> ""30""[label=""cfg_next""];\n	""28"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""27""[label=""cfg_next""];\n	""31"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""25""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.getValue(Object,PropertyDescriptor)",Method,* Returns the value of the bean's property represented by\n     * the supplied property descriptor.\n     * @param bean to read\n     * @param propertyDescriptor indicating what to read\n     * @return Object value,"public static Object getValue(final Object bean, final PropertyDescriptor propertyDescriptor) {\n    Object value;\n    try {\n        final Method method = getAccessibleMethod(propertyDescriptor.getReadMethod());\n        if (method == null) {\n            throw new JXPathException(""No read method"");\n        }\n        value = method.invoke(bean);\n    } catch (final Exception ex) {\n        throw new JXPathException(""Cannot access property: "" + (bean == null ? ""null"" : bean.getClass().getName()) + ""."" + propertyDescriptor.getName(), ex);\n    }\n    return value;\n}","java.lang.Object getValue(java.lang.Object,java.beans.PropertyDescriptor)","digraph cfg_getValue {\n	""1"" [label=""$stack10 = \""null\""""];\n	""2"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.Class: java.lang.String getName()>()""];\n	""3"" [label=""$stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot access property: \"")""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)""];\n	""5"" [label=""$stack13 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""6"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"".\"")""];\n	""7"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack17 = new org.apache.commons.jxpath.JXPathException""];\n	""10"" [label=""$stack4 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.reflect.Method getReadMethod()>()""];\n	""11"" [label=""$stack5 = newarray (java.lang.Object)[0]""];\n	""12"" [label=""$stack6 = new org.apache.commons.jxpath.JXPathException""];\n	""13"" [label=""$stack7 := @caughtexception""];\n	""14"" [label=""$stack8 = new java.lang.StringBuilder""];\n	""15"" [label=""$stack9 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""16"" [label=""bean := @parameter0: java.lang.Object""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""if bean != null""];\n	""20"" [label=""if method != null""];\n	""21"" [label=""method = $stack7""];\n	""22"" [label=""method = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method)>($stack4)""];\n	""23"" [label=""propertyDescriptor := @parameter1: java.beans.PropertyDescriptor""];\n	""24"" [label=""return value""];\n	""25"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack16, method)""];\n	""26"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""No read method\"")""];\n	""27"" [label=""specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>()""];\n	""28"" [label=""throw $stack17""];\n	""29"" [label=""throw $stack6""];\n	""30"" [label=""value = virtualinvoke method.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(bean, $stack5)""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_except""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_except""];\n	""11"" -> ""30""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_except""];\n	""12"" -> ""26""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_next""];\n	""17"" -> ""4""[label=""cfg_goto""];\n	""18"" -> ""24""[label=""cfg_goto""];\n	""19"" -> ""1""[label=""cfg_false""];\n	""19"" -> ""15""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_true""];\n	""20"" -> ""12""[label=""cfg_false""];\n	""20"" -> ""13""[label=""cfg_except""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""22"" -> ""13""[label=""cfg_except""];\n	""22"" -> ""20""[label=""cfg_next""];\n	""23"" -> ""10""[label=""cfg_next""];\n	""25"" -> ""28""[label=""cfg_next""];\n	""26"" -> ""13""[label=""cfg_except""];\n	""26"" -> ""29""[label=""cfg_next""];\n	""27"" -> ""3""[label=""cfg_next""];\n	""29"" -> ""13""[label=""cfg_except""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_except""];\n	""30"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.setValue(Object,PropertyDescriptor,Object)",Method,* Modifies the value of the bean's property represented by\n     * the supplied property descriptor.\n     * @param bean to read\n     * @param propertyDescriptor indicating what to read\n     * @param value to set,"public static void setValue(final Object bean, final PropertyDescriptor propertyDescriptor, Object value) {\n    try {\n        final Method method = getAccessibleMethod(propertyDescriptor.getWriteMethod());\n        if (method == null) {\n            throw new JXPathException(""No write method"");\n        }\n        value = convert(value, propertyDescriptor.getPropertyType());\n        method.invoke(bean, value);\n    } catch (final Exception ex) {\n        throw new JXPathException(""Cannot modify property: "" + (bean == null ? ""null"" : bean.getClass().getName()) + ""."" + propertyDescriptor.getName(), ex);\n    }\n}","void setValue(java.lang.Object,java.beans.PropertyDescriptor,java.lang.Object)","digraph cfg_setValue {\n	""1"" [label=""$stack10 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack11 = \""null\""""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getName()>()""];\n	""4"" [label=""$stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot modify property: \"")""];\n	""5"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""6"" [label=""$stack14 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""7"" [label=""$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"".\"")""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)""];\n	""9"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack18 = new org.apache.commons.jxpath.JXPathException""];\n	""11"" [label=""$stack4 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.reflect.Method getWriteMethod()>()""];\n	""12"" [label=""$stack5 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>()""];\n	""13"" [label=""$stack6 = newarray (java.lang.Object)[1]""];\n	""14"" [label=""$stack6[0] = value""];\n	""15"" [label=""$stack7 = new org.apache.commons.jxpath.JXPathException""];\n	""16"" [label=""$stack8 := @caughtexception""];\n	""17"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""18"" [label=""bean := @parameter0: java.lang.Object""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""if bean != null""];\n	""22"" [label=""if method != null""];\n	""23"" [label=""method = $stack8""];\n	""24"" [label=""method = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method)>($stack4)""];\n	""25"" [label=""propertyDescriptor := @parameter1: java.beans.PropertyDescriptor""];\n	""26"" [label=""return""];\n	""27"" [label=""specialinvoke $stack18.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack17, method)""];\n	""28"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""No write method\"")""];\n	""29"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""30"" [label=""throw $stack18""];\n	""31"" [label=""throw $stack7""];\n	""32"" [label=""value := @parameter2: java.lang.Object""];\n	""33"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, $stack5)""];\n	""34"" [label=""virtualinvoke method.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(bean, $stack6)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""16""[label=""cfg_except""];\n	""11"" -> ""24""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_except""];\n	""12"" -> ""33""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_except""];\n	""14"" -> ""16""[label=""cfg_except""];\n	""14"" -> ""34""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_except""];\n	""15"" -> ""28""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_goto""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_goto""];\n	""21"" -> ""1""[label=""cfg_true""];\n	""21"" -> ""2""[label=""cfg_false""];\n	""22"" -> ""12""[label=""cfg_true""];\n	""22"" -> ""15""[label=""cfg_false""];\n	""22"" -> ""16""[label=""cfg_except""];\n	""23"" -> ""10""[label=""cfg_next""];\n	""24"" -> ""16""[label=""cfg_except""];\n	""24"" -> ""22""[label=""cfg_next""];\n	""25"" -> ""32""[label=""cfg_next""];\n	""27"" -> ""30""[label=""cfg_next""];\n	""28"" -> ""16""[label=""cfg_except""];\n	""28"" -> ""31""[label=""cfg_next""];\n	""29"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""31"" -> ""16""[label=""cfg_except""];\n	""32"" -> ""11""[label=""cfg_next""];\n	""33"" -> ""13""[label=""cfg_next""];\n	""33"" -> ""16""[label=""cfg_except""];\n	""34"" -> ""16""[label=""cfg_except""];\n	""34"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""27""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.convert(Object,Class)",Method,* Convert value to type.\n     * @param value Object\n     * @param type destination\n     * @return conversion result,"private static Object convert(final Object value, final Class type) {\n    try {\n        return TypeUtils.convert(value, type);\n    } catch (final Exception ex) {\n        throw new JXPathException(""Cannot convert value of class "" + (value == null ? ""null"" : value.getClass().getName()) + "" to type "" + type, ex);\n    }\n}","java.lang.Object convert(java.lang.Object,java.lang.Class)","digraph cfg_convert {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" to type \"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.JXPathException""];\n	""5"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, type)""];\n	""6"" [label=""$stack4 := @caughtexception""];\n	""7"" [label=""$stack5 = new java.lang.StringBuilder""];\n	""8"" [label=""$stack6 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""9"" [label=""$stack7 = \""null\""""];\n	""10"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.Class: java.lang.String getName()>()""];\n	""11"" [label=""$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot convert value of class \"")""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""13"" [label=""ex = $stack4""];\n	""14"" [label=""goto""];\n	""15"" [label=""if value != null""];\n	""16"" [label=""return $stack3""];\n	""17"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack12, ex)""];\n	""18"" [label=""specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>()""];\n	""19"" [label=""throw $stack13""];\n	""20"" [label=""type := @parameter1: java.lang.Class""];\n	""21"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_goto""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""15"" -> ""9""[label=""cfg_false""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_except""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.util.ValueUtils.getValue(Object,PropertyDescriptor,int)",Method,* Returns the index'th element of the bean's property represented by\n     * the supplied property descriptor.\n     * @param bean to read\n     * @param propertyDescriptor indicating what to read\n     * @param index int\n     * @return Object,"public static Object getValue(final Object bean, final PropertyDescriptor propertyDescriptor, final int index) {\n    if (propertyDescriptor instanceof IndexedPropertyDescriptor) {\n        try {\n            final IndexedPropertyDescriptor ipd = (IndexedPropertyDescriptor) propertyDescriptor;\n            final Method method = ipd.getIndexedReadMethod();\n            if (method != null) {\n                return method.invoke(bean, Integer.valueOf(index));\n            }\n        } catch (final InvocationTargetException ex) {\n            final Throwable t = ex.getTargetException();\n            if (t instanceof IndexOutOfBoundsException) {\n                return null;\n            }\n            throw new JXPathException(""Cannot access property: "" + propertyDescriptor.getName(), t);\n        } catch (final Throwable ex) {\n            throw new JXPathException(""Cannot access property: "" + propertyDescriptor.getName(), ex);\n        }\n    }\n    // We will fall through if there is no indexed read\n    return getValue(getValue(bean, propertyDescriptor), index);\n}","java.lang.Object getValue(java.lang.Object,java.beans.PropertyDescriptor,int)","digraph cfg_getValue {\n	""1"" [label=""$stack10 = virtualinvoke method.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(bean, $stack8)""];\n	""2"" [label=""$stack11 := @caughtexception""];\n	""3"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack13 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot access property: \"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack17 = new org.apache.commons.jxpath.JXPathException""];\n	""9"" [label=""$stack18 := @caughtexception""];\n	""10"" [label=""$stack19 = method instanceof java.lang.IndexOutOfBoundsException""];\n	""11"" [label=""$stack20 = new java.lang.StringBuilder""];\n	""12"" [label=""$stack21 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""13"" [label=""$stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot access property: \"")""];\n	""14"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21)""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""16"" [label=""$stack25 = new org.apache.commons.jxpath.JXPathException""];\n	""17"" [label=""$stack5 = propertyDescriptor instanceof java.beans.IndexedPropertyDescriptor""];\n	""18"" [label=""$stack6 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,java.beans.PropertyDescriptor)>(bean, propertyDescriptor)""];\n	""19"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>($stack6, index)""];\n	""20"" [label=""$stack8 = newarray (java.lang.Object)[1]""];\n	""21"" [label=""$stack8[0] = $stack9""];\n	""22"" [label=""$stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(index)""];\n	""23"" [label=""bean := @parameter0: java.lang.Object""];\n	""24"" [label=""goto""];\n	""25"" [label=""if $stack19 == 0""];\n	""26"" [label=""if $stack5 == 0""];\n	""27"" [label=""if method == null""];\n	""28"" [label=""index := @parameter2: int""];\n	""29"" [label=""ipd = $stack11""];\n	""30"" [label=""ipd = $stack18""];\n	""31"" [label=""ipd = (java.beans.IndexedPropertyDescriptor) propertyDescriptor""];\n	""32"" [label=""method = virtualinvoke ipd.<java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getIndexedReadMethod()>()""];\n	""33"" [label=""method = virtualinvoke ipd.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()""];\n	""34"" [label=""propertyDescriptor := @parameter1: java.beans.PropertyDescriptor""];\n	""35"" [label=""return $stack10""];\n	""36"" [label=""return $stack7""];\n	""37"" [label=""return null""];\n	""38"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()""];\n	""39"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack16, ipd)""];\n	""40"" [label=""specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>()""];\n	""41"" [label=""specialinvoke $stack25.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack24, method)""];\n	""42"" [label=""throw $stack17""];\n	""43"" [label=""throw $stack25""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""1"" -> ""35""[label=""cfg_next""];\n	""1"" -> ""9""[label=""cfg_except""];\n	""10"" -> ""25""[label=""cfg_next""];\n	""11"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""41""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""26""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""36""[label=""cfg_next""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_except""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_except""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""2""[label=""cfg_except""];\n	""21"" -> ""9""[label=""cfg_except""];\n	""22"" -> ""2""[label=""cfg_except""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""22"" -> ""9""[label=""cfg_except""];\n	""23"" -> ""34""[label=""cfg_next""];\n	""24"" -> ""18""[label=""cfg_goto""];\n	""25"" -> ""16""[label=""cfg_true""];\n	""25"" -> ""37""[label=""cfg_false""];\n	""26"" -> ""18""[label=""cfg_true""];\n	""26"" -> ""31""[label=""cfg_false""];\n	""27"" -> ""2""[label=""cfg_except""];\n	""27"" -> ""20""[label=""cfg_false""];\n	""27"" -> ""24""[label=""cfg_true""];\n	""27"" -> ""9""[label=""cfg_except""];\n	""28"" -> ""17""[label=""cfg_next""];\n	""29"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""38""[label=""cfg_next""];\n	""30"" -> ""33""[label=""cfg_next""];\n	""31"" -> ""2""[label=""cfg_except""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""31"" -> ""9""[label=""cfg_except""];\n	""32"" -> ""2""[label=""cfg_except""];\n	""32"" -> ""27""[label=""cfg_next""];\n	""32"" -> ""9""[label=""cfg_except""];\n	""33"" -> ""10""[label=""cfg_next""];\n	""34"" -> ""28""[label=""cfg_next""];\n	""38"" -> ""5""[label=""cfg_next""];\n	""39"" -> ""42""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""40"" -> ""13""[label=""cfg_next""];\n	""41"" -> ""43""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""39""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""30""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.setValue(Object,PropertyDescriptor,int,Object)",Method,* Modifies the index'th element of the bean's property represented by\n     * the supplied property descriptor. Converts the value to the required\n     * type if necessary.\n     * @param bean to edit\n     * @param propertyDescriptor indicating what to set\n     * @param index int\n     * @param value to set,"public static void setValue(final Object bean, final PropertyDescriptor propertyDescriptor, final int index, final Object value) {\n    if (propertyDescriptor instanceof IndexedPropertyDescriptor) {\n        try {\n            final IndexedPropertyDescriptor ipd = (IndexedPropertyDescriptor) propertyDescriptor;\n            final Method method = ipd.getIndexedWriteMethod();\n            if (method != null) {\n                method.invoke(bean, Integer.valueOf(index), convert(value, ipd.getIndexedPropertyType()));\n                return;\n            }\n        } catch (final Exception ex) {\n            throw new IllegalArgumentException(""Cannot access property: "" + propertyDescriptor.getName() + "", "" + ex.getMessage());\n        }\n    }\n    // We will fall through if there is no indexed read\n    final Object collection = getValue(bean, propertyDescriptor);\n    if (isCollection(collection)) {\n        setValue(collection, index, value);\n    } else if (index == 0) {\n        setValue(bean, propertyDescriptor, value);\n    } else {\n        throw new IllegalArgumentException(""Not a collection: "" + propertyDescriptor.getName());\n    }\n}","void setValue(java.lang.Object,java.beans.PropertyDescriptor,int,java.lang.Object)","digraph cfg_setValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Not a collection: \"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = new java.lang.IllegalArgumentException""];\n	""5"" [label=""$stack14 = newarray (java.lang.Object)[2]""];\n	""6"" [label=""$stack14[0] = $stack15""];\n	""7"" [label=""$stack14[1] = $stack17""];\n	""8"" [label=""$stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(index)""];\n	""9"" [label=""$stack16 = virtualinvoke ipd.<java.beans.IndexedPropertyDescriptor: java.lang.Class getIndexedPropertyType()>()""];\n	""10"" [label=""$stack17 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, $stack16)""];\n	""11"" [label=""$stack18 := @caughtexception""];\n	""12"" [label=""$stack19 = new java.lang.StringBuilder""];\n	""13"" [label=""$stack20 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""14"" [label=""$stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot access property: \"")""];\n	""15"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20)""];\n	""16"" [label=""$stack23 = virtualinvoke ipd.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""17"" [label=""$stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", \"")""];\n	""18"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23)""];\n	""19"" [label=""$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""20"" [label=""$stack27 = new java.lang.IllegalArgumentException""];\n	""21"" [label=""$stack6 = propertyDescriptor instanceof java.beans.IndexedPropertyDescriptor""];\n	""22"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(ipd)""];\n	""23"" [label=""$stack8 = new java.lang.StringBuilder""];\n	""24"" [label=""$stack9 = virtualinvoke propertyDescriptor.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""25"" [label=""bean := @parameter0: java.lang.Object""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""if $stack6 == 0""];\n	""30"" [label=""if $stack7 == 0""];\n	""31"" [label=""if index != 0""];\n	""32"" [label=""if method == null""];\n	""33"" [label=""index := @parameter2: int""];\n	""34"" [label=""ipd = $stack18""];\n	""35"" [label=""ipd = (java.beans.IndexedPropertyDescriptor) propertyDescriptor""];\n	""36"" [label=""ipd = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,java.beans.PropertyDescriptor)>(bean, propertyDescriptor)""];\n	""37"" [label=""method = virtualinvoke ipd.<java.beans.IndexedPropertyDescriptor: java.lang.reflect.Method getIndexedWriteMethod()>()""];\n	""38"" [label=""propertyDescriptor := @parameter1: java.beans.PropertyDescriptor""];\n	""39"" [label=""return""];\n	""40"" [label=""return""];\n	""41"" [label=""specialinvoke $stack13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack12)""];\n	""42"" [label=""specialinvoke $stack19.<java.lang.StringBuilder: void <init>()>()""];\n	""43"" [label=""specialinvoke $stack27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack26)""];\n	""44"" [label=""specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>()""];\n	""45"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,int,java.lang.Object)>(ipd, index, value)""];\n	""46"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,java.beans.PropertyDescriptor,java.lang.Object)>(bean, propertyDescriptor, value)""];\n	""47"" [label=""throw $stack13""];\n	""48"" [label=""throw $stack27""];\n	""49"" [label=""value := @parameter3: java.lang.Object""];\n	""50"" [label=""virtualinvoke method.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(bean, $stack14)""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_except""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""34""[label=""cfg_next""];\n	""12"" -> ""42""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""43""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""29""[label=""cfg_next""];\n	""22"" -> ""30""[label=""cfg_next""];\n	""23"" -> ""44""[label=""cfg_next""];\n	""24"" -> ""2""[label=""cfg_next""];\n	""25"" -> ""38""[label=""cfg_next""];\n	""26"" -> ""36""[label=""cfg_goto""];\n	""27"" -> ""40""[label=""cfg_goto""];\n	""28"" -> ""40""[label=""cfg_goto""];\n	""29"" -> ""35""[label=""cfg_false""];\n	""29"" -> ""36""[label=""cfg_true""];\n	""3"" -> ""41""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_true""];\n	""30"" -> ""45""[label=""cfg_false""];\n	""31"" -> ""4""[label=""cfg_true""];\n	""31"" -> ""46""[label=""cfg_false""];\n	""32"" -> ""11""[label=""cfg_except""];\n	""32"" -> ""26""[label=""cfg_true""];\n	""32"" -> ""5""[label=""cfg_false""];\n	""33"" -> ""49""[label=""cfg_next""];\n	""34"" -> ""20""[label=""cfg_next""];\n	""35"" -> ""11""[label=""cfg_except""];\n	""35"" -> ""37""[label=""cfg_next""];\n	""36"" -> ""22""[label=""cfg_next""];\n	""37"" -> ""11""[label=""cfg_except""];\n	""37"" -> ""32""[label=""cfg_next""];\n	""38"" -> ""33""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""41"" -> ""47""[label=""cfg_next""];\n	""42"" -> ""14""[label=""cfg_next""];\n	""43"" -> ""48""[label=""cfg_next""];\n	""44"" -> ""1""[label=""cfg_next""];\n	""45"" -> ""27""[label=""cfg_next""];\n	""46"" -> ""28""[label=""cfg_next""];\n	""49"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_except""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""50"" -> ""11""[label=""cfg_except""];\n	""50"" -> ""39""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_except""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_except""];\n	""7"" -> ""50""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_except""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_except""];\n}\n","public , static "
org.apache.commons.jxpath.util.ValueUtils.getValue(Object),Method,"* If the parameter is a container, opens the container and\n     * return the contents.  The method is recursive.\n     * @param object to read\n     * @return Object",public static Object getValue(Object object) {\n    while (object instanceof Container) {\n        object = ((Container) object).getValue();\n    }\n    return object;\n},java.lang.Object getValue(java.lang.Object),"digraph cfg_getValue {\n	""1"" [label=""$stack1 = object instanceof org.apache.commons.jxpath.Container""];\n	""2"" [label=""$stack2 = (org.apache.commons.jxpath.Container) object""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""object := @parameter0: java.lang.Object""];\n	""6"" [label=""object = interfaceinvoke $stack2.<org.apache.commons.jxpath.Container: java.lang.Object getValue()>()""];\n	""7"" [label=""return object""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_goto""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.util.ValueUtils.getDynamicPropertyHandler(Class),Method,* Returns a shared instance of the dynamic property handler class\n     * returned by {@code getDynamicPropertyHandlerClass()}.\n     * @param clazz to handle\n     * @return DynamicPropertyHandler,"public static DynamicPropertyHandler getDynamicPropertyHandler(final Class clazz) {\n    return (DynamicPropertyHandler) dynamicPropertyHandlerMap.computeIfAbsent(clazz, k -> {\n        try {\n            return (DynamicPropertyHandler) clazz.getConstructor().newInstance();\n        } catch (final Exception ex) {\n            throw new JXPathException(""Cannot allocate dynamic property handler of class "" + clazz.getName(), ex);\n        }\n    });\n}",org.apache.commons.jxpath.DynamicPropertyHandler getDynamicPropertyHandler(java.lang.Class),"digraph cfg_getDynamicPropertyHandler {\n	""1"" [label=""$stack1 = <org.apache.commons.jxpath.util.ValueUtils: java.util.Map dynamicPropertyHandlerMap>""];\n	""2"" [label=""$stack2 = dynamicinvoke \""apply\"" <java.util.function.Function (java.lang.Class)>(clazz) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: \""REF_INVOKE_STATIC\"" <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object lambda$getDynamicPropertyHandler$0(java.lang.Class,java.lang.Object)>, methodtype: java.lang.Object __METHODTYPE__(java.lang.Object))""];\n	""3"" [label=""$stack3 = interfaceinvoke $stack1.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(clazz, $stack2)""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.DynamicPropertyHandler) $stack3""];\n	""5"" [label=""clazz := @parameter0: java.lang.Class""];\n	""6"" [label=""return $stack4""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.util.ValueUtils.getAccessibleMethod(Method),Method,"* Gets an accessible method (that is, one that can be invoked via\n     * reflection) that implements the specified Method.  If no such method\n     * can be found, return {@code null}.\n     *\n     * @param method The method that we wish to call\n     * @return Method","public static Method getAccessibleMethod(final Method method) {\n    // Make sure we have a method to check\n    if (method == null) {\n        return null;\n    }\n    // If the requested method is not public we cannot call it\n    if (!Modifier.isPublic(method.getModifiers())) {\n        return null;\n    }\n    // If the declaring class is public, we are done\n    Class clazz = method.getDeclaringClass();\n    if (Modifier.isPublic(clazz.getModifiers())) {\n        return method;\n    }\n    final String name = method.getName();\n    final Class[] parameterTypes = method.getParameterTypes();\n    while (clazz != null) {\n        // Check the implemented interfaces and subinterfaces\n        final Method aMethod = getAccessibleMethodFromInterfaceNest(clazz, name, parameterTypes);\n        if (aMethod != null) {\n            return aMethod;\n        }\n        clazz = clazz.getSuperclass();\n        if (clazz != null && Modifier.isPublic(clazz.getModifiers())) {\n            try {\n                return clazz.getDeclaredMethod(name, parameterTypes);\n            } catch (final NoSuchMethodException ignore) {\n                // NOPMD\n                //ignore\n            }\n        }\n    }\n    return null;\n}",java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method),"digraph cfg_getAccessibleMethod {\n	""1"" [label=""$stack10 = virtualinvoke clazz.<java.lang.Class: int getModifiers()>()""];\n	""2"" [label=""$stack11 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($stack10)""];\n	""3"" [label=""$stack12 = virtualinvoke clazz.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(name, parameterTypes)""];\n	""4"" [label=""$stack13 := @caughtexception""];\n	""5"" [label=""$stack6 = virtualinvoke method.<java.lang.reflect.Method: int getModifiers()>()""];\n	""6"" [label=""$stack7 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($stack6)""];\n	""7"" [label=""$stack8 = virtualinvoke clazz.<java.lang.Class: int getModifiers()>()""];\n	""8"" [label=""$stack9 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($stack8)""];\n	""9"" [label=""aMethod = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])>(clazz, name, parameterTypes)""];\n	""10"" [label=""clazz = virtualinvoke clazz.<java.lang.Class: java.lang.Class getSuperclass()>()""];\n	""11"" [label=""clazz = virtualinvoke method.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>()""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack11 == 0""];\n	""14"" [label=""if $stack7 != 0""];\n	""15"" [label=""if $stack9 == 0""];\n	""16"" [label=""if aMethod == null""];\n	""17"" [label=""if clazz == null""];\n	""18"" [label=""if clazz == null""];\n	""19"" [label=""if method != null""];\n	""20"" [label=""l5 = $stack13""];\n	""21"" [label=""method := @parameter0: java.lang.reflect.Method""];\n	""22"" [label=""name = virtualinvoke method.<java.lang.reflect.Method: java.lang.String getName()>()""];\n	""23"" [label=""parameterTypes = virtualinvoke method.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>()""];\n	""24"" [label=""return $stack12""];\n	""25"" [label=""return aMethod""];\n	""26"" [label=""return method""];\n	""27"" [label=""return null""];\n	""28"" [label=""return null""];\n	""29"" [label=""return null""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_goto""];\n	""13"" -> ""12""[label=""cfg_true""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""14"" -> ""11""[label=""cfg_true""];\n	""14"" -> ""28""[label=""cfg_false""];\n	""15"" -> ""22""[label=""cfg_true""];\n	""15"" -> ""26""[label=""cfg_false""];\n	""16"" -> ""10""[label=""cfg_true""];\n	""16"" -> ""25""[label=""cfg_false""];\n	""17"" -> ""29""[label=""cfg_true""];\n	""17"" -> ""9""[label=""cfg_false""];\n	""18"" -> ""1""[label=""cfg_false""];\n	""18"" -> ""12""[label=""cfg_true""];\n	""19"" -> ""27""[label=""cfg_false""];\n	""19"" -> ""5""[label=""cfg_true""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_except""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.ValueUtils.getAccessibleMethodFromInterfaceNest(Class,String,Class[])",Method,"* Gets an accessible method (that is, one that can be invoked via\n     * reflection) that implements the specified method, by scanning through\n     * all implemented interfaces and subinterfaces.  If no such Method\n     * can be found, return {@code null}.\n     *\n     * @param clazz Parent class for the interfaces to be checked\n     * @param methodName Method name of the method we wish to call\n     * @param parameterTypes The parameter type signatures\n     * @return Method","private static Method getAccessibleMethodFromInterfaceNest(final Class clazz, final String methodName, final Class[] parameterTypes) {\n    Method method = null;\n    // Check the implemented interfaces of the parent class\n    final Class[] interfaces = clazz.getInterfaces();\n    for (final Class element : interfaces) {\n        // Is this interface public?\n        if (!Modifier.isPublic(element.getModifiers())) {\n            continue;\n        }\n        // Does the method exist on this interface?\n        try {\n            method = element.getDeclaredMethod(methodName, parameterTypes);\n        } catch (final NoSuchMethodException ignore) {\n            // NOPMD\n            // ignore\n        }\n        if (method != null) {\n            break;\n        }\n        // Recursively check our parent interfaces\n        method = getAccessibleMethodFromInterfaceNest(element, methodName, parameterTypes);\n        if (method != null) {\n            break;\n        }\n    }\n    // Return whatever we have found\n    return method;\n}","java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])","digraph cfg_getAccessibleMethodFromInterfaceNest {\n	""1"" [label=""$stack10 = virtualinvoke element.<java.lang.Class: int getModifiers()>()""];\n	""2"" [label=""$stack11 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($stack10)""];\n	""3"" [label=""$stack12 := @caughtexception""];\n	""4"" [label=""clazz := @parameter0: java.lang.Class""];\n	""5"" [label=""element = l5[l7]""];\n	""6"" [label=""goto""];\n	""7"" [label=""goto""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack11 != 0""];\n	""12"" [label=""if l7 >= l6""];\n	""13"" [label=""if method == null""];\n	""14"" [label=""if method == null""];\n	""15"" [label=""interfaces = virtualinvoke clazz.<java.lang.Class: java.lang.Class[] getInterfaces()>()""];\n	""16"" [label=""l5 = interfaces""];\n	""17"" [label=""l6 = lengthof l5""];\n	""18"" [label=""l7 = 0""];\n	""19"" [label=""l7 = l7 + 1""];\n	""20"" [label=""l9 = $stack12""];\n	""21"" [label=""method = null""];\n	""22"" [label=""method = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])>(element, methodName, parameterTypes)""];\n	""23"" [label=""method = virtualinvoke element.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(methodName, parameterTypes)""];\n	""24"" [label=""methodName := @parameter1: java.lang.String""];\n	""25"" [label=""parameterTypes := @parameter2: java.lang.Class[]""];\n	""26"" [label=""return method""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_goto""];\n	""11"" -> ""23""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""26""[label=""cfg_true""];\n	""12"" -> ""5""[label=""cfg_false""];\n	""13"" -> ""22""[label=""cfg_true""];\n	""13"" -> ""8""[label=""cfg_false""];\n	""14"" -> ""19""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""21"" -> ""15""[label=""cfg_next""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""3""[label=""cfg_except""];\n	""23"" -> ""7""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_goto""];\n	""7"" -> ""13""[label=""cfg_goto""];\n	""8"" -> ""26""[label=""cfg_goto""];\n	""9"" -> ""26""[label=""cfg_goto""];\n}\n","private , static "
"org.apache.commons.jxpath.util.MethodLookupUtils.lookupConstructor(Class,Object[])",Method,* Look up a constructor.\n     * @param targetClass the class constructed\n     * @param parameters arguments\n     * @return Constructor found if any.,"public static Constructor lookupConstructor(final Class targetClass, final Object[] parameters) {\n    boolean tryExact = true;\n    final int count = parameters == null ? 0 : parameters.length;\n    final Class[] types = new Class[count];\n    for (int i = 0; i < count; i++) {\n        final Object param = parameters[i];\n        if (param != null) {\n            types[i] = param.getClass();\n        } else {\n            types[i] = null;\n            tryExact = false;\n        }\n    }\n    Constructor constructor = null;\n    if (tryExact) {\n        // First - without type conversion\n        try {\n            constructor = targetClass.getConstructor(types);\n            if (constructor != null) {\n                return constructor;\n            }\n        } catch (final NoSuchMethodException ignore) {\n            // NOPMD\n            // Ignore\n        }\n    }\n    int currentMatch = 0;\n    boolean ambiguous = false;\n    // Then - with type conversion\n    final Constructor[] constructors = targetClass.getConstructors();\n    for (final Constructor constructor2 : constructors) {\n        final int match = matchParameterTypes(constructor2.getParameterTypes(), parameters);\n        if (match != NO_MATCH) {\n            if (match > currentMatch) {\n                constructor = constructor2;\n                currentMatch = match;\n                ambiguous = false;\n            } else if (match == currentMatch) {\n                ambiguous = true;\n            }\n        }\n    }\n    if (ambiguous) {\n        throw new JXPathException(""Ambiguous constructor "" + Arrays.asList(parameters));\n    }\n    return constructor;\n}","java.lang.reflect.Constructor lookupConstructor(java.lang.Class,java.lang.Object[])","digraph cfg_lookupConstructor {\n	""1"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(parameters)""];\n	""3"" [label=""$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Ambiguous constructor \"")""];\n	""4"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15)""];\n	""5"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack19 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""$stack20 = virtualinvoke constructor2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()""];\n	""8"" [label=""$stack21 = i""];\n	""9"" [label=""$stack22 = virtualinvoke param.<java.lang.Object: java.lang.Class getClass()>()""];\n	""10"" [label=""$stack23 := @caughtexception""];\n	""11"" [label=""ambiguous = 0""];\n	""12"" [label=""ambiguous = 0""];\n	""13"" [label=""ambiguous = 1""];\n	""14"" [label=""constructor2 = l9[l11]""];\n	""15"" [label=""constructors = virtualinvoke targetClass.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>()""];\n	""16"" [label=""count = 0""];\n	""17"" [label=""count = lengthof parameters""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""i = 0""];\n	""25"" [label=""i = constructor2""];\n	""26"" [label=""i = i + 1""];\n	""27"" [label=""i = null""];\n	""28"" [label=""i = virtualinvoke targetClass.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(types)""];\n	""29"" [label=""if ambiguous == 0""];\n	""30"" [label=""if i == null""];\n	""31"" [label=""if i >= count""];\n	""32"" [label=""if l11 >= l10""];\n	""33"" [label=""if match != param""];\n	""34"" [label=""if match <= param""];\n	""35"" [label=""if match == 0""];\n	""36"" [label=""if param == null""];\n	""37"" [label=""if parameters != null""];\n	""38"" [label=""if tryExact == 0""];\n	""39"" [label=""l10 = lengthof l9""];\n	""40"" [label=""l11 = 0""];\n	""41"" [label=""l11 = l11 + 1""];\n	""42"" [label=""l9 = constructors""];\n	""43"" [label=""match = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: int matchParameterTypes(java.lang.Class[],java.lang.Object[])>($stack20, parameters)""];\n	""44"" [label=""param = $stack23""];\n	""45"" [label=""param = 0""];\n	""46"" [label=""param = match""];\n	""47"" [label=""param = parameters[i]""];\n	""48"" [label=""parameters := @parameter1: java.lang.Object[]""];\n	""49"" [label=""return $stack21""];\n	""50"" [label=""return i""];\n	""51"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""52"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack18)""];\n	""53"" [label=""targetClass := @parameter0: java.lang.Class""];\n	""54"" [label=""throw $stack19""];\n	""55"" [label=""tryExact = 0""];\n	""56"" [label=""tryExact = 1""];\n	""57"" [label=""types = newarray (java.lang.Class)[count]""];\n	""58"" [label=""types[i] = $stack22""];\n	""59"" [label=""types[i] = null""];\n	""1"" -> ""51""[label=""cfg_next""];\n	""10"" -> ""44""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""41""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""42""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""57""[label=""cfg_next""];\n	""18"" -> ""57""[label=""cfg_goto""];\n	""19"" -> ""26""[label=""cfg_goto""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""31""[label=""cfg_goto""];\n	""21"" -> ""45""[label=""cfg_goto""];\n	""22"" -> ""41""[label=""cfg_goto""];\n	""23"" -> ""32""[label=""cfg_goto""];\n	""24"" -> ""31""[label=""cfg_next""];\n	""25"" -> ""46""[label=""cfg_next""];\n	""26"" -> ""20""[label=""cfg_next""];\n	""27"" -> ""38""[label=""cfg_next""];\n	""28"" -> ""10""[label=""cfg_except""];\n	""28"" -> ""30""[label=""cfg_next""];\n	""29"" -> ""50""[label=""cfg_true""];\n	""29"" -> ""6""[label=""cfg_false""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""10""[label=""cfg_except""];\n	""30"" -> ""21""[label=""cfg_true""];\n	""30"" -> ""8""[label=""cfg_false""];\n	""31"" -> ""27""[label=""cfg_true""];\n	""31"" -> ""47""[label=""cfg_false""];\n	""32"" -> ""14""[label=""cfg_false""];\n	""32"" -> ""29""[label=""cfg_true""];\n	""33"" -> ""13""[label=""cfg_false""];\n	""33"" -> ""41""[label=""cfg_true""];\n	""34"" -> ""25""[label=""cfg_false""];\n	""34"" -> ""33""[label=""cfg_true""];\n	""35"" -> ""34""[label=""cfg_false""];\n	""35"" -> ""41""[label=""cfg_true""];\n	""36"" -> ""59""[label=""cfg_true""];\n	""36"" -> ""9""[label=""cfg_false""];\n	""37"" -> ""16""[label=""cfg_false""];\n	""37"" -> ""17""[label=""cfg_true""];\n	""38"" -> ""28""[label=""cfg_false""];\n	""38"" -> ""45""[label=""cfg_true""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""32""[label=""cfg_next""];\n	""41"" -> ""23""[label=""cfg_next""];\n	""42"" -> ""39""[label=""cfg_next""];\n	""43"" -> ""35""[label=""cfg_next""];\n	""44"" -> ""45""[label=""cfg_next""];\n	""45"" -> ""11""[label=""cfg_next""];\n	""46"" -> ""12""[label=""cfg_next""];\n	""47"" -> ""36""[label=""cfg_next""];\n	""48"" -> ""56""[label=""cfg_next""];\n	""5"" -> ""52""[label=""cfg_next""];\n	""51"" -> ""3""[label=""cfg_next""];\n	""52"" -> ""54""[label=""cfg_next""];\n	""53"" -> ""48""[label=""cfg_next""];\n	""55"" -> ""26""[label=""cfg_next""];\n	""56"" -> ""37""[label=""cfg_next""];\n	""57"" -> ""24""[label=""cfg_next""];\n	""58"" -> ""19""[label=""cfg_next""];\n	""59"" -> ""55""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""43""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_except""];\n	""8"" -> ""49""[label=""cfg_next""];\n	""9"" -> ""58""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.MethodLookupUtils.lookupStaticMethod(Class,String,Object[])",Method,* Look up a static method.\n     * @param targetClass the owning class\n     * @param name method name\n     * @param parameters method parameters\n     * @return Method found if any,"public static Method lookupStaticMethod(final Class targetClass, final String name, final Object[] parameters) {\n    boolean tryExact = true;\n    final int count = parameters == null ? 0 : parameters.length;\n    final Class[] types = new Class[count];\n    for (int i = 0; i < count; i++) {\n        final Object param = parameters[i];\n        if (param != null) {\n            types[i] = param.getClass();\n        } else {\n            types[i] = null;\n            tryExact = false;\n        }\n    }\n    Method method = null;\n    if (tryExact) {\n        // First - without type conversion\n        try {\n            method = targetClass.getMethod(name, types);\n            if (method != null && Modifier.isStatic(method.getModifiers())) {\n                return method;\n            }\n        } catch (final NoSuchMethodException ignore) {\n            // NOPMD\n            // Ignore\n        }\n    }\n    int currentMatch = 0;\n    boolean ambiguous = false;\n    // Then - with type conversion\n    final Method[] methods = targetClass.getMethods();\n    for (final Method method2 : methods) {\n        if (Modifier.isStatic(method2.getModifiers()) && method2.getName().equals(name)) {\n            final int match = matchParameterTypes(method2.getParameterTypes(), parameters);\n            if (match != NO_MATCH) {\n                if (match > currentMatch) {\n                    method = method2;\n                    currentMatch = match;\n                    ambiguous = false;\n                } else if (match == currentMatch) {\n                    ambiguous = true;\n                }\n            }\n        }\n    }\n    if (ambiguous) {\n        throw new JXPathException(""Ambiguous method call: "" + name);\n    }\n    return method;\n}","java.lang.reflect.Method lookupStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[])","digraph cfg_lookupStaticMethod {\n	""1"" [label=""$stack15 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Ambiguous method call: \"")""];\n	""3"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name)""];\n	""4"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack19 = new org.apache.commons.jxpath.JXPathException""];\n	""6"" [label=""$stack20 = virtualinvoke method2.<java.lang.reflect.Method: int getModifiers()>()""];\n	""7"" [label=""$stack21 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($stack20)""];\n	""8"" [label=""$stack22 = virtualinvoke method2.<java.lang.reflect.Method: java.lang.String getName()>()""];\n	""9"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>(name)""];\n	""10"" [label=""$stack24 = virtualinvoke method2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>()""];\n	""11"" [label=""$stack25 = virtualinvoke i.<java.lang.reflect.Method: int getModifiers()>()""];\n	""12"" [label=""$stack26 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($stack25)""];\n	""13"" [label=""$stack27 = i""];\n	""14"" [label=""$stack28 = virtualinvoke param.<java.lang.Object: java.lang.Class getClass()>()""];\n	""15"" [label=""$stack29 := @caughtexception""];\n	""16"" [label=""ambiguous = 0""];\n	""17"" [label=""ambiguous = 0""];\n	""18"" [label=""ambiguous = 1""];\n	""19"" [label=""count = 0""];\n	""20"" [label=""count = lengthof parameters""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""i = 0""];\n	""28"" [label=""i = i + 1""];\n	""29"" [label=""i = method2""];\n	""30"" [label=""i = null""];\n	""31"" [label=""i = virtualinvoke targetClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(name, types)""];\n	""32"" [label=""if $stack21 == 0""];\n	""33"" [label=""if $stack23 == 0""];\n	""34"" [label=""if $stack26 == 0""];\n	""35"" [label=""if ambiguous == 0""];\n	""36"" [label=""if i == null""];\n	""37"" [label=""if i >= count""];\n	""38"" [label=""if l12 >= l11""];\n	""39"" [label=""if match != param""];\n	""40"" [label=""if match <= param""];\n	""41"" [label=""if match == 0""];\n	""42"" [label=""if param == null""];\n	""43"" [label=""if parameters != null""];\n	""44"" [label=""if tryExact == 0""];\n	""45"" [label=""l10 = methods""];\n	""46"" [label=""l11 = lengthof l10""];\n	""47"" [label=""l12 = 0""];\n	""48"" [label=""l12 = l12 + 1""];\n	""49"" [label=""match = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: int matchParameterTypes(java.lang.Class[],java.lang.Object[])>($stack24, parameters)""];\n	""50"" [label=""method2 = l10[l12]""];\n	""51"" [label=""methods = virtualinvoke targetClass.<java.lang.Class: java.lang.reflect.Method[] getMethods()>()""];\n	""52"" [label=""name := @parameter1: java.lang.String""];\n	""53"" [label=""param = $stack29""];\n	""54"" [label=""param = 0""];\n	""55"" [label=""param = match""];\n	""56"" [label=""param = parameters[i]""];\n	""57"" [label=""parameters := @parameter2: java.lang.Object[]""];\n	""58"" [label=""return $stack27""];\n	""59"" [label=""return i""];\n	""60"" [label=""specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>()""];\n	""61"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack18)""];\n	""62"" [label=""targetClass := @parameter0: java.lang.Class""];\n	""63"" [label=""throw $stack19""];\n	""64"" [label=""tryExact = 0""];\n	""65"" [label=""tryExact = 1""];\n	""66"" [label=""types = newarray (java.lang.Class)[count]""];\n	""67"" [label=""types[i] = $stack28""];\n	""68"" [label=""types[i] = null""];\n	""1"" -> ""60""[label=""cfg_next""];\n	""10"" -> ""49""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_except""];\n	""12"" -> ""15""[label=""cfg_except""];\n	""12"" -> ""34""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_except""];\n	""13"" -> ""58""[label=""cfg_next""];\n	""14"" -> ""67""[label=""cfg_next""];\n	""15"" -> ""53""[label=""cfg_next""];\n	""16"" -> ""51""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""48""[label=""cfg_next""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""66""[label=""cfg_next""];\n	""21"" -> ""66""[label=""cfg_goto""];\n	""22"" -> ""28""[label=""cfg_goto""];\n	""23"" -> ""37""[label=""cfg_goto""];\n	""24"" -> ""54""[label=""cfg_goto""];\n	""25"" -> ""48""[label=""cfg_goto""];\n	""26"" -> ""38""[label=""cfg_goto""];\n	""27"" -> ""37""[label=""cfg_next""];\n	""28"" -> ""23""[label=""cfg_next""];\n	""29"" -> ""55""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""44""[label=""cfg_next""];\n	""31"" -> ""15""[label=""cfg_except""];\n	""31"" -> ""36""[label=""cfg_next""];\n	""32"" -> ""48""[label=""cfg_true""];\n	""32"" -> ""8""[label=""cfg_false""];\n	""33"" -> ""10""[label=""cfg_false""];\n	""33"" -> ""48""[label=""cfg_true""];\n	""34"" -> ""13""[label=""cfg_false""];\n	""34"" -> ""15""[label=""cfg_except""];\n	""34"" -> ""24""[label=""cfg_true""];\n	""35"" -> ""5""[label=""cfg_false""];\n	""35"" -> ""59""[label=""cfg_true""];\n	""36"" -> ""11""[label=""cfg_false""];\n	""36"" -> ""15""[label=""cfg_except""];\n	""36"" -> ""24""[label=""cfg_true""];\n	""37"" -> ""30""[label=""cfg_true""];\n	""37"" -> ""56""[label=""cfg_false""];\n	""38"" -> ""35""[label=""cfg_true""];\n	""38"" -> ""50""[label=""cfg_false""];\n	""39"" -> ""18""[label=""cfg_false""];\n	""39"" -> ""48""[label=""cfg_true""];\n	""4"" -> ""61""[label=""cfg_next""];\n	""40"" -> ""29""[label=""cfg_false""];\n	""40"" -> ""39""[label=""cfg_true""];\n	""41"" -> ""40""[label=""cfg_false""];\n	""41"" -> ""48""[label=""cfg_true""];\n	""42"" -> ""14""[label=""cfg_false""];\n	""42"" -> ""68""[label=""cfg_true""];\n	""43"" -> ""19""[label=""cfg_false""];\n	""43"" -> ""20""[label=""cfg_true""];\n	""44"" -> ""31""[label=""cfg_false""];\n	""44"" -> ""54""[label=""cfg_true""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""46"" -> ""47""[label=""cfg_next""];\n	""47"" -> ""38""[label=""cfg_next""];\n	""48"" -> ""26""[label=""cfg_next""];\n	""49"" -> ""41""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""50"" -> ""6""[label=""cfg_next""];\n	""51"" -> ""45""[label=""cfg_next""];\n	""52"" -> ""57""[label=""cfg_next""];\n	""53"" -> ""54""[label=""cfg_next""];\n	""54"" -> ""16""[label=""cfg_next""];\n	""55"" -> ""17""[label=""cfg_next""];\n	""56"" -> ""42""[label=""cfg_next""];\n	""57"" -> ""65""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""2""[label=""cfg_next""];\n	""61"" -> ""63""[label=""cfg_next""];\n	""62"" -> ""52""[label=""cfg_next""];\n	""64"" -> ""28""[label=""cfg_next""];\n	""65"" -> ""43""[label=""cfg_next""];\n	""66"" -> ""27""[label=""cfg_next""];\n	""67"" -> ""22""[label=""cfg_next""];\n	""68"" -> ""64""[label=""cfg_next""];\n	""7"" -> ""32""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.MethodLookupUtils.lookupMethod(Class,String,Object[])",Method,* Look up a method.\n     * @param targetClass owning class\n     * @param name method name\n     * @param parameters method parameters\n     * @return Method found if any,"public static Method lookupMethod(Class targetClass, final String name, final Object[] parameters) {\n    if (parameters == null || parameters.length < 1 || parameters[0] == null) {\n        return null;\n    }\n    if (matchType(targetClass, parameters[0]) == NO_MATCH) {\n        return null;\n    }\n    targetClass = TypeUtils.convert(parameters[0], targetClass).getClass();\n    boolean tryExact = true;\n    final int count = parameters.length - 1;\n    final Class[] types = new Class[count];\n    final Object[] arguments = new Object[count];\n    for (int i = 0; i < count; i++) {\n        final Object param = parameters[i + 1];\n        arguments[i] = param;\n        if (param != null) {\n            types[i] = param.getClass();\n        } else {\n            types[i] = null;\n            tryExact = false;\n        }\n    }\n    Method method = null;\n    if (tryExact) {\n        // First - without type conversion\n        try {\n            method = targetClass.getMethod(name, types);\n            if (method != null && !Modifier.isStatic(method.getModifiers())) {\n                return method;\n            }\n        } catch (final NoSuchMethodException ignore) {\n            // NOPMD\n            // Ignore\n        }\n    }\n    int currentMatch = 0;\n    boolean ambiguous = false;\n    // Then - with type conversion\n    final Method[] methods = targetClass.getMethods();\n    for (final Method method2 : methods) {\n        if (!Modifier.isStatic(method2.getModifiers()) && method2.getName().equals(name)) {\n            final int match = matchParameterTypes(method2.getParameterTypes(), arguments);\n            if (match != NO_MATCH) {\n                if (match > currentMatch) {\n                    method = method2;\n                    currentMatch = match;\n                    ambiguous = false;\n                } else if (match == currentMatch) {\n                    ambiguous = true;\n                }\n            }\n        }\n    }\n    if (ambiguous) {\n        throw new JXPathException(""Ambiguous method call: "" + name);\n    }\n    return method;\n}","java.lang.reflect.Method lookupMethod(java.lang.Class,java.lang.String,java.lang.Object[])","digraph cfg_lookupMethod {\n	""1"" [label=""$stack16 = lengthof parameters""];\n	""2"" [label=""$stack17 = parameters[0]""];\n	""3"" [label=""$stack18 = parameters[0]""];\n	""4"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: int matchType(java.lang.Class,java.lang.Object)>(targetClass, $stack18)""];\n	""5"" [label=""$stack20 = parameters[0]""];\n	""6"" [label=""$stack21 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack20, targetClass)""];\n	""7"" [label=""$stack22 = lengthof parameters""];\n	""8"" [label=""$stack23 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Ambiguous method call: \"")""];\n	""10"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name)""];\n	""11"" [label=""$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack27 = new org.apache.commons.jxpath.JXPathException""];\n	""13"" [label=""$stack28 = virtualinvoke method2.<java.lang.reflect.Method: int getModifiers()>()""];\n	""14"" [label=""$stack29 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($stack28)""];\n	""15"" [label=""$stack30 = virtualinvoke method2.<java.lang.reflect.Method: java.lang.String getName()>()""];\n	""16"" [label=""$stack31 = virtualinvoke $stack30.<java.lang.String: boolean equals(java.lang.Object)>(name)""];\n	""17"" [label=""$stack32 = virtualinvoke method2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>()""];\n	""18"" [label=""$stack33 = virtualinvoke i.<java.lang.reflect.Method: int getModifiers()>()""];\n	""19"" [label=""$stack34 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($stack33)""];\n	""20"" [label=""$stack35 = i""];\n	""21"" [label=""$stack36 = i + 1""];\n	""22"" [label=""$stack37 = virtualinvoke param.<java.lang.Object: java.lang.Class getClass()>()""];\n	""23"" [label=""$stack38 := @caughtexception""];\n	""24"" [label=""ambiguous = 0""];\n	""25"" [label=""ambiguous = 0""];\n	""26"" [label=""ambiguous = 1""];\n	""27"" [label=""arguments = newarray (java.lang.Object)[count]""];\n	""28"" [label=""arguments[i] = param""];\n	""29"" [label=""count = $stack22 - 1""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""i = 0""];\n	""36"" [label=""i = i + 1""];\n	""37"" [label=""i = method2""];\n	""38"" [label=""i = null""];\n	""39"" [label=""i = virtualinvoke targetClass.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(name, types)""];\n	""40"" [label=""if $stack16 < 1""];\n	""41"" [label=""if $stack17 != null""];\n	""42"" [label=""if $stack19 != 0""];\n	""43"" [label=""if $stack29 != 0""];\n	""44"" [label=""if $stack31 == 0""];\n	""45"" [label=""if $stack34 != 0""];\n	""46"" [label=""if ambiguous == 0""];\n	""47"" [label=""if i == null""];\n	""48"" [label=""if i >= count""];\n	""49"" [label=""if l13 >= l12""];\n	""50"" [label=""if match != param""];\n	""51"" [label=""if match <= param""];\n	""52"" [label=""if match == 0""];\n	""53"" [label=""if param == null""];\n	""54"" [label=""if parameters == null""];\n	""55"" [label=""if tryExact == 0""];\n	""56"" [label=""l11 = methods""];\n	""57"" [label=""l12 = lengthof l11""];\n	""58"" [label=""l13 = 0""];\n	""59"" [label=""l13 = l13 + 1""];\n	""60"" [label=""match = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: int matchParameterTypes(java.lang.Class[],java.lang.Object[])>($stack32, arguments)""];\n	""61"" [label=""method2 = l11[l13]""];\n	""62"" [label=""methods = virtualinvoke targetClass.<java.lang.Class: java.lang.reflect.Method[] getMethods()>()""];\n	""63"" [label=""name := @parameter1: java.lang.String""];\n	""64"" [label=""param = $stack38""];\n	""65"" [label=""param = 0""];\n	""66"" [label=""param = match""];\n	""67"" [label=""param = parameters[$stack36]""];\n	""68"" [label=""parameters := @parameter2: java.lang.Object[]""];\n	""69"" [label=""return $stack35""];\n	""70"" [label=""return i""];\n	""71"" [label=""return null""];\n	""72"" [label=""return null""];\n	""73"" [label=""specialinvoke $stack23.<java.lang.StringBuilder: void <init>()>()""];\n	""74"" [label=""specialinvoke $stack27.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack26)""];\n	""75"" [label=""targetClass := @parameter0: java.lang.Class""];\n	""76"" [label=""targetClass = virtualinvoke $stack21.<java.lang.Object: java.lang.Class getClass()>()""];\n	""77"" [label=""throw $stack27""];\n	""78"" [label=""tryExact = 0""];\n	""79"" [label=""tryExact = 1""];\n	""80"" [label=""types = newarray (java.lang.Class)[count]""];\n	""81"" [label=""types[i] = $stack37""];\n	""82"" [label=""types[i] = null""];\n	""1"" -> ""40""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""74""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""43""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""44""[label=""cfg_next""];\n	""17"" -> ""60""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""23""[label=""cfg_except""];\n	""19"" -> ""23""[label=""cfg_except""];\n	""19"" -> ""45""[label=""cfg_next""];\n	""2"" -> ""41""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_except""];\n	""20"" -> ""69""[label=""cfg_next""];\n	""21"" -> ""67""[label=""cfg_next""];\n	""22"" -> ""81""[label=""cfg_next""];\n	""23"" -> ""64""[label=""cfg_next""];\n	""24"" -> ""62""[label=""cfg_next""];\n	""25"" -> ""33""[label=""cfg_next""];\n	""26"" -> ""59""[label=""cfg_next""];\n	""27"" -> ""35""[label=""cfg_next""];\n	""28"" -> ""53""[label=""cfg_next""];\n	""29"" -> ""80""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""36""[label=""cfg_goto""];\n	""31"" -> ""48""[label=""cfg_goto""];\n	""32"" -> ""65""[label=""cfg_goto""];\n	""33"" -> ""59""[label=""cfg_goto""];\n	""34"" -> ""49""[label=""cfg_goto""];\n	""35"" -> ""48""[label=""cfg_next""];\n	""36"" -> ""31""[label=""cfg_next""];\n	""37"" -> ""66""[label=""cfg_next""];\n	""38"" -> ""55""[label=""cfg_next""];\n	""39"" -> ""23""[label=""cfg_except""];\n	""39"" -> ""47""[label=""cfg_next""];\n	""4"" -> ""42""[label=""cfg_next""];\n	""40"" -> ""2""[label=""cfg_false""];\n	""40"" -> ""71""[label=""cfg_true""];\n	""41"" -> ""3""[label=""cfg_true""];\n	""41"" -> ""71""[label=""cfg_false""];\n	""42"" -> ""5""[label=""cfg_true""];\n	""42"" -> ""72""[label=""cfg_false""];\n	""43"" -> ""15""[label=""cfg_false""];\n	""43"" -> ""59""[label=""cfg_true""];\n	""44"" -> ""17""[label=""cfg_false""];\n	""44"" -> ""59""[label=""cfg_true""];\n	""45"" -> ""20""[label=""cfg_false""];\n	""45"" -> ""23""[label=""cfg_except""];\n	""45"" -> ""32""[label=""cfg_true""];\n	""46"" -> ""12""[label=""cfg_false""];\n	""46"" -> ""70""[label=""cfg_true""];\n	""47"" -> ""18""[label=""cfg_false""];\n	""47"" -> ""23""[label=""cfg_except""];\n	""47"" -> ""32""[label=""cfg_true""];\n	""48"" -> ""21""[label=""cfg_false""];\n	""48"" -> ""38""[label=""cfg_true""];\n	""49"" -> ""46""[label=""cfg_true""];\n	""49"" -> ""61""[label=""cfg_false""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""26""[label=""cfg_false""];\n	""50"" -> ""59""[label=""cfg_true""];\n	""51"" -> ""37""[label=""cfg_false""];\n	""51"" -> ""50""[label=""cfg_true""];\n	""52"" -> ""51""[label=""cfg_false""];\n	""52"" -> ""59""[label=""cfg_true""];\n	""53"" -> ""22""[label=""cfg_false""];\n	""53"" -> ""82""[label=""cfg_true""];\n	""54"" -> ""1""[label=""cfg_false""];\n	""54"" -> ""71""[label=""cfg_true""];\n	""55"" -> ""39""[label=""cfg_false""];\n	""55"" -> ""65""[label=""cfg_true""];\n	""56"" -> ""57""[label=""cfg_next""];\n	""57"" -> ""58""[label=""cfg_next""];\n	""58"" -> ""49""[label=""cfg_next""];\n	""59"" -> ""34""[label=""cfg_next""];\n	""6"" -> ""76""[label=""cfg_next""];\n	""60"" -> ""52""[label=""cfg_next""];\n	""61"" -> ""13""[label=""cfg_next""];\n	""62"" -> ""56""[label=""cfg_next""];\n	""63"" -> ""68""[label=""cfg_next""];\n	""64"" -> ""65""[label=""cfg_next""];\n	""65"" -> ""24""[label=""cfg_next""];\n	""66"" -> ""25""[label=""cfg_next""];\n	""67"" -> ""28""[label=""cfg_next""];\n	""68"" -> ""54""[label=""cfg_next""];\n	""7"" -> ""29""[label=""cfg_next""];\n	""73"" -> ""9""[label=""cfg_next""];\n	""74"" -> ""77""[label=""cfg_next""];\n	""75"" -> ""63""[label=""cfg_next""];\n	""76"" -> ""79""[label=""cfg_next""];\n	""78"" -> ""36""[label=""cfg_next""];\n	""79"" -> ""7""[label=""cfg_next""];\n	""8"" -> ""73""[label=""cfg_next""];\n	""80"" -> ""27""[label=""cfg_next""];\n	""81"" -> ""30""[label=""cfg_next""];\n	""82"" -> ""78""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.MethodLookupUtils.matchParameterTypes(Class[],Object[])",Method,* Return a match code of objects to types.\n     * @param types Class[] of expected types\n     * @param parameters Object[] to attempt to match\n     * @return int code,"private static int matchParameterTypes(final Class[] types, final Object[] parameters) {\n    int pi = 0;\n    if (types.length >= 1 && ExpressionContext.class.isAssignableFrom(types[0])) {\n        pi++;\n    }\n    final int length = parameters == null ? 0 : parameters.length;\n    if (types.length != length + pi) {\n        return NO_MATCH;\n    }\n    int totalMatch = EXACT_MATCH;\n    for (int i = 0; i < length; i++) {\n        final int match = matchType(types[i + pi], parameters[i]);\n        if (match == NO_MATCH) {\n            return NO_MATCH;\n        }\n        if (match < totalMatch) {\n            totalMatch = match;\n        }\n    }\n    return totalMatch;\n}","int matchParameterTypes(java.lang.Class[],java.lang.Object[])","digraph cfg_matchParameterTypes {\n	""1"" [label=""$stack10 = i + pi""];\n	""2"" [label=""$stack11 = parameters[i]""];\n	""3"" [label=""$stack12 = types[$stack10]""];\n	""4"" [label=""$stack13 = types[0]""];\n	""5"" [label=""$stack14 = class \""Lorg/apache/commons/jxpath/ExpressionContext;\""""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack13)""];\n	""7"" [label=""$stack7 = lengthof types""];\n	""8"" [label=""$stack8 = length + pi""];\n	""9"" [label=""$stack9 = lengthof types""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""i = 0""];\n	""13"" [label=""i = i + 1""];\n	""14"" [label=""if $stack15 == 0""];\n	""15"" [label=""if $stack7 < 1""];\n	""16"" [label=""if $stack9 == $stack8""];\n	""17"" [label=""if i >= length""];\n	""18"" [label=""if match != 0""];\n	""19"" [label=""if match >= totalMatch""];\n	""20"" [label=""if parameters != null""];\n	""21"" [label=""length = 0""];\n	""22"" [label=""length = lengthof parameters""];\n	""23"" [label=""match = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: int matchType(java.lang.Class,java.lang.Object)>($stack12, $stack11)""];\n	""24"" [label=""parameters := @parameter1: java.lang.Object[]""];\n	""25"" [label=""pi = 0""];\n	""26"" [label=""pi = pi + 1""];\n	""27"" [label=""return 0""];\n	""28"" [label=""return 0""];\n	""29"" [label=""return totalMatch""];\n	""30"" [label=""totalMatch = 2""];\n	""31"" [label=""totalMatch = match""];\n	""32"" [label=""types := @parameter0: java.lang.Class[]""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_goto""];\n	""11"" -> ""17""[label=""cfg_goto""];\n	""12"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_true""];\n	""14"" -> ""26""[label=""cfg_false""];\n	""15"" -> ""20""[label=""cfg_true""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""27""[label=""cfg_false""];\n	""16"" -> ""30""[label=""cfg_true""];\n	""17"" -> ""1""[label=""cfg_false""];\n	""17"" -> ""29""[label=""cfg_true""];\n	""18"" -> ""19""[label=""cfg_true""];\n	""18"" -> ""28""[label=""cfg_false""];\n	""19"" -> ""13""[label=""cfg_true""];\n	""19"" -> ""31""[label=""cfg_false""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_false""];\n	""20"" -> ""22""[label=""cfg_true""];\n	""21"" -> ""10""[label=""cfg_next""];\n	""22"" -> ""9""[label=""cfg_next""];\n	""23"" -> ""18""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""7""[label=""cfg_next""];\n	""26"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""12""[label=""cfg_next""];\n	""31"" -> ""13""[label=""cfg_next""];\n	""32"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.util.MethodLookupUtils.matchType(Class,Object)",Method,* Return a match code between an object and type.\n     * @param expected class to test\n     * @param object object to test\n     * @return int code,"private static int matchType(final Class expected, final Object object) {\n    if (object == null) {\n        return APPROXIMATE_MATCH;\n    }\n    final Class actual = object.getClass();\n    if (expected.equals(actual)) {\n        return EXACT_MATCH;\n    }\n    if (expected.isAssignableFrom(actual)) {\n        return EXACT_MATCH;\n    }\n    if (TypeUtils.canConvert(object, expected)) {\n        return APPROXIMATE_MATCH;\n    }\n    return NO_MATCH;\n}","int matchType(java.lang.Class,java.lang.Object)","digraph cfg_matchType {\n	""1"" [label=""$stack3 = virtualinvoke expected.<java.lang.Object: boolean equals(java.lang.Object)>(actual)""];\n	""2"" [label=""$stack4 = virtualinvoke expected.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(actual)""];\n	""3"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: boolean canConvert(java.lang.Object,java.lang.Class)>(object, expected)""];\n	""4"" [label=""actual = virtualinvoke object.<java.lang.Object: java.lang.Class getClass()>()""];\n	""5"" [label=""expected := @parameter0: java.lang.Class""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""if object != null""];\n	""10"" [label=""object := @parameter1: java.lang.Object""];\n	""11"" [label=""return 0""];\n	""12"" [label=""return 1""];\n	""13"" [label=""return 1""];\n	""14"" [label=""return 2""];\n	""15"" [label=""return 2""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""15""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""13""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_false""];\n	""9"" -> ""4""[label=""cfg_true""];\n}\n","private , static "
org.apache.commons.jxpath.util.KeyManagerUtils.getExtendedKeyManager(KeyManager),Method,"* Gets an ExtendedKeyManager from the specified KeyManager.\n     * @param keyManager to adapt, if necessary\n     * @return {@code keyManager} if it implements ExtendedKeyManager\n     *         or a basic single-result ExtendedKeyManager that delegates to\n     *         {@code keyManager}.",public static ExtendedKeyManager getExtendedKeyManager(final KeyManager keyManager) {\n    return keyManager instanceof ExtendedKeyManager ? (ExtendedKeyManager) keyManager : new SingleNodeExtendedKeyManager(keyManager);\n},org.apache.commons.jxpath.ExtendedKeyManager getExtendedKeyManager(org.apache.commons.jxpath.KeyManager),"digraph cfg_getExtendedKeyManager {\n	""1"" [label=""$stack1 = keyManager instanceof org.apache.commons.jxpath.ExtendedKeyManager""];\n	""2"" [label=""$stack2 = (org.apache.commons.jxpath.ExtendedKeyManager) keyManager""];\n	""3"" [label=""$stack2 = new org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == 0""];\n	""6"" [label=""keyManager := @parameter0: org.apache.commons.jxpath.KeyManager""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager: void <init>(org.apache.commons.jxpath.KeyManager)>(keyManager)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager.getNodeSetByKey(JXPathContext,String,Object)",Method,No Comment,"@Override\npublic NodeSet getNodeSetByKey(final JXPathContext context, final String key, final Object value) {\n    final Pointer pointer = delegate.getPointerByKey(context, key, InfoSetUtil.stringValue(value));\n    final BasicNodeSet result = new BasicNodeSet();\n    result.add(pointer);\n    return result;\n}","org.apache.commons.jxpath.NodeSet getNodeSetByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.Object)","digraph cfg_getNodeSetByKey {\n	""1"" [label=""$stack6 = this.<org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager: org.apache.commons.jxpath.KeyManager delegate>""];\n	""2"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>(value)""];\n	""3"" [label=""$stack8 = new org.apache.commons.jxpath.BasicNodeSet""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""key := @parameter1: java.lang.String""];\n	""6"" [label=""pointer = interfaceinvoke $stack6.<org.apache.commons.jxpath.KeyManager: org.apache.commons.jxpath.Pointer getPointerByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.String)>(context, key, $stack7)""];\n	""7"" [label=""result = $stack8""];\n	""8"" [label=""return result""];\n	""9"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.BasicNodeSet: void <init>()>()""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager""];\n	""11"" [label=""value := @parameter2: java.lang.Object""];\n	""12"" [label=""virtualinvoke result.<org.apache.commons.jxpath.BasicNodeSet: void add(org.apache.commons.jxpath.Pointer)>(pointer)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager.getPointerByKey(JXPathContext,String,String)",Method,No Comment,"@Override\npublic Pointer getPointerByKey(final JXPathContext context, final String keyName, final String keyValue) {\n    return delegate.getPointerByKey(context, keyName, keyValue);\n}","org.apache.commons.jxpath.Pointer getPointerByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.String)","digraph cfg_getPointerByKey {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager: org.apache.commons.jxpath.KeyManager delegate>""];\n	""2"" [label=""$stack5 = interfaceinvoke $stack4.<org.apache.commons.jxpath.KeyManager: org.apache.commons.jxpath.Pointer getPointerByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.String)>(context, keyName, keyValue)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""keyName := @parameter1: java.lang.String""];\n	""5"" [label=""keyValue := @parameter2: java.lang.String""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager.<init>(KeyManager),Constructor,* Create a new SingleNodeExtendedKeyManager.\n         * @param delegate KeyManager to wrap,public SingleNodeExtendedKeyManager(final KeyManager delegate) {\n    this.delegate = delegate;\n},void <init>(org.apache.commons.jxpath.KeyManager),"digraph cfg_init {\n	""1"" [label=""delegate := @parameter0: org.apache.commons.jxpath.KeyManager""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager""];\n	""5"" [label=""this.<org.apache.commons.jxpath.util.KeyManagerUtils$SingleNodeExtendedKeyManager: org.apache.commons.jxpath.KeyManager delegate> = delegate""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathInvalidSyntaxException.<init>(String),Constructor,* Create a new JXPathInvalidSyntaxException.\n     * @param message relevant message,public JXPathInvalidSyntaxException(final String message) {\n    super(message);\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""message := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(message)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathInvalidSyntaxException""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.AbstractFactory.createObject(JXPathContext,Pointer,Object,String,int)",Method,"* The  parameters may describe a collection element or an individual\n     * object. It is up to the factory to infer which one it is. If it is a\n     * collection, the factory should check if the collection exists.  If not,\n     * it should create the collection. Then it should create the index'th\n     * element of the collection and return true.\n     * <p>\n     *\n     * @param context can be used to evaluate other XPaths, get to variables\n     * etc.\n     * @param pointer describes the location of the node to be created\n     * @param parent is the object that will serve as a parent of the new\n     * object\n     * @param name is the name of the child of the parent that needs to be\n     * created. In the case of DOM may be qualified.\n     * @param index is used if the pointer represents a collection element. You\n     * may need to expand or even create the collection to accommodate the new\n     * element.\n     *\n     * @return true if the object was successfully created","public boolean createObject(final JXPathContext context, final Pointer pointer, final Object parent, final String name, final int index) {\n    return false;\n}","boolean createObject(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.Pointer,java.lang.Object,java.lang.String,int)","digraph cfg_createObject {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""index := @parameter4: int""];\n	""3"" [label=""name := @parameter3: java.lang.String""];\n	""4"" [label=""parent := @parameter2: java.lang.Object""];\n	""5"" [label=""pointer := @parameter1: org.apache.commons.jxpath.Pointer""];\n	""6"" [label=""return 0""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.AbstractFactory""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.AbstractFactory.declareVariable(JXPathContext,String)",Method,"* Declare the specified variable\n     *\n     * @param context hosts variable pools. See\n     * {@link JXPathContext#getVariables() JXPathContext.getVariables()}\n     * @param name is the name of the variable without the ""$"" sign\n     * @return true if the variable was successfully defined","public boolean declareVariable(final JXPathContext context, final String name) {\n    return false;\n}","boolean declareVariable(org.apache.commons.jxpath.JXPathContext,java.lang.String)","digraph cfg_declareVariable {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""name := @parameter1: java.lang.String""];\n	""3"" [label=""return 0""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.AbstractFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathInvalidAccessException.<init>(String),Constructor,* Create a new JXPathInvalidAccessException.\n     * @param message exception message,public JXPathInvalidAccessException(final String message) {\n    super(message);\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""message := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(message)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathInvalidAccessException.<init>(String,Throwable)",Constructor,* Create a new JXPathInvalidAccessException.\n     * @param message exception message\n     * @param ex precipitating exception,"public JXPathInvalidAccessException(final String message, final Throwable ex) {\n    super(message, ex);\n}","void <init>(java.lang.String,java.lang.Throwable)","digraph cfg_init {\n	""1"" [label=""ex := @parameter1: java.lang.Throwable""];\n	""2"" [label=""message := @parameter0: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>(message, ex)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ClassFunctions.getUsedNamespaces(),Method,* Returns a set of one namespace - the one specified in the constructor.\n     *\n     * @return a singleton,@Override\npublic Set getUsedNamespaces() {\n    return Collections.singleton(namespace);\n},java.util.Set getUsedNamespaces(),"digraph cfg_getUsedNamespaces {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ClassFunctions: java.lang.String namespace>""];\n	""2"" [label=""$stack2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ClassFunctions""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ClassFunctions.getFunction(String,String,Object[])",Method,"* Returns a {@link Function}, if any, for the specified namespace,\n     * name and parameter types.\n     *\n     * @param namespace if it is not the namespace specified in the constructor,\n     *     the method returns null\n     * @param name is a function name or ""new"" for a constructor.\n     * @param parameters Object[] of parameters\n     * @return a MethodFunction, a ConstructorFunction or null if there is no\n     *      such function.","@Override\npublic Function getFunction(final String namespace, final String name, Object[] parameters) {\n    if (namespace == null) {\n        if (this.namespace != null) {\n            return null;\n        }\n    } else if (!namespace.equals(this.namespace)) {\n        return null;\n    }\n    if (parameters == null) {\n        parameters = EMPTY_ARRAY;\n    }\n    if (name.equals(""new"")) {\n        final Constructor constructor = MethodLookupUtils.lookupConstructor(functionClass, parameters);\n        if (constructor != null) {\n            return new ConstructorFunction(constructor);\n        }\n    } else {\n        Method method = MethodLookupUtils.lookupStaticMethod(functionClass, name, parameters);\n        if (method != null) {\n            return new MethodFunction(method);\n        }\n        method = MethodLookupUtils.lookupMethod(functionClass, name, parameters);\n        if (method != null) {\n            return new MethodFunction(method);\n        }\n    }\n    return null;\n}","org.apache.commons.jxpath.Function getFunction(java.lang.String,java.lang.String,java.lang.Object[])","digraph cfg_getFunction {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.functions.MethodFunction""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.functions.MethodFunction""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ClassFunctions: java.lang.Class functionClass>""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.functions.ConstructorFunction""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ClassFunctions: java.lang.String namespace>""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ClassFunctions: java.lang.String namespace>""];\n	""7"" [label=""$stack6 = virtualinvoke namespace.<java.lang.String: boolean equals(java.lang.Object)>($stack5)""];\n	""8"" [label=""$stack7 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>(\""new\"")""];\n	""9"" [label=""$stack8 = this.<org.apache.commons.jxpath.ClassFunctions: java.lang.Class functionClass>""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ClassFunctions: java.lang.Class functionClass>""];\n	""11"" [label=""constructor = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Constructor lookupConstructor(java.lang.Class,java.lang.Object[])>($stack12, parameters)""];\n	""12"" [label=""constructor = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Method lookupMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($stack9, name, parameters)""];\n	""13"" [label=""constructor = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Method lookupStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($stack8, name, parameters)""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack14 == null""];\n	""16"" [label=""if $stack6 != 0""];\n	""17"" [label=""if $stack7 == 0""];\n	""18"" [label=""if constructor == null""];\n	""19"" [label=""if constructor == null""];\n	""20"" [label=""if constructor == null""];\n	""21"" [label=""if namespace != null""];\n	""22"" [label=""if parameters != null""];\n	""23"" [label=""name := @parameter1: java.lang.String""];\n	""24"" [label=""namespace := @parameter0: java.lang.String""];\n	""25"" [label=""parameters := @parameter2: java.lang.Object[]""];\n	""26"" [label=""parameters = <org.apache.commons.jxpath.ClassFunctions: java.lang.Object[] EMPTY_ARRAY>""];\n	""27"" [label=""return $stack10""];\n	""28"" [label=""return $stack11""];\n	""29"" [label=""return $stack13""];\n	""30"" [label=""return null""];\n	""31"" [label=""return null""];\n	""32"" [label=""return null""];\n	""33"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.functions.MethodFunction: void <init>(java.lang.reflect.Method)>(constructor)""];\n	""34"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.functions.MethodFunction: void <init>(java.lang.reflect.Method)>(constructor)""];\n	""35"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.functions.ConstructorFunction: void <init>(java.lang.reflect.Constructor)>(constructor)""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.ClassFunctions""];\n	""1"" -> ""33""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""31""[label=""cfg_goto""];\n	""15"" -> ""22""[label=""cfg_true""];\n	""15"" -> ""30""[label=""cfg_false""];\n	""16"" -> ""22""[label=""cfg_true""];\n	""16"" -> ""32""[label=""cfg_false""];\n	""17"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""9""[label=""cfg_true""];\n	""18"" -> ""14""[label=""cfg_true""];\n	""18"" -> ""4""[label=""cfg_false""];\n	""19"" -> ""10""[label=""cfg_true""];\n	""19"" -> ""2""[label=""cfg_false""];\n	""2"" -> ""34""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_false""];\n	""20"" -> ""31""[label=""cfg_true""];\n	""21"" -> ""5""[label=""cfg_false""];\n	""21"" -> ""6""[label=""cfg_true""];\n	""22"" -> ""26""[label=""cfg_false""];\n	""22"" -> ""8""[label=""cfg_true""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""33"" -> ""27""[label=""cfg_next""];\n	""34"" -> ""28""[label=""cfg_next""];\n	""35"" -> ""29""[label=""cfg_next""];\n	""36"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""35""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ClassFunctions.<init>(Class,String)",Constructor,* Create a new ClassFunctions.\n     * @param functionClass Class providing the functions\n     * @param namespace assigned ns,"public ClassFunctions(final Class functionClass, final String namespace) {\n    this.functionClass = functionClass;\n    this.namespace = namespace;\n}","void <init>(java.lang.Class,java.lang.String)","digraph cfg_init {\n	""1"" [label=""functionClass := @parameter0: java.lang.Class""];\n	""2"" [label=""namespace := @parameter1: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ClassFunctions""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ClassFunctions: java.lang.Class functionClass> = functionClass""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ClassFunctions: java.lang.String namespace> = namespace""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.XMLDocumentContainer.getValue(),Method,"* Reads XML, caches it internally and returns the Document.\n     * @return Object value","@Override\npublic Object getValue() {\n    if (document == null) {\n        try {\n            if (source != null) {\n                final DOMResult result = new DOMResult();\n                final Transformer trans = TransformerFactory.newInstance().newTransformer();\n                trans.transform(source, result);\n                document = result.getNode();\n            } else {\n                document = delegate.getValue();\n            }\n        } catch (final Exception ex) {\n            throw new JXPathException(""Cannot read XML from: "" + (xmlURL != null ? xmlURL.toString() : source != null ? source.getSystemId() : ""<<undefined source>>""), ex);\n        }\n    }\n    return document;\n}",java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.XMLDocumentContainer: javax.xml.transform.Source source>""];\n	""2"" [label=""$stack11 = virtualinvoke result.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>()""];\n	""3"" [label=""$stack12 := @caughtexception""];\n	""4"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.XMLDocumentContainer: java.net.URL xmlURL>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.XMLDocumentContainer: javax.xml.transform.Source source>""];\n	""7"" [label=""$stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot read XML from: \"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21)""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack19 = new org.apache.commons.jxpath.JXPathException""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.XMLDocumentContainer: javax.xml.transform.Source source>""];\n	""12"" [label=""$stack21 = \""<<undefined source>>\""""];\n	""13"" [label=""$stack21 = interfaceinvoke $stack20.<javax.xml.transform.Source: java.lang.String getSystemId()>()""];\n	""14"" [label=""$stack21 = virtualinvoke $stack22.<java.net.URL: java.lang.String toString()>()""];\n	""15"" [label=""$stack22 = this.<org.apache.commons.jxpath.XMLDocumentContainer: java.net.URL xmlURL>""];\n	""16"" [label=""$stack3 = this.<org.apache.commons.jxpath.XMLDocumentContainer: java.lang.Object document>""];\n	""17"" [label=""$stack4 = this.<org.apache.commons.jxpath.XMLDocumentContainer: java.lang.Object document>""];\n	""18"" [label=""$stack5 = this.<org.apache.commons.jxpath.XMLDocumentContainer: javax.xml.transform.Source source>""];\n	""19"" [label=""$stack6 = this.<org.apache.commons.jxpath.XMLDocumentContainer: org.apache.commons.jxpath.xml.DocumentContainer delegate>""];\n	""20"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.xml.DocumentContainer: java.lang.Object getValue()>()""];\n	""21"" [label=""$stack8 = new javax.xml.transform.dom.DOMResult""];\n	""22"" [label=""$stack9 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>()""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""if $stack14 == null""];\n	""28"" [label=""if $stack15 == null""];\n	""29"" [label=""if $stack3 != null""];\n	""30"" [label=""if $stack5 == null""];\n	""31"" [label=""result = $stack12""];\n	""32"" [label=""result = $stack8""];\n	""33"" [label=""return $stack4""];\n	""34"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack18, result)""];\n	""36"" [label=""specialinvoke $stack8.<javax.xml.transform.dom.DOMResult: void <init>()>()""];\n	""37"" [label=""this := @this: org.apache.commons.jxpath.XMLDocumentContainer""];\n	""38"" [label=""this.<org.apache.commons.jxpath.XMLDocumentContainer: java.lang.Object document> = $stack11""];\n	""39"" [label=""this.<org.apache.commons.jxpath.XMLDocumentContainer: java.lang.Object document> = $stack7""];\n	""40"" [label=""throw $stack19""];\n	""41"" [label=""trans = virtualinvoke $stack9.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>()""];\n	""42"" [label=""virtualinvoke trans.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($stack10, result)""];\n	""1"" -> ""3""[label=""cfg_except""];\n	""1"" -> ""42""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""26""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""29""[label=""cfg_next""];\n	""17"" -> ""33""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_except""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""38""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_except""];\n	""20"" -> ""39""[label=""cfg_next""];\n	""21"" -> ""3""[label=""cfg_except""];\n	""21"" -> ""36""[label=""cfg_next""];\n	""22"" -> ""3""[label=""cfg_except""];\n	""22"" -> ""41""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_goto""];\n	""23"" -> ""3""[label=""cfg_except""];\n	""24"" -> ""17""[label=""cfg_goto""];\n	""25"" -> ""8""[label=""cfg_goto""];\n	""26"" -> ""8""[label=""cfg_goto""];\n	""27"" -> ""15""[label=""cfg_false""];\n	""27"" -> ""6""[label=""cfg_true""];\n	""28"" -> ""11""[label=""cfg_false""];\n	""28"" -> ""12""[label=""cfg_true""];\n	""29"" -> ""17""[label=""cfg_true""];\n	""29"" -> ""18""[label=""cfg_false""];\n	""3"" -> ""31""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""30"" -> ""21""[label=""cfg_false""];\n	""30"" -> ""3""[label=""cfg_except""];\n	""31"" -> ""10""[label=""cfg_next""];\n	""32"" -> ""22""[label=""cfg_next""];\n	""32"" -> ""3""[label=""cfg_except""];\n	""34"" -> ""7""[label=""cfg_next""];\n	""35"" -> ""40""[label=""cfg_next""];\n	""36"" -> ""3""[label=""cfg_except""];\n	""36"" -> ""32""[label=""cfg_next""];\n	""37"" -> ""16""[label=""cfg_next""];\n	""38"" -> ""23""[label=""cfg_next""];\n	""38"" -> ""3""[label=""cfg_except""];\n	""39"" -> ""24""[label=""cfg_next""];\n	""39"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""34""[label=""cfg_next""];\n	""41"" -> ""1""[label=""cfg_next""];\n	""41"" -> ""3""[label=""cfg_except""];\n	""42"" -> ""2""[label=""cfg_next""];\n	""42"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""27""[label=""cfg_next""];\n	""6"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""35""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.XMLDocumentContainer.setValue(Object),Method,* Throws an UnsupportedOperationException\n     * @param value to set,@Override\npublic void setValue(final Object value) {\n    throw new UnsupportedOperationException();\n},void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.XMLDocumentContainer""];\n	""4"" [label=""throw $stack2""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.XMLDocumentContainer.<init>(URL),Constructor,* Create a new XMLDocumentContainer.\n     * @param xmlURL a URL for an XML file. Use getClass().getResource(resourceName)\n     *               to load XML from a resource file.,public XMLDocumentContainer(final URL xmlURL) {\n    this.xmlURL = xmlURL;\n    delegate = new DocumentContainer(xmlURL);\n},void <init>(java.net.URL),"digraph cfg_init {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.xml.DocumentContainer""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.xml.DocumentContainer: void <init>(java.net.URL)>(xmlURL)""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.XMLDocumentContainer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.XMLDocumentContainer: java.net.URL xmlURL> = xmlURL""];\n	""7"" [label=""this.<org.apache.commons.jxpath.XMLDocumentContainer: org.apache.commons.jxpath.xml.DocumentContainer delegate> = $stack2""];\n	""8"" [label=""xmlURL := @parameter0: java.net.URL""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.XMLDocumentContainer.<init>(Source),Constructor,* Create a new XMLDocumentContainer.\n     * @param source XML source,public XMLDocumentContainer(final Source source) {\n    this.source = Objects.requireNonNull(source);\n},void <init>(javax.xml.transform.Source),"digraph cfg_init {\n	""1"" [label=""$stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(source)""];\n	""2"" [label=""$stack3 = (javax.xml.transform.Source) $stack2""];\n	""3"" [label=""return""];\n	""4"" [label=""source := @parameter0: javax.xml.transform.Source""];\n	""5"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.XMLDocumentContainer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.XMLDocumentContainer: javax.xml.transform.Source source> = $stack3""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.DynamicPropertyHandler.getPropertyNames(Object),Abstract Method,* Returns a list of dynamic property names for the supplied object.\n     * @param object to inspect\n     * @return String[],String[] getPropertyNames(Object object);,java.lang.String[] getPropertyNames(java.lang.Object),digraph cfg_getPropertyNames {\n}\n,default
"org.apache.commons.jxpath.DynamicPropertyHandler.getProperty(Object,String)",Abstract Method,* Returns the value of the specified dynamic property.\n     * @param object to search\n     * @param propertyName to retrieve\n     * @return Object,"Object getProperty(Object object, String propertyName);","java.lang.Object getProperty(java.lang.Object,java.lang.String)",digraph cfg_getProperty {\n}\n,default
"org.apache.commons.jxpath.DynamicPropertyHandler.setProperty(Object,String,Object)",Abstract Method,* Modifies the value of the specified dynamic property.\n     * @param object to modify\n     * @param propertyName to modify\n     * @param value to set,"void setProperty(Object object, String propertyName, Object value);","void setProperty(java.lang.Object,java.lang.String,java.lang.Object)",digraph cfg_setProperty {\n}\n,default
"org.apache.commons.jxpath.ri.Parser.parseExpression(String,Compiler)",Method,* Parses the XPath expression. Throws a JXPathException in case\n     * of a syntax error.\n     * @param expression to parse\n     * @param compiler the compiler\n     * @return parsed Object,"public static Object parseExpression(final String expression, final Compiler compiler) {\n    synchronized (PARSER) {\n        PARSER.setCompiler(compiler);\n        Object expr;\n        try {\n            PARSER.ReInit(new StringReader(expression));\n            expr = PARSER.parseExpression();\n        } catch (final TokenMgrError e) {\n            throw new JXPathInvalidSyntaxException(""Invalid XPath: '"" + addEscapes(expression) + ""'. Invalid symbol '"" + addEscapes(String.valueOf(e.getCharacter())) + ""' "" + describePosition(expression, e.getPosition()));\n        } catch (final ParseException e) {\n            throw new JXPathInvalidSyntaxException(""Invalid XPath: '"" + addEscapes(expression) + ""'. Syntax error "" + describePosition(expression, e.currentToken.beginColumn));\n        }\n        return expr;\n    }\n}","java.lang.Object parseExpression(java.lang.String,org.apache.commons.jxpath.ri.Compiler)","digraph cfg_parseExpression {\n	""1"" [label=""$stack10 = expr""];\n	""2"" [label=""$stack11 := @caughtexception""];\n	""3"" [label=""$stack12 := @caughtexception""];\n	""4"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack14 = staticinvoke <org.apache.commons.jxpath.ri.Parser: java.lang.String addEscapes(java.lang.String)>(expression)""];\n	""6"" [label=""$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Invalid XPath: \'\"")""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)""];\n	""8"" [label=""$stack17 = e.<org.apache.commons.jxpath.ri.parser.ParseException: org.apache.commons.jxpath.ri.parser.Token currentToken>""];\n	""9"" [label=""$stack18 = $stack17.<org.apache.commons.jxpath.ri.parser.Token: int beginColumn>""];\n	""10"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.ri.Parser: java.lang.String describePosition(java.lang.String,int)>(expression, $stack18)""];\n	""11"" [label=""$stack20 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'. Syntax error \"")""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19)""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.JXPathInvalidSyntaxException""];\n	""15"" [label=""$stack24 := @caughtexception""];\n	""16"" [label=""$stack25 = new java.lang.StringBuilder""];\n	""17"" [label=""$stack26 = staticinvoke <org.apache.commons.jxpath.ri.Parser: java.lang.String addEscapes(java.lang.String)>(expression)""];\n	""18"" [label=""$stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Invalid XPath: \'\"")""];\n	""19"" [label=""$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26)""];\n	""20"" [label=""$stack29 = virtualinvoke e.<org.apache.commons.jxpath.ri.parser.TokenMgrError: char getCharacter()>()""];\n	""21"" [label=""$stack30 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack29)""];\n	""22"" [label=""$stack31 = staticinvoke <org.apache.commons.jxpath.ri.Parser: java.lang.String addEscapes(java.lang.String)>($stack30)""];\n	""23"" [label=""$stack32 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'. Invalid symbol \'\"")""];\n	""24"" [label=""$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31)""];\n	""25"" [label=""$stack34 = virtualinvoke e.<org.apache.commons.jxpath.ri.parser.TokenMgrError: int getPosition()>()""];\n	""26"" [label=""$stack35 = staticinvoke <org.apache.commons.jxpath.ri.Parser: java.lang.String describePosition(java.lang.String,int)>(expression, $stack34)""];\n	""27"" [label=""$stack36 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\' \"")""];\n	""28"" [label=""$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35)""];\n	""29"" [label=""$stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""30"" [label=""$stack39 = new org.apache.commons.jxpath.JXPathInvalidSyntaxException""];\n	""31"" [label=""$stack6 = <org.apache.commons.jxpath.ri.Parser: org.apache.commons.jxpath.ri.parser.XPathParser PARSER>""];\n	""32"" [label=""$stack7 = new java.io.StringReader""];\n	""33"" [label=""$stack8 = <org.apache.commons.jxpath.ri.Parser: org.apache.commons.jxpath.ri.parser.XPathParser PARSER>""];\n	""34"" [label=""$stack9 = <org.apache.commons.jxpath.ri.Parser: org.apache.commons.jxpath.ri.parser.XPathParser PARSER>""];\n	""35"" [label=""compiler := @parameter1: org.apache.commons.jxpath.ri.Compiler""];\n	""36"" [label=""e = $stack12""];\n	""37"" [label=""e = $stack24""];\n	""38"" [label=""entermonitor l2""];\n	""39"" [label=""exitmonitor l2""];\n	""40"" [label=""exitmonitor l2""];\n	""41"" [label=""expr = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object parseExpression()>()""];\n	""42"" [label=""expression := @parameter0: java.lang.String""];\n	""43"" [label=""goto""];\n	""44"" [label=""l2 = <org.apache.commons.jxpath.ri.Parser: org.apache.commons.jxpath.ri.parser.XPathParser PARSER>""];\n	""45"" [label=""l5 = $stack11""];\n	""46"" [label=""return $stack10""];\n	""47"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""48"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.JXPathInvalidSyntaxException: void <init>(java.lang.String)>($stack22)""];\n	""49"" [label=""specialinvoke $stack25.<java.lang.StringBuilder: void <init>()>()""];\n	""50"" [label=""specialinvoke $stack39.<org.apache.commons.jxpath.JXPathInvalidSyntaxException: void <init>(java.lang.String)>($stack38)""];\n	""51"" [label=""specialinvoke $stack7.<java.io.StringReader: void <init>(java.lang.String)>(expression)""];\n	""52"" [label=""throw $stack23""];\n	""53"" [label=""throw $stack39""];\n	""54"" [label=""throw l5""];\n	""55"" [label=""virtualinvoke $stack6.<org.apache.commons.jxpath.ri.parser.XPathParser: void setCompiler(org.apache.commons.jxpath.ri.Compiler)>(compiler)""];\n	""56"" [label=""virtualinvoke $stack8.<org.apache.commons.jxpath.ri.parser.XPathParser: void ReInit(java.io.Reader)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""1"" -> ""40""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_except""];\n	""11"" -> ""2""[label=""cfg_except""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""48""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_except""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_except""];\n	""15"" -> ""37""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_except""];\n	""16"" -> ""49""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""17"" -> ""2""[label=""cfg_except""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""18"" -> ""2""[label=""cfg_except""];\n	""19"" -> ""2""[label=""cfg_except""];\n	""19"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""2""[label=""cfg_except""];\n	""2"" -> ""45""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_except""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""2""[label=""cfg_except""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""2""[label=""cfg_except""];\n	""22"" -> ""24""[label=""cfg_next""];\n	""23"" -> ""2""[label=""cfg_except""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""2""[label=""cfg_except""];\n	""24"" -> ""27""[label=""cfg_next""];\n	""25"" -> ""2""[label=""cfg_except""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""2""[label=""cfg_except""];\n	""26"" -> ""28""[label=""cfg_next""];\n	""27"" -> ""2""[label=""cfg_except""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""2""[label=""cfg_except""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""2""[label=""cfg_except""];\n	""29"" -> ""50""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_except""];\n	""3"" -> ""36""[label=""cfg_next""];\n	""30"" -> ""16""[label=""cfg_next""];\n	""30"" -> ""2""[label=""cfg_except""];\n	""31"" -> ""2""[label=""cfg_except""];\n	""31"" -> ""55""[label=""cfg_next""];\n	""32"" -> ""15""[label=""cfg_except""];\n	""32"" -> ""2""[label=""cfg_except""];\n	""32"" -> ""3""[label=""cfg_except""];\n	""32"" -> ""51""[label=""cfg_next""];\n	""33"" -> ""15""[label=""cfg_except""];\n	""33"" -> ""2""[label=""cfg_except""];\n	""33"" -> ""3""[label=""cfg_except""];\n	""33"" -> ""32""[label=""cfg_next""];\n	""34"" -> ""15""[label=""cfg_except""];\n	""34"" -> ""2""[label=""cfg_except""];\n	""34"" -> ""3""[label=""cfg_except""];\n	""34"" -> ""41""[label=""cfg_next""];\n	""35"" -> ""44""[label=""cfg_next""];\n	""36"" -> ""14""[label=""cfg_next""];\n	""36"" -> ""2""[label=""cfg_except""];\n	""37"" -> ""2""[label=""cfg_except""];\n	""37"" -> ""30""[label=""cfg_next""];\n	""38"" -> ""31""[label=""cfg_next""];\n	""39"" -> ""2""[label=""cfg_except""];\n	""39"" -> ""54""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_except""];\n	""4"" -> ""47""[label=""cfg_next""];\n	""40"" -> ""2""[label=""cfg_except""];\n	""40"" -> ""46""[label=""cfg_next""];\n	""41"" -> ""15""[label=""cfg_except""];\n	""41"" -> ""2""[label=""cfg_except""];\n	""41"" -> ""3""[label=""cfg_except""];\n	""41"" -> ""43""[label=""cfg_next""];\n	""42"" -> ""35""[label=""cfg_next""];\n	""43"" -> ""1""[label=""cfg_goto""];\n	""43"" -> ""2""[label=""cfg_except""];\n	""44"" -> ""38""[label=""cfg_next""];\n	""45"" -> ""2""[label=""cfg_except""];\n	""45"" -> ""39""[label=""cfg_next""];\n	""47"" -> ""2""[label=""cfg_except""];\n	""47"" -> ""6""[label=""cfg_next""];\n	""48"" -> ""2""[label=""cfg_except""];\n	""48"" -> ""52""[label=""cfg_next""];\n	""49"" -> ""18""[label=""cfg_next""];\n	""49"" -> ""2""[label=""cfg_except""];\n	""5"" -> ""2""[label=""cfg_except""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""50"" -> ""2""[label=""cfg_except""];\n	""50"" -> ""53""[label=""cfg_next""];\n	""51"" -> ""15""[label=""cfg_except""];\n	""51"" -> ""2""[label=""cfg_except""];\n	""51"" -> ""3""[label=""cfg_except""];\n	""51"" -> ""56""[label=""cfg_next""];\n	""52"" -> ""2""[label=""cfg_except""];\n	""53"" -> ""2""[label=""cfg_except""];\n	""55"" -> ""2""[label=""cfg_except""];\n	""55"" -> ""33""[label=""cfg_next""];\n	""56"" -> ""15""[label=""cfg_except""];\n	""56"" -> ""2""[label=""cfg_except""];\n	""56"" -> ""3""[label=""cfg_except""];\n	""56"" -> ""34""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_except""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_except""];\n	""8"" -> ""2""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_except""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.Parser.describePosition(String,int)",Method,* Describe a parse position.\n     * @param expression to parse\n     * @param position parse position\n     * @return String,"private static String describePosition(final String expression, final int position) {\n    if (position <= 0) {\n        return ""at the beginning of the expression"";\n    }\n    if (position >= expression.length()) {\n        return ""- expression incomplete"";\n    }\n    return ""after: '"" + addEscapes(expression.substring(0, position)) + ""'"";\n}","java.lang.String describePosition(java.lang.String,int)","digraph cfg_describePosition {\n	""1"" [label=""$stack2 = virtualinvoke expression.<java.lang.String: int length()>()""];\n	""2"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack4 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int,int)>(0, position)""];\n	""4"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.ri.Parser: java.lang.String addEscapes(java.lang.String)>($stack4)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""after: \'\"")""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""8"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""expression := @parameter0: java.lang.String""];\n	""10"" [label=""if position < $stack2""];\n	""11"" [label=""if position > 0""];\n	""12"" [label=""position := @parameter1: int""];\n	""13"" [label=""return \""- expression incomplete\""""];\n	""14"" [label=""return \""at the beginning of the expression\""""];\n	""15"" [label=""return $stack9""];\n	""16"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""1""[label=""cfg_true""];\n	""11"" -> ""14""[label=""cfg_false""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.Parser.addEscapes(String),Method,* Add escapes to the specified String.\n     * @param string incoming String\n     * @return String,private static String addEscapes(final String string) {\n    // Piggy-back on the code generated by JavaCC\n    return TokenMgrError.addEscapes(string);\n},java.lang.String addEscapes(java.lang.String),"digraph cfg_addEscapes {\n	""1"" [label=""$stack1 = staticinvoke <org.apache.commons.jxpath.ri.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(string)""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""string := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.axes.AncestorContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    return currentNodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AncestorContext.getDocumentOrder(),Method,No Comment,@Override\npublic int getDocumentOrder() {\n    return -1;\n},int getDocumentOrder(),"digraph cfg_getDocumentOrder {\n	""1"" [label=""return -1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AncestorContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    super.reset();\n    setStarted = false;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: boolean setStarted> = 0""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AncestorContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (position < getCurrentPosition()) {\n        reset();\n    }\n    while (getCurrentPosition() < position) {\n        if (!nextNode()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AncestorContext: int getCurrentPosition()>()""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AncestorContext: int getCurrentPosition()>()""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AncestorContext: boolean nextNode()>()""];\n	""4"" [label=""if $stack3 >= position""];\n	""5"" [label=""if $stack4 != 0""];\n	""6"" [label=""if position >= $stack2""];\n	""7"" [label=""position := @parameter0: int""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""11"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AncestorContext: void reset()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""4"" -> ""9""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AncestorContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    if (!setStarted) {\n        setStarted = true;\n        currentNodePointer = parentContext.getCurrentNodePointer();\n        if (includeSelf && currentNodePointer.testNode(nodeTest)) {\n            position++;\n            return true;\n        }\n    }\n    while (true) {\n        currentNodePointer = currentNodePointer.getImmediateParentPointer();\n        if (currentNodePointer == null) {\n            return false;\n        }\n        if (currentNodePointer.testNode(nodeTest)) {\n            position++;\n            return true;\n        }\n    }\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: boolean setStarted>""];\n	""2"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: boolean includeSelf>""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""7"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack13)""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: int position>""];\n	""9"" [label=""$stack17 = $stack16 + 1""];\n	""10"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""11"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""12"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""13"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""14"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""15"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack5)""];\n	""16"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.axes.AncestorContext: int position>""];\n	""17"" [label=""$stack9 = $stack8 + 1""];\n	""18"" [label=""if $stack1 != 0""];\n	""19"" [label=""if $stack12 == 0""];\n	""20"" [label=""if $stack15 == 0""];\n	""21"" [label=""if $stack4 != null""];\n	""22"" [label=""if $stack7 == 0""];\n	""23"" [label=""return 0""];\n	""24"" [label=""return 1""];\n	""25"" [label=""return 1""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""27"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: boolean setStarted> = 1""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: int position> = $stack17""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: int position> = $stack9""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack11""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack3""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""21""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""22""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_true""];\n	""18"" -> ""27""[label=""cfg_false""];\n	""19"" -> ""10""[label=""cfg_true""];\n	""19"" -> ""6""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_true""];\n	""20"" -> ""8""[label=""cfg_false""];\n	""21"" -> ""14""[label=""cfg_true""];\n	""21"" -> ""23""[label=""cfg_false""];\n	""22"" -> ""10""[label=""cfg_true""];\n	""22"" -> ""16""[label=""cfg_false""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""27"" -> ""2""[label=""cfg_next""];\n	""28"" -> ""24""[label=""cfg_next""];\n	""29"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""30""[label=""cfg_next""];\n	""30"" -> ""4""[label=""cfg_next""];\n	""31"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""28""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.AncestorContext.<init>(EvalContext,boolean,NodeTest)",Constructor,"* Create a new AncestorContext.\n     * @param parentContext represents the previous step on the path\n     * @param  includeSelf differentiates between ""ancestor::"" and\n     *                     ""ancestor-or-self::"" axes\n     * @param nodeTest is the name of the element(s) we are looking for","public AncestorContext(final EvalContext parentContext, final boolean includeSelf, final NodeTest nodeTest) {\n    super(parentContext);\n    this.includeSelf = includeSelf;\n    this.nodeTest = nodeTest;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,boolean,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_init {\n	""1"" [label=""includeSelf := @parameter1: boolean""];\n	""2"" [label=""nodeTest := @parameter2: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""3"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: boolean includeSelf> = includeSelf""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: boolean setStarted> = 0""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.axes.AncestorContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ParentContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    return currentNodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ParentContext.getCurrentPosition(),Method,No Comment,@Override\npublic int getCurrentPosition() {\n    return 1;\n},int getCurrentPosition(),"digraph cfg_getCurrentPosition {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ParentContext.getDocumentOrder(),Method,No Comment,@Override\npublic int getDocumentOrder() {\n    return -1;\n},int getDocumentOrder(),"digraph cfg_getDocumentOrder {\n	""1"" [label=""return -1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ParentContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    super.reset();\n    setStarted = false;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.ParentContext: boolean setStarted> = 0""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ParentContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    super.setPosition(position);\n    return position == 1;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = 1""];\n	""3"" [label=""goto""];\n	""4"" [label=""if position != 1""];\n	""5"" [label=""position := @parameter0: int""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>(position)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_true""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ParentContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    // Each set contains exactly one node: the parent\n    if (setStarted) {\n        return false;\n    }\n    setStarted = true;\n    final NodePointer thisLocation = parentContext.getCurrentNodePointer();\n    currentNodePointer = thisLocation.getImmediateParentPointer();\n    while (currentNodePointer != null && currentNodePointer.isContainer()) {\n        currentNodePointer = currentNodePointer.getImmediateParentPointer();\n    }\n    if (currentNodePointer != null && currentNodePointer.testNode(nodeTest)) {\n        position++;\n        return true;\n    }\n    return false;\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: int position>""];\n	""2"" [label=""$stack11 = $stack10 + 1""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""7"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: boolean setStarted>""];\n	""8"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""9"" [label=""$stack4 = virtualinvoke thisLocation.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""10"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""11"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""12"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""13"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""14"" [label=""$stack9 = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack7)""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack13 == 0""];\n	""17"" [label=""if $stack2 == 0""];\n	""18"" [label=""if $stack5 == null""];\n	""19"" [label=""if $stack6 == null""];\n	""20"" [label=""if $stack9 == 0""];\n	""21"" [label=""return 0""];\n	""22"" [label=""return 0""];\n	""23"" [label=""return 1""];\n	""24"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.axes.ParentContext: boolean setStarted> = 1""];\n	""26"" [label=""this.<org.apache.commons.jxpath.ri.axes.ParentContext: int position> = $stack11""];\n	""27"" [label=""this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack15""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack4""];\n	""29"" [label=""thisLocation = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_goto""];\n	""16"" -> ""11""[label=""cfg_true""];\n	""16"" -> ""5""[label=""cfg_false""];\n	""17"" -> ""21""[label=""cfg_false""];\n	""17"" -> ""25""[label=""cfg_true""];\n	""18"" -> ""11""[label=""cfg_true""];\n	""18"" -> ""3""[label=""cfg_false""];\n	""19"" -> ""13""[label=""cfg_false""];\n	""19"" -> ""22""[label=""cfg_true""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_false""];\n	""20"" -> ""22""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""8""[label=""cfg_next""];\n	""26"" -> ""23""[label=""cfg_next""];\n	""27"" -> ""15""[label=""cfg_next""];\n	""28"" -> ""10""[label=""cfg_next""];\n	""29"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""27""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""28""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.ParentContext.<init>(EvalContext,NodeTest)",Constructor,* Create a new ParentContext.\n     * @param parentContext parent context\n     * @param nodeTest test,"public ParentContext(final EvalContext parentContext, final NodeTest nodeTest) {\n    super(parentContext);\n    this.nodeTest = nodeTest;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_init {\n	""1"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.axes.ParentContext: boolean setStarted> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.ParentContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    return currentNodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext.getDocumentOrder(),Method,No Comment,@Override\npublic int getDocumentOrder() {\n    return reverse ? -1 : 1;\n},int getDocumentOrder(),"digraph cfg_getDocumentOrder {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean reverse>""];\n	""2"" [label=""$stack2 = -1""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    super.reset();\n    setStarted = false;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean setStarted> = 0""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (position < this.position) {\n        reset();\n    }\n    while (this.position < position) {\n        if (!nextNode()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: int position>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: int position>""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean nextNode()>()""];\n	""4"" [label=""if $stack3 >= position""];\n	""5"" [label=""if $stack4 != 0""];\n	""6"" [label=""if position >= $stack2""];\n	""7"" [label=""position := @parameter0: int""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""11"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: void reset()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""4"" -> ""9""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext.nextNode(),Method,No Comment,"@Override\npublic boolean nextNode() {\n    if (!setStarted) {\n        setStarted = true;\n        if (stack == null) {\n            stack = new Stack();\n        } else {\n            stack.clear();\n        }\n        currentRootLocation = parentContext.getCurrentNodePointer();\n        final NodePointer parent = currentRootLocation.getParent();\n        if (parent != null) {\n            // TBD: check type\n            stack.push(parent.childIterator(null, reverse, currentRootLocation));\n        }\n    }\n    while (true) {\n        if (stack.isEmpty()) {\n            currentRootLocation = currentRootLocation.getParent();\n            if (currentRootLocation == null || currentRootLocation.isRoot()) {\n                break;\n            }\n            final NodePointer parent = currentRootLocation.getParent();\n            if (parent != null) {\n                stack.push(parent.childIterator(null, reverse, currentRootLocation));\n            }\n        }\n        while (!stack.isEmpty()) {\n            if (!reverse) {\n                final NodeIterator it = (NodeIterator) stack.peek();\n                if (it.setPosition(it.getPosition() + 1)) {\n                    currentNodePointer = it.getNodePointer();\n                    if (!currentNodePointer.isLeaf()) {\n                        stack.push(currentNodePointer.childIterator(null, reverse, null));\n                    }\n                    if (currentNodePointer.testNode(nodeTest)) {\n                        super.setPosition(getCurrentPosition() + 1);\n                        return true;\n                    }\n                } else {\n                    // We get here only if the name test failed\n                    // and the iterator ended\n                    stack.pop();\n                }\n            } else {\n                NodeIterator it = (NodeIterator) stack.peek();\n                if (it.setPosition(it.getPosition() + 1)) {\n                    currentNodePointer = it.getNodePointer();\n                    if (!currentNodePointer.isLeaf()) {\n                        stack.push(currentNodePointer.childIterator(null, reverse, null));\n                    } else if (currentNodePointer.testNode(nodeTest)) {\n                        super.setPosition(getCurrentPosition() + 1);\n                        return true;\n                    }\n                } else {\n                    stack.pop();\n                    if (!stack.isEmpty()) {\n                        it = (NodeIterator) stack.peek();\n                        currentNodePointer = it.getNodePointer();\n                        if (currentNodePointer.testNode(nodeTest)) {\n                            super.setPosition(getCurrentPosition() + 1);\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return false;\n}",boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack10 = interfaceinvoke parent.<org.apache.commons.jxpath.ri.model.NodeIterator: int getPosition()>()""];\n	""2"" [label=""$stack11 = $stack10 + 1""];\n	""3"" [label=""$stack12 = interfaceinvoke parent.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack11)""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.util.Stack: boolean isEmpty()>()""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.util.Stack: java.lang.Object peek()>()""];\n	""9"" [label=""$stack18 = interfaceinvoke parent.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""11"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean setStarted>""];\n	""12"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""13"" [label=""$stack21 = virtualinvoke $stack20.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack19)""];\n	""14"" [label=""$stack22 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: int getCurrentPosition()>()""];\n	""15"" [label=""$stack23 = $stack22 + 1""];\n	""16"" [label=""$stack24 = interfaceinvoke parent.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""17"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""18"" [label=""$stack26 = virtualinvoke $stack25.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLeaf()>()""];\n	""19"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""20"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""21"" [label=""$stack29 = virtualinvoke $stack28.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack27)""];\n	""22"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""23"" [label=""$stack30 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: int getCurrentPosition()>()""];\n	""24"" [label=""$stack31 = $stack30 + 1""];\n	""25"" [label=""$stack32 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean reverse>""];\n	""26"" [label=""$stack33 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""27"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""28"" [label=""$stack35 = virtualinvoke $stack33.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(null, $stack32, null)""];\n	""29"" [label=""$stack36 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""30"" [label=""$stack37 = virtualinvoke $stack36.<java.util.Stack: java.lang.Object peek()>()""];\n	""31"" [label=""$stack38 = interfaceinvoke parent.<org.apache.commons.jxpath.ri.model.NodeIterator: int getPosition()>()""];\n	""32"" [label=""$stack39 = $stack38 + 1""];\n	""33"" [label=""$stack4 = virtualinvoke $stack3.<java.util.Stack: boolean isEmpty()>()""];\n	""34"" [label=""$stack40 = interfaceinvoke parent.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack39)""];\n	""35"" [label=""$stack41 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""36"" [label=""$stack42 = interfaceinvoke parent.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""37"" [label=""$stack43 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""38"" [label=""$stack44 = virtualinvoke $stack43.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLeaf()>()""];\n	""39"" [label=""$stack45 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""40"" [label=""$stack46 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""41"" [label=""$stack47 = virtualinvoke $stack46.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack45)""];\n	""42"" [label=""$stack48 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: int getCurrentPosition()>()""];\n	""43"" [label=""$stack49 = $stack48 + 1""];\n	""44"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""45"" [label=""$stack50 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean reverse>""];\n	""46"" [label=""$stack51 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""47"" [label=""$stack52 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""48"" [label=""$stack53 = virtualinvoke $stack51.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(null, $stack50, null)""];\n	""49"" [label=""$stack54 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation>""];\n	""50"" [label=""$stack55 = virtualinvoke $stack54.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getParent()>()""];\n	""51"" [label=""$stack56 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation>""];\n	""52"" [label=""$stack57 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation>""];\n	""53"" [label=""$stack58 = virtualinvoke $stack57.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isRoot()>()""];\n	""54"" [label=""$stack59 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation>""];\n	""55"" [label=""$stack6 = virtualinvoke $stack5.<java.util.Stack: boolean isEmpty()>()""];\n	""56"" [label=""$stack60 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation>""];\n	""57"" [label=""$stack61 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean reverse>""];\n	""58"" [label=""$stack62 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""59"" [label=""$stack63 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(null, $stack61, $stack60)""];\n	""60"" [label=""$stack64 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""61"" [label=""$stack65 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""62"" [label=""$stack66 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""63"" [label=""$stack67 = virtualinvoke $stack66.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""64"" [label=""$stack68 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation>""];\n	""65"" [label=""$stack69 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation>""];\n	""66"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean reverse>""];\n	""67"" [label=""$stack70 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean reverse>""];\n	""68"" [label=""$stack71 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""69"" [label=""$stack72 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(null, $stack70, $stack69)""];\n	""70"" [label=""$stack73 = new java.util.Stack""];\n	""71"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack>""];\n	""72"" [label=""$stack9 = virtualinvoke $stack8.<java.util.Stack: java.lang.Object peek()>()""];\n	""73"" [label=""goto""];\n	""74"" [label=""goto""];\n	""75"" [label=""goto""];\n	""76"" [label=""goto""];\n	""77"" [label=""goto""];\n	""78"" [label=""if $stack12 == 0""];\n	""79"" [label=""if $stack15 != 0""];\n	""80"" [label=""if $stack2 != 0""];\n	""81"" [label=""if $stack21 == 0""];\n	""82"" [label=""if $stack26 != 0""];\n	""83"" [label=""if $stack29 == 0""];\n	""84"" [label=""if $stack4 == 0""];\n	""85"" [label=""if $stack40 == 0""];\n	""86"" [label=""if $stack44 != 0""];\n	""87"" [label=""if $stack47 == 0""];\n	""88"" [label=""if $stack56 == null""];\n	""89"" [label=""if $stack58 == 0""];\n	""90"" [label=""if $stack6 != 0""];\n	""91"" [label=""if $stack64 != null""];\n	""92"" [label=""if $stack7 != 0""];\n	""93"" [label=""if parent == null""];\n	""94"" [label=""if parent == null""];\n	""95"" [label=""parent = (org.apache.commons.jxpath.ri.model.NodeIterator) $stack17""];\n	""96"" [label=""parent = (org.apache.commons.jxpath.ri.model.NodeIterator) $stack37""];\n	""97"" [label=""parent = (org.apache.commons.jxpath.ri.model.NodeIterator) $stack9""];\n	""98"" [label=""parent = virtualinvoke $stack59.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getParent()>()""];\n	""99"" [label=""parent = virtualinvoke $stack68.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getParent()>()""];\n	""100"" [label=""return 0""];\n	""101"" [label=""return 1""];\n	""102"" [label=""return 1""];\n	""103"" [label=""return 1""];\n	""104"" [label=""specialinvoke $stack73.<java.util.Stack: void <init>()>()""];\n	""105"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>($stack23)""];\n	""106"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>($stack31)""];\n	""107"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>($stack49)""];\n	""108"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""109"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean setStarted> = 1""];\n	""110"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack> = $stack73""];\n	""111"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack18""];\n	""112"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack24""];\n	""113"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack42""];\n	""114"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation> = $stack55""];\n	""115"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.model.NodePointer currentRootLocation> = $stack67""];\n	""116"" [label=""virtualinvoke $stack13.<java.util.Stack: java.lang.Object pop()>()""];\n	""117"" [label=""virtualinvoke $stack34.<java.util.Stack: java.lang.Object push(java.lang.Object)>($stack35)""];\n	""118"" [label=""virtualinvoke $stack41.<java.util.Stack: java.lang.Object pop()>()""];\n	""119"" [label=""virtualinvoke $stack52.<java.util.Stack: java.lang.Object push(java.lang.Object)>($stack53)""];\n	""120"" [label=""virtualinvoke $stack62.<java.util.Stack: java.lang.Object push(java.lang.Object)>($stack63)""];\n	""121"" [label=""virtualinvoke $stack65.<java.util.Stack: void clear()>()""];\n	""122"" [label=""virtualinvoke $stack71.<java.util.Stack: java.lang.Object push(java.lang.Object)>($stack72)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""104"" -> ""110""[label=""cfg_next""];\n	""105"" -> ""103""[label=""cfg_next""];\n	""106"" -> ""102""[label=""cfg_next""];\n	""107"" -> ""101""[label=""cfg_next""];\n	""108"" -> ""11""[label=""cfg_next""];\n	""109"" -> ""60""[label=""cfg_next""];\n	""11"" -> ""80""[label=""cfg_next""];\n	""110"" -> ""73""[label=""cfg_next""];\n	""111"" -> ""12""[label=""cfg_next""];\n	""112"" -> ""17""[label=""cfg_next""];\n	""113"" -> ""37""[label=""cfg_next""];\n	""114"" -> ""51""[label=""cfg_next""];\n	""115"" -> ""64""[label=""cfg_next""];\n	""116"" -> ""5""[label=""cfg_next""];\n	""117"" -> ""76""[label=""cfg_next""];\n	""118"" -> ""75""[label=""cfg_next""];\n	""119"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""120"" -> ""44""[label=""cfg_next""];\n	""121"" -> ""62""[label=""cfg_next""];\n	""122"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""81""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""105""[label=""cfg_next""];\n	""16"" -> ""112""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""82""[label=""cfg_next""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""83""[label=""cfg_next""];\n	""22"" -> ""33""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""106""[label=""cfg_next""];\n	""25"" -> ""28""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""26""[label=""cfg_next""];\n	""28"" -> ""117""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""78""[label=""cfg_next""];\n	""30"" -> ""96""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""34""[label=""cfg_next""];\n	""33"" -> ""84""[label=""cfg_next""];\n	""34"" -> ""85""[label=""cfg_next""];\n	""35"" -> ""118""[label=""cfg_next""];\n	""36"" -> ""113""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""86""[label=""cfg_next""];\n	""39"" -> ""41""[label=""cfg_next""];\n	""4"" -> ""116""[label=""cfg_next""];\n	""40"" -> ""39""[label=""cfg_next""];\n	""41"" -> ""87""[label=""cfg_next""];\n	""42"" -> ""43""[label=""cfg_next""];\n	""43"" -> ""107""[label=""cfg_next""];\n	""44"" -> ""55""[label=""cfg_next""];\n	""45"" -> ""48""[label=""cfg_next""];\n	""46"" -> ""45""[label=""cfg_next""];\n	""47"" -> ""46""[label=""cfg_next""];\n	""48"" -> ""119""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""114""[label=""cfg_next""];\n	""51"" -> ""88""[label=""cfg_next""];\n	""52"" -> ""53""[label=""cfg_next""];\n	""53"" -> ""89""[label=""cfg_next""];\n	""54"" -> ""98""[label=""cfg_next""];\n	""55"" -> ""90""[label=""cfg_next""];\n	""56"" -> ""59""[label=""cfg_next""];\n	""57"" -> ""56""[label=""cfg_next""];\n	""58"" -> ""57""[label=""cfg_next""];\n	""59"" -> ""120""[label=""cfg_next""];\n	""6"" -> ""79""[label=""cfg_next""];\n	""60"" -> ""91""[label=""cfg_next""];\n	""61"" -> ""121""[label=""cfg_next""];\n	""62"" -> ""63""[label=""cfg_next""];\n	""63"" -> ""115""[label=""cfg_next""];\n	""64"" -> ""99""[label=""cfg_next""];\n	""65"" -> ""69""[label=""cfg_next""];\n	""66"" -> ""92""[label=""cfg_next""];\n	""67"" -> ""65""[label=""cfg_next""];\n	""68"" -> ""67""[label=""cfg_next""];\n	""69"" -> ""122""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""104""[label=""cfg_next""];\n	""71"" -> ""72""[label=""cfg_next""];\n	""72"" -> ""97""[label=""cfg_next""];\n	""73"" -> ""62""[label=""cfg_goto""];\n	""74"" -> ""100""[label=""cfg_goto""];\n	""75"" -> ""44""[label=""cfg_goto""];\n	""76"" -> ""77""[label=""cfg_goto""];\n	""77"" -> ""44""[label=""cfg_goto""];\n	""78"" -> ""16""[label=""cfg_false""];\n	""78"" -> ""4""[label=""cfg_true""];\n	""79"" -> ""7""[label=""cfg_false""];\n	""79"" -> ""77""[label=""cfg_true""];\n	""8"" -> ""95""[label=""cfg_next""];\n	""80"" -> ""109""[label=""cfg_false""];\n	""80"" -> ""22""[label=""cfg_true""];\n	""81"" -> ""14""[label=""cfg_false""];\n	""81"" -> ""77""[label=""cfg_true""];\n	""82"" -> ""20""[label=""cfg_true""];\n	""82"" -> ""27""[label=""cfg_false""];\n	""83"" -> ""23""[label=""cfg_false""];\n	""83"" -> ""77""[label=""cfg_true""];\n	""84"" -> ""44""[label=""cfg_true""];\n	""84"" -> ""49""[label=""cfg_false""];\n	""85"" -> ""35""[label=""cfg_true""];\n	""85"" -> ""36""[label=""cfg_false""];\n	""86"" -> ""40""[label=""cfg_true""];\n	""86"" -> ""47""[label=""cfg_false""];\n	""87"" -> ""42""[label=""cfg_false""];\n	""87"" -> ""75""[label=""cfg_true""];\n	""88"" -> ""100""[label=""cfg_true""];\n	""88"" -> ""52""[label=""cfg_false""];\n	""89"" -> ""54""[label=""cfg_true""];\n	""89"" -> ""74""[label=""cfg_false""];\n	""9"" -> ""111""[label=""cfg_next""];\n	""90"" -> ""22""[label=""cfg_true""];\n	""90"" -> ""66""[label=""cfg_false""];\n	""91"" -> ""61""[label=""cfg_true""];\n	""91"" -> ""70""[label=""cfg_false""];\n	""92"" -> ""29""[label=""cfg_false""];\n	""92"" -> ""71""[label=""cfg_true""];\n	""93"" -> ""22""[label=""cfg_true""];\n	""93"" -> ""68""[label=""cfg_false""];\n	""94"" -> ""44""[label=""cfg_true""];\n	""94"" -> ""58""[label=""cfg_false""];\n	""95"" -> ""9""[label=""cfg_next""];\n	""96"" -> ""31""[label=""cfg_next""];\n	""97"" -> ""1""[label=""cfg_next""];\n	""98"" -> ""94""[label=""cfg_next""];\n	""99"" -> ""93""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext.<init>(EvalContext,NodeTest,boolean)",Constructor,* Create a new PrecedingOrFollowingContext.\n     * @param parentContext parent context\n     * @param nodeTest test\n     * @param reverse whether to iterate in reverse order,"public PrecedingOrFollowingContext(final EvalContext parentContext, final NodeTest nodeTest, final boolean reverse) {\n    super(parentContext);\n    this.nodeTest = nodeTest;\n    this.reverse = reverse;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean)","digraph cfg_init {\n	""1"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return""];\n	""4"" [label=""reverse := @parameter2: boolean""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean reverse> = reverse""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: boolean setStarted> = 0""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: java.util.Stack stack> = null""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NamespaceContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    return currentNodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NamespaceContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NamespaceContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    setStarted = false;\n    iterator = null;\n    super.reset();\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NamespaceContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: boolean setStarted> = 0""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator> = null""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NamespaceContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (position < getCurrentPosition()) {\n        reset();\n    }\n    while (getCurrentPosition() < position) {\n        if (!nextNode()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: int getCurrentPosition()>()""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: int getCurrentPosition()>()""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: boolean nextNode()>()""];\n	""4"" [label=""if $stack3 >= position""];\n	""5"" [label=""if $stack4 != 0""];\n	""6"" [label=""if position >= $stack2""];\n	""7"" [label=""position := @parameter0: int""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NamespaceContext""];\n	""11"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: void reset()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""4"" -> ""9""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NamespaceContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    super.setPosition(getCurrentPosition() + 1);\n    if (!setStarted) {\n        setStarted = true;\n        if (!(nodeTest instanceof NodeNameTest)) {\n            return false;\n        }\n        final NodeNameTest nodeNameTest = (NodeNameTest) nodeTest;\n        final QName testName = nodeNameTest.getNodeName();\n        if (testName.getPrefix() != null) {\n            return false;\n        }\n        if (nodeNameTest.isWildcard()) {\n            iterator = parentContext.getCurrentNodePointer().namespaceIterator();\n        } else {\n            currentNodePointer = parentContext.getCurrentNodePointer().namespacePointer(testName.getName());\n            return currentNodePointer != null;\n        }\n    }\n    if (iterator == null) {\n        return false;\n    }\n    if (!iterator.setPosition(iterator.getPosition() + 1)) {\n        return false;\n    }\n    currentNodePointer = iterator.getNodePointer();\n    return true;\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack10 = $stack9 + 1""];\n	""2"" [label=""$stack11 = interfaceinvoke $stack8.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack10)""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""4"" [label=""$stack13 = interfaceinvoke $stack12.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""6"" [label=""$stack15 = $stack14 instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""8"" [label=""$stack17 = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""9"" [label=""$stack18 = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: boolean isWildcard()>()""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""11"" [label=""$stack20 = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""12"" [label=""$stack21 = virtualinvoke $stack19.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String)>($stack20)""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""15"" [label=""$stack24 = 0""];\n	""16"" [label=""$stack24 = 1""];\n	""17"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""18"" [label=""$stack26 = virtualinvoke $stack25.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""19"" [label=""$stack27 = virtualinvoke $stack26.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator()>()""];\n	""20"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: int getCurrentPosition()>()""];\n	""21"" [label=""$stack4 = $stack3 + 1""];\n	""22"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: boolean setStarted>""];\n	""23"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""24"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""25"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""26"" [label=""$stack9 = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.model.NodeIterator: int getPosition()>()""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""if $stack11 != 0""];\n	""30"" [label=""if $stack15 != 0""];\n	""31"" [label=""if $stack17 == null""];\n	""32"" [label=""if $stack18 == 0""];\n	""33"" [label=""if $stack23 == null""];\n	""34"" [label=""if $stack5 != 0""];\n	""35"" [label=""if $stack6 != null""];\n	""36"" [label=""nodeNameTest = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) $stack16""];\n	""37"" [label=""return $stack24""];\n	""38"" [label=""return 0""];\n	""39"" [label=""return 0""];\n	""40"" [label=""return 0""];\n	""41"" [label=""return 0""];\n	""42"" [label=""return 1""];\n	""43"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>($stack4)""];\n	""44"" [label=""testName = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""45"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NamespaceContext""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: boolean setStarted> = 1""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator> = $stack27""];\n	""48"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack13""];\n	""49"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack22""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""49""[label=""cfg_next""];\n	""14"" -> ""33""[label=""cfg_next""];\n	""15"" -> ""37""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""47""[label=""cfg_next""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""43""[label=""cfg_next""];\n	""22"" -> ""34""[label=""cfg_next""];\n	""23"" -> ""35""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""27"" -> ""23""[label=""cfg_goto""];\n	""28"" -> ""37""[label=""cfg_goto""];\n	""29"" -> ""3""[label=""cfg_true""];\n	""29"" -> ""41""[label=""cfg_false""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""38""[label=""cfg_false""];\n	""30"" -> ""7""[label=""cfg_true""];\n	""31"" -> ""39""[label=""cfg_false""];\n	""31"" -> ""9""[label=""cfg_true""];\n	""32"" -> ""10""[label=""cfg_true""];\n	""32"" -> ""17""[label=""cfg_false""];\n	""33"" -> ""15""[label=""cfg_true""];\n	""33"" -> ""16""[label=""cfg_false""];\n	""34"" -> ""23""[label=""cfg_true""];\n	""34"" -> ""46""[label=""cfg_false""];\n	""35"" -> ""25""[label=""cfg_true""];\n	""35"" -> ""40""[label=""cfg_false""];\n	""36"" -> ""44""[label=""cfg_next""];\n	""4"" -> ""48""[label=""cfg_next""];\n	""43"" -> ""22""[label=""cfg_next""];\n	""44"" -> ""8""[label=""cfg_next""];\n	""45"" -> ""20""[label=""cfg_next""];\n	""46"" -> ""5""[label=""cfg_next""];\n	""47"" -> ""27""[label=""cfg_next""];\n	""48"" -> ""42""[label=""cfg_next""];\n	""49"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""36""[label=""cfg_next""];\n	""8"" -> ""31""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.NamespaceContext.<init>(EvalContext,NodeTest)",Constructor,* @param parentContext represents the previous step on the path\n     * @param nodeTest is the name of the namespace we are looking for,"public NamespaceContext(final EvalContext parentContext, final NodeTest nodeTest) {\n    super(parentContext);\n    this.nodeTest = nodeTest;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_init {\n	""1"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NamespaceContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: boolean setStarted> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.NamespaceContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PredicateContext.nextNode(),Method,No Comment,"@Override\npublic boolean nextNode() {\n    if (done) {\n        return false;\n    }\n    while (parentContext.nextNode()) {\n        if (setupDynamicPropertyPointer()) {\n            final Object pred = nameTestExpression.computeValue(parentContext);\n            final String propertyName = InfoSetUtil.stringValue(pred);\n            // At this point it would be nice to say:\n            // dynamicPropertyPointer.setPropertyName(propertyName)\n            // and then: dynamicPropertyPointer.isActual().\n            // However some PropertyPointers, e.g. DynamicPropertyPointer\n            // will declare that any property you ask for is actual.\n            // That's not acceptable for us: we really need to know\n            // if the property is currently declared. Thus,\n            // we'll need to perform a search.\n            boolean ok = false;\n            final String[] names = dynamicPropertyPointer.getPropertyNames();\n            for (final String name : names) {\n                if (name.equals(propertyName)) {\n                    ok = true;\n                    break;\n                }\n            }\n            if (ok) {\n                dynamicPropertyPointer.setPropertyName(propertyName);\n                position++;\n                return true;\n            }\n        } else {\n            Object pred = expression.computeValue(parentContext);\n            if (pred instanceof Iterator) {\n                if (!((Iterator) pred).hasNext()) {\n                    return false;\n                }\n                pred = ((Iterator) pred).next();\n            }\n            if (pred instanceof NodePointer) {\n                pred = ((NodePointer) pred).getNode();\n            }\n            if (pred instanceof Number) {\n                final int pos = (int) InfoSetUtil.doubleValue(pred);\n                position++;\n                done = true;\n                return parentContext.setPosition(pos);\n            }\n            if (InfoSetUtil.booleanValue(pred)) {\n                position++;\n                return true;\n            }\n        }\n    }\n    return false;\n}",boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean setupDynamicPropertyPointer()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""6"" [label=""$stack15 = pred instanceof java.util.Iterator""];\n	""7"" [label=""$stack16 = pred instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""8"" [label=""$stack17 = pred instanceof java.lang.Number""];\n	""9"" [label=""$stack18 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>(pred)""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position>""];\n	""11"" [label=""$stack20 = $stack19 + 1""];\n	""12"" [label=""$stack21 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(pred)""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position>""];\n	""14"" [label=""$stack23 = $stack22 + 1""];\n	""15"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""16"" [label=""$stack25 = virtualinvoke $stack24.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>(propertyName)""];\n	""17"" [label=""$stack26 = (org.apache.commons.jxpath.ri.model.NodePointer) pred""];\n	""18"" [label=""$stack27 = (java.util.Iterator) pred""];\n	""19"" [label=""$stack28 = interfaceinvoke $stack27.<java.util.Iterator: boolean hasNext()>()""];\n	""20"" [label=""$stack29 = (java.util.Iterator) pred""];\n	""21"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""22"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.compiler.Expression nameTestExpression>""];\n	""23"" [label=""$stack32 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer>""];\n	""24"" [label=""$stack33 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer>""];\n	""25"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position>""];\n	""26"" [label=""$stack35 = $stack34 + 1""];\n	""27"" [label=""$stack36 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>(propertyName)""];\n	""28"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean done>""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""if $stack11 == 0""];\n	""34"" [label=""if $stack12 == 0""];\n	""35"" [label=""if $stack15 == 0""];\n	""36"" [label=""if $stack16 == 0""];\n	""37"" [label=""if $stack17 == 0""];\n	""38"" [label=""if $stack18 == 0""];\n	""39"" [label=""if $stack28 != 0""];\n	""40"" [label=""if $stack36 == 0""];\n	""41"" [label=""if $stack9 == 0""];\n	""42"" [label=""if l7 >= l6""];\n	""43"" [label=""if ok == 0""];\n	""44"" [label=""l5 = names""];\n	""45"" [label=""l6 = lengthof l5""];\n	""46"" [label=""l7 = 0""];\n	""47"" [label=""l7 = l7 + 1""];\n	""48"" [label=""name = l5[l7]""];\n	""49"" [label=""names = virtualinvoke $stack32.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""50"" [label=""ok = 0""];\n	""51"" [label=""ok = 1""];\n	""52"" [label=""pred = interfaceinvoke $stack29.<java.util.Iterator: java.lang.Object next()>()""];\n	""53"" [label=""pred = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>($stack13)""];\n	""54"" [label=""pred = virtualinvoke $stack26.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""55"" [label=""pred = virtualinvoke $stack31.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>($stack30)""];\n	""56"" [label=""propertyName = (int) $stack21""];\n	""57"" [label=""propertyName = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>(pred)""];\n	""58"" [label=""return $stack25""];\n	""59"" [label=""return 0""];\n	""60"" [label=""return 0""];\n	""61"" [label=""return 0""];\n	""62"" [label=""return 1""];\n	""63"" [label=""return 1""];\n	""64"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""65"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean done> = 1""];\n	""66"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position> = $stack20""];\n	""67"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position> = $stack23""];\n	""68"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position> = $stack35""];\n	""69"" [label=""virtualinvoke $stack33.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyName(java.lang.String)>(propertyName)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""66""[label=""cfg_next""];\n	""12"" -> ""56""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""67""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""58""[label=""cfg_next""];\n	""17"" -> ""54""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""39""[label=""cfg_next""];\n	""2"" -> ""33""[label=""cfg_next""];\n	""20"" -> ""52""[label=""cfg_next""];\n	""21"" -> ""55""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""49""[label=""cfg_next""];\n	""24"" -> ""69""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""68""[label=""cfg_next""];\n	""27"" -> ""40""[label=""cfg_next""];\n	""28"" -> ""41""[label=""cfg_next""];\n	""29"" -> ""43""[label=""cfg_goto""];\n	""3"" -> ""34""[label=""cfg_next""];\n	""30"" -> ""42""[label=""cfg_goto""];\n	""31"" -> ""1""[label=""cfg_goto""];\n	""32"" -> ""1""[label=""cfg_goto""];\n	""33"" -> ""3""[label=""cfg_false""];\n	""33"" -> ""60""[label=""cfg_true""];\n	""34"" -> ""22""[label=""cfg_false""];\n	""34"" -> ""5""[label=""cfg_true""];\n	""35"" -> ""18""[label=""cfg_false""];\n	""35"" -> ""7""[label=""cfg_true""];\n	""36"" -> ""17""[label=""cfg_false""];\n	""36"" -> ""8""[label=""cfg_true""];\n	""37"" -> ""12""[label=""cfg_false""];\n	""37"" -> ""9""[label=""cfg_true""];\n	""38"" -> ""10""[label=""cfg_false""];\n	""38"" -> ""32""[label=""cfg_true""];\n	""39"" -> ""20""[label=""cfg_true""];\n	""39"" -> ""61""[label=""cfg_false""];\n	""4"" -> ""53""[label=""cfg_next""];\n	""40"" -> ""47""[label=""cfg_true""];\n	""40"" -> ""51""[label=""cfg_false""];\n	""41"" -> ""1""[label=""cfg_true""];\n	""41"" -> ""59""[label=""cfg_false""];\n	""42"" -> ""43""[label=""cfg_true""];\n	""42"" -> ""48""[label=""cfg_false""];\n	""43"" -> ""24""[label=""cfg_false""];\n	""43"" -> ""31""[label=""cfg_true""];\n	""44"" -> ""45""[label=""cfg_next""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""46"" -> ""42""[label=""cfg_next""];\n	""47"" -> ""30""[label=""cfg_next""];\n	""48"" -> ""27""[label=""cfg_next""];\n	""49"" -> ""44""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""50"" -> ""23""[label=""cfg_next""];\n	""51"" -> ""29""[label=""cfg_next""];\n	""52"" -> ""7""[label=""cfg_next""];\n	""53"" -> ""6""[label=""cfg_next""];\n	""54"" -> ""8""[label=""cfg_next""];\n	""55"" -> ""57""[label=""cfg_next""];\n	""56"" -> ""13""[label=""cfg_next""];\n	""57"" -> ""50""[label=""cfg_next""];\n	""6"" -> ""35""[label=""cfg_next""];\n	""64"" -> ""28""[label=""cfg_next""];\n	""65"" -> ""15""[label=""cfg_next""];\n	""66"" -> ""63""[label=""cfg_next""];\n	""67"" -> ""65""[label=""cfg_next""];\n	""68"" -> ""62""[label=""cfg_next""];\n	""69"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""36""[label=""cfg_next""];\n	""8"" -> ""37""[label=""cfg_next""];\n	""9"" -> ""38""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PredicateContext.setupDynamicPropertyPointer(),Method,"* Used for an optimized access to dynamic properties using the\n     * ""map[@name = 'name']"" syntax\n     * @return whether valid",private boolean setupDynamicPropertyPointer() {\n    if (nameTestExpression == null) {\n        return false;\n    }\n    NodePointer parent = parentContext.getCurrentNodePointer();\n    if (parent == null) {\n        return false;\n    }\n    parent = parent.getValuePointer();\n    if (!(parent instanceof PropertyOwnerPointer)) {\n        return false;\n    }\n    dynamicPropertyPointer = (PropertyPointer) ((PropertyOwnerPointer) parent).getPropertyPointer().clone();\n    return true;\n},boolean setupDynamicPropertyPointer(),"digraph cfg_setupDynamicPropertyPointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.compiler.Expression nameTestExpression>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""3"" [label=""$stack4 = parent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""4"" [label=""$stack5 = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) parent""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer()>()""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object clone()>()""];\n	""7"" [label=""$stack8 = (org.apache.commons.jxpath.ri.model.beans.PropertyPointer) $stack7""];\n	""8"" [label=""if $stack2 != null""];\n	""9"" [label=""if $stack4 != 0""];\n	""10"" [label=""if parent != null""];\n	""11"" [label=""parent = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""12"" [label=""parent = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""13"" [label=""return 0""];\n	""14"" [label=""return 0""];\n	""15"" [label=""return 0""];\n	""16"" [label=""return 1""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer> = $stack8""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_true""];\n	""10"" -> ""14""[label=""cfg_false""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""15""[label=""cfg_false""];\n	""9"" -> ""4""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.axes.PredicateContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (nameTestExpression == null) {\n        return setPositionStandard(position);\n    }\n    if (dynamicPropertyPointer == null && !setupDynamicPropertyPointer()) {\n        return setPositionStandard(position);\n    }\n    if (position < 1 || position > dynamicPropertyPointer.getLength()) {\n        return false;\n    }\n    dynamicPropertyPointer.setIndex(position - 1);\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean setPositionStandard(int)>(position)""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.compiler.Expression nameTestExpression>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getLength()>()""];\n	""6"" [label=""$stack6 = position - 1""];\n	""7"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer>""];\n	""8"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean setupDynamicPropertyPointer()>()""];\n	""9"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean setPositionStandard(int)>(position)""];\n	""10"" [label=""if $stack2 != null""];\n	""11"" [label=""if $stack3 != null""];\n	""12"" [label=""if $stack8 != 0""];\n	""13"" [label=""if position < 1""];\n	""14"" [label=""if position <= $stack5""];\n	""15"" [label=""position := @parameter0: int""];\n	""16"" [label=""return $stack10""];\n	""17"" [label=""return $stack9""];\n	""18"" [label=""return 0""];\n	""19"" [label=""return 1""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""21"" [label=""virtualinvoke $stack7.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>($stack6)""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""13""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""13""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""18""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""12""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PredicateContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    if (position == 0 && !setPosition(1)) {\n        return null;\n    }\n    if (dynamicPropertyPointer != null) {\n        return dynamicPropertyPointer.getValuePointer();\n    }\n    return parentContext.getCurrentNodePointer();\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.model.beans.PropertyPointer dynamicPropertyPointer>""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""7"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean setPosition(int)>(1)""];\n	""8"" [label=""if $stack1 != 0""];\n	""9"" [label=""if $stack2 == null""];\n	""10"" [label=""if $stack7 != 0""];\n	""11"" [label=""return $stack4""];\n	""12"" [label=""return $stack6""];\n	""13"" [label=""return null""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""7""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PredicateContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    super.reset();\n    parentContext.reset();\n    done = false;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean done> = 0""];\n	""6"" [label=""virtualinvoke $stack1.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PredicateContext.nextSet(),Method,No Comment,@Override\npublic boolean nextSet() {\n    reset();\n    return parentContext.nextSet();\n},boolean nextSet(),"digraph cfg_nextSet {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""5"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: void reset()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.PredicateContext.setPositionStandard(int),Method,* Basic setPosition\n     * @param position to set\n     * @return whether valid,private boolean setPositionStandard(final int position) {\n    if (this.position > position) {\n        reset();\n    }\n    while (this.position < position) {\n        if (!nextNode()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPositionStandard(int),"digraph cfg_setPositionStandard {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.PredicateContext: int position>""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean nextNode()>()""];\n	""4"" [label=""if $stack2 <= position""];\n	""5"" [label=""if $stack3 >= position""];\n	""6"" [label=""if $stack4 != 0""];\n	""7"" [label=""position := @parameter0: int""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""11"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.PredicateContext: void reset()>()""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.axes.PredicateContext.<init>(EvalContext,Expression)",Constructor,* Create a new PredicateContext.\n     * @param parentContext parent context\n     * @param expression compiled Expression,"public PredicateContext(final EvalContext parentContext, final Expression expression) {\n    super(parentContext);\n    this.expression = expression;\n    if (expression instanceof NameAttributeTest) {\n        nameTestExpression = ((NameAttributeTest) expression).getNameTestExpression();\n    }\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = expression instanceof org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.NameAttributeTest) expression""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.NameAttributeTest: org.apache.commons.jxpath.ri.compiler.Expression getNameTestExpression()>()""];\n	""4"" [label=""expression := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""return""];\n	""8"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: boolean done> = 0""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.compiler.Expression expression> = expression""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.axes.PredicateContext: org.apache.commons.jxpath.ri.compiler.Expression nameTestExpression> = $stack5""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NodeSetContext.getNodeSet(),Method,No Comment,@Override\npublic NodeSet getNodeSet() {\n    return nodeSet;\n},org.apache.commons.jxpath.NodeSet getNodeSet(),"digraph cfg_getNodeSet {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: org.apache.commons.jxpath.NodeSet nodeSet>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NodeSetContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    if (position == 0 && !setPosition(1)) {\n        return null;\n    }\n    return (NodePointer) nodeSet.getPointers().get(position - 1);\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: int position>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: org.apache.commons.jxpath.NodeSet nodeSet>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: int position>""];\n	""4"" [label=""$stack4 = $stack3 - 1""];\n	""5"" [label=""$stack5 = interfaceinvoke $stack2.<org.apache.commons.jxpath.NodeSet: java.util.List getPointers()>()""];\n	""6"" [label=""$stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>($stack4)""];\n	""7"" [label=""$stack7 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack6""];\n	""8"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: boolean setPosition(int)>(1)""];\n	""9"" [label=""if $stack1 != 0""];\n	""10"" [label=""if $stack8 != 0""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""return null""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""8""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NodeSetContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    super.setPosition(position);\n    return position >= 1 && position <= nodeSet.getPointers().size();\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: org.apache.commons.jxpath.NodeSet nodeSet>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<org.apache.commons.jxpath.NodeSet: java.util.List getPointers()>()""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<java.util.List: int size()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if position < 1""];\n	""8"" [label=""if position > $stack4""];\n	""9"" [label=""position := @parameter0: int""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>(position)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""1""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NodeSetContext.nextSet(),Method,No Comment,@Override\npublic boolean nextSet() {\n    if (startedSet) {\n        return false;\n    }\n    startedSet = true;\n    return true;\n},boolean nextSet(),"digraph cfg_nextSet {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: boolean startedSet>""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: boolean startedSet> = 1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_false""];\n	""2"" -> ""6""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.NodeSetContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    return setPosition(position + 1);\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: int position>""];\n	""2"" [label=""$stack2 = $stack1 + 1""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: boolean setPosition(int)>($stack2)""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.NodeSetContext.<init>(EvalContext,NodeSet)",Constructor,* Create a new NodeSetContext.\n     * @param parentContext parent context\n     * @param nodeSet associated NodeSet,"public NodeSetContext(final EvalContext parentContext, final NodeSet nodeSet) {\n    super(parentContext);\n    this.nodeSet = nodeSet;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.NodeSet)","digraph cfg_init {\n	""1"" [label=""nodeSet := @parameter1: org.apache.commons.jxpath.NodeSet""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: boolean startedSet> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: org.apache.commons.jxpath.NodeSet nodeSet> = nodeSet""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.interpretSimpleLocationPath(EvalContext,NodePointer,Step[])",Method,"* Interpret a simple path that starts with the given root and\n     * follows the given steps. All steps must have the axis ""child::""\n     * and a name test.  They can also optionally have predicates\n     * of type [@name=expression] or simply [expression] interpreted\n     * as an index.\n     * @param context evaluation context\n     * @param root root pointer\n     * @param steps path steps\n     * @return NodePointer","public static NodePointer interpretSimpleLocationPath(final EvalContext context, final NodePointer root, final Step[] steps) {\n    //        PATH = createNullPointer(context, root, steps, 0).toString();  // Dbg\n    final NodePointer pointer = doStep(context, root, steps, 0);\n    //        return valuePointer(pointer);\n    return pointer;\n}","org.apache.commons.jxpath.ri.model.NodePointer interpretSimpleLocationPath(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[])","digraph cfg_interpretSimpleLocationPath {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""2"" [label=""pointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, root, steps, 0)""];\n	""3"" [label=""return pointer""];\n	""4"" [label=""root := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.interpretSimpleExpressionPath(EvalContext,NodePointer,Expression[],Step[])",Method,"* Interpret the steps of a simple expression path that\n     * starts with the given root, which is the result of evaluation\n     * of the root expression of the expression path, applies the\n     * given predicates to it and then follows the given steps.\n     * All steps must have the axis ""child::"" or ""attribute::""\n     * and a name test.  They can also optionally have predicates\n     * of type [@name=...] or simply [...] interpreted as an index.\n     * @param context evaluation context\n     * @param root root pointer\n     * @param predicates predicates corresponding to {@code steps}\n     * @param steps path steps\n     * @return NodePointer","public static NodePointer interpretSimpleExpressionPath(final EvalContext context, final NodePointer root, final Expression[] predicates, final Step[] steps) {\n    //        PATH = createNullPointerForPredicates(context, root,\n    //                    steps, -1, predicates, 0).toString();  // Debugging\n    final NodePointer pointer = doPredicate(context, root, steps, -1, predicates, 0);\n    //        return valuePointer(pointer);\n    return pointer;\n}","org.apache.commons.jxpath.ri.model.NodePointer interpretSimpleExpressionPath(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Expression[],org.apache.commons.jxpath.ri.compiler.Step[])","digraph cfg_interpretSimpleExpressionPath {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""2"" [label=""pointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, root, steps, -1, predicates, 0)""];\n	""3"" [label=""predicates := @parameter2: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""4"" [label=""return pointer""];\n	""5"" [label=""root := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""steps := @parameter3: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStep(EvalContext,NodePointer,Step[],int)",Method,"* Recursive evaluation of a path. The general plan is:\n     * Look at the current step,\n     * find nodes that match it,\n     * iterate over those nodes and\n     * for each of them call doStep again for subsequent steps.\n     * @param context evaluation context\n     * @param parent parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @return NodePointer","private static NodePointer doStep(final EvalContext context, NodePointer parent, final Step[] steps, final int currentStep) {\n    if (parent == null) {\n        return null;\n    }\n    if (currentStep == steps.length) {\n        // We have reached the end of the list of steps\n        return parent;\n    }\n    // Open all containers\n    parent = valuePointer(parent);\n    final Step step = steps[currentStep];\n    final Expression[] predicates = step.getPredicates();\n    // Divide and conquer: the process is broken out into\n    // four major use cases.\n    // 1. Current step has no predicates and\n    //    the root is a property owner (e.g. bean or map)\n    // 2. Current step has predicates and\n    //    the root is a property owner (e.g. bean or map)\n    // 3. Current step has no predicates and\n    //    the root is an InfoSet standard node (e.g. DOM Node)\n    // 4. Current step has predicates and\n    //    the root is an InfoSet standard node (e.g. DOM Node)\n    if (parent instanceof PropertyOwnerPointer) {\n        if (predicates == null || predicates.length == 0) {\n            return doStepNoPredicatesPropertyOwner(context, (PropertyOwnerPointer) parent, steps, currentStep);\n        }\n        return doStepPredicatesPropertyOwner(context, (PropertyOwnerPointer) parent, steps, currentStep);\n    }\n    if (predicates == null || predicates.length == 0) {\n        return doStepNoPredicatesStandard(context, parent, steps, currentStep);\n    }\n    return doStepPredicatesStandard(context, parent, steps, currentStep);\n}","org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)","digraph cfg_doStep {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStepPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parent, steps, currentStep)""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) parent""];\n	""3"" [label=""$stack12 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStepNoPredicatesPropertyOwner(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, $stack11, steps, currentStep)""];\n	""4"" [label=""$stack13 = lengthof predicates""];\n	""5"" [label=""$stack14 = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) parent""];\n	""6"" [label=""$stack15 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStepPredicatesPropertyOwner(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, $stack14, steps, currentStep)""];\n	""7"" [label=""$stack6 = lengthof steps""];\n	""8"" [label=""$stack7 = parent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""9"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStepNoPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parent, steps, currentStep)""];\n	""10"" [label=""$stack9 = lengthof predicates""];\n	""11"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""12"" [label=""currentStep := @parameter3: int""];\n	""13"" [label=""if $stack13 != 0""];\n	""14"" [label=""if $stack7 == 0""];\n	""15"" [label=""if $stack9 != 0""];\n	""16"" [label=""if currentStep != $stack6""];\n	""17"" [label=""if parent != null""];\n	""18"" [label=""if predicates == null""];\n	""19"" [label=""if predicates == null""];\n	""20"" [label=""parent := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""21"" [label=""parent = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer valuePointer(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""22"" [label=""predicates = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""23"" [label=""return $stack10""];\n	""24"" [label=""return $stack12""];\n	""25"" [label=""return $stack15""];\n	""26"" [label=""return $stack8""];\n	""27"" [label=""return null""];\n	""28"" [label=""return parent""];\n	""29"" [label=""step = steps[currentStep]""];\n	""30"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""18""[label=""cfg_false""];\n	""14"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""1""[label=""cfg_true""];\n	""15"" -> ""9""[label=""cfg_false""];\n	""16"" -> ""21""[label=""cfg_true""];\n	""16"" -> ""28""[label=""cfg_false""];\n	""17"" -> ""27""[label=""cfg_false""];\n	""17"" -> ""7""[label=""cfg_true""];\n	""18"" -> ""2""[label=""cfg_true""];\n	""18"" -> ""4""[label=""cfg_false""];\n	""19"" -> ""10""[label=""cfg_false""];\n	""19"" -> ""9""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""29""[label=""cfg_next""];\n	""22"" -> ""8""[label=""cfg_next""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""30"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""26""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepNoPredicatesPropertyOwner(EvalContext,PropertyOwnerPointer,Step[],int)",Method,"* We have a step that starts with a property owner (bean, map, etc) and has\n     * no predicates.  The name test of the step may map to a scalar property\n     * or to a collection.  If it is a collection, we should apply the tail of\n     * the path to each element until we find a match. If we don't find\n     * a perfect match, we should return the ""best quality"" pointer, which\n     * has the longest chain of steps mapping to existing nodes and the shortes\n     * tail of Null* pointers.\n     * @param context evaluation context\n     * @param parentPointer property owner pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @return NodePointer","private static NodePointer doStepNoPredicatesPropertyOwner(final EvalContext context, final PropertyOwnerPointer parentPointer, final Step[] steps, final int currentStep) {\n    final Step step = steps[currentStep];\n    NodePointer childPointer = createChildPointerForStep(parentPointer, step);\n    if (childPointer == null) {\n        return null;\n    }\n    if (!childPointer.isActual()) {\n        // The property does not exist - create a null pointer.\n        return createNullPointer(context, parentPointer, steps, currentStep);\n    }\n    if (currentStep == steps.length - 1) {\n        // If this is the last step - we are done, we found it\n        return childPointer;\n    }\n    if (childPointer.isCollection()) {\n        // Iterate over all values and\n        // execute remaining steps for each node,\n        // looking for the best quality match\n        int bestQuality = 0;\n        childPointer = (NodePointer) childPointer.clone();\n        NodePointer bestMatch = null;\n        final int count = childPointer.getLength();\n        for (int i = 0; i < count; i++) {\n            childPointer.setIndex(i);\n            final NodePointer pointer = doStep(context, childPointer, steps, currentStep + 1);\n            final int quality = computeQuality(pointer);\n            if (quality == PERFECT_MATCH) {\n                return pointer;\n            } else if (quality > bestQuality) {\n                bestQuality = quality;\n                bestMatch = (NodePointer) pointer.clone();\n            }\n        }\n        if (bestMatch != null) {\n            return bestMatch;\n        }\n        // This step did not find anything - return a null pointer\n        return createNullPointer(context, childPointer, steps, currentStep);\n    }\n    // Evaluate subsequent steps\n    return doStep(context, childPointer, steps, currentStep + 1);\n}","org.apache.commons.jxpath.ri.model.NodePointer doStepNoPredicatesPropertyOwner(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.compiler.Step[],int)","digraph cfg_doStepNoPredicatesPropertyOwner {\n	""1"" [label=""$stack12 = virtualinvoke childPointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""2"" [label=""$stack13 = lengthof steps""];\n	""3"" [label=""$stack14 = $stack13 - 1""];\n	""4"" [label=""$stack15 = virtualinvoke childPointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isCollection()>()""];\n	""5"" [label=""$stack16 = currentStep + 1""];\n	""6"" [label=""$stack17 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, childPointer, steps, $stack16)""];\n	""7"" [label=""$stack18 = virtualinvoke childPointer.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""8"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, childPointer, steps, currentStep)""];\n	""9"" [label=""$stack20 = currentStep + 1""];\n	""10"" [label=""$stack21 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""11"" [label=""$stack22 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parentPointer, steps, currentStep)""];\n	""12"" [label=""bestMatch = (org.apache.commons.jxpath.ri.model.NodePointer) $stack21""];\n	""13"" [label=""bestMatch = null""];\n	""14"" [label=""bestQuality = 0""];\n	""15"" [label=""bestQuality = quality""];\n	""16"" [label=""childPointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack18""];\n	""17"" [label=""childPointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createChildPointerForStep(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.compiler.Step)>(parentPointer, step)""];\n	""18"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""count = virtualinvoke childPointer.<org.apache.commons.jxpath.ri.model.NodePointer: int getLength()>()""];\n	""20"" [label=""currentStep := @parameter3: int""];\n	""21"" [label=""goto""];\n	""22"" [label=""i = 0""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""if $stack12 != 0""];\n	""25"" [label=""if $stack15 == 0""];\n	""26"" [label=""if bestMatch == null""];\n	""27"" [label=""if childPointer != null""];\n	""28"" [label=""if currentStep != $stack14""];\n	""29"" [label=""if i >= count""];\n	""30"" [label=""if quality != 1000""];\n	""31"" [label=""if quality <= bestQuality""];\n	""32"" [label=""parentPointer := @parameter1: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""33"" [label=""pointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, childPointer, steps, $stack20)""];\n	""34"" [label=""quality = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: int computeQuality(org.apache.commons.jxpath.ri.model.NodePointer)>(pointer)""];\n	""35"" [label=""return $stack17""];\n	""36"" [label=""return $stack19""];\n	""37"" [label=""return $stack22""];\n	""38"" [label=""return bestMatch""];\n	""39"" [label=""return childPointer""];\n	""40"" [label=""return null""];\n	""41"" [label=""return pointer""];\n	""42"" [label=""step = steps[currentStep]""];\n	""43"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""44"" [label=""virtualinvoke childPointer.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(i)""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""37""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""27""[label=""cfg_next""];\n	""18"" -> ""32""[label=""cfg_next""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""42""[label=""cfg_next""];\n	""21"" -> ""29""[label=""cfg_goto""];\n	""22"" -> ""29""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""11""[label=""cfg_false""];\n	""24"" -> ""2""[label=""cfg_true""];\n	""25"" -> ""14""[label=""cfg_false""];\n	""25"" -> ""5""[label=""cfg_true""];\n	""26"" -> ""38""[label=""cfg_false""];\n	""26"" -> ""8""[label=""cfg_true""];\n	""27"" -> ""1""[label=""cfg_true""];\n	""27"" -> ""40""[label=""cfg_false""];\n	""28"" -> ""39""[label=""cfg_false""];\n	""28"" -> ""4""[label=""cfg_true""];\n	""29"" -> ""26""[label=""cfg_true""];\n	""29"" -> ""44""[label=""cfg_false""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_true""];\n	""30"" -> ""41""[label=""cfg_false""];\n	""31"" -> ""15""[label=""cfg_false""];\n	""31"" -> ""23""[label=""cfg_true""];\n	""32"" -> ""43""[label=""cfg_next""];\n	""33"" -> ""34""[label=""cfg_next""];\n	""34"" -> ""30""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""42"" -> ""17""[label=""cfg_next""];\n	""43"" -> ""20""[label=""cfg_next""];\n	""44"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""35""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""36""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepNoPredicatesStandard(EvalContext,NodePointer,Step[],int)",Method,"* A path that starts with a standard InfoSet node (e.g. DOM Node) and\n     * has no predicates.  Get a child iterator and apply the tail of\n     * the path to each element until we find a match. If we don't find\n     * a perfect match, we should return the ""best quality"" pointer, which\n     * has the longest chain of steps mapping to existing nodes and the shortes\n     * tail of Null* pointers.\n     * @param context evaluation context\n     * @param parentPointer parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @return NodePointer","private static NodePointer doStepNoPredicatesStandard(final EvalContext context, final NodePointer parentPointer, final Step[] steps, final int currentStep) {\n    final Step step = steps[currentStep];\n    if (step.getAxis() == Compiler.AXIS_SELF) {\n        return doStep(context, parentPointer, steps, currentStep + 1);\n    }\n    int bestQuality = 0;\n    NodePointer bestMatch = null;\n    final NodeIterator it = getNodeIterator(context, parentPointer, step);\n    if (it != null) {\n        for (int i = 1; it.setPosition(i); i++) {\n            final NodePointer childPointer = it.getNodePointer();\n            if (steps.length == currentStep + 1) {\n                // If this is the last step - we are done, we found it\n                return childPointer;\n            }\n            final NodePointer pointer = doStep(context, childPointer, steps, currentStep + 1);\n            final int quality = computeQuality(pointer);\n            if (quality == PERFECT_MATCH) {\n                return pointer;\n            }\n            if (quality > bestQuality) {\n                bestQuality = quality;\n                bestMatch = (NodePointer) pointer.clone();\n            }\n        }\n    }\n    return bestMatch != null ? bestMatch : createNullPointer(context, parentPointer, steps, currentStep);\n}","org.apache.commons.jxpath.ri.model.NodePointer doStepNoPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)","digraph cfg_doStepNoPredicatesStandard {\n	""1"" [label=""$stack12 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""2"" [label=""$stack13 = bestMatch""];\n	""3"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parentPointer, steps, currentStep)""];\n	""4"" [label=""$stack14 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(i)""];\n	""5"" [label=""$stack15 = currentStep + 1""];\n	""6"" [label=""$stack16 = lengthof steps""];\n	""7"" [label=""$stack17 = currentStep + 1""];\n	""8"" [label=""$stack18 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""9"" [label=""$stack19 = currentStep + 1""];\n	""10"" [label=""$stack20 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parentPointer, steps, $stack19)""];\n	""11"" [label=""bestMatch = (org.apache.commons.jxpath.ri.model.NodePointer) $stack18""];\n	""12"" [label=""bestMatch = null""];\n	""13"" [label=""bestQuality = 0""];\n	""14"" [label=""bestQuality = quality""];\n	""15"" [label=""childPointer = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""16"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""17"" [label=""currentStep := @parameter3: int""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""i = 1""];\n	""21"" [label=""i = i + 1""];\n	""22"" [label=""if $stack12 != 1""];\n	""23"" [label=""if $stack14 == 0""];\n	""24"" [label=""if $stack16 != $stack15""];\n	""25"" [label=""if bestMatch == null""];\n	""26"" [label=""if it == null""];\n	""27"" [label=""if quality != 1000""];\n	""28"" [label=""if quality <= bestQuality""];\n	""29"" [label=""it = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodeIterator getNodeIterator(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step)>(context, parentPointer, step)""];\n	""30"" [label=""parentPointer := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""31"" [label=""pointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, childPointer, steps, $stack17)""];\n	""32"" [label=""quality = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: int computeQuality(org.apache.commons.jxpath.ri.model.NodePointer)>(pointer)""];\n	""33"" [label=""return $stack13""];\n	""34"" [label=""return $stack20""];\n	""35"" [label=""return childPointer""];\n	""36"" [label=""return pointer""];\n	""37"" [label=""step = steps[currentStep]""];\n	""38"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""22""[label=""cfg_next""];\n	""10"" -> ""34""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""29""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_next""];\n	""16"" -> ""30""[label=""cfg_next""];\n	""17"" -> ""37""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_goto""];\n	""19"" -> ""33""[label=""cfg_goto""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""4""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""13""[label=""cfg_true""];\n	""22"" -> ""9""[label=""cfg_false""];\n	""23"" -> ""15""[label=""cfg_false""];\n	""23"" -> ""25""[label=""cfg_true""];\n	""24"" -> ""35""[label=""cfg_false""];\n	""24"" -> ""7""[label=""cfg_true""];\n	""25"" -> ""2""[label=""cfg_false""];\n	""25"" -> ""3""[label=""cfg_true""];\n	""26"" -> ""20""[label=""cfg_false""];\n	""26"" -> ""25""[label=""cfg_true""];\n	""27"" -> ""28""[label=""cfg_true""];\n	""27"" -> ""36""[label=""cfg_false""];\n	""28"" -> ""14""[label=""cfg_false""];\n	""28"" -> ""21""[label=""cfg_true""];\n	""29"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""33""[label=""cfg_next""];\n	""30"" -> ""38""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""27""[label=""cfg_next""];\n	""37"" -> ""1""[label=""cfg_next""];\n	""38"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""31""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepPredicatesPropertyOwner(EvalContext,PropertyOwnerPointer,Step[],int)",Method,* A path that starts with a property owner. The method evaluates\n     * the first predicate in a special way and then forwards to\n     * a general predicate processing method.\n     * @param context evaluation context\n     * @param parentPointer parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @return NodePointer,"private static NodePointer doStepPredicatesPropertyOwner(final EvalContext context, final PropertyOwnerPointer parentPointer, final Step[] steps, final int currentStep) {\n    final Step step = steps[currentStep];\n    final Expression[] predicates = step.getPredicates();\n    final NodePointer childPointer = createChildPointerForStep(parentPointer, step);\n    if (!childPointer.isActual()) {\n        // Property does not exist - return a null pointer\n        return createNullPointer(context, parentPointer, steps, currentStep);\n    }\n    // Evaluate predicates\n    return doPredicate(context, childPointer, steps, currentStep, predicates, 0);\n}","org.apache.commons.jxpath.ri.model.NodePointer doStepPredicatesPropertyOwner(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.compiler.Step[],int)","digraph cfg_doStepPredicatesPropertyOwner {\n	""1"" [label=""$stack7 = virtualinvoke childPointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""2"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, childPointer, steps, currentStep, predicates, 0)""];\n	""3"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parentPointer, steps, currentStep)""];\n	""4"" [label=""childPointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createChildPointerForStep(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.compiler.Step)>(parentPointer, step)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""6"" [label=""currentStep := @parameter3: int""];\n	""7"" [label=""if $stack7 != 0""];\n	""8"" [label=""parentPointer := @parameter1: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""9"" [label=""predicates = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""10"" [label=""return $stack8""];\n	""11"" [label=""return $stack9""];\n	""12"" [label=""step = steps[currentStep]""];\n	""13"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.createChildPointerForStep(PropertyOwnerPointer,Step)",Method,* Create the child pointer for a given step.\n     * @param parentPointer parent pointer\n     * @param step associated step\n     * @return NodePointer,"private static NodePointer createChildPointerForStep(final PropertyOwnerPointer parentPointer, final Step step) {\n    final int axis = step.getAxis();\n    if (axis == Compiler.AXIS_CHILD || axis == Compiler.AXIS_ATTRIBUTE) {\n        final QName name = ((NodeNameTest) step.getNodeTest()).getNodeName();\n        if (axis == Compiler.AXIS_ATTRIBUTE && isLangAttribute(name)) {\n            return new LangAttributePointer(parentPointer);\n        }\n        if (parentPointer.isValidProperty(name)) {\n            final NodePointer childPointer = parentPointer.getPropertyPointer();\n            ((PropertyPointer) childPointer).setPropertyName(name.toString());\n            childPointer.setAttribute(axis == Compiler.AXIS_ATTRIBUTE);\n            return childPointer;\n        }\n        //invalid property gets nothing, not even a NullPointer\n        return null;\n    }\n    return parentPointer;\n}","org.apache.commons.jxpath.ri.model.NodePointer createChildPointerForStep(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.compiler.Step)","digraph cfg_createChildPointerForStep {\n	""1"" [label=""$stack10 = 0""];\n	""2"" [label=""$stack10 = 1""];\n	""3"" [label=""$stack11 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: boolean isLangAttribute(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""4"" [label=""$stack12 = new org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""5"" [label=""$stack5 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""6"" [label=""$stack6 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) $stack5""];\n	""7"" [label=""$stack7 = virtualinvoke parentPointer.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: boolean isValidProperty(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""8"" [label=""$stack8 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""9"" [label=""$stack9 = (org.apache.commons.jxpath.ri.model.beans.PropertyPointer) childPointer""];\n	""10"" [label=""axis = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""11"" [label=""childPointer = virtualinvoke parentPointer.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer()>()""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack11 == 0""];\n	""14"" [label=""if $stack7 == 0""];\n	""15"" [label=""if axis != 5""];\n	""16"" [label=""if axis != 5""];\n	""17"" [label=""if axis != 5""];\n	""18"" [label=""if axis == 2""];\n	""19"" [label=""name = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""20"" [label=""parentPointer := @parameter0: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""21"" [label=""return $stack12""];\n	""22"" [label=""return childPointer""];\n	""23"" [label=""return null""];\n	""24"" [label=""return parentPointer""];\n	""25"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.model.beans.LangAttributePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parentPointer)""];\n	""26"" [label=""step := @parameter1: org.apache.commons.jxpath.ri.compiler.Step""];\n	""27"" [label=""virtualinvoke $stack9.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyName(java.lang.String)>($stack8)""];\n	""28"" [label=""virtualinvoke childPointer.<org.apache.commons.jxpath.ri.model.NodePointer: void setAttribute(boolean)>($stack10)""];\n	""1"" -> ""28""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""28""[label=""cfg_goto""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""13"" -> ""7""[label=""cfg_true""];\n	""14"" -> ""11""[label=""cfg_false""];\n	""14"" -> ""23""[label=""cfg_true""];\n	""15"" -> ""24""[label=""cfg_true""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""16"" -> ""7""[label=""cfg_true""];\n	""17"" -> ""1""[label=""cfg_true""];\n	""17"" -> ""2""[label=""cfg_false""];\n	""18"" -> ""15""[label=""cfg_false""];\n	""18"" -> ""5""[label=""cfg_true""];\n	""19"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""10""[label=""cfg_next""];\n	""27"" -> ""17""[label=""cfg_next""];\n	""28"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doStepPredicatesStandard(EvalContext,NodePointer,Step[],int)",Method,"* A path that starts with a standard InfoSet node, e.g. a DOM Node.\n     * The method evaluates the first predicate in a special way and\n     * then forwards to a general predicate processing method.\n     * @param context evaluation context\n     * @param parent parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @return NodePointer","private static NodePointer doStepPredicatesStandard(final EvalContext context, final NodePointer parent, final Step[] steps, final int currentStep) {\n    final Step step = steps[currentStep];\n    final Expression[] predicates = step.getPredicates();\n    final int axis = step.getAxis();\n    if (axis == Compiler.AXIS_SELF) {\n        return doPredicate(context, parent, steps, currentStep, predicates, 0);\n    }\n    final Expression predicate = predicates[0];\n    // Optimize for a single predicate to avoid building a list\n    // and to allow the direct access to the index'th element\n    // in the case of a simple subscript predecate\n    // It is a very common use case, so it deserves individual\n    // attention\n    if (predicates.length == 1) {\n        final NodeIterator it = getNodeIterator(context, parent, step);\n        NodePointer pointer = null;\n        if (it != null) {\n            if (predicate instanceof NameAttributeTest) {\n                // [@name = key]\n                final String key = keyFromPredicate(context, predicate);\n                for (int i = 1; it.setPosition(i); i++) {\n                    final NodePointer ptr = it.getNodePointer();\n                    if (isNameAttributeEqual(ptr, key)) {\n                        pointer = ptr;\n                        break;\n                    }\n                }\n            } else {\n                final int index = indexFromPredicate(context, predicate);\n                if (it.setPosition(index + 1)) {\n                    pointer = it.getNodePointer();\n                }\n            }\n        }\n        if (pointer != null) {\n            return doStep(context, pointer, steps, currentStep + 1);\n        }\n    } else {\n        final NodeIterator it = getNodeIterator(context, parent, step);\n        if (it != null) {\n            final List list = new ArrayList();\n            for (int i = 1; it.setPosition(i); i++) {\n                list.add(it.getNodePointer());\n            }\n            final NodePointer pointer = doPredicatesStandard(context, list, steps, currentStep, predicates, 0);\n            if (pointer != null) {\n                return pointer;\n            }\n        }\n    }\n    return createNullPointer(context, parent, steps, currentStep);\n}","org.apache.commons.jxpath.ri.model.NodePointer doStepPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)","digraph cfg_doStepPredicatesStandard {\n	""1"" [label=""$stack13 = lengthof predicates""];\n	""2"" [label=""$stack14 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parent, steps, currentStep)""];\n	""3"" [label=""$stack15 = new java.util.ArrayList""];\n	""4"" [label=""$stack16 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(key)""];\n	""5"" [label=""$stack17 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""6"" [label=""$stack18 = currentStep + 1""];\n	""7"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, pointer, steps, $stack18)""];\n	""8"" [label=""$stack20 = predicate instanceof org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""9"" [label=""$stack21 = key + 1""];\n	""10"" [label=""$stack22 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack21)""];\n	""11"" [label=""$stack23 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(i)""];\n	""12"" [label=""$stack24 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: boolean isNameAttributeEqual(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>(ptr, key)""];\n	""13"" [label=""$stack25 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, parent, steps, currentStep, predicates, 0)""];\n	""14"" [label=""axis = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""15"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""16"" [label=""currentStep := @parameter3: int""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""i = 1""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""if $stack13 != 1""];\n	""25"" [label=""if $stack16 == 0""];\n	""26"" [label=""if $stack20 == 0""];\n	""27"" [label=""if $stack22 == 0""];\n	""28"" [label=""if $stack23 == 0""];\n	""29"" [label=""if $stack24 == 0""];\n	""30"" [label=""if axis != 1""];\n	""31"" [label=""if it == null""];\n	""32"" [label=""if it == null""];\n	""33"" [label=""if key == null""];\n	""34"" [label=""if pointer == null""];\n	""35"" [label=""interfaceinvoke pointer.<java.util.List: boolean add(java.lang.Object)>($stack17)""];\n	""36"" [label=""it = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodeIterator getNodeIterator(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step)>(context, parent, step)""];\n	""37"" [label=""it = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodeIterator getNodeIterator(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step)>(context, parent, step)""];\n	""38"" [label=""key = 1""];\n	""39"" [label=""key = key + 1""];\n	""40"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: int indexFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, predicate)""];\n	""41"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: java.lang.String keyFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, predicate)""];\n	""42"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,java.util.List,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, pointer, steps, currentStep, predicates, 0)""];\n	""43"" [label=""parent := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""44"" [label=""pointer = $stack15""];\n	""45"" [label=""pointer = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""46"" [label=""pointer = null""];\n	""47"" [label=""pointer = ptr""];\n	""48"" [label=""predicate = predicates[0]""];\n	""49"" [label=""predicates = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""50"" [label=""ptr = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""51"" [label=""return $stack14""];\n	""52"" [label=""return $stack19""];\n	""53"" [label=""return $stack25""];\n	""54"" [label=""return key""];\n	""55"" [label=""specialinvoke $stack15.<java.util.ArrayList: void <init>()>()""];\n	""56"" [label=""step = steps[currentStep]""];\n	""57"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""29""[label=""cfg_next""];\n	""13"" -> ""53""[label=""cfg_next""];\n	""14"" -> ""30""[label=""cfg_next""];\n	""15"" -> ""43""[label=""cfg_next""];\n	""16"" -> ""56""[label=""cfg_next""];\n	""17"" -> ""34""[label=""cfg_goto""];\n	""18"" -> ""17""[label=""cfg_goto""];\n	""19"" -> ""11""[label=""cfg_goto""];\n	""2"" -> ""51""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_goto""];\n	""21"" -> ""4""[label=""cfg_goto""];\n	""22"" -> ""11""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""24"" -> ""36""[label=""cfg_false""];\n	""24"" -> ""37""[label=""cfg_true""];\n	""25"" -> ""42""[label=""cfg_true""];\n	""25"" -> ""5""[label=""cfg_false""];\n	""26"" -> ""40""[label=""cfg_true""];\n	""26"" -> ""41""[label=""cfg_false""];\n	""27"" -> ""34""[label=""cfg_true""];\n	""27"" -> ""45""[label=""cfg_false""];\n	""28"" -> ""17""[label=""cfg_true""];\n	""28"" -> ""50""[label=""cfg_false""];\n	""29"" -> ""23""[label=""cfg_true""];\n	""29"" -> ""47""[label=""cfg_false""];\n	""3"" -> ""55""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_false""];\n	""30"" -> ""48""[label=""cfg_true""];\n	""31"" -> ""34""[label=""cfg_true""];\n	""31"" -> ""8""[label=""cfg_false""];\n	""32"" -> ""2""[label=""cfg_true""];\n	""32"" -> ""3""[label=""cfg_false""];\n	""33"" -> ""2""[label=""cfg_true""];\n	""33"" -> ""54""[label=""cfg_false""];\n	""34"" -> ""20""[label=""cfg_true""];\n	""34"" -> ""6""[label=""cfg_false""];\n	""35"" -> ""39""[label=""cfg_next""];\n	""36"" -> ""46""[label=""cfg_next""];\n	""37"" -> ""32""[label=""cfg_next""];\n	""38"" -> ""4""[label=""cfg_next""];\n	""39"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""40"" -> ""9""[label=""cfg_next""];\n	""41"" -> ""22""[label=""cfg_next""];\n	""42"" -> ""33""[label=""cfg_next""];\n	""43"" -> ""57""[label=""cfg_next""];\n	""44"" -> ""38""[label=""cfg_next""];\n	""45"" -> ""34""[label=""cfg_next""];\n	""46"" -> ""31""[label=""cfg_next""];\n	""47"" -> ""18""[label=""cfg_next""];\n	""48"" -> ""1""[label=""cfg_next""];\n	""49"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""35""[label=""cfg_next""];\n	""50"" -> ""12""[label=""cfg_next""];\n	""55"" -> ""44""[label=""cfg_next""];\n	""56"" -> ""49""[label=""cfg_next""];\n	""57"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""52""[label=""cfg_next""];\n	""8"" -> ""26""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicate(EvalContext,NodePointer,Step[],int,Expression[],int)",Method,* Evaluates predicates and proceeds with the subsequent steps\n     * of the path.\n     * @param context evaluation context\n     * @param parent parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @param predicates predicate expressions\n     * @param currentPredicate int predicate number\n     * @return NodePointer,"private static NodePointer doPredicate(final EvalContext context, final NodePointer parent, final Step[] steps, final int currentStep, final Expression[] predicates, final int currentPredicate) {\n    if (currentPredicate == predicates.length) {\n        return doStep(context, parent, steps, currentStep + 1);\n    }\n    final Expression predicate = predicates[currentPredicate];\n    if (predicate instanceof NameAttributeTest) {\n        // [@name = key1]\n        return doPredicateName(context, parent, steps, currentStep, predicates, currentPredicate);\n    }\n    // else [index]\n    return doPredicateIndex(context, parent, steps, currentStep, predicates, currentPredicate);\n}","org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)","digraph cfg_doPredicate {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicateName(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, parent, steps, currentStep, predicates, currentPredicate)""];\n	""2"" [label=""$stack11 = currentStep + 1""];\n	""3"" [label=""$stack12 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parent, steps, $stack11)""];\n	""4"" [label=""$stack7 = lengthof predicates""];\n	""5"" [label=""$stack8 = predicate instanceof org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""6"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicateIndex(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, parent, steps, currentStep, predicates, currentPredicate)""];\n	""7"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""currentPredicate := @parameter5: int""];\n	""9"" [label=""currentStep := @parameter3: int""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""if currentPredicate != $stack7""];\n	""12"" [label=""parent := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""13"" [label=""predicate = predicates[currentPredicate]""];\n	""14"" [label=""predicates := @parameter4: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""15"" [label=""return $stack10""];\n	""16"" [label=""return $stack12""];\n	""17"" [label=""return $stack9""];\n	""18"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""13""[label=""cfg_true""];\n	""11"" -> ""2""[label=""cfg_false""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""18"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicateName(EvalContext,NodePointer,Step[],int,Expression[],int)",Method,* Execute a NameAttributeTest predicate\n     * @param context evaluation context\n     * @param parent parent pointer\n     * @param steps path steps\n     * @param currentStep int step number\n     * @param predicates predicates\n     * @param currentPredicate int predicate number\n     * @return NodePointer,"private static NodePointer doPredicateName(final EvalContext context, final NodePointer parent, final Step[] steps, final int currentStep, final Expression[] predicates, final int currentPredicate) {\n    final Expression predicate = predicates[currentPredicate];\n    final String key = keyFromPredicate(context, predicate);\n    NodePointer child = valuePointer(parent);\n    if (child instanceof PropertyOwnerPointer) {\n        final PropertyPointer pointer = ((PropertyOwnerPointer) child).getPropertyPointer();\n        pointer.setPropertyName(key);\n        if (pointer.isActual()) {\n            return doPredicate(context, pointer, steps, currentStep, predicates, currentPredicate + 1);\n        }\n    } else if (child.isCollection()) {\n        // For each node in the collection, perform the following:\n        // if the node is a property owner, apply this predicate to it;\n        // if the node is a collection, apply this predicate to each elem.;\n        // if the node is not a prop owner or a collection,\n        //  see if it has the attribute ""name"" with the right value,\n        //  if so - proceed to the next predicate\n        NodePointer bestMatch = null;\n        int bestQuality = 0;\n        child = (NodePointer) child.clone();\n        final int count = child.getLength();\n        for (int i = 0; i < count; i++) {\n            child.setIndex(i);\n            final NodePointer valuePointer = valuePointer(child);\n            NodePointer pointer;\n            if (valuePointer instanceof PropertyOwnerPointer || valuePointer.isCollection()) {\n                pointer = doPredicateName(context, valuePointer, steps, currentStep, predicates, currentPredicate);\n            } else if (isNameAttributeEqual(valuePointer, key)) {\n                pointer = doPredicate(context, valuePointer, steps, currentStep, predicates, currentPredicate + 1);\n            } else {\n                pointer = null;\n            }\n            if (pointer != null) {\n                final int quality = computeQuality(pointer);\n                if (quality == PERFECT_MATCH) {\n                    return pointer;\n                }\n                if (quality > bestQuality) {\n                    bestMatch = (NodePointer) pointer.clone();\n                    bestQuality = quality;\n                }\n            }\n        }\n        if (bestMatch != null) {\n            return bestMatch;\n        }\n    } else {\n        // If the node is a standard InfoSet node (e.g. DOM Node),\n        // employ doPredicates_standard, which will iterate through\n        // the node's children and apply all predicates\n        final NodePointer found = doPredicatesStandard(context, Collections.singletonList(child), steps, currentStep, predicates, currentPredicate);\n        if (found != null) {\n            return found;\n        }\n    }\n    // If nothing worked - return a null pointer\n    return createNullPointerForPredicates(context, child, steps, currentStep, predicates, currentPredicate);\n}","org.apache.commons.jxpath.ri.model.NodePointer doPredicateName(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)","digraph cfg_doPredicateName {\n	""1"" [label=""$stack16 = child instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""2"" [label=""$stack17 = virtualinvoke child.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isCollection()>()""];\n	""3"" [label=""$stack18 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(child)""];\n	""4"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointerForPredicates(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, child, steps, currentStep, predicates, currentPredicate)""];\n	""5"" [label=""$stack20 = virtualinvoke child.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""6"" [label=""$stack21 = valuePointer instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""7"" [label=""$stack22 = virtualinvoke pointer_1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""8"" [label=""$stack23 = virtualinvoke valuePointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isCollection()>()""];\n	""9"" [label=""$stack24 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: boolean isNameAttributeEqual(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>(valuePointer, key)""];\n	""10"" [label=""$stack25 = currentPredicate + 1""];\n	""11"" [label=""$stack26 = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) child""];\n	""12"" [label=""$stack27 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: boolean isActual()>()""];\n	""13"" [label=""$stack28 = currentPredicate + 1""];\n	""14"" [label=""$stack29 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, pointer, steps, currentStep, predicates, $stack28)""];\n	""15"" [label=""bestQuality = 0""];\n	""16"" [label=""bestQuality = quality""];\n	""17"" [label=""child = (org.apache.commons.jxpath.ri.model.NodePointer) $stack20""];\n	""18"" [label=""child = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer valuePointer(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""19"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""20"" [label=""count = virtualinvoke child.<org.apache.commons.jxpath.ri.model.NodePointer: int getLength()>()""];\n	""21"" [label=""currentPredicate := @parameter5: int""];\n	""22"" [label=""currentStep := @parameter3: int""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""i = 0""];\n	""29"" [label=""i = i + 1""];\n	""30"" [label=""if $stack16 == 0""];\n	""31"" [label=""if $stack17 == 0""];\n	""32"" [label=""if $stack21 != 0""];\n	""33"" [label=""if $stack23 == 0""];\n	""34"" [label=""if $stack24 == 0""];\n	""35"" [label=""if $stack27 == 0""];\n	""36"" [label=""if i >= count""];\n	""37"" [label=""if pointer == null""];\n	""38"" [label=""if pointer == null""];\n	""39"" [label=""if pointer_1 == null""];\n	""40"" [label=""if quality != 1000""];\n	""41"" [label=""if quality <= bestQuality""];\n	""42"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: java.lang.String keyFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, predicate)""];\n	""43"" [label=""parent := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""44"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack22""];\n	""45"" [label=""pointer = null""];\n	""46"" [label=""pointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,java.util.List,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, $stack18, steps, currentStep, predicates, currentPredicate)""];\n	""47"" [label=""pointer = virtualinvoke $stack26.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer()>()""];\n	""48"" [label=""pointer_1 = null""];\n	""49"" [label=""pointer_1 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, valuePointer, steps, currentStep, predicates, $stack25)""];\n	""50"" [label=""pointer_1 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicateName(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, valuePointer, steps, currentStep, predicates, currentPredicate)""];\n	""51"" [label=""predicate = predicates[currentPredicate]""];\n	""52"" [label=""predicates := @parameter4: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""53"" [label=""quality = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: int computeQuality(org.apache.commons.jxpath.ri.model.NodePointer)>(pointer_1)""];\n	""54"" [label=""return $stack19""];\n	""55"" [label=""return $stack29""];\n	""56"" [label=""return pointer""];\n	""57"" [label=""return pointer""];\n	""58"" [label=""return pointer_1""];\n	""59"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""60"" [label=""valuePointer = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer valuePointer(org.apache.commons.jxpath.ri.model.NodePointer)>(child)""];\n	""61"" [label=""virtualinvoke child.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(i)""];\n	""62"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyName(java.lang.String)>(key)""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""49""[label=""cfg_next""];\n	""11"" -> ""47""[label=""cfg_next""];\n	""12"" -> ""35""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""55""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""29""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""43""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""28""[label=""cfg_next""];\n	""21"" -> ""51""[label=""cfg_next""];\n	""22"" -> ""52""[label=""cfg_next""];\n	""23"" -> ""4""[label=""cfg_goto""];\n	""24"" -> ""39""[label=""cfg_goto""];\n	""25"" -> ""39""[label=""cfg_goto""];\n	""26"" -> ""36""[label=""cfg_goto""];\n	""27"" -> ""4""[label=""cfg_goto""];\n	""28"" -> ""36""[label=""cfg_next""];\n	""29"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""46""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_false""];\n	""30"" -> ""2""[label=""cfg_true""];\n	""31"" -> ""3""[label=""cfg_true""];\n	""31"" -> ""45""[label=""cfg_false""];\n	""32"" -> ""50""[label=""cfg_true""];\n	""32"" -> ""8""[label=""cfg_false""];\n	""33"" -> ""50""[label=""cfg_false""];\n	""33"" -> ""9""[label=""cfg_true""];\n	""34"" -> ""10""[label=""cfg_false""];\n	""34"" -> ""48""[label=""cfg_true""];\n	""35"" -> ""13""[label=""cfg_false""];\n	""35"" -> ""23""[label=""cfg_true""];\n	""36"" -> ""37""[label=""cfg_true""];\n	""36"" -> ""61""[label=""cfg_false""];\n	""37"" -> ""27""[label=""cfg_true""];\n	""37"" -> ""56""[label=""cfg_false""];\n	""38"" -> ""4""[label=""cfg_true""];\n	""38"" -> ""57""[label=""cfg_false""];\n	""39"" -> ""29""[label=""cfg_true""];\n	""39"" -> ""53""[label=""cfg_false""];\n	""4"" -> ""54""[label=""cfg_next""];\n	""40"" -> ""41""[label=""cfg_true""];\n	""40"" -> ""58""[label=""cfg_false""];\n	""41"" -> ""29""[label=""cfg_true""];\n	""41"" -> ""7""[label=""cfg_false""];\n	""42"" -> ""18""[label=""cfg_next""];\n	""43"" -> ""59""[label=""cfg_next""];\n	""44"" -> ""16""[label=""cfg_next""];\n	""45"" -> ""15""[label=""cfg_next""];\n	""46"" -> ""38""[label=""cfg_next""];\n	""47"" -> ""62""[label=""cfg_next""];\n	""48"" -> ""39""[label=""cfg_next""];\n	""49"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""50"" -> ""24""[label=""cfg_next""];\n	""51"" -> ""42""[label=""cfg_next""];\n	""52"" -> ""21""[label=""cfg_next""];\n	""53"" -> ""40""[label=""cfg_next""];\n	""59"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""32""[label=""cfg_next""];\n	""60"" -> ""6""[label=""cfg_next""];\n	""61"" -> ""60""[label=""cfg_next""];\n	""62"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""44""[label=""cfg_next""];\n	""8"" -> ""33""[label=""cfg_next""];\n	""9"" -> ""34""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicatesStandard(EvalContext,List,Step[],int,Expression[],int)",Method,"* Called exclusively for standard InfoSet nodes, e.g. DOM nodes\n     * to evaluate predicate sequences like [@name=...][@name=...][index].\n     * @param context evaluation context\n     * @param parents List of parent pointers\n     * @param steps path steps\n     * @param currentStep step number\n     * @param predicates predicates\n     * @param currentPredicate int predicate number\n     * @return NodePointer","private static NodePointer doPredicatesStandard(final EvalContext context, final List parents, final Step[] steps, final int currentStep, final Expression[] predicates, final int currentPredicate) {\n    if (parents.isEmpty()) {\n        return null;\n    }\n    // If all predicates have been processed, take the first\n    // element from the list of results and proceed to the\n    // remaining steps with that element.\n    if (currentPredicate == predicates.length) {\n        final NodePointer pointer = (NodePointer) parents.get(0);\n        return doStep(context, pointer, steps, currentStep + 1);\n    }\n    final Expression predicate = predicates[currentPredicate];\n    if (predicate instanceof NameAttributeTest) {\n        final String key = keyFromPredicate(context, predicate);\n        final List newList = new ArrayList();\n        for (int i = 0; i < parents.size(); i++) {\n            final NodePointer pointer = (NodePointer) parents.get(i);\n            if (isNameAttributeEqual(pointer, key)) {\n                newList.add(pointer);\n            }\n        }\n        if (newList.isEmpty()) {\n            return null;\n        }\n        return doPredicatesStandard(context, newList, steps, currentStep, predicates, currentPredicate + 1);\n    }\n    // For a subscript, simply take the corresponding\n    // element from the list of results and\n    // proceed to the remaining predicates with that element\n    final int index = indexFromPredicate(context, predicate);\n    if (index < 0 || index >= parents.size()) {\n        return null;\n    }\n    final NodePointer ptr = (NodePointer) parents.get(index);\n    return doPredicate(context, ptr, steps, currentStep, predicates, currentPredicate + 1);\n}","org.apache.commons.jxpath.ri.model.NodePointer doPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,java.util.List,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)","digraph cfg_doPredicatesStandard {\n	""1"" [label=""$stack11 = interfaceinvoke parents.<java.util.List: boolean isEmpty()>()""];\n	""2"" [label=""$stack12 = lengthof predicates""];\n	""3"" [label=""$stack13 = pointer instanceof org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""4"" [label=""$stack14 = interfaceinvoke parents.<java.util.List: int size()>()""];\n	""5"" [label=""$stack15 = interfaceinvoke parents.<java.util.List: java.lang.Object get(int)>(key)""];\n	""6"" [label=""$stack16 = currentPredicate + 1""];\n	""7"" [label=""$stack17 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, newList, steps, currentStep, predicates, $stack16)""];\n	""8"" [label=""$stack18 = new java.util.ArrayList""];\n	""9"" [label=""$stack19 = interfaceinvoke parents.<java.util.List: int size()>()""];\n	""10"" [label=""$stack20 = interfaceinvoke newList.<java.util.List: boolean isEmpty()>()""];\n	""11"" [label=""$stack21 = currentPredicate + 1""];\n	""12"" [label=""$stack22 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicatesStandard(org.apache.commons.jxpath.ri.EvalContext,java.util.List,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, newList, steps, currentStep, predicates, $stack21)""];\n	""13"" [label=""$stack23 = interfaceinvoke parents.<java.util.List: java.lang.Object get(int)>(i)""];\n	""14"" [label=""$stack24 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: boolean isNameAttributeEqual(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>(pointer_1, key)""];\n	""15"" [label=""$stack25 = interfaceinvoke parents.<java.util.List: java.lang.Object get(int)>(0)""];\n	""16"" [label=""$stack26 = currentStep + 1""];\n	""17"" [label=""$stack27 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doStep(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, pointer, steps, $stack26)""];\n	""18"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""currentPredicate := @parameter5: int""];\n	""20"" [label=""currentStep := @parameter3: int""];\n	""21"" [label=""goto""];\n	""22"" [label=""i = 0""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""if $stack11 == 0""];\n	""25"" [label=""if $stack13 == 0""];\n	""26"" [label=""if $stack20 == 0""];\n	""27"" [label=""if $stack24 == 0""];\n	""28"" [label=""if currentPredicate != $stack12""];\n	""29"" [label=""if i >= $stack19""];\n	""30"" [label=""if key < $stack14""];\n	""31"" [label=""if key < 0""];\n	""32"" [label=""interfaceinvoke newList.<java.util.List: boolean add(java.lang.Object)>(pointer_1)""];\n	""33"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: int indexFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, pointer)""];\n	""34"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: java.lang.String keyFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, pointer)""];\n	""35"" [label=""newList = $stack18""];\n	""36"" [label=""newList = (org.apache.commons.jxpath.ri.model.NodePointer) $stack15""];\n	""37"" [label=""parents := @parameter1: java.util.List""];\n	""38"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack25""];\n	""39"" [label=""pointer = predicates[currentPredicate]""];\n	""40"" [label=""pointer_1 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack23""];\n	""41"" [label=""predicates := @parameter4: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""42"" [label=""return $stack17""];\n	""43"" [label=""return $stack22""];\n	""44"" [label=""return $stack27""];\n	""45"" [label=""return null""];\n	""46"" [label=""return null""];\n	""47"" [label=""return null""];\n	""48"" [label=""specialinvoke $stack18.<java.util.ArrayList: void <init>()>()""];\n	""49"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""26""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""43""[label=""cfg_next""];\n	""13"" -> ""40""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""38""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""44""[label=""cfg_next""];\n	""18"" -> ""37""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""28""[label=""cfg_next""];\n	""20"" -> ""41""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_goto""];\n	""22"" -> ""9""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""2""[label=""cfg_true""];\n	""24"" -> ""45""[label=""cfg_false""];\n	""25"" -> ""33""[label=""cfg_true""];\n	""25"" -> ""34""[label=""cfg_false""];\n	""26"" -> ""11""[label=""cfg_true""];\n	""26"" -> ""46""[label=""cfg_false""];\n	""27"" -> ""23""[label=""cfg_true""];\n	""27"" -> ""32""[label=""cfg_false""];\n	""28"" -> ""15""[label=""cfg_false""];\n	""28"" -> ""39""[label=""cfg_true""];\n	""29"" -> ""10""[label=""cfg_true""];\n	""29"" -> ""13""[label=""cfg_false""];\n	""3"" -> ""25""[label=""cfg_next""];\n	""30"" -> ""47""[label=""cfg_false""];\n	""30"" -> ""5""[label=""cfg_true""];\n	""31"" -> ""4""[label=""cfg_false""];\n	""31"" -> ""47""[label=""cfg_true""];\n	""32"" -> ""23""[label=""cfg_next""];\n	""33"" -> ""31""[label=""cfg_next""];\n	""34"" -> ""8""[label=""cfg_next""];\n	""35"" -> ""22""[label=""cfg_next""];\n	""36"" -> ""6""[label=""cfg_next""];\n	""37"" -> ""49""[label=""cfg_next""];\n	""38"" -> ""16""[label=""cfg_next""];\n	""39"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""30""[label=""cfg_next""];\n	""40"" -> ""14""[label=""cfg_next""];\n	""41"" -> ""19""[label=""cfg_next""];\n	""48"" -> ""35""[label=""cfg_next""];\n	""49"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""36""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""42""[label=""cfg_next""];\n	""8"" -> ""48""[label=""cfg_next""];\n	""9"" -> ""29""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.doPredicateIndex(EvalContext,NodePointer,Step[],int,Expression[],int)",Method,* Evaluate a subscript predicate: see if the node is a collection and\n     * if the index is inside the collection.\n     * @param context evaluation context\n     * @param parent parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @param predicates predicates\n     * @param currentPredicate int predicate number\n     * @return NodePointer,"private static NodePointer doPredicateIndex(final EvalContext context, final NodePointer parent, final Step[] steps, final int currentStep, final Expression[] predicates, final int currentPredicate) {\n    final Expression predicate = predicates[currentPredicate];\n    final int index = indexFromPredicate(context, predicate);\n    NodePointer pointer = parent;\n    if (isCollectionElement(pointer, index)) {\n        pointer = (NodePointer) pointer.clone();\n        pointer.setIndex(index);\n        return doPredicate(context, pointer, steps, currentStep, predicates, currentPredicate + 1);\n    }\n    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, currentPredicate);\n}","org.apache.commons.jxpath.ri.model.NodePointer doPredicateIndex(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)","digraph cfg_doPredicateIndex {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointerForPredicates(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, parent, steps, currentStep, predicates, currentPredicate)""];\n	""2"" [label=""$stack11 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""3"" [label=""$stack12 = currentPredicate + 1""];\n	""4"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer doPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, pointer, steps, currentStep, predicates, $stack12)""];\n	""5"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: boolean isCollectionElement(org.apache.commons.jxpath.ri.model.NodePointer,int)>(pointer, index)""];\n	""6"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""currentPredicate := @parameter5: int""];\n	""8"" [label=""currentStep := @parameter3: int""];\n	""9"" [label=""if $stack9 == 0""];\n	""10"" [label=""index = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: int indexFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, predicate)""];\n	""11"" [label=""parent := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""12"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack11""];\n	""13"" [label=""pointer = parent""];\n	""14"" [label=""predicate = predicates[currentPredicate]""];\n	""15"" [label=""predicates := @parameter4: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""16"" [label=""return $stack10""];\n	""17"" [label=""return $stack13""];\n	""18"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""19"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.indexFromPredicate(EvalContext,Expression)",Method,"* Extract an integer from a subscript predicate. The returned index\n     * starts with 0, even though the subscript starts with 1.\n     * @param context evaluation context\n     * @param predicate to evaluate\n     * @return calculated index","private static int indexFromPredicate(final EvalContext context, final Expression predicate) {\n    Object value = predicate.computeValue(context);\n    if (value instanceof EvalContext) {\n        value = ((EvalContext) value).getSingleNodePointer();\n    }\n    if (value instanceof NodePointer) {\n        value = ((NodePointer) value).getValue();\n    }\n    if (value == null) {\n        throw new JXPathException(""Predicate value is null: "" + predicate);\n    }\n    if (value instanceof Number) {\n        final double round = 0.5;\n        return (int) (InfoSetUtil.doubleValue(value) + round) - 1;\n    }\n    return InfoSetUtil.booleanValue(value) ? 0 : -1;\n}","int indexFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_indexFromPredicate {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(value)""];\n	""2"" [label=""$stack11 = $stack10 + 0.5""];\n	""3"" [label=""$stack12 = (int) $stack11""];\n	""4"" [label=""$stack13 = $stack12 - 1""];\n	""5"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Predicate value is null: \"")""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(predicate)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack18 = new org.apache.commons.jxpath.JXPathException""];\n	""10"" [label=""$stack19 = (org.apache.commons.jxpath.ri.model.NodePointer) value""];\n	""11"" [label=""$stack20 = (org.apache.commons.jxpath.ri.EvalContext) value""];\n	""12"" [label=""$stack5 = value instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""13"" [label=""$stack6 = value instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""14"" [label=""$stack7 = value instanceof java.lang.Number""];\n	""15"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>(value)""];\n	""16"" [label=""$stack9 = -1""];\n	""17"" [label=""$stack9 = 0""];\n	""18"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack5 == 0""];\n	""21"" [label=""if $stack6 == 0""];\n	""22"" [label=""if $stack7 == 0""];\n	""23"" [label=""if $stack8 == 0""];\n	""24"" [label=""if value != null""];\n	""25"" [label=""predicate := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""26"" [label=""return $stack13""];\n	""27"" [label=""return $stack9""];\n	""28"" [label=""round = 0.5""];\n	""29"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""30"" [label=""specialinvoke $stack18.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack17)""];\n	""31"" [label=""throw $stack18""];\n	""32"" [label=""value = virtualinvoke $stack19.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""33"" [label=""value = virtualinvoke $stack20.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""34"" [label=""value = virtualinvoke predicate.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""32""[label=""cfg_next""];\n	""11"" -> ""33""[label=""cfg_next""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""22""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_next""];\n	""16"" -> ""27""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_next""];\n	""19"" -> ""27""[label=""cfg_goto""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_false""];\n	""20"" -> ""13""[label=""cfg_true""];\n	""21"" -> ""10""[label=""cfg_false""];\n	""21"" -> ""24""[label=""cfg_true""];\n	""22"" -> ""15""[label=""cfg_true""];\n	""22"" -> ""28""[label=""cfg_false""];\n	""23"" -> ""16""[label=""cfg_true""];\n	""23"" -> ""17""[label=""cfg_false""];\n	""24"" -> ""14""[label=""cfg_true""];\n	""24"" -> ""9""[label=""cfg_false""];\n	""25"" -> ""34""[label=""cfg_next""];\n	""28"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""32"" -> ""24""[label=""cfg_next""];\n	""33"" -> ""13""[label=""cfg_next""];\n	""34"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""26""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""30""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.keyFromPredicate(EvalContext,Expression)",Method,* Extracts the string value of the expression from a predicate like\n     * [@name=expression].\n     * @param context evaluation context\n     * @param predicate predicate to evaluate\n     * @return String key extracted,"private static String keyFromPredicate(final EvalContext context, final Expression predicate) {\n    final Expression expr = ((NameAttributeTest) predicate).getNameTestExpression();\n    return InfoSetUtil.stringValue(expr.computeValue(context));\n}","java.lang.String keyFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_keyFromPredicate {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.NameAttributeTest) predicate""];\n	""2"" [label=""$stack4 = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack4)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""5"" [label=""expr = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.NameAttributeTest: org.apache.commons.jxpath.ri.compiler.Expression getNameTestExpression()>()""];\n	""6"" [label=""predicate := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""7"" [label=""return $stack5""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.computeQuality(NodePointer),Method,"* For a pointer that matches an actual node, returns 0.\n     * For a pointer that does not match an actual node, but whose\n     * parent pointer does returns -1, etc.\n     * @param pointer input pointer\n     * @return int match quality code",private static int computeQuality(NodePointer pointer) {\n    int quality = PERFECT_MATCH;\n    while (pointer != null && !pointer.isActual()) {\n        quality--;\n        pointer = pointer.getImmediateParentPointer();\n    }\n    return quality;\n},int computeQuality(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_computeQuality {\n	""1"" [label=""$stack2 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""2"" [label=""goto""];\n	""3"" [label=""if $stack2 != 0""];\n	""4"" [label=""if pointer == null""];\n	""5"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""pointer = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""7"" [label=""quality = 1000""];\n	""8"" [label=""quality = quality + -1""];\n	""9"" [label=""return quality""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_goto""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""3"" -> ""9""[label=""cfg_true""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""9""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.isNameAttributeEqual(NodePointer,String)",Method,"* Returns true if the pointer has an attribute called ""name"" and\n     * its value is equal to the supplied string.\n     * @param pointer input pointer\n     * @param name name to check\n     * @return boolean","private static boolean isNameAttributeEqual(final NodePointer pointer, final String name) {\n    final NodeIterator it = pointer.attributeIterator(QNAME_NAME);\n    return it != null && it.setPosition(1) && name.equals(it.getNodePointer().getValue());\n}","boolean isNameAttributeEqual(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)","digraph cfg_isNameAttributeEqual {\n	""1"" [label=""$stack3 = <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.QName QNAME_NAME>""];\n	""2"" [label=""$stack4 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(1)""];\n	""3"" [label=""$stack5 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""5"" [label=""$stack7 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>($stack6)""];\n	""6"" [label=""$stack8 = 0""];\n	""7"" [label=""$stack8 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack4 == 0""];\n	""10"" [label=""if $stack7 == 0""];\n	""11"" [label=""if it == null""];\n	""12"" [label=""it = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>($stack3)""];\n	""13"" [label=""name := @parameter1: java.lang.String""];\n	""14"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""15"" [label=""return $stack8""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""11"" -> ""2""[label=""cfg_false""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_goto""];\n	""9"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""6""[label=""cfg_true""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.isCollectionElement(NodePointer,int)",Method,* Returns true if the pointer is a collection and the index is\n     * withing the bounds of the collection.\n     * @param pointer input pointer\n     * @param index to check\n     * @return boolean,"private static boolean isCollectionElement(final NodePointer pointer, final int index) {\n    return pointer.isActual() && (index == 0 || pointer.isCollection() && index >= 0 && index < pointer.getLength());\n}","boolean isCollectionElement(org.apache.commons.jxpath.ri.model.NodePointer,int)","digraph cfg_isCollectionElement {\n	""1"" [label=""$stack2 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isCollection()>()""];\n	""5"" [label=""$stack5 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: int getLength()>()""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 == 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if index < 0""];\n	""10"" [label=""if index == 0""];\n	""11"" [label=""if index >= $stack5""];\n	""12"" [label=""index := @parameter1: int""];\n	""13"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""14"" [label=""return $stack3""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_goto""];\n	""7"" -> ""10""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""9""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n","private , static "
org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.valuePointer(NodePointer),Method,"* For an intermediate pointer (e.g. PropertyPointer, ContainerPointer)\n     * returns a pointer for the contained value.\n     * @param pointer input pointer\n     * @return NodePointer",private static NodePointer valuePointer(final NodePointer pointer) {\n    return pointer == null ? null : pointer.getValuePointer();\n},org.apache.commons.jxpath.ri.model.NodePointer valuePointer(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_valuePointer {\n	""1"" [label=""$stack1 = null""];\n	""2"" [label=""$stack1 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if pointer != null""];\n	""5"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""return $stack1""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.createNullPointer(EvalContext,NodePointer,Step[],int)",Method,"* Creates a ""null pointer"" that\n     * a) represents the requested path and\n     * b) can be used for creation of missing nodes in the path.\n     * @param context evaluation context\n     * @param parent parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @return NodePointer","public static NodePointer createNullPointer(final EvalContext context, NodePointer parent, final Step[] steps, final int currentStep) {\n    if (currentStep == steps.length) {\n        return parent;\n    }\n    parent = valuePointer(parent);\n    final Step step = steps[currentStep];\n    final int axis = step.getAxis();\n    if (axis == Compiler.AXIS_CHILD || axis == Compiler.AXIS_ATTRIBUTE) {\n        final NullPropertyPointer pointer = new NullPropertyPointer(parent);\n        final QName name = ((NodeNameTest) step.getNodeTest()).getNodeName();\n        pointer.setPropertyName(name.toString());\n        pointer.setAttribute(axis == Compiler.AXIS_ATTRIBUTE);\n        parent = pointer;\n    }\n    // else { it is self::node() }\n    final Expression[] predicates = step.getPredicates();\n    return createNullPointerForPredicates(context, parent, steps, currentStep, predicates, 0);\n}","org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)","digraph cfg_createNullPointer {\n	""1"" [label=""$stack10 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) $stack10""];\n	""3"" [label=""$stack12 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointerForPredicates(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)>(context, parent, steps, currentStep, pointer, 0)""];\n	""5"" [label=""$stack14 = 0""];\n	""6"" [label=""$stack14 = 1""];\n	""7"" [label=""$stack8 = lengthof steps""];\n	""8"" [label=""$stack9 = new org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""9"" [label=""axis = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""11"" [label=""currentStep := @parameter3: int""];\n	""12"" [label=""goto""];\n	""13"" [label=""if axis != 5""];\n	""14"" [label=""if axis != 5""];\n	""15"" [label=""if axis == 2""];\n	""16"" [label=""if currentStep != $stack8""];\n	""17"" [label=""name = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""18"" [label=""parent := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""19"" [label=""parent = pointer""];\n	""20"" [label=""parent = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer valuePointer(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""21"" [label=""pointer = $stack9""];\n	""22"" [label=""pointer = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""23"" [label=""return $stack13""];\n	""24"" [label=""return parent""];\n	""25"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""26"" [label=""step = steps[currentStep]""];\n	""27"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""28"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void setAttribute(boolean)>($stack14)""];\n	""29"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void setPropertyName(java.lang.String)>($stack12)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""28""[label=""cfg_goto""];\n	""13"" -> ""22""[label=""cfg_true""];\n	""13"" -> ""8""[label=""cfg_false""];\n	""14"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""6""[label=""cfg_false""];\n	""15"" -> ""13""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""16"" -> ""20""[label=""cfg_true""];\n	""16"" -> ""24""[label=""cfg_false""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""27""[label=""cfg_next""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""22"" -> ""4""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""9""[label=""cfg_next""];\n	""27"" -> ""11""[label=""cfg_next""];\n	""28"" -> ""19""[label=""cfg_next""];\n	""29"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""29""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""28""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.createNullPointerForPredicates(EvalContext,NodePointer,Step[],int,Expression[],int)",Method,"* Creates a ""null pointer"" that starts with predicates.\n     * @param context evaluation context\n     * @param parent parent pointer\n     * @param steps path steps\n     * @param currentStep step number\n     * @param predicates predicates\n     * @param currentPredicate int predicate number\n     * @return NodePointer","private static NodePointer createNullPointerForPredicates(final EvalContext context, NodePointer parent, final Step[] steps, final int currentStep, final Expression[] predicates, final int currentPredicate) {\n    for (int i = currentPredicate; i < predicates.length; i++) {\n        final Expression predicate = predicates[i];\n        if (predicate instanceof NameAttributeTest) {\n            final String key = keyFromPredicate(context, predicate);\n            parent = valuePointer(parent);\n            final NullPropertyPointer pointer = new NullPropertyPointer(parent);\n            pointer.setNameAttributeValue(key);\n            parent = pointer;\n        } else {\n            final int index = indexFromPredicate(context, predicate);\n            if (parent instanceof NullPropertyPointer) {\n                parent.setIndex(index);\n            } else {\n                parent = new NullElementPointer(parent, index);\n            }\n        }\n    }\n    // Proceed with the remaining steps\n    return createNullPointer(context, parent, steps, currentStep + 1);\n}","org.apache.commons.jxpath.ri.model.NodePointer createNullPointerForPredicates(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int,org.apache.commons.jxpath.ri.compiler.Expression[],int)","digraph cfg_createNullPointerForPredicates {\n	""1"" [label=""$stack10 = lengthof predicates""];\n	""2"" [label=""$stack11 = currentStep + 1""];\n	""3"" [label=""$stack12 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, parent, steps, $stack11)""];\n	""4"" [label=""$stack13 = predicate instanceof org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""5"" [label=""$stack14 = parent instanceof org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""7"" [label=""$stack16 = new org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""currentPredicate := @parameter5: int""];\n	""10"" [label=""currentStep := @parameter3: int""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""i = currentPredicate""];\n	""15"" [label=""i = i + 1""];\n	""16"" [label=""if $stack13 == 0""];\n	""17"" [label=""if $stack14 == 0""];\n	""18"" [label=""if i >= $stack10""];\n	""19"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: int indexFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, predicate)""];\n	""20"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: java.lang.String keyFromPredicate(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, predicate)""];\n	""21"" [label=""parent := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""22"" [label=""parent = $stack15""];\n	""23"" [label=""parent = pointer""];\n	""24"" [label=""parent = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer valuePointer(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""25"" [label=""pointer = $stack16""];\n	""26"" [label=""predicate = predicates[i]""];\n	""27"" [label=""predicates := @parameter4: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""28"" [label=""return $stack12""];\n	""29"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,int)>(parent, key)""];\n	""30"" [label=""specialinvoke $stack16.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""31"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""32"" [label=""virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(key)""];\n	""33"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void setNameAttributeValue(java.lang.String)>(key)""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_goto""];\n	""12"" -> ""15""[label=""cfg_goto""];\n	""13"" -> ""1""[label=""cfg_goto""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""16"" -> ""20""[label=""cfg_false""];\n	""17"" -> ""32""[label=""cfg_false""];\n	""17"" -> ""6""[label=""cfg_true""];\n	""18"" -> ""2""[label=""cfg_true""];\n	""18"" -> ""26""[label=""cfg_false""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""24""[label=""cfg_next""];\n	""21"" -> ""31""[label=""cfg_next""];\n	""22"" -> ""15""[label=""cfg_next""];\n	""23"" -> ""11""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""33""[label=""cfg_next""];\n	""26"" -> ""4""[label=""cfg_next""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""25""[label=""cfg_next""];\n	""31"" -> ""10""[label=""cfg_next""];\n	""32"" -> ""12""[label=""cfg_next""];\n	""33"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""29""[label=""cfg_next""];\n	""7"" -> ""30""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.getNodeIterator(EvalContext,NodePointer,Step)",Method,* Gets a NodeIterator.\n     * @param context evaluation context\n     * @param pointer owning pointer\n     * @param step triggering step\n     * @return NodeIterator,"private static NodeIterator getNodeIterator(final EvalContext context, final NodePointer pointer, final Step step) {\n    if (step.getAxis() == Compiler.AXIS_CHILD) {\n        NodeTest nodeTest = step.getNodeTest();\n        final QName qname = ((NodeNameTest) nodeTest).getNodeName();\n        final String prefix = qname.getPrefix();\n        if (prefix != null) {\n            final String namespaceURI = context.getJXPathContext().getNamespaceURI(prefix);\n            nodeTest = new NodeNameTest(qname, namespaceURI);\n        }\n        return pointer.childIterator(nodeTest, false, null);\n    }\n    // else Compiler.AXIS_ATTRIBUTE\n    if (!(step.getNodeTest() instanceof NodeNameTest)) {\n        throw new UnsupportedOperationException(""Not supported node test for attributes: "" + step.getNodeTest());\n    }\n    return pointer.attributeIterator(((NodeNameTest) step.getNodeTest()).getNodeName());\n}","org.apache.commons.jxpath.ri.model.NodeIterator getNodeIterator(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step)","digraph cfg_getNodeIterator {\n	""1"" [label=""$stack10 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) $stack10""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""4"" [label=""$stack13 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>($stack12)""];\n	""5"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack15 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""7"" [label=""$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Not supported node test for attributes: \"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack15)""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack19 = new java.lang.UnsupportedOperationException""];\n	""11"" [label=""$stack20 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) nodeTest""];\n	""12"" [label=""$stack21 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(nodeTest, 0, null)""];\n	""13"" [label=""$stack22 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.JXPathContext getJXPathContext()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""15"" [label=""$stack7 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""16"" [label=""$stack8 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""17"" [label=""$stack9 = $stack8 instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""18"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""if $stack7 != 2""];\n	""20"" [label=""if $stack9 != 0""];\n	""21"" [label=""if prefix == null""];\n	""22"" [label=""namespaceURI = virtualinvoke $stack22.<org.apache.commons.jxpath.JXPathContext: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""23"" [label=""nodeTest = $stack23""];\n	""24"" [label=""nodeTest = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""25"" [label=""pointer := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""26"" [label=""prefix = virtualinvoke qname.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""27"" [label=""qname = virtualinvoke $stack20.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""28"" [label=""return $stack13""];\n	""29"" [label=""return $stack21""];\n	""30"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""31"" [label=""specialinvoke $stack19.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack18)""];\n	""32"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: void <init>(org.apache.commons.jxpath.ri.QName,java.lang.String)>(qname, namespaceURI)""];\n	""33"" [label=""step := @parameter2: org.apache.commons.jxpath.ri.compiler.Step""];\n	""34"" [label=""throw $stack19""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""27""[label=""cfg_next""];\n	""12"" -> ""29""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""32""[label=""cfg_next""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_next""];\n	""19"" -> ""16""[label=""cfg_true""];\n	""19"" -> ""24""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_true""];\n	""20"" -> ""10""[label=""cfg_false""];\n	""21"" -> ""12""[label=""cfg_true""];\n	""21"" -> ""13""[label=""cfg_false""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""12""[label=""cfg_next""];\n	""24"" -> ""11""[label=""cfg_next""];\n	""25"" -> ""33""[label=""cfg_next""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""27"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""7""[label=""cfg_next""];\n	""31"" -> ""34""[label=""cfg_next""];\n	""32"" -> ""23""[label=""cfg_next""];\n	""33"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""30""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""31""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.axes.SimplePathInterpreter.isLangAttribute(QName),Method,* Learn whether {@code name} is a lang attribute.\n     * @param name to compare\n     * @return boolean,"private static boolean isLangAttribute(final QName name) {\n    return name.getPrefix() != null && name.getPrefix().equals(""xml"") && name.getName().equals(""lang"");\n}",boolean isLangAttribute(org.apache.commons.jxpath.ri.QName),"digraph cfg_isLangAttribute {\n	""1"" [label=""$stack1 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""2"" [label=""$stack2 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>(\""xml\"")""];\n	""4"" [label=""$stack4 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>(\""lang\"")""];\n	""6"" [label=""$stack6 = 0""];\n	""7"" [label=""$stack6 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack1 == null""];\n	""10"" [label=""if $stack3 == 0""];\n	""11"" [label=""if $stack5 == 0""];\n	""12"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""13"" [label=""return $stack6""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_goto""];\n	""9"" -> ""2""[label=""cfg_false""];\n	""9"" -> ""6""[label=""cfg_true""];\n}\n","private , static "
org.apache.commons.jxpath.ri.axes.InitialContext.getSingleNodePointer(),Method,No Comment,@Override\npublic Pointer getSingleNodePointer() {\n    return nodePointer;\n},org.apache.commons.jxpath.Pointer getSingleNodePointer(),"digraph cfg_getSingleNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.InitialContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    return nodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.InitialContext.getValue(),Method,No Comment,@Override\npublic Object getValue() {\n    return nodePointer.getValue();\n},java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.InitialContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    return setPosition(position + 1);\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: int position>""];\n	""2"" [label=""$stack2 = $stack1 + 1""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.InitialContext: boolean setPosition(int)>($stack2)""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.InitialContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    this.position = position;\n    if (collection) {\n        if (position >= 1 && position <= nodePointer.getLength()) {\n            nodePointer.setIndex(position - 1);\n            return true;\n        }\n        return false;\n    }\n    return position == 1;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: boolean collection>""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: int getLength()>()""];\n	""6"" [label=""$stack6 = position - 1""];\n	""7"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack2 == 0""];\n	""10"" [label=""if position != 1""];\n	""11"" [label=""if position < 1""];\n	""12"" [label=""if position > $stack5""];\n	""13"" [label=""position := @parameter0: int""];\n	""14"" [label=""return $stack3""];\n	""15"" [label=""return 0""];\n	""16"" [label=""return 1""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.axes.InitialContext: int position> = position""];\n	""19"" [label=""virtualinvoke $stack7.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>($stack6)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""11"" -> ""15""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""12"" -> ""15""[label=""cfg_true""];\n	""12"" -> ""7""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_goto""];\n	""9"" -> ""10""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.InitialContext.nextSet(),Method,No Comment,@Override\npublic boolean nextSet() {\n    if (started) {\n        return false;\n    }\n    started = true;\n    return true;\n},boolean nextSet(),"digraph cfg_nextSet {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: boolean started>""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.axes.InitialContext: boolean started> = 1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_false""];\n	""2"" -> ""6""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.InitialContext.<init>(EvalContext),Constructor,* Create a new InitialContext.\n     * @param parentContext parent context,public InitialContext(final EvalContext parentContext) {\n    super(parentContext);\n    nodePointer = (NodePointer) parentContext.getCurrentNodePointer().clone();\n    if (nodePointer != null) {\n        collection = nodePointer.getIndex() == NodePointer.WHOLE_COLLECTION;\n    }\n},void <init>(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_init {\n	""1"" [label=""$stack2 = virtualinvoke parentContext.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack3""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""7"" [label=""$stack8 = 0""];\n	""8"" [label=""$stack8 = 1""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack5 == null""];\n	""11"" [label=""if $stack7 != -2147483648""];\n	""12"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""13"" [label=""return""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.axes.InitialContext: boolean collection> = $stack8""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.axes.InitialContext: boolean started> = 0""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.axes.InitialContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer> = $stack4""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_true""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.DescendantContext.isChildOrderingRequired(),Method,No Comment,@Override\npublic boolean isChildOrderingRequired() {\n    return true;\n},boolean isChildOrderingRequired(),"digraph cfg_isChildOrderingRequired {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.DescendantContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    if (position == 0 && !setPosition(1)) {\n        return null;\n    }\n    return currentNodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: int position>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean setPosition(int)>(1)""];\n	""4"" [label=""if $stack1 != 0""];\n	""5"" [label=""if $stack3 != 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""return null""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.DescendantContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    super.reset();\n    setStarted = false;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean setStarted> = 0""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.DescendantContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (position < this.position) {\n        reset();\n    }\n    while (this.position < position) {\n        if (!nextNode()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: int position>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: int position>""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean nextNode()>()""];\n	""4"" [label=""if $stack3 >= position""];\n	""5"" [label=""if $stack4 != 0""];\n	""6"" [label=""if position >= $stack2""];\n	""7"" [label=""position := @parameter0: int""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""11"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.DescendantContext: void reset()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""4"" -> ""9""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.DescendantContext.nextNode(),Method,No Comment,"@Override\npublic boolean nextNode() {\n    if (!setStarted) {\n        setStarted = true;\n        if (stack == null) {\n            stack = new Stack();\n        } else {\n            stack.clear();\n        }\n        currentNodePointer = parentContext.getCurrentNodePointer();\n        if (currentNodePointer != null) {\n            if (!currentNodePointer.isLeaf()) {\n                stack.push(currentNodePointer.childIterator(ELEMENT_NODE_TEST, false, null));\n            }\n            if (includeSelf && currentNodePointer.testNode(nodeTest)) {\n                position++;\n                return true;\n            }\n        }\n    }\n    while (!stack.isEmpty()) {\n        final NodeIterator it = (NodeIterator) stack.peek();\n        if (it.setPosition(it.getPosition() + 1)) {\n            currentNodePointer = it.getNodePointer();\n            if (!isRecursive()) {\n                if (!currentNodePointer.isLeaf()) {\n                    stack.push(currentNodePointer.childIterator(ELEMENT_NODE_TEST, false, null));\n                }\n                if (currentNodePointer.testNode(nodeTest)) {\n                    position++;\n                    return true;\n                }\n            }\n        } else {\n            // We get here only if the name test failed\n            // and the iterator ended\n            stack.pop();\n        }\n    }\n    return false;\n}",boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""2"" [label=""$stack11 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean isRecursive()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLeaf()>()""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack15)""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: int position>""];\n	""10"" [label=""$stack19 = $stack18 + 1""];\n	""11"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean setStarted>""];\n	""12"" [label=""$stack20 = <org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.compiler.NodeTest ELEMENT_NODE_TEST>""];\n	""13"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""14"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""15"" [label=""$stack23 = virtualinvoke $stack21.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>($stack20, 0, null)""];\n	""16"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""17"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""18"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""19"" [label=""$stack27 = virtualinvoke $stack26.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""20"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""21"" [label=""$stack29 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""22"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""23"" [label=""$stack30 = virtualinvoke $stack29.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLeaf()>()""];\n	""24"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean includeSelf>""];\n	""25"" [label=""$stack32 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""26"" [label=""$stack33 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""27"" [label=""$stack34 = virtualinvoke $stack33.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack32)""];\n	""28"" [label=""$stack35 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: int position>""];\n	""29"" [label=""$stack36 = $stack35 + 1""];\n	""30"" [label=""$stack37 = <org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.compiler.NodeTest ELEMENT_NODE_TEST>""];\n	""31"" [label=""$stack38 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""32"" [label=""$stack39 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""33"" [label=""$stack4 = virtualinvoke $stack3.<java.util.Stack: boolean isEmpty()>()""];\n	""34"" [label=""$stack40 = virtualinvoke $stack38.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>($stack37, 0, null)""];\n	""35"" [label=""$stack41 = new java.util.Stack""];\n	""36"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""37"" [label=""$stack6 = virtualinvoke $stack5.<java.util.Stack: java.lang.Object peek()>()""];\n	""38"" [label=""$stack7 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: int getPosition()>()""];\n	""39"" [label=""$stack8 = $stack7 + 1""];\n	""40"" [label=""$stack9 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack8)""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""if $stack12 != 0""];\n	""44"" [label=""if $stack14 != 0""];\n	""45"" [label=""if $stack17 == 0""];\n	""46"" [label=""if $stack2 != 0""];\n	""47"" [label=""if $stack24 != null""];\n	""48"" [label=""if $stack28 == null""];\n	""49"" [label=""if $stack30 != 0""];\n	""50"" [label=""if $stack31 == 0""];\n	""51"" [label=""if $stack34 == 0""];\n	""52"" [label=""if $stack4 != 0""];\n	""53"" [label=""if $stack9 == 0""];\n	""54"" [label=""it = (org.apache.commons.jxpath.ri.model.NodeIterator) $stack6""];\n	""55"" [label=""return 0""];\n	""56"" [label=""return 1""];\n	""57"" [label=""return 1""];\n	""58"" [label=""specialinvoke $stack41.<java.util.Stack: void <init>()>()""];\n	""59"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""60"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean setStarted> = 1""];\n	""61"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: int position> = $stack19""];\n	""62"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: int position> = $stack36""];\n	""63"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack> = $stack41""];\n	""64"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack11""];\n	""65"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack27""];\n	""66"" [label=""virtualinvoke $stack10.<java.util.Stack: java.lang.Object pop()>()""];\n	""67"" [label=""virtualinvoke $stack22.<java.util.Stack: java.lang.Object push(java.lang.Object)>($stack23)""];\n	""68"" [label=""virtualinvoke $stack25.<java.util.Stack: void clear()>()""];\n	""69"" [label=""virtualinvoke $stack39.<java.util.Stack: java.lang.Object push(java.lang.Object)>($stack40)""];\n	""1"" -> ""66""[label=""cfg_next""];\n	""10"" -> ""61""[label=""cfg_next""];\n	""11"" -> ""46""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""67""[label=""cfg_next""];\n	""16"" -> ""47""[label=""cfg_next""];\n	""17"" -> ""68""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""65""[label=""cfg_next""];\n	""2"" -> ""64""[label=""cfg_next""];\n	""20"" -> ""48""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""33""[label=""cfg_next""];\n	""23"" -> ""49""[label=""cfg_next""];\n	""24"" -> ""50""[label=""cfg_next""];\n	""25"" -> ""27""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""51""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""62""[label=""cfg_next""];\n	""3"" -> ""43""[label=""cfg_next""];\n	""30"" -> ""34""[label=""cfg_next""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""32"" -> ""31""[label=""cfg_next""];\n	""33"" -> ""52""[label=""cfg_next""];\n	""34"" -> ""69""[label=""cfg_next""];\n	""35"" -> ""58""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""54""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""53""[label=""cfg_next""];\n	""41"" -> ""18""[label=""cfg_goto""];\n	""42"" -> ""22""[label=""cfg_goto""];\n	""43"" -> ""4""[label=""cfg_false""];\n	""43"" -> ""42""[label=""cfg_true""];\n	""44"" -> ""14""[label=""cfg_false""];\n	""44"" -> ""7""[label=""cfg_true""];\n	""45"" -> ""42""[label=""cfg_true""];\n	""45"" -> ""9""[label=""cfg_false""];\n	""46"" -> ""22""[label=""cfg_true""];\n	""46"" -> ""60""[label=""cfg_false""];\n	""47"" -> ""17""[label=""cfg_true""];\n	""47"" -> ""35""[label=""cfg_false""];\n	""48"" -> ""21""[label=""cfg_false""];\n	""48"" -> ""22""[label=""cfg_true""];\n	""49"" -> ""24""[label=""cfg_true""];\n	""49"" -> ""32""[label=""cfg_false""];\n	""5"" -> ""44""[label=""cfg_next""];\n	""50"" -> ""22""[label=""cfg_true""];\n	""50"" -> ""26""[label=""cfg_false""];\n	""51"" -> ""22""[label=""cfg_true""];\n	""51"" -> ""28""[label=""cfg_false""];\n	""52"" -> ""36""[label=""cfg_false""];\n	""52"" -> ""55""[label=""cfg_true""];\n	""53"" -> ""1""[label=""cfg_true""];\n	""53"" -> ""2""[label=""cfg_false""];\n	""54"" -> ""38""[label=""cfg_next""];\n	""58"" -> ""63""[label=""cfg_next""];\n	""59"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""60"" -> ""16""[label=""cfg_next""];\n	""61"" -> ""57""[label=""cfg_next""];\n	""62"" -> ""56""[label=""cfg_next""];\n	""63"" -> ""41""[label=""cfg_next""];\n	""64"" -> ""3""[label=""cfg_next""];\n	""65"" -> ""20""[label=""cfg_next""];\n	""66"" -> ""42""[label=""cfg_next""];\n	""67"" -> ""7""[label=""cfg_next""];\n	""68"" -> ""18""[label=""cfg_next""];\n	""69"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""45""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.DescendantContext.isRecursive(),Method,* Checks if we are reentering a bean we have already seen and if so\n     * returns true to prevent infinite recursion.\n     * @return boolean,private boolean isRecursive() {\n    final Object node = currentNodePointer.getNode();\n    for (int i = stack.size() - 1; --i >= 0; ) {\n        final NodeIterator it = (NodeIterator) stack.get(i);\n        final Pointer pointer = it.getNodePointer();\n        if (pointer != null && pointer.getNode() == node) {\n            return true;\n        }\n    }\n    return false;\n},boolean isRecursive(),"digraph cfg_isRecursive {\n	""1"" [label=""$stack10 = interfaceinvoke pointer.<org.apache.commons.jxpath.Pointer: java.lang.Object getNode()>()""];\n	""2"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""3"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<java.util.Stack: int size()>()""];\n	""5"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack>""];\n	""6"" [label=""$stack9 = virtualinvoke $stack8.<java.util.Stack: java.lang.Object get(int)>(i)""];\n	""7"" [label=""goto""];\n	""8"" [label=""i = $stack7 - 1""];\n	""9"" [label=""i = i + -1""];\n	""10"" [label=""if $stack10 != node""];\n	""11"" [label=""if i < 0""];\n	""12"" [label=""if pointer == null""];\n	""13"" [label=""it = (org.apache.commons.jxpath.ri.model.NodeIterator) $stack9""];\n	""14"" [label=""node = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""15"" [label=""pointer = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""16"" [label=""return 0""];\n	""17"" [label=""return 1""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_false""];\n	""10"" -> ""7""[label=""cfg_true""];\n	""11"" -> ""16""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.axes.DescendantContext.<init>(EvalContext,boolean,NodeTest)",Constructor,* Create a new DescendantContext.\n     * @param parentContext parent context\n     * @param includeSelf whether to include this node\n     * @param nodeTest test,"public DescendantContext(final EvalContext parentContext, final boolean includeSelf, final NodeTest nodeTest) {\n    super(parentContext);\n    this.includeSelf = includeSelf;\n    this.nodeTest = nodeTest;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,boolean,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_init {\n	""1"" [label=""includeSelf := @parameter1: boolean""];\n	""2"" [label=""nodeTest := @parameter2: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""3"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean includeSelf> = includeSelf""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: boolean setStarted> = 0""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: java.util.Stack stack> = null""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.axes.DescendantContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = null""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getJXPathContext(),Method,No Comment,@Override\npublic JXPathContext getJXPathContext() {\n    return jxpathContext;\n},org.apache.commons.jxpath.JXPathContext getJXPathContext(),"digraph cfg_getJXPathContext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getRootContext(),Method,No Comment,@Override\npublic RootContext getRootContext() {\n    return this;\n},org.apache.commons.jxpath.ri.axes.RootContext getRootContext(),"digraph cfg_getRootContext {\n	""1"" [label=""return this""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getAbsoluteRootContext(),Method,* Gets absolute root context\n     * @return EvalContext,public EvalContext getAbsoluteRootContext() {\n    return jxpathContext.getAbsoluteRootContext();\n},org.apache.commons.jxpath.ri.EvalContext getAbsoluteRootContext(),"digraph cfg_getAbsoluteRootContext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getAbsoluteRootContext()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    return pointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getValue(),Method,No Comment,@Override\npublic Object getValue() {\n    return pointer;\n},java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getCurrentPosition(),Method,No Comment,@Override\npublic int getCurrentPosition() {\n    throw new UnsupportedOperationException();\n},int getCurrentPosition(),"digraph cfg_getCurrentPosition {\n	""1"" [label=""$stack1 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""4"" [label=""throw $stack1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    throw new UnsupportedOperationException();\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack1 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""4"" [label=""throw $stack1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.nextSet(),Method,No Comment,@Override\npublic boolean nextSet() {\n    throw new UnsupportedOperationException();\n},boolean nextSet(),"digraph cfg_nextSet {\n	""1"" [label=""$stack1 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""4"" [label=""throw $stack1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    throw new UnsupportedOperationException();\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""position := @parameter0: int""];\n	""3"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""5"" [label=""throw $stack2""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getConstantContext(Object),Method,* Gets a context that points to the specified object.\n     * @param constant object\n     * @return EvalContext,"public EvalContext getConstantContext(final Object constant) {\n    if (constant instanceof NodeSet) {\n        return new NodeSetContext(new RootContext(jxpathContext, null), (NodeSet) constant);\n    }\n    NodePointer pointer;\n    if (constant instanceof NodePointer) {\n        pointer = (NodePointer) constant;\n    } else {\n        pointer = NodePointer.newNodePointer(new QName(null, """"), constant, null);\n    }\n    return new InitialContext(new RootContext(jxpathContext, pointer));\n}",org.apache.commons.jxpath.ri.EvalContext getConstantContext(java.lang.Object),"digraph cfg_getConstantContext {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.axes.RootContext""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.NodeSet) constant""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""4"" [label=""$stack3 = constant instanceof org.apache.commons.jxpath.NodeSet""];\n	""5"" [label=""$stack4 = constant instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""$stack5 = new org.apache.commons.jxpath.ri.QName""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext>""];\n	""8"" [label=""$stack7 = new org.apache.commons.jxpath.ri.axes.RootContext""];\n	""9"" [label=""$stack8 = new org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext>""];\n	""11"" [label=""constant := @parameter0: java.lang.Object""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack3 == 0""];\n	""14"" [label=""if $stack4 == 0""];\n	""15"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) constant""];\n	""16"" [label=""pointer = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer newNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>($stack5, constant, null)""];\n	""17"" [label=""return $stack12""];\n	""18"" [label=""return $stack8""];\n	""19"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.axes.RootContext: void <init>(org.apache.commons.jxpath.ri.JXPathContextReferenceImpl,org.apache.commons.jxpath.ri.model.NodePointer)>($stack9, null)""];\n	""20"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.axes.NodeSetContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.NodeSet)>($stack10, $stack11)""];\n	""21"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(null, \""\"")""];\n	""22"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.axes.RootContext: void <init>(org.apache.commons.jxpath.ri.JXPathContextReferenceImpl,org.apache.commons.jxpath.ri.model.NodePointer)>($stack6, pointer)""];\n	""23"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.axes.InitialContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>($stack7)""];\n	""24"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_goto""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""15""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""18""[label=""cfg_next""];\n	""24"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""22""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getVariableContext(QName),Method,* Gets variable context.\n     * @param variableName variable name\n     * @return EvalContext,"public EvalContext getVariableContext(final QName variableName) {\n    return new InitialContext(new RootContext(jxpathContext, jxpathContext.getVariablePointer(variableName)));\n}",org.apache.commons.jxpath.ri.EvalContext getVariableContext(org.apache.commons.jxpath.ri.QName),"digraph cfg_getVariableContext {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext>""];\n	""3"" [label=""$stack4 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointer getVariablePointer(org.apache.commons.jxpath.ri.QName)>(variableName)""];\n	""4"" [label=""$stack5 = new org.apache.commons.jxpath.ri.axes.RootContext""];\n	""5"" [label=""$stack6 = new org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""6"" [label=""return $stack6""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.axes.RootContext: void <init>(org.apache.commons.jxpath.ri.JXPathContextReferenceImpl,org.apache.commons.jxpath.ri.model.NodePointer)>($stack3, $stack4)""];\n	""8"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.axes.InitialContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>($stack5)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""10"" [label=""variableName := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.RootContext.getFunction(QName,Object[])",Method,* Gets the specified function from the context.\n     * @param functionName QName\n     * @param parameters Object[]\n     * @return Function,"public Function getFunction(final QName functionName, final Object[] parameters) {\n    return jxpathContext.getFunction(functionName, parameters);\n}","org.apache.commons.jxpath.Function getFunction(org.apache.commons.jxpath.ri.QName,java.lang.Object[])","digraph cfg_getFunction {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext>""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Function getFunction(org.apache.commons.jxpath.ri.QName,java.lang.Object[])>(functionName, parameters)""];\n	""3"" [label=""functionName := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""parameters := @parameter1: java.lang.Object[]""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.getRegisteredValue(int),Method,* Gets a registered value.\n     * @param id int\n     * @return Object,public Object getRegisteredValue(final int id) {\n    if (registers == null || id >= MAX_REGISTER || id == -1) {\n        return UNKNOWN_VALUE;\n    }\n    return registers[id];\n},java.lang.Object getRegisteredValue(int),"digraph cfg_getRegisteredValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object[] registers>""];\n	""2"" [label=""$stack3 = <org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object UNKNOWN_VALUE>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object[] registers>""];\n	""4"" [label=""$stack5 = $stack4[id]""];\n	""5"" [label=""id := @parameter0: int""];\n	""6"" [label=""if $stack2 == null""];\n	""7"" [label=""if id != -1""];\n	""8"" [label=""if id >= 4""];\n	""9"" [label=""return $stack3""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""7""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.setRegisteredValue(Object),Method,* Sets the next registered value.\n     * @param value Object\n     * @return the id that can reclaim value.,public int setRegisteredValue(final Object value) {\n    if (registers == null) {\n        registers = new Object[MAX_REGISTER];\n        for (int i = 0; i < MAX_REGISTER; i++) {\n            registers[i] = UNKNOWN_VALUE;\n        }\n    }\n    if (availableRegister >= MAX_REGISTER) {\n        return -1;\n    }\n    registers[availableRegister] = value;\n    availableRegister++;\n    return availableRegister - 1;\n},int setRegisteredValue(java.lang.Object),"digraph cfg_setRegisteredValue {\n	""1"" [label=""$stack10 = $stack9 - 1""];\n	""2"" [label=""$stack11 = newarray (java.lang.Object)[4]""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object[] registers>""];\n	""4"" [label=""$stack12[i] = $stack13""];\n	""5"" [label=""$stack13 = <org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object UNKNOWN_VALUE>""];\n	""6"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object[] registers>""];\n	""7"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.RootContext: int availableRegister>""];\n	""8"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object[] registers>""];\n	""9"" [label=""$stack5[$stack6] = value""];\n	""10"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.RootContext: int availableRegister>""];\n	""11"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.RootContext: int availableRegister>""];\n	""12"" [label=""$stack8 = $stack7 + 1""];\n	""13"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.axes.RootContext: int availableRegister>""];\n	""14"" [label=""goto""];\n	""15"" [label=""i = 0""];\n	""16"" [label=""i = i + 1""];\n	""17"" [label=""if $stack3 != null""];\n	""18"" [label=""if $stack4 < 4""];\n	""19"" [label=""if i >= 4""];\n	""20"" [label=""return $stack10""];\n	""21"" [label=""return -1""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.axes.RootContext: int availableRegister> = $stack8""];\n	""24"" [label=""this.<org.apache.commons.jxpath.ri.axes.RootContext: java.lang.Object[] registers> = $stack11""];\n	""25"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""19""[label=""cfg_goto""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""2""[label=""cfg_false""];\n	""17"" -> ""7""[label=""cfg_true""];\n	""18"" -> ""21""[label=""cfg_false""];\n	""18"" -> ""8""[label=""cfg_true""];\n	""19"" -> ""3""[label=""cfg_false""];\n	""19"" -> ""7""[label=""cfg_true""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""22"" -> ""25""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_next""];\n	""24"" -> ""15""[label=""cfg_next""];\n	""25"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.RootContext.toString(),Method,No Comment,"@Override\npublic String toString() {\n    return super.toString() + "":"" + pointer.asPath();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: java.lang.String toString()>()""];\n	""3"" [label=""$stack3 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2)""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""6"" [label=""$stack6 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"":\"")""];\n	""7"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""return $stack8""];\n	""10"" [label=""specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>()""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.RootContext.<init>(JXPathContextReferenceImpl,NodePointer)",Constructor,* Create a new RootContext.\n     * @param jxpathContext context\n     * @param pointer pointer,"public RootContext(final JXPathContextReferenceImpl jxpathContext, final NodePointer pointer) {\n    super(null);\n    this.jxpathContext = jxpathContext;\n    this.pointer = pointer;\n    if (pointer != null) {\n        pointer.setNamespaceResolver(jxpathContext.getNamespaceResolver());\n    }\n}","void <init>(org.apache.commons.jxpath.ri.JXPathContextReferenceImpl,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_init {\n	""1"" [label=""$stack3 = virtualinvoke jxpathContext.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""2"" [label=""if pointer == null""];\n	""3"" [label=""jxpathContext := @parameter0: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""4"" [label=""pointer := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(null)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.RootContext""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.axes.RootContext: int availableRegister> = 0""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl jxpathContext> = jxpathContext""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.model.NodePointer pointer> = pointer""];\n	""11"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: void setNamespaceResolver(org.apache.commons.jxpath.ri.NamespaceResolver)>($stack3)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_false""];\n	""2"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.SelfContext.getSingleNodePointer(),Method,No Comment,@Override\npublic Pointer getSingleNodePointer() {\n    return parentContext.getSingleNodePointer();\n},org.apache.commons.jxpath.Pointer getSingleNodePointer(),"digraph cfg_getSingleNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.SelfContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    if (position == 0 && !setPosition(1)) {\n        return null;\n    }\n    return nodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: int position>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.SelfContext: boolean setPosition(int)>(1)""];\n	""4"" [label=""if $stack1 != 0""];\n	""5"" [label=""if $stack3 != 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""return null""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.SelfContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    return setPosition(getCurrentPosition() + 1);\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.SelfContext: int getCurrentPosition()>()""];\n	""2"" [label=""$stack2 = $stack1 + 1""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.SelfContext: boolean setPosition(int)>($stack2)""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.SelfContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    super.reset();\n    startedSet = false;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.SelfContext: boolean startedSet> = 0""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.SelfContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (position != 1) {\n        return false;\n    }\n    super.setPosition(position);\n    if (!startedSet) {\n        startedSet = true;\n        nodePointer = parentContext.getCurrentNodePointer();\n    }\n    if (nodePointer == null) {\n        return false;\n    }\n    return nodeTest == null || nodePointer.testNode(nodeTest);\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: boolean startedSet>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer>""];\n	""7"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack5)""];\n	""8"" [label=""$stack8 = 0""];\n	""9"" [label=""$stack8 = 1""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack2 != 0""];\n	""13"" [label=""if $stack3 != null""];\n	""14"" [label=""if $stack4 == null""];\n	""15"" [label=""if $stack7 == 0""];\n	""16"" [label=""if position == 1""];\n	""17"" [label=""position := @parameter0: int""];\n	""18"" [label=""return $stack8""];\n	""19"" [label=""return 0""];\n	""20"" [label=""return 0""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>(position)""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.axes.SelfContext: boolean startedSet> = 1""];\n	""24"" [label=""this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.model.NodePointer nodePointer> = $stack10""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_goto""];\n	""12"" -> ""23""[label=""cfg_false""];\n	""12"" -> ""3""[label=""cfg_true""];\n	""13"" -> ""20""[label=""cfg_false""];\n	""13"" -> ""4""[label=""cfg_true""];\n	""14"" -> ""6""[label=""cfg_false""];\n	""14"" -> ""9""[label=""cfg_true""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""15"" -> ""9""[label=""cfg_false""];\n	""16"" -> ""19""[label=""cfg_false""];\n	""16"" -> ""21""[label=""cfg_true""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""2""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_next""];\n	""23"" -> ""10""[label=""cfg_next""];\n	""24"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.SelfContext.<init>(EvalContext,NodeTest)",Constructor,* Create a new SelfContext.\n     * @param parentContext EvalContext\n     * @param nodeTest guard,"public SelfContext(final EvalContext parentContext, final NodeTest nodeTest) {\n    super(parentContext);\n    this.nodeTest = nodeTest;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_init {\n	""1"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.axes.SelfContext: boolean startedSet> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.SelfContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AttributeContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    return currentNodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AttributeContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AttributeContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    setStarted = false;\n    iterator = null;\n    super.reset();\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AttributeContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: boolean setStarted> = 0""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator> = null""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AttributeContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (position < getCurrentPosition()) {\n        reset();\n    }\n    while (getCurrentPosition() < position) {\n        if (!nextNode()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AttributeContext: int getCurrentPosition()>()""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AttributeContext: int getCurrentPosition()>()""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AttributeContext: boolean nextNode()>()""];\n	""4"" [label=""if $stack3 >= position""];\n	""5"" [label=""if $stack4 != 0""];\n	""6"" [label=""if position >= $stack2""];\n	""7"" [label=""position := @parameter0: int""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AttributeContext""];\n	""11"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AttributeContext: void reset()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""4"" -> ""9""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.AttributeContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    super.setPosition(getCurrentPosition() + 1);\n    if (!setStarted) {\n        setStarted = true;\n        QName name;\n        if (nodeTest instanceof NodeNameTest) {\n            name = ((NodeNameTest) nodeTest).getNodeName();\n        } else if (nodeTest instanceof NodeTypeTest && ((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE) {\n            name = WILDCARD;\n        } else {\n            iterator = null;\n            return false;\n        }\n        iterator = parentContext.getCurrentNodePointer().attributeIterator(name);\n    }\n    if (iterator == null) {\n        return false;\n    }\n    if (!iterator.setPosition(iterator.getPosition() + 1)) {\n        return false;\n    }\n    currentNodePointer = iterator.getNodePointer();\n    return true;\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack10 = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack9)""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""3"" [label=""$stack12 = interfaceinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""5"" [label=""$stack14 = $stack13 instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""7"" [label=""$stack16 = $stack15 instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""9"" [label=""$stack18 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) $stack17""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""11"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.AttributeContext: int getCurrentPosition()>()""];\n	""12"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""13"" [label=""$stack21 = virtualinvoke $stack20.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""14"" [label=""$stack22 = virtualinvoke $stack21.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""15"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""16"" [label=""$stack24 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) $stack23""];\n	""17"" [label=""$stack3 = $stack2 + 1""];\n	""18"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: boolean setStarted>""];\n	""19"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""20"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""21"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""22"" [label=""$stack8 = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodeIterator: int getPosition()>()""];\n	""23"" [label=""$stack9 = $stack8 + 1""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack10 != 0""];\n	""27"" [label=""if $stack14 == 0""];\n	""28"" [label=""if $stack16 == 0""];\n	""29"" [label=""if $stack19 != 1""];\n	""30"" [label=""if $stack4 != 0""];\n	""31"" [label=""if $stack5 != null""];\n	""32"" [label=""name = <org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.QName WILDCARD>""];\n	""33"" [label=""name = virtualinvoke $stack24.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""34"" [label=""return 0""];\n	""35"" [label=""return 0""];\n	""36"" [label=""return 0""];\n	""37"" [label=""return 1""];\n	""38"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>($stack3)""];\n	""39"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AttributeContext""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: boolean setStarted> = 1""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator> = $stack22""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator> = null""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.model.NodePointer currentNodePointer> = $stack12""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""41""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""33""[label=""cfg_next""];\n	""17"" -> ""38""[label=""cfg_next""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""12""[label=""cfg_goto""];\n	""25"" -> ""12""[label=""cfg_goto""];\n	""26"" -> ""2""[label=""cfg_true""];\n	""26"" -> ""35""[label=""cfg_false""];\n	""27"" -> ""15""[label=""cfg_false""];\n	""27"" -> ""6""[label=""cfg_true""];\n	""28"" -> ""42""[label=""cfg_true""];\n	""28"" -> ""8""[label=""cfg_false""];\n	""29"" -> ""32""[label=""cfg_false""];\n	""29"" -> ""42""[label=""cfg_true""];\n	""3"" -> ""43""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""30"" -> ""40""[label=""cfg_false""];\n	""31"" -> ""21""[label=""cfg_true""];\n	""31"" -> ""34""[label=""cfg_false""];\n	""32"" -> ""25""[label=""cfg_next""];\n	""33"" -> ""24""[label=""cfg_next""];\n	""38"" -> ""18""[label=""cfg_next""];\n	""39"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""4""[label=""cfg_next""];\n	""41"" -> ""19""[label=""cfg_next""];\n	""42"" -> ""36""[label=""cfg_next""];\n	""43"" -> ""37""[label=""cfg_next""];\n	""5"" -> ""27""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""28""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.AttributeContext.<init>(EvalContext,NodeTest)",Constructor,* Create a new AttributeContext.\n     * @param parentContext represents the previous step on the path\n     * @param nodeTest is the name of the attribute we are looking for,"public AttributeContext(final EvalContext parentContext, final NodeTest nodeTest) {\n    super(parentContext);\n    this.nodeTest = nodeTest;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_init {\n	""1"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.AttributeContext""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: boolean setStarted> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.axes.AttributeContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.UnionContext.getDocumentOrder(),Method,No Comment,@Override\npublic int getDocumentOrder() {\n    return contexts.length > 1 ? 1 : super.getDocumentOrder();\n},int getDocumentOrder(),"digraph cfg_getDocumentOrder {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.UnionContext: org.apache.commons.jxpath.ri.EvalContext[] contexts>""];\n	""2"" [label=""$stack2 = lengthof $stack1""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: int getDocumentOrder()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 <= 1""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.UnionContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.UnionContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (!prepared) {\n        prepared = true;\n        final BasicNodeSet nodeSet = (BasicNodeSet) getNodeSet();\n        final ArrayList pointers = new ArrayList();\n        for (final EvalContext ctx : contexts) {\n            while (ctx.nextSet()) {\n                while (ctx.nextNode()) {\n                    final NodePointer ptr = ctx.getCurrentNodePointer();\n                    if (!pointers.contains(ptr)) {\n                        pointers.add(ptr);\n                    }\n                }\n            }\n        }\n        sortPointers(pointers);\n        for (final Iterator it = pointers.iterator(); it.hasNext(); ) {\n            nodeSet.add((Pointer) it.next());\n        }\n    }\n    return super.setPosition(position);\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: boolean setPosition(int)>(position)""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.UnionContext: org.apache.commons.jxpath.NodeSet getNodeSet()>()""];\n	""3"" [label=""$stack12 = new java.util.ArrayList""];\n	""4"" [label=""$stack13 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""5"" [label=""$stack14 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""6"" [label=""$stack15 = (org.apache.commons.jxpath.Pointer) $stack14""];\n	""7"" [label=""$stack16 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""8"" [label=""$stack17 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""9"" [label=""$stack18 = virtualinvoke pointers.<java.util.ArrayList: boolean contains(java.lang.Object)>(ptr)""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.axes.UnionContext: boolean prepared>""];\n	""11"" [label=""ctx = it[l6]""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack13 == 0""];\n	""16"" [label=""if $stack16 == 0""];\n	""17"" [label=""if $stack17 == 0""];\n	""18"" [label=""if $stack18 != 0""];\n	""19"" [label=""if $stack9 != 0""];\n	""20"" [label=""if l6 >= l5""];\n	""21"" [label=""it = this.<org.apache.commons.jxpath.ri.axes.UnionContext: org.apache.commons.jxpath.ri.EvalContext[] contexts>""];\n	""22"" [label=""it = virtualinvoke pointers.<java.util.ArrayList: java.util.Iterator iterator()>()""];\n	""23"" [label=""l5 = lengthof it""];\n	""24"" [label=""l6 = 0""];\n	""25"" [label=""l6 = l6 + 1""];\n	""26"" [label=""nodeSet = (org.apache.commons.jxpath.BasicNodeSet) $stack11""];\n	""27"" [label=""pointers = $stack12""];\n	""28"" [label=""position := @parameter0: int""];\n	""29"" [label=""ptr = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""30"" [label=""return $stack10""];\n	""31"" [label=""specialinvoke $stack12.<java.util.ArrayList: void <init>()>()""];\n	""32"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.UnionContext""];\n	""33"" [label=""this.<org.apache.commons.jxpath.ri.axes.UnionContext: boolean prepared> = 1""];\n	""34"" [label=""virtualinvoke nodeSet.<org.apache.commons.jxpath.BasicNodeSet: void add(org.apache.commons.jxpath.Pointer)>($stack15)""];\n	""35"" [label=""virtualinvoke pointers.<java.util.ArrayList: boolean add(java.lang.Object)>(ptr)""];\n	""36"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.axes.UnionContext: void sortPointers(java.util.List)>(pointers)""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_goto""];\n	""13"" -> ""20""[label=""cfg_goto""];\n	""14"" -> ""4""[label=""cfg_goto""];\n	""15"" -> ""1""[label=""cfg_true""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""25""[label=""cfg_true""];\n	""16"" -> ""8""[label=""cfg_false""];\n	""17"" -> ""29""[label=""cfg_false""];\n	""17"" -> ""7""[label=""cfg_true""];\n	""18"" -> ""12""[label=""cfg_true""];\n	""18"" -> ""35""[label=""cfg_false""];\n	""19"" -> ""1""[label=""cfg_true""];\n	""19"" -> ""33""[label=""cfg_false""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_false""];\n	""20"" -> ""36""[label=""cfg_true""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""4""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""20""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_next""];\n	""26"" -> ""3""[label=""cfg_next""];\n	""27"" -> ""21""[label=""cfg_next""];\n	""28"" -> ""10""[label=""cfg_next""];\n	""29"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""27""[label=""cfg_next""];\n	""32"" -> ""28""[label=""cfg_next""];\n	""33"" -> ""2""[label=""cfg_next""];\n	""34"" -> ""14""[label=""cfg_next""];\n	""35"" -> ""12""[label=""cfg_next""];\n	""36"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""34""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.axes.UnionContext.<init>(EvalContext,EvalContext[])",Constructor,* Create a new UnionContext.\n     * @param parentContext parent context\n     * @param contexts child contexts,"public UnionContext(final EvalContext parentContext, final EvalContext[] contexts) {\n    super(parentContext, new BasicNodeSet());\n    this.contexts = contexts;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.EvalContext[])","digraph cfg_init {\n	""1"" [label=""$stack3 = new org.apache.commons.jxpath.BasicNodeSet""];\n	""2"" [label=""contexts := @parameter1: org.apache.commons.jxpath.ri.EvalContext[]""];\n	""3"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.BasicNodeSet: void <init>()>()""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.axes.NodeSetContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.NodeSet)>(parentContext, $stack3)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.UnionContext""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.axes.UnionContext: org.apache.commons.jxpath.ri.EvalContext[] contexts> = contexts""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ChildContext.getCurrentNodePointer(),Method,No Comment,@Override\npublic NodePointer getCurrentNodePointer() {\n    if (position == 0 && !setPosition(1)) {\n        return null;\n    }\n    return iterator == null ? null : iterator.getNodePointer();\n},org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),"digraph cfg_getCurrentNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: int position>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""4"" [label=""$stack4 = interfaceinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""5"" [label=""$stack4 = null""];\n	""6"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean setPosition(int)>(1)""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack1 != 0""];\n	""9"" [label=""if $stack2 != null""];\n	""10"" [label=""if $stack5 != 0""];\n	""11"" [label=""return $stack4""];\n	""12"" [label=""return null""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ChildContext.getSingleNodePointer(),Method,"* This method is called on the last context on the path when only\n     * one value is needed.  Note that this will return the whole property,\n     * even if it is a collection. It will not extract the first element\n     * of the collection.  For example, ""books"" will return the collection\n     * of books rather than the first book from that collection.\n     * @return Pointer","@Override\npublic Pointer getSingleNodePointer() {\n    if (position == 0) {\n        while (nextSet()) {\n            prepare();\n            if (iterator == null) {\n                return null;\n            }\n            // See if there is a property there, singular or collection\n            final NodePointer pointer = iterator.getNodePointer();\n            if (pointer != null) {\n                return pointer;\n            }\n        }\n        return null;\n    }\n    return getCurrentNodePointer();\n}",org.apache.commons.jxpath.Pointer getSingleNodePointer(),"digraph cfg_getSingleNodePointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: int position>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean nextSet()>()""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 != 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if $stack5 != null""];\n	""10"" [label=""if pointer == null""];\n	""11"" [label=""pointer = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""12"" [label=""return $stack3""];\n	""13"" [label=""return null""];\n	""14"" [label=""return null""];\n	""15"" [label=""return pointer""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: void prepare()>()""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""4""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""16""[label=""cfg_false""];\n	""9"" -> ""14""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ChildContext.nextNode(),Method,No Comment,@Override\npublic boolean nextNode() {\n    return setPosition(getCurrentPosition() + 1);\n},boolean nextNode(),"digraph cfg_nextNode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: int getCurrentPosition()>()""];\n	""2"" [label=""$stack2 = $stack1 + 1""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean setPosition(int)>($stack2)""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ChildContext.reset(),Method,No Comment,@Override\npublic void reset() {\n    super.reset();\n    iterator = null;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator> = null""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ChildContext.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    final int oldPosition = getCurrentPosition();\n    super.setPosition(position);\n    if (oldPosition == 0) {\n        prepare();\n    }\n    return iterator != null && iterator.setPosition(position);\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator>""];\n	""3"" [label=""$stack5 = interfaceinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(position)""];\n	""4"" [label=""$stack6 = 0""];\n	""5"" [label=""$stack6 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""if oldPosition != 0""];\n	""10"" [label=""oldPosition = virtualinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: int getCurrentPosition()>()""];\n	""11"" [label=""position := @parameter0: int""];\n	""12"" [label=""return $stack6""];\n	""13"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>(position)""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.axes.ChildContext: void prepare()>()""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""14""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.axes.ChildContext.prepare(),Method,* Allocates a PropertyIterator.,"private void prepare() {\n    final NodePointer parent = parentContext.getCurrentNodePointer();\n    if (parent == null) {\n        return;\n    }\n    final NodePointer useParent = startFromParentLocation ? parent.getParent() : parent;\n    iterator = useParent == null ? null : useParent.childIterator(nodeTest, reverse, startFromParentLocation ? parent : null);\n}",void prepare(),"digraph cfg_prepare {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean startFromParentLocation>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean startFromParentLocation>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean reverse>""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""6"" [label=""$stack8 = null""];\n	""7"" [label=""$stack8 = virtualinvoke useParent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>($stack7, $stack6, $stack9)""];\n	""8"" [label=""$stack9 = null""];\n	""9"" [label=""$stack9 = parent""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack4 == 0""];\n	""14"" [label=""if $stack5 == 0""];\n	""15"" [label=""if parent != null""];\n	""16"" [label=""if useParent != null""];\n	""17"" [label=""parent = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""18"" [label=""return""];\n	""19"" [label=""return""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""21"" [label=""this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.model.NodeIterator iterator> = $stack8""];\n	""22"" [label=""useParent = parent""];\n	""23"" [label=""useParent = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getParent()>()""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_goto""];\n	""11"" -> ""21""[label=""cfg_goto""];\n	""12"" -> ""7""[label=""cfg_goto""];\n	""13"" -> ""22""[label=""cfg_true""];\n	""13"" -> ""23""[label=""cfg_false""];\n	""14"" -> ""8""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""18""[label=""cfg_false""];\n	""15"" -> ""2""[label=""cfg_true""];\n	""16"" -> ""5""[label=""cfg_true""];\n	""16"" -> ""6""[label=""cfg_false""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""16""[label=""cfg_next""];\n	""23"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.axes.ChildContext.<init>(EvalContext,NodeTest,boolean,boolean)",Constructor,* Create a new ChildContext.\n     * @param parentContext parent EvalContext\n     * @param nodeTest NodeTest\n     * @param startFromParentLocation whether to start from parent location\n     * @param reverse whether to iterate in reverse,"public ChildContext(final EvalContext parentContext, final NodeTest nodeTest, final boolean startFromParentLocation, final boolean reverse) {\n    super(parentContext);\n    this.nodeTest = nodeTest;\n    this.startFromParentLocation = startFromParentLocation;\n    this.reverse = reverse;\n}","void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,boolean)","digraph cfg_init {\n	""1"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return""];\n	""4"" [label=""reverse := @parameter3: boolean""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(parentContext)""];\n	""6"" [label=""startFromParentLocation := @parameter2: boolean""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean reverse> = reverse""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.axes.ChildContext: boolean startFromParentLocation> = startFromParentLocation""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.axes.ChildContext: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl.newContext(JXPathContext,Object)",Method,No Comment,"@Override\npublic JXPathContext newContext(final JXPathContext parentContext, final Object contextBean) {\n    return new JXPathContextReferenceImpl(parentContext, contextBean);\n}","org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_newContext {\n	""1"" [label=""$stack3 = new org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""2"" [label=""contextBean := @parameter1: java.lang.Object""];\n	""3"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void <init>(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(parentContext, contextBean)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl.<init>(),Constructor,* Create a new JXPathContextFactoryReferenceImpl.,public JXPathContextFactoryReferenceImpl() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathContextFactory: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextFactoryReferenceImpl""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.Compiler.number(String),Abstract Method,* Produces an EXPRESSION object that represents a numeric constant.\n     * @param value numeric String\n     * @return Object,Object number(String value);,java.lang.Object number(java.lang.String),digraph cfg_number {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.literal(String),Abstract Method,* Produces an EXPRESSION object that represents a string constant.\n     * @param value String literal\n     * @return Object,Object literal(String value);,java.lang.Object literal(java.lang.String),digraph cfg_literal {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.qname(String,String)",Abstract Method,* Produces an QNAME that represents a name with an optional prefix.\n     * @param prefix String prefix\n     * @param name String name\n     * @return Object,"Object qname(String prefix, String name);","java.lang.Object qname(java.lang.String,java.lang.String)",digraph cfg_qname {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.sum(Object[]),Abstract Method,* Produces an EXPRESSION object representing the sum of all argumens\n     *\n     * @param arguments are EXPRESSION objects\n     * @return Object,Object sum(Object[] arguments);,java.lang.Object sum(java.lang.Object[]),digraph cfg_sum {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.minus(Object,Object)",Abstract Method,* Produces an EXPRESSION object representing <em>left</em> minus <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object minus(Object left, Object right);","java.lang.Object minus(java.lang.Object,java.lang.Object)",digraph cfg_minus {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.multiply(Object,Object)",Abstract Method,* Produces  an EXPRESSION object representing <em>left</em> multiplied by\n     * <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object multiply(Object left, Object right);","java.lang.Object multiply(java.lang.Object,java.lang.Object)",digraph cfg_multiply {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.divide(Object,Object)",Abstract Method,* Produces  an EXPRESSION object representing <em>left</em> divided by\n     * <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object divide(Object left, Object right);","java.lang.Object divide(java.lang.Object,java.lang.Object)",digraph cfg_divide {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.mod(Object,Object)",Abstract Method,* Produces  an EXPRESSION object representing <em>left</em> modulo\n     * <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object mod(Object left, Object right);","java.lang.Object mod(java.lang.Object,java.lang.Object)",digraph cfg_mod {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.lessThan(Object,Object)",Abstract Method,* Produces an EXPRESSION object representing the comparison:\n     * <em>left</em> less than <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object lessThan(Object left, Object right);","java.lang.Object lessThan(java.lang.Object,java.lang.Object)",digraph cfg_lessThan {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.lessThanOrEqual(Object,Object)",Abstract Method,* Produces an EXPRESSION object representing the comparison:\n     * <em>left</em> less than or equal to <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object lessThanOrEqual(Object left, Object right);","java.lang.Object lessThanOrEqual(java.lang.Object,java.lang.Object)",digraph cfg_lessThanOrEqual {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.greaterThan(Object,Object)",Abstract Method,* Produces an EXPRESSION object representing the comparison:\n     * <em>left</em> greater than <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object greaterThan(Object left, Object right);","java.lang.Object greaterThan(java.lang.Object,java.lang.Object)",digraph cfg_greaterThan {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.greaterThanOrEqual(Object,Object)",Abstract Method,* Produces an EXPRESSION object representing the comparison:\n     * <em>left</em> greater than or equal to <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object greaterThanOrEqual(Object left, Object right);","java.lang.Object greaterThanOrEqual(java.lang.Object,java.lang.Object)",digraph cfg_greaterThanOrEqual {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.equal(Object,Object)",Abstract Method,* Produces an EXPRESSION object representing the comparison:\n     * <em>left</em> equals to <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object equal(Object left, Object right);","java.lang.Object equal(java.lang.Object,java.lang.Object)",digraph cfg_equal {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.notEqual(Object,Object)",Abstract Method,* Produces an EXPRESSION object representing the comparison:\n     * <em>left</em> is not equal to <em>right</em>\n     *\n     * @param left is an EXPRESSION object\n     * @param right is an EXPRESSION object\n     * @return Object,"Object notEqual(Object left, Object right);","java.lang.Object notEqual(java.lang.Object,java.lang.Object)",digraph cfg_notEqual {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.minus(Object),Abstract Method,* Produces an EXPRESSION object representing unary negation of the argument\n     *\n     * @param argument is an EXPRESSION object\n     * @return Object,Object minus(Object argument);,java.lang.Object minus(java.lang.Object),digraph cfg_minus {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.variableReference(Object),Abstract Method,* Produces an EXPRESSION object representing variable reference\n     *\n     * @param qname is a QNAME object\n     * @return Object,Object variableReference(Object qname);,java.lang.Object variableReference(java.lang.Object),digraph cfg_variableReference {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.function(int,Object[])",Abstract Method,* Produces an EXPRESSION object representing the computation of\n     * a core function with the supplied arguments.\n     *\n     * @param code is one of FUNCTION_... constants\n     * @param args are EXPRESSION objects\n     * @return Object,"Object function(int code, Object[] args);","java.lang.Object function(int,java.lang.Object[])",digraph cfg_function {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.function(Object,Object[])",Abstract Method,* Produces an EXPRESSION object representing the computation of\n     * a library function with the supplied arguments.\n     *\n     * @param name is a QNAME object (function name)\n     * @param args are EXPRESSION objects\n     * @return Object,"Object function(Object name, Object[] args);","java.lang.Object function(java.lang.Object,java.lang.Object[])",digraph cfg_function {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.and(Object[]),Abstract Method,* Produces an EXPRESSION object representing logical conjunction of\n     * all arguments\n     *\n     * @param arguments are EXPRESSION objects\n     * @return Object,Object and(Object[] arguments);,java.lang.Object and(java.lang.Object[]),digraph cfg_and {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.or(Object[]),Abstract Method,* Produces an EXPRESSION object representing logical disjunction of\n     * all arguments\n     *\n     * @param arguments are EXPRESSION objects\n     * @return Object,Object or(Object[] arguments);,java.lang.Object or(java.lang.Object[]),digraph cfg_or {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.union(Object[]),Abstract Method,* Produces an EXPRESSION object representing union of all node sets\n     *\n     * @param arguments are EXPRESSION objects\n     * @return Object,Object union(Object[] arguments);,java.lang.Object union(java.lang.Object[]),digraph cfg_union {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.nodeNameTest(Object),Abstract Method,* Produces a NODE_TEST object that represents a node name test.\n     *\n     * @param qname is a QNAME object\n     * @return Object,Object nodeNameTest(Object qname);,java.lang.Object nodeNameTest(java.lang.Object),digraph cfg_nodeNameTest {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.nodeTypeTest(int),Abstract Method,* Produces a NODE_TEST object that represents a node type test.\n     *\n     * @param nodeType is a NODE_TEST object\n     * @return Object,Object nodeTypeTest(int nodeType);,java.lang.Object nodeTypeTest(int),digraph cfg_nodeTypeTest {\n}\n,default
org.apache.commons.jxpath.ri.Compiler.processingInstructionTest(String),Abstract Method,* Produces  a NODE_TEST object that represents a processing instruction\n     * test.\n     *\n     * @param instruction is a NODE_TEST object\n     * @return Object,Object processingInstructionTest(String instruction);,java.lang.Object processingInstructionTest(java.lang.String),digraph cfg_processingInstructionTest {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.step(int,Object,Object[])",Abstract Method,* Produces a STEP object that represents a node test.\n     *\n     * @param axis is one of the AXIS_... constants\n     * @param nodeTest is a NODE_TEST object\n     * @param predicates are EXPRESSION objects\n     * @return Object,"Object step(int axis, Object nodeTest, Object[] predicates);","java.lang.Object step(int,java.lang.Object,java.lang.Object[])",digraph cfg_step {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.locationPath(boolean,Object[])",Abstract Method,* Produces an EXPRESSION object representing a location path\n     *\n     * @param absolute indicates whether the path is absolute\n     * @param steps are STEP objects\n     * @return Object,"Object locationPath(boolean absolute, Object[] steps);","java.lang.Object locationPath(boolean,java.lang.Object[])",digraph cfg_locationPath {\n}\n,default
"org.apache.commons.jxpath.ri.Compiler.expressionPath(Object,Object[],Object[])",Abstract Method,* Produces an EXPRESSION object representing a filter expression\n     *\n     * @param expression is an EXPRESSION object\n     * @param predicates are EXPRESSION objects\n     * @param steps are STEP objects\n     * @return Object,"Object expressionPath(Object expression, Object[] predicates, Object[] steps);","java.lang.Object expressionPath(java.lang.Object,java.lang.Object[],java.lang.Object[])",digraph cfg_expressionPath {\n}\n,default
org.apache.commons.jxpath.ri.parser.TokenMgrError.addEscapes(String),Method,* Replaces unprintable characters by their escaped (or Unicode escaped) equivalents in the given string\n    *\n    * @param str TODO\n    * @return TODO,"public static final String addEscapes(final String str) {\n    final StringBuilder retval = new StringBuilder();\n    char ch;\n    for (int i = 0; i < str.length(); i++) {\n        switch(str.charAt(i)) {\n            case 0:\n                continue;\n            case '\b':\n                retval.append(""\\b"");\n                continue;\n            case '\t':\n                retval.append(""\\t"");\n                continue;\n            case '\n':\n                retval.append(""\\n"");\n                continue;\n            case '\f':\n                retval.append(""\\f"");\n                continue;\n            case '\r':\n                retval.append(""\\r"");\n                continue;\n            case '\""':\n                retval.append(""\\\"""");\n                continue;\n            case '\'':\n                retval.append(""\\\'"");\n                continue;\n            case '\\':\n                retval.append(""\\\\"");\n                continue;\n            default:\n                if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\n                    final String s = ""0000"" + Integer.toString(ch, 16);\n                    retval.append(""\\u"" + s.substring(s.length() - 4));\n                } else {\n                    retval.append(ch);\n                }\n                continue;\n        }\n    }\n    return retval.toString();\n}",java.lang.String addEscapes(java.lang.String),"digraph cfg_addEscapes {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(ch, 16)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""0000\"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)""];\n	""4"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack14 = virtualinvoke s.<java.lang.String: int length()>()""];\n	""6"" [label=""$stack15 = $stack14 - 4""];\n	""7"" [label=""$stack16 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>($stack15)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\u\"")""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16)""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""11"" [label=""$stack5 = new java.lang.StringBuilder""];\n	""12"" [label=""$stack6 = virtualinvoke str.<java.lang.String: int length()>()""];\n	""13"" [label=""$stack7 = virtualinvoke retval.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack8 = virtualinvoke str.<java.lang.String: char charAt(int)>(i)""];\n	""15"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""16"" [label=""ch = virtualinvoke str.<java.lang.String: char charAt(int)>(i)""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""i = 0""];\n	""29"" [label=""i = i + 1""];\n	""30"" [label=""if ch < 32""];\n	""31"" [label=""if ch <= 126""];\n	""32"" [label=""if i >= $stack6""];\n	""33"" [label=""return $stack7""];\n	""34"" [label=""retval = $stack5""];\n	""35"" [label=""s = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""36"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>()""];\n	""38"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""39"" [label=""str := @parameter0: java.lang.String""];\n	""40"" [label=""switch($stack8) \{     case 0:     case 8:     case 9:     case 10:     case 12:     case 13:     case 34:     case 39:     case 92:     default:  \}""];\n	""41"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(ch)""];\n	""42"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\\\""\"")""];\n	""43"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\\'\"")""];\n	""44"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\\\\"")""];\n	""45"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\b\"")""];\n	""46"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\f\"")""];\n	""47"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\n\"")""];\n	""48"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\r\"")""];\n	""49"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\t\"")""];\n	""50"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""50""[label=""cfg_next""];\n	""11"" -> ""37""[label=""cfg_next""];\n	""12"" -> ""32""[label=""cfg_next""];\n	""13"" -> ""33""[label=""cfg_next""];\n	""14"" -> ""40""[label=""cfg_next""];\n	""15"" -> ""38""[label=""cfg_next""];\n	""16"" -> ""30""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_goto""];\n	""18"" -> ""29""[label=""cfg_goto""];\n	""19"" -> ""29""[label=""cfg_goto""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""29""[label=""cfg_goto""];\n	""21"" -> ""29""[label=""cfg_goto""];\n	""22"" -> ""29""[label=""cfg_goto""];\n	""23"" -> ""29""[label=""cfg_goto""];\n	""24"" -> ""29""[label=""cfg_goto""];\n	""25"" -> ""29""[label=""cfg_goto""];\n	""26"" -> ""29""[label=""cfg_goto""];\n	""27"" -> ""12""[label=""cfg_goto""];\n	""28"" -> ""12""[label=""cfg_next""];\n	""29"" -> ""27""[label=""cfg_next""];\n	""3"" -> ""35""[label=""cfg_next""];\n	""30"" -> ""15""[label=""cfg_true""];\n	""30"" -> ""31""[label=""cfg_false""];\n	""31"" -> ""15""[label=""cfg_false""];\n	""31"" -> ""41""[label=""cfg_true""];\n	""32"" -> ""13""[label=""cfg_true""];\n	""32"" -> ""14""[label=""cfg_false""];\n	""34"" -> ""28""[label=""cfg_next""];\n	""35"" -> ""4""[label=""cfg_next""];\n	""36"" -> ""8""[label=""cfg_next""];\n	""37"" -> ""34""[label=""cfg_next""];\n	""38"" -> ""2""[label=""cfg_next""];\n	""39"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""36""[label=""cfg_next""];\n	""40"" -> ""16""[label=""cfg_switch""];\n	""40"" -> ""17""[label=""cfg_switch""];\n	""40"" -> ""42""[label=""cfg_switch""];\n	""40"" -> ""43""[label=""cfg_switch""];\n	""40"" -> ""44""[label=""cfg_switch""];\n	""40"" -> ""45""[label=""cfg_switch""];\n	""40"" -> ""46""[label=""cfg_switch""];\n	""40"" -> ""47""[label=""cfg_switch""];\n	""40"" -> ""48""[label=""cfg_switch""];\n	""40"" -> ""49""[label=""cfg_switch""];\n	""41"" -> ""29""[label=""cfg_next""];\n	""42"" -> ""23""[label=""cfg_next""];\n	""43"" -> ""24""[label=""cfg_next""];\n	""44"" -> ""25""[label=""cfg_next""];\n	""45"" -> ""18""[label=""cfg_next""];\n	""46"" -> ""21""[label=""cfg_next""];\n	""47"" -> ""20""[label=""cfg_next""];\n	""48"" -> ""22""[label=""cfg_next""];\n	""49"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""26""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , static , final "
"org.apache.commons.jxpath.ri.parser.TokenMgrError.LexicalError(boolean,int,int,int,String,char)",Method,* Returns a detailed message for the Error when it is thrown by the token manager to indicate a lexical error.\n    *\n    * Note: You can customize the lexical error message by modifying this method.\n    *\n    * @param EOFSeen     indicates if EOF caused the lexicl error\n    * @param lexState    lexical state in which this error occurred\n    * @param errorLine   line number when the error occurred\n    * @param errorColumn column number when the error occurred\n    * @param errorAfter  prefix that was seen before this error occurred\n    * @param curChar     the offending character\n    * @return TODO,"protected static String LexicalError(final boolean EOFSeen, final int lexState, final int errorLine, final int errorColumn, final String errorAfter, final char curChar) {\n    return ""Lexical error at line "" + errorLine + "", column "" + errorColumn + "".  Encountered: "" + (EOFSeen ? ""<EOF> "" : ""\"""" + addEscapes(String.valueOf(curChar)) + ""\"""" + "" ("" + (int) curChar + ""), "") + ""after : \"""" + addEscapes(errorAfter) + ""\"""";\n}","java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char)","digraph cfg_LexicalError {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(errorColumn)""];\n	""2"" [label=""$stack11 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack12 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(curChar)""];\n	""4"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>($stack12)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\""\"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\"" (\"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(curChar)""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""), \"")""];\n	""10"" [label=""$stack19 = \""<EOF> \""""];\n	""11"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack20 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"".  Encountered: \"")""];\n	""13"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19)""];\n	""14"" [label=""$stack22 = staticinvoke <org.apache.commons.jxpath.ri.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(errorAfter)""];\n	""15"" [label=""$stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""after : \\""\"")""];\n	""16"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22)""];\n	""17"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\""\"")""];\n	""18"" [label=""$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""19"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""20"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Lexical error at line \"")""];\n	""21"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(errorLine)""];\n	""22"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", column \"")""];\n	""23"" [label=""EOFSeen := @parameter0: boolean""];\n	""24"" [label=""curChar := @parameter5: char""];\n	""25"" [label=""errorAfter := @parameter4: java.lang.String""];\n	""26"" [label=""errorColumn := @parameter3: int""];\n	""27"" [label=""errorLine := @parameter2: int""];\n	""28"" [label=""goto""];\n	""29"" [label=""if EOFSeen == 0""];\n	""30"" [label=""lexState := @parameter1: int""];\n	""31"" [label=""return $stack26""];\n	""32"" [label=""specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""29""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""31""[label=""cfg_next""];\n	""19"" -> ""33""[label=""cfg_next""];\n	""2"" -> ""32""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""30""[label=""cfg_next""];\n	""24"" -> ""19""[label=""cfg_next""];\n	""25"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""26""[label=""cfg_next""];\n	""28"" -> ""13""[label=""cfg_goto""];\n	""29"" -> ""10""[label=""cfg_false""];\n	""29"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""27""[label=""cfg_next""];\n	""32"" -> ""5""[label=""cfg_next""];\n	""33"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","protected , static "
org.apache.commons.jxpath.ri.parser.TokenMgrError.getMessage(),Method,"* You can also modify the body of this method to customize your error messages.\n    * For example, cases like LOOP_DETECTED and INVALID_LEXICAL_STATE are not\n    * of end-users concern, so you can return something like :\n    *\n    *     ""Internal Error : Please file a bug report .... ""\n    *\n    * from this method for such cases in the release version of your parser.",@Override\npublic String getMessage() {\n    return super.getMessage();\n},java.lang.String getMessage(),"digraph cfg_getMessage {\n	""1"" [label=""$stack1 = specialinvoke this.<java.lang.Error: java.lang.String getMessage()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.TokenMgrError.getPosition(),Method,No Comment,public int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.TokenMgrError: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.TokenMgrError.getCharacter(),Method,No Comment,public char getCharacter() {\n    return character;\n},char getCharacter(),"digraph cfg_getCharacter {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.TokenMgrError: char character>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.TokenMgrError.<init>(),Constructor,No Comment,public TokenMgrError() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Error: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.TokenMgrError.<init>(String,int)",Constructor,No Comment,"public TokenMgrError(final String message, final int reason) {\n    super(message);\n    errorCode = reason;\n}","void <init>(java.lang.String,int)","digraph cfg_init {\n	""1"" [label=""message := @parameter0: java.lang.String""];\n	""2"" [label=""reason := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Error: void <init>(java.lang.String)>(message)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.parser.TokenMgrError: int errorCode> = reason""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.TokenMgrError.<init>(boolean,int,int,int,String,char,int)",Constructor,No Comment,"public TokenMgrError(final boolean EOFSeen, final int lexState, final int errorLine, final int errorColumn, final String errorAfter, final char curChar, final int reason) {\n    this(LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar), reason);\n    // ADDED BY ME FROM THIS POINT TO THE EOF - DMITRI PLOTNIKOV\n    position = errorColumn - 1;\n    character = curChar;\n}","void <init>(boolean,int,int,int,java.lang.String,char,int)","digraph cfg_init {\n	""1"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.parser.TokenMgrError: java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char)>(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar)""];\n	""2"" [label=""$stack9 = errorColumn - 1""];\n	""3"" [label=""EOFSeen := @parameter0: boolean""];\n	""4"" [label=""curChar := @parameter5: char""];\n	""5"" [label=""errorAfter := @parameter4: java.lang.String""];\n	""6"" [label=""errorColumn := @parameter3: int""];\n	""7"" [label=""errorLine := @parameter2: int""];\n	""8"" [label=""lexState := @parameter1: int""];\n	""9"" [label=""reason := @parameter6: int""];\n	""10"" [label=""return""];\n	""11"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.TokenMgrError: void <init>(java.lang.String,int)>($stack8, reason)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.TokenMgrError: char character> = curChar""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.TokenMgrError: int position> = $stack9""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.ParseException.getMessage(),Method,"* This method has the standard behavior when this object has been\n   * created using the standard constructors.  Otherwise, it uses\n   * ""currentToken"" and ""expectedTokenSequences"" to generate a parse\n   * error message and returns it.  If this object has been created\n   * due to a parse error, and you do not catch it (it gets thrown\n   * from the parser), then this method is called during the printing\n   * of the final stack trace, and hence the correct error message\n   * gets displayed.","@Override\npublic String getMessage() {\n    if (!specialConstructor) {\n        return super.getMessage();\n    }\n    String expected = """";\n    int maxSize = 0;\n    for (final int[] element : expectedTokenSequences) {\n        if (maxSize < element.length) {\n            maxSize = element.length;\n        }\n        for (final int element2 : element) {\n            expected += tokenImage[element2] + "" "";\n        }\n        if (element[element.length - 1] != 0) {\n            expected += ""..."";\n        }\n        expected += eol + ""    "";\n    }\n    String retval = ""Encountered \"""";\n    Token tok = currentToken.next;\n    for (int i = 0; i < maxSize; i++) {\n        if (i != 0) {\n            retval += "" "";\n        }\n        if (tok.kind == 0) {\n            retval += tokenImage[0];\n            break;\n        }\n        retval += add_escapes(tok.image);\n        tok = tok.next;\n    }\n    retval += ""\"" at line "" + currentToken.next.beginLine + "", column "" + currentToken.next.beginColumn;\n    retval += ""."" + eol;\n    if (expectedTokenSequences.length == 1) {\n        retval += ""Was expecting:"" + eol + ""    "";\n    } else {\n        retval += ""Was expecting one of:"" + eol + ""    "";\n    }\n    retval += expected;\n    return retval;\n}",java.lang.String getMessage(),"digraph cfg_getMessage {\n	""1"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.ParseException: boolean specialConstructor>""];\n	""2"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.ParseException: org.apache.commons.jxpath.ri.parser.Token currentToken>""];\n	""3"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""5"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.ParseException: org.apache.commons.jxpath.ri.parser.Token currentToken>""];\n	""6"" [label=""$stack16 = $stack15.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""7"" [label=""$stack17 = $stack16.<org.apache.commons.jxpath.ri.parser.Token: int beginLine>""];\n	""8"" [label=""$stack18 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\"" at line \"")""];\n	""9"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17)""];\n	""10"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.ParseException: org.apache.commons.jxpath.ri.parser.Token currentToken>""];\n	""11"" [label=""$stack21 = $stack20.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""12"" [label=""$stack22 = $stack21.<org.apache.commons.jxpath.ri.parser.Token: int beginColumn>""];\n	""13"" [label=""$stack23 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", column \"")""];\n	""14"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack22)""];\n	""15"" [label=""$stack25 = new java.lang.StringBuilder""];\n	""16"" [label=""$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""17"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String eol>""];\n	""18"" [label=""$stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"".\"")""];\n	""19"" [label=""$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27)""];\n	""20"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.parser.ParseException: int[][] expectedTokenSequences>""];\n	""21"" [label=""$stack31 = lengthof $stack30""];\n	""22"" [label=""$stack32 = new java.lang.StringBuilder""];\n	""23"" [label=""$stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""24"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String eol>""];\n	""25"" [label=""$stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Was expecting one of:\"")""];\n	""26"" [label=""$stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34)""];\n	""27"" [label=""$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""    \"")""];\n	""28"" [label=""$stack38 = new java.lang.StringBuilder""];\n	""29"" [label=""$stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""30"" [label=""$stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expected)""];\n	""31"" [label=""$stack41 = new java.lang.StringBuilder""];\n	""32"" [label=""$stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""33"" [label=""$stack43 = this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String eol>""];\n	""34"" [label=""$stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Was expecting:\"")""];\n	""35"" [label=""$stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43)""];\n	""36"" [label=""$stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""    \"")""];\n	""37"" [label=""$stack47 = tok.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""38"" [label=""$stack48 = new java.lang.StringBuilder""];\n	""39"" [label=""$stack49 = tok.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""40"" [label=""$stack50 = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String add_escapes(java.lang.String)>($stack49)""];\n	""41"" [label=""$stack51 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""42"" [label=""$stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack50)""];\n	""43"" [label=""$stack53 = new java.lang.StringBuilder""];\n	""44"" [label=""$stack54 = this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String[] tokenImage>""];\n	""45"" [label=""$stack55 = $stack54[0]""];\n	""46"" [label=""$stack56 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""47"" [label=""$stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55)""];\n	""48"" [label=""$stack58 = new java.lang.StringBuilder""];\n	""49"" [label=""$stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retval)""];\n	""50"" [label=""$stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" \"")""];\n	""51"" [label=""$stack61 = lengthof element""];\n	""52"" [label=""$stack62 = lengthof element""];\n	""53"" [label=""$stack63 = $stack62 - 1""];\n	""54"" [label=""$stack64 = element[$stack63]""];\n	""55"" [label=""$stack65 = new java.lang.StringBuilder""];\n	""56"" [label=""$stack66 = this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String eol>""];\n	""57"" [label=""$stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expected)""];\n	""58"" [label=""$stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66)""];\n	""59"" [label=""$stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""    \"")""];\n	""60"" [label=""$stack70 = new java.lang.StringBuilder""];\n	""61"" [label=""$stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expected)""];\n	""62"" [label=""$stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""...\"")""];\n	""63"" [label=""$stack73 = new java.lang.StringBuilder""];\n	""64"" [label=""$stack74 = this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String[] tokenImage>""];\n	""65"" [label=""$stack75 = $stack74[element2]""];\n	""66"" [label=""$stack76 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expected)""];\n	""67"" [label=""$stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack75)""];\n	""68"" [label=""$stack78 = virtualinvoke $stack77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" \"")""];\n	""69"" [label=""$stack79 = specialinvoke this.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""70"" [label=""element = retval[i]""];\n	""71"" [label=""element2 = l7[l9]""];\n	""72"" [label=""expected = \""\""""];\n	""73"" [label=""expected = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""74"" [label=""expected = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""75"" [label=""expected = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""76"" [label=""goto""];\n	""77"" [label=""goto""];\n	""78"" [label=""goto""];\n	""79"" [label=""goto""];\n	""80"" [label=""goto""];\n	""81"" [label=""i = 0""];\n	""82"" [label=""i = 0""];\n	""83"" [label=""i = i + 1""];\n	""84"" [label=""i = i + 1""];\n	""85"" [label=""if $stack11 != 0""];\n	""86"" [label=""if $stack31 != 1""];\n	""87"" [label=""if $stack47 != 0""];\n	""88"" [label=""if $stack64 == 0""];\n	""89"" [label=""if i == 0""];\n	""90"" [label=""if i >= maxSize""];\n	""91"" [label=""if i >= tok""];\n	""92"" [label=""if l9 >= l8""];\n	""93"" [label=""if maxSize >= $stack61""];\n	""94"" [label=""l7 = element""];\n	""95"" [label=""l8 = lengthof l7""];\n	""96"" [label=""l9 = 0""];\n	""97"" [label=""l9 = l9 + 1""];\n	""98"" [label=""maxSize = 0""];\n	""99"" [label=""maxSize = lengthof element""];\n	""100"" [label=""return $stack79""];\n	""101"" [label=""return retval""];\n	""102"" [label=""retval = \""Encountered \\""\""""];\n	""103"" [label=""retval = this.<org.apache.commons.jxpath.ri.parser.ParseException: int[][] expectedTokenSequences>""];\n	""104"" [label=""retval = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""105"" [label=""retval = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""106"" [label=""retval = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""107"" [label=""retval = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""108"" [label=""retval = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""109"" [label=""retval = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""110"" [label=""retval = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""111"" [label=""retval = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""112"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""113"" [label=""specialinvoke $stack25.<java.lang.StringBuilder: void <init>()>()""];\n	""114"" [label=""specialinvoke $stack32.<java.lang.StringBuilder: void <init>()>()""];\n	""115"" [label=""specialinvoke $stack38.<java.lang.StringBuilder: void <init>()>()""];\n	""116"" [label=""specialinvoke $stack41.<java.lang.StringBuilder: void <init>()>()""];\n	""117"" [label=""specialinvoke $stack48.<java.lang.StringBuilder: void <init>()>()""];\n	""118"" [label=""specialinvoke $stack53.<java.lang.StringBuilder: void <init>()>()""];\n	""119"" [label=""specialinvoke $stack58.<java.lang.StringBuilder: void <init>()>()""];\n	""120"" [label=""specialinvoke $stack65.<java.lang.StringBuilder: void <init>()>()""];\n	""121"" [label=""specialinvoke $stack70.<java.lang.StringBuilder: void <init>()>()""];\n	""122"" [label=""specialinvoke $stack73.<java.lang.StringBuilder: void <init>()>()""];\n	""123"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.ParseException""];\n	""124"" [label=""tok = $stack12.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""125"" [label=""tok = lengthof retval""];\n	""126"" [label=""tok = tok.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""1"" -> ""85""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""102"" -> ""2""[label=""cfg_next""];\n	""103"" -> ""125""[label=""cfg_next""];\n	""104"" -> ""15""[label=""cfg_next""];\n	""105"" -> ""20""[label=""cfg_next""];\n	""106"" -> ""28""[label=""cfg_next""];\n	""107"" -> ""101""[label=""cfg_next""];\n	""108"" -> ""80""[label=""cfg_next""];\n	""109"" -> ""126""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""110"" -> ""78""[label=""cfg_next""];\n	""111"" -> ""37""[label=""cfg_next""];\n	""112"" -> ""4""[label=""cfg_next""];\n	""113"" -> ""16""[label=""cfg_next""];\n	""114"" -> ""23""[label=""cfg_next""];\n	""115"" -> ""29""[label=""cfg_next""];\n	""116"" -> ""32""[label=""cfg_next""];\n	""117"" -> ""41""[label=""cfg_next""];\n	""118"" -> ""46""[label=""cfg_next""];\n	""119"" -> ""49""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""120"" -> ""57""[label=""cfg_next""];\n	""121"" -> ""61""[label=""cfg_next""];\n	""122"" -> ""66""[label=""cfg_next""];\n	""123"" -> ""1""[label=""cfg_next""];\n	""124"" -> ""82""[label=""cfg_next""];\n	""125"" -> ""81""[label=""cfg_next""];\n	""126"" -> ""84""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""104""[label=""cfg_next""];\n	""15"" -> ""113""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""105""[label=""cfg_next""];\n	""2"" -> ""124""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""86""[label=""cfg_next""];\n	""22"" -> ""114""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""106""[label=""cfg_next""];\n	""28"" -> ""115""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""112""[label=""cfg_next""];\n	""30"" -> ""107""[label=""cfg_next""];\n	""31"" -> ""116""[label=""cfg_next""];\n	""32"" -> ""34""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""108""[label=""cfg_next""];\n	""37"" -> ""87""[label=""cfg_next""];\n	""38"" -> ""117""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""40"" -> ""42""[label=""cfg_next""];\n	""41"" -> ""39""[label=""cfg_next""];\n	""42"" -> ""109""[label=""cfg_next""];\n	""43"" -> ""118""[label=""cfg_next""];\n	""44"" -> ""45""[label=""cfg_next""];\n	""45"" -> ""47""[label=""cfg_next""];\n	""46"" -> ""44""[label=""cfg_next""];\n	""47"" -> ""110""[label=""cfg_next""];\n	""48"" -> ""119""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""111""[label=""cfg_next""];\n	""51"" -> ""93""[label=""cfg_next""];\n	""52"" -> ""53""[label=""cfg_next""];\n	""53"" -> ""54""[label=""cfg_next""];\n	""54"" -> ""88""[label=""cfg_next""];\n	""55"" -> ""120""[label=""cfg_next""];\n	""56"" -> ""58""[label=""cfg_next""];\n	""57"" -> ""56""[label=""cfg_next""];\n	""58"" -> ""59""[label=""cfg_next""];\n	""59"" -> ""73""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""121""[label=""cfg_next""];\n	""61"" -> ""62""[label=""cfg_next""];\n	""62"" -> ""74""[label=""cfg_next""];\n	""63"" -> ""122""[label=""cfg_next""];\n	""64"" -> ""65""[label=""cfg_next""];\n	""65"" -> ""67""[label=""cfg_next""];\n	""66"" -> ""64""[label=""cfg_next""];\n	""67"" -> ""68""[label=""cfg_next""];\n	""68"" -> ""75""[label=""cfg_next""];\n	""69"" -> ""100""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""70"" -> ""51""[label=""cfg_next""];\n	""71"" -> ""63""[label=""cfg_next""];\n	""72"" -> ""98""[label=""cfg_next""];\n	""73"" -> ""83""[label=""cfg_next""];\n	""74"" -> ""55""[label=""cfg_next""];\n	""75"" -> ""97""[label=""cfg_next""];\n	""76"" -> ""92""[label=""cfg_goto""];\n	""77"" -> ""91""[label=""cfg_goto""];\n	""78"" -> ""3""[label=""cfg_goto""];\n	""79"" -> ""90""[label=""cfg_goto""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""80"" -> ""28""[label=""cfg_goto""];\n	""81"" -> ""91""[label=""cfg_next""];\n	""82"" -> ""90""[label=""cfg_next""];\n	""83"" -> ""77""[label=""cfg_next""];\n	""84"" -> ""79""[label=""cfg_next""];\n	""85"" -> ""69""[label=""cfg_false""];\n	""85"" -> ""72""[label=""cfg_true""];\n	""86"" -> ""22""[label=""cfg_true""];\n	""86"" -> ""31""[label=""cfg_false""];\n	""87"" -> ""38""[label=""cfg_true""];\n	""87"" -> ""43""[label=""cfg_false""];\n	""88"" -> ""55""[label=""cfg_true""];\n	""88"" -> ""60""[label=""cfg_false""];\n	""89"" -> ""37""[label=""cfg_true""];\n	""89"" -> ""48""[label=""cfg_false""];\n	""9"" -> ""13""[label=""cfg_next""];\n	""90"" -> ""3""[label=""cfg_true""];\n	""90"" -> ""89""[label=""cfg_false""];\n	""91"" -> ""102""[label=""cfg_true""];\n	""91"" -> ""70""[label=""cfg_false""];\n	""92"" -> ""52""[label=""cfg_true""];\n	""92"" -> ""71""[label=""cfg_false""];\n	""93"" -> ""94""[label=""cfg_true""];\n	""93"" -> ""99""[label=""cfg_false""];\n	""94"" -> ""95""[label=""cfg_next""];\n	""95"" -> ""96""[label=""cfg_next""];\n	""96"" -> ""92""[label=""cfg_next""];\n	""97"" -> ""76""[label=""cfg_next""];\n	""98"" -> ""103""[label=""cfg_next""];\n	""99"" -> ""94""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.ParseException.add_escapes(String),Method,* Used to convert raw characters to their escaped version\n   * when these raw version cannot be used as part of an ASCII\n   * string literal.\n   *\n   * @param str raw characters.\n   * @return escaped version of the input.,"protected String add_escapes(final String str) {\n    final StringBuilder retval = new StringBuilder();\n    char ch;\n    for (int i = 0; i < str.length(); i++) {\n        switch(str.charAt(i)) {\n            case 0:\n                continue;\n            case '\b':\n                retval.append(""\\b"");\n                continue;\n            case '\t':\n                retval.append(""\\t"");\n                continue;\n            case '\n':\n                retval.append(""\\n"");\n                continue;\n            case '\f':\n                retval.append(""\\f"");\n                continue;\n            case '\r':\n                retval.append(""\\r"");\n                continue;\n            case '\""':\n                retval.append(""\\\"""");\n                continue;\n            case '\'':\n                retval.append(""\\\'"");\n                continue;\n            case '\\':\n                retval.append(""\\\\"");\n                continue;\n            default:\n                if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\n                    final String s = ""0000"" + Integer.toString(ch, 16);\n                    retval.append(""\\u"" + s.substring(s.length() - 4));\n                } else {\n                    retval.append(ch);\n                }\n                continue;\n        }\n    }\n    return retval.toString();\n}",java.lang.String add_escapes(java.lang.String),"digraph cfg_add_escapes {\n	""1"" [label=""$stack10 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack11 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>(ch, 16)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""0000\"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""5"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack15 = virtualinvoke s.<java.lang.String: int length()>()""];\n	""7"" [label=""$stack16 = $stack15 - 4""];\n	""8"" [label=""$stack17 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>($stack16)""];\n	""9"" [label=""$stack18 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\u\"")""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17)""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""13"" [label=""$stack7 = virtualinvoke str.<java.lang.String: int length()>()""];\n	""14"" [label=""$stack8 = virtualinvoke retval.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""15"" [label=""$stack9 = virtualinvoke str.<java.lang.String: char charAt(int)>(i)""];\n	""16"" [label=""ch = virtualinvoke str.<java.lang.String: char charAt(int)>(i)""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""i = 0""];\n	""29"" [label=""i = i + 1""];\n	""30"" [label=""if ch < 32""];\n	""31"" [label=""if ch <= 126""];\n	""32"" [label=""if i >= $stack7""];\n	""33"" [label=""return $stack8""];\n	""34"" [label=""retval = $stack6""];\n	""35"" [label=""s = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""36"" [label=""specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""38"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""39"" [label=""str := @parameter0: java.lang.String""];\n	""40"" [label=""switch($stack9) \{     case 0:     case 8:     case 9:     case 10:     case 12:     case 13:     case 34:     case 39:     case 92:     default:  \}""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.ParseException""];\n	""42"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(ch)""];\n	""43"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\\\""\"")""];\n	""44"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\\'\"")""];\n	""45"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\\\\"")""];\n	""46"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\b\"")""];\n	""47"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\f\"")""];\n	""48"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\n\"")""];\n	""49"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\r\"")""];\n	""50"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\t\"")""];\n	""51"" [label=""virtualinvoke retval.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20)""];\n	""1"" -> ""36""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""51""[label=""cfg_next""];\n	""12"" -> ""38""[label=""cfg_next""];\n	""13"" -> ""32""[label=""cfg_next""];\n	""14"" -> ""33""[label=""cfg_next""];\n	""15"" -> ""40""[label=""cfg_next""];\n	""16"" -> ""30""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_goto""];\n	""18"" -> ""29""[label=""cfg_goto""];\n	""19"" -> ""29""[label=""cfg_goto""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""29""[label=""cfg_goto""];\n	""21"" -> ""29""[label=""cfg_goto""];\n	""22"" -> ""29""[label=""cfg_goto""];\n	""23"" -> ""29""[label=""cfg_goto""];\n	""24"" -> ""29""[label=""cfg_goto""];\n	""25"" -> ""29""[label=""cfg_goto""];\n	""26"" -> ""29""[label=""cfg_goto""];\n	""27"" -> ""13""[label=""cfg_goto""];\n	""28"" -> ""13""[label=""cfg_next""];\n	""29"" -> ""27""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_true""];\n	""30"" -> ""31""[label=""cfg_false""];\n	""31"" -> ""1""[label=""cfg_false""];\n	""31"" -> ""42""[label=""cfg_true""];\n	""32"" -> ""14""[label=""cfg_true""];\n	""32"" -> ""15""[label=""cfg_false""];\n	""34"" -> ""28""[label=""cfg_next""];\n	""35"" -> ""5""[label=""cfg_next""];\n	""36"" -> ""3""[label=""cfg_next""];\n	""37"" -> ""9""[label=""cfg_next""];\n	""38"" -> ""34""[label=""cfg_next""];\n	""39"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""35""[label=""cfg_next""];\n	""40"" -> ""16""[label=""cfg_switch""];\n	""40"" -> ""17""[label=""cfg_switch""];\n	""40"" -> ""43""[label=""cfg_switch""];\n	""40"" -> ""44""[label=""cfg_switch""];\n	""40"" -> ""45""[label=""cfg_switch""];\n	""40"" -> ""46""[label=""cfg_switch""];\n	""40"" -> ""47""[label=""cfg_switch""];\n	""40"" -> ""48""[label=""cfg_switch""];\n	""40"" -> ""49""[label=""cfg_switch""];\n	""40"" -> ""50""[label=""cfg_switch""];\n	""41"" -> ""39""[label=""cfg_next""];\n	""42"" -> ""29""[label=""cfg_next""];\n	""43"" -> ""23""[label=""cfg_next""];\n	""44"" -> ""24""[label=""cfg_next""];\n	""45"" -> ""25""[label=""cfg_next""];\n	""46"" -> ""18""[label=""cfg_next""];\n	""47"" -> ""21""[label=""cfg_next""];\n	""48"" -> ""20""[label=""cfg_next""];\n	""49"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""37""[label=""cfg_next""];\n	""50"" -> ""19""[label=""cfg_next""];\n	""51"" -> ""26""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.parser.ParseException.<init>(Token,int[][],String[])",Constructor,"* This constructor is used by the method ""generateParseException"" in the generated parser. Calling this constructor generates a new object of this type\n     * with the fields ""currentToken"", ""expectedTokenSequences"", and ""tokenImage"" set. The boolean flag ""specialConstructor"" is also set to true to indicate\n     * that this constructor was used to create this object. This constructor calls its super class with the empty string to force the ""toString"" method of\n     * parent class ""Throwable"" to print the error message in the form: ParseException: ""result of getMessage""\n     *\n     * @param currentTokenVal TODO\n     * @param expectedTokenSequencesVal TODO\n     * @param tokenImageVal TODO","public ParseException(final Token currentTokenVal, final int[][] expectedTokenSequencesVal, final String[] tokenImageVal) {\n    super("""");\n    specialConstructor = true;\n    currentToken = currentTokenVal;\n    expectedTokenSequences = expectedTokenSequencesVal;\n    tokenImage = tokenImageVal;\n}","void <init>(org.apache.commons.jxpath.ri.parser.Token,int[][],java.lang.String[])","digraph cfg_init {\n	""1"" [label=""$stack4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\""line.separator\"", \""\n\"")""];\n	""2"" [label=""currentTokenVal := @parameter0: org.apache.commons.jxpath.ri.parser.Token""];\n	""3"" [label=""expectedTokenSequencesVal := @parameter1: int[][]""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(\""\"")""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.ParseException""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: boolean specialConstructor> = 1""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: int[][] expectedTokenSequences> = expectedTokenSequencesVal""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String eol> = $stack4""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String[] tokenImage> = tokenImageVal""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: org.apache.commons.jxpath.ri.parser.Token currentToken> = currentTokenVal""];\n	""12"" [label=""tokenImageVal := @parameter2: java.lang.String[]""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.ParseException.<init>(),Constructor,No Comment,public ParseException() {\n    specialConstructor = false;\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""$stack1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\""line.separator\"", \""\n\"")""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Exception: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.ParseException""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: boolean specialConstructor> = 0""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String eol> = $stack1""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.ParseException.<init>(String),Constructor,No Comment,public ParseException(final String message) {\n    super(message);\n    specialConstructor = false;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""$stack2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\""line.separator\"", \""\n\"")""];\n	""2"" [label=""message := @parameter0: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.ParseException""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: boolean specialConstructor> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.parser.ParseException: java.lang.String eol> = $stack2""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.setCompiler(Compiler),Method,No Comment,public void setCompiler(final Compiler compiler) {\n    this.compiler = compiler;\n},void setCompiler(org.apache.commons.jxpath.ri.Compiler),"digraph cfg_setCompiler {\n	""1"" [label=""compiler := @parameter0: org.apache.commons.jxpath.ri.Compiler""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler> = compiler""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.unescape(String),Method,No Comment,"private String unescape(String string) {\n    int index = string.indexOf(""&apos;"");\n    while (index != -1) {\n        string = string.substring(0, index) + ""\'"" + string.substring(index + 6);\n        index = string.indexOf(""&apos;"");\n    }\n    index = string.indexOf(""&quot;"");\n    while (index != -1) {\n        string = string.substring(0, index) + ""\"""" + string.substring(index + 6);\n        index = string.indexOf(""&quot;"");\n    }\n    return string;\n}",java.lang.String unescape(java.lang.String),"digraph cfg_unescape {\n	""1"" [label=""$stack10 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack11 = virtualinvoke string.<java.lang.String: java.lang.String substring(int,int)>(0, index)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""4"" [label=""$stack13 = index + 6""];\n	""5"" [label=""$stack14 = virtualinvoke string.<java.lang.String: java.lang.String substring(int)>($stack13)""];\n	""6"" [label=""$stack15 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)""];\n	""8"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack4 = virtualinvoke string.<java.lang.String: java.lang.String substring(int,int)>(0, index)""];\n	""10"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""11"" [label=""$stack6 = index + 6""];\n	""12"" [label=""$stack7 = virtualinvoke string.<java.lang.String: java.lang.String substring(int)>($stack6)""];\n	""13"" [label=""$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\\""\"")""];\n	""14"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""if index == -1""];\n	""18"" [label=""if index == -1""];\n	""19"" [label=""index = virtualinvoke string.<java.lang.String: int indexOf(java.lang.String)>(\""&apos;\"")""];\n	""20"" [label=""index = virtualinvoke string.<java.lang.String: int indexOf(java.lang.String)>(\""&apos;\"")""];\n	""21"" [label=""index = virtualinvoke string.<java.lang.String: int indexOf(java.lang.String)>(\""&quot;\"")""];\n	""22"" [label=""index = virtualinvoke string.<java.lang.String: int indexOf(java.lang.String)>(\""&quot;\"")""];\n	""23"" [label=""return string""];\n	""24"" [label=""specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""26"" [label=""string := @parameter0: java.lang.String""];\n	""27"" [label=""string = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""28"" [label=""string = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""28""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_goto""];\n	""16"" -> ""18""[label=""cfg_goto""];\n	""17"" -> ""1""[label=""cfg_false""];\n	""17"" -> ""21""[label=""cfg_true""];\n	""18"" -> ""23""[label=""cfg_true""];\n	""18"" -> ""8""[label=""cfg_false""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""16""[label=""cfg_next""];\n	""24"" -> ""2""[label=""cfg_next""];\n	""25"" -> ""9""[label=""cfg_next""];\n	""26"" -> ""19""[label=""cfg_next""];\n	""27"" -> ""20""[label=""cfg_next""];\n	""28"" -> ""22""[label=""cfg_next""];\n	""29"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.NCName(),Method,"Note: XPath does not have reserved words, so we have to include all these terminals","final public String NCName() throws ParseException {\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NCName:\n            NCName_Without_CoreFunctions();\n            break;\n        case NODE:\n            jj_consume_token(NODE);\n            break;\n        case TEXT:\n            jj_consume_token(TEXT);\n            break;\n        case COMMENT:\n            jj_consume_token(COMMENT);\n            break;\n        case PI:\n            jj_consume_token(PI);\n            break;\n        case FUNCTION_LAST:\n            jj_consume_token(FUNCTION_LAST);\n            break;\n        case FUNCTION_POSITION:\n            jj_consume_token(FUNCTION_POSITION);\n            break;\n        case FUNCTION_COUNT:\n            jj_consume_token(FUNCTION_COUNT);\n            break;\n        case FUNCTION_ID:\n            jj_consume_token(FUNCTION_ID);\n            break;\n        case FUNCTION_LOCAL_NAME:\n            jj_consume_token(FUNCTION_LOCAL_NAME);\n            break;\n        case FUNCTION_NAMESPACE_URI:\n            jj_consume_token(FUNCTION_NAMESPACE_URI);\n            break;\n        case FUNCTION_NAME:\n            jj_consume_token(FUNCTION_NAME);\n            break;\n        case FUNCTION_STRING:\n            jj_consume_token(FUNCTION_STRING);\n            break;\n        case FUNCTION_CONCAT:\n            jj_consume_token(FUNCTION_CONCAT);\n            break;\n        case FUNCTION_STARTS_WITH:\n            jj_consume_token(FUNCTION_STARTS_WITH);\n            break;\n        case FUNCTION_ENDS_WITH:\n            jj_consume_token(FUNCTION_ENDS_WITH);\n            break;\n        case FUNCTION_CONTAINS:\n            jj_consume_token(FUNCTION_CONTAINS);\n            break;\n        case FUNCTION_SUBSTRING_BEFORE:\n            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n            break;\n        case FUNCTION_SUBSTRING_AFTER:\n            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n            break;\n        case FUNCTION_SUBSTRING:\n            jj_consume_token(FUNCTION_SUBSTRING);\n            break;\n        case FUNCTION_STRING_LENGTH:\n            jj_consume_token(FUNCTION_STRING_LENGTH);\n            break;\n        case FUNCTION_NORMALIZE_SPACE:\n            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n            break;\n        case FUNCTION_TRANSLATE:\n            jj_consume_token(FUNCTION_TRANSLATE);\n            break;\n        case FUNCTION_BOOLEAN:\n            jj_consume_token(FUNCTION_BOOLEAN);\n            break;\n        case FUNCTION_NOT:\n            jj_consume_token(FUNCTION_NOT);\n            break;\n        case FUNCTION_TRUE:\n            jj_consume_token(FUNCTION_TRUE);\n            break;\n        case FUNCTION_FALSE:\n            jj_consume_token(FUNCTION_FALSE);\n            break;\n        case FUNCTION_NULL:\n            jj_consume_token(FUNCTION_NULL);\n            break;\n        case FUNCTION_LANG:\n            jj_consume_token(FUNCTION_LANG);\n            break;\n        case FUNCTION_NUMBER:\n            jj_consume_token(FUNCTION_NUMBER);\n            break;\n        case FUNCTION_SUM:\n            jj_consume_token(FUNCTION_SUM);\n            break;\n        case FUNCTION_FLOOR:\n            jj_consume_token(FUNCTION_FLOOR);\n            break;\n        case FUNCTION_CEILING:\n            jj_consume_token(FUNCTION_CEILING);\n            break;\n        case FUNCTION_ROUND:\n            jj_consume_token(FUNCTION_ROUND);\n            break;\n        case FUNCTION_KEY:\n            jj_consume_token(FUNCTION_KEY);\n            break;\n        case FUNCTION_FORMAT_NUMBER:\n            jj_consume_token(FUNCTION_FORMAT_NUMBER);\n            break;\n        default:\n            jj_la1[0] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true) {\n            return token.image;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.String NCName(),"digraph cfg_NCName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack2 = $stack1.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""4"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack5[0] = $stack6""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack7 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""goto""];\n	""39"" [label=""goto""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""goto""];\n	""44"" [label=""goto""];\n	""45"" [label=""return $stack4""];\n	""46"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""47"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""48"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(31)""];\n	""49"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(32)""];\n	""50"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(33)""];\n	""51"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(34)""];\n	""52"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(48)""];\n	""53"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(49)""];\n	""54"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(50)""];\n	""55"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(51)""];\n	""56"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(52)""];\n	""57"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(53)""];\n	""58"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(54)""];\n	""59"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(55)""];\n	""60"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(56)""];\n	""61"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(57)""];\n	""62"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(58)""];\n	""63"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(59)""];\n	""64"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(60)""];\n	""65"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(61)""];\n	""66"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(62)""];\n	""67"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(63)""];\n	""68"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(64)""];\n	""69"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(65)""];\n	""70"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(66)""];\n	""71"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(67)""];\n	""72"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(68)""];\n	""73"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(69)""];\n	""74"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(70)""];\n	""75"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(71)""];\n	""76"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(72)""];\n	""77"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(73)""];\n	""78"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(74)""];\n	""79"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(75)""];\n	""80"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(76)""];\n	""81"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(77)""];\n	""82"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(78)""];\n	""83"" [label=""switch($stack2) \{     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     default:  \}""];\n	""84"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""85"" [label=""throw $stack7""];\n	""86"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName_Without_CoreFunctions()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_goto""];\n	""11"" -> ""3""[label=""cfg_goto""];\n	""12"" -> ""3""[label=""cfg_goto""];\n	""13"" -> ""3""[label=""cfg_goto""];\n	""14"" -> ""3""[label=""cfg_goto""];\n	""15"" -> ""3""[label=""cfg_goto""];\n	""16"" -> ""3""[label=""cfg_goto""];\n	""17"" -> ""3""[label=""cfg_goto""];\n	""18"" -> ""3""[label=""cfg_goto""];\n	""19"" -> ""3""[label=""cfg_goto""];\n	""2"" -> ""83""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_goto""];\n	""21"" -> ""3""[label=""cfg_goto""];\n	""22"" -> ""3""[label=""cfg_goto""];\n	""23"" -> ""3""[label=""cfg_goto""];\n	""24"" -> ""3""[label=""cfg_goto""];\n	""25"" -> ""3""[label=""cfg_goto""];\n	""26"" -> ""3""[label=""cfg_goto""];\n	""27"" -> ""3""[label=""cfg_goto""];\n	""28"" -> ""3""[label=""cfg_goto""];\n	""29"" -> ""3""[label=""cfg_goto""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""3""[label=""cfg_goto""];\n	""31"" -> ""3""[label=""cfg_goto""];\n	""32"" -> ""3""[label=""cfg_goto""];\n	""33"" -> ""3""[label=""cfg_goto""];\n	""34"" -> ""3""[label=""cfg_goto""];\n	""35"" -> ""3""[label=""cfg_goto""];\n	""36"" -> ""3""[label=""cfg_goto""];\n	""37"" -> ""3""[label=""cfg_goto""];\n	""38"" -> ""3""[label=""cfg_goto""];\n	""39"" -> ""3""[label=""cfg_goto""];\n	""4"" -> ""45""[label=""cfg_next""];\n	""40"" -> ""3""[label=""cfg_goto""];\n	""41"" -> ""3""[label=""cfg_goto""];\n	""42"" -> ""3""[label=""cfg_goto""];\n	""43"" -> ""3""[label=""cfg_goto""];\n	""44"" -> ""3""[label=""cfg_goto""];\n	""46"" -> ""85""[label=""cfg_next""];\n	""47"" -> ""8""[label=""cfg_next""];\n	""48"" -> ""9""[label=""cfg_next""];\n	""49"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""50"" -> ""11""[label=""cfg_next""];\n	""51"" -> ""12""[label=""cfg_next""];\n	""52"" -> ""13""[label=""cfg_next""];\n	""53"" -> ""14""[label=""cfg_next""];\n	""54"" -> ""15""[label=""cfg_next""];\n	""55"" -> ""16""[label=""cfg_next""];\n	""56"" -> ""17""[label=""cfg_next""];\n	""57"" -> ""18""[label=""cfg_next""];\n	""58"" -> ""19""[label=""cfg_next""];\n	""59"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""47""[label=""cfg_next""];\n	""60"" -> ""21""[label=""cfg_next""];\n	""61"" -> ""22""[label=""cfg_next""];\n	""62"" -> ""23""[label=""cfg_next""];\n	""63"" -> ""24""[label=""cfg_next""];\n	""64"" -> ""25""[label=""cfg_next""];\n	""65"" -> ""26""[label=""cfg_next""];\n	""66"" -> ""27""[label=""cfg_next""];\n	""67"" -> ""28""[label=""cfg_next""];\n	""68"" -> ""29""[label=""cfg_next""];\n	""69"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""70"" -> ""31""[label=""cfg_next""];\n	""71"" -> ""32""[label=""cfg_next""];\n	""72"" -> ""33""[label=""cfg_next""];\n	""73"" -> ""34""[label=""cfg_next""];\n	""74"" -> ""35""[label=""cfg_next""];\n	""75"" -> ""36""[label=""cfg_next""];\n	""76"" -> ""37""[label=""cfg_next""];\n	""77"" -> ""38""[label=""cfg_next""];\n	""78"" -> ""39""[label=""cfg_next""];\n	""79"" -> ""40""[label=""cfg_next""];\n	""8"" -> ""46""[label=""cfg_next""];\n	""80"" -> ""41""[label=""cfg_next""];\n	""81"" -> ""42""[label=""cfg_next""];\n	""82"" -> ""43""[label=""cfg_next""];\n	""83"" -> ""48""[label=""cfg_switch""];\n	""83"" -> ""49""[label=""cfg_switch""];\n	""83"" -> ""5""[label=""cfg_switch""];\n	""83"" -> ""50""[label=""cfg_switch""];\n	""83"" -> ""51""[label=""cfg_switch""];\n	""83"" -> ""52""[label=""cfg_switch""];\n	""83"" -> ""53""[label=""cfg_switch""];\n	""83"" -> ""54""[label=""cfg_switch""];\n	""83"" -> ""55""[label=""cfg_switch""];\n	""83"" -> ""56""[label=""cfg_switch""];\n	""83"" -> ""57""[label=""cfg_switch""];\n	""83"" -> ""58""[label=""cfg_switch""];\n	""83"" -> ""59""[label=""cfg_switch""];\n	""83"" -> ""60""[label=""cfg_switch""];\n	""83"" -> ""61""[label=""cfg_switch""];\n	""83"" -> ""62""[label=""cfg_switch""];\n	""83"" -> ""63""[label=""cfg_switch""];\n	""83"" -> ""64""[label=""cfg_switch""];\n	""83"" -> ""65""[label=""cfg_switch""];\n	""83"" -> ""66""[label=""cfg_switch""];\n	""83"" -> ""67""[label=""cfg_switch""];\n	""83"" -> ""68""[label=""cfg_switch""];\n	""83"" -> ""69""[label=""cfg_switch""];\n	""83"" -> ""70""[label=""cfg_switch""];\n	""83"" -> ""71""[label=""cfg_switch""];\n	""83"" -> ""72""[label=""cfg_switch""];\n	""83"" -> ""73""[label=""cfg_switch""];\n	""83"" -> ""74""[label=""cfg_switch""];\n	""83"" -> ""75""[label=""cfg_switch""];\n	""83"" -> ""76""[label=""cfg_switch""];\n	""83"" -> ""77""[label=""cfg_switch""];\n	""83"" -> ""78""[label=""cfg_switch""];\n	""83"" -> ""79""[label=""cfg_switch""];\n	""83"" -> ""80""[label=""cfg_switch""];\n	""83"" -> ""81""[label=""cfg_switch""];\n	""83"" -> ""82""[label=""cfg_switch""];\n	""83"" -> ""86""[label=""cfg_switch""];\n	""84"" -> ""1""[label=""cfg_next""];\n	""86"" -> ""44""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_goto""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.NCName_Without_CoreFunctions(),Method,No Comment,"final public String NCName_Without_CoreFunctions() throws ParseException {\n    switch(jj_nt.kind) {\n        case NCName:\n            jj_consume_token(NCName);\n            break;\n        case OR:\n            jj_consume_token(OR);\n            break;\n        case AND:\n            jj_consume_token(AND);\n            break;\n        case MOD:\n            jj_consume_token(MOD);\n            break;\n        case DIV:\n            jj_consume_token(DIV);\n            break;\n        default:\n            jj_la1[1] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true) {\n            return token.image;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.String NCName_Without_CoreFunctions(),"digraph cfg_NCName_Without_CoreFunctions {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack2 = $stack1.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""4"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack5[1] = $stack6""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack7 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""return $stack4""];\n	""15"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""17"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(27)""];\n	""18"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(28)""];\n	""19"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(29)""];\n	""20"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(30)""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(79)""];\n	""22"" [label=""switch($stack2) \{     case 27:     case 28:     case 29:     case 30:     case 79:     default:  \}""];\n	""23"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""24"" [label=""throw $stack7""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_goto""];\n	""11"" -> ""3""[label=""cfg_goto""];\n	""12"" -> ""3""[label=""cfg_goto""];\n	""13"" -> ""3""[label=""cfg_goto""];\n	""15"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""8""[label=""cfg_next""];\n	""17"" -> ""9""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_next""];\n	""19"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_switch""];\n	""22"" -> ""18""[label=""cfg_switch""];\n	""22"" -> ""19""[label=""cfg_switch""];\n	""22"" -> ""20""[label=""cfg_switch""];\n	""22"" -> ""21""[label=""cfg_switch""];\n	""22"" -> ""5""[label=""cfg_switch""];\n	""23"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_goto""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.CoreFunctionName(),Method,No Comment,"final public int CoreFunctionName() throws ParseException {\n    int code;\n    switch(jj_nt.kind) {\n        case FUNCTION_LAST:\n            jj_consume_token(FUNCTION_LAST);\n            code = Compiler.FUNCTION_LAST;\n            break;\n        case FUNCTION_POSITION:\n            jj_consume_token(FUNCTION_POSITION);\n            code = Compiler.FUNCTION_POSITION;\n            break;\n        case FUNCTION_COUNT:\n            jj_consume_token(FUNCTION_COUNT);\n            code = Compiler.FUNCTION_COUNT;\n            break;\n        case FUNCTION_ID:\n            jj_consume_token(FUNCTION_ID);\n            code = Compiler.FUNCTION_ID;\n            break;\n        case FUNCTION_LOCAL_NAME:\n            jj_consume_token(FUNCTION_LOCAL_NAME);\n            code = Compiler.FUNCTION_LOCAL_NAME;\n            break;\n        case FUNCTION_NAMESPACE_URI:\n            jj_consume_token(FUNCTION_NAMESPACE_URI);\n            code = Compiler.FUNCTION_NAMESPACE_URI;\n            break;\n        case FUNCTION_NAME:\n            jj_consume_token(FUNCTION_NAME);\n            code = Compiler.FUNCTION_NAME;\n            break;\n        case FUNCTION_STRING:\n            jj_consume_token(FUNCTION_STRING);\n            code = Compiler.FUNCTION_STRING;\n            break;\n        case FUNCTION_CONCAT:\n            jj_consume_token(FUNCTION_CONCAT);\n            code = Compiler.FUNCTION_CONCAT;\n            break;\n        case FUNCTION_STARTS_WITH:\n            jj_consume_token(FUNCTION_STARTS_WITH);\n            code = Compiler.FUNCTION_STARTS_WITH;\n            break;\n        case FUNCTION_ENDS_WITH:\n            jj_consume_token(FUNCTION_ENDS_WITH);\n            code = Compiler.FUNCTION_ENDS_WITH;\n            break;\n        case FUNCTION_CONTAINS:\n            jj_consume_token(FUNCTION_CONTAINS);\n            code = Compiler.FUNCTION_CONTAINS;\n            break;\n        case FUNCTION_SUBSTRING_BEFORE:\n            jj_consume_token(FUNCTION_SUBSTRING_BEFORE);\n            code = Compiler.FUNCTION_SUBSTRING_BEFORE;\n            break;\n        case FUNCTION_SUBSTRING_AFTER:\n            jj_consume_token(FUNCTION_SUBSTRING_AFTER);\n            code = Compiler.FUNCTION_SUBSTRING_AFTER;\n            break;\n        case FUNCTION_SUBSTRING:\n            jj_consume_token(FUNCTION_SUBSTRING);\n            code = Compiler.FUNCTION_SUBSTRING;\n            break;\n        case FUNCTION_STRING_LENGTH:\n            jj_consume_token(FUNCTION_STRING_LENGTH);\n            code = Compiler.FUNCTION_STRING_LENGTH;\n            break;\n        case FUNCTION_NORMALIZE_SPACE:\n            jj_consume_token(FUNCTION_NORMALIZE_SPACE);\n            code = Compiler.FUNCTION_NORMALIZE_SPACE;\n            break;\n        case FUNCTION_TRANSLATE:\n            jj_consume_token(FUNCTION_TRANSLATE);\n            code = Compiler.FUNCTION_TRANSLATE;\n            break;\n        case FUNCTION_BOOLEAN:\n            jj_consume_token(FUNCTION_BOOLEAN);\n            code = Compiler.FUNCTION_BOOLEAN;\n            break;\n        case FUNCTION_NOT:\n            jj_consume_token(FUNCTION_NOT);\n            code = Compiler.FUNCTION_NOT;\n            break;\n        case FUNCTION_TRUE:\n            jj_consume_token(FUNCTION_TRUE);\n            code = Compiler.FUNCTION_TRUE;\n            break;\n        case FUNCTION_FALSE:\n            jj_consume_token(FUNCTION_FALSE);\n            code = Compiler.FUNCTION_FALSE;\n            break;\n        case FUNCTION_NULL:\n            jj_consume_token(FUNCTION_NULL);\n            code = Compiler.FUNCTION_NULL;\n            break;\n        case FUNCTION_LANG:\n            jj_consume_token(FUNCTION_LANG);\n            code = Compiler.FUNCTION_LANG;\n            break;\n        case FUNCTION_NUMBER:\n            jj_consume_token(FUNCTION_NUMBER);\n            code = Compiler.FUNCTION_NUMBER;\n            break;\n        case FUNCTION_SUM:\n            jj_consume_token(FUNCTION_SUM);\n            code = Compiler.FUNCTION_SUM;\n            break;\n        case FUNCTION_FLOOR:\n            jj_consume_token(FUNCTION_FLOOR);\n            code = Compiler.FUNCTION_FLOOR;\n            break;\n        case FUNCTION_CEILING:\n            jj_consume_token(FUNCTION_CEILING);\n            code = Compiler.FUNCTION_CEILING;\n            break;\n        case FUNCTION_ROUND:\n            jj_consume_token(FUNCTION_ROUND);\n            code = Compiler.FUNCTION_ROUND;\n            break;\n        case FUNCTION_KEY:\n            jj_consume_token(FUNCTION_KEY);\n            code = Compiler.FUNCTION_KEY;\n            break;\n        case FUNCTION_FORMAT_NUMBER:\n            jj_consume_token(FUNCTION_FORMAT_NUMBER);\n            code = Compiler.FUNCTION_FORMAT_NUMBER;\n            break;\n        default:\n            jj_la1[2] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true) {\n            return code;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",int CoreFunctionName(),"digraph cfg_CoreFunctionName {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack4[2] = $stack5""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""6"" [label=""$stack6 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""7"" [label=""code = 1""];\n	""8"" [label=""code = 10""];\n	""9"" [label=""code = 11""];\n	""10"" [label=""code = 12""];\n	""11"" [label=""code = 13""];\n	""12"" [label=""code = 14""];\n	""13"" [label=""code = 15""];\n	""14"" [label=""code = 16""];\n	""15"" [label=""code = 17""];\n	""16"" [label=""code = 18""];\n	""17"" [label=""code = 19""];\n	""18"" [label=""code = 2""];\n	""19"" [label=""code = 20""];\n	""20"" [label=""code = 21""];\n	""21"" [label=""code = 22""];\n	""22"" [label=""code = 23""];\n	""23"" [label=""code = 24""];\n	""24"" [label=""code = 25""];\n	""25"" [label=""code = 26""];\n	""26"" [label=""code = 27""];\n	""27"" [label=""code = 28""];\n	""28"" [label=""code = 29""];\n	""29"" [label=""code = 3""];\n	""30"" [label=""code = 30""];\n	""31"" [label=""code = 31""];\n	""32"" [label=""code = 4""];\n	""33"" [label=""code = 5""];\n	""34"" [label=""code = 6""];\n	""35"" [label=""code = 7""];\n	""36"" [label=""code = 8""];\n	""37"" [label=""code = 9""];\n	""38"" [label=""goto""];\n	""39"" [label=""goto""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""goto""];\n	""44"" [label=""goto""];\n	""45"" [label=""goto""];\n	""46"" [label=""goto""];\n	""47"" [label=""goto""];\n	""48"" [label=""goto""];\n	""49"" [label=""goto""];\n	""50"" [label=""goto""];\n	""51"" [label=""goto""];\n	""52"" [label=""goto""];\n	""53"" [label=""goto""];\n	""54"" [label=""goto""];\n	""55"" [label=""goto""];\n	""56"" [label=""goto""];\n	""57"" [label=""goto""];\n	""58"" [label=""goto""];\n	""59"" [label=""goto""];\n	""60"" [label=""goto""];\n	""61"" [label=""goto""];\n	""62"" [label=""goto""];\n	""63"" [label=""goto""];\n	""64"" [label=""goto""];\n	""65"" [label=""goto""];\n	""66"" [label=""goto""];\n	""67"" [label=""goto""];\n	""68"" [label=""goto""];\n	""69"" [label=""return code""];\n	""70"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""71"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""72"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(48)""];\n	""73"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(49)""];\n	""74"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(50)""];\n	""75"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(51)""];\n	""76"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(52)""];\n	""77"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(53)""];\n	""78"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(54)""];\n	""79"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(55)""];\n	""80"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(56)""];\n	""81"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(57)""];\n	""82"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(58)""];\n	""83"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(59)""];\n	""84"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(60)""];\n	""85"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(61)""];\n	""86"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(62)""];\n	""87"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(63)""];\n	""88"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(64)""];\n	""89"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(65)""];\n	""90"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(66)""];\n	""91"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(67)""];\n	""92"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(68)""];\n	""93"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(69)""];\n	""94"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(70)""];\n	""95"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(71)""];\n	""96"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(72)""];\n	""97"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(73)""];\n	""98"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(74)""];\n	""99"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(75)""];\n	""100"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(76)""];\n	""101"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(77)""];\n	""102"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(78)""];\n	""103"" [label=""switch($stack3) \{     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     default:  \}""];\n	""104"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""105"" [label=""throw $stack6""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""51""[label=""cfg_next""];\n	""100"" -> ""25""[label=""cfg_next""];\n	""101"" -> ""26""[label=""cfg_next""];\n	""102"" -> ""30""[label=""cfg_next""];\n	""103"" -> ""100""[label=""cfg_switch""];\n	""103"" -> ""101""[label=""cfg_switch""];\n	""103"" -> ""102""[label=""cfg_switch""];\n	""103"" -> ""3""[label=""cfg_switch""];\n	""103"" -> ""72""[label=""cfg_switch""];\n	""103"" -> ""73""[label=""cfg_switch""];\n	""103"" -> ""74""[label=""cfg_switch""];\n	""103"" -> ""75""[label=""cfg_switch""];\n	""103"" -> ""76""[label=""cfg_switch""];\n	""103"" -> ""77""[label=""cfg_switch""];\n	""103"" -> ""78""[label=""cfg_switch""];\n	""103"" -> ""79""[label=""cfg_switch""];\n	""103"" -> ""80""[label=""cfg_switch""];\n	""103"" -> ""81""[label=""cfg_switch""];\n	""103"" -> ""82""[label=""cfg_switch""];\n	""103"" -> ""83""[label=""cfg_switch""];\n	""103"" -> ""84""[label=""cfg_switch""];\n	""103"" -> ""85""[label=""cfg_switch""];\n	""103"" -> ""86""[label=""cfg_switch""];\n	""103"" -> ""87""[label=""cfg_switch""];\n	""103"" -> ""88""[label=""cfg_switch""];\n	""103"" -> ""89""[label=""cfg_switch""];\n	""103"" -> ""90""[label=""cfg_switch""];\n	""103"" -> ""91""[label=""cfg_switch""];\n	""103"" -> ""92""[label=""cfg_switch""];\n	""103"" -> ""93""[label=""cfg_switch""];\n	""103"" -> ""94""[label=""cfg_switch""];\n	""103"" -> ""95""[label=""cfg_switch""];\n	""103"" -> ""96""[label=""cfg_switch""];\n	""103"" -> ""97""[label=""cfg_switch""];\n	""103"" -> ""98""[label=""cfg_switch""];\n	""103"" -> ""99""[label=""cfg_switch""];\n	""104"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""52""[label=""cfg_next""];\n	""12"" -> ""53""[label=""cfg_next""];\n	""13"" -> ""54""[label=""cfg_next""];\n	""14"" -> ""55""[label=""cfg_next""];\n	""15"" -> ""56""[label=""cfg_next""];\n	""16"" -> ""57""[label=""cfg_next""];\n	""17"" -> ""58""[label=""cfg_next""];\n	""18"" -> ""39""[label=""cfg_next""];\n	""19"" -> ""59""[label=""cfg_next""];\n	""2"" -> ""103""[label=""cfg_next""];\n	""20"" -> ""60""[label=""cfg_next""];\n	""21"" -> ""62""[label=""cfg_next""];\n	""22"" -> ""63""[label=""cfg_next""];\n	""23"" -> ""64""[label=""cfg_next""];\n	""24"" -> ""65""[label=""cfg_next""];\n	""25"" -> ""66""[label=""cfg_next""];\n	""26"" -> ""67""[label=""cfg_next""];\n	""27"" -> ""61""[label=""cfg_next""];\n	""28"" -> ""42""[label=""cfg_next""];\n	""29"" -> ""40""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""68""[label=""cfg_next""];\n	""31"" -> ""49""[label=""cfg_next""];\n	""32"" -> ""41""[label=""cfg_next""];\n	""33"" -> ""43""[label=""cfg_next""];\n	""34"" -> ""44""[label=""cfg_next""];\n	""35"" -> ""45""[label=""cfg_next""];\n	""36"" -> ""46""[label=""cfg_next""];\n	""37"" -> ""47""[label=""cfg_next""];\n	""38"" -> ""69""[label=""cfg_goto""];\n	""39"" -> ""69""[label=""cfg_goto""];\n	""4"" -> ""71""[label=""cfg_next""];\n	""40"" -> ""69""[label=""cfg_goto""];\n	""41"" -> ""69""[label=""cfg_goto""];\n	""42"" -> ""69""[label=""cfg_goto""];\n	""43"" -> ""69""[label=""cfg_goto""];\n	""44"" -> ""69""[label=""cfg_goto""];\n	""45"" -> ""69""[label=""cfg_goto""];\n	""46"" -> ""69""[label=""cfg_goto""];\n	""47"" -> ""69""[label=""cfg_goto""];\n	""48"" -> ""69""[label=""cfg_goto""];\n	""49"" -> ""69""[label=""cfg_goto""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""50"" -> ""69""[label=""cfg_goto""];\n	""51"" -> ""69""[label=""cfg_goto""];\n	""52"" -> ""69""[label=""cfg_goto""];\n	""53"" -> ""69""[label=""cfg_goto""];\n	""54"" -> ""69""[label=""cfg_goto""];\n	""55"" -> ""69""[label=""cfg_goto""];\n	""56"" -> ""69""[label=""cfg_goto""];\n	""57"" -> ""69""[label=""cfg_goto""];\n	""58"" -> ""69""[label=""cfg_goto""];\n	""59"" -> ""69""[label=""cfg_goto""];\n	""6"" -> ""70""[label=""cfg_next""];\n	""60"" -> ""69""[label=""cfg_goto""];\n	""61"" -> ""69""[label=""cfg_goto""];\n	""62"" -> ""69""[label=""cfg_goto""];\n	""63"" -> ""69""[label=""cfg_goto""];\n	""64"" -> ""69""[label=""cfg_goto""];\n	""65"" -> ""69""[label=""cfg_goto""];\n	""66"" -> ""69""[label=""cfg_goto""];\n	""67"" -> ""69""[label=""cfg_goto""];\n	""68"" -> ""69""[label=""cfg_goto""];\n	""7"" -> ""38""[label=""cfg_next""];\n	""70"" -> ""105""[label=""cfg_next""];\n	""71"" -> ""6""[label=""cfg_next""];\n	""72"" -> ""7""[label=""cfg_next""];\n	""73"" -> ""18""[label=""cfg_next""];\n	""74"" -> ""29""[label=""cfg_next""];\n	""75"" -> ""32""[label=""cfg_next""];\n	""76"" -> ""28""[label=""cfg_next""];\n	""77"" -> ""33""[label=""cfg_next""];\n	""78"" -> ""34""[label=""cfg_next""];\n	""79"" -> ""35""[label=""cfg_next""];\n	""8"" -> ""48""[label=""cfg_next""];\n	""80"" -> ""36""[label=""cfg_next""];\n	""81"" -> ""37""[label=""cfg_next""];\n	""82"" -> ""8""[label=""cfg_next""];\n	""83"" -> ""31""[label=""cfg_next""];\n	""84"" -> ""9""[label=""cfg_next""];\n	""85"" -> ""10""[label=""cfg_next""];\n	""86"" -> ""11""[label=""cfg_next""];\n	""87"" -> ""12""[label=""cfg_next""];\n	""88"" -> ""13""[label=""cfg_next""];\n	""89"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""50""[label=""cfg_next""];\n	""90"" -> ""15""[label=""cfg_next""];\n	""91"" -> ""16""[label=""cfg_next""];\n	""92"" -> ""17""[label=""cfg_next""];\n	""93"" -> ""19""[label=""cfg_next""];\n	""94"" -> ""20""[label=""cfg_next""];\n	""95"" -> ""27""[label=""cfg_next""];\n	""96"" -> ""21""[label=""cfg_next""];\n	""97"" -> ""22""[label=""cfg_next""];\n	""98"" -> ""23""[label=""cfg_next""];\n	""99"" -> ""24""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.QName(),Method,No Comment,"final public Object QName() throws ParseException {\n    String nc1, nc2 = null;\n    nc1 = NCName();\n    switch(jj_nt.kind) {\n        case 80:\n            jj_consume_token(80);\n            nc2 = NCName();\n            break;\n        default:\n            jj_la1[3] = jj_gen;\n            ;\n    }\n    if (nc2 == null) {\n        {\n            if (true) {\n                return compiler.qname(null, nc1);\n            }\n        }\n    } else {\n        {\n            if (true) {\n                return compiler.qname(nc1, nc2);\n            }\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object QName(),"digraph cfg_QName {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""5"" [label=""$stack6 = interfaceinvoke $stack5.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object qname(java.lang.String,java.lang.String)>(nc1, nc2)""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""7"" [label=""$stack8 = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object qname(java.lang.String,java.lang.String)>(null, nc1)""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""9"" [label=""$stack9[3] = $stack10""];\n	""10"" [label=""goto""];\n	""11"" [label=""if nc2 != null""];\n	""12"" [label=""nc1 = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName()>()""];\n	""13"" [label=""nc2 = null""];\n	""14"" [label=""nc2 = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName()>()""];\n	""15"" [label=""return $stack6""];\n	""16"" [label=""return $stack8""];\n	""17"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(80)""];\n	""18"" [label=""switch($stack4) \{     case 80:     default:  \}""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_goto""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_switch""];\n	""18"" -> ""8""[label=""cfg_switch""];\n	""19"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.QName_Without_CoreFunctions(),Method,No Comment,"final public Object QName_Without_CoreFunctions() throws ParseException {\n    String nc1, nc2 = null;\n    if (jj_2_1(2147483647)) {\n        nc1 = NCName();\n        jj_consume_token(80);\n        nc2 = NCName();\n    } else {\n        switch(jj_nt.kind) {\n            case OR:\n            case AND:\n            case MOD:\n            case DIV:\n            case NCName:\n                nc1 = NCName_Without_CoreFunctions();\n                break;\n            default:\n                jj_la1[4] = jj_gen;\n                jj_consume_token(-1);\n                throw new ParseException();\n        }\n    }\n    if (nc2 == null) {\n        {\n            if (true) {\n                return compiler.qname(null, nc1);\n            }\n        }\n    } else {\n        {\n            if (true) {\n                return compiler.qname(nc1, nc2);\n            }\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object QName_Without_CoreFunctions(),"digraph cfg_QName_Without_CoreFunctions {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""2"" [label=""$stack10[4] = $stack11""];\n	""3"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""4"" [label=""$stack12 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""5"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_2_1(int)>(2147483647)""];\n	""6"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""7"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""8"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""9"" [label=""$stack7 = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object qname(java.lang.String,java.lang.String)>(nc1, nc2)""];\n	""10"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""11"" [label=""$stack9 = interfaceinvoke $stack8.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object qname(java.lang.String,java.lang.String)>(null, nc1)""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""if $stack3 == 0""];\n	""15"" [label=""if nc2 != null""];\n	""16"" [label=""nc1 = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName()>()""];\n	""17"" [label=""nc1 = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName_Without_CoreFunctions()>()""];\n	""18"" [label=""nc2 = null""];\n	""19"" [label=""nc2 = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName()>()""];\n	""20"" [label=""return $stack7""];\n	""21"" [label=""return $stack9""];\n	""22"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""23"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""24"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(80)""];\n	""25"" [label=""switch($stack5) \{     case 27:     case 28:     case 29:     case 30:     case 79:     default:  \}""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""27"" [label=""throw $stack12""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_goto""];\n	""13"" -> ""15""[label=""cfg_goto""];\n	""14"" -> ""16""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""15"" -> ""10""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""18"" -> ""5""[label=""cfg_next""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""27""[label=""cfg_next""];\n	""23"" -> ""4""[label=""cfg_next""];\n	""24"" -> ""19""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_switch""];\n	""25"" -> ""17""[label=""cfg_switch""];\n	""26"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""25""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.parseExpression(),Method,No Comment,"final public Object parseExpression() throws ParseException {\n    Object ex;\n    ex = Expression();\n    jj_consume_token(0);\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object parseExpression(),"digraph cfg_parseExpression {\n	""1"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Expression()>()""];\n	""2"" [label=""return ex""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(0)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.LocationPath(),Method,[1] LocationPath ::= RelativeLocationPath | AbsoluteLocationPath,"final public Object LocationPath() throws ParseException {\n    Object ex = null;\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case AXIS_SELF:\n        case AXIS_CHILD:\n        case AXIS_PARENT:\n        case AXIS_ANCESTOR:\n        case AXIS_ATTRIBUTE:\n        case AXIS_NAMESPACE:\n        case AXIS_PRECEDING:\n        case AXIS_FOLLOWING:\n        case AXIS_DESCENDANT:\n        case AXIS_ANCESTOR_OR_SELF:\n        case AXIS_FOLLOWING_SIBLING:\n        case AXIS_PRECEDING_SIBLING:\n        case AXIS_DESCENDANT_OR_SELF:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_ENDS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case FUNCTION_FORMAT_NUMBER:\n        case NCName:\n        case 83:\n        case 84:\n        case 87:\n        case 89:\n            ex = RelativeLocationPath();\n            break;\n        case SLASH:\n        case SLASHSLASH:\n            ex = AbsoluteLocationPath();\n            break;\n        default:\n            jj_la1[5] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object LocationPath(),"digraph cfg_LocationPath {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack4[5] = $stack5""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""6"" [label=""$stack6 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""7"" [label=""ex = null""];\n	""8"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AbsoluteLocationPath()>()""];\n	""9"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object RelativeLocationPath()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""return ex""];\n	""13"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""15"" [label=""switch($stack3) \{     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     case 21:     case 22:     case 23:     case 24:     case 25:     case 26:     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""17"" [label=""throw $stack6""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_goto""];\n	""11"" -> ""12""[label=""cfg_goto""];\n	""13"" -> ""17""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_switch""];\n	""15"" -> ""8""[label=""cfg_switch""];\n	""15"" -> ""9""[label=""cfg_switch""];\n	""16"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.AbsoluteLocationPath(),Method,[10]    AbbreviatedAbsoluteLocationPath    ::=    '//' RelativeLocationPath,"final public Object AbsoluteLocationPath() throws ParseException {\n    final ArrayList steps = new ArrayList();\n    if (jj_2_2(2147483647)) {\n        LocationStep(steps);\n        label_1: while (true) {\n            switch(jj_nt.kind) {\n                case SLASH:\n                case SLASHSLASH:\n                    ;\n                    break;\n                default:\n                    jj_la1[6] = jj_gen;\n                    break label_1;\n            }\n            LocationStep(steps);\n        }\n    } else {\n        switch(jj_nt.kind) {\n            case SLASH:\n                jj_consume_token(SLASH);\n                break;\n            default:\n                jj_la1[7] = jj_gen;\n                jj_consume_token(-1);\n                throw new ParseException();\n        }\n    }\n    {\n        if (true) {\n            return compiler.locationPath(true, steps.toArray());\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object AbsoluteLocationPath(),"digraph cfg_AbsoluteLocationPath {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""4"" [label=""$stack13 = $stack12.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack14[6] = $stack15""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack2 = new java.util.ArrayList""];\n	""9"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_2_2(int)>(2147483647)""];\n	""10"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""11"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""12"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""13"" [label=""$stack7 = virtualinvoke steps.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""14"" [label=""$stack8 = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object locationPath(boolean,java.lang.Object[])>(1, $stack7)""];\n	""15"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""16"" [label=""$stack9[7] = $stack10""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""if $stack3 == 0""];\n	""22"" [label=""return $stack8""];\n	""23"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""24"" [label=""specialinvoke $stack2.<java.util.ArrayList: void <init>()>()""];\n	""25"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""26"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(6)""];\n	""27"" [label=""steps = $stack2""];\n	""28"" [label=""switch($stack13) \{     case 6:     case 7:     default:  \}""];\n	""29"" [label=""switch($stack5) \{     case 6:     default:  \}""];\n	""30"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""31"" [label=""throw $stack11""];\n	""32"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void LocationStep(java.util.ArrayList)>(steps)""];\n	""33"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void LocationStep(java.util.ArrayList)>(steps)""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""29""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""22""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""33""[label=""cfg_goto""];\n	""18"" -> ""12""[label=""cfg_goto""];\n	""19"" -> ""12""[label=""cfg_goto""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_goto""];\n	""21"" -> ""10""[label=""cfg_true""];\n	""21"" -> ""32""[label=""cfg_false""];\n	""23"" -> ""31""[label=""cfg_next""];\n	""24"" -> ""27""[label=""cfg_next""];\n	""25"" -> ""2""[label=""cfg_next""];\n	""26"" -> ""19""[label=""cfg_next""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""28"" -> ""17""[label=""cfg_switch""];\n	""28"" -> ""5""[label=""cfg_switch""];\n	""29"" -> ""15""[label=""cfg_switch""];\n	""29"" -> ""26""[label=""cfg_switch""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""8""[label=""cfg_next""];\n	""32"" -> ""3""[label=""cfg_next""];\n	""33"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.RelativeLocationPath(),Method,[3] RelativeLocationPath ::= Step | RelativeLocationPath '/' Step | AbbreviatedRelativeLocationPath,"final public Object RelativeLocationPath() throws ParseException {\n    final ArrayList steps = new ArrayList();\n    NodeTest(steps);\n    label_2: while (true) {\n        switch(jj_nt.kind) {\n            case SLASH:\n            case SLASHSLASH:\n                ;\n                break;\n            default:\n                jj_la1[8] = jj_gen;\n                break label_2;\n        }\n        LocationStep(steps);\n    }\n    {\n        if (true) {\n            return compiler.locationPath(false, steps.toArray());\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object RelativeLocationPath(),"digraph cfg_RelativeLocationPath {\n	""1"" [label=""$stack2 = new java.util.ArrayList""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""5"" [label=""$stack5[8] = $stack6""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""7"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""8"" [label=""$stack8 = virtualinvoke steps.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""9"" [label=""$stack9 = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object locationPath(boolean,java.lang.Object[])>(0, $stack8)""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""return $stack9""];\n	""14"" [label=""specialinvoke $stack2.<java.util.ArrayList: void <init>()>()""];\n	""15"" [label=""steps = $stack2""];\n	""16"" [label=""switch($stack4) \{     case 6:     case 7:     default:  \}""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""18"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void LocationStep(java.util.ArrayList)>(steps)""];\n	""19"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void NodeTest(java.util.ArrayList)>(steps)""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_goto""];\n	""11"" -> ""7""[label=""cfg_goto""];\n	""12"" -> ""2""[label=""cfg_goto""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_switch""];\n	""16"" -> ""4""[label=""cfg_switch""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.LocationStep(ArrayList),Method,[4] Step ::= AxisSpecifier NodeTest Predicate*   | AbbreviatedStep,"final public void LocationStep(final ArrayList steps) throws ParseException {\n    Object t;\n    final Object s;\n    switch(jj_nt.kind) {\n        case SLASH:\n            jj_consume_token(SLASH);\n            break;\n        case SLASHSLASH:\n            jj_consume_token(SLASHSLASH);\n            // Abbreviated step: descendant-or-self::node()\n            t = compiler.nodeTypeTest(Compiler.NODE_TYPE_NODE);\n            steps.add(compiler.step(Compiler.AXIS_DESCENDANT_OR_SELF, t, null));\n            break;\n        default:\n            jj_la1[9] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    NodeTest(steps);\n}",void LocationStep(java.util.ArrayList),"digraph cfg_LocationStep {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""4"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""7"" [label=""$stack8 = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object step(int,java.lang.Object,java.lang.Object[])>(13, t, null)""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""9"" [label=""$stack9[9] = $stack10""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""return""];\n	""13"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(6)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(7)""];\n	""17"" [label=""steps := @parameter0: java.util.ArrayList""];\n	""18"" [label=""switch($stack5) \{     case 6:     case 7:     default:  \}""];\n	""19"" [label=""t = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object nodeTypeTest(int)>(1)""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""21"" [label=""throw $stack11""];\n	""22"" [label=""virtualinvoke steps.<java.util.ArrayList: boolean add(java.lang.Object)>($stack8)""];\n	""23"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void NodeTest(java.util.ArrayList)>(steps)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_goto""];\n	""11"" -> ""23""[label=""cfg_goto""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_switch""];\n	""18"" -> ""16""[label=""cfg_switch""];\n	""18"" -> ""8""[label=""cfg_switch""];\n	""19"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_next""];\n	""23"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""22""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.NodeTest(ArrayList),Method,[7] NodeTest ::= WildcardName | NodeType '(' ')' | 'processing-instruction' '(' Literal ')',"final public void NodeTest(final ArrayList steps) throws ParseException {\n    int axis;\n    int type = -1;\n    String instruction = null;\n    Object name = null;\n    Object s;\n    Object p;\n    final ArrayList ps = new ArrayList();\n    switch(jj_nt.kind) {\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case AXIS_SELF:\n        case AXIS_CHILD:\n        case AXIS_PARENT:\n        case AXIS_ANCESTOR:\n        case AXIS_ATTRIBUTE:\n        case AXIS_NAMESPACE:\n        case AXIS_PRECEDING:\n        case AXIS_FOLLOWING:\n        case AXIS_DESCENDANT:\n        case AXIS_ANCESTOR_OR_SELF:\n        case AXIS_FOLLOWING_SIBLING:\n        case AXIS_PRECEDING_SIBLING:\n        case AXIS_DESCENDANT_OR_SELF:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_ENDS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case FUNCTION_FORMAT_NUMBER:\n        case NCName:\n        case 87:\n        case 89:\n            axis = AxisSpecifier();\n            if (jj_2_3(2147483647)) {\n                type = NodeType();\n                jj_consume_token(81);\n                jj_consume_token(82);\n            } else if (jj_2_4(2147483647)) {\n                jj_consume_token(PI);\n                jj_consume_token(81);\n                jj_consume_token(Literal);\n                instruction = unescape(token.image.substring(1, token.image.length() - 1));\n                jj_consume_token(82);\n            } else {\n                switch(jj_nt.kind) {\n                    case OR:\n                    case AND:\n                    case MOD:\n                    case DIV:\n                    case NODE:\n                    case TEXT:\n                    case COMMENT:\n                    case PI:\n                    case FUNCTION_LAST:\n                    case FUNCTION_POSITION:\n                    case FUNCTION_COUNT:\n                    case FUNCTION_ID:\n                    case FUNCTION_KEY:\n                    case FUNCTION_LOCAL_NAME:\n                    case FUNCTION_NAMESPACE_URI:\n                    case FUNCTION_NAME:\n                    case FUNCTION_STRING:\n                    case FUNCTION_CONCAT:\n                    case FUNCTION_STARTS_WITH:\n                    case FUNCTION_ENDS_WITH:\n                    case FUNCTION_CONTAINS:\n                    case FUNCTION_SUBSTRING_BEFORE:\n                    case FUNCTION_SUBSTRING_AFTER:\n                    case FUNCTION_SUBSTRING:\n                    case FUNCTION_STRING_LENGTH:\n                    case FUNCTION_NORMALIZE_SPACE:\n                    case FUNCTION_TRANSLATE:\n                    case FUNCTION_BOOLEAN:\n                    case FUNCTION_NOT:\n                    case FUNCTION_TRUE:\n                    case FUNCTION_FALSE:\n                    case FUNCTION_NULL:\n                    case FUNCTION_LANG:\n                    case FUNCTION_NUMBER:\n                    case FUNCTION_SUM:\n                    case FUNCTION_FLOOR:\n                    case FUNCTION_CEILING:\n                    case FUNCTION_ROUND:\n                    case FUNCTION_FORMAT_NUMBER:\n                    case NCName:\n                    case 89:\n                        name = WildcardName();\n                        break;\n                    default:\n                        jj_la1[10] = jj_gen;\n                        jj_consume_token(-1);\n                        throw new ParseException();\n                }\n            }\n            break;\n        case 83:\n            jj_consume_token(83);\n            axis = Compiler.AXIS_SELF;\n            type = Compiler.NODE_TYPE_NODE;\n            break;\n        case 84:\n            jj_consume_token(84);\n            axis = Compiler.AXIS_PARENT;\n            type = Compiler.NODE_TYPE_NODE;\n            break;\n        default:\n            jj_la1[11] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    label_3: while (true) {\n        switch(jj_nt.kind) {\n            case 85:\n                ;\n                break;\n            default:\n                jj_la1[12] = jj_gen;\n                break label_3;\n        }\n        p = Predicate();\n        ps.add(p);\n    }\n    if (name != null) {\n        s = compiler.nodeNameTest(name);\n    } else if (instruction != null) {\n        s = compiler.processingInstructionTest(instruction);\n    } else {\n        s = compiler.nodeTypeTest(type);\n    }\n    steps.add(compiler.step(axis, s, ps.toArray()));\n}",void NodeTest(java.util.ArrayList),"digraph cfg_NodeTest {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack11 = $stack10.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""4"" [label=""$stack13 = $stack12.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack14[12] = $stack15""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""10"" [label=""$stack18 = virtualinvoke ps.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""11"" [label=""$stack19 = interfaceinvoke $stack17.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object step(int,java.lang.Object,java.lang.Object[])>(axis, s, $stack18)""];\n	""12"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""13"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""14"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_2_3(int)>(2147483647)""];\n	""15"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_2_4(int)>(2147483647)""];\n	""16"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""17"" [label=""$stack25 = $stack24.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""18"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""19"" [label=""$stack26[10] = $stack27""];\n	""20"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""21"" [label=""$stack28 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""22"" [label=""$stack29 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""23"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""24"" [label=""$stack31 = $stack30.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""25"" [label=""$stack32 = $stack29.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""26"" [label=""$stack33 = virtualinvoke $stack31.<java.lang.String: int length()>()""];\n	""27"" [label=""$stack34 = $stack33 - 1""];\n	""28"" [label=""$stack35 = virtualinvoke $stack32.<java.lang.String: java.lang.String substring(int,int)>(1, $stack34)""];\n	""29"" [label=""$stack36 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""30"" [label=""$stack36[11] = $stack37""];\n	""31"" [label=""$stack37 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""32"" [label=""$stack38 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""33"" [label=""$stack9 = new java.util.ArrayList""];\n	""34"" [label=""axis = 1""];\n	""35"" [label=""axis = 3""];\n	""36"" [label=""axis = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: int AxisSpecifier()>()""];\n	""37"" [label=""goto""];\n	""38"" [label=""goto""];\n	""39"" [label=""goto""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""goto""];\n	""44"" [label=""goto""];\n	""45"" [label=""goto""];\n	""46"" [label=""goto""];\n	""47"" [label=""if $stack22 == 0""];\n	""48"" [label=""if $stack23 == 0""];\n	""49"" [label=""if instruction == null""];\n	""50"" [label=""if name == null""];\n	""51"" [label=""instruction = null""];\n	""52"" [label=""instruction = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String unescape(java.lang.String)>($stack35)""];\n	""53"" [label=""name = null""];\n	""54"" [label=""name = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object WildcardName()>()""];\n	""55"" [label=""p = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Predicate()>()""];\n	""56"" [label=""ps = $stack9""];\n	""57"" [label=""return""];\n	""58"" [label=""s = interfaceinvoke $stack16.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object nodeTypeTest(int)>(type)""];\n	""59"" [label=""s = interfaceinvoke $stack20.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object processingInstructionTest(java.lang.String)>(instruction)""];\n	""60"" [label=""s = interfaceinvoke $stack21.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object nodeNameTest(java.lang.Object)>(name)""];\n	""61"" [label=""specialinvoke $stack28.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""62"" [label=""specialinvoke $stack38.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""63"" [label=""specialinvoke $stack9.<java.util.ArrayList: void <init>()>()""];\n	""64"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""65"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""66"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(18)""];\n	""67"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(34)""];\n	""68"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(81)""];\n	""69"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(81)""];\n	""70"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(82)""];\n	""71"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(82)""];\n	""72"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(83)""];\n	""73"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(84)""];\n	""74"" [label=""steps := @parameter0: java.util.ArrayList""];\n	""75"" [label=""switch($stack11) \{     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""76"" [label=""switch($stack13) \{     case 85:     default:  \}""];\n	""77"" [label=""switch($stack25) \{     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""78"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""79"" [label=""throw $stack28""];\n	""80"" [label=""throw $stack38""];\n	""81"" [label=""type = -1""];\n	""82"" [label=""type = 1""];\n	""83"" [label=""type = 1""];\n	""84"" [label=""type = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: int NodeType()>()""];\n	""85"" [label=""virtualinvoke ps.<java.util.ArrayList: boolean add(java.lang.Object)>(p)""];\n	""86"" [label=""virtualinvoke steps.<java.util.ArrayList: boolean add(java.lang.Object)>($stack19)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""86""[label=""cfg_next""];\n	""12"" -> ""59""[label=""cfg_next""];\n	""13"" -> ""60""[label=""cfg_next""];\n	""14"" -> ""47""[label=""cfg_next""];\n	""15"" -> ""48""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""77""[label=""cfg_next""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""65""[label=""cfg_next""];\n	""2"" -> ""75""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""61""[label=""cfg_next""];\n	""22"" -> ""25""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""52""[label=""cfg_next""];\n	""29"" -> ""31""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""64""[label=""cfg_next""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""32"" -> ""62""[label=""cfg_next""];\n	""33"" -> ""63""[label=""cfg_next""];\n	""34"" -> ""82""[label=""cfg_next""];\n	""35"" -> ""83""[label=""cfg_next""];\n	""36"" -> ""14""[label=""cfg_next""];\n	""37"" -> ""3""[label=""cfg_goto""];\n	""38"" -> ""3""[label=""cfg_goto""];\n	""39"" -> ""3""[label=""cfg_goto""];\n	""4"" -> ""76""[label=""cfg_next""];\n	""40"" -> ""3""[label=""cfg_goto""];\n	""41"" -> ""3""[label=""cfg_goto""];\n	""42"" -> ""55""[label=""cfg_goto""];\n	""43"" -> ""50""[label=""cfg_goto""];\n	""44"" -> ""9""[label=""cfg_goto""];\n	""45"" -> ""9""[label=""cfg_goto""];\n	""46"" -> ""3""[label=""cfg_goto""];\n	""47"" -> ""15""[label=""cfg_true""];\n	""47"" -> ""84""[label=""cfg_false""];\n	""48"" -> ""16""[label=""cfg_true""];\n	""48"" -> ""67""[label=""cfg_false""];\n	""49"" -> ""12""[label=""cfg_false""];\n	""49"" -> ""8""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""50"" -> ""13""[label=""cfg_false""];\n	""50"" -> ""49""[label=""cfg_true""];\n	""51"" -> ""53""[label=""cfg_next""];\n	""52"" -> ""71""[label=""cfg_next""];\n	""53"" -> ""33""[label=""cfg_next""];\n	""54"" -> ""41""[label=""cfg_next""];\n	""55"" -> ""85""[label=""cfg_next""];\n	""56"" -> ""1""[label=""cfg_next""];\n	""58"" -> ""9""[label=""cfg_next""];\n	""59"" -> ""45""[label=""cfg_next""];\n	""6"" -> ""43""[label=""cfg_next""];\n	""60"" -> ""44""[label=""cfg_next""];\n	""61"" -> ""79""[label=""cfg_next""];\n	""62"" -> ""80""[label=""cfg_next""];\n	""63"" -> ""56""[label=""cfg_next""];\n	""64"" -> ""32""[label=""cfg_next""];\n	""65"" -> ""21""[label=""cfg_next""];\n	""66"" -> ""22""[label=""cfg_next""];\n	""67"" -> ""69""[label=""cfg_next""];\n	""68"" -> ""70""[label=""cfg_next""];\n	""69"" -> ""66""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""70"" -> ""39""[label=""cfg_next""];\n	""71"" -> ""40""[label=""cfg_next""];\n	""72"" -> ""34""[label=""cfg_next""];\n	""73"" -> ""35""[label=""cfg_next""];\n	""74"" -> ""81""[label=""cfg_next""];\n	""75"" -> ""29""[label=""cfg_switch""];\n	""75"" -> ""36""[label=""cfg_switch""];\n	""75"" -> ""72""[label=""cfg_switch""];\n	""75"" -> ""73""[label=""cfg_switch""];\n	""76"" -> ""42""[label=""cfg_switch""];\n	""76"" -> ""5""[label=""cfg_switch""];\n	""77"" -> ""18""[label=""cfg_switch""];\n	""77"" -> ""54""[label=""cfg_switch""];\n	""78"" -> ""74""[label=""cfg_next""];\n	""8"" -> ""58""[label=""cfg_next""];\n	""81"" -> ""51""[label=""cfg_next""];\n	""82"" -> ""37""[label=""cfg_next""];\n	""83"" -> ""38""[label=""cfg_next""];\n	""84"" -> ""68""[label=""cfg_next""];\n	""85"" -> ""46""[label=""cfg_next""];\n	""86"" -> ""57""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.AxisSpecifier(),Method,[5] AxisSpecifier ::=    AxisName '::' | AbbreviatedAxisSpecifier,"final public int AxisSpecifier() throws ParseException {\n    int axis;\n    switch(jj_nt.kind) {\n        case AXIS_SELF:\n        case AXIS_CHILD:\n        case AXIS_PARENT:\n        case AXIS_ANCESTOR:\n        case AXIS_ATTRIBUTE:\n        case AXIS_NAMESPACE:\n        case AXIS_PRECEDING:\n        case AXIS_FOLLOWING:\n        case AXIS_DESCENDANT:\n        case AXIS_ANCESTOR_OR_SELF:\n        case AXIS_FOLLOWING_SIBLING:\n        case AXIS_PRECEDING_SIBLING:\n        case AXIS_DESCENDANT_OR_SELF:\n            axis = AxisName();\n            break;\n        default:\n            jj_la1[13] = jj_gen;\n            axis = AbbreviatedAxisSpecifier();\n    }\n    {\n        if (true) {\n            return axis;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",int AxisSpecifier(),"digraph cfg_AxisSpecifier {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack4[13] = $stack5""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""6"" [label=""axis = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: int AbbreviatedAxisSpecifier()>()""];\n	""7"" [label=""axis = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: int AxisName()>()""];\n	""8"" [label=""goto""];\n	""9"" [label=""return axis""];\n	""10"" [label=""switch($stack3) \{     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     default:  \}""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_switch""];\n	""10"" -> ""7""[label=""cfg_switch""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_goto""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.AxisName(),Method,[6] AxisName ::= 'ancestor' | 'ancestor-or-self' | 'attribute'  | 'child' | 'descendant'\n                    | 'descendant-or-self' | 'following' | 'following-sibling' | 'namespace'\n                       | 'parent' | 'preceding' | 'preceding-sibling' | 'self',"final public int AxisName() throws ParseException {\n    int axis = 0;\n    switch(jj_nt.kind) {\n        case AXIS_SELF:\n            jj_consume_token(AXIS_SELF);\n            axis = Compiler.AXIS_SELF;\n            break;\n        case AXIS_CHILD:\n            jj_consume_token(AXIS_CHILD);\n            axis = Compiler.AXIS_CHILD;\n            break;\n        case AXIS_PARENT:\n            jj_consume_token(AXIS_PARENT);\n            axis = Compiler.AXIS_PARENT;\n            break;\n        case AXIS_ANCESTOR:\n            jj_consume_token(AXIS_ANCESTOR);\n            axis = Compiler.AXIS_ANCESTOR;\n            break;\n        case AXIS_ATTRIBUTE:\n            jj_consume_token(AXIS_ATTRIBUTE);\n            axis = Compiler.AXIS_ATTRIBUTE;\n            break;\n        case AXIS_NAMESPACE:\n            jj_consume_token(AXIS_NAMESPACE);\n            axis = Compiler.AXIS_NAMESPACE;\n            break;\n        case AXIS_PRECEDING:\n            jj_consume_token(AXIS_PRECEDING);\n            axis = Compiler.AXIS_PRECEDING;\n            break;\n        case AXIS_FOLLOWING:\n            jj_consume_token(AXIS_FOLLOWING);\n            axis = Compiler.AXIS_FOLLOWING;\n            break;\n        case AXIS_DESCENDANT:\n            jj_consume_token(AXIS_DESCENDANT);\n            axis = Compiler.AXIS_DESCENDANT;\n            break;\n        case AXIS_ANCESTOR_OR_SELF:\n            jj_consume_token(AXIS_ANCESTOR_OR_SELF);\n            axis = Compiler.AXIS_ANCESTOR_OR_SELF;\n            break;\n        case AXIS_FOLLOWING_SIBLING:\n            jj_consume_token(AXIS_FOLLOWING_SIBLING);\n            axis = Compiler.AXIS_FOLLOWING_SIBLING;\n            break;\n        case AXIS_PRECEDING_SIBLING:\n            jj_consume_token(AXIS_PRECEDING_SIBLING);\n            axis = Compiler.AXIS_PRECEDING_SIBLING;\n            break;\n        case AXIS_DESCENDANT_OR_SELF:\n            jj_consume_token(AXIS_DESCENDANT_OR_SELF);\n            axis = Compiler.AXIS_DESCENDANT_OR_SELF;\n            break;\n        default:\n            jj_la1[14] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true) {\n            return axis;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",int AxisName(),"digraph cfg_AxisName {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack4[14] = $stack5""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""6"" [label=""$stack6 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""7"" [label=""axis = 0""];\n	""8"" [label=""axis = 1""];\n	""9"" [label=""axis = 10""];\n	""10"" [label=""axis = 11""];\n	""11"" [label=""axis = 12""];\n	""12"" [label=""axis = 13""];\n	""13"" [label=""axis = 2""];\n	""14"" [label=""axis = 3""];\n	""15"" [label=""axis = 4""];\n	""16"" [label=""axis = 5""];\n	""17"" [label=""axis = 6""];\n	""18"" [label=""axis = 7""];\n	""19"" [label=""axis = 8""];\n	""20"" [label=""axis = 9""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""return axis""];\n	""35"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""36"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""37"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(35)""];\n	""38"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(36)""];\n	""39"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(37)""];\n	""40"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(38)""];\n	""41"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(39)""];\n	""42"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(40)""];\n	""43"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(41)""];\n	""44"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(42)""];\n	""45"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(43)""];\n	""46"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(44)""];\n	""47"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(45)""];\n	""48"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(46)""];\n	""49"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(47)""];\n	""50"" [label=""switch($stack3) \{     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     default:  \}""];\n	""51"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""52"" [label=""throw $stack6""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""31""[label=""cfg_next""];\n	""11"" -> ""32""[label=""cfg_next""];\n	""12"" -> ""33""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""23""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""26""[label=""cfg_next""];\n	""18"" -> ""27""[label=""cfg_next""];\n	""19"" -> ""28""[label=""cfg_next""];\n	""2"" -> ""50""[label=""cfg_next""];\n	""20"" -> ""29""[label=""cfg_next""];\n	""21"" -> ""34""[label=""cfg_goto""];\n	""22"" -> ""34""[label=""cfg_goto""];\n	""23"" -> ""34""[label=""cfg_goto""];\n	""24"" -> ""34""[label=""cfg_goto""];\n	""25"" -> ""34""[label=""cfg_goto""];\n	""26"" -> ""34""[label=""cfg_goto""];\n	""27"" -> ""34""[label=""cfg_goto""];\n	""28"" -> ""34""[label=""cfg_goto""];\n	""29"" -> ""34""[label=""cfg_goto""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""34""[label=""cfg_goto""];\n	""31"" -> ""34""[label=""cfg_goto""];\n	""32"" -> ""34""[label=""cfg_goto""];\n	""33"" -> ""34""[label=""cfg_goto""];\n	""35"" -> ""52""[label=""cfg_next""];\n	""36"" -> ""6""[label=""cfg_next""];\n	""37"" -> ""8""[label=""cfg_next""];\n	""38"" -> ""13""[label=""cfg_next""];\n	""39"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""36""[label=""cfg_next""];\n	""40"" -> ""15""[label=""cfg_next""];\n	""41"" -> ""16""[label=""cfg_next""];\n	""42"" -> ""17""[label=""cfg_next""];\n	""43"" -> ""18""[label=""cfg_next""];\n	""44"" -> ""19""[label=""cfg_next""];\n	""45"" -> ""20""[label=""cfg_next""];\n	""46"" -> ""9""[label=""cfg_next""];\n	""47"" -> ""10""[label=""cfg_next""];\n	""48"" -> ""11""[label=""cfg_next""];\n	""49"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""50"" -> ""3""[label=""cfg_switch""];\n	""50"" -> ""37""[label=""cfg_switch""];\n	""50"" -> ""38""[label=""cfg_switch""];\n	""50"" -> ""39""[label=""cfg_switch""];\n	""50"" -> ""40""[label=""cfg_switch""];\n	""50"" -> ""41""[label=""cfg_switch""];\n	""50"" -> ""42""[label=""cfg_switch""];\n	""50"" -> ""43""[label=""cfg_switch""];\n	""50"" -> ""44""[label=""cfg_switch""];\n	""50"" -> ""45""[label=""cfg_switch""];\n	""50"" -> ""46""[label=""cfg_switch""];\n	""50"" -> ""47""[label=""cfg_switch""];\n	""50"" -> ""48""[label=""cfg_switch""];\n	""50"" -> ""49""[label=""cfg_switch""];\n	""51"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""35""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""30""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.Predicate(),Method,[9] PredicateExpr ::=  Expr,"final public Object Predicate() throws ParseException {\n    Object ex;\n    jj_consume_token(85);\n    ex = Expression();\n    jj_consume_token(86);\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object Predicate(),"digraph cfg_Predicate {\n	""1"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Expression()>()""];\n	""2"" [label=""return ex""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(85)""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(86)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.AbbreviatedAxisSpecifier(),Method,[13]    AbbreviatedAxisSpecifier    ::=    '@'?,"final public int AbbreviatedAxisSpecifier() throws ParseException {\n    int axis = Compiler.AXIS_CHILD;\n    switch(jj_nt.kind) {\n        case 87:\n            jj_consume_token(87);\n            axis = Compiler.AXIS_ATTRIBUTE;\n            break;\n        default:\n            jj_la1[15] = jj_gen;\n            ;\n    }\n    {\n        if (true) {\n            return axis;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",int AbbreviatedAxisSpecifier(),"digraph cfg_AbbreviatedAxisSpecifier {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack4[15] = $stack5""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""6"" [label=""axis = 2""];\n	""7"" [label=""axis = 5""];\n	""8"" [label=""goto""];\n	""9"" [label=""return axis""];\n	""10"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(87)""];\n	""11"" [label=""switch($stack3) \{     case 87:     default:  \}""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_switch""];\n	""11"" -> ""3""[label=""cfg_switch""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_goto""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.Expression(),Method,[14] Expr ::= OrExpr,"final public Object Expression() throws ParseException {\n    Object ex;\n    ex = OrExpr();\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object Expression(),"digraph cfg_Expression {\n	""1"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object OrExpr()>()""];\n	""2"" [label=""return ex""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.PrimaryExpr(),Method,[15] PrimaryExpr ::= VariableReference | '(' Expr ')' | Literal | Number | FunctionCall,"final public Object PrimaryExpr() throws ParseException {\n    Object ex = null;\n    switch(jj_nt.kind) {\n        case VARIABLE:\n            ex = VariableReference();\n            break;\n        case 81:\n            jj_consume_token(81);\n            ex = Expression();\n            jj_consume_token(82);\n            break;\n        case Literal:\n            jj_consume_token(Literal);\n            ex = compiler.literal(unescape(token.image.substring(1, token.image.length() - 1)));\n            break;\n        case Number:\n            jj_consume_token(Number);\n            ex = compiler.number(token.image);\n            break;\n        default:\n            jj_la1[16] = jj_gen;\n            if (jj_2_5(2147483647)) {\n                ex = CoreFunctionCall();\n            } else {\n                switch(jj_nt.kind) {\n                    case OR:\n                    case AND:\n                    case MOD:\n                    case DIV:\n                    case NODE:\n                    case TEXT:\n                    case COMMENT:\n                    case PI:\n                    case FUNCTION_LAST:\n                    case FUNCTION_POSITION:\n                    case FUNCTION_COUNT:\n                    case FUNCTION_ID:\n                    case FUNCTION_KEY:\n                    case FUNCTION_LOCAL_NAME:\n                    case FUNCTION_NAMESPACE_URI:\n                    case FUNCTION_NAME:\n                    case FUNCTION_STRING:\n                    case FUNCTION_CONCAT:\n                    case FUNCTION_STARTS_WITH:\n                    case FUNCTION_ENDS_WITH:\n                    case FUNCTION_CONTAINS:\n                    case FUNCTION_SUBSTRING_BEFORE:\n                    case FUNCTION_SUBSTRING_AFTER:\n                    case FUNCTION_SUBSTRING:\n                    case FUNCTION_STRING_LENGTH:\n                    case FUNCTION_NORMALIZE_SPACE:\n                    case FUNCTION_TRANSLATE:\n                    case FUNCTION_BOOLEAN:\n                    case FUNCTION_NOT:\n                    case FUNCTION_TRUE:\n                    case FUNCTION_FALSE:\n                    case FUNCTION_NULL:\n                    case FUNCTION_LANG:\n                    case FUNCTION_NUMBER:\n                    case FUNCTION_SUM:\n                    case FUNCTION_FLOOR:\n                    case FUNCTION_CEILING:\n                    case FUNCTION_ROUND:\n                    case FUNCTION_FORMAT_NUMBER:\n                    case NCName:\n                        ex = FunctionCall();\n                        break;\n                    default:\n                        jj_la1[17] = jj_gen;\n                        jj_consume_token(-1);\n                        throw new ParseException();\n                }\n            }\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object PrimaryExpr(),"digraph cfg_PrimaryExpr {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""2"" [label=""$stack11 = $stack7.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack9.<java.lang.String: int length()>()""];\n	""4"" [label=""$stack13 = $stack12 - 1""];\n	""5"" [label=""$stack14 = virtualinvoke $stack11.<java.lang.String: java.lang.String substring(int,int)>(1, $stack13)""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String unescape(java.lang.String)>($stack14)""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""8"" [label=""$stack16[16] = $stack17""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""10"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_2_5(int)>(2147483647)""];\n	""11"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""12"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""13"" [label=""$stack20 = $stack19.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""14"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""15"" [label=""$stack21[17] = $stack22""];\n	""16"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""17"" [label=""$stack23 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""18"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""19"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""20"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""21"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""22"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""23"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""24"" [label=""$stack9 = $stack8.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""25"" [label=""ex = interfaceinvoke $stack10.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object literal(java.lang.String)>($stack15)""];\n	""26"" [label=""ex = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object number(java.lang.String)>($stack5)""];\n	""27"" [label=""ex = null""];\n	""28"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object CoreFunctionCall()>()""];\n	""29"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Expression()>()""];\n	""30"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object FunctionCall()>()""];\n	""31"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object VariableReference()>()""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""if $stack18 == 0""];\n	""39"" [label=""return ex""];\n	""40"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""41"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""42"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(18)""];\n	""43"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(20)""];\n	""44"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(81)""];\n	""45"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(82)""];\n	""46"" [label=""switch($stack20) \{     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     default:  \}""];\n	""47"" [label=""switch($stack3) \{     case 17:     case 18:     case 20:     case 81:     default:  \}""];\n	""48"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""49"" [label=""throw $stack23""];\n	""1"" -> ""22""[label=""cfg_next""];\n	""10"" -> ""38""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""46""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""41""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""40""[label=""cfg_next""];\n	""18"" -> ""47""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""2""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""3""[label=""cfg_next""];\n	""25"" -> ""33""[label=""cfg_next""];\n	""26"" -> ""34""[label=""cfg_next""];\n	""27"" -> ""12""[label=""cfg_next""];\n	""28"" -> ""36""[label=""cfg_next""];\n	""29"" -> ""45""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""37""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""39""[label=""cfg_goto""];\n	""33"" -> ""39""[label=""cfg_goto""];\n	""34"" -> ""39""[label=""cfg_goto""];\n	""35"" -> ""39""[label=""cfg_goto""];\n	""36"" -> ""39""[label=""cfg_goto""];\n	""37"" -> ""39""[label=""cfg_goto""];\n	""38"" -> ""11""[label=""cfg_true""];\n	""38"" -> ""28""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""49""[label=""cfg_next""];\n	""41"" -> ""17""[label=""cfg_next""];\n	""42"" -> ""1""[label=""cfg_next""];\n	""43"" -> ""21""[label=""cfg_next""];\n	""44"" -> ""29""[label=""cfg_next""];\n	""45"" -> ""35""[label=""cfg_next""];\n	""46"" -> ""14""[label=""cfg_switch""];\n	""46"" -> ""30""[label=""cfg_switch""];\n	""47"" -> ""31""[label=""cfg_switch""];\n	""47"" -> ""42""[label=""cfg_switch""];\n	""47"" -> ""43""[label=""cfg_switch""];\n	""47"" -> ""44""[label=""cfg_switch""];\n	""47"" -> ""7""[label=""cfg_switch""];\n	""48"" -> ""27""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.FunctionCall(),Method,"[16]    FunctionCall    ::=    FunctionName '(' ( Argument ( ',' Argument)*)? ')'","final public Object FunctionCall() throws ParseException {\n    Object name;\n    ArrayList args;\n    name = FunctionName();\n    args = ArgumentList();\n    if (args == null) {\n        {\n            if (true) {\n                return compiler.function(name, null);\n            }\n        }\n    } else {\n        {\n            if (true) {\n                return compiler.function(name, args.toArray());\n            }\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object FunctionCall(),"digraph cfg_FunctionCall {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""2"" [label=""$stack4 = virtualinvoke args.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""3"" [label=""$stack5 = interfaceinvoke $stack3.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object function(java.lang.Object,java.lang.Object[])>(name, $stack4)""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""5"" [label=""$stack7 = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object function(java.lang.Object,java.lang.Object[])>(name, null)""];\n	""6"" [label=""args = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.ArrayList ArgumentList()>()""];\n	""7"" [label=""if args != null""];\n	""8"" [label=""name = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object FunctionName()>()""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.CoreFunctionCall(),Method,No Comment,"final public Object CoreFunctionCall() throws ParseException {\n    int code = 0;\n    ArrayList args;\n    code = CoreFunctionName();\n    args = ArgumentList();\n    if (args == null) {\n        {\n            if (true) {\n                return compiler.function(code, null);\n            }\n        }\n    } else {\n        {\n            if (true) {\n                return compiler.function(code, args.toArray());\n            }\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object CoreFunctionCall(),"digraph cfg_CoreFunctionCall {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""2"" [label=""$stack4 = virtualinvoke args.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""3"" [label=""$stack5 = interfaceinvoke $stack3.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object function(int,java.lang.Object[])>(code, $stack4)""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""5"" [label=""$stack7 = interfaceinvoke $stack6.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object function(int,java.lang.Object[])>(code, null)""];\n	""6"" [label=""args = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.ArrayList ArgumentList()>()""];\n	""7"" [label=""code = 0""];\n	""8"" [label=""code = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: int CoreFunctionName()>()""];\n	""9"" [label=""if args != null""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.ArgumentList(),Method,No Comment,"final public ArrayList ArgumentList() throws ParseException {\n    ArrayList args = null;\n    Object arg;\n    jj_consume_token(81);\n    switch(jj_nt.kind) {\n        case SLASH:\n        case SLASHSLASH:\n        case MINUS:\n        case VARIABLE:\n        case Literal:\n        case Number:\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case AXIS_SELF:\n        case AXIS_CHILD:\n        case AXIS_PARENT:\n        case AXIS_ANCESTOR:\n        case AXIS_ATTRIBUTE:\n        case AXIS_NAMESPACE:\n        case AXIS_PRECEDING:\n        case AXIS_FOLLOWING:\n        case AXIS_DESCENDANT:\n        case AXIS_ANCESTOR_OR_SELF:\n        case AXIS_FOLLOWING_SIBLING:\n        case AXIS_PRECEDING_SIBLING:\n        case AXIS_DESCENDANT_OR_SELF:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_ENDS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case FUNCTION_FORMAT_NUMBER:\n        case NCName:\n        case 81:\n        case 83:\n        case 84:\n        case 87:\n        case 89:\n            arg = Argument();\n            args = new ArrayList();\n            args.add(arg);\n            label_4: while (true) {\n                switch(jj_nt.kind) {\n                    case 88:\n                        ;\n                        break;\n                    default:\n                        jj_la1[18] = jj_gen;\n                        break label_4;\n                }\n                jj_consume_token(88);\n                arg = Argument();\n                args.add(arg);\n            }\n            break;\n        default:\n            jj_la1[19] = jj_gen;\n            ;\n    }\n    jj_consume_token(82);\n    {\n        if (true) {\n            return args;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.util.ArrayList ArgumentList(),"digraph cfg_ArgumentList {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""2"" [label=""$stack10[19] = $stack11""];\n	""3"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""5"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""6"" [label=""$stack5 = new java.util.ArrayList""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""8"" [label=""$stack7 = $stack6.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""9"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""10"" [label=""$stack8[18] = $stack9""];\n	""11"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""12"" [label=""arg = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Argument()>()""];\n	""13"" [label=""arg = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Argument()>()""];\n	""14"" [label=""args = $stack5""];\n	""15"" [label=""args = null""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""return args""];\n	""20"" [label=""specialinvoke $stack5.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(81)""];\n	""22"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(82)""];\n	""23"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(88)""];\n	""24"" [label=""switch($stack4) \{     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     case 21:     case 22:     case 23:     case 24:     case 25:     case 26:     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""25"" [label=""switch($stack7) \{     case 88:     default:  \}""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""27"" [label=""virtualinvoke args.<java.util.ArrayList: boolean add(java.lang.Object)>(arg)""];\n	""28"" [label=""virtualinvoke args.<java.util.ArrayList: boolean add(java.lang.Object)>(arg)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""21""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_goto""];\n	""17"" -> ""22""[label=""cfg_goto""];\n	""18"" -> ""7""[label=""cfg_goto""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""14""[label=""cfg_next""];\n	""21"" -> ""4""[label=""cfg_next""];\n	""22"" -> ""19""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_switch""];\n	""24"" -> ""12""[label=""cfg_switch""];\n	""25"" -> ""16""[label=""cfg_switch""];\n	""25"" -> ""9""[label=""cfg_switch""];\n	""26"" -> ""15""[label=""cfg_next""];\n	""27"" -> ""7""[label=""cfg_next""];\n	""28"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""20""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.Argument(),Method,[17]    Argument    ::=    Expr,"final public Object Argument() throws ParseException {\n    Object ex;\n    ex = Expression();\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object Argument(),"digraph cfg_Argument {\n	""1"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Expression()>()""];\n	""2"" [label=""return ex""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.UnionExpr(),Method,[18] UnionExpr    ::=    PathExpr | UnionExpr '|' PathExpr,"final public Object UnionExpr() throws ParseException {\n    Object ex, r;\n    ArrayList list = null;\n    ex = PathExpr();\n    label_5: while (true) {\n        switch(jj_nt.kind) {\n            case UNION:\n                ;\n                break;\n            default:\n                jj_la1[20] = jj_gen;\n                break label_5;\n        }\n        jj_consume_token(UNION);\n        r = PathExpr();\n        if (list == null) {\n            list = new ArrayList();\n            list.add(ex);\n        }\n        list.add(r);\n    }\n    if (list != null) {\n        ex = compiler.union(list.toArray());\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object UnionExpr(),"digraph cfg_UnionExpr {\n	""1"" [label=""$stack10 = virtualinvoke list.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""4"" [label=""$stack6 = new java.util.ArrayList""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack7[20] = $stack8""];\n	""7"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""9"" [label=""ex = interfaceinvoke $stack9.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object union(java.lang.Object[])>($stack10)""];\n	""10"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object PathExpr()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""if list != null""];\n	""15"" [label=""if list == null""];\n	""16"" [label=""list = $stack6""];\n	""17"" [label=""list = null""];\n	""18"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object PathExpr()>()""];\n	""19"" [label=""return ex""];\n	""20"" [label=""specialinvoke $stack6.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(8)""];\n	""22"" [label=""switch($stack5) \{     case 8:     default:  \}""];\n	""23"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""24"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(ex)""];\n	""25"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(r)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_goto""];\n	""12"" -> ""15""[label=""cfg_goto""];\n	""13"" -> ""2""[label=""cfg_goto""];\n	""14"" -> ""25""[label=""cfg_true""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""8""[label=""cfg_false""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_switch""];\n	""22"" -> ""5""[label=""cfg_switch""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""19""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.PathExpr(),Method,[19] PathExpr ::= LocationPath | FilterExpr | FilterExpr '/' RelativeLocationPath | FilterExpr '//' RelativeLocationPath,"final public Object PathExpr() throws ParseException {\n    Object ex = null;\n    final Object[] steps;\n    if (jj_2_6(2147483647)) {\n        ex = FilterExpr();\n    } else {\n        switch(jj_nt.kind) {\n            case SLASH:\n            case SLASHSLASH:\n            case OR:\n            case AND:\n            case MOD:\n            case DIV:\n            case NODE:\n            case TEXT:\n            case COMMENT:\n            case PI:\n            case AXIS_SELF:\n            case AXIS_CHILD:\n            case AXIS_PARENT:\n            case AXIS_ANCESTOR:\n            case AXIS_ATTRIBUTE:\n            case AXIS_NAMESPACE:\n            case AXIS_PRECEDING:\n            case AXIS_FOLLOWING:\n            case AXIS_DESCENDANT:\n            case AXIS_ANCESTOR_OR_SELF:\n            case AXIS_FOLLOWING_SIBLING:\n            case AXIS_PRECEDING_SIBLING:\n            case AXIS_DESCENDANT_OR_SELF:\n            case FUNCTION_LAST:\n            case FUNCTION_POSITION:\n            case FUNCTION_COUNT:\n            case FUNCTION_ID:\n            case FUNCTION_KEY:\n            case FUNCTION_LOCAL_NAME:\n            case FUNCTION_NAMESPACE_URI:\n            case FUNCTION_NAME:\n            case FUNCTION_STRING:\n            case FUNCTION_CONCAT:\n            case FUNCTION_STARTS_WITH:\n            case FUNCTION_ENDS_WITH:\n            case FUNCTION_CONTAINS:\n            case FUNCTION_SUBSTRING_BEFORE:\n            case FUNCTION_SUBSTRING_AFTER:\n            case FUNCTION_SUBSTRING:\n            case FUNCTION_STRING_LENGTH:\n            case FUNCTION_NORMALIZE_SPACE:\n            case FUNCTION_TRANSLATE:\n            case FUNCTION_BOOLEAN:\n            case FUNCTION_NOT:\n            case FUNCTION_TRUE:\n            case FUNCTION_FALSE:\n            case FUNCTION_NULL:\n            case FUNCTION_LANG:\n            case FUNCTION_NUMBER:\n            case FUNCTION_SUM:\n            case FUNCTION_FLOOR:\n            case FUNCTION_CEILING:\n            case FUNCTION_ROUND:\n            case FUNCTION_FORMAT_NUMBER:\n            case NCName:\n            case 83:\n            case 84:\n            case 87:\n            case 89:\n                ex = LocationPath();\n                break;\n            default:\n                jj_la1[21] = jj_gen;\n                jj_consume_token(-1);\n                throw new ParseException();\n        }\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object PathExpr(),"digraph cfg_PathExpr {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_2_6(int)>(2147483647)""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""5"" [label=""$stack6[21] = $stack7""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""7"" [label=""$stack8 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""8"" [label=""ex = null""];\n	""9"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object FilterExpr()>()""];\n	""10"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object LocationPath()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack3 == 0""];\n	""14"" [label=""return ex""];\n	""15"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""17"" [label=""switch($stack5) \{     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     case 21:     case 22:     case 23:     case 24:     case 25:     case 26:     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""19"" [label=""throw $stack8""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_goto""];\n	""12"" -> ""14""[label=""cfg_goto""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""7""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_switch""];\n	""17"" -> ""4""[label=""cfg_switch""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.FilterExpr(),Method,[20]    FilterExpr    ::=    PrimaryExpr    | FilterExpr Predicate,"final public Object FilterExpr() throws ParseException {\n    Object ex, p;\n    final ArrayList ps = new ArrayList();\n    boolean path = false;\n    final ArrayList steps = new ArrayList();\n    ex = PrimaryExpr();\n    label_6: while (true) {\n        switch(jj_nt.kind) {\n            case 85:\n                ;\n                break;\n            default:\n                jj_la1[22] = jj_gen;\n                break label_6;\n        }\n        p = Predicate();\n        path = true;\n        ps.add(p);\n    }\n    label_7: while (true) {\n        switch(jj_nt.kind) {\n            case SLASH:\n            case SLASHSLASH:\n                ;\n                break;\n            default:\n                jj_la1[23] = jj_gen;\n                break label_7;\n        }\n        LocationStep(steps);\n        path = true;\n    }\n    if (path) {\n        {\n            if (true) {\n                return compiler.expressionPath(ex, ps.toArray(), steps.toArray());\n            }\n        }\n    } else {\n        {\n            if (true) {\n                return ex;\n            }\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object FilterExpr(),"digraph cfg_FilterExpr {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""2"" [label=""$stack10[22] = $stack11""];\n	""3"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""5"" [label=""$stack13 = $stack12.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""7"" [label=""$stack14[23] = $stack15""];\n	""8"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""9"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""10"" [label=""$stack17 = virtualinvoke steps.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""11"" [label=""$stack18 = virtualinvoke ps.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""12"" [label=""$stack19 = interfaceinvoke $stack16.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object expressionPath(java.lang.Object,java.lang.Object[],java.lang.Object[])>(ex, $stack18, $stack17)""];\n	""13"" [label=""$stack6 = new java.util.ArrayList""];\n	""14"" [label=""$stack7 = new java.util.ArrayList""];\n	""15"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""16"" [label=""$stack9 = $stack8.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""17"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object PrimaryExpr()>()""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""if path == 0""];\n	""25"" [label=""p = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object Predicate()>()""];\n	""26"" [label=""path = 0""];\n	""27"" [label=""path = 1""];\n	""28"" [label=""path = 1""];\n	""29"" [label=""ps = $stack6""];\n	""30"" [label=""return $stack19""];\n	""31"" [label=""return ex""];\n	""32"" [label=""specialinvoke $stack6.<java.util.ArrayList: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack7.<java.util.ArrayList: void <init>()>()""];\n	""34"" [label=""steps = $stack7""];\n	""35"" [label=""switch($stack13) \{     case 6:     case 7:     default:  \}""];\n	""36"" [label=""switch($stack9) \{     case 85:     default:  \}""];\n	""37"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""38"" [label=""virtualinvoke ps.<java.util.ArrayList: boolean add(java.lang.Object)>(p)""];\n	""39"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void LocationStep(java.util.ArrayList)>(steps)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""30""[label=""cfg_next""];\n	""13"" -> ""32""[label=""cfg_next""];\n	""14"" -> ""33""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""36""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_goto""];\n	""19"" -> ""4""[label=""cfg_goto""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""39""[label=""cfg_goto""];\n	""21"" -> ""24""[label=""cfg_goto""];\n	""22"" -> ""4""[label=""cfg_goto""];\n	""23"" -> ""15""[label=""cfg_goto""];\n	""24"" -> ""31""[label=""cfg_true""];\n	""24"" -> ""9""[label=""cfg_false""];\n	""25"" -> ""28""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_next""];\n	""27"" -> ""22""[label=""cfg_next""];\n	""28"" -> ""38""[label=""cfg_next""];\n	""29"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""32"" -> ""29""[label=""cfg_next""];\n	""33"" -> ""34""[label=""cfg_next""];\n	""34"" -> ""17""[label=""cfg_next""];\n	""35"" -> ""20""[label=""cfg_switch""];\n	""35"" -> ""6""[label=""cfg_switch""];\n	""36"" -> ""1""[label=""cfg_switch""];\n	""36"" -> ""18""[label=""cfg_switch""];\n	""37"" -> ""13""[label=""cfg_next""];\n	""38"" -> ""23""[label=""cfg_next""];\n	""39"" -> ""27""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""35""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.OrExpr(),Method,[21] OrExpr    ::=    AndExpr | OrExpr 'or' AndExpr,"final public Object OrExpr() throws ParseException {\n    Object ex, r;\n    ArrayList list = null;\n    ex = AndExpr();\n    label_8: while (true) {\n        switch(jj_nt.kind) {\n            case OR:\n                ;\n                break;\n            default:\n                jj_la1[24] = jj_gen;\n                break label_8;\n        }\n        jj_consume_token(OR);\n        r = AndExpr();\n        if (list == null) {\n            list = new ArrayList();\n            list.add(ex);\n        }\n        list.add(r);\n    }\n    if (list != null) {\n        ex = compiler.or(list.toArray());\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object OrExpr(),"digraph cfg_OrExpr {\n	""1"" [label=""$stack10 = virtualinvoke list.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""4"" [label=""$stack6 = new java.util.ArrayList""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack7[24] = $stack8""];\n	""7"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""9"" [label=""ex = interfaceinvoke $stack9.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object or(java.lang.Object[])>($stack10)""];\n	""10"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AndExpr()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""if list != null""];\n	""15"" [label=""if list == null""];\n	""16"" [label=""list = $stack6""];\n	""17"" [label=""list = null""];\n	""18"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AndExpr()>()""];\n	""19"" [label=""return ex""];\n	""20"" [label=""specialinvoke $stack6.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(27)""];\n	""22"" [label=""switch($stack5) \{     case 27:     default:  \}""];\n	""23"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""24"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(ex)""];\n	""25"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(r)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_goto""];\n	""12"" -> ""15""[label=""cfg_goto""];\n	""13"" -> ""2""[label=""cfg_goto""];\n	""14"" -> ""25""[label=""cfg_true""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""8""[label=""cfg_false""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_switch""];\n	""22"" -> ""5""[label=""cfg_switch""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""19""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.AndExpr(),Method,[22] AndExpr    ::=    EqualityExpr  | AndExpr 'and' EqualityExpr,"final public Object AndExpr() throws ParseException {\n    Object ex, r;\n    ArrayList list = null;\n    ex = EqualityExpr();\n    label_9: while (true) {\n        switch(jj_nt.kind) {\n            case AND:\n                ;\n                break;\n            default:\n                jj_la1[25] = jj_gen;\n                break label_9;\n        }\n        jj_consume_token(AND);\n        r = EqualityExpr();\n        if (list == null) {\n            list = new ArrayList();\n            list.add(ex);\n        }\n        list.add(r);\n    }\n    if (list != null) {\n        ex = compiler.and(list.toArray());\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object AndExpr(),"digraph cfg_AndExpr {\n	""1"" [label=""$stack10 = virtualinvoke list.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""4"" [label=""$stack6 = new java.util.ArrayList""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack7[25] = $stack8""];\n	""7"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""9"" [label=""ex = interfaceinvoke $stack9.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object and(java.lang.Object[])>($stack10)""];\n	""10"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object EqualityExpr()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""if list != null""];\n	""15"" [label=""if list == null""];\n	""16"" [label=""list = $stack6""];\n	""17"" [label=""list = null""];\n	""18"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object EqualityExpr()>()""];\n	""19"" [label=""return ex""];\n	""20"" [label=""specialinvoke $stack6.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(28)""];\n	""22"" [label=""switch($stack5) \{     case 28:     default:  \}""];\n	""23"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""24"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(ex)""];\n	""25"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(r)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_goto""];\n	""12"" -> ""15""[label=""cfg_goto""];\n	""13"" -> ""2""[label=""cfg_goto""];\n	""14"" -> ""25""[label=""cfg_true""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""8""[label=""cfg_false""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_switch""];\n	""22"" -> ""5""[label=""cfg_switch""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""19""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.EqualityExpr(),Method,[23] EqualityExpr    ::=    RelationalExpr | EqualityExpr '=' RelationalExpr | EqualityExpr '!=' RelationalExpr,"final public Object EqualityExpr() throws ParseException {\n    Object ex, r;\n    ex = RelationalExpr();\n    label_10: while (true) {\n        switch(jj_nt.kind) {\n            case EQ:\n            case NEQ:\n                ;\n                break;\n            default:\n                jj_la1[26] = jj_gen;\n                break label_10;\n        }\n        switch(jj_nt.kind) {\n            case EQ:\n                jj_consume_token(EQ);\n                r = RelationalExpr();\n                ex = compiler.equal(ex, r);\n                break;\n            case NEQ:\n                jj_consume_token(NEQ);\n                r = RelationalExpr();\n                ex = compiler.notEqual(ex, r);\n                break;\n            default:\n                jj_la1[27] = jj_gen;\n                jj_consume_token(-1);\n                throw new ParseException();\n        }\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object EqualityExpr(),"digraph cfg_EqualityExpr {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack12[26] = $stack13""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""6"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""7"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""8"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""9"" [label=""$stack6 = $stack5.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""10"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""11"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""12"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""13"" [label=""$stack9[27] = $stack10""];\n	""14"" [label=""ex = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object notEqual(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""15"" [label=""ex = interfaceinvoke $stack8.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object equal(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""16"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object RelationalExpr()>()""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object RelationalExpr()>()""];\n	""22"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object RelationalExpr()>()""];\n	""23"" [label=""return ex""];\n	""24"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""25"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""26"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(11)""];\n	""27"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(12)""];\n	""28"" [label=""switch($stack4) \{     case 11:     case 12:     default:  \}""];\n	""29"" [label=""switch($stack6) \{     case 11:     case 12:     default:  \}""];\n	""30"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""31"" [label=""throw $stack11""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""17"" -> ""8""[label=""cfg_goto""];\n	""18"" -> ""23""[label=""cfg_goto""];\n	""19"" -> ""6""[label=""cfg_goto""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_goto""];\n	""21"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""24"" -> ""31""[label=""cfg_next""];\n	""25"" -> ""2""[label=""cfg_next""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""27"" -> ""22""[label=""cfg_next""];\n	""28"" -> ""17""[label=""cfg_switch""];\n	""28"" -> ""3""[label=""cfg_switch""];\n	""29"" -> ""12""[label=""cfg_switch""];\n	""29"" -> ""26""[label=""cfg_switch""];\n	""29"" -> ""27""[label=""cfg_switch""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""28""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""29""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.RelationalExpr(),Method,[24] RelationalExpr    ::=    AdditiveExpr | RelationalExpr '<' AdditiveExpr | RelationalExpr '>' AdditiveExpr\n                       | RelationalExpr '<=' AdditiveExpr  | RelationalExpr '>=' AdditiveExpr,"final public Object RelationalExpr() throws ParseException {\n    Object ex, r;\n    ex = AdditiveExpr();\n    label_11: while (true) {\n        switch(jj_nt.kind) {\n            case LT:\n            case LTE:\n            case GT:\n            case GTE:\n                ;\n                break;\n            default:\n                jj_la1[28] = jj_gen;\n                break label_11;\n        }\n        switch(jj_nt.kind) {\n            case LT:\n                jj_consume_token(LT);\n                r = AdditiveExpr();\n                ex = compiler.lessThan(ex, r);\n                break;\n            case GT:\n                jj_consume_token(GT);\n                r = AdditiveExpr();\n                ex = compiler.greaterThan(ex, r);\n                break;\n            case LTE:\n                jj_consume_token(LTE);\n                r = AdditiveExpr();\n                ex = compiler.lessThanOrEqual(ex, r);\n                break;\n            case GTE:\n                jj_consume_token(GTE);\n                r = AdditiveExpr();\n                ex = compiler.greaterThanOrEqual(ex, r);\n                break;\n            default:\n                jj_la1[29] = jj_gen;\n                jj_consume_token(-1);\n                throw new ParseException();\n        }\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object RelationalExpr(),"digraph cfg_RelationalExpr {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""3"" [label=""$stack11[29] = $stack12""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""5"" [label=""$stack13 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""7"" [label=""$stack14[28] = $stack15""];\n	""8"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""9"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""10"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""11"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""12"" [label=""$stack6 = $stack5.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""13"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""14"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""15"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""16"" [label=""ex = interfaceinvoke $stack10.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object lessThan(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""17"" [label=""ex = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object greaterThanOrEqual(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""18"" [label=""ex = interfaceinvoke $stack8.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object greaterThan(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""19"" [label=""ex = interfaceinvoke $stack9.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object lessThanOrEqual(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""20"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AdditiveExpr()>()""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AdditiveExpr()>()""];\n	""28"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AdditiveExpr()>()""];\n	""29"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AdditiveExpr()>()""];\n	""30"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object AdditiveExpr()>()""];\n	""31"" [label=""return ex""];\n	""32"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""33"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""34"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(13)""];\n	""35"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(14)""];\n	""36"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(15)""];\n	""37"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(16)""];\n	""38"" [label=""switch($stack4) \{     case 13:     case 14:     case 15:     case 16:     default:  \}""];\n	""39"" [label=""switch($stack6) \{     case 13:     case 14:     case 15:     case 16:     default:  \}""];\n	""40"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""41"" [label=""throw $stack13""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""38""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""39""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_next""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_next""];\n	""17"" -> ""26""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""11""[label=""cfg_goto""];\n	""22"" -> ""31""[label=""cfg_goto""];\n	""23"" -> ""9""[label=""cfg_goto""];\n	""24"" -> ""9""[label=""cfg_goto""];\n	""25"" -> ""9""[label=""cfg_goto""];\n	""26"" -> ""9""[label=""cfg_goto""];\n	""27"" -> ""1""[label=""cfg_next""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""29"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""33""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_next""];\n	""32"" -> ""41""[label=""cfg_next""];\n	""33"" -> ""5""[label=""cfg_next""];\n	""34"" -> ""27""[label=""cfg_next""];\n	""35"" -> ""28""[label=""cfg_next""];\n	""36"" -> ""29""[label=""cfg_next""];\n	""37"" -> ""30""[label=""cfg_next""];\n	""38"" -> ""21""[label=""cfg_switch""];\n	""38"" -> ""6""[label=""cfg_switch""];\n	""39"" -> ""2""[label=""cfg_switch""];\n	""39"" -> ""34""[label=""cfg_switch""];\n	""39"" -> ""35""[label=""cfg_switch""];\n	""39"" -> ""36""[label=""cfg_switch""];\n	""39"" -> ""37""[label=""cfg_switch""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""32""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""22""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.AdditiveExpr(),Method,[25] AdditiveExpr ::= MultiplicativeExpr  | AdditiveExpr '+' MultiplicativeExpr  | AdditiveExpr '-' MultiplicativeExpr,"final public Object AdditiveExpr() throws ParseException {\n    Object ex, r;\n    ArrayList list = null;\n    ex = SubtractiveExpr();\n    label_12: while (true) {\n        switch(jj_nt.kind) {\n            case PLUS:\n                ;\n                break;\n            default:\n                jj_la1[30] = jj_gen;\n                break label_12;\n        }\n        jj_consume_token(PLUS);\n        r = SubtractiveExpr();\n        if (list == null) {\n            list = new ArrayList();\n            list.add(ex);\n        }\n        list.add(r);\n    }\n    if (list != null) {\n        ex = compiler.sum(list.toArray());\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object AdditiveExpr(),"digraph cfg_AdditiveExpr {\n	""1"" [label=""$stack10 = virtualinvoke list.<java.util.ArrayList: java.lang.Object[] toArray()>()""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""4"" [label=""$stack6 = new java.util.ArrayList""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack7[30] = $stack8""];\n	""7"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""9"" [label=""ex = interfaceinvoke $stack9.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object sum(java.lang.Object[])>($stack10)""];\n	""10"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object SubtractiveExpr()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""if list != null""];\n	""15"" [label=""if list == null""];\n	""16"" [label=""list = $stack6""];\n	""17"" [label=""list = null""];\n	""18"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object SubtractiveExpr()>()""];\n	""19"" [label=""return ex""];\n	""20"" [label=""specialinvoke $stack6.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(9)""];\n	""22"" [label=""switch($stack5) \{     case 9:     default:  \}""];\n	""23"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""24"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(ex)""];\n	""25"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(r)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_goto""];\n	""12"" -> ""15""[label=""cfg_goto""];\n	""13"" -> ""2""[label=""cfg_goto""];\n	""14"" -> ""25""[label=""cfg_true""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""8""[label=""cfg_false""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_switch""];\n	""22"" -> ""5""[label=""cfg_switch""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""19""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.SubtractiveExpr(),Method,No Comment,"final public Object SubtractiveExpr() throws ParseException {\n    Object ex, r = null;\n    ex = MultiplicativeExpr();\n    label_13: while (true) {\n        switch(jj_nt.kind) {\n            case MINUS:\n                ;\n                break;\n            default:\n                jj_la1[31] = jj_gen;\n                break label_13;\n        }\n        jj_consume_token(MINUS);\n        r = MultiplicativeExpr();\n        ex = compiler.minus(ex, r);\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object SubtractiveExpr(),"digraph cfg_SubtractiveExpr {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""5"" [label=""$stack6[31] = $stack7""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""7"" [label=""ex = interfaceinvoke $stack5.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object minus(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""8"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object MultiplicativeExpr()>()""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""r = null""];\n	""13"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object MultiplicativeExpr()>()""];\n	""14"" [label=""return ex""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(10)""];\n	""16"" [label=""switch($stack4) \{     case 10:     default:  \}""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_goto""];\n	""11"" -> ""1""[label=""cfg_goto""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""4""[label=""cfg_switch""];\n	""16"" -> ""9""[label=""cfg_switch""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_goto""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.MultiplicativeExpr(),Method,[26] MultiplicativeExpr ::= UnaryExpr | MultiplicativeExpr MultiplyOperator UnaryExpr\n            | MultiplicativeExpr 'div' UnaryExpr | MultiplicativeExpr 'mod' UnaryExpr,"final public Object MultiplicativeExpr() throws ParseException {\n    Object ex, r;\n    ex = UnaryExpr();\n    label_14: while (true) {\n        switch(jj_nt.kind) {\n            case MOD:\n            case DIV:\n            case 89:\n                ;\n                break;\n            default:\n                jj_la1[32] = jj_gen;\n                break label_14;\n        }\n        switch(jj_nt.kind) {\n            case 89:\n                jj_consume_token(89);\n                r = UnaryExpr();\n                ex = compiler.multiply(ex, r);\n                break;\n            case DIV:\n                jj_consume_token(DIV);\n                r = UnaryExpr();\n                ex = compiler.divide(ex, r);\n                break;\n            case MOD:\n                jj_consume_token(MOD);\n                r = UnaryExpr();\n                ex = compiler.mod(ex, r);\n                break;\n            default:\n                jj_la1[33] = jj_gen;\n                jj_consume_token(-1);\n                throw new ParseException();\n        }\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object MultiplicativeExpr(),"digraph cfg_MultiplicativeExpr {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""2"" [label=""$stack10[33] = $stack11""];\n	""3"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""4"" [label=""$stack12 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack13[32] = $stack14""];\n	""7"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""9"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""10"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""11"" [label=""$stack6 = $stack5.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""12"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""13"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""14"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""15"" [label=""ex = interfaceinvoke $stack7.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object multiply(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""16"" [label=""ex = interfaceinvoke $stack8.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object divide(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""17"" [label=""ex = interfaceinvoke $stack9.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object mod(java.lang.Object,java.lang.Object)>(ex, r)""];\n	""18"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object UnaryExpr()>()""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object UnaryExpr()>()""];\n	""25"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object UnaryExpr()>()""];\n	""26"" [label=""r = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object UnaryExpr()>()""];\n	""27"" [label=""return ex""];\n	""28"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""29"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""30"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(29)""];\n	""31"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(30)""];\n	""32"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(89)""];\n	""33"" [label=""switch($stack4) \{     case 29:     case 30:     case 89:     default:  \}""];\n	""34"" [label=""switch($stack6) \{     case 29:     case 30:     case 89:     default:  \}""];\n	""35"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""36"" [label=""throw $stack12""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""34""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_next""];\n	""16"" -> ""22""[label=""cfg_next""];\n	""17"" -> ""21""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_goto""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""20"" -> ""27""[label=""cfg_goto""];\n	""21"" -> ""8""[label=""cfg_goto""];\n	""22"" -> ""8""[label=""cfg_goto""];\n	""23"" -> ""8""[label=""cfg_goto""];\n	""24"" -> ""14""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_next""];\n	""26"" -> ""12""[label=""cfg_next""];\n	""28"" -> ""36""[label=""cfg_next""];\n	""29"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""24""[label=""cfg_next""];\n	""31"" -> ""25""[label=""cfg_next""];\n	""32"" -> ""26""[label=""cfg_next""];\n	""33"" -> ""19""[label=""cfg_switch""];\n	""33"" -> ""5""[label=""cfg_switch""];\n	""34"" -> ""1""[label=""cfg_switch""];\n	""34"" -> ""30""[label=""cfg_switch""];\n	""34"" -> ""31""[label=""cfg_switch""];\n	""34"" -> ""32""[label=""cfg_switch""];\n	""35"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""20""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.UnaryExpr(),Method,[27]    UnaryExpr    ::=    UnionExpr  | '-' UnaryExpr,"final public Object UnaryExpr() throws ParseException {\n    Object ex;\n    switch(jj_nt.kind) {\n        case SLASH:\n        case SLASHSLASH:\n        case VARIABLE:\n        case Literal:\n        case Number:\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case AXIS_SELF:\n        case AXIS_CHILD:\n        case AXIS_PARENT:\n        case AXIS_ANCESTOR:\n        case AXIS_ATTRIBUTE:\n        case AXIS_NAMESPACE:\n        case AXIS_PRECEDING:\n        case AXIS_FOLLOWING:\n        case AXIS_DESCENDANT:\n        case AXIS_ANCESTOR_OR_SELF:\n        case AXIS_FOLLOWING_SIBLING:\n        case AXIS_PRECEDING_SIBLING:\n        case AXIS_DESCENDANT_OR_SELF:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_ENDS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case FUNCTION_FORMAT_NUMBER:\n        case NCName:\n        case 81:\n        case 83:\n        case 84:\n        case 87:\n        case 89:\n            ex = UnionExpr();\n            break;\n        case MINUS:\n            jj_consume_token(MINUS);\n            ex = UnaryExpr();\n            ex = compiler.minus(ex);\n            break;\n        default:\n            jj_la1[34] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true) {\n            return ex;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object UnaryExpr(),"digraph cfg_UnaryExpr {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""5"" [label=""$stack5[34] = $stack6""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""7"" [label=""$stack7 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""8"" [label=""ex = interfaceinvoke $stack4.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object minus(java.lang.Object)>(ex)""];\n	""9"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object UnaryExpr()>()""];\n	""10"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object UnionExpr()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""return ex""];\n	""14"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(10)""];\n	""17"" [label=""switch($stack3) \{     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     case 21:     case 22:     case 23:     case 24:     case 25:     case 26:     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""19"" [label=""throw $stack7""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_goto""];\n	""12"" -> ""13""[label=""cfg_goto""];\n	""14"" -> ""19""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_switch""];\n	""17"" -> ""16""[label=""cfg_switch""];\n	""17"" -> ""4""[label=""cfg_switch""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.FunctionName(),Method,[35]    FunctionName    ::=    QName - NodeType,"final public Object FunctionName() throws ParseException {\n    Object qname;\n    qname = QName_Without_CoreFunctions();\n    {\n        if (true) {\n            return qname;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object FunctionName(),"digraph cfg_FunctionName {\n	""1"" [label=""qname = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object QName_Without_CoreFunctions()>()""];\n	""2"" [label=""return qname""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.VariableReference(),Method,[36]    VariableReference    ::=    '$' QName,"final public Object VariableReference() throws ParseException {\n    Object ex;\n    jj_consume_token(VARIABLE);\n    ex = QName();\n    {\n        if (true) {\n            return compiler.variableReference(ex);\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object VariableReference(),"digraph cfg_VariableReference {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object variableReference(java.lang.Object)>(ex)""];\n	""3"" [label=""ex = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.Object QName()>()""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(17)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.WildcardName(),Method,[37]    WildcardName    ::=    '*'     | NCName ':' '*'     | QName,"final public Object WildcardName() throws ParseException {\n    Object qn;\n    String nc1, nc2 = null;\n    switch(jj_nt.kind) {\n        case 89:\n            jj_consume_token(89);\n            break;\n        case OR:\n        case AND:\n        case MOD:\n        case DIV:\n        case NODE:\n        case TEXT:\n        case COMMENT:\n        case PI:\n        case FUNCTION_LAST:\n        case FUNCTION_POSITION:\n        case FUNCTION_COUNT:\n        case FUNCTION_ID:\n        case FUNCTION_KEY:\n        case FUNCTION_LOCAL_NAME:\n        case FUNCTION_NAMESPACE_URI:\n        case FUNCTION_NAME:\n        case FUNCTION_STRING:\n        case FUNCTION_CONCAT:\n        case FUNCTION_STARTS_WITH:\n        case FUNCTION_ENDS_WITH:\n        case FUNCTION_CONTAINS:\n        case FUNCTION_SUBSTRING_BEFORE:\n        case FUNCTION_SUBSTRING_AFTER:\n        case FUNCTION_SUBSTRING:\n        case FUNCTION_STRING_LENGTH:\n        case FUNCTION_NORMALIZE_SPACE:\n        case FUNCTION_TRANSLATE:\n        case FUNCTION_BOOLEAN:\n        case FUNCTION_NOT:\n        case FUNCTION_TRUE:\n        case FUNCTION_FALSE:\n        case FUNCTION_NULL:\n        case FUNCTION_LANG:\n        case FUNCTION_NUMBER:\n        case FUNCTION_SUM:\n        case FUNCTION_FLOOR:\n        case FUNCTION_CEILING:\n        case FUNCTION_ROUND:\n        case FUNCTION_FORMAT_NUMBER:\n        case NCName:\n            NCName();\n            break;\n        default:\n            jj_la1[35] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    nc1 = token.image;\n    switch(jj_nt.kind) {\n        case 80:\n            jj_consume_token(80);\n            switch(jj_nt.kind) {\n                case 89:\n                    jj_consume_token(89);\n                    break;\n                case OR:\n                case AND:\n                case MOD:\n                case DIV:\n                case NODE:\n                case TEXT:\n                case COMMENT:\n                case PI:\n                case FUNCTION_LAST:\n                case FUNCTION_POSITION:\n                case FUNCTION_COUNT:\n                case FUNCTION_ID:\n                case FUNCTION_KEY:\n                case FUNCTION_LOCAL_NAME:\n                case FUNCTION_NAMESPACE_URI:\n                case FUNCTION_NAME:\n                case FUNCTION_STRING:\n                case FUNCTION_CONCAT:\n                case FUNCTION_STARTS_WITH:\n                case FUNCTION_ENDS_WITH:\n                case FUNCTION_CONTAINS:\n                case FUNCTION_SUBSTRING_BEFORE:\n                case FUNCTION_SUBSTRING_AFTER:\n                case FUNCTION_SUBSTRING:\n                case FUNCTION_STRING_LENGTH:\n                case FUNCTION_NORMALIZE_SPACE:\n                case FUNCTION_TRANSLATE:\n                case FUNCTION_BOOLEAN:\n                case FUNCTION_NOT:\n                case FUNCTION_TRUE:\n                case FUNCTION_FALSE:\n                case FUNCTION_NULL:\n                case FUNCTION_LANG:\n                case FUNCTION_NUMBER:\n                case FUNCTION_SUM:\n                case FUNCTION_FLOOR:\n                case FUNCTION_CEILING:\n                case FUNCTION_ROUND:\n                case FUNCTION_FORMAT_NUMBER:\n                case NCName:\n                    NCName();\n                    break;\n                default:\n                    jj_la1[36] = jj_gen;\n                    jj_consume_token(-1);\n                    throw new ParseException();\n            }\n            nc2 = token.image;\n            break;\n        default:\n            jj_la1[37] = jj_gen;\n            ;\n    }\n    if (nc2 != null) {\n        qn = compiler.qname(nc1, nc2);\n    } else {\n        qn = compiler.qname(null, nc1);\n    }\n    {\n        if (true) {\n            return qn;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",java.lang.Object WildcardName(),"digraph cfg_WildcardName {\n	""1"" [label=""$stack10 = $stack9.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.Compiler compiler>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""6"" [label=""$stack14[36] = $stack15""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""8"" [label=""$stack16 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""10"" [label=""$stack17[37] = $stack18""];\n	""11"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""12"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""13"" [label=""$stack19[35] = $stack20""];\n	""14"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""15"" [label=""$stack21 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""16"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""17"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""18"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""19"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""20"" [label=""$stack8 = $stack7.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""21"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""if nc2 == null""];\n	""29"" [label=""nc1 = $stack6.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""30"" [label=""nc2 = $stack11.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""31"" [label=""nc2 = null""];\n	""32"" [label=""qn = interfaceinvoke $stack12.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object qname(java.lang.String,java.lang.String)>(null, nc1)""];\n	""33"" [label=""qn = interfaceinvoke $stack13.<org.apache.commons.jxpath.ri.Compiler: java.lang.Object qname(java.lang.String,java.lang.String)>(nc1, nc2)""];\n	""34"" [label=""return qn""];\n	""35"" [label=""specialinvoke $stack16.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""36"" [label=""specialinvoke $stack21.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""37"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""38"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""39"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(80)""];\n	""40"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(89)""];\n	""41"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(89)""];\n	""42"" [label=""switch($stack10) \{     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""43"" [label=""switch($stack5) \{     case 27:     case 28:     case 29:     case 30:     case 31:     case 32:     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     default:  \}""];\n	""44"" [label=""switch($stack8) \{     case 80:     default:  \}""];\n	""45"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""46"" [label=""throw $stack16""];\n	""47"" [label=""throw $stack21""];\n	""48"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName()>()""];\n	""49"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String NCName()>()""];\n	""1"" -> ""42""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""37""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""36""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""43""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""30""[label=""cfg_next""];\n	""20"" -> ""44""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_goto""];\n	""23"" -> ""18""[label=""cfg_goto""];\n	""24"" -> ""2""[label=""cfg_goto""];\n	""25"" -> ""2""[label=""cfg_goto""];\n	""26"" -> ""34""[label=""cfg_goto""];\n	""27"" -> ""28""[label=""cfg_goto""];\n	""28"" -> ""3""[label=""cfg_true""];\n	""28"" -> ""4""[label=""cfg_false""];\n	""29"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""32""[label=""cfg_next""];\n	""30"" -> ""27""[label=""cfg_next""];\n	""31"" -> ""16""[label=""cfg_next""];\n	""32"" -> ""34""[label=""cfg_next""];\n	""33"" -> ""26""[label=""cfg_next""];\n	""35"" -> ""46""[label=""cfg_next""];\n	""36"" -> ""47""[label=""cfg_next""];\n	""37"" -> ""15""[label=""cfg_next""];\n	""38"" -> ""8""[label=""cfg_next""];\n	""39"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""33""[label=""cfg_next""];\n	""40"" -> ""23""[label=""cfg_next""];\n	""41"" -> ""25""[label=""cfg_next""];\n	""42"" -> ""41""[label=""cfg_switch""];\n	""42"" -> ""49""[label=""cfg_switch""];\n	""42"" -> ""5""[label=""cfg_switch""];\n	""43"" -> ""12""[label=""cfg_switch""];\n	""43"" -> ""40""[label=""cfg_switch""];\n	""43"" -> ""48""[label=""cfg_switch""];\n	""44"" -> ""39""[label=""cfg_switch""];\n	""44"" -> ""9""[label=""cfg_switch""];\n	""45"" -> ""31""[label=""cfg_next""];\n	""48"" -> ""22""[label=""cfg_next""];\n	""49"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""38""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""35""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.NodeType(),Method,[38]    NodeType    ::=    'comment' | 'text'  | 'processing-instruction'  | 'node',"final public int NodeType() throws ParseException {\n    int type;\n    switch(jj_nt.kind) {\n        case TEXT:\n            jj_consume_token(TEXT);\n            type = Compiler.NODE_TYPE_TEXT;\n            break;\n        case NODE:\n            jj_consume_token(NODE);\n            type = Compiler.NODE_TYPE_NODE;\n            break;\n        case COMMENT:\n            jj_consume_token(COMMENT);\n            type = Compiler.NODE_TYPE_COMMENT;\n            break;\n        case PI:\n            jj_consume_token(PI);\n            type = Compiler.NODE_TYPE_PI;\n            break;\n        default:\n            jj_la1[38] = jj_gen;\n            jj_consume_token(-1);\n            throw new ParseException();\n    }\n    {\n        if (true) {\n            return type;\n        }\n    }\n    throw new Error(""Missing return statement in function"");\n}",int NodeType(),"digraph cfg_NodeType {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack3 = $stack2.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack4[38] = $stack5""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""6"" [label=""$stack6 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""7"" [label=""goto""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""return type""];\n	""12"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>()>()""];\n	""13"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(-1)""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(31)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(32)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(33)""];\n	""17"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int)>(34)""];\n	""18"" [label=""switch($stack3) \{     case 31:     case 32:     case 33:     case 34:     default:  \}""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""20"" [label=""throw $stack6""];\n	""21"" [label=""type = 1""];\n	""22"" [label=""type = 2""];\n	""23"" [label=""type = 3""];\n	""24"" [label=""type = 4""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_goto""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""14"" -> ""21""[label=""cfg_next""];\n	""15"" -> ""22""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_next""];\n	""17"" -> ""24""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_switch""];\n	""18"" -> ""15""[label=""cfg_switch""];\n	""18"" -> ""16""[label=""cfg_switch""];\n	""18"" -> ""17""[label=""cfg_switch""];\n	""18"" -> ""3""[label=""cfg_switch""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""22"" -> ""8""[label=""cfg_next""];\n	""23"" -> ""9""[label=""cfg_next""];\n	""24"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""11""[label=""cfg_goto""];\n	""9"" -> ""11""[label=""cfg_goto""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.jj_2_1(int),Method,No Comment,"private boolean jj_2_1(final int xla) {\n    jj_la = xla;\n    jj_lastpos = jj_scanpos = token;\n    try {\n        return !jj_3_1();\n    } catch (final LookaheadSuccess ls) {\n        return true;\n    } finally {\n        jj_save(0, xla);\n    }\n}",boolean jj_2_1(int),"digraph cfg_jj_2_1 {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""2"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_1()>()""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""$stack8 := @caughtexception""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 != 0""];\n	""7"" [label=""l3 = 1""];\n	""8"" [label=""l4 = $stack7""];\n	""9"" [label=""ls = $stack8""];\n	""10"" [label=""ls = 0""];\n	""11"" [label=""ls = 1""];\n	""12"" [label=""return l3""];\n	""13"" [label=""return ls""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(0, xla)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(0, xla)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(0, xla)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = xla""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack5""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack5""];\n	""21"" [label=""throw l4""];\n	""22"" [label=""xla := @parameter0: int""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_except""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_except""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_2_2(int),Method,No Comment,"private boolean jj_2_2(final int xla) {\n    jj_la = xla;\n    jj_lastpos = jj_scanpos = token;\n    try {\n        return !jj_3_2();\n    } catch (final LookaheadSuccess ls) {\n        return true;\n    } finally {\n        jj_save(1, xla);\n    }\n}",boolean jj_2_2(int),"digraph cfg_jj_2_2 {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""2"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_2()>()""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""$stack8 := @caughtexception""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 != 0""];\n	""7"" [label=""l3 = 1""];\n	""8"" [label=""l4 = $stack7""];\n	""9"" [label=""ls = $stack8""];\n	""10"" [label=""ls = 0""];\n	""11"" [label=""ls = 1""];\n	""12"" [label=""return l3""];\n	""13"" [label=""return ls""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(1, xla)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(1, xla)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(1, xla)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = xla""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack5""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack5""];\n	""21"" [label=""throw l4""];\n	""22"" [label=""xla := @parameter0: int""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_except""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_except""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_2_3(int),Method,No Comment,"private boolean jj_2_3(final int xla) {\n    jj_la = xla;\n    jj_lastpos = jj_scanpos = token;\n    try {\n        return !jj_3_3();\n    } catch (final LookaheadSuccess ls) {\n        return true;\n    } finally {\n        jj_save(2, xla);\n    }\n}",boolean jj_2_3(int),"digraph cfg_jj_2_3 {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""2"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_3()>()""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""$stack8 := @caughtexception""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 != 0""];\n	""7"" [label=""l3 = 1""];\n	""8"" [label=""l4 = $stack7""];\n	""9"" [label=""ls = $stack8""];\n	""10"" [label=""ls = 0""];\n	""11"" [label=""ls = 1""];\n	""12"" [label=""return l3""];\n	""13"" [label=""return ls""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(2, xla)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(2, xla)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(2, xla)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = xla""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack5""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack5""];\n	""21"" [label=""throw l4""];\n	""22"" [label=""xla := @parameter0: int""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_except""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_except""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_2_4(int),Method,No Comment,"private boolean jj_2_4(final int xla) {\n    jj_la = xla;\n    jj_lastpos = jj_scanpos = token;\n    try {\n        return !jj_3_4();\n    } catch (final LookaheadSuccess ls) {\n        return true;\n    } finally {\n        jj_save(3, xla);\n    }\n}",boolean jj_2_4(int),"digraph cfg_jj_2_4 {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""2"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_4()>()""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""$stack8 := @caughtexception""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 != 0""];\n	""7"" [label=""l3 = 1""];\n	""8"" [label=""l4 = $stack7""];\n	""9"" [label=""ls = $stack8""];\n	""10"" [label=""ls = 0""];\n	""11"" [label=""ls = 1""];\n	""12"" [label=""return l3""];\n	""13"" [label=""return ls""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(3, xla)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(3, xla)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(3, xla)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = xla""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack5""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack5""];\n	""21"" [label=""throw l4""];\n	""22"" [label=""xla := @parameter0: int""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_except""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_except""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_2_5(int),Method,No Comment,"private boolean jj_2_5(final int xla) {\n    jj_la = xla;\n    jj_lastpos = jj_scanpos = token;\n    try {\n        return !jj_3_5();\n    } catch (final LookaheadSuccess ls) {\n        return true;\n    } finally {\n        jj_save(4, xla);\n    }\n}",boolean jj_2_5(int),"digraph cfg_jj_2_5 {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""2"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_5()>()""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""$stack8 := @caughtexception""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 != 0""];\n	""7"" [label=""l3 = 1""];\n	""8"" [label=""l4 = $stack7""];\n	""9"" [label=""ls = $stack8""];\n	""10"" [label=""ls = 0""];\n	""11"" [label=""ls = 1""];\n	""12"" [label=""return l3""];\n	""13"" [label=""return ls""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(4, xla)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(4, xla)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(4, xla)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = xla""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack5""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack5""];\n	""21"" [label=""throw l4""];\n	""22"" [label=""xla := @parameter0: int""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_except""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_except""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_2_6(int),Method,No Comment,"private boolean jj_2_6(final int xla) {\n    jj_la = xla;\n    jj_lastpos = jj_scanpos = token;\n    try {\n        return !jj_3_6();\n    } catch (final LookaheadSuccess ls) {\n        return true;\n    } finally {\n        jj_save(5, xla);\n    }\n}",boolean jj_2_6(int),"digraph cfg_jj_2_6 {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""2"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_6()>()""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""$stack8 := @caughtexception""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 != 0""];\n	""7"" [label=""l3 = 1""];\n	""8"" [label=""l4 = $stack7""];\n	""9"" [label=""ls = $stack8""];\n	""10"" [label=""ls = 0""];\n	""11"" [label=""ls = 1""];\n	""12"" [label=""return l3""];\n	""13"" [label=""return ls""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(5, xla)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(5, xla)""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_save(int,int)>(5, xla)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = xla""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack5""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack5""];\n	""21"" [label=""throw l4""];\n	""22"" [label=""xla := @parameter0: int""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_except""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_except""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_2(),Method,No Comment,private boolean jj_3_2() {\n    if (jj_3R_16()) {\n        return true;\n    }\n    return false;\n},boolean jj_3_2(),"digraph cfg_jj_3_2 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_16()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_144(),Method,No Comment,private boolean jj_3R_144() {\n    if (jj_3R_16()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_144(),"digraph cfg_jj_3R_144 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_16()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_143(),Method,No Comment,private boolean jj_3R_143() {\n    if (jj_3R_77()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_143(),"digraph cfg_jj_3R_143 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_77()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_150(),Method,No Comment,private boolean jj_3R_150() {\n    if (jj_3R_16()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_151()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_150(),"digraph cfg_jj_3R_150 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_16()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_151()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_132(),Method,No Comment,private boolean jj_3R_132() {\n    if (jj_scan_token(MINUS)) {\n        return true;\n    }\n    if (jj_3R_129()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_132(),"digraph cfg_jj_3R_132 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(10)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_129()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_130(),Method,No Comment,private boolean jj_3R_130() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_133()) {\n        jj_scanpos = xsp;\n        if (jj_3R_134()) {\n            jj_scanpos = xsp;\n            if (jj_3R_135()) {\n                return true;\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_130(),"digraph cfg_jj_3R_130 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_133()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_134()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_135()>()""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""12"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_false""];\n	""4"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_148(),Method,No Comment,private boolean jj_3R_148() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_150()) {\n        jj_scanpos = xsp;\n        if (jj_scan_token(6)) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_148(),"digraph cfg_jj_3R_148 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_150()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(6)""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_131(),Method,No Comment,private boolean jj_3R_131() {\n    if (jj_3R_136()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_131(),"digraph cfg_jj_3R_131 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_136()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_64(),Method,No Comment,private boolean jj_3R_64() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_scan_token(79)) {\n        jj_scanpos = xsp;\n        if (jj_scan_token(27)) {\n            jj_scanpos = xsp;\n            if (jj_scan_token(28)) {\n                jj_scanpos = xsp;\n                if (jj_scan_token(29)) {\n                    jj_scanpos = xsp;\n                    if (jj_scan_token(30)) {\n                        return true;\n                    }\n                }\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_64(),"digraph cfg_jj_3R_64 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(79)""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(27)""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(28)""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(29)""];\n	""5"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(30)""];\n	""6"" [label=""if $stack2 == 0""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if $stack5 == 0""];\n	""10"" [label=""if $stack6 == 0""];\n	""11"" [label=""return 0""];\n	""12"" [label=""return 1""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""18"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""12""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""16"" -> ""4""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_true""];\n	""6"" -> ""14""[label=""cfg_false""];\n	""7"" -> ""11""[label=""cfg_true""];\n	""7"" -> ""15""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""16""[label=""cfg_false""];\n	""9"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""17""[label=""cfg_false""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_113(),Method,No Comment,private boolean jj_3R_113() {\n    if (jj_scan_token(87)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_113(),"digraph cfg_jj_3R_113 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(87)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_91(),Method,No Comment,private boolean jj_3R_91() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_113()) {\n        jj_scanpos = xsp;\n    }\n    return false;\n},boolean jj_3R_91(),"digraph cfg_jj_3R_91 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_113()>()""];\n	""2"" [label=""if $stack2 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""6"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""5""[label=""cfg_false""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_141(),Method,No Comment,private boolean jj_3R_141() {\n    if (jj_3R_19()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_143()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_144()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_141(),"digraph cfg_jj_3R_141 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_19()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_143()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_144()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 == 0""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""return 0""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""14"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""15"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_goto""];\n	""5"" -> ""9""[label=""cfg_goto""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""14""[label=""cfg_true""];\n	""7"" -> ""12""[label=""cfg_false""];\n	""7"" -> ""14""[label=""cfg_true""];\n	""8"" -> ""13""[label=""cfg_false""];\n	""8"" -> ""15""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_129(),Method,No Comment,private boolean jj_3R_129() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_131()) {\n        jj_scanpos = xsp;\n        if (jj_3R_132()) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_129(),"digraph cfg_jj_3R_129 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_131()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_132()>()""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_6(),Method,No Comment,private boolean jj_3_6() {\n    if (jj_3R_19()) {\n        return true;\n    }\n    return false;\n},boolean jj_3_6(),"digraph cfg_jj_3_6 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_19()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_146(),Method,No Comment,private boolean jj_3R_146() {\n    if (jj_3R_148()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_146(),"digraph cfg_jj_3R_146 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_148()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_135(),Method,No Comment,private boolean jj_3R_135() {\n    if (jj_scan_token(MOD)) {\n        return true;\n    }\n    if (jj_3R_129()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_135(),"digraph cfg_jj_3R_135 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(29)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_129()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_145(),Method,No Comment,private boolean jj_3R_145() {\n    if (jj_3R_147()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_145(),"digraph cfg_jj_3R_145 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_147()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_134(),Method,No Comment,private boolean jj_3R_134() {\n    if (jj_scan_token(DIV)) {\n        return true;\n    }\n    if (jj_3R_129()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_134(),"digraph cfg_jj_3R_134 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(30)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_129()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_133(),Method,No Comment,private boolean jj_3R_133() {\n    if (jj_scan_token(89)) {\n        return true;\n    }\n    if (jj_3R_129()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_133(),"digraph cfg_jj_3R_133 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(89)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_129()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_142(),Method,No Comment,private boolean jj_3R_142() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_145()) {\n        jj_scanpos = xsp;\n        if (jj_3R_146()) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_142(),"digraph cfg_jj_3R_142 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_145()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_146()>()""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_140(),Method,No Comment,private boolean jj_3R_140() {\n    if (jj_3R_142()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_140(),"digraph cfg_jj_3R_140 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_142()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_139(),Method,No Comment,private boolean jj_3R_139() {\n    if (jj_3R_141()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_139(),"digraph cfg_jj_3R_139 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_141()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_77(),Method,No Comment,private boolean jj_3R_77() {\n    if (jj_scan_token(85)) {\n        return true;\n    }\n    if (jj_3R_70()) {\n        return true;\n    }\n    if (jj_scan_token(86)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_77(),"digraph cfg_jj_3R_77 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(85)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_70()>()""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(86)""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_127(),Method,No Comment,private boolean jj_3R_127() {\n    if (jj_3R_129()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_130()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_127(),"digraph cfg_jj_3R_127 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_129()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_130()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_137(),Method,No Comment,private boolean jj_3R_137() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_139()) {\n        jj_scanpos = xsp;\n        if (jj_3R_140()) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_137(),"digraph cfg_jj_3R_137 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_139()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_140()>()""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_128(),Method,No Comment,private boolean jj_3R_128() {\n    if (jj_scan_token(MINUS)) {\n        return true;\n    }\n    if (jj_3R_127()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_128(),"digraph cfg_jj_3R_128 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(10)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_127()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_112(),Method,No Comment,private boolean jj_3R_112() {\n    if (jj_scan_token(AXIS_DESCENDANT_OR_SELF)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_112(),"digraph cfg_jj_3R_112 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(47)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_111(),Method,No Comment,private boolean jj_3R_111() {\n    if (jj_scan_token(AXIS_PRECEDING_SIBLING)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_111(),"digraph cfg_jj_3R_111 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(46)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_110(),Method,No Comment,private boolean jj_3R_110() {\n    if (jj_scan_token(AXIS_FOLLOWING_SIBLING)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_110(),"digraph cfg_jj_3R_110 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(45)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_122(),Method,No Comment,private boolean jj_3R_122() {\n    if (jj_scan_token(PLUS)) {\n        return true;\n    }\n    if (jj_3R_121()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_122(),"digraph cfg_jj_3R_122 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(9)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_121()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_109(),Method,No Comment,private boolean jj_3R_109() {\n    if (jj_scan_token(AXIS_ANCESTOR_OR_SELF)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_109(),"digraph cfg_jj_3R_109 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(44)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_108(),Method,No Comment,private boolean jj_3R_108() {\n    if (jj_scan_token(AXIS_DESCENDANT)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_108(),"digraph cfg_jj_3R_108 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(43)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_107(),Method,No Comment,private boolean jj_3R_107() {\n    if (jj_scan_token(AXIS_FOLLOWING)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_107(),"digraph cfg_jj_3R_107 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(42)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_106(),Method,No Comment,private boolean jj_3R_106() {\n    if (jj_scan_token(AXIS_PRECEDING)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_106(),"digraph cfg_jj_3R_106 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(41)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_121(),Method,No Comment,private boolean jj_3R_121() {\n    if (jj_3R_127()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_128()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_121(),"digraph cfg_jj_3R_121 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_127()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_128()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_105(),Method,No Comment,private boolean jj_3R_105() {\n    if (jj_scan_token(AXIS_NAMESPACE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_105(),"digraph cfg_jj_3R_105 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(40)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_104(),Method,No Comment,private boolean jj_3R_104() {\n    if (jj_scan_token(AXIS_ATTRIBUTE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_104(),"digraph cfg_jj_3R_104 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(39)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_103(),Method,No Comment,private boolean jj_3R_103() {\n    if (jj_scan_token(AXIS_ANCESTOR)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_103(),"digraph cfg_jj_3R_103 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(38)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_20(),Method,No Comment,private boolean jj_3R_20() {\n    if (jj_3R_64()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_20(),"digraph cfg_jj_3R_20 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_64()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_102(),Method,No Comment,private boolean jj_3R_102() {\n    if (jj_scan_token(AXIS_PARENT)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_102(),"digraph cfg_jj_3R_102 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(37)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_101(),Method,No Comment,private boolean jj_3R_101() {\n    if (jj_scan_token(AXIS_CHILD)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_101(),"digraph cfg_jj_3R_101 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(36)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_100(),Method,No Comment,private boolean jj_3R_100() {\n    if (jj_scan_token(AXIS_SELF)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_100(),"digraph cfg_jj_3R_100 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(35)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_138(),Method,No Comment,private boolean jj_3R_138() {\n    if (jj_scan_token(UNION)) {\n        return true;\n    }\n    if (jj_3R_137()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_138(),"digraph cfg_jj_3R_138 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(8)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_137()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_15(),Method,No Comment,private boolean jj_3R_15() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_20()) {\n        jj_scanpos = xsp;\n        if (jj_scan_token(31)) {\n            jj_scanpos = xsp;\n            if (jj_scan_token(32)) {\n                jj_scanpos = xsp;\n                if (jj_scan_token(33)) {\n                    jj_scanpos = xsp;\n                    if (jj_scan_token(34)) {\n                        jj_scanpos = xsp;\n                        if (jj_scan_token(48)) {\n                            jj_scanpos = xsp;\n                            if (jj_scan_token(49)) {\n                                jj_scanpos = xsp;\n                                if (jj_scan_token(50)) {\n                                    jj_scanpos = xsp;\n                                    if (jj_scan_token(51)) {\n                                        jj_scanpos = xsp;\n                                        if (jj_scan_token(53)) {\n                                            jj_scanpos = xsp;\n                                            if (jj_scan_token(54)) {\n                                                jj_scanpos = xsp;\n                                                if (jj_scan_token(55)) {\n                                                    jj_scanpos = xsp;\n                                                    if (jj_scan_token(56)) {\n                                                        jj_scanpos = xsp;\n                                                        if (jj_scan_token(57)) {\n                                                            jj_scanpos = xsp;\n                                                            if (jj_scan_token(58)) {\n                                                                jj_scanpos = xsp;\n                                                                if (jj_scan_token(59)) {\n                                                                    jj_scanpos = xsp;\n                                                                    if (jj_scan_token(60)) {\n                                                                        jj_scanpos = xsp;\n                                                                        if (jj_scan_token(61)) {\n                                                                            jj_scanpos = xsp;\n                                                                            if (jj_scan_token(62)) {\n                                                                                jj_scanpos = xsp;\n                                                                                if (jj_scan_token(63)) {\n                                                                                    jj_scanpos = xsp;\n                                                                                    if (jj_scan_token(64)) {\n                                                                                        jj_scanpos = xsp;\n                                                                                        if (jj_scan_token(65)) {\n                                                                                            jj_scanpos = xsp;\n                                                                                            if (jj_scan_token(66)) {\n                                                                                                jj_scanpos = xsp;\n                                                                                                if (jj_scan_token(67)) {\n                                                                                                    jj_scanpos = xsp;\n                                                                                                    if (jj_scan_token(68)) {\n                                                                                                        jj_scanpos = xsp;\n                                                                                                        if (jj_scan_token(69)) {\n                                                                                                            jj_scanpos = xsp;\n                                                                                                            if (jj_scan_token(70)) {\n                                                                                                                jj_scanpos = xsp;\n                                                                                                                if (jj_scan_token(71)) {\n                                                                                                                    jj_scanpos = xsp;\n                                                                                                                    if (jj_scan_token(72)) {\n                                                                                                                        jj_scanpos = xsp;\n                                                                                                                        if (jj_scan_token(73)) {\n                                                                                                                            jj_scanpos = xsp;\n                                                                                                                            if (jj_scan_token(74)) {\n                                                                                                                                jj_scanpos = xsp;\n                                                                                                                                if (jj_scan_token(75)) {\n                                                                                                                                    jj_scanpos = xsp;\n                                                                                                                                    if (jj_scan_token(76)) {\n                                                                                                                                        jj_scanpos = xsp;\n                                                                                                                                        if (jj_scan_token(77)) {\n                                                                                                                                            jj_scanpos = xsp;\n                                                                                                                                            if (jj_scan_token(52)) {\n                                                                                                                                                jj_scanpos = xsp;\n                                                                                                                                                if (jj_scan_token(78)) {\n                                                                                                                                                    return true;\n                                                                                                                                                }\n                                                                                                                                            }\n                                                                                                                                        }\n                                                                                                                                    }\n                                                                                                                                }\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_15(),"digraph cfg_jj_3R_15 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(51)""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(53)""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(54)""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(55)""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(56)""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(57)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(58)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(59)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(60)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(61)""];\n	""11"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_20()>()""];\n	""12"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(62)""];\n	""13"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(63)""];\n	""14"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(64)""];\n	""15"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(65)""];\n	""16"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(66)""];\n	""17"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(67)""];\n	""18"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(68)""];\n	""19"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(69)""];\n	""20"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(70)""];\n	""21"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(71)""];\n	""22"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(31)""];\n	""23"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(72)""];\n	""24"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(73)""];\n	""25"" [label=""$stack32 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(74)""];\n	""26"" [label=""$stack33 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(75)""];\n	""27"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(76)""];\n	""28"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(77)""];\n	""29"" [label=""$stack36 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(52)""];\n	""30"" [label=""$stack37 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(78)""];\n	""31"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(32)""];\n	""32"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(33)""];\n	""33"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(34)""];\n	""34"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(48)""];\n	""35"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(49)""];\n	""36"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(50)""];\n	""37"" [label=""if $stack10 == 0""];\n	""38"" [label=""if $stack11 == 0""];\n	""39"" [label=""if $stack12 == 0""];\n	""40"" [label=""if $stack13 == 0""];\n	""41"" [label=""if $stack14 == 0""];\n	""42"" [label=""if $stack15 == 0""];\n	""43"" [label=""if $stack16 == 0""];\n	""44"" [label=""if $stack17 == 0""];\n	""45"" [label=""if $stack18 == 0""];\n	""46"" [label=""if $stack19 == 0""];\n	""47"" [label=""if $stack2 == 0""];\n	""48"" [label=""if $stack20 == 0""];\n	""49"" [label=""if $stack21 == 0""];\n	""50"" [label=""if $stack22 == 0""];\n	""51"" [label=""if $stack23 == 0""];\n	""52"" [label=""if $stack24 == 0""];\n	""53"" [label=""if $stack25 == 0""];\n	""54"" [label=""if $stack26 == 0""];\n	""55"" [label=""if $stack27 == 0""];\n	""56"" [label=""if $stack28 == 0""];\n	""57"" [label=""if $stack29 == 0""];\n	""58"" [label=""if $stack3 == 0""];\n	""59"" [label=""if $stack30 == 0""];\n	""60"" [label=""if $stack31 == 0""];\n	""61"" [label=""if $stack32 == 0""];\n	""62"" [label=""if $stack33 == 0""];\n	""63"" [label=""if $stack34 == 0""];\n	""64"" [label=""if $stack35 == 0""];\n	""65"" [label=""if $stack36 == 0""];\n	""66"" [label=""if $stack37 == 0""];\n	""67"" [label=""if $stack4 == 0""];\n	""68"" [label=""if $stack5 == 0""];\n	""69"" [label=""if $stack6 == 0""];\n	""70"" [label=""if $stack7 == 0""];\n	""71"" [label=""if $stack8 == 0""];\n	""72"" [label=""if $stack9 == 0""];\n	""73"" [label=""return 0""];\n	""74"" [label=""return 1""];\n	""75"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""76"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""77"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""78"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""79"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""80"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""81"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""82"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""83"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""84"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""85"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""86"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""87"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""88"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""89"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""90"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""91"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""92"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""93"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""94"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""95"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""96"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""97"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""98"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""99"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""100"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""101"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""102"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""103"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""104"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""105"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""106"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""107"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""108"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""109"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""110"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""111"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""37""[label=""cfg_next""];\n	""10"" -> ""46""[label=""cfg_next""];\n	""100"" -> ""19""[label=""cfg_next""];\n	""101"" -> ""20""[label=""cfg_next""];\n	""102"" -> ""21""[label=""cfg_next""];\n	""103"" -> ""23""[label=""cfg_next""];\n	""104"" -> ""24""[label=""cfg_next""];\n	""105"" -> ""25""[label=""cfg_next""];\n	""106"" -> ""26""[label=""cfg_next""];\n	""107"" -> ""27""[label=""cfg_next""];\n	""108"" -> ""28""[label=""cfg_next""];\n	""109"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""47""[label=""cfg_next""];\n	""110"" -> ""30""[label=""cfg_next""];\n	""111"" -> ""11""[label=""cfg_next""];\n	""12"" -> ""48""[label=""cfg_next""];\n	""13"" -> ""49""[label=""cfg_next""];\n	""14"" -> ""50""[label=""cfg_next""];\n	""15"" -> ""51""[label=""cfg_next""];\n	""16"" -> ""52""[label=""cfg_next""];\n	""17"" -> ""53""[label=""cfg_next""];\n	""18"" -> ""54""[label=""cfg_next""];\n	""19"" -> ""55""[label=""cfg_next""];\n	""2"" -> ""38""[label=""cfg_next""];\n	""20"" -> ""56""[label=""cfg_next""];\n	""21"" -> ""57""[label=""cfg_next""];\n	""22"" -> ""58""[label=""cfg_next""];\n	""23"" -> ""59""[label=""cfg_next""];\n	""24"" -> ""60""[label=""cfg_next""];\n	""25"" -> ""61""[label=""cfg_next""];\n	""26"" -> ""62""[label=""cfg_next""];\n	""27"" -> ""63""[label=""cfg_next""];\n	""28"" -> ""64""[label=""cfg_next""];\n	""29"" -> ""65""[label=""cfg_next""];\n	""3"" -> ""39""[label=""cfg_next""];\n	""30"" -> ""66""[label=""cfg_next""];\n	""31"" -> ""67""[label=""cfg_next""];\n	""32"" -> ""68""[label=""cfg_next""];\n	""33"" -> ""69""[label=""cfg_next""];\n	""34"" -> ""70""[label=""cfg_next""];\n	""35"" -> ""71""[label=""cfg_next""];\n	""36"" -> ""72""[label=""cfg_next""];\n	""37"" -> ""73""[label=""cfg_true""];\n	""37"" -> ""84""[label=""cfg_false""];\n	""38"" -> ""73""[label=""cfg_true""];\n	""38"" -> ""85""[label=""cfg_false""];\n	""39"" -> ""73""[label=""cfg_true""];\n	""39"" -> ""86""[label=""cfg_false""];\n	""4"" -> ""40""[label=""cfg_next""];\n	""40"" -> ""73""[label=""cfg_true""];\n	""40"" -> ""87""[label=""cfg_false""];\n	""41"" -> ""73""[label=""cfg_true""];\n	""41"" -> ""88""[label=""cfg_false""];\n	""42"" -> ""73""[label=""cfg_true""];\n	""42"" -> ""89""[label=""cfg_false""];\n	""43"" -> ""73""[label=""cfg_true""];\n	""43"" -> ""90""[label=""cfg_false""];\n	""44"" -> ""73""[label=""cfg_true""];\n	""44"" -> ""91""[label=""cfg_false""];\n	""45"" -> ""73""[label=""cfg_true""];\n	""45"" -> ""92""[label=""cfg_false""];\n	""46"" -> ""73""[label=""cfg_true""];\n	""46"" -> ""93""[label=""cfg_false""];\n	""47"" -> ""73""[label=""cfg_true""];\n	""47"" -> ""76""[label=""cfg_false""];\n	""48"" -> ""73""[label=""cfg_true""];\n	""48"" -> ""94""[label=""cfg_false""];\n	""49"" -> ""73""[label=""cfg_true""];\n	""49"" -> ""95""[label=""cfg_false""];\n	""5"" -> ""41""[label=""cfg_next""];\n	""50"" -> ""73""[label=""cfg_true""];\n	""50"" -> ""96""[label=""cfg_false""];\n	""51"" -> ""73""[label=""cfg_true""];\n	""51"" -> ""97""[label=""cfg_false""];\n	""52"" -> ""73""[label=""cfg_true""];\n	""52"" -> ""98""[label=""cfg_false""];\n	""53"" -> ""73""[label=""cfg_true""];\n	""53"" -> ""99""[label=""cfg_false""];\n	""54"" -> ""100""[label=""cfg_false""];\n	""54"" -> ""73""[label=""cfg_true""];\n	""55"" -> ""101""[label=""cfg_false""];\n	""55"" -> ""73""[label=""cfg_true""];\n	""56"" -> ""102""[label=""cfg_false""];\n	""56"" -> ""73""[label=""cfg_true""];\n	""57"" -> ""103""[label=""cfg_false""];\n	""57"" -> ""73""[label=""cfg_true""];\n	""58"" -> ""73""[label=""cfg_true""];\n	""58"" -> ""77""[label=""cfg_false""];\n	""59"" -> ""104""[label=""cfg_false""];\n	""59"" -> ""73""[label=""cfg_true""];\n	""6"" -> ""42""[label=""cfg_next""];\n	""60"" -> ""105""[label=""cfg_false""];\n	""60"" -> ""73""[label=""cfg_true""];\n	""61"" -> ""106""[label=""cfg_false""];\n	""61"" -> ""73""[label=""cfg_true""];\n	""62"" -> ""107""[label=""cfg_false""];\n	""62"" -> ""73""[label=""cfg_true""];\n	""63"" -> ""108""[label=""cfg_false""];\n	""63"" -> ""73""[label=""cfg_true""];\n	""64"" -> ""109""[label=""cfg_false""];\n	""64"" -> ""73""[label=""cfg_true""];\n	""65"" -> ""110""[label=""cfg_false""];\n	""65"" -> ""73""[label=""cfg_true""];\n	""66"" -> ""73""[label=""cfg_true""];\n	""66"" -> ""74""[label=""cfg_false""];\n	""67"" -> ""73""[label=""cfg_true""];\n	""67"" -> ""78""[label=""cfg_false""];\n	""68"" -> ""73""[label=""cfg_true""];\n	""68"" -> ""79""[label=""cfg_false""];\n	""69"" -> ""73""[label=""cfg_true""];\n	""69"" -> ""80""[label=""cfg_false""];\n	""7"" -> ""43""[label=""cfg_next""];\n	""70"" -> ""73""[label=""cfg_true""];\n	""70"" -> ""81""[label=""cfg_false""];\n	""71"" -> ""73""[label=""cfg_true""];\n	""71"" -> ""82""[label=""cfg_false""];\n	""72"" -> ""73""[label=""cfg_true""];\n	""72"" -> ""83""[label=""cfg_false""];\n	""75"" -> ""111""[label=""cfg_next""];\n	""76"" -> ""22""[label=""cfg_next""];\n	""77"" -> ""31""[label=""cfg_next""];\n	""78"" -> ""32""[label=""cfg_next""];\n	""79"" -> ""33""[label=""cfg_next""];\n	""8"" -> ""44""[label=""cfg_next""];\n	""80"" -> ""34""[label=""cfg_next""];\n	""81"" -> ""35""[label=""cfg_next""];\n	""82"" -> ""36""[label=""cfg_next""];\n	""83"" -> ""1""[label=""cfg_next""];\n	""84"" -> ""2""[label=""cfg_next""];\n	""85"" -> ""3""[label=""cfg_next""];\n	""86"" -> ""4""[label=""cfg_next""];\n	""87"" -> ""5""[label=""cfg_next""];\n	""88"" -> ""6""[label=""cfg_next""];\n	""89"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""45""[label=""cfg_next""];\n	""90"" -> ""8""[label=""cfg_next""];\n	""91"" -> ""9""[label=""cfg_next""];\n	""92"" -> ""10""[label=""cfg_next""];\n	""93"" -> ""12""[label=""cfg_next""];\n	""94"" -> ""13""[label=""cfg_next""];\n	""95"" -> ""14""[label=""cfg_next""];\n	""96"" -> ""15""[label=""cfg_next""];\n	""97"" -> ""16""[label=""cfg_next""];\n	""98"" -> ""17""[label=""cfg_next""];\n	""99"" -> ""18""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_90(),Method,No Comment,private boolean jj_3R_90() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_100()) {\n        jj_scanpos = xsp;\n        if (jj_3R_101()) {\n            jj_scanpos = xsp;\n            if (jj_3R_102()) {\n                jj_scanpos = xsp;\n                if (jj_3R_103()) {\n                    jj_scanpos = xsp;\n                    if (jj_3R_104()) {\n                        jj_scanpos = xsp;\n                        if (jj_3R_105()) {\n                            jj_scanpos = xsp;\n                            if (jj_3R_106()) {\n                                jj_scanpos = xsp;\n                                if (jj_3R_107()) {\n                                    jj_scanpos = xsp;\n                                    if (jj_3R_108()) {\n                                        jj_scanpos = xsp;\n                                        if (jj_3R_109()) {\n                                            jj_scanpos = xsp;\n                                            if (jj_3R_110()) {\n                                                jj_scanpos = xsp;\n                                                if (jj_3R_111()) {\n                                                    jj_scanpos = xsp;\n                                                    if (jj_3R_112()) {\n                                                        return true;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_90(),"digraph cfg_jj_3R_90 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_108()>()""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_109()>()""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_110()>()""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_111()>()""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_112()>()""];\n	""6"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_100()>()""];\n	""7"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_101()>()""];\n	""8"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_102()>()""];\n	""9"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_103()>()""];\n	""10"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_104()>()""];\n	""11"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_105()>()""];\n	""12"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_106()>()""];\n	""13"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_107()>()""];\n	""14"" [label=""if $stack10 == 0""];\n	""15"" [label=""if $stack11 == 0""];\n	""16"" [label=""if $stack12 == 0""];\n	""17"" [label=""if $stack13 == 0""];\n	""18"" [label=""if $stack14 == 0""];\n	""19"" [label=""if $stack2 == 0""];\n	""20"" [label=""if $stack3 == 0""];\n	""21"" [label=""if $stack4 == 0""];\n	""22"" [label=""if $stack5 == 0""];\n	""23"" [label=""if $stack6 == 0""];\n	""24"" [label=""if $stack7 == 0""];\n	""25"" [label=""if $stack8 == 0""];\n	""26"" [label=""if $stack9 == 0""];\n	""27"" [label=""return 0""];\n	""28"" [label=""return 1""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""32"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""33"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""34"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""35"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""36"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""37"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""38"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""42"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""24""[label=""cfg_next""];\n	""12"" -> ""25""[label=""cfg_next""];\n	""13"" -> ""26""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_true""];\n	""14"" -> ""38""[label=""cfg_false""];\n	""15"" -> ""27""[label=""cfg_true""];\n	""15"" -> ""39""[label=""cfg_false""];\n	""16"" -> ""27""[label=""cfg_true""];\n	""16"" -> ""40""[label=""cfg_false""];\n	""17"" -> ""27""[label=""cfg_true""];\n	""17"" -> ""41""[label=""cfg_false""];\n	""18"" -> ""27""[label=""cfg_true""];\n	""18"" -> ""28""[label=""cfg_false""];\n	""19"" -> ""27""[label=""cfg_true""];\n	""19"" -> ""30""[label=""cfg_false""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""20"" -> ""27""[label=""cfg_true""];\n	""20"" -> ""31""[label=""cfg_false""];\n	""21"" -> ""27""[label=""cfg_true""];\n	""21"" -> ""32""[label=""cfg_false""];\n	""22"" -> ""27""[label=""cfg_true""];\n	""22"" -> ""33""[label=""cfg_false""];\n	""23"" -> ""27""[label=""cfg_true""];\n	""23"" -> ""34""[label=""cfg_false""];\n	""24"" -> ""27""[label=""cfg_true""];\n	""24"" -> ""35""[label=""cfg_false""];\n	""25"" -> ""27""[label=""cfg_true""];\n	""25"" -> ""36""[label=""cfg_false""];\n	""26"" -> ""27""[label=""cfg_true""];\n	""26"" -> ""37""[label=""cfg_false""];\n	""29"" -> ""42""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""30"" -> ""7""[label=""cfg_next""];\n	""31"" -> ""8""[label=""cfg_next""];\n	""32"" -> ""9""[label=""cfg_next""];\n	""33"" -> ""10""[label=""cfg_next""];\n	""34"" -> ""11""[label=""cfg_next""];\n	""35"" -> ""12""[label=""cfg_next""];\n	""36"" -> ""13""[label=""cfg_next""];\n	""37"" -> ""1""[label=""cfg_next""];\n	""38"" -> ""2""[label=""cfg_next""];\n	""39"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""40"" -> ""4""[label=""cfg_next""];\n	""41"" -> ""5""[label=""cfg_next""];\n	""42"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_136(),Method,No Comment,private boolean jj_3R_136() {\n    if (jj_3R_137()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_138()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_136(),"digraph cfg_jj_3R_136 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_137()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_138()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_118(),Method,No Comment,private boolean jj_3R_118() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_123()) {\n        jj_scanpos = xsp;\n        if (jj_3R_124()) {\n            jj_scanpos = xsp;\n            if (jj_3R_125()) {\n                jj_scanpos = xsp;\n                if (jj_3R_126()) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_118(),"digraph cfg_jj_3R_118 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_123()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_124()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_125()>()""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_126()>()""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""return 0""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""15"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""14""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_true""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_117(),Method,No Comment,private boolean jj_3R_117() {\n    if (jj_3R_121()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_122()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_117(),"digraph cfg_jj_3R_117 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_121()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_122()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_83(),Method,No Comment,private boolean jj_3R_83() {\n    if (jj_3R_91()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_83(),"digraph cfg_jj_3R_83 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_91()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_82(),Method,No Comment,private boolean jj_3R_82() {\n    if (jj_3R_90()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_82(),"digraph cfg_jj_3R_82 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_90()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_96(),Method,No Comment,private boolean jj_3R_96() {\n    if (jj_3R_70()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_96(),"digraph cfg_jj_3R_96 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_70()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_126(),Method,No Comment,private boolean jj_3R_126() {\n    if (jj_scan_token(GTE)) {\n        return true;\n    }\n    if (jj_3R_117()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_126(),"digraph cfg_jj_3R_126 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(16)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_117()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_97(),Method,No Comment,private boolean jj_3R_97() {\n    if (jj_scan_token(88)) {\n        return true;\n    }\n    if (jj_3R_96()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_97(),"digraph cfg_jj_3R_97 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(88)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_96()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_125(),Method,No Comment,private boolean jj_3R_125() {\n    if (jj_scan_token(LTE)) {\n        return true;\n    }\n    if (jj_3R_117()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_125(),"digraph cfg_jj_3R_125 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(14)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_117()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_73(),Method,No Comment,private boolean jj_3R_73() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_82()) {\n        jj_scanpos = xsp;\n        if (jj_3R_83()) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_73(),"digraph cfg_jj_3R_73 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_82()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_83()>()""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_124(),Method,No Comment,private boolean jj_3R_124() {\n    if (jj_scan_token(GT)) {\n        return true;\n    }\n    if (jj_3R_117()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_124(),"digraph cfg_jj_3R_124 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(15)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_117()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_116(),Method,No Comment,private boolean jj_3R_116() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_119()) {\n        jj_scanpos = xsp;\n        if (jj_3R_120()) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_116(),"digraph cfg_jj_3R_116 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_119()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_120()>()""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_123(),Method,No Comment,private boolean jj_3R_123() {\n    if (jj_scan_token(LT)) {\n        return true;\n    }\n    if (jj_3R_117()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_123(),"digraph cfg_jj_3R_123 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(13)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_117()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_88(),Method,No Comment,private boolean jj_3R_88() {\n    if (jj_3R_96()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_97()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_88(),"digraph cfg_jj_3R_88 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_96()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_97()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_115(),Method,No Comment,private boolean jj_3R_115() {\n    if (jj_3R_117()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_118()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_115(),"digraph cfg_jj_3R_115 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_117()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_118()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_26(),Method,No Comment,private boolean jj_3R_26() {\n    if (jj_scan_token(PI)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_26(),"digraph cfg_jj_3R_26 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(34)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_80(),Method,No Comment,private boolean jj_3R_80() {\n    if (jj_scan_token(81)) {\n        return true;\n    }\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_88()) {\n        jj_scanpos = xsp;\n    }\n    if (jj_scan_token(82)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_80(),"digraph cfg_jj_3R_80 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(81)""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_88()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(82)""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""12"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_25(),Method,No Comment,private boolean jj_3R_25() {\n    if (jj_scan_token(COMMENT)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_25(),"digraph cfg_jj_3R_25 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(33)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_24(),Method,No Comment,private boolean jj_3R_24() {\n    if (jj_scan_token(NODE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_24(),"digraph cfg_jj_3R_24 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(31)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_120(),Method,No Comment,private boolean jj_3R_120() {\n    if (jj_scan_token(NEQ)) {\n        return true;\n    }\n    if (jj_3R_115()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_120(),"digraph cfg_jj_3R_120 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(12)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_115()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_23(),Method,No Comment,private boolean jj_3R_23() {\n    if (jj_scan_token(TEXT)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_23(),"digraph cfg_jj_3R_23 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(32)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_119(),Method,No Comment,private boolean jj_3R_119() {\n    if (jj_scan_token(EQ)) {\n        return true;\n    }\n    if (jj_3R_115()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_119(),"digraph cfg_jj_3R_119 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(11)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_115()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_68(),Method,No Comment,private boolean jj_3R_68() {\n    if (jj_3R_77()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_68(),"digraph cfg_jj_3R_68 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_77()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_1(),Method,No Comment,private boolean jj_3_1() {\n    if (jj_3R_15()) {\n        return true;\n    }\n    if (jj_scan_token(80)) {\n        return true;\n    }\n    return false;\n},boolean jj_3_1(),"digraph cfg_jj_3_1 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_15()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(80)""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_4(),Method,No Comment,private boolean jj_3_4() {\n    if (jj_scan_token(PI)) {\n        return true;\n    }\n    return false;\n},boolean jj_3_4(),"digraph cfg_jj_3_4 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(34)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_3(),Method,No Comment,private boolean jj_3_3() {\n    if (jj_3R_17()) {\n        return true;\n    }\n    if (jj_scan_token(81)) {\n        return true;\n    }\n    if (jj_scan_token(82)) {\n        return true;\n    }\n    return false;\n},boolean jj_3_3(),"digraph cfg_jj_3_3 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_17()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(81)""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(82)""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_17(),Method,No Comment,private boolean jj_3R_17() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_23()) {\n        jj_scanpos = xsp;\n        if (jj_3R_24()) {\n            jj_scanpos = xsp;\n            if (jj_3R_25()) {\n                jj_scanpos = xsp;\n                if (jj_3R_26()) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_17(),"digraph cfg_jj_3R_17 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_23()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_24()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_25()>()""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_26()>()""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""return 0""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""15"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""14""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_true""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_67(),Method,No Comment,private boolean jj_3R_67() {\n    if (jj_scan_token(84)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_67(),"digraph cfg_jj_3R_67 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(84)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_114(),Method,No Comment,private boolean jj_3R_114() {\n    if (jj_3R_15()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_114(),"digraph cfg_jj_3R_114 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_15()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_66(),Method,No Comment,private boolean jj_3R_66() {\n    if (jj_scan_token(83)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_66(),"digraph cfg_jj_3R_66 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(83)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_94(),Method,No Comment,private boolean jj_3R_94() {\n    if (jj_3R_115()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_116()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_94(),"digraph cfg_jj_3R_94 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_115()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_116()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_76(),Method,No Comment,private boolean jj_3R_76() {\n    if (jj_3R_84()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_76(),"digraph cfg_jj_3R_76 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_84()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_99(),Method,No Comment,private boolean jj_3R_99() {\n    if (jj_3R_64()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_99(),"digraph cfg_jj_3R_99 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_64()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_98(),Method,No Comment,private boolean jj_3R_98() {\n    if (jj_3R_15()) {\n        return true;\n    }\n    if (jj_scan_token(80)) {\n        return true;\n    }\n    if (jj_3R_15()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_98(),"digraph cfg_jj_3R_98 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_15()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(80)""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_15()>()""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_75(),Method,No Comment,private boolean jj_3R_75() {\n    if (jj_scan_token(PI)) {\n        return true;\n    }\n    if (jj_scan_token(81)) {\n        return true;\n    }\n    if (jj_scan_token(Literal)) {\n        return true;\n    }\n    if (jj_scan_token(82)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_75(),"digraph cfg_jj_3R_75 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(34)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(81)""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(18)""];\n	""4"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(82)""];\n	""5"" [label=""if $stack1 == 0""];\n	""6"" [label=""if $stack2 == 0""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""return 0""];\n	""10"" [label=""return 1""];\n	""11"" [label=""return 1""];\n	""12"" [label=""return 1""];\n	""13"" [label=""return 1""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_false""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""12""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""13""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_92(),Method,No Comment,private boolean jj_3R_92() {\n    if (jj_3R_15()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_92(),"digraph cfg_jj_3R_92 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_15()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_74(),Method,No Comment,private boolean jj_3R_74() {\n    if (jj_3R_17()) {\n        return true;\n    }\n    if (jj_scan_token(81)) {\n        return true;\n    }\n    if (jj_scan_token(82)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_74(),"digraph cfg_jj_3R_74 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_17()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(81)""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(82)""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_71(),Method,No Comment,private boolean jj_3R_71() {\n    if (jj_3R_18()) {\n        return true;\n    }\n    if (jj_3R_80()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_71(),"digraph cfg_jj_3R_71 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_18()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_80()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_93(),Method,No Comment,private boolean jj_3R_93() {\n    if (jj_scan_token(80)) {\n        return true;\n    }\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_scan_token(89)) {\n        jj_scanpos = xsp;\n        if (jj_3R_114()) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_93(),"digraph cfg_jj_3R_93 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(80)""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(89)""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_114()>()""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""12"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_65(),Method,No Comment,private boolean jj_3R_65() {\n    if (jj_3R_73()) {\n        return true;\n    }\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_74()) {\n        jj_scanpos = xsp;\n        if (jj_3R_75()) {\n            jj_scanpos = xsp;\n            if (jj_3R_76()) {\n                return true;\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_65(),"digraph cfg_jj_3R_65 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_73()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_74()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_75()>()""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_76()>()""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""return 0""];\n	""10"" [label=""return 1""];\n	""11"" [label=""return 1""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""15"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_false""];\n	""5"" -> ""15""[label=""cfg_true""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""14""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_true""];\n	""8"" -> ""11""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_85(),Method,No Comment,private boolean jj_3R_85() {\n    if (jj_scan_token(80)) {\n        return true;\n    }\n    if (jj_3R_15()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_85(),"digraph cfg_jj_3R_85 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(80)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_15()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_89(),Method,No Comment,private boolean jj_3R_89() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_98()) {\n        jj_scanpos = xsp;\n        if (jj_3R_99()) {\n            return true;\n        }\n    }\n    return false;\n},boolean jj_3R_89(),"digraph cfg_jj_3R_89 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_98()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_99()>()""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_95(),Method,No Comment,private boolean jj_3R_95() {\n    if (jj_scan_token(AND)) {\n        return true;\n    }\n    if (jj_3R_94()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_95(),"digraph cfg_jj_3R_95 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(28)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_94()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_84(),Method,No Comment,private boolean jj_3R_84() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_scan_token(89)) {\n        jj_scanpos = xsp;\n        if (jj_3R_92()) {\n            return true;\n        }\n    }\n    xsp = jj_scanpos;\n    if (jj_3R_93()) {\n        jj_scanpos = xsp;\n    }\n    return false;\n},boolean jj_3R_84(),"digraph cfg_jj_3R_84 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(89)""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_93()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_92()>()""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""12"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""13"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_false""];\n	""4"" -> ""13""[label=""cfg_true""];\n	""5"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""13""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_22(),Method,No Comment,private boolean jj_3R_22() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_65()) {\n        jj_scanpos = xsp;\n        if (jj_3R_66()) {\n            jj_scanpos = xsp;\n            if (jj_3R_67()) {\n                return true;\n            }\n        }\n    }\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_68()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_22(),"digraph cfg_jj_3R_22 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_65()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_68()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_66()>()""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_67()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 == 0""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if $stack5 == 0""];\n	""10"" [label=""return 0""];\n	""11"" [label=""return 1""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""16"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""17"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_goto""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""17""[label=""cfg_true""];\n	""7"" -> ""15""[label=""cfg_false""];\n	""7"" -> ""17""[label=""cfg_true""];\n	""8"" -> ""14""[label=""cfg_false""];\n	""8"" -> ""17""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_false""];\n	""9"" -> ""17""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_72(),Method,No Comment,private boolean jj_3R_72() {\n    if (jj_3R_81()) {\n        return true;\n    }\n    if (jj_3R_80()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_72(),"digraph cfg_jj_3R_72 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_81()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_80()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_86(),Method,No Comment,private boolean jj_3R_86() {\n    if (jj_3R_94()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_95()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_86(),"digraph cfg_jj_3R_86 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_94()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_95()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_151(),Method,No Comment,private boolean jj_3R_151() {\n    if (jj_3R_16()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_151(),"digraph cfg_jj_3R_151 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_16()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3_5(),Method,No Comment,private boolean jj_3_5() {\n    if (jj_3R_18()) {\n        return true;\n    }\n    if (jj_scan_token(81)) {\n        return true;\n    }\n    return false;\n},boolean jj_3_5(),"digraph cfg_jj_3_5 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_18()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(81)""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_78(),Method,No Comment,private boolean jj_3R_78() {\n    if (jj_3R_15()) {\n        return true;\n    }\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_85()) {\n        jj_scanpos = xsp;\n    }\n    return false;\n},boolean jj_3R_78(),"digraph cfg_jj_3R_78 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_15()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_85()>()""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""9"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""3"" -> ""9""[label=""cfg_true""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_69(),Method,No Comment,private boolean jj_3R_69() {\n    if (jj_scan_token(VARIABLE)) {\n        return true;\n    }\n    if (jj_3R_78()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_69(),"digraph cfg_jj_3R_69 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(17)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_78()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_57(),Method,No Comment,private boolean jj_3R_57() {\n    if (jj_scan_token(FUNCTION_FORMAT_NUMBER)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_57(),"digraph cfg_jj_3R_57 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(78)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_56(),Method,No Comment,private boolean jj_3R_56() {\n    if (jj_scan_token(FUNCTION_KEY)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_56(),"digraph cfg_jj_3R_56 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(52)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_55(),Method,No Comment,private boolean jj_3R_55() {\n    if (jj_scan_token(FUNCTION_ROUND)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_55(),"digraph cfg_jj_3R_55 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(77)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_63(),Method,No Comment,private boolean jj_3R_63() {\n    if (jj_3R_72()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_63(),"digraph cfg_jj_3R_63 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_72()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_54(),Method,No Comment,private boolean jj_3R_54() {\n    if (jj_scan_token(FUNCTION_CEILING)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_54(),"digraph cfg_jj_3R_54 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(76)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_62(),Method,No Comment,private boolean jj_3R_62() {\n    if (jj_3R_71()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_62(),"digraph cfg_jj_3R_62 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_71()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_53(),Method,No Comment,private boolean jj_3R_53() {\n    if (jj_scan_token(FUNCTION_FLOOR)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_53(),"digraph cfg_jj_3R_53 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(75)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_61(),Method,No Comment,private boolean jj_3R_61() {\n    if (jj_scan_token(Number)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_61(),"digraph cfg_jj_3R_61 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(20)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_52(),Method,No Comment,private boolean jj_3R_52() {\n    if (jj_scan_token(FUNCTION_SUM)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_52(),"digraph cfg_jj_3R_52 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(74)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_21(),Method,No Comment,private boolean jj_3R_21() {\n    if (jj_scan_token(SLASHSLASH)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_21(),"digraph cfg_jj_3R_21 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(7)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_60(),Method,No Comment,private boolean jj_3R_60() {\n    if (jj_scan_token(Literal)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_60(),"digraph cfg_jj_3R_60 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(18)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_51(),Method,No Comment,private boolean jj_3R_51() {\n    if (jj_scan_token(FUNCTION_NUMBER)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_51(),"digraph cfg_jj_3R_51 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(73)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_59(),Method,No Comment,private boolean jj_3R_59() {\n    if (jj_scan_token(81)) {\n        return true;\n    }\n    if (jj_3R_70()) {\n        return true;\n    }\n    if (jj_scan_token(82)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_59(),"digraph cfg_jj_3R_59 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(81)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_70()>()""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(82)""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""return 1""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_87(),Method,No Comment,private boolean jj_3R_87() {\n    if (jj_scan_token(OR)) {\n        return true;\n    }\n    if (jj_3R_86()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_87(),"digraph cfg_jj_3R_87 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(27)""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_86()>()""];\n	""3"" [label=""if $stack1 == 0""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_50(),Method,No Comment,private boolean jj_3R_50() {\n    if (jj_scan_token(FUNCTION_LANG)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_50(),"digraph cfg_jj_3R_50 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(72)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_58(),Method,No Comment,private boolean jj_3R_58() {\n    if (jj_3R_69()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_58(),"digraph cfg_jj_3R_58 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_69()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_81(),Method,No Comment,private boolean jj_3R_81() {\n    if (jj_3R_89()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_81(),"digraph cfg_jj_3R_81 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_89()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_49(),Method,No Comment,private boolean jj_3R_49() {\n    if (jj_scan_token(FUNCTION_NULL)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_49(),"digraph cfg_jj_3R_49 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(71)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_48(),Method,No Comment,private boolean jj_3R_48() {\n    if (jj_scan_token(FUNCTION_FALSE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_48(),"digraph cfg_jj_3R_48 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(70)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_47(),Method,No Comment,private boolean jj_3R_47() {\n    if (jj_scan_token(FUNCTION_TRUE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_47(),"digraph cfg_jj_3R_47 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(69)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_46(),Method,No Comment,private boolean jj_3R_46() {\n    if (jj_scan_token(FUNCTION_NOT)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_46(),"digraph cfg_jj_3R_46 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(68)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_16(),Method,No Comment,private boolean jj_3R_16() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_scan_token(6)) {\n        jj_scanpos = xsp;\n        if (jj_3R_21()) {\n            return true;\n        }\n    }\n    if (jj_3R_22()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_16(),"digraph cfg_jj_3R_16 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(6)""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_22()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_21()>()""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""return 0""];\n	""8"" [label=""return 1""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""12"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_149(),Method,No Comment,private boolean jj_3R_149() {\n    if (jj_3R_16()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_149(),"digraph cfg_jj_3R_149 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_16()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_45(),Method,No Comment,private boolean jj_3R_45() {\n    if (jj_scan_token(FUNCTION_BOOLEAN)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_45(),"digraph cfg_jj_3R_45 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(67)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_44(),Method,No Comment,private boolean jj_3R_44() {\n    if (jj_scan_token(FUNCTION_TRANSLATE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_44(),"digraph cfg_jj_3R_44 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(66)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_19(),Method,No Comment,private boolean jj_3R_19() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_58()) {\n        jj_scanpos = xsp;\n        if (jj_3R_59()) {\n            jj_scanpos = xsp;\n            if (jj_3R_60()) {\n                jj_scanpos = xsp;\n                if (jj_3R_61()) {\n                    jj_scanpos = xsp;\n                    if (jj_3R_62()) {\n                        jj_scanpos = xsp;\n                        if (jj_3R_63()) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_19(),"digraph cfg_jj_3R_19 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_58()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_59()>()""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_60()>()""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_61()>()""];\n	""5"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_62()>()""];\n	""6"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_63()>()""];\n	""7"" [label=""if $stack2 == 0""];\n	""8"" [label=""if $stack3 == 0""];\n	""9"" [label=""if $stack4 == 0""];\n	""10"" [label=""if $stack5 == 0""];\n	""11"" [label=""if $stack6 == 0""];\n	""12"" [label=""if $stack7 == 0""];\n	""13"" [label=""return 0""];\n	""14"" [label=""return 1""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""21"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_true""];\n	""10"" -> ""19""[label=""cfg_false""];\n	""11"" -> ""13""[label=""cfg_true""];\n	""11"" -> ""20""[label=""cfg_false""];\n	""12"" -> ""13""[label=""cfg_true""];\n	""12"" -> ""14""[label=""cfg_false""];\n	""15"" -> ""21""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_true""];\n	""7"" -> ""16""[label=""cfg_false""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""17""[label=""cfg_false""];\n	""9"" -> ""13""[label=""cfg_true""];\n	""9"" -> ""18""[label=""cfg_false""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_43(),Method,No Comment,private boolean jj_3R_43() {\n    if (jj_scan_token(FUNCTION_NORMALIZE_SPACE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_43(),"digraph cfg_jj_3R_43 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(65)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_42(),Method,No Comment,private boolean jj_3R_42() {\n    if (jj_scan_token(FUNCTION_STRING_LENGTH)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_42(),"digraph cfg_jj_3R_42 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(64)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_41(),Method,No Comment,private boolean jj_3R_41() {\n    if (jj_scan_token(FUNCTION_SUBSTRING)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_41(),"digraph cfg_jj_3R_41 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(63)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_40(),Method,No Comment,private boolean jj_3R_40() {\n    if (jj_scan_token(FUNCTION_SUBSTRING_AFTER)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_40(),"digraph cfg_jj_3R_40 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(62)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_79(),Method,No Comment,private boolean jj_3R_79() {\n    if (jj_3R_86()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_87()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_79(),"digraph cfg_jj_3R_79 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_86()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_87()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_39(),Method,No Comment,private boolean jj_3R_39() {\n    if (jj_scan_token(FUNCTION_SUBSTRING_BEFORE)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_39(),"digraph cfg_jj_3R_39 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(61)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_38(),Method,No Comment,private boolean jj_3R_38() {\n    if (jj_scan_token(FUNCTION_CONTAINS)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_38(),"digraph cfg_jj_3R_38 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(60)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_37(),Method,No Comment,private boolean jj_3R_37() {\n    if (jj_scan_token(FUNCTION_ENDS_WITH)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_37(),"digraph cfg_jj_3R_37 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(59)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_36(),Method,No Comment,private boolean jj_3R_36() {\n    if (jj_scan_token(FUNCTION_STARTS_WITH)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_36(),"digraph cfg_jj_3R_36 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(58)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_35(),Method,No Comment,private boolean jj_3R_35() {\n    if (jj_scan_token(FUNCTION_CONCAT)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_35(),"digraph cfg_jj_3R_35 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(57)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_34(),Method,No Comment,private boolean jj_3R_34() {\n    if (jj_scan_token(FUNCTION_STRING)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_34(),"digraph cfg_jj_3R_34 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(56)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_33(),Method,No Comment,private boolean jj_3R_33() {\n    if (jj_scan_token(FUNCTION_NAME)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_33(),"digraph cfg_jj_3R_33 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(55)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_32(),Method,No Comment,private boolean jj_3R_32() {\n    if (jj_scan_token(FUNCTION_NAMESPACE_URI)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_32(),"digraph cfg_jj_3R_32 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(54)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_31(),Method,No Comment,private boolean jj_3R_31() {\n    if (jj_scan_token(FUNCTION_LOCAL_NAME)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_31(),"digraph cfg_jj_3R_31 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(53)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_70(),Method,No Comment,private boolean jj_3R_70() {\n    if (jj_3R_79()) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_70(),"digraph cfg_jj_3R_70 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_79()>()""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_30(),Method,No Comment,private boolean jj_3R_30() {\n    if (jj_scan_token(FUNCTION_ID)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_30(),"digraph cfg_jj_3R_30 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(51)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_29(),Method,No Comment,private boolean jj_3R_29() {\n    if (jj_scan_token(FUNCTION_COUNT)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_29(),"digraph cfg_jj_3R_29 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(50)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_28(),Method,No Comment,private boolean jj_3R_28() {\n    if (jj_scan_token(FUNCTION_POSITION)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_28(),"digraph cfg_jj_3R_28 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(49)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_27(),Method,No Comment,private boolean jj_3R_27() {\n    if (jj_scan_token(FUNCTION_LAST)) {\n        return true;\n    }\n    return false;\n},boolean jj_3R_27(),"digraph cfg_jj_3R_27 {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_scan_token(int)>(48)""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_147(),Method,No Comment,private boolean jj_3R_147() {\n    if (jj_3R_22()) {\n        return true;\n    }\n    Token xsp;\n    while (true) {\n        xsp = jj_scanpos;\n        if (jj_3R_149()) {\n            jj_scanpos = xsp;\n            break;\n        }\n    }\n    return false;\n},boolean jj_3R_147(),"digraph cfg_jj_3R_147 {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_22()>()""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_149()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack2 == 0""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""return 0""];\n	""7"" [label=""return 1""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""10"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_3R_18(),Method,No Comment,private boolean jj_3R_18() {\n    Token xsp;\n    xsp = jj_scanpos;\n    if (jj_3R_27()) {\n        jj_scanpos = xsp;\n        if (jj_3R_28()) {\n            jj_scanpos = xsp;\n            if (jj_3R_29()) {\n                jj_scanpos = xsp;\n                if (jj_3R_30()) {\n                    jj_scanpos = xsp;\n                    if (jj_3R_31()) {\n                        jj_scanpos = xsp;\n                        if (jj_3R_32()) {\n                            jj_scanpos = xsp;\n                            if (jj_3R_33()) {\n                                jj_scanpos = xsp;\n                                if (jj_3R_34()) {\n                                    jj_scanpos = xsp;\n                                    if (jj_3R_35()) {\n                                        jj_scanpos = xsp;\n                                        if (jj_3R_36()) {\n                                            jj_scanpos = xsp;\n                                            if (jj_3R_37()) {\n                                                jj_scanpos = xsp;\n                                                if (jj_3R_38()) {\n                                                    jj_scanpos = xsp;\n                                                    if (jj_3R_39()) {\n                                                        jj_scanpos = xsp;\n                                                        if (jj_3R_40()) {\n                                                            jj_scanpos = xsp;\n                                                            if (jj_3R_41()) {\n                                                                jj_scanpos = xsp;\n                                                                if (jj_3R_42()) {\n                                                                    jj_scanpos = xsp;\n                                                                    if (jj_3R_43()) {\n                                                                        jj_scanpos = xsp;\n                                                                        if (jj_3R_44()) {\n                                                                            jj_scanpos = xsp;\n                                                                            if (jj_3R_45()) {\n                                                                                jj_scanpos = xsp;\n                                                                                if (jj_3R_46()) {\n                                                                                    jj_scanpos = xsp;\n                                                                                    if (jj_3R_47()) {\n                                                                                        jj_scanpos = xsp;\n                                                                                        if (jj_3R_48()) {\n                                                                                            jj_scanpos = xsp;\n                                                                                            if (jj_3R_49()) {\n                                                                                                jj_scanpos = xsp;\n                                                                                                if (jj_3R_50()) {\n                                                                                                    jj_scanpos = xsp;\n                                                                                                    if (jj_3R_51()) {\n                                                                                                        jj_scanpos = xsp;\n                                                                                                        if (jj_3R_52()) {\n                                                                                                            jj_scanpos = xsp;\n                                                                                                            if (jj_3R_53()) {\n                                                                                                                jj_scanpos = xsp;\n                                                                                                                if (jj_3R_54()) {\n                                                                                                                    jj_scanpos = xsp;\n                                                                                                                    if (jj_3R_55()) {\n                                                                                                                        jj_scanpos = xsp;\n                                                                                                                        if (jj_3R_56()) {\n                                                                                                                            jj_scanpos = xsp;\n                                                                                                                            if (jj_3R_57()) {\n                                                                                                                                return true;\n                                                                                                                            }\n                                                                                                                        }\n                                                                                                                    }\n                                                                                                                }\n                                                                                                            }\n                                                                                                        }\n                                                                                                    }\n                                                                                                }\n                                                                                            }\n                                                                                        }\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return false;\n},boolean jj_3R_18(),"digraph cfg_jj_3R_18 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_35()>()""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_36()>()""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_37()>()""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_38()>()""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_39()>()""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_40()>()""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_41()>()""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_42()>()""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_43()>()""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_44()>()""];\n	""11"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_27()>()""];\n	""12"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_45()>()""];\n	""13"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_46()>()""];\n	""14"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_47()>()""];\n	""15"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_48()>()""];\n	""16"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_49()>()""];\n	""17"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_50()>()""];\n	""18"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_51()>()""];\n	""19"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_52()>()""];\n	""20"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_53()>()""];\n	""21"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_54()>()""];\n	""22"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_28()>()""];\n	""23"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_55()>()""];\n	""24"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_56()>()""];\n	""25"" [label=""$stack32 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_57()>()""];\n	""26"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_29()>()""];\n	""27"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_30()>()""];\n	""28"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_31()>()""];\n	""29"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_32()>()""];\n	""30"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_33()>()""];\n	""31"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3R_34()>()""];\n	""32"" [label=""if $stack10 == 0""];\n	""33"" [label=""if $stack11 == 0""];\n	""34"" [label=""if $stack12 == 0""];\n	""35"" [label=""if $stack13 == 0""];\n	""36"" [label=""if $stack14 == 0""];\n	""37"" [label=""if $stack15 == 0""];\n	""38"" [label=""if $stack16 == 0""];\n	""39"" [label=""if $stack17 == 0""];\n	""40"" [label=""if $stack18 == 0""];\n	""41"" [label=""if $stack19 == 0""];\n	""42"" [label=""if $stack2 == 0""];\n	""43"" [label=""if $stack20 == 0""];\n	""44"" [label=""if $stack21 == 0""];\n	""45"" [label=""if $stack22 == 0""];\n	""46"" [label=""if $stack23 == 0""];\n	""47"" [label=""if $stack24 == 0""];\n	""48"" [label=""if $stack25 == 0""];\n	""49"" [label=""if $stack26 == 0""];\n	""50"" [label=""if $stack27 == 0""];\n	""51"" [label=""if $stack28 == 0""];\n	""52"" [label=""if $stack29 == 0""];\n	""53"" [label=""if $stack3 == 0""];\n	""54"" [label=""if $stack30 == 0""];\n	""55"" [label=""if $stack31 == 0""];\n	""56"" [label=""if $stack32 == 0""];\n	""57"" [label=""if $stack4 == 0""];\n	""58"" [label=""if $stack5 == 0""];\n	""59"" [label=""if $stack6 == 0""];\n	""60"" [label=""if $stack7 == 0""];\n	""61"" [label=""if $stack8 == 0""];\n	""62"" [label=""if $stack9 == 0""];\n	""63"" [label=""return 0""];\n	""64"" [label=""return 1""];\n	""65"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""66"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""67"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""68"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""69"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""70"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""71"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""72"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""73"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""74"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""75"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""76"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""77"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""78"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""79"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""80"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""81"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""82"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""83"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""84"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""85"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""86"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""87"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""88"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""89"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""90"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""91"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""92"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""93"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""94"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""95"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = xsp""];\n	""96"" [label=""xsp = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""1"" -> ""32""[label=""cfg_next""];\n	""10"" -> ""41""[label=""cfg_next""];\n	""11"" -> ""42""[label=""cfg_next""];\n	""12"" -> ""43""[label=""cfg_next""];\n	""13"" -> ""44""[label=""cfg_next""];\n	""14"" -> ""45""[label=""cfg_next""];\n	""15"" -> ""46""[label=""cfg_next""];\n	""16"" -> ""47""[label=""cfg_next""];\n	""17"" -> ""48""[label=""cfg_next""];\n	""18"" -> ""49""[label=""cfg_next""];\n	""19"" -> ""50""[label=""cfg_next""];\n	""2"" -> ""33""[label=""cfg_next""];\n	""20"" -> ""51""[label=""cfg_next""];\n	""21"" -> ""52""[label=""cfg_next""];\n	""22"" -> ""53""[label=""cfg_next""];\n	""23"" -> ""54""[label=""cfg_next""];\n	""24"" -> ""55""[label=""cfg_next""];\n	""25"" -> ""56""[label=""cfg_next""];\n	""26"" -> ""57""[label=""cfg_next""];\n	""27"" -> ""58""[label=""cfg_next""];\n	""28"" -> ""59""[label=""cfg_next""];\n	""29"" -> ""60""[label=""cfg_next""];\n	""3"" -> ""34""[label=""cfg_next""];\n	""30"" -> ""61""[label=""cfg_next""];\n	""31"" -> ""62""[label=""cfg_next""];\n	""32"" -> ""63""[label=""cfg_true""];\n	""32"" -> ""74""[label=""cfg_false""];\n	""33"" -> ""63""[label=""cfg_true""];\n	""33"" -> ""75""[label=""cfg_false""];\n	""34"" -> ""63""[label=""cfg_true""];\n	""34"" -> ""76""[label=""cfg_false""];\n	""35"" -> ""63""[label=""cfg_true""];\n	""35"" -> ""77""[label=""cfg_false""];\n	""36"" -> ""63""[label=""cfg_true""];\n	""36"" -> ""78""[label=""cfg_false""];\n	""37"" -> ""63""[label=""cfg_true""];\n	""37"" -> ""79""[label=""cfg_false""];\n	""38"" -> ""63""[label=""cfg_true""];\n	""38"" -> ""80""[label=""cfg_false""];\n	""39"" -> ""63""[label=""cfg_true""];\n	""39"" -> ""81""[label=""cfg_false""];\n	""4"" -> ""35""[label=""cfg_next""];\n	""40"" -> ""63""[label=""cfg_true""];\n	""40"" -> ""82""[label=""cfg_false""];\n	""41"" -> ""63""[label=""cfg_true""];\n	""41"" -> ""83""[label=""cfg_false""];\n	""42"" -> ""63""[label=""cfg_true""];\n	""42"" -> ""66""[label=""cfg_false""];\n	""43"" -> ""63""[label=""cfg_true""];\n	""43"" -> ""84""[label=""cfg_false""];\n	""44"" -> ""63""[label=""cfg_true""];\n	""44"" -> ""85""[label=""cfg_false""];\n	""45"" -> ""63""[label=""cfg_true""];\n	""45"" -> ""86""[label=""cfg_false""];\n	""46"" -> ""63""[label=""cfg_true""];\n	""46"" -> ""87""[label=""cfg_false""];\n	""47"" -> ""63""[label=""cfg_true""];\n	""47"" -> ""88""[label=""cfg_false""];\n	""48"" -> ""63""[label=""cfg_true""];\n	""48"" -> ""89""[label=""cfg_false""];\n	""49"" -> ""63""[label=""cfg_true""];\n	""49"" -> ""90""[label=""cfg_false""];\n	""5"" -> ""36""[label=""cfg_next""];\n	""50"" -> ""63""[label=""cfg_true""];\n	""50"" -> ""91""[label=""cfg_false""];\n	""51"" -> ""63""[label=""cfg_true""];\n	""51"" -> ""92""[label=""cfg_false""];\n	""52"" -> ""63""[label=""cfg_true""];\n	""52"" -> ""93""[label=""cfg_false""];\n	""53"" -> ""63""[label=""cfg_true""];\n	""53"" -> ""67""[label=""cfg_false""];\n	""54"" -> ""63""[label=""cfg_true""];\n	""54"" -> ""94""[label=""cfg_false""];\n	""55"" -> ""63""[label=""cfg_true""];\n	""55"" -> ""95""[label=""cfg_false""];\n	""56"" -> ""63""[label=""cfg_true""];\n	""56"" -> ""64""[label=""cfg_false""];\n	""57"" -> ""63""[label=""cfg_true""];\n	""57"" -> ""68""[label=""cfg_false""];\n	""58"" -> ""63""[label=""cfg_true""];\n	""58"" -> ""69""[label=""cfg_false""];\n	""59"" -> ""63""[label=""cfg_true""];\n	""59"" -> ""70""[label=""cfg_false""];\n	""6"" -> ""37""[label=""cfg_next""];\n	""60"" -> ""63""[label=""cfg_true""];\n	""60"" -> ""71""[label=""cfg_false""];\n	""61"" -> ""63""[label=""cfg_true""];\n	""61"" -> ""72""[label=""cfg_false""];\n	""62"" -> ""63""[label=""cfg_true""];\n	""62"" -> ""73""[label=""cfg_false""];\n	""65"" -> ""96""[label=""cfg_next""];\n	""66"" -> ""22""[label=""cfg_next""];\n	""67"" -> ""26""[label=""cfg_next""];\n	""68"" -> ""27""[label=""cfg_next""];\n	""69"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""38""[label=""cfg_next""];\n	""70"" -> ""29""[label=""cfg_next""];\n	""71"" -> ""30""[label=""cfg_next""];\n	""72"" -> ""31""[label=""cfg_next""];\n	""73"" -> ""1""[label=""cfg_next""];\n	""74"" -> ""2""[label=""cfg_next""];\n	""75"" -> ""3""[label=""cfg_next""];\n	""76"" -> ""4""[label=""cfg_next""];\n	""77"" -> ""5""[label=""cfg_next""];\n	""78"" -> ""6""[label=""cfg_next""];\n	""79"" -> ""7""[label=""cfg_next""];\n	""8"" -> ""39""[label=""cfg_next""];\n	""80"" -> ""8""[label=""cfg_next""];\n	""81"" -> ""9""[label=""cfg_next""];\n	""82"" -> ""10""[label=""cfg_next""];\n	""83"" -> ""12""[label=""cfg_next""];\n	""84"" -> ""13""[label=""cfg_next""];\n	""85"" -> ""14""[label=""cfg_next""];\n	""86"" -> ""15""[label=""cfg_next""];\n	""87"" -> ""16""[label=""cfg_next""];\n	""88"" -> ""17""[label=""cfg_next""];\n	""89"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""40""[label=""cfg_next""];\n	""90"" -> ""19""[label=""cfg_next""];\n	""91"" -> ""20""[label=""cfg_next""];\n	""92"" -> ""21""[label=""cfg_next""];\n	""93"" -> ""23""[label=""cfg_next""];\n	""94"" -> ""24""[label=""cfg_next""];\n	""95"" -> ""25""[label=""cfg_next""];\n	""96"" -> ""11""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_la1_0(),Method,No Comment,"private static void jj_la1_0() {\n    jj_la1_0 = new int[] { 0xf8000000, 0x78000000, 0x0, 0x0, 0x78000000, 0xf80000c0, 0xc0, 0x40, 0xc0, 0xc0, 0xf8000000, 0xf8000000, 0x0, 0x0, 0x0, 0x0, 0x160000, 0xf8000000, 0x0, 0xf81604c0, 0x100, 0xf80000c0, 0x0, 0xc0, 0x8000000, 0x10000000, 0x1800, 0x1800, 0x1e000, 0x1e000, 0x200, 0x400, 0x60000000, 0x60000000, 0xf81604c0, 0xf8000000, 0xf8000000, 0x0, 0x80000000 };\n}",void jj_la1_0(),"digraph cfg_jj_la1_0 {\n	""1"" [label=""$stack0 = newarray (int)[39]""];\n	""2"" [label=""$stack0[0] = -134217728""];\n	""3"" [label=""$stack0[10] = -134217728""];\n	""4"" [label=""$stack0[11] = -134217728""];\n	""5"" [label=""$stack0[12] = 0""];\n	""6"" [label=""$stack0[13] = 0""];\n	""7"" [label=""$stack0[14] = 0""];\n	""8"" [label=""$stack0[15] = 0""];\n	""9"" [label=""$stack0[16] = 1441792""];\n	""10"" [label=""$stack0[17] = -134217728""];\n	""11"" [label=""$stack0[18] = 0""];\n	""12"" [label=""$stack0[19] = -132774720""];\n	""13"" [label=""$stack0[1] = 2013265920""];\n	""14"" [label=""$stack0[20] = 256""];\n	""15"" [label=""$stack0[21] = -134217536""];\n	""16"" [label=""$stack0[22] = 0""];\n	""17"" [label=""$stack0[23] = 192""];\n	""18"" [label=""$stack0[24] = 134217728""];\n	""19"" [label=""$stack0[25] = 268435456""];\n	""20"" [label=""$stack0[26] = 6144""];\n	""21"" [label=""$stack0[27] = 6144""];\n	""22"" [label=""$stack0[28] = 122880""];\n	""23"" [label=""$stack0[29] = 122880""];\n	""24"" [label=""$stack0[2] = 0""];\n	""25"" [label=""$stack0[30] = 512""];\n	""26"" [label=""$stack0[31] = 1024""];\n	""27"" [label=""$stack0[32] = 1610612736""];\n	""28"" [label=""$stack0[33] = 1610612736""];\n	""29"" [label=""$stack0[34] = -132774720""];\n	""30"" [label=""$stack0[35] = -134217728""];\n	""31"" [label=""$stack0[36] = -134217728""];\n	""32"" [label=""$stack0[37] = 0""];\n	""33"" [label=""$stack0[38] = -2147483648""];\n	""34"" [label=""$stack0[3] = 0""];\n	""35"" [label=""$stack0[4] = 2013265920""];\n	""36"" [label=""$stack0[5] = -134217536""];\n	""37"" [label=""$stack0[6] = 192""];\n	""38"" [label=""$stack0[7] = 64""];\n	""39"" [label=""$stack0[8] = 192""];\n	""40"" [label=""$stack0[9] = 192""];\n	""41"" [label=""<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1_0> = $stack0""];\n	""42"" [label=""return""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""34""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""41""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""3""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.parser.XPathParser.jj_la1_1(),Method,No Comment,"private static void jj_la1_1() {\n    jj_la1_1 = new int[] { 0xffff0007, 0x0, 0xffff0000, 0x0, 0x0, 0xffffffff, 0x0, 0x0, 0x0, 0x0, 0xffff0007, 0xffffffff, 0x0, 0xfff8, 0xfff8, 0x0, 0x0, 0xffff0007, 0x0, 0xffffffff, 0x0, 0xffffffff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xffffffff, 0xffff0007, 0xffff0007, 0x0, 0x7 };\n}",void jj_la1_1(),"digraph cfg_jj_la1_1 {\n	""1"" [label=""$stack0 = newarray (int)[39]""];\n	""2"" [label=""$stack0[0] = -65529""];\n	""3"" [label=""$stack0[10] = -65529""];\n	""4"" [label=""$stack0[11] = -1""];\n	""5"" [label=""$stack0[12] = 0""];\n	""6"" [label=""$stack0[13] = 65528""];\n	""7"" [label=""$stack0[14] = 65528""];\n	""8"" [label=""$stack0[15] = 0""];\n	""9"" [label=""$stack0[16] = 0""];\n	""10"" [label=""$stack0[17] = -65529""];\n	""11"" [label=""$stack0[18] = 0""];\n	""12"" [label=""$stack0[19] = -1""];\n	""13"" [label=""$stack0[1] = 0""];\n	""14"" [label=""$stack0[20] = 0""];\n	""15"" [label=""$stack0[21] = -1""];\n	""16"" [label=""$stack0[22] = 0""];\n	""17"" [label=""$stack0[23] = 0""];\n	""18"" [label=""$stack0[24] = 0""];\n	""19"" [label=""$stack0[25] = 0""];\n	""20"" [label=""$stack0[26] = 0""];\n	""21"" [label=""$stack0[27] = 0""];\n	""22"" [label=""$stack0[28] = 0""];\n	""23"" [label=""$stack0[29] = 0""];\n	""24"" [label=""$stack0[2] = -65536""];\n	""25"" [label=""$stack0[30] = 0""];\n	""26"" [label=""$stack0[31] = 0""];\n	""27"" [label=""$stack0[32] = 0""];\n	""28"" [label=""$stack0[33] = 0""];\n	""29"" [label=""$stack0[34] = -1""];\n	""30"" [label=""$stack0[35] = -65529""];\n	""31"" [label=""$stack0[36] = -65529""];\n	""32"" [label=""$stack0[37] = 0""];\n	""33"" [label=""$stack0[38] = 7""];\n	""34"" [label=""$stack0[3] = 0""];\n	""35"" [label=""$stack0[4] = 0""];\n	""36"" [label=""$stack0[5] = -1""];\n	""37"" [label=""$stack0[6] = 0""];\n	""38"" [label=""$stack0[7] = 0""];\n	""39"" [label=""$stack0[8] = 0""];\n	""40"" [label=""$stack0[9] = 0""];\n	""41"" [label=""<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1_1> = $stack0""];\n	""42"" [label=""return""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""34""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""41""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""3""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.parser.XPathParser.jj_la1_2(),Method,No Comment,"private static void jj_la1_2() {\n    jj_la1_2 = new int[] { 0xffff, 0x8000, 0x7fff, 0x10000, 0x8000, 0x298ffff, 0x0, 0x0, 0x0, 0x0, 0x200ffff, 0x298ffff, 0x200000, 0x0, 0x0, 0x800000, 0x20000, 0xffff, 0x1000000, 0x29affff, 0x0, 0x298ffff, 0x200000, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2000000, 0x2000000, 0x29affff, 0x200ffff, 0x200ffff, 0x10000, 0x0 };\n}",void jj_la1_2(),"digraph cfg_jj_la1_2 {\n	""1"" [label=""$stack0 = newarray (int)[39]""];\n	""2"" [label=""$stack0[0] = 65535""];\n	""3"" [label=""$stack0[10] = 33619967""];\n	""4"" [label=""$stack0[11] = 43581439""];\n	""5"" [label=""$stack0[12] = 2097152""];\n	""6"" [label=""$stack0[13] = 0""];\n	""7"" [label=""$stack0[14] = 0""];\n	""8"" [label=""$stack0[15] = 8388608""];\n	""9"" [label=""$stack0[16] = 131072""];\n	""10"" [label=""$stack0[17] = 65535""];\n	""11"" [label=""$stack0[18] = 16777216""];\n	""12"" [label=""$stack0[19] = 43712511""];\n	""13"" [label=""$stack0[1] = 32768""];\n	""14"" [label=""$stack0[20] = 0""];\n	""15"" [label=""$stack0[21] = 43581439""];\n	""16"" [label=""$stack0[22] = 2097152""];\n	""17"" [label=""$stack0[23] = 0""];\n	""18"" [label=""$stack0[24] = 0""];\n	""19"" [label=""$stack0[25] = 0""];\n	""20"" [label=""$stack0[26] = 0""];\n	""21"" [label=""$stack0[27] = 0""];\n	""22"" [label=""$stack0[28] = 0""];\n	""23"" [label=""$stack0[29] = 0""];\n	""24"" [label=""$stack0[2] = 32767""];\n	""25"" [label=""$stack0[30] = 0""];\n	""26"" [label=""$stack0[31] = 0""];\n	""27"" [label=""$stack0[32] = 33554432""];\n	""28"" [label=""$stack0[33] = 33554432""];\n	""29"" [label=""$stack0[34] = 43712511""];\n	""30"" [label=""$stack0[35] = 33619967""];\n	""31"" [label=""$stack0[36] = 33619967""];\n	""32"" [label=""$stack0[37] = 65536""];\n	""33"" [label=""$stack0[38] = 0""];\n	""34"" [label=""$stack0[3] = 65536""];\n	""35"" [label=""$stack0[4] = 32768""];\n	""36"" [label=""$stack0[5] = 43581439""];\n	""37"" [label=""$stack0[6] = 0""];\n	""38"" [label=""$stack0[7] = 0""];\n	""39"" [label=""$stack0[8] = 0""];\n	""40"" [label=""$stack0[9] = 0""];\n	""41"" [label=""<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1_2> = $stack0""];\n	""42"" [label=""return""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""34""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""41""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""3""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.parser.XPathParser.ReInit(InputStream),Method,No Comment,"public void ReInit(final java.io.InputStream stream) {\n    jj_input_stream.ReInit(stream, 1, 1);\n    token_source.ReInit(jj_input_stream);\n    token = new Token();\n    token.next = jj_nt = token_source.getNextToken();\n    jj_gen = 0;\n    for (int i = 0; i < 39; i++) {\n        jj_la1[i] = -1;\n    }\n    for (int i = 0; i < jj_2_rtns.length; i++) {\n        jj_2_rtns[i] = new JJCalls();\n    }\n}",void ReInit(java.io.InputStream),"digraph cfg_ReInit {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""2"" [label=""$stack11 = lengthof $stack10""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""5"" [label=""$stack13[i] = $stack12""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""7"" [label=""$stack14[i] = -1""];\n	""8"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream>""];\n	""9"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream>""];\n	""10"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""11"" [label=""$stack6 = new org.apache.commons.jxpath.ri.parser.Token""];\n	""12"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""13"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""14"" [label=""$stack8.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack9""];\n	""15"" [label=""$stack9 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""i = 0""];\n	""19"" [label=""i = 0""];\n	""20"" [label=""i = i + 1""];\n	""21"" [label=""i = i + 1""];\n	""22"" [label=""if i >= $stack11""];\n	""23"" [label=""if i >= 39""];\n	""24"" [label=""return""];\n	""25"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: void <init>()>()""];\n	""26"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.parser.Token: void <init>()>()""];\n	""27"" [label=""stream := @parameter0: java.io.InputStream""];\n	""28"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = 0""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack9""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack6""];\n	""32"" [label=""virtualinvoke $stack3.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ReInit(java.io.InputStream,int,int)>(stream, 1, 1)""];\n	""33"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void ReInit(org.apache.commons.jxpath.ri.parser.SimpleCharStream)>($stack4)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""29""[label=""cfg_next""];\n	""15"" -> ""30""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_goto""];\n	""17"" -> ""1""[label=""cfg_goto""];\n	""18"" -> ""23""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_next""];\n	""22"" -> ""24""[label=""cfg_true""];\n	""22"" -> ""4""[label=""cfg_false""];\n	""23"" -> ""19""[label=""cfg_true""];\n	""23"" -> ""6""[label=""cfg_false""];\n	""25"" -> ""5""[label=""cfg_next""];\n	""26"" -> ""31""[label=""cfg_next""];\n	""27"" -> ""8""[label=""cfg_next""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""29"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""25""[label=""cfg_next""];\n	""30"" -> ""14""[label=""cfg_next""];\n	""31"" -> ""13""[label=""cfg_next""];\n	""32"" -> ""10""[label=""cfg_next""];\n	""33"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""32""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.ReInit(Reader),Method,No Comment,"public void ReInit(final java.io.Reader stream) {\n    jj_input_stream.ReInit(stream, 1, 1);\n    token_source.ReInit(jj_input_stream);\n    token = new Token();\n    token.next = jj_nt = token_source.getNextToken();\n    jj_gen = 0;\n    for (int i = 0; i < 39; i++) {\n        jj_la1[i] = -1;\n    }\n    for (int i = 0; i < jj_2_rtns.length; i++) {\n        jj_2_rtns[i] = new JJCalls();\n    }\n}",void ReInit(java.io.Reader),"digraph cfg_ReInit {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""2"" [label=""$stack11 = lengthof $stack10""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""5"" [label=""$stack13[i] = $stack12""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""7"" [label=""$stack14[i] = -1""];\n	""8"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream>""];\n	""9"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream>""];\n	""10"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""11"" [label=""$stack6 = new org.apache.commons.jxpath.ri.parser.Token""];\n	""12"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""13"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""14"" [label=""$stack8.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack9""];\n	""15"" [label=""$stack9 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""i = 0""];\n	""19"" [label=""i = 0""];\n	""20"" [label=""i = i + 1""];\n	""21"" [label=""i = i + 1""];\n	""22"" [label=""if i >= $stack11""];\n	""23"" [label=""if i >= 39""];\n	""24"" [label=""return""];\n	""25"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: void <init>()>()""];\n	""26"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.parser.Token: void <init>()>()""];\n	""27"" [label=""stream := @parameter0: java.io.Reader""];\n	""28"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = 0""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack9""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack6""];\n	""32"" [label=""virtualinvoke $stack3.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int)>(stream, 1, 1)""];\n	""33"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void ReInit(org.apache.commons.jxpath.ri.parser.SimpleCharStream)>($stack4)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""29""[label=""cfg_next""];\n	""15"" -> ""30""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_goto""];\n	""17"" -> ""1""[label=""cfg_goto""];\n	""18"" -> ""23""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_next""];\n	""22"" -> ""24""[label=""cfg_true""];\n	""22"" -> ""4""[label=""cfg_false""];\n	""23"" -> ""19""[label=""cfg_true""];\n	""23"" -> ""6""[label=""cfg_false""];\n	""25"" -> ""5""[label=""cfg_next""];\n	""26"" -> ""31""[label=""cfg_next""];\n	""27"" -> ""8""[label=""cfg_next""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""29"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""25""[label=""cfg_next""];\n	""30"" -> ""14""[label=""cfg_next""];\n	""31"" -> ""13""[label=""cfg_next""];\n	""32"" -> ""10""[label=""cfg_next""];\n	""33"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""32""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.ReInit(XPathParserTokenManager),Method,No Comment,public void ReInit(final XPathParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    token.next = jj_nt = token_source.getNextToken();\n    jj_gen = 0;\n    for (int i = 0; i < 39; i++) {\n        jj_la1[i] = -1;\n    }\n    for (int i = 0; i < jj_2_rtns.length; i++) {\n        jj_2_rtns[i] = new JJCalls();\n    }\n},void ReInit(org.apache.commons.jxpath.ri.parser.XPathParserTokenManager),"digraph cfg_ReInit {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""2"" [label=""$stack10[i] = $stack9""];\n	""3"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""4"" [label=""$stack11[i] = -1""];\n	""5"" [label=""$stack3 = new org.apache.commons.jxpath.ri.parser.Token""];\n	""6"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""7"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""8"" [label=""$stack5.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack6""];\n	""9"" [label=""$stack6 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""10"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""11"" [label=""$stack8 = lengthof $stack7""];\n	""12"" [label=""$stack9 = new org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""i = 0""];\n	""16"" [label=""i = 0""];\n	""17"" [label=""i = i + 1""];\n	""18"" [label=""i = i + 1""];\n	""19"" [label=""if i >= $stack8""];\n	""20"" [label=""if i >= 39""];\n	""21"" [label=""return""];\n	""22"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.parser.Token: void <init>()>()""];\n	""23"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: void <init>()>()""];\n	""24"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = 0""];\n	""26"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack6""];\n	""27"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack3""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source> = tm""];\n	""29"" [label=""tm := @parameter0: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_goto""];\n	""14"" -> ""10""[label=""cfg_goto""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_false""];\n	""19"" -> ""21""[label=""cfg_true""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_true""];\n	""20"" -> ""3""[label=""cfg_false""];\n	""22"" -> ""27""[label=""cfg_next""];\n	""23"" -> ""2""[label=""cfg_next""];\n	""24"" -> ""29""[label=""cfg_next""];\n	""25"" -> ""15""[label=""cfg_next""];\n	""26"" -> ""8""[label=""cfg_next""];\n	""27"" -> ""7""[label=""cfg_next""];\n	""28"" -> ""5""[label=""cfg_next""];\n	""29"" -> ""28""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""26""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_consume_token(int),Method,No Comment,private Token jj_consume_token(final int kind) throws ParseException {\n    final Token oldToken = token;\n    if ((token = jj_nt).next != null) {\n        jj_nt = jj_nt.next;\n    } else {\n        jj_nt = jj_nt.next = token_source.getNextToken();\n    }\n    if (token.kind == kind) {\n        jj_gen++;\n        if (++jj_gc > 100) {\n            jj_gc = 0;\n            for (final JJCalls jj_2_rtn : jj_2_rtns) {\n                JJCalls c = jj_2_rtn;\n                while (c != null) {\n                    if (c.gen < jj_gen) {\n                        c.first = null;\n                    }\n                    c = c.next;\n                }\n            }\n        }\n        return token;\n    }\n    jj_nt = token;\n    token = oldToken;\n    jj_kind = kind;\n    throw generateParseException();\n},org.apache.commons.jxpath.ri.parser.Token jj_consume_token(int),"digraph cfg_jj_consume_token {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""3"" [label=""$stack11.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack12""];\n	""4"" [label=""$stack12 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""6"" [label=""$stack14 = $stack13.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""8"" [label=""$stack16 = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.ParseException generateParseException()>()""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""10"" [label=""$stack18 = $stack17 + 1""];\n	""11"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gc>""];\n	""12"" [label=""$stack20 = $stack19 + 1""];\n	""13"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""14"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""15"" [label=""$stack23 = c.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: int gen>""];\n	""16"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""17"" [label=""$stack25 = $stack24.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""18"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""19"" [label=""$stack9 = $stack8.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""20"" [label=""c = c.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls next>""];\n	""21"" [label=""c = jj_2_rtn""];\n	""22"" [label=""c.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.Token first> = null""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack14 != kind""];\n	""27"" [label=""if $stack20 <= 100""];\n	""28"" [label=""if $stack23 >= $stack22""];\n	""29"" [label=""if $stack9 == null""];\n	""30"" [label=""if c == null""];\n	""31"" [label=""if l5 >= l4""];\n	""32"" [label=""jj_2_rtn = l3[l5]""];\n	""33"" [label=""kind := @parameter0: int""];\n	""34"" [label=""l3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""35"" [label=""l4 = lengthof l3""];\n	""36"" [label=""l5 = 0""];\n	""37"" [label=""l5 = l5 + 1""];\n	""38"" [label=""oldToken = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""39"" [label=""return $stack21""];\n	""40"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gc> = $stack20""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gc> = 0""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = $stack18""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_kind> = kind""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack12""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack15""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack25""];\n	""48"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack8""];\n	""49"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = oldToken""];\n	""50"" [label=""throw $stack16""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""43""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""39""[label=""cfg_next""];\n	""14"" -> ""28""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""47""[label=""cfg_next""];\n	""18"" -> ""48""[label=""cfg_next""];\n	""19"" -> ""29""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""24""[label=""cfg_next""];\n	""21"" -> ""30""[label=""cfg_next""];\n	""22"" -> ""20""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_goto""];\n	""24"" -> ""30""[label=""cfg_goto""];\n	""25"" -> ""31""[label=""cfg_goto""];\n	""26"" -> ""7""[label=""cfg_true""];\n	""26"" -> ""9""[label=""cfg_false""];\n	""27"" -> ""13""[label=""cfg_true""];\n	""27"" -> ""42""[label=""cfg_false""];\n	""28"" -> ""20""[label=""cfg_true""];\n	""28"" -> ""22""[label=""cfg_false""];\n	""29"" -> ""16""[label=""cfg_false""];\n	""29"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""45""[label=""cfg_next""];\n	""30"" -> ""15""[label=""cfg_false""];\n	""30"" -> ""37""[label=""cfg_true""];\n	""31"" -> ""13""[label=""cfg_true""];\n	""31"" -> ""32""[label=""cfg_false""];\n	""32"" -> ""21""[label=""cfg_next""];\n	""33"" -> ""38""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""31""[label=""cfg_next""];\n	""37"" -> ""25""[label=""cfg_next""];\n	""38"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""33""[label=""cfg_next""];\n	""41"" -> ""27""[label=""cfg_next""];\n	""42"" -> ""34""[label=""cfg_next""];\n	""43"" -> ""11""[label=""cfg_next""];\n	""44"" -> ""8""[label=""cfg_next""];\n	""45"" -> ""5""[label=""cfg_next""];\n	""46"" -> ""49""[label=""cfg_next""];\n	""47"" -> ""23""[label=""cfg_next""];\n	""48"" -> ""19""[label=""cfg_next""];\n	""49"" -> ""44""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""26""[label=""cfg_next""];\n	""7"" -> ""46""[label=""cfg_next""];\n	""8"" -> ""50""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.jj_scan_token(int),Method,No Comment,"private boolean jj_scan_token(final int kind) {\n    if (jj_scanpos == jj_lastpos) {\n        jj_la--;\n        if (jj_scanpos.next == null) {\n            jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();\n        } else {\n            jj_lastpos = jj_scanpos = jj_scanpos.next;\n        }\n    } else {\n        jj_scanpos = jj_scanpos.next;\n    }\n    if (jj_rescan) {\n        int i = 0;\n        Token tok = token;\n        while (tok != null && tok != jj_scanpos) {\n            i++;\n            tok = tok.next;\n        }\n        if (tok != null) {\n            jj_add_error_token(kind, i);\n        }\n    }\n    if (jj_scanpos.kind != kind) {\n        return true;\n    }\n    if (jj_la == 0 && jj_scanpos == jj_lastpos) {\n        throw jj_ls;\n    }\n    return false;\n}",boolean jj_scan_token(int),"digraph cfg_jj_scan_token {\n	""1"" [label=""$stack10 = $stack9.<org.apache.commons.jxpath.ri.parser.Token: int kind>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess jj_ls>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la>""];\n	""8"" [label=""$stack17 = $stack16 - 1""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""10"" [label=""$stack19 = $stack18.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""12"" [label=""$stack21 = $stack20.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""15"" [label=""$stack23.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack24""];\n	""16"" [label=""$stack24 = virtualinvoke $stack22.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""17"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos>""];\n	""18"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""19"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""20"" [label=""$stack7 = $stack6.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""21"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_rescan>""];\n	""22"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""i = 0""];\n	""27"" [label=""i = i + 1""];\n	""28"" [label=""if $stack10 == kind""];\n	""29"" [label=""if $stack11 != 0""];\n	""30"" [label=""if $stack13 != $stack12""];\n	""31"" [label=""if $stack19 != null""];\n	""32"" [label=""if $stack5 != $stack4""];\n	""33"" [label=""if $stack8 == 0""];\n	""34"" [label=""if tok == $stack15""];\n	""35"" [label=""if tok == null""];\n	""36"" [label=""if tok == null""];\n	""37"" [label=""kind := @parameter0: int""];\n	""38"" [label=""return 0""];\n	""39"" [label=""return 1""];\n	""40"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_add_error_token(int,int)>(kind, i)""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = $stack17""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack21""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack24""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack21""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack24""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack7""];\n	""48"" [label=""throw $stack14""];\n	""49"" [label=""tok = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""50"" [label=""tok = tok.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""1"" -> ""28""[label=""cfg_next""];\n	""10"" -> ""31""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""45""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""46""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""32""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""20"" -> ""47""[label=""cfg_next""];\n	""21"" -> ""33""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_goto""];\n	""24"" -> ""21""[label=""cfg_goto""];\n	""25"" -> ""35""[label=""cfg_goto""];\n	""26"" -> ""49""[label=""cfg_next""];\n	""27"" -> ""50""[label=""cfg_next""];\n	""28"" -> ""2""[label=""cfg_true""];\n	""28"" -> ""39""[label=""cfg_false""];\n	""29"" -> ""38""[label=""cfg_true""];\n	""29"" -> ""4""[label=""cfg_false""];\n	""3"" -> ""30""[label=""cfg_next""];\n	""30"" -> ""38""[label=""cfg_true""];\n	""30"" -> ""5""[label=""cfg_false""];\n	""31"" -> ""11""[label=""cfg_true""];\n	""31"" -> ""14""[label=""cfg_false""];\n	""32"" -> ""19""[label=""cfg_true""];\n	""32"" -> ""7""[label=""cfg_false""];\n	""33"" -> ""22""[label=""cfg_true""];\n	""33"" -> ""26""[label=""cfg_false""];\n	""34"" -> ""27""[label=""cfg_false""];\n	""34"" -> ""36""[label=""cfg_true""];\n	""35"" -> ""36""[label=""cfg_true""];\n	""35"" -> ""6""[label=""cfg_false""];\n	""36"" -> ""22""[label=""cfg_true""];\n	""36"" -> ""40""[label=""cfg_false""];\n	""37"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""22""[label=""cfg_next""];\n	""41"" -> ""37""[label=""cfg_next""];\n	""42"" -> ""9""[label=""cfg_next""];\n	""43"" -> ""24""[label=""cfg_next""];\n	""44"" -> ""23""[label=""cfg_next""];\n	""45"" -> ""43""[label=""cfg_next""];\n	""46"" -> ""44""[label=""cfg_next""];\n	""47"" -> ""21""[label=""cfg_next""];\n	""49"" -> ""35""[label=""cfg_next""];\n	""5"" -> ""48""[label=""cfg_next""];\n	""50"" -> ""25""[label=""cfg_next""];\n	""6"" -> ""34""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""42""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.getNextToken(),Method,No Comment,final public Token getNextToken() {\n    if ((token = jj_nt).next != null) {\n        jj_nt = jj_nt.next;\n    } else {\n        jj_nt = jj_nt.next = token_source.getNextToken();\n    }\n    jj_gen++;\n    return token;\n},org.apache.commons.jxpath.ri.parser.Token getNextToken(),"digraph cfg_getNextToken {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""2"" [label=""$stack10 = $stack9.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""3"" [label=""$stack2 = $stack1.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""6"" [label=""$stack4.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack5""];\n	""7"" [label=""$stack5 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""8"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""9"" [label=""$stack7 = $stack6 + 1""];\n	""10"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""11"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt>""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack2 == null""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = $stack7""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack10""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack5""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack1""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_goto""];\n	""13"" -> ""11""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.getToken(int),Method,No Comment,final public Token getToken(final int index) {\n    Token t = lookingAhead ? jj_scanpos : token;\n    for (int i = 0; i < index; i++) {\n        if (t.next != null) {\n            t = t.next;\n        } else {\n            t = t.next = token_source.getNextToken();\n        }\n    }\n    return t;\n},org.apache.commons.jxpath.ri.parser.Token getToken(int),"digraph cfg_getToken {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean lookingAhead>""];\n	""2"" [label=""$stack5 = t.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""3"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""goto""];\n	""7"" [label=""goto""];\n	""8"" [label=""i = 0""];\n	""9"" [label=""i = i + 1""];\n	""10"" [label=""if $stack4 == 0""];\n	""11"" [label=""if $stack5 == null""];\n	""12"" [label=""if i >= index""];\n	""13"" [label=""index := @parameter0: int""];\n	""14"" [label=""return t""];\n	""15"" [label=""t = $stack7""];\n	""16"" [label=""t = t.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next>""];\n	""17"" [label=""t = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos>""];\n	""18"" [label=""t = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""19"" [label=""t.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack7""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_false""];\n	""10"" -> ""18""[label=""cfg_true""];\n	""11"" -> ""16""[label=""cfg_false""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""12"" -> ""14""[label=""cfg_true""];\n	""12"" -> ""2""[label=""cfg_false""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_goto""];\n	""8"" -> ""12""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","final , public "
"org.apache.commons.jxpath.ri.parser.XPathParser.jj_add_error_token(int,int)",Method,No Comment,"private void jj_add_error_token(final int kind, final int pos) {\n    if (pos >= 100) {\n        return;\n    }\n    if (pos == jj_endpos + 1) {\n        jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n        jj_expentry = new int[jj_endpos];\n        for (int i = 0; i < jj_endpos; i++) {\n            jj_expentry[i] = jj_lasttokens[i];\n        }\n        boolean exists = false;\n        for (final java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements(); ) {\n            final int[] oldentry = (int[]) e.nextElement();\n            if (oldentry.length == jj_expentry.length) {\n                exists = true;\n                for (int i = 0; i < jj_expentry.length; i++) {\n                    if (oldentry[i] != jj_expentry[i]) {\n                        exists = false;\n                        break;\n                    }\n                }\n                if (exists) {\n                    break;\n                }\n            }\n        }\n        if (!exists) {\n            jj_expentries.addElement(jj_expentry);\n        }\n        if (pos != 0) {\n            jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n        }\n    }\n}","void jj_add_error_token(int,int)","digraph cfg_jj_add_error_token {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos>""];\n	""2"" [label=""$stack11 = newarray (int)[$stack10]""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries>""];\n	""5"" [label=""$stack14 = interfaceinvoke e.<java.util.Enumeration: boolean hasMoreElements()>()""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_lasttokens>""];\n	""7"" [label=""$stack15[$stack16] = kind""];\n	""8"" [label=""$stack16 = pos - 1""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry>""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries>""];\n	""11"" [label=""$stack19 = interfaceinvoke e.<java.util.Enumeration: java.lang.Object nextElement()>()""];\n	""12"" [label=""$stack20 = (int[]) $stack19""];\n	""13"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry>""];\n	""14"" [label=""$stack22 = lengthof $stack21""];\n	""15"" [label=""$stack23 = lengthof oldentry""];\n	""16"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry>""];\n	""17"" [label=""$stack25 = lengthof $stack24""];\n	""18"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry>""];\n	""19"" [label=""$stack27 = $stack26[i_1]""];\n	""20"" [label=""$stack28 = oldentry[i_1]""];\n	""21"" [label=""$stack29 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_lasttokens>""];\n	""22"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry>""];\n	""23"" [label=""$stack30[i] = $stack31""];\n	""24"" [label=""$stack31 = $stack29[i]""];\n	""25"" [label=""$stack32 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos>""];\n	""26"" [label=""$stack33 = $stack32 + 1""];\n	""27"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_lasttokens>""];\n	""28"" [label=""$stack34[$stack32] = kind""];\n	""29"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos>""];\n	""30"" [label=""$stack8 = $stack7 + 1""];\n	""31"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos>""];\n	""32"" [label=""e = virtualinvoke $stack13.<java.util.Vector: java.util.Enumeration elements()>()""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""goto""];\n	""39"" [label=""i = 0""];\n	""40"" [label=""i = 0""];\n	""41"" [label=""i = 0""];\n	""42"" [label=""i = 1""];\n	""43"" [label=""i = i + 1""];\n	""44"" [label=""i_1 = 0""];\n	""45"" [label=""i_1 = i_1 + 1""];\n	""46"" [label=""if $stack14 == 0""];\n	""47"" [label=""if $stack23 != $stack22""];\n	""48"" [label=""if $stack28 == $stack27""];\n	""49"" [label=""if $stack9 == 0""];\n	""50"" [label=""if i != 0""];\n	""51"" [label=""if i == 0""];\n	""52"" [label=""if i >= $stack12""];\n	""53"" [label=""if i_1 >= $stack25""];\n	""54"" [label=""if pos != $stack8""];\n	""55"" [label=""if pos < 100""];\n	""56"" [label=""if pos == 0""];\n	""57"" [label=""kind := @parameter0: int""];\n	""58"" [label=""oldentry = (int[]) $stack20""];\n	""59"" [label=""pos := @parameter1: int""];\n	""60"" [label=""return""];\n	""61"" [label=""return""];\n	""62"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""63"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos> = $stack33""];\n	""64"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos> = pos""];\n	""65"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry> = $stack11""];\n	""66"" [label=""virtualinvoke $stack18.<java.util.Vector: void addElement(java.lang.Object)>($stack17)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""58""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""47""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""53""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""48""[label=""cfg_next""];\n	""2"" -> ""65""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""43""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""63""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""33""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""52""[label=""cfg_next""];\n	""30"" -> ""54""[label=""cfg_next""];\n	""31"" -> ""49""[label=""cfg_next""];\n	""32"" -> ""5""[label=""cfg_next""];\n	""33"" -> ""61""[label=""cfg_goto""];\n	""34"" -> ""3""[label=""cfg_goto""];\n	""35"" -> ""5""[label=""cfg_goto""];\n	""36"" -> ""51""[label=""cfg_goto""];\n	""37"" -> ""16""[label=""cfg_goto""];\n	""38"" -> ""50""[label=""cfg_goto""];\n	""39"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""32""[label=""cfg_next""];\n	""40"" -> ""4""[label=""cfg_next""];\n	""41"" -> ""36""[label=""cfg_next""];\n	""42"" -> ""44""[label=""cfg_next""];\n	""43"" -> ""34""[label=""cfg_next""];\n	""44"" -> ""16""[label=""cfg_next""];\n	""45"" -> ""37""[label=""cfg_next""];\n	""46"" -> ""11""[label=""cfg_false""];\n	""46"" -> ""50""[label=""cfg_true""];\n	""47"" -> ""35""[label=""cfg_true""];\n	""47"" -> ""42""[label=""cfg_false""];\n	""48"" -> ""41""[label=""cfg_false""];\n	""48"" -> ""45""[label=""cfg_true""];\n	""49"" -> ""1""[label=""cfg_false""];\n	""49"" -> ""61""[label=""cfg_true""];\n	""5"" -> ""46""[label=""cfg_next""];\n	""50"" -> ""10""[label=""cfg_false""];\n	""50"" -> ""56""[label=""cfg_true""];\n	""51"" -> ""35""[label=""cfg_true""];\n	""51"" -> ""38""[label=""cfg_false""];\n	""52"" -> ""22""[label=""cfg_false""];\n	""52"" -> ""40""[label=""cfg_true""];\n	""53"" -> ""20""[label=""cfg_false""];\n	""53"" -> ""51""[label=""cfg_true""];\n	""54"" -> ""27""[label=""cfg_false""];\n	""54"" -> ""31""[label=""cfg_true""];\n	""55"" -> ""29""[label=""cfg_true""];\n	""55"" -> ""60""[label=""cfg_false""];\n	""56"" -> ""6""[label=""cfg_false""];\n	""56"" -> ""61""[label=""cfg_true""];\n	""57"" -> ""59""[label=""cfg_next""];\n	""58"" -> ""15""[label=""cfg_next""];\n	""59"" -> ""55""[label=""cfg_next""];\n	""6"" -> ""64""[label=""cfg_next""];\n	""62"" -> ""57""[label=""cfg_next""];\n	""63"" -> ""28""[label=""cfg_next""];\n	""64"" -> ""8""[label=""cfg_next""];\n	""65"" -> ""39""[label=""cfg_next""];\n	""66"" -> ""56""[label=""cfg_next""];\n	""7"" -> ""61""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""66""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.generateParseException(),Method,No Comment,"public ParseException generateParseException() {\n    jj_expentries.removeAllElements();\n    final boolean[] la1tokens = new boolean[90];\n    for (int i = 0; i < 90; i++) {\n        la1tokens[i] = false;\n    }\n    if (jj_kind >= 0) {\n        la1tokens[jj_kind] = true;\n        jj_kind = -1;\n    }\n    for (int i = 0; i < 39; i++) {\n        if (jj_la1[i] == jj_gen) {\n            for (int j = 0; j < 32; j++) {\n                if ((jj_la1_0[i] & 1 << j) != 0) {\n                    la1tokens[j] = true;\n                }\n                if ((jj_la1_1[i] & 1 << j) != 0) {\n                    la1tokens[32 + j] = true;\n                }\n                if ((jj_la1_2[i] & 1 << j) != 0) {\n                    la1tokens[64 + j] = true;\n                }\n            }\n        }\n    }\n    for (int i = 0; i < 90; i++) {\n        if (la1tokens[i]) {\n            jj_expentry = new int[1];\n            jj_expentry[0] = i;\n            jj_expentries.addElement(jj_expentry);\n        }\n    }\n    jj_endpos = 0;\n    jj_rescan_token();\n    jj_add_error_token(0, 0);\n    final int[][] exptokseq = new int[jj_expentries.size()][];\n    for (int i = 0; i < jj_expentries.size(); i++) {\n        exptokseq[i] = (int[]) jj_expentries.elementAt(i);\n    }\n    return new ParseException(token, exptokseq, tokenImage);\n}",org.apache.commons.jxpath.ri.parser.ParseException generateParseException(),"digraph cfg_generateParseException {\n	""1"" [label=""$stack10 = <org.apache.commons.jxpath.ri.parser.XPathParser: java.lang.String[] tokenImage>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.ri.parser.ParseException""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries>""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.util.Vector: java.lang.Object elementAt(int)>(j)""];\n	""6"" [label=""$stack15 = (int[]) $stack14""];\n	""7"" [label=""$stack16 = (int[]) $stack15""];\n	""8"" [label=""$stack17 = la1tokens[i]""];\n	""9"" [label=""$stack18 = newarray (int)[1]""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry>""];\n	""11"" [label=""$stack19[0] = i""];\n	""12"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry>""];\n	""13"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries>""];\n	""14"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""15"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""16"" [label=""$stack24 = $stack22[i]""];\n	""17"" [label=""$stack25 = <org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1_0>""];\n	""18"" [label=""$stack26 = $stack25[i]""];\n	""19"" [label=""$stack27 = 1 << j""];\n	""20"" [label=""$stack28 = $stack26 & $stack27""];\n	""21"" [label=""$stack29 = <org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1_1>""];\n	""22"" [label=""$stack30 = $stack29[i]""];\n	""23"" [label=""$stack31 = 1 << j""];\n	""24"" [label=""$stack32 = $stack30 & $stack31""];\n	""25"" [label=""$stack33 = <org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1_2>""];\n	""26"" [label=""$stack34 = $stack33[i]""];\n	""27"" [label=""$stack35 = 1 << j""];\n	""28"" [label=""$stack36 = $stack34 & $stack35""];\n	""29"" [label=""$stack37 = 64 + j""];\n	""30"" [label=""$stack38 = 32 + j""];\n	""31"" [label=""$stack39 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_kind>""];\n	""32"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries>""];\n	""33"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_kind>""];\n	""34"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries>""];\n	""35"" [label=""$stack7 = virtualinvoke $stack6.<java.util.Vector: int size()>()""];\n	""36"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries>""];\n	""37"" [label=""$stack9 = virtualinvoke $stack8.<java.util.Vector: int size()>()""];\n	""38"" [label=""goto""];\n	""39"" [label=""goto""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""i = 0""];\n	""44"" [label=""i = 0""];\n	""45"" [label=""i = 0""];\n	""46"" [label=""i = i + 1""];\n	""47"" [label=""i = i + 1""];\n	""48"" [label=""i = i + 1""];\n	""49"" [label=""i = newarray (int[])[$stack7]""];\n	""50"" [label=""i[j] = $stack16""];\n	""51"" [label=""if $stack17 == 0""];\n	""52"" [label=""if $stack24 != $stack23""];\n	""53"" [label=""if $stack28 == 0""];\n	""54"" [label=""if $stack32 == 0""];\n	""55"" [label=""if $stack36 == 0""];\n	""56"" [label=""if $stack5 < 0""];\n	""57"" [label=""if i >= 39""];\n	""58"" [label=""if i >= 90""];\n	""59"" [label=""if i >= 90""];\n	""60"" [label=""if j >= $stack9""];\n	""61"" [label=""if j >= 32""];\n	""62"" [label=""j = 0""];\n	""63"" [label=""j = 0""];\n	""64"" [label=""j = j + 1""];\n	""65"" [label=""j = j + 1""];\n	""66"" [label=""la1tokens = newarray (boolean)[90]""];\n	""67"" [label=""la1tokens[$stack37] = 1""];\n	""68"" [label=""la1tokens[$stack38] = 1""];\n	""69"" [label=""la1tokens[$stack39] = 1""];\n	""70"" [label=""la1tokens[i] = 0""];\n	""71"" [label=""la1tokens[j] = 1""];\n	""72"" [label=""return $stack12""];\n	""73"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.parser.ParseException: void <init>(org.apache.commons.jxpath.ri.parser.Token,int[][],java.lang.String[])>($stack11, i, $stack10)""];\n	""74"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_add_error_token(int,int)>(0, 0)""];\n	""75"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: void jj_rescan_token()>()""];\n	""76"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""77"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_endpos> = 0""];\n	""78"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_kind> = -1""];\n	""79"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_expentry> = $stack18""];\n	""80"" [label=""virtualinvoke $stack21.<java.util.Vector: void addElement(java.lang.Object)>($stack20)""];\n	""81"" [label=""virtualinvoke $stack4.<java.util.Vector: void removeAllElements()>()""];\n	""1"" -> ""73""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""80""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""52""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""53""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""54""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""55""[label=""cfg_next""];\n	""29"" -> ""67""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""68""[label=""cfg_next""];\n	""31"" -> ""69""[label=""cfg_next""];\n	""32"" -> ""81""[label=""cfg_next""];\n	""33"" -> ""56""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""49""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""60""[label=""cfg_next""];\n	""38"" -> ""58""[label=""cfg_goto""];\n	""39"" -> ""61""[label=""cfg_goto""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""57""[label=""cfg_goto""];\n	""41"" -> ""59""[label=""cfg_goto""];\n	""42"" -> ""36""[label=""cfg_goto""];\n	""43"" -> ""58""[label=""cfg_next""];\n	""44"" -> ""57""[label=""cfg_next""];\n	""45"" -> ""59""[label=""cfg_next""];\n	""46"" -> ""38""[label=""cfg_next""];\n	""47"" -> ""40""[label=""cfg_next""];\n	""48"" -> ""41""[label=""cfg_next""];\n	""49"" -> ""63""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""65""[label=""cfg_next""];\n	""51"" -> ""48""[label=""cfg_true""];\n	""51"" -> ""9""[label=""cfg_false""];\n	""52"" -> ""47""[label=""cfg_true""];\n	""52"" -> ""62""[label=""cfg_false""];\n	""53"" -> ""21""[label=""cfg_true""];\n	""53"" -> ""71""[label=""cfg_false""];\n	""54"" -> ""25""[label=""cfg_true""];\n	""54"" -> ""30""[label=""cfg_false""];\n	""55"" -> ""29""[label=""cfg_false""];\n	""55"" -> ""64""[label=""cfg_true""];\n	""56"" -> ""31""[label=""cfg_false""];\n	""56"" -> ""44""[label=""cfg_true""];\n	""57"" -> ""14""[label=""cfg_false""];\n	""57"" -> ""45""[label=""cfg_true""];\n	""58"" -> ""33""[label=""cfg_true""];\n	""58"" -> ""70""[label=""cfg_false""];\n	""59"" -> ""77""[label=""cfg_true""];\n	""59"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""3""[label=""cfg_true""];\n	""60"" -> ""4""[label=""cfg_false""];\n	""61"" -> ""17""[label=""cfg_false""];\n	""61"" -> ""47""[label=""cfg_true""];\n	""62"" -> ""61""[label=""cfg_next""];\n	""63"" -> ""36""[label=""cfg_next""];\n	""64"" -> ""39""[label=""cfg_next""];\n	""65"" -> ""42""[label=""cfg_next""];\n	""66"" -> ""43""[label=""cfg_next""];\n	""67"" -> ""64""[label=""cfg_next""];\n	""68"" -> ""25""[label=""cfg_next""];\n	""69"" -> ""78""[label=""cfg_next""];\n	""7"" -> ""50""[label=""cfg_next""];\n	""70"" -> ""46""[label=""cfg_next""];\n	""71"" -> ""21""[label=""cfg_next""];\n	""73"" -> ""72""[label=""cfg_next""];\n	""74"" -> ""34""[label=""cfg_next""];\n	""75"" -> ""74""[label=""cfg_next""];\n	""76"" -> ""32""[label=""cfg_next""];\n	""77"" -> ""75""[label=""cfg_next""];\n	""78"" -> ""44""[label=""cfg_next""];\n	""79"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""51""[label=""cfg_next""];\n	""80"" -> ""48""[label=""cfg_next""];\n	""81"" -> ""66""[label=""cfg_next""];\n	""9"" -> ""79""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.enable_tracing(),Method,No Comment,final public void enable_tracing() {\n},void enable_tracing(),"digraph cfg_enable_tracing {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.disable_tracing(),Method,No Comment,final public void disable_tracing() {\n},void disable_tracing(),"digraph cfg_disable_tracing {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n","final , public "
org.apache.commons.jxpath.ri.parser.XPathParser.jj_rescan_token(),Method,No Comment,private void jj_rescan_token() {\n    jj_rescan = true;\n    for (int i = 0; i < 6; i++) {\n        JJCalls p = jj_2_rtns[i];\n        do {\n            if (p.gen > jj_gen) {\n                jj_la = p.arg;\n                jj_lastpos = jj_scanpos = p.first;\n                switch(i) {\n                    case 0:\n                        jj_3_1();\n                        break;\n                    case 1:\n                        jj_3_2();\n                        break;\n                    case 2:\n                        jj_3_3();\n                        break;\n                    case 3:\n                        jj_3_4();\n                        break;\n                    case 4:\n                        jj_3_5();\n                        break;\n                    case 5:\n                        jj_3_6();\n                        break;\n                }\n            }\n            p = p.next;\n        } while (p != null);\n    }\n    jj_rescan = false;\n},void jj_rescan_token(),"digraph cfg_jj_rescan_token {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""3"" [label=""$stack5 = p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: int gen>""];\n	""4"" [label=""$stack6 = p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: int arg>""];\n	""5"" [label=""$stack7 = p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.Token first>""];\n	""6"" [label=""goto""];\n	""7"" [label=""goto""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""i = 0""];\n	""13"" [label=""i = i + 1""];\n	""14"" [label=""if $stack5 <= $stack4""];\n	""15"" [label=""if i >= 6""];\n	""16"" [label=""if p != null""];\n	""17"" [label=""p = $stack3[i]""];\n	""18"" [label=""p = p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls next>""];\n	""19"" [label=""return""];\n	""20"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_1()>()""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_2()>()""];\n	""22"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_3()>()""];\n	""23"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_4()>()""];\n	""24"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_5()>()""];\n	""25"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_3_6()>()""];\n	""26"" [label=""switch(i) \{     case 0:     case 1:     case 2:     case 3:     case 4:     case 5:     default:  \}""];\n	""27"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_rescan> = 0""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_rescan> = 1""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la> = $stack6""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_lastpos> = $stack7""];\n	""32"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_scanpos> = $stack7""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_goto""];\n	""11"" -> ""15""[label=""cfg_goto""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""1""[label=""cfg_false""];\n	""15"" -> ""28""[label=""cfg_true""];\n	""16"" -> ""13""[label=""cfg_false""];\n	""16"" -> ""3""[label=""cfg_true""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""22"" -> ""8""[label=""cfg_next""];\n	""23"" -> ""9""[label=""cfg_next""];\n	""24"" -> ""10""[label=""cfg_next""];\n	""25"" -> ""18""[label=""cfg_next""];\n	""26"" -> ""18""[label=""cfg_switch""];\n	""26"" -> ""20""[label=""cfg_switch""];\n	""26"" -> ""21""[label=""cfg_switch""];\n	""26"" -> ""22""[label=""cfg_switch""];\n	""26"" -> ""23""[label=""cfg_switch""];\n	""26"" -> ""24""[label=""cfg_switch""];\n	""26"" -> ""25""[label=""cfg_switch""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""19""[label=""cfg_next""];\n	""29"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""5""[label=""cfg_next""];\n	""31"" -> ""26""[label=""cfg_next""];\n	""32"" -> ""31""[label=""cfg_next""];\n	""4"" -> ""30""[label=""cfg_next""];\n	""5"" -> ""32""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_goto""];\n	""7"" -> ""18""[label=""cfg_goto""];\n	""8"" -> ""18""[label=""cfg_goto""];\n	""9"" -> ""18""[label=""cfg_goto""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParser.jj_save(int,int)",Method,No Comment,"private void jj_save(final int index, final int xla) {\n    JJCalls p = jj_2_rtns[index];\n    while (p.gen > jj_gen) {\n        if (p.next == null) {\n            p = p.next = new JJCalls();\n            break;\n        }\n        p = p.next;\n    }\n    p.gen = jj_gen + xla - jj_la;\n    p.first = token;\n    p.arg = xla;\n}","void jj_save(int,int)","digraph cfg_jj_save {\n	""1"" [label=""$stack10 = $stack8 - $stack9""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""3"" [label=""$stack12 = p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls next>""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""7"" [label=""$stack6 = p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: int gen>""];\n	""8"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen>""];\n	""9"" [label=""$stack8 = $stack7 + xla""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_la>""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack12 != null""];\n	""14"" [label=""if $stack6 <= $stack5""];\n	""15"" [label=""index := @parameter0: int""];\n	""16"" [label=""p = $stack13""];\n	""17"" [label=""p = $stack4[index]""];\n	""18"" [label=""p = p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls next>""];\n	""19"" [label=""p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: int arg> = xla""];\n	""20"" [label=""p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: int gen> = $stack10""];\n	""21"" [label=""p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.Token first> = $stack11""];\n	""22"" [label=""p.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls next> = $stack13""];\n	""23"" [label=""return""];\n	""24"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: void <init>()>()""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""26"" [label=""xla := @parameter1: int""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_goto""];\n	""12"" -> ""7""[label=""cfg_goto""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""3""[label=""cfg_false""];\n	""14"" -> ""8""[label=""cfg_true""];\n	""15"" -> ""26""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""19"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""21""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""16""[label=""cfg_next""];\n	""24"" -> ""22""[label=""cfg_next""];\n	""25"" -> ""15""[label=""cfg_next""];\n	""26"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParser.<init>(InputStream),Constructor,No Comment,"public XPathParser(final java.io.InputStream stream) {\n    jj_input_stream = new SimpleCharStream(stream, 1, 1);\n    token_source = new XPathParserTokenManager(jj_input_stream);\n    token = new Token();\n    token.next = jj_nt = token_source.getNextToken();\n    jj_gen = 0;\n    for (int i = 0; i < 39; i++) {\n        jj_la1[i] = -1;\n    }\n    for (int i = 0; i < jj_2_rtns.length; i++) {\n        jj_2_rtns[i] = new JJCalls();\n    }\n}",void <init>(java.io.InputStream),"digraph cfg_init {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.parser.Token""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""5"" [label=""$stack13.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack14""];\n	""6"" [label=""$stack14 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""8"" [label=""$stack16 = lengthof $stack15""];\n	""9"" [label=""$stack17 = new org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""11"" [label=""$stack18[i] = $stack17""];\n	""12"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""13"" [label=""$stack19[i] = -1""];\n	""14"" [label=""$stack3 = newarray (int)[39]""];\n	""15"" [label=""$stack4 = newarray (org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls)[6]""];\n	""16"" [label=""$stack5 = new org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess""];\n	""17"" [label=""$stack6 = new java.util.Vector""];\n	""18"" [label=""$stack7 = newarray (int)[100]""];\n	""19"" [label=""$stack8 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""20"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream>""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""i = 0""];\n	""24"" [label=""i = 0""];\n	""25"" [label=""i = i + 1""];\n	""26"" [label=""i = i + 1""];\n	""27"" [label=""if i >= $stack16""];\n	""28"" [label=""if i >= 39""];\n	""29"" [label=""return""];\n	""30"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void <init>(org.apache.commons.jxpath.ri.parser.SimpleCharStream)>($stack9)""];\n	""31"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.parser.Token: void <init>()>()""];\n	""32"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess: void <init>(org.apache.commons.jxpath.ri.parser.XPathParser$1)>(null)""];\n	""34"" [label=""specialinvoke $stack6.<java.util.Vector: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void <init>(java.io.InputStream,int,int)>(stream, 1, 1)""];\n	""36"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""37"" [label=""stream := @parameter0: java.io.InputStream""];\n	""38"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_rescan> = 0""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean lookingAhead> = 0""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gc> = 0""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = 0""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_kind> = -1""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1> = $stack3""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_lasttokens> = $stack7""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries> = $stack6""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream> = $stack8""];\n	""48"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack14""];\n	""49"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack11""];\n	""50"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns> = $stack4""];\n	""51"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess jj_ls> = $stack5""];\n	""52"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source> = $stack10""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""44""[label=""cfg_next""];\n	""15"" -> ""50""[label=""cfg_next""];\n	""16"" -> ""33""[label=""cfg_next""];\n	""17"" -> ""34""[label=""cfg_next""];\n	""18"" -> ""45""[label=""cfg_next""];\n	""19"" -> ""35""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""28""[label=""cfg_goto""];\n	""22"" -> ""7""[label=""cfg_goto""];\n	""23"" -> ""28""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""22""[label=""cfg_next""];\n	""27"" -> ""10""[label=""cfg_false""];\n	""27"" -> ""29""[label=""cfg_true""];\n	""28"" -> ""12""[label=""cfg_false""];\n	""28"" -> ""24""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""30"" -> ""52""[label=""cfg_next""];\n	""31"" -> ""49""[label=""cfg_next""];\n	""32"" -> ""11""[label=""cfg_next""];\n	""33"" -> ""51""[label=""cfg_next""];\n	""34"" -> ""46""[label=""cfg_next""];\n	""35"" -> ""47""[label=""cfg_next""];\n	""36"" -> ""40""[label=""cfg_next""];\n	""37"" -> ""36""[label=""cfg_next""];\n	""38"" -> ""37""[label=""cfg_next""];\n	""39"" -> ""41""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""14""[label=""cfg_next""];\n	""41"" -> ""16""[label=""cfg_next""];\n	""42"" -> ""23""[label=""cfg_next""];\n	""43"" -> ""18""[label=""cfg_next""];\n	""44"" -> ""15""[label=""cfg_next""];\n	""45"" -> ""19""[label=""cfg_next""];\n	""46"" -> ""43""[label=""cfg_next""];\n	""47"" -> ""1""[label=""cfg_next""];\n	""48"" -> ""5""[label=""cfg_next""];\n	""49"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""42""[label=""cfg_next""];\n	""50"" -> ""39""[label=""cfg_next""];\n	""51"" -> ""17""[label=""cfg_next""];\n	""52"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""48""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.<init>(Reader),Constructor,No Comment,"public XPathParser(final java.io.Reader stream) {\n    jj_input_stream = new SimpleCharStream(stream, 1, 1);\n    token_source = new XPathParserTokenManager(jj_input_stream);\n    token = new Token();\n    token.next = jj_nt = token_source.getNextToken();\n    jj_gen = 0;\n    for (int i = 0; i < 39; i++) {\n        jj_la1[i] = -1;\n    }\n    for (int i = 0; i < jj_2_rtns.length; i++) {\n        jj_2_rtns[i] = new JJCalls();\n    }\n}",void <init>(java.io.Reader),"digraph cfg_init {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.parser.Token""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""5"" [label=""$stack13.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack14""];\n	""6"" [label=""$stack14 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""8"" [label=""$stack16 = lengthof $stack15""];\n	""9"" [label=""$stack17 = new org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""11"" [label=""$stack18[i] = $stack17""];\n	""12"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""13"" [label=""$stack19[i] = -1""];\n	""14"" [label=""$stack3 = newarray (int)[39]""];\n	""15"" [label=""$stack4 = newarray (org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls)[6]""];\n	""16"" [label=""$stack5 = new org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess""];\n	""17"" [label=""$stack6 = new java.util.Vector""];\n	""18"" [label=""$stack7 = newarray (int)[100]""];\n	""19"" [label=""$stack8 = new org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""20"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream>""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""i = 0""];\n	""24"" [label=""i = 0""];\n	""25"" [label=""i = i + 1""];\n	""26"" [label=""i = i + 1""];\n	""27"" [label=""if i >= $stack16""];\n	""28"" [label=""if i >= 39""];\n	""29"" [label=""return""];\n	""30"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void <init>(org.apache.commons.jxpath.ri.parser.SimpleCharStream)>($stack9)""];\n	""31"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.parser.Token: void <init>()>()""];\n	""32"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess: void <init>(org.apache.commons.jxpath.ri.parser.XPathParser$1)>(null)""];\n	""34"" [label=""specialinvoke $stack6.<java.util.Vector: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void <init>(java.io.Reader,int,int)>(stream, 1, 1)""];\n	""36"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""37"" [label=""stream := @parameter0: java.io.Reader""];\n	""38"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_rescan> = 0""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean lookingAhead> = 0""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gc> = 0""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = 0""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_kind> = -1""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1> = $stack3""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_lasttokens> = $stack7""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries> = $stack6""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.SimpleCharStream jj_input_stream> = $stack8""];\n	""48"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack14""];\n	""49"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack11""];\n	""50"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns> = $stack4""];\n	""51"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess jj_ls> = $stack5""];\n	""52"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source> = $stack10""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""44""[label=""cfg_next""];\n	""15"" -> ""50""[label=""cfg_next""];\n	""16"" -> ""33""[label=""cfg_next""];\n	""17"" -> ""34""[label=""cfg_next""];\n	""18"" -> ""45""[label=""cfg_next""];\n	""19"" -> ""35""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""28""[label=""cfg_goto""];\n	""22"" -> ""7""[label=""cfg_goto""];\n	""23"" -> ""28""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""22""[label=""cfg_next""];\n	""27"" -> ""10""[label=""cfg_false""];\n	""27"" -> ""29""[label=""cfg_true""];\n	""28"" -> ""12""[label=""cfg_false""];\n	""28"" -> ""24""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""30"" -> ""52""[label=""cfg_next""];\n	""31"" -> ""49""[label=""cfg_next""];\n	""32"" -> ""11""[label=""cfg_next""];\n	""33"" -> ""51""[label=""cfg_next""];\n	""34"" -> ""46""[label=""cfg_next""];\n	""35"" -> ""47""[label=""cfg_next""];\n	""36"" -> ""40""[label=""cfg_next""];\n	""37"" -> ""36""[label=""cfg_next""];\n	""38"" -> ""37""[label=""cfg_next""];\n	""39"" -> ""41""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""14""[label=""cfg_next""];\n	""41"" -> ""16""[label=""cfg_next""];\n	""42"" -> ""23""[label=""cfg_next""];\n	""43"" -> ""18""[label=""cfg_next""];\n	""44"" -> ""15""[label=""cfg_next""];\n	""45"" -> ""19""[label=""cfg_next""];\n	""46"" -> ""43""[label=""cfg_next""];\n	""47"" -> ""1""[label=""cfg_next""];\n	""48"" -> ""5""[label=""cfg_next""];\n	""49"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""42""[label=""cfg_next""];\n	""50"" -> ""39""[label=""cfg_next""];\n	""51"" -> ""17""[label=""cfg_next""];\n	""52"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""48""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParser.<init>(XPathParserTokenManager),Constructor,No Comment,public XPathParser(final XPathParserTokenManager tm) {\n    token_source = tm;\n    token = new Token();\n    token.next = jj_nt = token_source.getNextToken();\n    jj_gen = 0;\n    for (int i = 0; i < 39; i++) {\n        jj_la1[i] = -1;\n    }\n    for (int i = 0; i < jj_2_rtns.length; i++) {\n        jj_2_rtns[i] = new JJCalls();\n    }\n},void <init>(org.apache.commons.jxpath.ri.parser.XPathParserTokenManager),"digraph cfg_init {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token>""];\n	""2"" [label=""$stack10.<org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token next> = $stack11""];\n	""3"" [label=""$stack11 = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token getNextToken()>()""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""5"" [label=""$stack13 = lengthof $stack12""];\n	""6"" [label=""$stack14 = new org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns>""];\n	""8"" [label=""$stack15[i] = $stack14""];\n	""9"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1>""];\n	""10"" [label=""$stack16[i] = -1""];\n	""11"" [label=""$stack3 = newarray (int)[39]""];\n	""12"" [label=""$stack4 = newarray (org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls)[6]""];\n	""13"" [label=""$stack5 = new org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess""];\n	""14"" [label=""$stack6 = new java.util.Vector""];\n	""15"" [label=""$stack7 = newarray (int)[100]""];\n	""16"" [label=""$stack8 = new org.apache.commons.jxpath.ri.parser.Token""];\n	""17"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source>""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""i = 0""];\n	""21"" [label=""i = 0""];\n	""22"" [label=""i = i + 1""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""if i >= $stack13""];\n	""25"" [label=""if i >= 39""];\n	""26"" [label=""return""];\n	""27"" [label=""specialinvoke $stack14.<org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls: void <init>()>()""];\n	""28"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess: void <init>(org.apache.commons.jxpath.ri.parser.XPathParser$1)>(null)""];\n	""29"" [label=""specialinvoke $stack6.<java.util.Vector: void <init>()>()""];\n	""30"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.parser.Token: void <init>()>()""];\n	""31"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""32"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParser""];\n	""33"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean jj_rescan> = 0""];\n	""34"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: boolean lookingAhead> = 0""];\n	""35"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gc> = 0""];\n	""36"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_gen> = 0""];\n	""37"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int jj_kind> = -1""];\n	""38"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_la1> = $stack3""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: int[] jj_lasttokens> = $stack7""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: java.util.Vector jj_expentries> = $stack6""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token jj_nt> = $stack11""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.Token token> = $stack8""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$JJCalls[] jj_2_rtns> = $stack4""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParser$LookaheadSuccess jj_ls> = $stack5""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParser: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager token_source> = tm""];\n	""46"" [label=""tm := @parameter0: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""38""[label=""cfg_next""];\n	""12"" -> ""43""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""29""[label=""cfg_next""];\n	""15"" -> ""39""[label=""cfg_next""];\n	""16"" -> ""30""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_goto""];\n	""19"" -> ""4""[label=""cfg_goto""];\n	""2"" -> ""36""[label=""cfg_next""];\n	""20"" -> ""25""[label=""cfg_next""];\n	""21"" -> ""4""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_false""];\n	""25"" -> ""21""[label=""cfg_true""];\n	""25"" -> ""9""[label=""cfg_false""];\n	""27"" -> ""8""[label=""cfg_next""];\n	""28"" -> ""44""[label=""cfg_next""];\n	""29"" -> ""40""[label=""cfg_next""];\n	""3"" -> ""41""[label=""cfg_next""];\n	""30"" -> ""42""[label=""cfg_next""];\n	""31"" -> ""34""[label=""cfg_next""];\n	""32"" -> ""46""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""34"" -> ""11""[label=""cfg_next""];\n	""35"" -> ""13""[label=""cfg_next""];\n	""36"" -> ""20""[label=""cfg_next""];\n	""37"" -> ""15""[label=""cfg_next""];\n	""38"" -> ""12""[label=""cfg_next""];\n	""39"" -> ""45""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""37""[label=""cfg_next""];\n	""41"" -> ""2""[label=""cfg_next""];\n	""42"" -> ""1""[label=""cfg_next""];\n	""43"" -> ""33""[label=""cfg_next""];\n	""44"" -> ""14""[label=""cfg_next""];\n	""45"" -> ""16""[label=""cfg_next""];\n	""46"" -> ""31""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""27""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""23""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.ExpandBuff(boolean),Method,No Comment,"protected void ExpandBuff(final boolean wrapAround) {\n    final char[] newbuffer = new char[bufsize + 2048];\n    final int[] newbufline = new int[bufsize + 2048];\n    final int[] newbufcolumn = new int[bufsize + 2048];\n    try {\n        if (wrapAround) {\n            System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n            System.arraycopy(buffer, 0, newbuffer, bufsize - tokenBegin, bufpos);\n            buffer = newbuffer;\n            System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n            System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n            bufline = newbufline;\n            System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n            System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n            bufcolumn = newbufcolumn;\n            maxNextCharInd = bufpos += bufsize - tokenBegin;\n        } else {\n            System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n            buffer = newbuffer;\n            System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n            bufline = newbufline;\n            System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n            bufcolumn = newbufcolumn;\n            maxNextCharInd = bufpos -= tokenBegin;\n        }\n    } catch (final Throwable t) {\n        throw new Error(t.getMessage());\n    }\n    bufsize += 2048;\n    available = bufsize;\n    tokenBegin = 0;\n}",void ExpandBuff(boolean),"digraph cfg_ExpandBuff {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""2"" [label=""$stack11 = $stack10 + 2048""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""5"" [label=""$stack14 = $stack12 - $stack13""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""10"" [label=""$stack19 = $stack17 - $stack18""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""12"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""15"" [label=""$stack24 = $stack22 - $stack23""];\n	""16"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""17"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""18"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""19"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""20"" [label=""$stack29 = $stack27 - $stack28""];\n	""21"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""22"" [label=""$stack31 = $stack30 + 2048""];\n	""23"" [label=""$stack32 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""24"" [label=""$stack33 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""25"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""26"" [label=""$stack35 = $stack33 - $stack34""];\n	""27"" [label=""$stack36 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""28"" [label=""$stack37 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""29"" [label=""$stack38 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""30"" [label=""$stack39 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""31"" [label=""$stack40 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""32"" [label=""$stack41 = $stack38 - $stack39""];\n	""33"" [label=""$stack42 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""34"" [label=""$stack43 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""35"" [label=""$stack44 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""36"" [label=""$stack45 = $stack43 - $stack44""];\n	""37"" [label=""$stack46 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""38"" [label=""$stack47 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""39"" [label=""$stack48 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""40"" [label=""$stack49 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""41"" [label=""$stack50 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""42"" [label=""$stack51 = $stack48 - $stack49""];\n	""43"" [label=""$stack52 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""44"" [label=""$stack53 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""45"" [label=""$stack54 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""46"" [label=""$stack55 = $stack53 - $stack54""];\n	""47"" [label=""$stack56 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""48"" [label=""$stack57 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""49"" [label=""$stack58 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""50"" [label=""$stack59 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""51"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""52"" [label=""$stack60 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""53"" [label=""$stack61 = $stack58 - $stack59""];\n	""54"" [label=""$stack62 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""55"" [label=""$stack63 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""56"" [label=""$stack64 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""57"" [label=""$stack65 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""58"" [label=""$stack66 = $stack63 - $stack64""];\n	""59"" [label=""$stack67 = $stack65 + $stack66""];\n	""60"" [label=""$stack68 := @caughtexception""];\n	""61"" [label=""$stack69 = virtualinvoke t.<java.lang.Throwable: java.lang.String getMessage()>()""];\n	""62"" [label=""$stack7 = $stack6 + 2048""];\n	""63"" [label=""$stack70 = new java.lang.Error""];\n	""64"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""65"" [label=""$stack9 = $stack8 + 2048""];\n	""66"" [label=""goto""];\n	""67"" [label=""goto""];\n	""68"" [label=""if wrapAround == 0""];\n	""69"" [label=""newbufcolumn = newarray (int)[$stack11]""];\n	""70"" [label=""newbuffer = newarray (char)[$stack7]""];\n	""71"" [label=""newbufline = newarray (int)[$stack9]""];\n	""72"" [label=""return""];\n	""73"" [label=""specialinvoke $stack70.<java.lang.Error: void <init>(java.lang.String)>($stack69)""];\n	""74"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack16, $stack15, newbuffer, 0, $stack14)""];\n	""75"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack21, $stack20, newbufline, 0, $stack19)""];\n	""76"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack26, $stack25, newbufcolumn, 0, $stack24)""];\n	""77"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack37, $stack36, newbuffer, 0, $stack35)""];\n	""78"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack42, 0, newbuffer, $stack41, $stack40)""];\n	""79"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack47, $stack46, newbufline, 0, $stack45)""];\n	""80"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack52, 0, newbufline, $stack51, $stack50)""];\n	""81"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack57, $stack56, newbufcolumn, 0, $stack55)""];\n	""82"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack62, 0, newbufcolumn, $stack61, $stack60)""];\n	""83"" [label=""t = $stack68""];\n	""84"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""85"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer> = newbuffer""];\n	""86"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer> = newbuffer""];\n	""87"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available> = $stack32""];\n	""88"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = $stack29""];\n	""89"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = $stack67""];\n	""90"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize> = $stack31""];\n	""91"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd> = $stack29""];\n	""92"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd> = $stack67""];\n	""93"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin> = 0""];\n	""94"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn> = newbufcolumn""];\n	""95"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn> = newbufcolumn""];\n	""96"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline> = newbufline""];\n	""97"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline> = newbufline""];\n	""98"" [label=""throw $stack70""];\n	""99"" [label=""wrapAround := @parameter0: boolean""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""60""[label=""cfg_except""];\n	""10"" -> ""75""[label=""cfg_next""];\n	""11"" -> ""60""[label=""cfg_except""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""12"" -> ""60""[label=""cfg_except""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""60""[label=""cfg_except""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""60""[label=""cfg_except""];\n	""15"" -> ""60""[label=""cfg_except""];\n	""15"" -> ""76""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""60""[label=""cfg_except""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""17"" -> ""60""[label=""cfg_except""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""60""[label=""cfg_except""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""60""[label=""cfg_except""];\n	""2"" -> ""69""[label=""cfg_next""];\n	""20"" -> ""60""[label=""cfg_except""];\n	""20"" -> ""88""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""90""[label=""cfg_next""];\n	""23"" -> ""87""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""60""[label=""cfg_except""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""60""[label=""cfg_except""];\n	""26"" -> ""60""[label=""cfg_except""];\n	""26"" -> ""77""[label=""cfg_next""];\n	""27"" -> ""24""[label=""cfg_next""];\n	""27"" -> ""60""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""28"" -> ""60""[label=""cfg_except""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""29"" -> ""60""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""60""[label=""cfg_except""];\n	""30"" -> ""32""[label=""cfg_next""];\n	""30"" -> ""60""[label=""cfg_except""];\n	""31"" -> ""60""[label=""cfg_except""];\n	""31"" -> ""78""[label=""cfg_next""];\n	""32"" -> ""31""[label=""cfg_next""];\n	""32"" -> ""60""[label=""cfg_except""];\n	""33"" -> ""29""[label=""cfg_next""];\n	""33"" -> ""60""[label=""cfg_except""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""34"" -> ""60""[label=""cfg_except""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""35"" -> ""60""[label=""cfg_except""];\n	""36"" -> ""60""[label=""cfg_except""];\n	""36"" -> ""79""[label=""cfg_next""];\n	""37"" -> ""34""[label=""cfg_next""];\n	""37"" -> ""60""[label=""cfg_except""];\n	""38"" -> ""37""[label=""cfg_next""];\n	""38"" -> ""60""[label=""cfg_except""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""39"" -> ""60""[label=""cfg_except""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""60""[label=""cfg_except""];\n	""40"" -> ""42""[label=""cfg_next""];\n	""40"" -> ""60""[label=""cfg_except""];\n	""41"" -> ""60""[label=""cfg_except""];\n	""41"" -> ""80""[label=""cfg_next""];\n	""42"" -> ""41""[label=""cfg_next""];\n	""42"" -> ""60""[label=""cfg_except""];\n	""43"" -> ""39""[label=""cfg_next""];\n	""43"" -> ""60""[label=""cfg_except""];\n	""44"" -> ""45""[label=""cfg_next""];\n	""44"" -> ""60""[label=""cfg_except""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""45"" -> ""60""[label=""cfg_except""];\n	""46"" -> ""60""[label=""cfg_except""];\n	""46"" -> ""81""[label=""cfg_next""];\n	""47"" -> ""44""[label=""cfg_next""];\n	""47"" -> ""60""[label=""cfg_except""];\n	""48"" -> ""47""[label=""cfg_next""];\n	""48"" -> ""60""[label=""cfg_except""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""49"" -> ""60""[label=""cfg_except""];\n	""5"" -> ""60""[label=""cfg_except""];\n	""5"" -> ""74""[label=""cfg_next""];\n	""50"" -> ""53""[label=""cfg_next""];\n	""50"" -> ""60""[label=""cfg_except""];\n	""51"" -> ""62""[label=""cfg_next""];\n	""52"" -> ""60""[label=""cfg_except""];\n	""52"" -> ""82""[label=""cfg_next""];\n	""53"" -> ""52""[label=""cfg_next""];\n	""53"" -> ""60""[label=""cfg_except""];\n	""54"" -> ""49""[label=""cfg_next""];\n	""54"" -> ""60""[label=""cfg_except""];\n	""55"" -> ""56""[label=""cfg_next""];\n	""55"" -> ""60""[label=""cfg_except""];\n	""56"" -> ""58""[label=""cfg_next""];\n	""56"" -> ""60""[label=""cfg_except""];\n	""57"" -> ""55""[label=""cfg_next""];\n	""57"" -> ""60""[label=""cfg_except""];\n	""58"" -> ""59""[label=""cfg_next""];\n	""58"" -> ""60""[label=""cfg_except""];\n	""59"" -> ""60""[label=""cfg_except""];\n	""59"" -> ""89""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""60""[label=""cfg_except""];\n	""60"" -> ""83""[label=""cfg_next""];\n	""61"" -> ""73""[label=""cfg_next""];\n	""62"" -> ""70""[label=""cfg_next""];\n	""63"" -> ""61""[label=""cfg_next""];\n	""64"" -> ""65""[label=""cfg_next""];\n	""65"" -> ""71""[label=""cfg_next""];\n	""66"" -> ""60""[label=""cfg_except""];\n	""66"" -> ""67""[label=""cfg_goto""];\n	""67"" -> ""21""[label=""cfg_goto""];\n	""68"" -> ""28""[label=""cfg_false""];\n	""68"" -> ""60""[label=""cfg_except""];\n	""68"" -> ""7""[label=""cfg_true""];\n	""69"" -> ""68""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""7"" -> ""60""[label=""cfg_except""];\n	""70"" -> ""64""[label=""cfg_next""];\n	""71"" -> ""1""[label=""cfg_next""];\n	""73"" -> ""98""[label=""cfg_next""];\n	""74"" -> ""60""[label=""cfg_except""];\n	""74"" -> ""86""[label=""cfg_next""];\n	""75"" -> ""60""[label=""cfg_except""];\n	""75"" -> ""97""[label=""cfg_next""];\n	""76"" -> ""60""[label=""cfg_except""];\n	""76"" -> ""95""[label=""cfg_next""];\n	""77"" -> ""33""[label=""cfg_next""];\n	""77"" -> ""60""[label=""cfg_except""];\n	""78"" -> ""60""[label=""cfg_except""];\n	""78"" -> ""85""[label=""cfg_next""];\n	""79"" -> ""43""[label=""cfg_next""];\n	""79"" -> ""60""[label=""cfg_except""];\n	""8"" -> ""60""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""80"" -> ""60""[label=""cfg_except""];\n	""80"" -> ""96""[label=""cfg_next""];\n	""81"" -> ""54""[label=""cfg_next""];\n	""81"" -> ""60""[label=""cfg_except""];\n	""82"" -> ""60""[label=""cfg_except""];\n	""82"" -> ""94""[label=""cfg_next""];\n	""83"" -> ""63""[label=""cfg_next""];\n	""84"" -> ""99""[label=""cfg_next""];\n	""85"" -> ""38""[label=""cfg_next""];\n	""85"" -> ""60""[label=""cfg_except""];\n	""86"" -> ""12""[label=""cfg_next""];\n	""86"" -> ""60""[label=""cfg_except""];\n	""87"" -> ""93""[label=""cfg_next""];\n	""88"" -> ""60""[label=""cfg_except""];\n	""88"" -> ""91""[label=""cfg_next""];\n	""89"" -> ""60""[label=""cfg_except""];\n	""89"" -> ""92""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""60""[label=""cfg_except""];\n	""90"" -> ""23""[label=""cfg_next""];\n	""91"" -> ""60""[label=""cfg_except""];\n	""91"" -> ""67""[label=""cfg_next""];\n	""92"" -> ""60""[label=""cfg_except""];\n	""92"" -> ""66""[label=""cfg_next""];\n	""93"" -> ""72""[label=""cfg_next""];\n	""94"" -> ""57""[label=""cfg_next""];\n	""94"" -> ""60""[label=""cfg_except""];\n	""95"" -> ""18""[label=""cfg_next""];\n	""95"" -> ""60""[label=""cfg_except""];\n	""96"" -> ""48""[label=""cfg_next""];\n	""96"" -> ""60""[label=""cfg_except""];\n	""97"" -> ""17""[label=""cfg_next""];\n	""97"" -> ""60""[label=""cfg_except""];\n	""99"" -> ""51""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.FillBuff(),Method,No Comment,"protected void FillBuff() throws java.io.IOException {\n    if (maxNextCharInd == available) {\n        if (available == bufsize) {\n            if (tokenBegin > 2048) {\n                bufpos = maxNextCharInd = 0;\n                available = tokenBegin;\n            } else if (tokenBegin < 0) {\n                bufpos = maxNextCharInd = 0;\n            } else {\n                ExpandBuff(false);\n            }\n        } else if (available > tokenBegin) {\n            available = bufsize;\n        } else if (tokenBegin - available < 2048) {\n            ExpandBuff(true);\n        } else {\n            available = tokenBegin;\n        }\n    }\n    int i;\n    try {\n        if ((i = inputStream.read(buffer, maxNextCharInd, available - maxNextCharInd)) == -1) {\n            inputStream.close();\n            throw new java.io.IOException();\n        }\n        maxNextCharInd += i;\n    } catch (final java.io.IOException e) {\n        --bufpos;\n        backup(0);\n        if (tokenBegin == -1) {\n            tokenBegin = bufpos;\n        }\n        throw e;\n    }\n}",void FillBuff(),"digraph cfg_FillBuff {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: java.io.Reader inputStream>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd>""];\n	""3"" [label=""$stack12 = $stack11 + i""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: java.io.Reader inputStream>""];\n	""5"" [label=""$stack14 = new java.io.IOException""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available>""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available>""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available>""];\n	""12"" [label=""$stack21 = $stack19 - $stack20""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""15"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""16"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""17"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""18"" [label=""$stack27 := @caughtexception""];\n	""19"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""20"" [label=""$stack29 = $stack28 - 1""];\n	""21"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available>""];\n	""22"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""23"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""24"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd>""];\n	""25"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available>""];\n	""26"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd>""];\n	""27"" [label=""$stack7 = $stack5 - $stack6""];\n	""28"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd>""];\n	""29"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""30"" [label=""e = $stack27""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""i = virtualinvoke $stack10.<java.io.Reader: int read(char[],int,int)>($stack9, $stack8, $stack7)""];\n	""38"" [label=""if $stack16 != $stack15""];\n	""39"" [label=""if $stack18 <= $stack17""];\n	""40"" [label=""if $stack21 >= 2048""];\n	""41"" [label=""if $stack24 <= 2048""];\n	""42"" [label=""if $stack25 >= 0""];\n	""43"" [label=""if $stack30 != -1""];\n	""44"" [label=""if $stack4 != $stack3""];\n	""45"" [label=""if i != -1""];\n	""46"" [label=""return""];\n	""47"" [label=""specialinvoke $stack14.<java.io.IOException: void <init>()>()""];\n	""48"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""49"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available> = $stack22""];\n	""50"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available> = $stack23""];\n	""51"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available> = $stack26""];\n	""52"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = $stack29""];\n	""53"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = 0""];\n	""54"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = 0""];\n	""55"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd> = $stack12""];\n	""56"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd> = 0""];\n	""57"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd> = 0""];\n	""58"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin> = $stack31""];\n	""59"" [label=""throw $stack14""];\n	""60"" [label=""throw e""];\n	""61"" [label=""virtualinvoke $stack13.<java.io.Reader: void close()>()""];\n	""62"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ExpandBuff(boolean)>(0)""];\n	""63"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ExpandBuff(boolean)>(1)""];\n	""64"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void backup(int)>(0)""];\n	""1"" -> ""18""[label=""cfg_except""];\n	""1"" -> ""29""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""40""[label=""cfg_next""];\n	""13"" -> ""49""[label=""cfg_next""];\n	""14"" -> ""50""[label=""cfg_next""];\n	""15"" -> ""41""[label=""cfg_next""];\n	""16"" -> ""42""[label=""cfg_next""];\n	""17"" -> ""51""[label=""cfg_next""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""52""[label=""cfg_next""];\n	""21"" -> ""44""[label=""cfg_next""];\n	""22"" -> ""43""[label=""cfg_next""];\n	""23"" -> ""58""[label=""cfg_next""];\n	""24"" -> ""21""[label=""cfg_next""];\n	""25"" -> ""18""[label=""cfg_except""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""18""[label=""cfg_except""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""18""[label=""cfg_except""];\n	""27"" -> ""37""[label=""cfg_next""];\n	""28"" -> ""18""[label=""cfg_except""];\n	""28"" -> ""25""[label=""cfg_next""];\n	""29"" -> ""18""[label=""cfg_except""];\n	""29"" -> ""28""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_except""];\n	""3"" -> ""55""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_next""];\n	""31"" -> ""1""[label=""cfg_goto""];\n	""32"" -> ""1""[label=""cfg_goto""];\n	""33"" -> ""1""[label=""cfg_goto""];\n	""34"" -> ""1""[label=""cfg_goto""];\n	""35"" -> ""1""[label=""cfg_goto""];\n	""36"" -> ""46""[label=""cfg_goto""];\n	""37"" -> ""18""[label=""cfg_except""];\n	""37"" -> ""45""[label=""cfg_next""];\n	""38"" -> ""15""[label=""cfg_false""];\n	""38"" -> ""9""[label=""cfg_true""];\n	""39"" -> ""10""[label=""cfg_true""];\n	""39"" -> ""14""[label=""cfg_false""];\n	""4"" -> ""18""[label=""cfg_except""];\n	""4"" -> ""61""[label=""cfg_next""];\n	""40"" -> ""13""[label=""cfg_true""];\n	""40"" -> ""63""[label=""cfg_false""];\n	""41"" -> ""16""[label=""cfg_true""];\n	""41"" -> ""56""[label=""cfg_false""];\n	""42"" -> ""57""[label=""cfg_false""];\n	""42"" -> ""62""[label=""cfg_true""];\n	""43"" -> ""23""[label=""cfg_false""];\n	""43"" -> ""60""[label=""cfg_true""];\n	""44"" -> ""1""[label=""cfg_true""];\n	""44"" -> ""7""[label=""cfg_false""];\n	""45"" -> ""18""[label=""cfg_except""];\n	""45"" -> ""2""[label=""cfg_true""];\n	""45"" -> ""4""[label=""cfg_false""];\n	""47"" -> ""18""[label=""cfg_except""];\n	""47"" -> ""59""[label=""cfg_next""];\n	""48"" -> ""24""[label=""cfg_next""];\n	""49"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_except""];\n	""5"" -> ""47""[label=""cfg_next""];\n	""50"" -> ""34""[label=""cfg_next""];\n	""51"" -> ""31""[label=""cfg_next""];\n	""52"" -> ""64""[label=""cfg_next""];\n	""53"" -> ""17""[label=""cfg_next""];\n	""54"" -> ""32""[label=""cfg_next""];\n	""55"" -> ""18""[label=""cfg_except""];\n	""55"" -> ""36""[label=""cfg_next""];\n	""56"" -> ""53""[label=""cfg_next""];\n	""57"" -> ""54""[label=""cfg_next""];\n	""58"" -> ""60""[label=""cfg_next""];\n	""59"" -> ""18""[label=""cfg_except""];\n	""6"" -> ""38""[label=""cfg_next""];\n	""61"" -> ""18""[label=""cfg_except""];\n	""61"" -> ""5""[label=""cfg_next""];\n	""62"" -> ""33""[label=""cfg_next""];\n	""63"" -> ""35""[label=""cfg_next""];\n	""64"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""39""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.BeginToken(),Method,No Comment,public char BeginToken() throws java.io.IOException {\n    tokenBegin = -1;\n    final char c = readChar();\n    tokenBegin = bufpos;\n    return c;\n},char BeginToken(),"digraph cfg_BeginToken {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""2"" [label=""c = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""3"" [label=""return c""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin> = $stack2""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin> = -1""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.UpdateLineColumn(char),Method,No Comment,protected void UpdateLineColumn(final char c) {\n    column++;\n    if (prevCharIsLF) {\n        prevCharIsLF = false;\n        line += column = 1;\n    } else if (prevCharIsCR) {\n        prevCharIsCR = false;\n        if (c == '\n') {\n            prevCharIsLF = true;\n        } else {\n            line += column = 1;\n        }\n    }\n    switch(c) {\n        case '\r':\n            prevCharIsCR = true;\n            break;\n        case '\n':\n            prevCharIsLF = true;\n            break;\n        case '\t':\n            column--;\n            column += 8 - (column & 07);\n            break;\n        default:\n            break;\n    }\n    bufline[bufpos] = line;\n    bufcolumn[bufpos] = column;\n},void UpdateLineColumn(char),"digraph cfg_UpdateLineColumn {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column>""];\n	""4"" [label=""$stack13 = $stack12 - 1""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column>""];\n	""6"" [label=""$stack15 = $stack14 & 7""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column>""];\n	""8"" [label=""$stack17 = 8 - $stack15""];\n	""9"" [label=""$stack18 = $stack16 + $stack17""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line>""];\n	""11"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column>""];\n	""12"" [label=""$stack20 = $stack19 + 1""];\n	""13"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line>""];\n	""14"" [label=""$stack22 = $stack21 + 1""];\n	""15"" [label=""$stack3 = $stack2 + 1""];\n	""16"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsLF>""];\n	""17"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsCR>""];\n	""18"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""19"" [label=""$stack6[$stack7] = $stack8""];\n	""20"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""21"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line>""];\n	""22"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""23"" [label=""$stack9[$stack10] = $stack11""];\n	""24"" [label=""c := @parameter0: char""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""if $stack4 == 0""];\n	""31"" [label=""if $stack5 == 0""];\n	""32"" [label=""if c != 10""];\n	""33"" [label=""return""];\n	""34"" [label=""switch(c) \{     case 9:     case 10:     case 11:     case 12:     case 13:     default:  \}""];\n	""35"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""36"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsCR> = 0""];\n	""37"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsCR> = 1""];\n	""38"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsLF> = 0""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsLF> = 1""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsLF> = 1""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = $stack13""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = $stack18""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = $stack3""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = 1""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = 1""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line> = $stack20""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line> = $stack22""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""45""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""46""[label=""cfg_next""];\n	""13"" -> ""44""[label=""cfg_next""];\n	""14"" -> ""47""[label=""cfg_next""];\n	""15"" -> ""43""[label=""cfg_next""];\n	""16"" -> ""30""[label=""cfg_next""];\n	""17"" -> ""31""[label=""cfg_next""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""33""[label=""cfg_next""];\n	""24"" -> ""11""[label=""cfg_next""];\n	""25"" -> ""34""[label=""cfg_goto""];\n	""26"" -> ""34""[label=""cfg_goto""];\n	""27"" -> ""18""[label=""cfg_goto""];\n	""28"" -> ""18""[label=""cfg_goto""];\n	""29"" -> ""18""[label=""cfg_goto""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""17""[label=""cfg_true""];\n	""30"" -> ""38""[label=""cfg_false""];\n	""31"" -> ""34""[label=""cfg_true""];\n	""31"" -> ""36""[label=""cfg_false""];\n	""32"" -> ""10""[label=""cfg_true""];\n	""32"" -> ""39""[label=""cfg_false""];\n	""34"" -> ""18""[label=""cfg_switch""];\n	""34"" -> ""3""[label=""cfg_switch""];\n	""34"" -> ""37""[label=""cfg_switch""];\n	""34"" -> ""40""[label=""cfg_switch""];\n	""35"" -> ""24""[label=""cfg_next""];\n	""36"" -> ""32""[label=""cfg_next""];\n	""37"" -> ""29""[label=""cfg_next""];\n	""38"" -> ""13""[label=""cfg_next""];\n	""39"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""41""[label=""cfg_next""];\n	""40"" -> ""28""[label=""cfg_next""];\n	""41"" -> ""7""[label=""cfg_next""];\n	""42"" -> ""27""[label=""cfg_next""];\n	""43"" -> ""16""[label=""cfg_next""];\n	""44"" -> ""14""[label=""cfg_next""];\n	""45"" -> ""12""[label=""cfg_next""];\n	""46"" -> ""34""[label=""cfg_next""];\n	""47"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""42""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.readChar(),Method,No Comment,public char readChar() throws java.io.IOException {\n    if (inBuf > 0) {\n        --inBuf;\n        if (++bufpos == bufsize) {\n            bufpos = 0;\n        }\n        return buffer[bufpos];\n    }\n    if (++bufpos >= maxNextCharInd) {\n        FillBuff();\n    }\n    final char c = buffer[bufpos];\n    UpdateLineColumn(c);\n    return c;\n},char readChar(),"digraph cfg_readChar {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""2"" [label=""$stack11 = $stack10 + 1""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""6"" [label=""$stack15 = $stack13[$stack14]""];\n	""7"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf>""];\n	""8"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""9"" [label=""$stack4 = $stack3 + 1""];\n	""10"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd>""];\n	""11"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""12"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""13"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf>""];\n	""14"" [label=""$stack9 = $stack8 - 1""];\n	""15"" [label=""c = $stack6[$stack7]""];\n	""16"" [label=""if $stack11 != $stack12""];\n	""17"" [label=""if $stack2 <= 0""];\n	""18"" [label=""if $stack4 < $stack5""];\n	""19"" [label=""return $stack15""];\n	""20"" [label=""return c""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""22"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = $stack11""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = $stack4""];\n	""24"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = 0""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf> = $stack9""];\n	""26"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void FillBuff()>()""];\n	""27"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void UpdateLineColumn(char)>(c)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""27""[label=""cfg_next""];\n	""16"" -> ""24""[label=""cfg_false""];\n	""16"" -> ""4""[label=""cfg_true""];\n	""17"" -> ""13""[label=""cfg_false""];\n	""17"" -> ""8""[label=""cfg_true""];\n	""18"" -> ""11""[label=""cfg_true""];\n	""18"" -> ""26""[label=""cfg_false""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""22"" -> ""3""[label=""cfg_next""];\n	""23"" -> ""10""[label=""cfg_next""];\n	""24"" -> ""4""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_next""];\n	""26"" -> ""11""[label=""cfg_next""];\n	""27"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""23""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.getColumn(),Method,* @deprecated\n   * @return the end column.\n   * @see #getEndColumn,@Deprecated\npublic int getColumn() {\n    return bufcolumn[bufpos];\n},int getColumn(),"digraph cfg_getColumn {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""3"" [label=""$stack3 = $stack1[$stack2]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.getLine(),Method,* @deprecated\n   * @return the line number.\n   * @see #getEndLine,@Deprecated\npublic int getLine() {\n    return bufline[bufpos];\n},int getLine(),"digraph cfg_getLine {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""3"" [label=""$stack3 = $stack1[$stack2]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.getEndColumn(),Method,No Comment,public int getEndColumn() {\n    return bufcolumn[bufpos];\n},int getEndColumn(),"digraph cfg_getEndColumn {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""3"" [label=""$stack3 = $stack1[$stack2]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.getEndLine(),Method,No Comment,public int getEndLine() {\n    return bufline[bufpos];\n},int getEndLine(),"digraph cfg_getEndLine {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""3"" [label=""$stack3 = $stack1[$stack2]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.getBeginColumn(),Method,No Comment,public int getBeginColumn() {\n    return bufcolumn[tokenBegin];\n},int getBeginColumn(),"digraph cfg_getBeginColumn {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""3"" [label=""$stack3 = $stack1[$stack2]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.getBeginLine(),Method,No Comment,public int getBeginLine() {\n    return bufline[tokenBegin];\n},int getBeginLine(),"digraph cfg_getBeginLine {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""3"" [label=""$stack3 = $stack1[$stack2]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.backup(int),Method,No Comment,public void backup(final int amount) {\n    inBuf += amount;\n    if ((bufpos -= amount) < 0) {\n        bufpos += bufsize;\n    }\n},void backup(int),"digraph cfg_backup {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf>""];\n	""2"" [label=""$stack3 = $stack2 + amount""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""4"" [label=""$stack5 = $stack4 - amount""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""7"" [label=""$stack8 = $stack6 + $stack7""];\n	""8"" [label=""amount := @parameter0: int""];\n	""9"" [label=""if $stack5 >= 0""];\n	""10"" [label=""return""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = $stack5""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = $stack8""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf> = $stack3""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.ReInit(Reader,int,int,int)",Method,No Comment,"public void ReInit(final java.io.Reader dstream, final int startLine, final int startColumn, final int bufferSize) {\n    inputStream = dstream;\n    line = startLine;\n    column = startColumn - 1;\n    if (buffer == null || bufferSize != buffer.length) {\n        available = bufsize = bufferSize;\n        buffer = new char[bufferSize];\n        bufline = new int[bufferSize];\n        bufcolumn = new int[bufferSize];\n    }\n    prevCharIsLF = prevCharIsCR = false;\n    tokenBegin = inBuf = maxNextCharInd = 0;\n    bufpos = -1;\n}","void ReInit(java.io.Reader,int,int,int)","digraph cfg_ReInit {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""2"" [label=""$stack11 = lengthof $stack10""];\n	""3"" [label=""$stack5 = startColumn - 1""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""5"" [label=""$stack7 = newarray (char)[bufferSize]""];\n	""6"" [label=""$stack8 = newarray (int)[bufferSize]""];\n	""7"" [label=""$stack9 = newarray (int)[bufferSize]""];\n	""8"" [label=""bufferSize := @parameter3: int""];\n	""9"" [label=""dstream := @parameter0: java.io.Reader""];\n	""10"" [label=""if $stack6 == null""];\n	""11"" [label=""if bufferSize == $stack11""];\n	""12"" [label=""return""];\n	""13"" [label=""startColumn := @parameter2: int""];\n	""14"" [label=""startLine := @parameter1: int""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsCR> = 0""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsLF> = 0""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer> = $stack7""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available> = bufferSize""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = -1""];\n	""21"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize> = bufferSize""];\n	""22"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = $stack5""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf> = 0""];\n	""24"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line> = startLine""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd> = 0""];\n	""26"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin> = 0""];\n	""27"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn> = $stack9""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline> = $stack8""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: java.io.Reader inputStream> = dstream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""21""[label=""cfg_true""];\n	""11"" -> ""16""[label=""cfg_true""];\n	""11"" -> ""21""[label=""cfg_false""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""6""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""4""[label=""cfg_next""];\n	""23"" -> ""26""[label=""cfg_next""];\n	""24"" -> ""3""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""26"" -> ""20""[label=""cfg_next""];\n	""27"" -> ""16""[label=""cfg_next""];\n	""28"" -> ""7""[label=""cfg_next""];\n	""29"" -> ""24""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_next""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.ReInit(Reader,int,int)",Method,No Comment,"public void ReInit(final java.io.Reader dstream, final int startLine, final int startColumn) {\n    ReInit(dstream, startLine, startColumn, 4096);\n}","void ReInit(java.io.Reader,int,int)","digraph cfg_ReInit {\n	""1"" [label=""dstream := @parameter0: java.io.Reader""];\n	""2"" [label=""return""];\n	""3"" [label=""startColumn := @parameter2: int""];\n	""4"" [label=""startLine := @parameter1: int""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""6"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int,int)>(dstream, startLine, startColumn, 4096)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.ReInit(Reader),Method,No Comment,"public void ReInit(final java.io.Reader dstream) {\n    ReInit(dstream, 1, 1, 4096);\n}",void ReInit(java.io.Reader),"digraph cfg_ReInit {\n	""1"" [label=""dstream := @parameter0: java.io.Reader""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""4"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int,int)>(dstream, 1, 1, 4096)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.ReInit(InputStream,int,int,int)",Method,No Comment,"public void ReInit(final java.io.InputStream dstream, final int startLine, final int startColumn, final int buffersize) {\n    ReInit(new java.io.InputStreamReader(dstream), startLine, startColumn, 4096);\n}","void ReInit(java.io.InputStream,int,int,int)","digraph cfg_ReInit {\n	""1"" [label=""$stack5 = new java.io.InputStreamReader""];\n	""2"" [label=""buffersize := @parameter3: int""];\n	""3"" [label=""dstream := @parameter0: java.io.InputStream""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke $stack5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(dstream)""];\n	""6"" [label=""startColumn := @parameter2: int""];\n	""7"" [label=""startLine := @parameter1: int""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""9"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ReInit(java.io.Reader,int,int,int)>($stack5, startLine, startColumn, 4096)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.ReInit(InputStream),Method,No Comment,"public void ReInit(final java.io.InputStream dstream) {\n    ReInit(dstream, 1, 1, 4096);\n}",void ReInit(java.io.InputStream),"digraph cfg_ReInit {\n	""1"" [label=""dstream := @parameter0: java.io.InputStream""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""4"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ReInit(java.io.InputStream,int,int,int)>(dstream, 1, 1, 4096)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.ReInit(InputStream,int,int)",Method,No Comment,"public void ReInit(final java.io.InputStream dstream, final int startLine, final int startColumn) {\n    ReInit(dstream, startLine, startColumn, 4096);\n}","void ReInit(java.io.InputStream,int,int)","digraph cfg_ReInit {\n	""1"" [label=""dstream := @parameter0: java.io.InputStream""];\n	""2"" [label=""return""];\n	""3"" [label=""startColumn := @parameter2: int""];\n	""4"" [label=""startLine := @parameter1: int""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""6"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void ReInit(java.io.InputStream,int,int,int)>(dstream, startLine, startColumn, 4096)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.GetImage(),Method,No Comment,"public String GetImage() {\n    if (bufpos >= tokenBegin) {\n        return new String(buffer, tokenBegin, bufpos - tokenBegin + 1);\n    }\n    return new String(buffer, tokenBegin, bufsize - tokenBegin) + new String(buffer, 0, bufpos + 1);\n}",java.lang.String GetImage(),"digraph cfg_GetImage {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""2"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""3"" [label=""$stack11 = $stack10 + 1""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""5"" [label=""$stack13 = new java.lang.String""];\n	""6"" [label=""$stack14 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""7"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""11"" [label=""$stack19 = $stack17 - $stack18""];\n	""12"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""13"" [label=""$stack20 = $stack19 + 1""];\n	""14"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""15"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""16"" [label=""$stack23 = new java.lang.String""];\n	""17"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""18"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""19"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""20"" [label=""$stack6 = $stack4 - $stack5""];\n	""21"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""22"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""23"" [label=""$stack9 = new java.lang.String""];\n	""24"" [label=""if $stack2 < $stack1""];\n	""25"" [label=""return $stack16""];\n	""26"" [label=""return $stack23""];\n	""27"" [label=""specialinvoke $stack13.<java.lang.String: void <init>(char[],int,int)>($stack12, 0, $stack11)""];\n	""28"" [label=""specialinvoke $stack23.<java.lang.String: void <init>(char[],int,int)>($stack22, $stack21, $stack20)""];\n	""29"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""30"" [label=""specialinvoke $stack9.<java.lang.String: void <init>(char[],int,int)>($stack8, $stack7, $stack6)""];\n	""31"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""16""[label=""cfg_false""];\n	""24"" -> ""17""[label=""cfg_true""];\n	""27"" -> ""7""[label=""cfg_next""];\n	""28"" -> ""26""[label=""cfg_next""];\n	""29"" -> ""23""[label=""cfg_next""];\n	""3"" -> ""27""[label=""cfg_next""];\n	""30"" -> ""6""[label=""cfg_next""];\n	""31"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.GetSuffix(int),Method,No Comment,"public char[] GetSuffix(final int len) {\n    final char[] ret = new char[len];\n    if (bufpos + 1 >= len) {\n        System.arraycopy(buffer, bufpos - len + 1, ret, 0, len);\n    } else {\n        System.arraycopy(buffer, bufsize - (len - bufpos - 1), ret, 0, len - bufpos - 1);\n        System.arraycopy(buffer, 0, ret, len - bufpos - 1, bufpos + 1);\n    }\n    return ret;\n}",char[] GetSuffix(int),"digraph cfg_GetSuffix {\n	""1"" [label=""$stack10 = len - $stack9""];\n	""2"" [label=""$stack11 = $stack10 - 1""];\n	""3"" [label=""$stack12 = $stack7 - $stack8""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""6"" [label=""$stack15 = len - $stack14""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""8"" [label=""$stack17 = $stack16 + 1""];\n	""9"" [label=""$stack18 = $stack15 - 1""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""12"" [label=""$stack21 = $stack20 - len""];\n	""13"" [label=""$stack22 = $stack21 + 1""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer>""];\n	""15"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""16"" [label=""$stack4 = $stack3 + 1""];\n	""17"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""18"" [label=""$stack6 = len - $stack5""];\n	""19"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""20"" [label=""$stack8 = $stack6 - 1""];\n	""21"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack4 < len""];\n	""24"" [label=""len := @parameter0: int""];\n	""25"" [label=""ret = newarray (char)[len]""];\n	""26"" [label=""return ret""];\n	""27"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack13, $stack12, ret, 0, $stack11)""];\n	""28"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack19, 0, ret, $stack18, $stack17)""];\n	""29"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($stack23, $stack22, ret, 0, len)""];\n	""30"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""29""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""22"" -> ""26""[label=""cfg_goto""];\n	""23"" -> ""14""[label=""cfg_false""];\n	""23"" -> ""4""[label=""cfg_true""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""15""[label=""cfg_next""];\n	""27"" -> ""10""[label=""cfg_next""];\n	""28"" -> ""26""[label=""cfg_next""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""30"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.Done(),Method,No Comment,public void Done() {\n    buffer = null;\n    bufline = null;\n    bufcolumn = null;\n},void Done(),"digraph cfg_Done {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""3"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer> = null""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn> = null""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline> = null""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.adjustBeginLineColumn(int,int)",Method,* Method to adjust line and column numbers for the start of a token.<BR>\n   *\n   * @param newLine TODO\n   * @param newCol  TODO,"public void adjustBeginLineColumn(int newLine, final int newCol) {\n    int start = tokenBegin;\n    int len;\n    if (bufpos >= tokenBegin) {\n        len = bufpos - tokenBegin + inBuf + 1;\n    } else {\n        len = bufsize - tokenBegin + bufpos + 1 + inBuf;\n    }\n    int i = 0, j = 0, k = 0;\n    int nextColDiff = 0, columnDiff = 0;\n    while (i < len && bufline[j = start % bufsize] == bufline[k = ++start % bufsize]) {\n        bufline[j] = newLine;\n        nextColDiff = columnDiff + bufcolumn[k] - bufcolumn[j];\n        bufcolumn[j] = newCol + columnDiff;\n        columnDiff = nextColDiff;\n        i++;\n    }\n    if (i < len) {\n        bufline[j] = newLine++;\n        bufcolumn[j] = newCol + columnDiff;\n        while (i++ < len) {\n            if (bufline[j = start % bufsize] != bufline[++start % bufsize]) {\n                bufline[j] = newLine++;\n            } else {\n                bufline[j] = newLine;\n            }\n        }\n    }\n    line = bufline[j];\n    column = bufcolumn[j];\n}","void adjustBeginLineColumn(int,int)","digraph cfg_adjustBeginLineColumn {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""5"" [label=""$stack14 = $stack12 - $stack13""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""7"" [label=""$stack16 = $stack14 + $stack15""];\n	""8"" [label=""$stack17 = $stack16 + 1""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf>""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""11"" [label=""$stack20 = $stack19[j]""];\n	""12"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""13"" [label=""$stack22 = $stack21[j]""];\n	""14"" [label=""$stack23 = newLine""];\n	""15"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""16"" [label=""$stack24[j] = $stack23""];\n	""17"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""18"" [label=""$stack25[j] = $stack26""];\n	""19"" [label=""$stack26 = newCol + columnDiff""];\n	""20"" [label=""$stack27 = i""];\n	""21"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""22"" [label=""$stack29 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""23"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""24"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""25"" [label=""$stack32 = start % $stack30""];\n	""26"" [label=""$stack33 = $stack31[$stack32]""];\n	""27"" [label=""$stack34 = $stack29[j]""];\n	""28"" [label=""$stack35 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""29"" [label=""$stack35[j] = newLine""];\n	""30"" [label=""$stack36 = newLine""];\n	""31"" [label=""$stack37 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""32"" [label=""$stack37[j] = $stack36""];\n	""33"" [label=""$stack38 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""34"" [label=""$stack39 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""35"" [label=""$stack40 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize>""];\n	""36"" [label=""$stack41 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""37"" [label=""$stack42 = $stack41[k]""];\n	""38"" [label=""$stack43 = $stack39[j]""];\n	""39"" [label=""$stack44 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline>""];\n	""40"" [label=""$stack44[j] = newLine""];\n	""41"" [label=""$stack45 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""42"" [label=""$stack46 = $stack45[k]""];\n	""43"" [label=""$stack47 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""44"" [label=""$stack48 = columnDiff + $stack46""];\n	""45"" [label=""$stack49 = $stack47[j]""];\n	""46"" [label=""$stack50 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn>""];\n	""47"" [label=""$stack50[j] = $stack51""];\n	""48"" [label=""$stack51 = newCol + columnDiff""];\n	""49"" [label=""$stack52 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos>""];\n	""50"" [label=""$stack53 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""51"" [label=""$stack54 = $stack52 - $stack53""];\n	""52"" [label=""$stack55 = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf>""];\n	""53"" [label=""$stack56 = $stack54 + $stack55""];\n	""54"" [label=""columnDiff = 0""];\n	""55"" [label=""columnDiff = nextColDiff""];\n	""56"" [label=""goto""];\n	""57"" [label=""goto""];\n	""58"" [label=""goto""];\n	""59"" [label=""goto""];\n	""60"" [label=""i = 0""];\n	""61"" [label=""i = i + 1""];\n	""62"" [label=""i = i + 1""];\n	""63"" [label=""if $stack11 < $stack10""];\n	""64"" [label=""if $stack27 >= len""];\n	""65"" [label=""if $stack34 == $stack33""];\n	""66"" [label=""if $stack43 != $stack42""];\n	""67"" [label=""if i >= len""];\n	""68"" [label=""if i >= len""];\n	""69"" [label=""j = 0""];\n	""70"" [label=""j = start % $stack28""];\n	""71"" [label=""j = start % $stack38""];\n	""72"" [label=""k = 0""];\n	""73"" [label=""k = start % $stack40""];\n	""74"" [label=""len = $stack17 + $stack18""];\n	""75"" [label=""len = $stack56 + 1""];\n	""76"" [label=""newCol := @parameter1: int""];\n	""77"" [label=""newLine := @parameter0: int""];\n	""78"" [label=""newLine = newLine + 1""];\n	""79"" [label=""newLine = newLine + 1""];\n	""80"" [label=""nextColDiff = $stack48 - $stack49""];\n	""81"" [label=""nextColDiff = 0""];\n	""82"" [label=""return""];\n	""83"" [label=""start = start + 1""];\n	""84"" [label=""start = start + 1""];\n	""85"" [label=""start = this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int tokenBegin>""];\n	""86"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""87"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = $stack22""];\n	""88"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line> = $stack20""];\n	""1"" -> ""63""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""88""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""87""[label=""cfg_next""];\n	""14"" -> ""78""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""62""[label=""cfg_next""];\n	""21"" -> ""70""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""84""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""65""[label=""cfg_next""];\n	""27"" -> ""24""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""59""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""79""[label=""cfg_next""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""32"" -> ""58""[label=""cfg_next""];\n	""33"" -> ""71""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""73""[label=""cfg_next""];\n	""36"" -> ""83""[label=""cfg_next""];\n	""37"" -> ""66""[label=""cfg_next""];\n	""38"" -> ""36""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""41""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""44""[label=""cfg_next""];\n	""43"" -> ""45""[label=""cfg_next""];\n	""44"" -> ""43""[label=""cfg_next""];\n	""45"" -> ""80""[label=""cfg_next""];\n	""46"" -> ""48""[label=""cfg_next""];\n	""47"" -> ""55""[label=""cfg_next""];\n	""48"" -> ""47""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""51""[label=""cfg_next""];\n	""51"" -> ""52""[label=""cfg_next""];\n	""52"" -> ""53""[label=""cfg_next""];\n	""53"" -> ""75""[label=""cfg_next""];\n	""54"" -> ""67""[label=""cfg_next""];\n	""55"" -> ""61""[label=""cfg_next""];\n	""56"" -> ""60""[label=""cfg_goto""];\n	""57"" -> ""67""[label=""cfg_goto""];\n	""58"" -> ""20""[label=""cfg_goto""];\n	""59"" -> ""20""[label=""cfg_goto""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""69""[label=""cfg_next""];\n	""61"" -> ""57""[label=""cfg_next""];\n	""62"" -> ""64""[label=""cfg_next""];\n	""63"" -> ""3""[label=""cfg_true""];\n	""63"" -> ""49""[label=""cfg_false""];\n	""64"" -> ""10""[label=""cfg_true""];\n	""64"" -> ""22""[label=""cfg_false""];\n	""65"" -> ""28""[label=""cfg_true""];\n	""65"" -> ""31""[label=""cfg_false""];\n	""66"" -> ""39""[label=""cfg_false""];\n	""66"" -> ""68""[label=""cfg_true""];\n	""67"" -> ""34""[label=""cfg_false""];\n	""67"" -> ""68""[label=""cfg_true""];\n	""68"" -> ""10""[label=""cfg_true""];\n	""68"" -> ""15""[label=""cfg_false""];\n	""69"" -> ""72""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""27""[label=""cfg_next""];\n	""71"" -> ""38""[label=""cfg_next""];\n	""72"" -> ""81""[label=""cfg_next""];\n	""73"" -> ""37""[label=""cfg_next""];\n	""74"" -> ""60""[label=""cfg_next""];\n	""75"" -> ""56""[label=""cfg_next""];\n	""76"" -> ""85""[label=""cfg_next""];\n	""77"" -> ""76""[label=""cfg_next""];\n	""78"" -> ""16""[label=""cfg_next""];\n	""79"" -> ""32""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""80"" -> ""46""[label=""cfg_next""];\n	""81"" -> ""54""[label=""cfg_next""];\n	""83"" -> ""35""[label=""cfg_next""];\n	""84"" -> ""23""[label=""cfg_next""];\n	""85"" -> ""2""[label=""cfg_next""];\n	""86"" -> ""77""[label=""cfg_next""];\n	""87"" -> ""82""[label=""cfg_next""];\n	""88"" -> ""12""[label=""cfg_next""];\n	""9"" -> ""74""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.<init>(Reader,int,int,int)",Constructor,No Comment,"public SimpleCharStream(final java.io.Reader dstream, final int startLine, final int startColumn, final int bufferSize) {\n    inputStream = dstream;\n    line = startLine;\n    column = startColumn - 1;\n    available = bufsize = bufferSize;\n    buffer = new char[bufferSize];\n    bufline = new int[bufferSize];\n    bufcolumn = new int[bufferSize];\n}","void <init>(java.io.Reader,int,int,int)","digraph cfg_init {\n	""1"" [label=""$stack5 = startColumn - 1""];\n	""2"" [label=""$stack6 = newarray (char)[bufferSize]""];\n	""3"" [label=""$stack7 = newarray (int)[bufferSize]""];\n	""4"" [label=""$stack8 = newarray (int)[bufferSize]""];\n	""5"" [label=""bufferSize := @parameter3: int""];\n	""6"" [label=""dstream := @parameter0: java.io.Reader""];\n	""7"" [label=""return""];\n	""8"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""9"" [label=""startColumn := @parameter2: int""];\n	""10"" [label=""startLine := @parameter1: int""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsCR> = 0""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: boolean prevCharIsLF> = 0""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char[] buffer> = $stack6""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int available> = bufferSize""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufpos> = -1""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int bufsize> = bufferSize""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = $stack5""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int column> = 0""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int inBuf> = 0""];\n	""21"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line> = 1""];\n	""22"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int line> = startLine""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int maxNextCharInd> = 0""];\n	""24"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufcolumn> = $stack8""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int[] bufline> = $stack7""];\n	""26"" [label=""this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: java.io.Reader inputStream> = dstream""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""23""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_next""];\n	""21"" -> ""12""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""4""[label=""cfg_next""];\n	""26"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""25""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.<init>(Reader,int,int)",Constructor,No Comment,"public SimpleCharStream(final java.io.Reader dstream, final int startLine, final int startColumn) {\n    this(dstream, startLine, startColumn, 4096);\n}","void <init>(java.io.Reader,int,int)","digraph cfg_init {\n	""1"" [label=""dstream := @parameter0: java.io.Reader""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void <init>(java.io.Reader,int,int,int)>(dstream, startLine, startColumn, 4096)""];\n	""4"" [label=""startColumn := @parameter2: int""];\n	""5"" [label=""startLine := @parameter1: int""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.<init>(Reader),Constructor,No Comment,"public SimpleCharStream(final java.io.Reader dstream) {\n    this(dstream, 1, 1, 4096);\n}",void <init>(java.io.Reader),"digraph cfg_init {\n	""1"" [label=""dstream := @parameter0: java.io.Reader""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void <init>(java.io.Reader,int,int,int)>(dstream, 1, 1, 4096)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.<init>(InputStream,int,int,int)",Constructor,No Comment,"public SimpleCharStream(final java.io.InputStream dstream, final int startLine, final int startColumn, final int buffersize) {\n    this(new java.io.InputStreamReader(dstream), startLine, startColumn, 4096);\n}","void <init>(java.io.InputStream,int,int,int)","digraph cfg_init {\n	""1"" [label=""$stack5 = new java.io.InputStreamReader""];\n	""2"" [label=""buffersize := @parameter3: int""];\n	""3"" [label=""dstream := @parameter0: java.io.InputStream""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke $stack5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(dstream)""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void <init>(java.io.Reader,int,int,int)>($stack5, startLine, startColumn, 4096)""];\n	""7"" [label=""startColumn := @parameter2: int""];\n	""8"" [label=""startLine := @parameter1: int""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.SimpleCharStream.<init>(InputStream,int,int)",Constructor,No Comment,"public SimpleCharStream(final java.io.InputStream dstream, final int startLine, final int startColumn) {\n    this(dstream, startLine, startColumn, 4096);\n}","void <init>(java.io.InputStream,int,int)","digraph cfg_init {\n	""1"" [label=""dstream := @parameter0: java.io.InputStream""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void <init>(java.io.InputStream,int,int,int)>(dstream, startLine, startColumn, 4096)""];\n	""4"" [label=""startColumn := @parameter2: int""];\n	""5"" [label=""startLine := @parameter1: int""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.SimpleCharStream.<init>(InputStream),Constructor,No Comment,"public SimpleCharStream(final java.io.InputStream dstream) {\n    this(dstream, 1, 1, 4096);\n}",void <init>(java.io.InputStream),"digraph cfg_init {\n	""1"" [label=""dstream := @parameter0: java.io.InputStream""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void <init>(java.io.InputStream,int,int,int)>(dstream, 1, 1, 4096)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.Token.toString(),Method,* Returns the image.,@Override\npublic String toString() {\n    return image;\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.Token""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.Token.newToken(int),Method,"* Returns a new Token object, by default. However, if you want, you can create and return subclass objects based on the value of ofKind. Simply add the cases\n   * to the switch for all those special cases. For example, if you have a subclass of Token called IDToken that you want to create if ofKind is ID, simlpy add\n   * something like :\n   *\n   * <pre>\n   *    case MyParserConstants.ID : return new IDToken();\n   * </pre>\n   *\n   * to the following switch statement. Then you can cast matchedToken variable to the appropriate type and use it in your lexical actions.\n   *\n   * @param ofKind TODO\n   * @return TODO",public static final Token newToken(final int ofKind) {\n    switch(ofKind) {\n        default:\n            return new Token();\n    }\n},org.apache.commons.jxpath.ri.parser.Token newToken(int),"digraph cfg_newToken {\n	""1"" [label=""$stack1 = new org.apache.commons.jxpath.ri.parser.Token""];\n	""2"" [label=""ofKind := @parameter0: int""];\n	""3"" [label=""return $stack1""];\n	""4"" [label=""specialinvoke $stack1.<org.apache.commons.jxpath.ri.parser.Token: void <init>()>()""];\n	""5"" [label=""switch(ofKind) \{     default:  \}""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_switch""];\n}\n","public , static , final "
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.setDebugStream(PrintStream),Method,No Comment,public void setDebugStream(final java.io.PrintStream ds) {\n    debugStream = ds;\n},void setDebugStream(java.io.PrintStream),"digraph cfg_setDebugStream {\n	""1"" [label=""ds := @parameter0: java.io.PrintStream""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: java.io.PrintStream debugStream> = ds""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjStopStringLiteralDfa_0(int,long,long)",Method,No Comment,"private int jjStopStringLiteralDfa_0(final int pos, final long active0, final long active1) {\n    switch(pos) {\n        case 0:\n            if ((active1 & 0x180000L) != 0L) {\n                return 10;\n            }\n            if ((active0 & 0xfffffffff8000000L) != 0L || (active1 & 0x7fffL) != 0L) {\n                jjmatchedKind = 79;\n                return 12;\n            }\n            return -1;\n        case 1:\n            if ((active0 & 0xfff7fffff0000000L) != 0L || (active1 & 0x7fffL) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 1;\n                return 12;\n            }\n            if ((active0 & 0x8000008000000L) != 0L) {\n                return 12;\n            }\n            return -1;\n        case 2:\n            if ((active0 & 0x10000070000000L) != 0L || (active1 & 0x410L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0xffe7ffff80000000L) != 0L || (active1 & 0x7befL) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 2;\n                return 12;\n            }\n            return -1;\n        case 3:\n            if ((active0 & 0xc1010180000000L) != 0L || (active1 & 0x1a0L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0xff26fefe00000000L) != 0L || (active1 & 0x7a4fL) != 0L) {\n                if (jjmatchedPos != 3) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 3;\n                }\n                return 12;\n            }\n            return -1;\n        case 4:\n            if ((active0 & 0xff62fff600000000L) != 0L || (active1 & 0x520fL) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 4;\n                return 12;\n            }\n            if ((active0 & 0x4000000000000L) != 0L || (active1 & 0x2840L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0x800000000L) != 0L) {\n                if (jjmatchedPos < 3) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 3;\n                }\n                return -1;\n            }\n            return -1;\n        case 5:\n            if ((active0 & 0x300000000000000L) != 0L || (active1 & 0x201L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0xfc62ffe600000000L) != 0L || (active1 & 0x500eL) != 0L) {\n                if (jjmatchedPos != 5) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 5;\n                }\n                return 12;\n            }\n            if ((active0 & 0x1000000000L) != 0L) {\n                if (jjmatchedPos < 4) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 4;\n                }\n                return -1;\n            }\n            if ((active0 & 0x800000000L) != 0L) {\n                if (jjmatchedPos < 3) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 3;\n                }\n                return -1;\n            }\n            return -1;\n        case 6:\n            if ((active0 & 0x200000000L) != 0L || (active1 & 0x1008L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0xfc62ffc400000000L) != 0L || (active1 & 0x4007L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 6;\n                return 12;\n            }\n            if ((active0 & 0x2000000000L) != 0L) {\n                if (jjmatchedPos < 5) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 5;\n                }\n                return -1;\n            }\n            if ((active0 & 0x1000000000L) != 0L) {\n                if (jjmatchedPos < 4) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 4;\n                }\n                return -1;\n            }\n            return -1;\n        case 7:\n            if ((active0 & 0x1002000000000000L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0x2000000000L) != 0L) {\n                if (jjmatchedPos < 5) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 5;\n                }\n                return -1;\n            }\n            if ((active0 & 0xec60ffc400000000L) != 0L || (active1 & 0x4007L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 7;\n                return 12;\n            }\n            return -1;\n        case 8:\n            if ((active0 & 0xe800000000000000L) != 0L || (active1 & 0x4L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0x460ff8400000000L) != 0L || (active1 & 0x4003L) != 0L) {\n                if (jjmatchedPos != 8) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 8;\n                }\n                return 12;\n            }\n            if ((active0 & 0x4000000000L) != 0L) {\n                if (jjmatchedPos < 7) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 7;\n                }\n                return -1;\n            }\n            return -1;\n        case 9:\n            if ((active0 & 0x20000000000000L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0x78000000000L) != 0L) {\n                if (jjmatchedPos < 8) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 8;\n                }\n                return -1;\n            }\n            if ((active0 & 0x4000000000L) != 0L) {\n                if (jjmatchedPos < 7) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 7;\n                }\n                return -1;\n            }\n            if ((active0 & 0x6440f80400000000L) != 0L || (active1 & 0x4003L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 9;\n                return 12;\n            }\n            return -1;\n        case 10:\n            if ((active0 & 0x400000000000000L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0x6040f00400000000L) != 0L || (active1 & 0x4003L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 10;\n                return 12;\n            }\n            if ((active0 & 0x80000000000L) != 0L) {\n                if (jjmatchedPos < 9) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 9;\n                }\n                return -1;\n            }\n            if ((active0 & 0x78000000000L) != 0L) {\n                if (jjmatchedPos < 8) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 8;\n                }\n                return -1;\n            }\n            return -1;\n        case 11:\n            if ((active0 & 0x80000000000L) != 0L) {\n                if (jjmatchedPos < 9) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 9;\n                }\n                return -1;\n            }\n            if ((active0 & 0x6040f00400000000L) != 0L || (active1 & 0x4003L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 11;\n                return 12;\n            }\n            return -1;\n        case 12:\n            if ((active0 & 0x6000f00400000000L) != 0L || (active1 & 0x2L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 12;\n                return 12;\n            }\n            if ((active0 & 0x40000000000000L) != 0L || (active1 & 0x4001L) != 0L) {\n                return 12;\n            }\n            return -1;\n        case 13:\n            if ((active0 & 0x6000f00400000000L) != 0L || (active1 & 0x2L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 13;\n                return 12;\n            }\n            return -1;\n        case 14:\n            if ((active0 & 0x4000000000000000L) != 0L || (active1 & 0x2L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0x2000f00400000000L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 14;\n                return 12;\n            }\n            return -1;\n        case 15:\n            if ((active0 & 0x2000000000000000L) != 0L) {\n                return 12;\n            }\n            if ((active0 & 0xf00400000000L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 15;\n                return 12;\n            }\n            return -1;\n        case 16:\n            if ((active0 & 0xe00400000000L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 16;\n                return 12;\n            }\n            if ((active0 & 0x100000000000L) != 0L) {\n                if (jjmatchedPos < 15) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 15;\n                }\n                return -1;\n            }\n            return -1;\n        case 17:\n            if ((active0 & 0x600000000000L) != 0L) {\n                if (jjmatchedPos < 16) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 16;\n                }\n                return -1;\n            }\n            if ((active0 & 0x100000000000L) != 0L) {\n                if (jjmatchedPos < 15) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 15;\n                }\n                return -1;\n            }\n            if ((active0 & 0x800400000000L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 17;\n                return 12;\n            }\n            return -1;\n        case 18:\n            if ((active0 & 0x800000000000L) != 0L) {\n                if (jjmatchedPos < 17) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 17;\n                }\n                return -1;\n            }\n            if ((active0 & 0x600000000000L) != 0L) {\n                if (jjmatchedPos < 16) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 16;\n                }\n                return -1;\n            }\n            if ((active0 & 0x400000000L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 18;\n                return 12;\n            }\n            return -1;\n        case 19:\n            if ((active0 & 0x400000000L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 19;\n                return 12;\n            }\n            if ((active0 & 0x800000000000L) != 0L) {\n                if (jjmatchedPos < 17) {\n                    jjmatchedKind = 79;\n                    jjmatchedPos = 17;\n                }\n                return -1;\n            }\n            return -1;\n        case 20:\n            if ((active0 & 0x400000000L) != 0L) {\n                jjmatchedKind = 79;\n                jjmatchedPos = 20;\n                return 12;\n            }\n            return -1;\n        default:\n            return -1;\n    }\n}","int jjStopStringLiteralDfa_0(int,long,long)","digraph cfg_jjStopStringLiteralDfa_0 {\n	""1"" [label=""$stack10 = active0 & 140737488355328L""];\n	""2"" [label=""$stack100 = $stack99 cmp 0L""];\n	""3"" [label=""$stack101 = active0 & 137438953472L""];\n	""4"" [label=""$stack102 = $stack101 cmp 0L""];\n	""5"" [label=""$stack103 = active0 & -1413849065715662848L""];\n	""6"" [label=""$stack104 = $stack103 cmp 0L""];\n	""7"" [label=""$stack105 = active1 & 16391L""];\n	""8"" [label=""$stack106 = $stack105 cmp 0L""];\n	""9"" [label=""$stack107 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""10"" [label=""$stack108 = active0 & 8589934592L""];\n	""11"" [label=""$stack109 = $stack108 cmp 0L""];\n	""12"" [label=""$stack11 = $stack10 cmp 0L""];\n	""13"" [label=""$stack110 = active1 & 4104L""];\n	""14"" [label=""$stack111 = $stack110 cmp 0L""];\n	""15"" [label=""$stack112 = active0 & -260364611155394560L""];\n	""16"" [label=""$stack113 = $stack112 cmp 0L""];\n	""17"" [label=""$stack114 = active1 & 16391L""];\n	""18"" [label=""$stack115 = $stack114 cmp 0L""];\n	""19"" [label=""$stack116 = active0 & 137438953472L""];\n	""20"" [label=""$stack117 = $stack116 cmp 0L""];\n	""21"" [label=""$stack118 = active0 & 68719476736L""];\n	""22"" [label=""$stack119 = $stack118 cmp 0L""];\n	""23"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""24"" [label=""$stack120 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""25"" [label=""$stack121 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""26"" [label=""$stack122 = active0 & 216172782113783808L""];\n	""27"" [label=""$stack123 = $stack122 cmp 0L""];\n	""28"" [label=""$stack124 = active1 & 513L""];\n	""29"" [label=""$stack125 = $stack124 cmp 0L""];\n	""30"" [label=""$stack126 = active0 & -260364465126506496L""];\n	""31"" [label=""$stack127 = $stack126 cmp 0L""];\n	""32"" [label=""$stack128 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""33"" [label=""$stack129 = active1 & 20494L""];\n	""34"" [label=""$stack13 = active0 & 140737488355328L""];\n	""35"" [label=""$stack130 = $stack129 cmp 0L""];\n	""36"" [label=""$stack131 = active0 & 68719476736L""];\n	""37"" [label=""$stack132 = $stack131 cmp 0L""];\n	""38"" [label=""$stack133 = active0 & 34359738368L""];\n	""39"" [label=""$stack134 = $stack133 cmp 0L""];\n	""40"" [label=""$stack135 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""41"" [label=""$stack136 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""42"" [label=""$stack137 = active0 & -44191614293245952L""];\n	""43"" [label=""$stack138 = $stack137 cmp 0L""];\n	""44"" [label=""$stack139 = active1 & 21007L""];\n	""45"" [label=""$stack14 = $stack13 cmp 0L""];\n	""46"" [label=""$stack140 = $stack139 cmp 0L""];\n	""47"" [label=""$stack141 = active0 & 1125899906842624L""];\n	""48"" [label=""$stack142 = $stack141 cmp 0L""];\n	""49"" [label=""$stack143 = active1 & 10304L""];\n	""50"" [label=""$stack144 = $stack143 cmp 0L""];\n	""51"" [label=""$stack145 = active0 & 34359738368L""];\n	""52"" [label=""$stack146 = $stack145 cmp 0L""];\n	""53"" [label=""$stack147 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""54"" [label=""$stack148 = active0 & 54325776459235328L""];\n	""55"" [label=""$stack149 = $stack148 cmp 0L""];\n	""56"" [label=""$stack15 = active0 & 105553116266496L""];\n	""57"" [label=""$stack150 = active1 & 416L""];\n	""58"" [label=""$stack151 = $stack150 cmp 0L""];\n	""59"" [label=""$stack152 = active0 & -61081178047774720L""];\n	""60"" [label=""$stack153 = $stack152 cmp 0L""];\n	""61"" [label=""$stack154 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""62"" [label=""$stack155 = active1 & 31311L""];\n	""63"" [label=""$stack156 = $stack155 cmp 0L""];\n	""64"" [label=""$stack157 = active0 & 4503601506418688L""];\n	""65"" [label=""$stack158 = $stack157 cmp 0L""];\n	""66"" [label=""$stack159 = active1 & 1040L""];\n	""67"" [label=""$stack16 = $stack15 cmp 0L""];\n	""68"" [label=""$stack160 = $stack159 cmp 0L""];\n	""69"" [label=""$stack161 = active0 & -6755401588539392L""];\n	""70"" [label=""$stack162 = $stack161 cmp 0L""];\n	""71"" [label=""$stack163 = active1 & 31727L""];\n	""72"" [label=""$stack164 = $stack163 cmp 0L""];\n	""73"" [label=""$stack165 = active0 & -2251800082120704L""];\n	""74"" [label=""$stack166 = $stack165 cmp 0L""];\n	""75"" [label=""$stack167 = active1 & 32767L""];\n	""76"" [label=""$stack168 = $stack167 cmp 0L""];\n	""77"" [label=""$stack169 = active0 & 2251799947902976L""];\n	""78"" [label=""$stack17 = active0 & 17179869184L""];\n	""79"" [label=""$stack170 = $stack169 cmp 0L""];\n	""80"" [label=""$stack171 = active1 & 1572864L""];\n	""81"" [label=""$stack172 = $stack171 cmp 0L""];\n	""82"" [label=""$stack173 = active0 & -134217728L""];\n	""83"" [label=""$stack174 = $stack173 cmp 0L""];\n	""84"" [label=""$stack175 = active1 & 32767L""];\n	""85"" [label=""$stack176 = $stack175 cmp 0L""];\n	""86"" [label=""$stack18 = $stack17 cmp 0L""];\n	""87"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""88"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""89"" [label=""$stack21 = active0 & 105553116266496L""];\n	""90"" [label=""$stack22 = $stack21 cmp 0L""];\n	""91"" [label=""$stack23 = active0 & 17592186044416L""];\n	""92"" [label=""$stack24 = $stack23 cmp 0L""];\n	""93"" [label=""$stack25 = active0 & 140754668224512L""];\n	""94"" [label=""$stack26 = $stack25 cmp 0L""];\n	""95"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""96"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""97"" [label=""$stack29 = active0 & 246307784491008L""];\n	""98"" [label=""$stack30 = $stack29 cmp 0L""];\n	""99"" [label=""$stack31 = active0 & 17592186044416L""];\n	""100"" [label=""$stack32 = $stack31 cmp 0L""];\n	""101"" [label=""$stack33 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""102"" [label=""$stack34 = active0 & 2305843009213693952L""];\n	""103"" [label=""$stack35 = $stack34 cmp 0L""];\n	""104"" [label=""$stack36 = active0 & 263899970535424L""];\n	""105"" [label=""$stack37 = $stack36 cmp 0L""];\n	""106"" [label=""$stack38 = active0 & 4611686018427387904L""];\n	""107"" [label=""$stack39 = $stack38 cmp 0L""];\n	""108"" [label=""$stack40 = active1 & 2L""];\n	""109"" [label=""$stack41 = $stack40 cmp 0L""];\n	""110"" [label=""$stack42 = active0 & 2306106909184229376L""];\n	""111"" [label=""$stack43 = $stack42 cmp 0L""];\n	""112"" [label=""$stack44 = active0 & 6917792927611617280L""];\n	""113"" [label=""$stack45 = $stack44 cmp 0L""];\n	""114"" [label=""$stack46 = active1 & 2L""];\n	""115"" [label=""$stack47 = $stack46 cmp 0L""];\n	""116"" [label=""$stack48 = active0 & 6917792927611617280L""];\n	""117"" [label=""$stack49 = $stack48 cmp 0L""];\n	""118"" [label=""$stack50 = active1 & 2L""];\n	""119"" [label=""$stack51 = $stack50 cmp 0L""];\n	""120"" [label=""$stack52 = active0 & 18014398509481984L""];\n	""121"" [label=""$stack53 = $stack52 cmp 0L""];\n	""122"" [label=""$stack54 = active1 & 16385L""];\n	""123"" [label=""$stack55 = $stack54 cmp 0L""];\n	""124"" [label=""$stack56 = active0 & 8796093022208L""];\n	""125"" [label=""$stack57 = $stack56 cmp 0L""];\n	""126"" [label=""$stack58 = active0 & 6935807326121099264L""];\n	""127"" [label=""$stack59 = $stack58 cmp 0L""];\n	""128"" [label=""$stack6 = active0 & 17179869184L""];\n	""129"" [label=""$stack60 = active1 & 16387L""];\n	""130"" [label=""$stack61 = $stack60 cmp 0L""];\n	""131"" [label=""$stack62 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""132"" [label=""$stack63 = active0 & 288230376151711744L""];\n	""133"" [label=""$stack64 = $stack63 cmp 0L""];\n	""134"" [label=""$stack65 = active0 & 6935807326121099264L""];\n	""135"" [label=""$stack66 = $stack65 cmp 0L""];\n	""136"" [label=""$stack67 = active1 & 16387L""];\n	""137"" [label=""$stack68 = $stack67 cmp 0L""];\n	""138"" [label=""$stack69 = active0 & 8796093022208L""];\n	""139"" [label=""$stack7 = $stack6 cmp 0L""];\n	""140"" [label=""$stack70 = $stack69 cmp 0L""];\n	""141"" [label=""$stack71 = active0 & 8246337208320L""];\n	""142"" [label=""$stack72 = $stack71 cmp 0L""];\n	""143"" [label=""$stack73 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""144"" [label=""$stack74 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""145"" [label=""$stack75 = active0 & 9007199254740992L""];\n	""146"" [label=""$stack76 = $stack75 cmp 0L""];\n	""147"" [label=""$stack77 = active0 & 8246337208320L""];\n	""148"" [label=""$stack78 = $stack77 cmp 0L""];\n	""149"" [label=""$stack79 = active0 & 274877906944L""];\n	""150"" [label=""$stack8 = active0 & 17179869184L""];\n	""151"" [label=""$stack80 = $stack79 cmp 0L""];\n	""152"" [label=""$stack81 = active0 & 7224046498365833216L""];\n	""153"" [label=""$stack82 = $stack81 cmp 0L""];\n	""154"" [label=""$stack83 = active1 & 16387L""];\n	""155"" [label=""$stack84 = $stack83 cmp 0L""];\n	""156"" [label=""$stack85 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""157"" [label=""$stack86 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""158"" [label=""$stack87 = active0 & -1729382256910270464L""];\n	""159"" [label=""$stack88 = $stack87 cmp 0L""];\n	""160"" [label=""$stack89 = active1 & 4L""];\n	""161"" [label=""$stack9 = $stack8 cmp 0L""];\n	""162"" [label=""$stack90 = $stack89 cmp 0L""];\n	""163"" [label=""$stack91 = active0 & 315532916316700672L""];\n	""164"" [label=""$stack92 = $stack91 cmp 0L""];\n	""165"" [label=""$stack93 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""166"" [label=""$stack94 = active1 & 16387L""];\n	""167"" [label=""$stack95 = $stack94 cmp 0L""];\n	""168"" [label=""$stack96 = active0 & 274877906944L""];\n	""169"" [label=""$stack97 = $stack96 cmp 0L""];\n	""170"" [label=""$stack98 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""171"" [label=""$stack99 = active0 & 1153484454560268288L""];\n	""172"" [label=""active0 := @parameter1: long""];\n	""173"" [label=""active1 := @parameter2: long""];\n	""174"" [label=""if $stack100 == 0""];\n	""175"" [label=""if $stack102 == 0""];\n	""176"" [label=""if $stack104 != 0""];\n	""177"" [label=""if $stack106 == 0""];\n	""178"" [label=""if $stack107 >= 5""];\n	""179"" [label=""if $stack109 != 0""];\n	""180"" [label=""if $stack11 == 0""];\n	""181"" [label=""if $stack111 == 0""];\n	""182"" [label=""if $stack113 != 0""];\n	""183"" [label=""if $stack115 == 0""];\n	""184"" [label=""if $stack117 == 0""];\n	""185"" [label=""if $stack119 == 0""];\n	""186"" [label=""if $stack12 >= 17""];\n	""187"" [label=""if $stack120 >= 4""];\n	""188"" [label=""if $stack121 >= 5""];\n	""189"" [label=""if $stack123 != 0""];\n	""190"" [label=""if $stack125 == 0""];\n	""191"" [label=""if $stack127 != 0""];\n	""192"" [label=""if $stack128 == 5""];\n	""193"" [label=""if $stack130 == 0""];\n	""194"" [label=""if $stack132 == 0""];\n	""195"" [label=""if $stack134 == 0""];\n	""196"" [label=""if $stack135 >= 3""];\n	""197"" [label=""if $stack136 >= 4""];\n	""198"" [label=""if $stack138 != 0""];\n	""199"" [label=""if $stack14 == 0""];\n	""200"" [label=""if $stack140 == 0""];\n	""201"" [label=""if $stack142 != 0""];\n	""202"" [label=""if $stack144 == 0""];\n	""203"" [label=""if $stack146 == 0""];\n	""204"" [label=""if $stack147 >= 3""];\n	""205"" [label=""if $stack149 != 0""];\n	""206"" [label=""if $stack151 == 0""];\n	""207"" [label=""if $stack153 != 0""];\n	""208"" [label=""if $stack154 == 3""];\n	""209"" [label=""if $stack156 == 0""];\n	""210"" [label=""if $stack158 != 0""];\n	""211"" [label=""if $stack16 == 0""];\n	""212"" [label=""if $stack160 == 0""];\n	""213"" [label=""if $stack162 != 0""];\n	""214"" [label=""if $stack164 == 0""];\n	""215"" [label=""if $stack166 != 0""];\n	""216"" [label=""if $stack168 == 0""];\n	""217"" [label=""if $stack170 == 0""];\n	""218"" [label=""if $stack172 == 0""];\n	""219"" [label=""if $stack174 != 0""];\n	""220"" [label=""if $stack176 == 0""];\n	""221"" [label=""if $stack18 == 0""];\n	""222"" [label=""if $stack19 >= 16""];\n	""223"" [label=""if $stack20 >= 17""];\n	""224"" [label=""if $stack22 == 0""];\n	""225"" [label=""if $stack24 == 0""];\n	""226"" [label=""if $stack26 == 0""];\n	""227"" [label=""if $stack27 >= 15""];\n	""228"" [label=""if $stack28 >= 16""];\n	""229"" [label=""if $stack30 == 0""];\n	""230"" [label=""if $stack32 == 0""];\n	""231"" [label=""if $stack33 >= 15""];\n	""232"" [label=""if $stack35 == 0""];\n	""233"" [label=""if $stack37 == 0""];\n	""234"" [label=""if $stack39 != 0""];\n	""235"" [label=""if $stack41 == 0""];\n	""236"" [label=""if $stack43 == 0""];\n	""237"" [label=""if $stack45 != 0""];\n	""238"" [label=""if $stack47 == 0""];\n	""239"" [label=""if $stack49 != 0""];\n	""240"" [label=""if $stack51 == 0""];\n	""241"" [label=""if $stack53 != 0""];\n	""242"" [label=""if $stack55 == 0""];\n	""243"" [label=""if $stack57 == 0""];\n	""244"" [label=""if $stack59 != 0""];\n	""245"" [label=""if $stack61 == 0""];\n	""246"" [label=""if $stack62 >= 9""];\n	""247"" [label=""if $stack64 == 0""];\n	""248"" [label=""if $stack66 != 0""];\n	""249"" [label=""if $stack68 == 0""];\n	""250"" [label=""if $stack7 == 0""];\n	""251"" [label=""if $stack70 == 0""];\n	""252"" [label=""if $stack72 == 0""];\n	""253"" [label=""if $stack73 >= 8""];\n	""254"" [label=""if $stack74 >= 9""];\n	""255"" [label=""if $stack76 == 0""];\n	""256"" [label=""if $stack78 == 0""];\n	""257"" [label=""if $stack80 == 0""];\n	""258"" [label=""if $stack82 != 0""];\n	""259"" [label=""if $stack84 == 0""];\n	""260"" [label=""if $stack85 >= 7""];\n	""261"" [label=""if $stack86 >= 8""];\n	""262"" [label=""if $stack88 != 0""];\n	""263"" [label=""if $stack9 == 0""];\n	""264"" [label=""if $stack90 == 0""];\n	""265"" [label=""if $stack92 != 0""];\n	""266"" [label=""if $stack93 == 8""];\n	""267"" [label=""if $stack95 == 0""];\n	""268"" [label=""if $stack97 == 0""];\n	""269"" [label=""if $stack98 >= 7""];\n	""270"" [label=""pos := @parameter0: int""];\n	""271"" [label=""return -1""];\n	""272"" [label=""return -1""];\n	""273"" [label=""return -1""];\n	""274"" [label=""return -1""];\n	""275"" [label=""return -1""];\n	""276"" [label=""return -1""];\n	""277"" [label=""return -1""];\n	""278"" [label=""return -1""];\n	""279"" [label=""return -1""];\n	""280"" [label=""return -1""];\n	""281"" [label=""return -1""];\n	""282"" [label=""return -1""];\n	""283"" [label=""return -1""];\n	""284"" [label=""return -1""];\n	""285"" [label=""return -1""];\n	""286"" [label=""return -1""];\n	""287"" [label=""return -1""];\n	""288"" [label=""return -1""];\n	""289"" [label=""return -1""];\n	""290"" [label=""return -1""];\n	""291"" [label=""return -1""];\n	""292"" [label=""return -1""];\n	""293"" [label=""return -1""];\n	""294"" [label=""return -1""];\n	""295"" [label=""return -1""];\n	""296"" [label=""return -1""];\n	""297"" [label=""return -1""];\n	""298"" [label=""return -1""];\n	""299"" [label=""return -1""];\n	""300"" [label=""return -1""];\n	""301"" [label=""return -1""];\n	""302"" [label=""return -1""];\n	""303"" [label=""return -1""];\n	""304"" [label=""return -1""];\n	""305"" [label=""return -1""];\n	""306"" [label=""return -1""];\n	""307"" [label=""return -1""];\n	""308"" [label=""return -1""];\n	""309"" [label=""return -1""];\n	""310"" [label=""return -1""];\n	""311"" [label=""return 10""];\n	""312"" [label=""return 12""];\n	""313"" [label=""return 12""];\n	""314"" [label=""return 12""];\n	""315"" [label=""return 12""];\n	""316"" [label=""return 12""];\n	""317"" [label=""return 12""];\n	""318"" [label=""return 12""];\n	""319"" [label=""return 12""];\n	""320"" [label=""return 12""];\n	""321"" [label=""return 12""];\n	""322"" [label=""return 12""];\n	""323"" [label=""return 12""];\n	""324"" [label=""return 12""];\n	""325"" [label=""return 12""];\n	""326"" [label=""return 12""];\n	""327"" [label=""return 12""];\n	""328"" [label=""return 12""];\n	""329"" [label=""return 12""];\n	""330"" [label=""return 12""];\n	""331"" [label=""return 12""];\n	""332"" [label=""return 12""];\n	""333"" [label=""return 12""];\n	""334"" [label=""return 12""];\n	""335"" [label=""return 12""];\n	""336"" [label=""return 12""];\n	""337"" [label=""return 12""];\n	""338"" [label=""return 12""];\n	""339"" [label=""return 12""];\n	""340"" [label=""return 12""];\n	""341"" [label=""return 12""];\n	""342"" [label=""return 12""];\n	""343"" [label=""return 12""];\n	""344"" [label=""return 12""];\n	""345"" [label=""return 12""];\n	""346"" [label=""switch(pos) \{     case 0:     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     default:  \}""];\n	""347"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""348"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""349"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""350"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""351"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""352"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""353"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""354"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""355"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""356"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""357"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""358"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""359"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""360"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""361"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""362"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""363"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""364"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""365"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""366"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""367"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""368"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""369"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""370"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""371"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""372"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""373"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""374"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""375"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""376"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""377"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""378"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""379"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""380"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""381"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""382"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""383"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""384"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""385"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""386"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 79""];\n	""387"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 1""];\n	""388"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 10""];\n	""389"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 11""];\n	""390"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 12""];\n	""391"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 13""];\n	""392"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 14""];\n	""393"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 15""];\n	""394"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 15""];\n	""395"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 15""];\n	""396"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 16""];\n	""397"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 16""];\n	""398"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 16""];\n	""399"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 17""];\n	""400"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 17""];\n	""401"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 17""];\n	""402"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 18""];\n	""403"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 19""];\n	""404"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 2""];\n	""405"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 20""];\n	""406"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 3""];\n	""407"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 3""];\n	""408"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 3""];\n	""409"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 4""];\n	""410"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 4""];\n	""411"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 4""];\n	""412"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 5""];\n	""413"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 5""];\n	""414"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 5""];\n	""415"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 6""];\n	""416"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 7""];\n	""417"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 7""];\n	""418"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 7""];\n	""419"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 8""];\n	""420"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 8""];\n	""421"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 8""];\n	""422"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 9""];\n	""423"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 9""];\n	""424"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 9""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""100"" -> ""230""[label=""cfg_next""];\n	""101"" -> ""231""[label=""cfg_next""];\n	""102"" -> ""103""[label=""cfg_next""];\n	""103"" -> ""232""[label=""cfg_next""];\n	""104"" -> ""105""[label=""cfg_next""];\n	""105"" -> ""233""[label=""cfg_next""];\n	""106"" -> ""107""[label=""cfg_next""];\n	""107"" -> ""234""[label=""cfg_next""];\n	""108"" -> ""109""[label=""cfg_next""];\n	""109"" -> ""235""[label=""cfg_next""];\n	""11"" -> ""179""[label=""cfg_next""];\n	""110"" -> ""111""[label=""cfg_next""];\n	""111"" -> ""236""[label=""cfg_next""];\n	""112"" -> ""113""[label=""cfg_next""];\n	""113"" -> ""237""[label=""cfg_next""];\n	""114"" -> ""115""[label=""cfg_next""];\n	""115"" -> ""238""[label=""cfg_next""];\n	""116"" -> ""117""[label=""cfg_next""];\n	""117"" -> ""239""[label=""cfg_next""];\n	""118"" -> ""119""[label=""cfg_next""];\n	""119"" -> ""240""[label=""cfg_next""];\n	""12"" -> ""180""[label=""cfg_next""];\n	""120"" -> ""121""[label=""cfg_next""];\n	""121"" -> ""241""[label=""cfg_next""];\n	""122"" -> ""123""[label=""cfg_next""];\n	""123"" -> ""242""[label=""cfg_next""];\n	""124"" -> ""125""[label=""cfg_next""];\n	""125"" -> ""243""[label=""cfg_next""];\n	""126"" -> ""127""[label=""cfg_next""];\n	""127"" -> ""244""[label=""cfg_next""];\n	""128"" -> ""139""[label=""cfg_next""];\n	""129"" -> ""130""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""130"" -> ""245""[label=""cfg_next""];\n	""131"" -> ""246""[label=""cfg_next""];\n	""132"" -> ""133""[label=""cfg_next""];\n	""133"" -> ""247""[label=""cfg_next""];\n	""134"" -> ""135""[label=""cfg_next""];\n	""135"" -> ""248""[label=""cfg_next""];\n	""136"" -> ""137""[label=""cfg_next""];\n	""137"" -> ""249""[label=""cfg_next""];\n	""138"" -> ""140""[label=""cfg_next""];\n	""139"" -> ""250""[label=""cfg_next""];\n	""14"" -> ""181""[label=""cfg_next""];\n	""140"" -> ""251""[label=""cfg_next""];\n	""141"" -> ""142""[label=""cfg_next""];\n	""142"" -> ""252""[label=""cfg_next""];\n	""143"" -> ""253""[label=""cfg_next""];\n	""144"" -> ""254""[label=""cfg_next""];\n	""145"" -> ""146""[label=""cfg_next""];\n	""146"" -> ""255""[label=""cfg_next""];\n	""147"" -> ""148""[label=""cfg_next""];\n	""148"" -> ""256""[label=""cfg_next""];\n	""149"" -> ""151""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""150"" -> ""161""[label=""cfg_next""];\n	""151"" -> ""257""[label=""cfg_next""];\n	""152"" -> ""153""[label=""cfg_next""];\n	""153"" -> ""258""[label=""cfg_next""];\n	""154"" -> ""155""[label=""cfg_next""];\n	""155"" -> ""259""[label=""cfg_next""];\n	""156"" -> ""260""[label=""cfg_next""];\n	""157"" -> ""261""[label=""cfg_next""];\n	""158"" -> ""159""[label=""cfg_next""];\n	""159"" -> ""262""[label=""cfg_next""];\n	""16"" -> ""182""[label=""cfg_next""];\n	""160"" -> ""162""[label=""cfg_next""];\n	""161"" -> ""263""[label=""cfg_next""];\n	""162"" -> ""264""[label=""cfg_next""];\n	""163"" -> ""164""[label=""cfg_next""];\n	""164"" -> ""265""[label=""cfg_next""];\n	""165"" -> ""266""[label=""cfg_next""];\n	""166"" -> ""167""[label=""cfg_next""];\n	""167"" -> ""267""[label=""cfg_next""];\n	""168"" -> ""169""[label=""cfg_next""];\n	""169"" -> ""268""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""170"" -> ""269""[label=""cfg_next""];\n	""171"" -> ""2""[label=""cfg_next""];\n	""172"" -> ""173""[label=""cfg_next""];\n	""173"" -> ""346""[label=""cfg_next""];\n	""174"" -> ""3""[label=""cfg_true""];\n	""174"" -> ""325""[label=""cfg_false""];\n	""175"" -> ""5""[label=""cfg_true""];\n	""175"" -> ""9""[label=""cfg_false""];\n	""176"" -> ""361""[label=""cfg_true""];\n	""176"" -> ""7""[label=""cfg_false""];\n	""177"" -> ""285""[label=""cfg_true""];\n	""177"" -> ""361""[label=""cfg_false""];\n	""178"" -> ""284""[label=""cfg_true""];\n	""178"" -> ""360""[label=""cfg_false""];\n	""179"" -> ""13""[label=""cfg_false""];\n	""179"" -> ""323""[label=""cfg_true""];\n	""18"" -> ""183""[label=""cfg_next""];\n	""180"" -> ""23""[label=""cfg_false""];\n	""180"" -> ""308""[label=""cfg_true""];\n	""181"" -> ""15""[label=""cfg_true""];\n	""181"" -> ""323""[label=""cfg_false""];\n	""182"" -> ""17""[label=""cfg_false""];\n	""182"" -> ""357""[label=""cfg_true""];\n	""183"" -> ""19""[label=""cfg_true""];\n	""183"" -> ""357""[label=""cfg_false""];\n	""184"" -> ""21""[label=""cfg_true""];\n	""184"" -> ""25""[label=""cfg_false""];\n	""185"" -> ""24""[label=""cfg_false""];\n	""185"" -> ""282""[label=""cfg_true""];\n	""186"" -> ""309""[label=""cfg_true""];\n	""186"" -> ""385""[label=""cfg_false""];\n	""187"" -> ""283""[label=""cfg_true""];\n	""187"" -> ""359""[label=""cfg_false""];\n	""188"" -> ""281""[label=""cfg_true""];\n	""188"" -> ""358""[label=""cfg_false""];\n	""189"" -> ""28""[label=""cfg_false""];\n	""189"" -> ""321""[label=""cfg_true""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""190"" -> ""30""[label=""cfg_true""];\n	""190"" -> ""321""[label=""cfg_false""];\n	""191"" -> ""32""[label=""cfg_true""];\n	""191"" -> ""33""[label=""cfg_false""];\n	""192"" -> ""322""[label=""cfg_true""];\n	""192"" -> ""354""[label=""cfg_false""];\n	""193"" -> ""32""[label=""cfg_false""];\n	""193"" -> ""36""[label=""cfg_true""];\n	""194"" -> ""38""[label=""cfg_true""];\n	""194"" -> ""41""[label=""cfg_false""];\n	""195"" -> ""279""[label=""cfg_true""];\n	""195"" -> ""40""[label=""cfg_false""];\n	""196"" -> ""280""[label=""cfg_true""];\n	""196"" -> ""356""[label=""cfg_false""];\n	""197"" -> ""278""[label=""cfg_true""];\n	""197"" -> ""355""[label=""cfg_false""];\n	""198"" -> ""352""[label=""cfg_true""];\n	""198"" -> ""44""[label=""cfg_false""];\n	""199"" -> ""56""[label=""cfg_true""];\n	""199"" -> ""88""[label=""cfg_false""];\n	""2"" -> ""174""[label=""cfg_next""];\n	""20"" -> ""184""[label=""cfg_next""];\n	""200"" -> ""352""[label=""cfg_false""];\n	""200"" -> ""47""[label=""cfg_true""];\n	""201"" -> ""320""[label=""cfg_true""];\n	""201"" -> ""49""[label=""cfg_false""];\n	""202"" -> ""320""[label=""cfg_false""];\n	""202"" -> ""51""[label=""cfg_true""];\n	""203"" -> ""276""[label=""cfg_true""];\n	""203"" -> ""53""[label=""cfg_false""];\n	""204"" -> ""277""[label=""cfg_true""];\n	""204"" -> ""353""[label=""cfg_false""];\n	""205"" -> ""317""[label=""cfg_true""];\n	""205"" -> ""57""[label=""cfg_false""];\n	""206"" -> ""317""[label=""cfg_false""];\n	""206"" -> ""59""[label=""cfg_true""];\n	""207"" -> ""61""[label=""cfg_true""];\n	""207"" -> ""62""[label=""cfg_false""];\n	""208"" -> ""318""[label=""cfg_true""];\n	""208"" -> ""351""[label=""cfg_false""];\n	""209"" -> ""275""[label=""cfg_true""];\n	""209"" -> ""61""[label=""cfg_false""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""210"" -> ""315""[label=""cfg_true""];\n	""210"" -> ""66""[label=""cfg_false""];\n	""211"" -> ""78""[label=""cfg_true""];\n	""211"" -> ""87""[label=""cfg_false""];\n	""212"" -> ""315""[label=""cfg_false""];\n	""212"" -> ""69""[label=""cfg_true""];\n	""213"" -> ""350""[label=""cfg_true""];\n	""213"" -> ""71""[label=""cfg_false""];\n	""214"" -> ""274""[label=""cfg_true""];\n	""214"" -> ""350""[label=""cfg_false""];\n	""215"" -> ""349""[label=""cfg_true""];\n	""215"" -> ""75""[label=""cfg_false""];\n	""216"" -> ""349""[label=""cfg_false""];\n	""216"" -> ""77""[label=""cfg_true""];\n	""217"" -> ""273""[label=""cfg_true""];\n	""217"" -> ""314""[label=""cfg_false""];\n	""218"" -> ""311""[label=""cfg_false""];\n	""218"" -> ""82""[label=""cfg_true""];\n	""219"" -> ""348""[label=""cfg_true""];\n	""219"" -> ""84""[label=""cfg_false""];\n	""22"" -> ""185""[label=""cfg_next""];\n	""220"" -> ""272""[label=""cfg_true""];\n	""220"" -> ""348""[label=""cfg_false""];\n	""221"" -> ""307""[label=""cfg_true""];\n	""221"" -> ""383""[label=""cfg_false""];\n	""222"" -> ""306""[label=""cfg_true""];\n	""222"" -> ""382""[label=""cfg_false""];\n	""223"" -> ""305""[label=""cfg_true""];\n	""223"" -> ""381""[label=""cfg_false""];\n	""224"" -> ""91""[label=""cfg_true""];\n	""224"" -> ""96""[label=""cfg_false""];\n	""225"" -> ""93""[label=""cfg_true""];\n	""225"" -> ""95""[label=""cfg_false""];\n	""226"" -> ""304""[label=""cfg_true""];\n	""226"" -> ""380""[label=""cfg_false""];\n	""227"" -> ""303""[label=""cfg_true""];\n	""227"" -> ""379""[label=""cfg_false""];\n	""228"" -> ""302""[label=""cfg_true""];\n	""228"" -> ""378""[label=""cfg_false""];\n	""229"" -> ""376""[label=""cfg_false""];\n	""229"" -> ""99""[label=""cfg_true""];\n	""23"" -> ""186""[label=""cfg_next""];\n	""230"" -> ""101""[label=""cfg_false""];\n	""230"" -> ""300""[label=""cfg_true""];\n	""231"" -> ""301""[label=""cfg_true""];\n	""231"" -> ""377""[label=""cfg_false""];\n	""232"" -> ""104""[label=""cfg_true""];\n	""232"" -> ""339""[label=""cfg_false""];\n	""233"" -> ""299""[label=""cfg_true""];\n	""233"" -> ""375""[label=""cfg_false""];\n	""234"" -> ""108""[label=""cfg_false""];\n	""234"" -> ""337""[label=""cfg_true""];\n	""235"" -> ""110""[label=""cfg_true""];\n	""235"" -> ""337""[label=""cfg_false""];\n	""236"" -> ""298""[label=""cfg_true""];\n	""236"" -> ""374""[label=""cfg_false""];\n	""237"" -> ""114""[label=""cfg_false""];\n	""237"" -> ""373""[label=""cfg_true""];\n	""238"" -> ""297""[label=""cfg_true""];\n	""238"" -> ""373""[label=""cfg_false""];\n	""239"" -> ""118""[label=""cfg_false""];\n	""239"" -> ""372""[label=""cfg_true""];\n	""24"" -> ""187""[label=""cfg_next""];\n	""240"" -> ""120""[label=""cfg_true""];\n	""240"" -> ""372""[label=""cfg_false""];\n	""241"" -> ""122""[label=""cfg_false""];\n	""241"" -> ""335""[label=""cfg_true""];\n	""242"" -> ""296""[label=""cfg_true""];\n	""242"" -> ""335""[label=""cfg_false""];\n	""243"" -> ""126""[label=""cfg_true""];\n	""243"" -> ""131""[label=""cfg_false""];\n	""244"" -> ""129""[label=""cfg_false""];\n	""244"" -> ""371""[label=""cfg_true""];\n	""245"" -> ""295""[label=""cfg_true""];\n	""245"" -> ""371""[label=""cfg_false""];\n	""246"" -> ""294""[label=""cfg_true""];\n	""246"" -> ""370""[label=""cfg_false""];\n	""247"" -> ""134""[label=""cfg_true""];\n	""247"" -> ""331""[label=""cfg_false""];\n	""248"" -> ""136""[label=""cfg_false""];\n	""248"" -> ""367""[label=""cfg_true""];\n	""249"" -> ""138""[label=""cfg_true""];\n	""249"" -> ""367""[label=""cfg_false""];\n	""25"" -> ""188""[label=""cfg_next""];\n	""250"" -> ""310""[label=""cfg_true""];\n	""250"" -> ""386""[label=""cfg_false""];\n	""251"" -> ""141""[label=""cfg_true""];\n	""251"" -> ""144""[label=""cfg_false""];\n	""252"" -> ""143""[label=""cfg_false""];\n	""252"" -> ""292""[label=""cfg_true""];\n	""253"" -> ""293""[label=""cfg_true""];\n	""253"" -> ""369""[label=""cfg_false""];\n	""254"" -> ""291""[label=""cfg_true""];\n	""254"" -> ""368""[label=""cfg_false""];\n	""255"" -> ""147""[label=""cfg_true""];\n	""255"" -> ""329""[label=""cfg_false""];\n	""256"" -> ""149""[label=""cfg_true""];\n	""256"" -> ""157""[label=""cfg_false""];\n	""257"" -> ""152""[label=""cfg_true""];\n	""257"" -> ""156""[label=""cfg_false""];\n	""258"" -> ""154""[label=""cfg_false""];\n	""258"" -> ""366""[label=""cfg_true""];\n	""259"" -> ""290""[label=""cfg_true""];\n	""259"" -> ""366""[label=""cfg_false""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""260"" -> ""289""[label=""cfg_true""];\n	""260"" -> ""365""[label=""cfg_false""];\n	""261"" -> ""288""[label=""cfg_true""];\n	""261"" -> ""364""[label=""cfg_false""];\n	""262"" -> ""160""[label=""cfg_false""];\n	""262"" -> ""327""[label=""cfg_true""];\n	""263"" -> ""1""[label=""cfg_true""];\n	""263"" -> ""384""[label=""cfg_false""];\n	""264"" -> ""163""[label=""cfg_true""];\n	""264"" -> ""327""[label=""cfg_false""];\n	""265"" -> ""165""[label=""cfg_true""];\n	""265"" -> ""166""[label=""cfg_false""];\n	""266"" -> ""328""[label=""cfg_true""];\n	""266"" -> ""362""[label=""cfg_false""];\n	""267"" -> ""165""[label=""cfg_false""];\n	""267"" -> ""168""[label=""cfg_true""];\n	""268"" -> ""170""[label=""cfg_false""];\n	""268"" -> ""286""[label=""cfg_true""];\n	""269"" -> ""287""[label=""cfg_true""];\n	""269"" -> ""363""[label=""cfg_false""];\n	""27"" -> ""189""[label=""cfg_next""];\n	""270"" -> ""172""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""190""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""191""[label=""cfg_next""];\n	""32"" -> ""192""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""34"" -> ""45""[label=""cfg_next""];\n	""346"" -> ""10""[label=""cfg_switch""];\n	""346"" -> ""102""[label=""cfg_switch""];\n	""346"" -> ""106""[label=""cfg_switch""];\n	""346"" -> ""112""[label=""cfg_switch""];\n	""346"" -> ""116""[label=""cfg_switch""];\n	""346"" -> ""124""[label=""cfg_switch""];\n	""346"" -> ""128""[label=""cfg_switch""];\n	""346"" -> ""132""[label=""cfg_switch""];\n	""346"" -> ""145""[label=""cfg_switch""];\n	""346"" -> ""150""[label=""cfg_switch""];\n	""346"" -> ""158""[label=""cfg_switch""];\n	""346"" -> ""171""[label=""cfg_switch""];\n	""346"" -> ""26""[label=""cfg_switch""];\n	""346"" -> ""271""[label=""cfg_switch""];\n	""346"" -> ""34""[label=""cfg_switch""];\n	""346"" -> ""42""[label=""cfg_switch""];\n	""346"" -> ""54""[label=""cfg_switch""];\n	""346"" -> ""64""[label=""cfg_switch""];\n	""346"" -> ""73""[label=""cfg_switch""];\n	""346"" -> ""80""[label=""cfg_switch""];\n	""346"" -> ""89""[label=""cfg_switch""];\n	""346"" -> ""97""[label=""cfg_switch""];\n	""347"" -> ""270""[label=""cfg_next""];\n	""348"" -> ""312""[label=""cfg_next""];\n	""349"" -> ""387""[label=""cfg_next""];\n	""35"" -> ""193""[label=""cfg_next""];\n	""350"" -> ""404""[label=""cfg_next""];\n	""351"" -> ""406""[label=""cfg_next""];\n	""352"" -> ""409""[label=""cfg_next""];\n	""353"" -> ""407""[label=""cfg_next""];\n	""354"" -> ""412""[label=""cfg_next""];\n	""355"" -> ""410""[label=""cfg_next""];\n	""356"" -> ""408""[label=""cfg_next""];\n	""357"" -> ""415""[label=""cfg_next""];\n	""358"" -> ""413""[label=""cfg_next""];\n	""359"" -> ""411""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""360"" -> ""414""[label=""cfg_next""];\n	""361"" -> ""416""[label=""cfg_next""];\n	""362"" -> ""419""[label=""cfg_next""];\n	""363"" -> ""417""[label=""cfg_next""];\n	""364"" -> ""420""[label=""cfg_next""];\n	""365"" -> ""418""[label=""cfg_next""];\n	""366"" -> ""422""[label=""cfg_next""];\n	""367"" -> ""388""[label=""cfg_next""];\n	""368"" -> ""423""[label=""cfg_next""];\n	""369"" -> ""421""[label=""cfg_next""];\n	""37"" -> ""194""[label=""cfg_next""];\n	""370"" -> ""424""[label=""cfg_next""];\n	""371"" -> ""389""[label=""cfg_next""];\n	""372"" -> ""390""[label=""cfg_next""];\n	""373"" -> ""391""[label=""cfg_next""];\n	""374"" -> ""392""[label=""cfg_next""];\n	""375"" -> ""393""[label=""cfg_next""];\n	""376"" -> ""396""[label=""cfg_next""];\n	""377"" -> ""394""[label=""cfg_next""];\n	""378"" -> ""397""[label=""cfg_next""];\n	""379"" -> ""395""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""380"" -> ""399""[label=""cfg_next""];\n	""381"" -> ""400""[label=""cfg_next""];\n	""382"" -> ""398""[label=""cfg_next""];\n	""383"" -> ""402""[label=""cfg_next""];\n	""384"" -> ""403""[label=""cfg_next""];\n	""385"" -> ""401""[label=""cfg_next""];\n	""386"" -> ""405""[label=""cfg_next""];\n	""387"" -> ""313""[label=""cfg_next""];\n	""388"" -> ""332""[label=""cfg_next""];\n	""389"" -> ""333""[label=""cfg_next""];\n	""39"" -> ""195""[label=""cfg_next""];\n	""390"" -> ""334""[label=""cfg_next""];\n	""391"" -> ""336""[label=""cfg_next""];\n	""392"" -> ""338""[label=""cfg_next""];\n	""393"" -> ""340""[label=""cfg_next""];\n	""394"" -> ""301""[label=""cfg_next""];\n	""395"" -> ""303""[label=""cfg_next""];\n	""396"" -> ""341""[label=""cfg_next""];\n	""397"" -> ""302""[label=""cfg_next""];\n	""398"" -> ""306""[label=""cfg_next""];\n	""399"" -> ""342""[label=""cfg_next""];\n	""4"" -> ""175""[label=""cfg_next""];\n	""40"" -> ""196""[label=""cfg_next""];\n	""400"" -> ""305""[label=""cfg_next""];\n	""401"" -> ""309""[label=""cfg_next""];\n	""402"" -> ""343""[label=""cfg_next""];\n	""403"" -> ""344""[label=""cfg_next""];\n	""404"" -> ""316""[label=""cfg_next""];\n	""405"" -> ""345""[label=""cfg_next""];\n	""406"" -> ""318""[label=""cfg_next""];\n	""407"" -> ""277""[label=""cfg_next""];\n	""408"" -> ""280""[label=""cfg_next""];\n	""409"" -> ""319""[label=""cfg_next""];\n	""41"" -> ""197""[label=""cfg_next""];\n	""410"" -> ""278""[label=""cfg_next""];\n	""411"" -> ""283""[label=""cfg_next""];\n	""412"" -> ""322""[label=""cfg_next""];\n	""413"" -> ""281""[label=""cfg_next""];\n	""414"" -> ""284""[label=""cfg_next""];\n	""415"" -> ""324""[label=""cfg_next""];\n	""416"" -> ""326""[label=""cfg_next""];\n	""417"" -> ""287""[label=""cfg_next""];\n	""418"" -> ""289""[label=""cfg_next""];\n	""419"" -> ""328""[label=""cfg_next""];\n	""42"" -> ""43""[label=""cfg_next""];\n	""420"" -> ""288""[label=""cfg_next""];\n	""421"" -> ""293""[label=""cfg_next""];\n	""422"" -> ""330""[label=""cfg_next""];\n	""423"" -> ""291""[label=""cfg_next""];\n	""424"" -> ""294""[label=""cfg_next""];\n	""43"" -> ""198""[label=""cfg_next""];\n	""44"" -> ""46""[label=""cfg_next""];\n	""45"" -> ""199""[label=""cfg_next""];\n	""46"" -> ""200""[label=""cfg_next""];\n	""47"" -> ""48""[label=""cfg_next""];\n	""48"" -> ""201""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""202""[label=""cfg_next""];\n	""51"" -> ""52""[label=""cfg_next""];\n	""52"" -> ""203""[label=""cfg_next""];\n	""53"" -> ""204""[label=""cfg_next""];\n	""54"" -> ""55""[label=""cfg_next""];\n	""55"" -> ""205""[label=""cfg_next""];\n	""56"" -> ""67""[label=""cfg_next""];\n	""57"" -> ""58""[label=""cfg_next""];\n	""58"" -> ""206""[label=""cfg_next""];\n	""59"" -> ""60""[label=""cfg_next""];\n	""6"" -> ""176""[label=""cfg_next""];\n	""60"" -> ""207""[label=""cfg_next""];\n	""61"" -> ""208""[label=""cfg_next""];\n	""62"" -> ""63""[label=""cfg_next""];\n	""63"" -> ""209""[label=""cfg_next""];\n	""64"" -> ""65""[label=""cfg_next""];\n	""65"" -> ""210""[label=""cfg_next""];\n	""66"" -> ""68""[label=""cfg_next""];\n	""67"" -> ""211""[label=""cfg_next""];\n	""68"" -> ""212""[label=""cfg_next""];\n	""69"" -> ""70""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""213""[label=""cfg_next""];\n	""71"" -> ""72""[label=""cfg_next""];\n	""72"" -> ""214""[label=""cfg_next""];\n	""73"" -> ""74""[label=""cfg_next""];\n	""74"" -> ""215""[label=""cfg_next""];\n	""75"" -> ""76""[label=""cfg_next""];\n	""76"" -> ""216""[label=""cfg_next""];\n	""77"" -> ""79""[label=""cfg_next""];\n	""78"" -> ""86""[label=""cfg_next""];\n	""79"" -> ""217""[label=""cfg_next""];\n	""8"" -> ""177""[label=""cfg_next""];\n	""80"" -> ""81""[label=""cfg_next""];\n	""81"" -> ""218""[label=""cfg_next""];\n	""82"" -> ""83""[label=""cfg_next""];\n	""83"" -> ""219""[label=""cfg_next""];\n	""84"" -> ""85""[label=""cfg_next""];\n	""85"" -> ""220""[label=""cfg_next""];\n	""86"" -> ""221""[label=""cfg_next""];\n	""87"" -> ""222""[label=""cfg_next""];\n	""88"" -> ""223""[label=""cfg_next""];\n	""89"" -> ""90""[label=""cfg_next""];\n	""9"" -> ""178""[label=""cfg_next""];\n	""90"" -> ""224""[label=""cfg_next""];\n	""91"" -> ""92""[label=""cfg_next""];\n	""92"" -> ""225""[label=""cfg_next""];\n	""93"" -> ""94""[label=""cfg_next""];\n	""94"" -> ""226""[label=""cfg_next""];\n	""95"" -> ""227""[label=""cfg_next""];\n	""96"" -> ""228""[label=""cfg_next""];\n	""97"" -> ""98""[label=""cfg_next""];\n	""98"" -> ""229""[label=""cfg_next""];\n	""99"" -> ""100""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjStartNfa_0(int,long,long)",Method,No Comment,"private int jjStartNfa_0(final int pos, final long active0, final long active1) {\n    return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);\n}","int jjStartNfa_0(int,long,long)","digraph cfg_jjStartNfa_0 {\n	""1"" [label=""$stack6 = pos + 1""];\n	""2"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(pos, active0, active1)""];\n	""3"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveNfa_0(int,int)>($stack7, $stack6)""];\n	""4"" [label=""active0 := @parameter1: long""];\n	""5"" [label=""active1 := @parameter2: long""];\n	""6"" [label=""pos := @parameter0: int""];\n	""7"" [label=""return $stack8""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjStopAtPos(int,int)",Method,No Comment,"private int jjStopAtPos(final int pos, final int kind) {\n    jjmatchedKind = kind;\n    jjmatchedPos = pos;\n    return pos + 1;\n}","int jjStopAtPos(int,int)","digraph cfg_jjStopAtPos {\n	""1"" [label=""$stack3 = pos + 1""];\n	""2"" [label=""kind := @parameter1: int""];\n	""3"" [label=""pos := @parameter0: int""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = kind""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = pos""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjStartNfaWithStates_0(int,int,int)",Method,No Comment,"private int jjStartNfaWithStates_0(final int pos, final int kind, final int state) {\n    jjmatchedKind = kind;\n    jjmatchedPos = pos;\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        return pos + 1;\n    }\n    return jjMoveNfa_0(state, pos + 1);\n}","int jjStartNfaWithStates_0(int,int,int)","digraph cfg_jjStartNfaWithStates_0 {\n	""1"" [label=""$stack10 = pos + 1""];\n	""2"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""3"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""4"" [label=""$stack7 = pos + 1""];\n	""5"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveNfa_0(int,int)>(state, $stack7)""];\n	""6"" [label=""$stack9 := @caughtexception""];\n	""7"" [label=""e = $stack9""];\n	""8"" [label=""goto""];\n	""9"" [label=""kind := @parameter1: int""];\n	""10"" [label=""pos := @parameter0: int""];\n	""11"" [label=""return $stack10""];\n	""12"" [label=""return $stack8""];\n	""13"" [label=""state := @parameter2: int""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack6""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = kind""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = pos""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_except""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_except""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_except""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_goto""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa0_0(),Method,No Comment,"private int jjMoveStringLiteralDfa0_0() {\n    switch(curChar) {\n        case 33:\n            return jjMoveStringLiteralDfa1_0(0x1000L, 0x0L);\n        case 36:\n            return jjStopAtPos(0, 17);\n        case 40:\n            return jjStopAtPos(0, 81);\n        case 41:\n            return jjStopAtPos(0, 82);\n        case 42:\n            return jjStopAtPos(0, 89);\n        case 43:\n            return jjStopAtPos(0, 9);\n        case 44:\n            return jjStopAtPos(0, 88);\n        case 45:\n            return jjStopAtPos(0, 10);\n        case 46:\n            jjmatchedKind = 83;\n            return jjMoveStringLiteralDfa1_0(0x0L, 0x100000L);\n        case 47:\n            jjmatchedKind = 6;\n            return jjMoveStringLiteralDfa1_0(0x80L, 0x0L);\n        case 58:\n            return jjStopAtPos(0, 80);\n        case 60:\n            jjmatchedKind = 13;\n            return jjMoveStringLiteralDfa1_0(0x4000L, 0x0L);\n        case 61:\n            return jjStopAtPos(0, 11);\n        case 62:\n            jjmatchedKind = 15;\n            return jjMoveStringLiteralDfa1_0(0x10000L, 0x0L);\n        case 64:\n            return jjStopAtPos(0, 87);\n        case 91:\n            return jjStopAtPos(0, 85);\n        case 93:\n            return jjStopAtPos(0, 86);\n        case 97:\n            return jjMoveStringLiteralDfa1_0(0x10c010000000L, 0x0L);\n        case 98:\n            return jjMoveStringLiteralDfa1_0(0x0L, 0x8L);\n        case 99:\n            return jjMoveStringLiteralDfa1_0(0x1204001200000000L, 0x1000L);\n        case 100:\n            return jjMoveStringLiteralDfa1_0(0x880040000000L, 0x0L);\n        case 101:\n            return jjMoveStringLiteralDfa1_0(0x800000000000000L, 0x0L);\n        case 102:\n            return jjMoveStringLiteralDfa1_0(0x240000000000L, 0x4840L);\n        case 105:\n            return jjMoveStringLiteralDfa1_0(0x8000000000000L, 0x0L);\n        case 107:\n            return jjMoveStringLiteralDfa1_0(0x10000000000000L, 0x0L);\n        case 108:\n            return jjMoveStringLiteralDfa1_0(0x21000000000000L, 0x100L);\n        case 109:\n            return jjMoveStringLiteralDfa1_0(0x20000000L, 0x0L);\n        case 110:\n            return jjMoveStringLiteralDfa1_0(0xc0010080000000L, 0x292L);\n        case 111:\n            return jjMoveStringLiteralDfa1_0(0x8000000L, 0x0L);\n        case 112:\n            return jjMoveStringLiteralDfa1_0(0x2422400000000L, 0x0L);\n        case 114:\n            return jjMoveStringLiteralDfa1_0(0x0L, 0x2000L);\n        case 115:\n            return jjMoveStringLiteralDfa1_0(0xe500000800000000L, 0x401L);\n        case 116:\n            return jjMoveStringLiteralDfa1_0(0x100000000L, 0x24L);\n        case 124:\n            return jjStopAtPos(0, 8);\n        default:\n            return jjMoveNfa_0(0, 0);\n    }\n}",int jjMoveStringLiteralDfa0_0(),"digraph cfg_jjMoveStringLiteralDfa0_0 {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""2"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(9288674231451648L, 256L)""];\n	""3"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(4503599627370496L, 0L)""];\n	""4"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(2251799813685248L, 0L)""];\n	""5"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(39582418599936L, 18496L)""];\n	""6"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(576460752303423488L, 0L)""];\n	""7"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(149534655119360L, 0L)""];\n	""8"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(1298162669898956800L, 4096L)""];\n	""9"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(0L, 8L)""];\n	""10"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(18417088200704L, 0L)""];\n	""11"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 86)""];\n	""12"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 8)""];\n	""13"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 85)""];\n	""14"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 87)""];\n	""15"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(65536L, 0L)""];\n	""16"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 11)""];\n	""17"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(16384L, 0L)""];\n	""18"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 80)""];\n	""19"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(128L, 0L)""];\n	""20"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(0L, 1048576L)""];\n	""21"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 10)""];\n	""22"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 88)""];\n	""23"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(4294967296L, 36L)""];\n	""24"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 9)""];\n	""25"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 89)""];\n	""26"" [label=""$stack32 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 82)""];\n	""27"" [label=""$stack33 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 81)""];\n	""28"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(0, 17)""];\n	""29"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(4096L, 0L)""];\n	""30"" [label=""$stack36 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveNfa_0(int,int)>(0, 0)""];\n	""31"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(-1945555004664315904L, 1025L)""];\n	""32"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(0L, 8192L)""];\n	""33"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(635672339677184L, 0L)""];\n	""34"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(134217728L, 0L)""];\n	""35"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(54044297187557376L, 658L)""];\n	""36"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa1_0(long,long)>(536870912L, 0L)""];\n	""37"" [label=""return $stack10""];\n	""38"" [label=""return $stack11""];\n	""39"" [label=""return $stack12""];\n	""40"" [label=""return $stack13""];\n	""41"" [label=""return $stack14""];\n	""42"" [label=""return $stack15""];\n	""43"" [label=""return $stack16""];\n	""44"" [label=""return $stack17""];\n	""45"" [label=""return $stack18""];\n	""46"" [label=""return $stack19""];\n	""47"" [label=""return $stack2""];\n	""48"" [label=""return $stack20""];\n	""49"" [label=""return $stack21""];\n	""50"" [label=""return $stack22""];\n	""51"" [label=""return $stack23""];\n	""52"" [label=""return $stack24""];\n	""53"" [label=""return $stack25""];\n	""54"" [label=""return $stack26""];\n	""55"" [label=""return $stack27""];\n	""56"" [label=""return $stack28""];\n	""57"" [label=""return $stack29""];\n	""58"" [label=""return $stack3""];\n	""59"" [label=""return $stack30""];\n	""60"" [label=""return $stack31""];\n	""61"" [label=""return $stack32""];\n	""62"" [label=""return $stack33""];\n	""63"" [label=""return $stack34""];\n	""64"" [label=""return $stack35""];\n	""65"" [label=""return $stack36""];\n	""66"" [label=""return $stack4""];\n	""67"" [label=""return $stack5""];\n	""68"" [label=""return $stack6""];\n	""69"" [label=""return $stack7""];\n	""70"" [label=""return $stack8""];\n	""71"" [label=""return $stack9""];\n	""72"" [label=""switch($stack1) \{     case 33:     case 34:     case 35:     case 36:     case 37:     case 38:     case 39:     case 40:     case 41:     case 42:     case 43:     case 44:     case 45:     case 46:     case 47:     case 48:     case 49:     case 50:     case 51:     case 52:     case 53:     case 54:     case 55:     case 56:     case 57:     case 58:     case 59:     case 60:     case 61:     case 62:     case 63:     case 64:     case 65:     case 66:     case 67:     case 68:     case 69:     case 70:     case 71:     case 72:     case 73:     case 74:     case 75:     case 76:     case 77:     case 78:     case 79:     case 80:     case 81:     case 82:     case 83:     case 84:     case 85:     case 86:     case 87:     case 88:     case 89:     case 90:     case 91:     case 92:     case 93:     case 94:     case 95:     case 96:     case 97:     case 98:     case 99:     case 100:     case 101:     case 102:     case 103:     case 104:     case 105:     case 106:     case 107:     case 108:     case 109:     case 110:     case 111:     case 112:     case 113:     case 114:     case 115:     case 116:     case 117:     case 118:     case 119:     case 120:     case 121:     case 122:     case 123:     case 124:     default:  \}""];\n	""73"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""74"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 13""];\n	""75"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 15""];\n	""76"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 6""];\n	""77"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 83""];\n	""1"" -> ""72""[label=""cfg_next""];\n	""10"" -> ""45""[label=""cfg_next""];\n	""11"" -> ""46""[label=""cfg_next""];\n	""12"" -> ""47""[label=""cfg_next""];\n	""13"" -> ""48""[label=""cfg_next""];\n	""14"" -> ""49""[label=""cfg_next""];\n	""15"" -> ""50""[label=""cfg_next""];\n	""16"" -> ""51""[label=""cfg_next""];\n	""17"" -> ""52""[label=""cfg_next""];\n	""18"" -> ""53""[label=""cfg_next""];\n	""19"" -> ""54""[label=""cfg_next""];\n	""2"" -> ""37""[label=""cfg_next""];\n	""20"" -> ""55""[label=""cfg_next""];\n	""21"" -> ""56""[label=""cfg_next""];\n	""22"" -> ""57""[label=""cfg_next""];\n	""23"" -> ""58""[label=""cfg_next""];\n	""24"" -> ""59""[label=""cfg_next""];\n	""25"" -> ""60""[label=""cfg_next""];\n	""26"" -> ""61""[label=""cfg_next""];\n	""27"" -> ""62""[label=""cfg_next""];\n	""28"" -> ""63""[label=""cfg_next""];\n	""29"" -> ""64""[label=""cfg_next""];\n	""3"" -> ""38""[label=""cfg_next""];\n	""30"" -> ""65""[label=""cfg_next""];\n	""31"" -> ""66""[label=""cfg_next""];\n	""32"" -> ""67""[label=""cfg_next""];\n	""33"" -> ""68""[label=""cfg_next""];\n	""34"" -> ""69""[label=""cfg_next""];\n	""35"" -> ""70""[label=""cfg_next""];\n	""36"" -> ""71""[label=""cfg_next""];\n	""4"" -> ""39""[label=""cfg_next""];\n	""5"" -> ""40""[label=""cfg_next""];\n	""6"" -> ""41""[label=""cfg_next""];\n	""7"" -> ""42""[label=""cfg_next""];\n	""72"" -> ""10""[label=""cfg_switch""];\n	""72"" -> ""11""[label=""cfg_switch""];\n	""72"" -> ""12""[label=""cfg_switch""];\n	""72"" -> ""13""[label=""cfg_switch""];\n	""72"" -> ""14""[label=""cfg_switch""];\n	""72"" -> ""16""[label=""cfg_switch""];\n	""72"" -> ""18""[label=""cfg_switch""];\n	""72"" -> ""2""[label=""cfg_switch""];\n	""72"" -> ""21""[label=""cfg_switch""];\n	""72"" -> ""22""[label=""cfg_switch""];\n	""72"" -> ""23""[label=""cfg_switch""];\n	""72"" -> ""24""[label=""cfg_switch""];\n	""72"" -> ""25""[label=""cfg_switch""];\n	""72"" -> ""26""[label=""cfg_switch""];\n	""72"" -> ""27""[label=""cfg_switch""];\n	""72"" -> ""28""[label=""cfg_switch""];\n	""72"" -> ""29""[label=""cfg_switch""];\n	""72"" -> ""3""[label=""cfg_switch""];\n	""72"" -> ""30""[label=""cfg_switch""];\n	""72"" -> ""31""[label=""cfg_switch""];\n	""72"" -> ""32""[label=""cfg_switch""];\n	""72"" -> ""33""[label=""cfg_switch""];\n	""72"" -> ""34""[label=""cfg_switch""];\n	""72"" -> ""35""[label=""cfg_switch""];\n	""72"" -> ""36""[label=""cfg_switch""];\n	""72"" -> ""4""[label=""cfg_switch""];\n	""72"" -> ""5""[label=""cfg_switch""];\n	""72"" -> ""6""[label=""cfg_switch""];\n	""72"" -> ""7""[label=""cfg_switch""];\n	""72"" -> ""74""[label=""cfg_switch""];\n	""72"" -> ""75""[label=""cfg_switch""];\n	""72"" -> ""76""[label=""cfg_switch""];\n	""72"" -> ""77""[label=""cfg_switch""];\n	""72"" -> ""8""[label=""cfg_switch""];\n	""72"" -> ""9""[label=""cfg_switch""];\n	""73"" -> ""1""[label=""cfg_next""];\n	""74"" -> ""17""[label=""cfg_next""];\n	""75"" -> ""15""[label=""cfg_next""];\n	""76"" -> ""19""[label=""cfg_next""];\n	""77"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""43""[label=""cfg_next""];\n	""9"" -> ""44""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa1_0(long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa1_0(final long active0, final long active1) {\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(0, active0, active1);\n        return 1;\n    }\n    switch(curChar) {\n        case 46:\n            if ((active1 & 0x100000L) != 0L) {\n                return jjStopAtPos(1, 84);\n            }\n            break;\n        case 47:\n            if ((active0 & 0x80L) != 0L) {\n                return jjStopAtPos(1, 7);\n            }\n            break;\n        case 61:\n            if ((active0 & 0x1000L) != 0L) {\n                return jjStopAtPos(1, 12);\n            } else if ((active0 & 0x4000L) != 0L) {\n                return jjStopAtPos(1, 14);\n            } else if ((active0 & 0x10000L) != 0L) {\n                return jjStopAtPos(1, 16);\n            }\n            break;\n        case 97:\n            return jjMoveStringLiteralDfa2_0(active0, 0xc1012000000000L, active1, 0x140L);\n        case 100:\n            if ((active0 & 0x8000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(1, 51, 12);\n            }\n            break;\n        case 101:\n            return jjMoveStringLiteralDfa2_0(active0, 0x10880900000000L, active1, 0x1000L);\n        case 104:\n            return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa2_0(active0, 0x40000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x800L);\n        case 110:\n            return jjMoveStringLiteralDfa2_0(active0, 0x800104010000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa2_0(active0, 0x12262402a0000000L, active1, 0x601aL);\n        case 114:\n            if ((active0 & 0x8000000L) != 0L) {\n                return jjStartNfaWithStates_0(1, 27, 12);\n            }\n            return jjMoveStringLiteralDfa2_0(active0, 0x420400000000L, active1, 0x24L);\n        case 116:\n            return jjMoveStringLiteralDfa2_0(active0, 0x500008000000000L, active1, 0x1L);\n        case 117:\n            return jjMoveStringLiteralDfa2_0(active0, 0xe000000000000000L, active1, 0x680L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(0, active0, active1);\n}","int jjMoveStringLiteralDfa1_0(long,long)","digraph cfg_jjMoveStringLiteralDfa1_0 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 360288519945453568L, active1, 1L)""];\n	""2"" [label=""$stack11 = active0 & 134217728L""];\n	""3"" [label=""$stack12 = $stack11 cmp 0L""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 72584947302400L, active1, 36L)""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(1, 27, 12)""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 1307772335490596864L, active1, 24602L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 576478619635810304L, active1, 0L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 0L, active1, 2048L)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 1073741824L, active1, 0L)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 68719476736L, active1, 0L)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 4653171863453696L, active1, 4096L)""];\n	""12"" [label=""$stack21 = active0 & 2251799813685248L""];\n	""13"" [label=""$stack22 = $stack21 cmp 0L""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(0, active0, active1)""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(1, 51, 12)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, 54325907455737856L, active1, 320L)""];\n	""17"" [label=""$stack26 = active0 & 4096L""];\n	""18"" [label=""$stack27 = $stack26 cmp 0L""];\n	""19"" [label=""$stack28 = active0 & 16384L""];\n	""20"" [label=""$stack29 = $stack28 cmp 0L""];\n	""21"" [label=""$stack30 = active0 & 65536L""];\n	""22"" [label=""$stack31 = $stack30 cmp 0L""];\n	""23"" [label=""$stack32 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(1, 16)""];\n	""24"" [label=""$stack33 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(1, 14)""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(1, 12)""];\n	""26"" [label=""$stack35 = active0 & 128L""];\n	""27"" [label=""$stack36 = $stack35 cmp 0L""];\n	""28"" [label=""$stack37 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(1, 7)""];\n	""29"" [label=""$stack38 = active1 & 1048576L""];\n	""30"" [label=""$stack39 = $stack38 cmp 0L""];\n	""31"" [label=""$stack40 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(1, 84)""];\n	""32"" [label=""$stack41 := @caughtexception""];\n	""33"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""34"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""35"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""36"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa2_0(long,long,long,long)>(active0, -2305843009213693952L, active1, 1664L)""];\n	""37"" [label=""active0 := @parameter0: long""];\n	""38"" [label=""active1 := @parameter1: long""];\n	""39"" [label=""e = $stack41""];\n	""40"" [label=""goto""];\n	""41"" [label=""if $stack12 == 0""];\n	""42"" [label=""if $stack22 == 0""];\n	""43"" [label=""if $stack27 == 0""];\n	""44"" [label=""if $stack29 == 0""];\n	""45"" [label=""if $stack31 == 0""];\n	""46"" [label=""if $stack36 == 0""];\n	""47"" [label=""if $stack39 == 0""];\n	""48"" [label=""return $stack10""];\n	""49"" [label=""return $stack13""];\n	""50"" [label=""return $stack14""];\n	""51"" [label=""return $stack15""];\n	""52"" [label=""return $stack16""];\n	""53"" [label=""return $stack17""];\n	""54"" [label=""return $stack18""];\n	""55"" [label=""return $stack19""];\n	""56"" [label=""return $stack20""];\n	""57"" [label=""return $stack23""];\n	""58"" [label=""return $stack24""];\n	""59"" [label=""return $stack25""];\n	""60"" [label=""return $stack32""];\n	""61"" [label=""return $stack33""];\n	""62"" [label=""return $stack34""];\n	""63"" [label=""return $stack37""];\n	""64"" [label=""return $stack40""];\n	""65"" [label=""return $stack9""];\n	""66"" [label=""return 1""];\n	""67"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(0, active0, active1)""];\n	""68"" [label=""switch($stack8) \{     case 46:     case 47:     case 61:     case 97:     case 100:     case 101:     case 104:     case 105:     case 108:     case 110:     case 111:     case 114:     case 116:     case 117:     default:  \}""];\n	""69"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""70"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack7""];\n	""1"" -> ""48""[label=""cfg_next""];\n	""10"" -> ""55""[label=""cfg_next""];\n	""11"" -> ""56""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""42""[label=""cfg_next""];\n	""14"" -> ""57""[label=""cfg_next""];\n	""15"" -> ""58""[label=""cfg_next""];\n	""16"" -> ""59""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""43""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""44""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""45""[label=""cfg_next""];\n	""23"" -> ""60""[label=""cfg_next""];\n	""24"" -> ""61""[label=""cfg_next""];\n	""25"" -> ""62""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""46""[label=""cfg_next""];\n	""28"" -> ""63""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""41""[label=""cfg_next""];\n	""30"" -> ""47""[label=""cfg_next""];\n	""31"" -> ""64""[label=""cfg_next""];\n	""32"" -> ""39""[label=""cfg_next""];\n	""33"" -> ""32""[label=""cfg_except""];\n	""33"" -> ""34""[label=""cfg_next""];\n	""34"" -> ""32""[label=""cfg_except""];\n	""34"" -> ""70""[label=""cfg_next""];\n	""35"" -> ""68""[label=""cfg_next""];\n	""36"" -> ""65""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""33""[label=""cfg_next""];\n	""39"" -> ""67""[label=""cfg_next""];\n	""4"" -> ""49""[label=""cfg_next""];\n	""40"" -> ""35""[label=""cfg_goto""];\n	""41"" -> ""4""[label=""cfg_true""];\n	""41"" -> ""5""[label=""cfg_false""];\n	""42"" -> ""14""[label=""cfg_true""];\n	""42"" -> ""15""[label=""cfg_false""];\n	""43"" -> ""19""[label=""cfg_true""];\n	""43"" -> ""25""[label=""cfg_false""];\n	""44"" -> ""21""[label=""cfg_true""];\n	""44"" -> ""24""[label=""cfg_false""];\n	""45"" -> ""14""[label=""cfg_true""];\n	""45"" -> ""23""[label=""cfg_false""];\n	""46"" -> ""14""[label=""cfg_true""];\n	""46"" -> ""28""[label=""cfg_false""];\n	""47"" -> ""14""[label=""cfg_true""];\n	""47"" -> ""31""[label=""cfg_false""];\n	""5"" -> ""50""[label=""cfg_next""];\n	""6"" -> ""51""[label=""cfg_next""];\n	""67"" -> ""66""[label=""cfg_next""];\n	""68"" -> ""1""[label=""cfg_switch""];\n	""68"" -> ""10""[label=""cfg_switch""];\n	""68"" -> ""11""[label=""cfg_switch""];\n	""68"" -> ""12""[label=""cfg_switch""];\n	""68"" -> ""14""[label=""cfg_switch""];\n	""68"" -> ""16""[label=""cfg_switch""];\n	""68"" -> ""17""[label=""cfg_switch""];\n	""68"" -> ""2""[label=""cfg_switch""];\n	""68"" -> ""26""[label=""cfg_switch""];\n	""68"" -> ""29""[label=""cfg_switch""];\n	""68"" -> ""36""[label=""cfg_switch""];\n	""68"" -> ""6""[label=""cfg_switch""];\n	""68"" -> ""7""[label=""cfg_switch""];\n	""68"" -> ""8""[label=""cfg_switch""];\n	""68"" -> ""9""[label=""cfg_switch""];\n	""69"" -> ""37""[label=""cfg_next""];\n	""7"" -> ""52""[label=""cfg_next""];\n	""70"" -> ""32""[label=""cfg_except""];\n	""70"" -> ""40""[label=""cfg_next""];\n	""8"" -> ""53""[label=""cfg_next""];\n	""9"" -> ""54""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa2_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa2_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(0, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(1, active0, active1);\n        return 2;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L, active1, 0x4L);\n        case 98:\n            return jjMoveStringLiteralDfa3_0(active0, 0xe000000000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa3_0(active0, 0x20104000000000L, active1, 0L);\n        case 100:\n            if ((active0 & 0x10000000L) != 0L) {\n                return jjStartNfaWithStates_0(2, 28, 12);\n            } else if ((active0 & 0x20000000L) != 0L) {\n                return jjStartNfaWithStates_0(2, 29, 12);\n            }\n            return jjMoveStringLiteralDfa3_0(active0, 0x800000080000000L, active1, 0L);\n        case 101:\n            return jjMoveStringLiteralDfa3_0(active0, 0x420000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1000000000L, active1, 0x1000L);\n        case 108:\n            return jjMoveStringLiteralDfa3_0(active0, 0x240800000000L, active1, 0xc0L);\n        case 109:\n            if ((active1 & 0x400L) != 0L) {\n                return jjStartNfaWithStates_0(2, 74, 12);\n            }\n            return jjMoveStringLiteralDfa3_0(active0, 0xc0010200000000L, active1, 0x200L);\n        case 110:\n            return jjMoveStringLiteralDfa3_0(active0, 0x1200000000000000L, active1, 0x100L);\n        case 111:\n            return jjMoveStringLiteralDfa3_0(active0, 0x400000000L, active1, 0x808L);\n        case 114:\n            return jjMoveStringLiteralDfa3_0(active0, 0x100002000000000L, active1, 0x4003L);\n        case 115:\n            return jjMoveStringLiteralDfa3_0(active0, 0x3880000000000L, active1, 0L);\n        case 116:\n            if ((active1 & 0x10L) != 0L) {\n                return jjStartNfaWithStates_0(2, 68, 12);\n            }\n            return jjMoveStringLiteralDfa3_0(active0, 0x8000000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa3_0(active0, 0x4000000000000L, active1, 0x2020L);\n        case 118:\n            if ((active0 & 0x40000000L) != 0L) {\n                return jjStartNfaWithStates_0(2, 30, 12);\n            }\n            break;\n        case 120:\n            return jjMoveStringLiteralDfa3_0(active0, 0x100000000L, active1, 0L);\n        case 121:\n            if ((active0 & 0x10000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(2, 52, 12);\n            }\n            break;\n        default:\n            break;\n    }\n    return jjStartNfa_0(1, active0, active1);\n}","int jjMoveStringLiteralDfa2_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa2_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = active0 & 4503599627370496L""];\n	""7"" [label=""$stack16 = $stack15 cmp 0L""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(1, active0, active1)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(2, 52, 12)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 4294967296L, active1, 0L)""];\n	""11"" [label=""$stack20 = active0 & 1073741824L""];\n	""12"" [label=""$stack21 = $stack20 cmp 0L""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(2, 30, 12)""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 1125899906842624L, active1, 8224L)""];\n	""15"" [label=""$stack24 = active1 & 16L""];\n	""16"" [label=""$stack25 = $stack24 cmp 0L""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 549755813888L, active1, 0L)""];\n	""18"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(2, 68, 12)""];\n	""19"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 993958511509504L, active1, 0L)""];\n	""20"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 72057731476881408L, active1, 16387L)""];\n	""21"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 17179869184L, active1, 2056L)""];\n	""22"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 1297036692682702848L, active1, 256L)""];\n	""23"" [label=""$stack32 = active1 & 1024L""];\n	""24"" [label=""$stack33 = $stack32 cmp 0L""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 54044303630008320L, active1, 512L)""];\n	""26"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(2, 74, 12)""];\n	""27"" [label=""$stack36 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 39616778338304L, active1, 192L)""];\n	""28"" [label=""$stack37 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 68719476736L, active1, 4096L)""];\n	""29"" [label=""$stack38 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 72567767433216L, active1, 0L)""];\n	""30"" [label=""$stack39 = active0 & 268435456L""];\n	""31"" [label=""$stack40 = $stack39 cmp 0L""];\n	""32"" [label=""$stack41 = active0 & 536870912L""];\n	""33"" [label=""$stack42 = $stack41 cmp 0L""];\n	""34"" [label=""$stack43 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 576460754450907136L, active1, 0L)""];\n	""35"" [label=""$stack44 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(2, 29, 12)""];\n	""36"" [label=""$stack45 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(2, 28, 12)""];\n	""37"" [label=""$stack46 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 9025066318692352L, active1, 0L)""];\n	""38"" [label=""$stack47 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, -2305843009213693952L, active1, 0L)""];\n	""39"" [label=""$stack48 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa3_0(long,long,long,long)>(active0, 288230376151711744L, active1, 4L)""];\n	""40"" [label=""$stack49 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(0, old0, old1)""];\n	""41"" [label=""$stack50 := @caughtexception""];\n	""42"" [label=""active0 := @parameter1: long""];\n	""43"" [label=""active0 = active0 & old0""];\n	""44"" [label=""active1 := @parameter3: long""];\n	""45"" [label=""active1 = active1 & old1""];\n	""46"" [label=""e = $stack50""];\n	""47"" [label=""goto""];\n	""48"" [label=""if $stack11 != 0""];\n	""49"" [label=""if $stack16 == 0""];\n	""50"" [label=""if $stack21 == 0""];\n	""51"" [label=""if $stack25 == 0""];\n	""52"" [label=""if $stack33 == 0""];\n	""53"" [label=""if $stack40 == 0""];\n	""54"" [label=""if $stack42 == 0""];\n	""55"" [label=""old0 := @parameter0: long""];\n	""56"" [label=""old1 := @parameter2: long""];\n	""57"" [label=""return $stack17""];\n	""58"" [label=""return $stack18""];\n	""59"" [label=""return $stack19""];\n	""60"" [label=""return $stack22""];\n	""61"" [label=""return $stack23""];\n	""62"" [label=""return $stack26""];\n	""63"" [label=""return $stack27""];\n	""64"" [label=""return $stack28""];\n	""65"" [label=""return $stack29""];\n	""66"" [label=""return $stack30""];\n	""67"" [label=""return $stack31""];\n	""68"" [label=""return $stack34""];\n	""69"" [label=""return $stack35""];\n	""70"" [label=""return $stack36""];\n	""71"" [label=""return $stack37""];\n	""72"" [label=""return $stack38""];\n	""73"" [label=""return $stack43""];\n	""74"" [label=""return $stack44""];\n	""75"" [label=""return $stack45""];\n	""76"" [label=""return $stack46""];\n	""77"" [label=""return $stack47""];\n	""78"" [label=""return $stack48""];\n	""79"" [label=""return $stack49""];\n	""80"" [label=""return 2""];\n	""81"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(1, active0, active1)""];\n	""82"" [label=""switch($stack14) \{     case 97:     case 98:     case 99:     case 100:     case 101:     case 102:     case 103:     case 104:     case 105:     case 106:     case 107:     case 108:     case 109:     case 110:     case 111:     case 112:     case 113:     case 114:     case 115:     case 116:     case 117:     case 118:     case 119:     case 120:     case 121:     default:  \}""];\n	""83"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""84"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""59""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""50""[label=""cfg_next""];\n	""13"" -> ""60""[label=""cfg_next""];\n	""14"" -> ""61""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""51""[label=""cfg_next""];\n	""17"" -> ""62""[label=""cfg_next""];\n	""18"" -> ""63""[label=""cfg_next""];\n	""19"" -> ""64""[label=""cfg_next""];\n	""2"" -> ""48""[label=""cfg_next""];\n	""20"" -> ""65""[label=""cfg_next""];\n	""21"" -> ""66""[label=""cfg_next""];\n	""22"" -> ""67""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""52""[label=""cfg_next""];\n	""25"" -> ""68""[label=""cfg_next""];\n	""26"" -> ""69""[label=""cfg_next""];\n	""27"" -> ""70""[label=""cfg_next""];\n	""28"" -> ""71""[label=""cfg_next""];\n	""29"" -> ""72""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""41""[label=""cfg_except""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""53""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""54""[label=""cfg_next""];\n	""34"" -> ""73""[label=""cfg_next""];\n	""35"" -> ""74""[label=""cfg_next""];\n	""36"" -> ""75""[label=""cfg_next""];\n	""37"" -> ""76""[label=""cfg_next""];\n	""38"" -> ""77""[label=""cfg_next""];\n	""39"" -> ""78""[label=""cfg_next""];\n	""4"" -> ""41""[label=""cfg_except""];\n	""4"" -> ""84""[label=""cfg_next""];\n	""40"" -> ""79""[label=""cfg_next""];\n	""41"" -> ""46""[label=""cfg_next""];\n	""42"" -> ""56""[label=""cfg_next""];\n	""43"" -> ""45""[label=""cfg_next""];\n	""44"" -> ""43""[label=""cfg_next""];\n	""45"" -> ""1""[label=""cfg_next""];\n	""46"" -> ""81""[label=""cfg_next""];\n	""47"" -> ""5""[label=""cfg_goto""];\n	""48"" -> ""3""[label=""cfg_true""];\n	""48"" -> ""40""[label=""cfg_false""];\n	""49"" -> ""8""[label=""cfg_true""];\n	""49"" -> ""9""[label=""cfg_false""];\n	""5"" -> ""82""[label=""cfg_next""];\n	""50"" -> ""13""[label=""cfg_false""];\n	""50"" -> ""8""[label=""cfg_true""];\n	""51"" -> ""17""[label=""cfg_true""];\n	""51"" -> ""18""[label=""cfg_false""];\n	""52"" -> ""25""[label=""cfg_true""];\n	""52"" -> ""26""[label=""cfg_false""];\n	""53"" -> ""32""[label=""cfg_true""];\n	""53"" -> ""36""[label=""cfg_false""];\n	""54"" -> ""34""[label=""cfg_true""];\n	""54"" -> ""35""[label=""cfg_false""];\n	""55"" -> ""42""[label=""cfg_next""];\n	""56"" -> ""44""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""49""[label=""cfg_next""];\n	""8"" -> ""57""[label=""cfg_next""];\n	""81"" -> ""80""[label=""cfg_next""];\n	""82"" -> ""10""[label=""cfg_switch""];\n	""82"" -> ""11""[label=""cfg_switch""];\n	""82"" -> ""14""[label=""cfg_switch""];\n	""82"" -> ""15""[label=""cfg_switch""];\n	""82"" -> ""19""[label=""cfg_switch""];\n	""82"" -> ""20""[label=""cfg_switch""];\n	""82"" -> ""21""[label=""cfg_switch""];\n	""82"" -> ""22""[label=""cfg_switch""];\n	""82"" -> ""23""[label=""cfg_switch""];\n	""82"" -> ""27""[label=""cfg_switch""];\n	""82"" -> ""28""[label=""cfg_switch""];\n	""82"" -> ""29""[label=""cfg_switch""];\n	""82"" -> ""30""[label=""cfg_switch""];\n	""82"" -> ""37""[label=""cfg_switch""];\n	""82"" -> ""38""[label=""cfg_switch""];\n	""82"" -> ""39""[label=""cfg_switch""];\n	""82"" -> ""6""[label=""cfg_switch""];\n	""82"" -> ""8""[label=""cfg_switch""];\n	""83"" -> ""55""[label=""cfg_next""];\n	""84"" -> ""41""[label=""cfg_except""];\n	""84"" -> ""47""[label=""cfg_next""];\n	""9"" -> ""58""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa3_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa3_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(1, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(2, active0, active1);\n        return 3;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa4_0(active0, 0x20000000000000L, active1, 0L);\n        case 98:\n            return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x200L);\n        case 99:\n            return jjMoveStringLiteralDfa4_0(active0, 0x200ca0400000000L, active1, 0L);\n        case 101:\n            if ((active0 & 0x80000000L) != 0L) {\n                return jjStartNfaWithStates_0(3, 31, 12);\n            } else if ((active0 & 0x80000000000000L) != 0L) {\n                jjmatchedKind = 55;\n                jjmatchedPos = 3;\n            } else if ((active1 & 0x20L) != 0L) {\n                return jjStartNfaWithStates_0(3, 69, 12);\n            }\n            return jjMoveStringLiteralDfa4_0(active0, 0x40116000000000L, active1, 0L);\n        case 102:\n            return jjMoveStringLiteralDfa4_0(active0, 0x800000000L, active1, 0L);\n        case 103:\n            if ((active1 & 0x100L) != 0L) {\n                return jjStartNfaWithStates_0(3, 72, 12);\n            }\n            break;\n        case 105:\n            return jjMoveStringLiteralDfa4_0(active0, 0x102000000000000L, active1, 0x1L);\n        case 108:\n            if ((active1 & 0x80L) != 0L) {\n                return jjStartNfaWithStates_0(3, 71, 12);\n            }\n            return jjMoveStringLiteralDfa4_0(active0, 0x241000000000L, active1, 0x1008L);\n        case 109:\n            return jjMoveStringLiteralDfa4_0(active0, 0x200000000L, active1, 0x4002L);\n        case 110:\n            return jjMoveStringLiteralDfa4_0(active0, 0x4000000000000L, active1, 0x2004L);\n        case 111:\n            return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x800L);\n        case 114:\n            return jjMoveStringLiteralDfa4_0(active0, 0x400008000000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa4_0(active0, 0xe800000000000000L, active1, 0x40L);\n        case 116:\n            if ((active0 & 0x100000000L) != 0L) {\n                return jjStartNfaWithStates_0(3, 32, 12);\n            } else if ((active0 & 0x1000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(3, 48, 12);\n            }\n            return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(2, active0, active1);\n}","int jjMoveStringLiteralDfa3_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa3_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = active0 & 4294967296L""];\n	""7"" [label=""$stack16 = $stack15 cmp 0L""];\n	""8"" [label=""$stack17 = active0 & 281474976710656L""];\n	""9"" [label=""$stack18 = $stack17 cmp 0L""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 1152921504606846976L, active1, 0L)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(3, 48, 12)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(3, 32, 12)""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, -1729382256910270464L, active1, 64L)""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 288230925907525632L, active1, 0L)""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 0L, active1, 2048L)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 1125899906842624L, active1, 8196L)""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 8589934592L, active1, 16386L)""];\n	""18"" [label=""$stack27 = active1 & 128L""];\n	""19"" [label=""$stack28 = $stack27 cmp 0L""];\n	""20"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 39651138076672L, active1, 4104L)""];\n	""21"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(3, 71, 12)""];\n	""22"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 72620543991349248L, active1, 1L)""];\n	""23"" [label=""$stack32 = active1 & 256L""];\n	""24"" [label=""$stack33 = $stack32 cmp 0L""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(2, active0, active1)""];\n	""26"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(3, 72, 12)""];\n	""27"" [label=""$stack36 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 34359738368L, active1, 0L)""];\n	""28"" [label=""$stack37 = active0 & 2147483648L""];\n	""29"" [label=""$stack38 = $stack37 cmp 0L""];\n	""30"" [label=""$stack39 = active0 & 36028797018963968L""];\n	""31"" [label=""$stack40 = $stack39 cmp 0L""];\n	""32"" [label=""$stack41 = active1 & 32L""];\n	""33"" [label=""$stack42 = $stack41 cmp 0L""];\n	""34"" [label=""$stack43 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 18033502524014592L, active1, 0L)""];\n	""35"" [label=""$stack44 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(3, 69, 12)""];\n	""36"" [label=""$stack45 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(3, 31, 12)""];\n	""37"" [label=""$stack46 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 144337306604535808L, active1, 0L)""];\n	""38"" [label=""$stack47 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 0L, active1, 512L)""];\n	""39"" [label=""$stack48 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa4_0(long,long,long,long)>(active0, 9007199254740992L, active1, 0L)""];\n	""40"" [label=""$stack49 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(1, old0, old1)""];\n	""41"" [label=""$stack50 := @caughtexception""];\n	""42"" [label=""active0 := @parameter1: long""];\n	""43"" [label=""active0 = active0 & old0""];\n	""44"" [label=""active1 := @parameter3: long""];\n	""45"" [label=""active1 = active1 & old1""];\n	""46"" [label=""e = $stack50""];\n	""47"" [label=""goto""];\n	""48"" [label=""goto""];\n	""49"" [label=""if $stack11 != 0""];\n	""50"" [label=""if $stack16 == 0""];\n	""51"" [label=""if $stack18 == 0""];\n	""52"" [label=""if $stack28 == 0""];\n	""53"" [label=""if $stack33 == 0""];\n	""54"" [label=""if $stack38 == 0""];\n	""55"" [label=""if $stack40 == 0""];\n	""56"" [label=""if $stack42 == 0""];\n	""57"" [label=""old0 := @parameter0: long""];\n	""58"" [label=""old1 := @parameter2: long""];\n	""59"" [label=""return $stack19""];\n	""60"" [label=""return $stack20""];\n	""61"" [label=""return $stack21""];\n	""62"" [label=""return $stack22""];\n	""63"" [label=""return $stack23""];\n	""64"" [label=""return $stack24""];\n	""65"" [label=""return $stack25""];\n	""66"" [label=""return $stack26""];\n	""67"" [label=""return $stack29""];\n	""68"" [label=""return $stack30""];\n	""69"" [label=""return $stack31""];\n	""70"" [label=""return $stack34""];\n	""71"" [label=""return $stack35""];\n	""72"" [label=""return $stack36""];\n	""73"" [label=""return $stack43""];\n	""74"" [label=""return $stack44""];\n	""75"" [label=""return $stack45""];\n	""76"" [label=""return $stack46""];\n	""77"" [label=""return $stack47""];\n	""78"" [label=""return $stack48""];\n	""79"" [label=""return $stack49""];\n	""80"" [label=""return 3""];\n	""81"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(2, active0, active1)""];\n	""82"" [label=""switch($stack14) \{     case 97:     case 98:     case 99:     case 100:     case 101:     case 102:     case 103:     case 104:     case 105:     case 106:     case 107:     case 108:     case 109:     case 110:     case 111:     case 112:     case 113:     case 114:     case 115:     case 116:     default:  \}""];\n	""83"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""84"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""85"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 55""];\n	""86"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 3""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""59""[label=""cfg_next""];\n	""11"" -> ""60""[label=""cfg_next""];\n	""12"" -> ""61""[label=""cfg_next""];\n	""13"" -> ""62""[label=""cfg_next""];\n	""14"" -> ""63""[label=""cfg_next""];\n	""15"" -> ""64""[label=""cfg_next""];\n	""16"" -> ""65""[label=""cfg_next""];\n	""17"" -> ""66""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""52""[label=""cfg_next""];\n	""2"" -> ""49""[label=""cfg_next""];\n	""20"" -> ""67""[label=""cfg_next""];\n	""21"" -> ""68""[label=""cfg_next""];\n	""22"" -> ""69""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""53""[label=""cfg_next""];\n	""25"" -> ""70""[label=""cfg_next""];\n	""26"" -> ""71""[label=""cfg_next""];\n	""27"" -> ""72""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""54""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""41""[label=""cfg_except""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""55""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""56""[label=""cfg_next""];\n	""34"" -> ""73""[label=""cfg_next""];\n	""35"" -> ""74""[label=""cfg_next""];\n	""36"" -> ""75""[label=""cfg_next""];\n	""37"" -> ""76""[label=""cfg_next""];\n	""38"" -> ""77""[label=""cfg_next""];\n	""39"" -> ""78""[label=""cfg_next""];\n	""4"" -> ""41""[label=""cfg_except""];\n	""4"" -> ""84""[label=""cfg_next""];\n	""40"" -> ""79""[label=""cfg_next""];\n	""41"" -> ""46""[label=""cfg_next""];\n	""42"" -> ""58""[label=""cfg_next""];\n	""43"" -> ""45""[label=""cfg_next""];\n	""44"" -> ""43""[label=""cfg_next""];\n	""45"" -> ""1""[label=""cfg_next""];\n	""46"" -> ""81""[label=""cfg_next""];\n	""47"" -> ""5""[label=""cfg_goto""];\n	""48"" -> ""34""[label=""cfg_goto""];\n	""49"" -> ""3""[label=""cfg_true""];\n	""49"" -> ""40""[label=""cfg_false""];\n	""5"" -> ""82""[label=""cfg_next""];\n	""50"" -> ""12""[label=""cfg_false""];\n	""50"" -> ""8""[label=""cfg_true""];\n	""51"" -> ""10""[label=""cfg_true""];\n	""51"" -> ""11""[label=""cfg_false""];\n	""52"" -> ""20""[label=""cfg_true""];\n	""52"" -> ""21""[label=""cfg_false""];\n	""53"" -> ""25""[label=""cfg_true""];\n	""53"" -> ""26""[label=""cfg_false""];\n	""54"" -> ""30""[label=""cfg_true""];\n	""54"" -> ""36""[label=""cfg_false""];\n	""55"" -> ""32""[label=""cfg_true""];\n	""55"" -> ""85""[label=""cfg_false""];\n	""56"" -> ""34""[label=""cfg_true""];\n	""56"" -> ""35""[label=""cfg_false""];\n	""57"" -> ""42""[label=""cfg_next""];\n	""58"" -> ""44""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""50""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""81"" -> ""80""[label=""cfg_next""];\n	""82"" -> ""13""[label=""cfg_switch""];\n	""82"" -> ""14""[label=""cfg_switch""];\n	""82"" -> ""15""[label=""cfg_switch""];\n	""82"" -> ""16""[label=""cfg_switch""];\n	""82"" -> ""17""[label=""cfg_switch""];\n	""82"" -> ""18""[label=""cfg_switch""];\n	""82"" -> ""22""[label=""cfg_switch""];\n	""82"" -> ""23""[label=""cfg_switch""];\n	""82"" -> ""25""[label=""cfg_switch""];\n	""82"" -> ""27""[label=""cfg_switch""];\n	""82"" -> ""28""[label=""cfg_switch""];\n	""82"" -> ""37""[label=""cfg_switch""];\n	""82"" -> ""38""[label=""cfg_switch""];\n	""82"" -> ""39""[label=""cfg_switch""];\n	""82"" -> ""6""[label=""cfg_switch""];\n	""83"" -> ""57""[label=""cfg_next""];\n	""84"" -> ""41""[label=""cfg_except""];\n	""84"" -> ""47""[label=""cfg_next""];\n	""85"" -> ""86""[label=""cfg_next""];\n	""86"" -> ""48""[label=""cfg_next""];\n	""9"" -> ""51""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa4_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa4_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(2, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(3, active0, active1);\n        return 4;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa5_0(active0, 0x800000000000000L, active1, 0L);\n        case 58:\n            return jjMoveStringLiteralDfa5_0(active0, 0x800000000L, active1, 0L);\n        case 97:\n            return jjMoveStringLiteralDfa5_0(active0, 0x1200000000000000L, active1, 0x4002L);\n        case 100:\n            if ((active1 & 0x2000L) != 0L) {\n                return jjStartNfaWithStates_0(4, 77, 12);\n            }\n            return jjMoveStringLiteralDfa5_0(active0, 0x1000000000L, active1, 0L);\n        case 101:\n            if ((active1 & 0x40L) != 0L) {\n                return jjStartNfaWithStates_0(4, 70, 12);\n            }\n            return jjMoveStringLiteralDfa5_0(active0, 0xca0600000000L, active1, 0x208L);\n        case 105:\n            return jjMoveStringLiteralDfa5_0(active0, 0x8000000000L, active1, 0x1000L);\n        case 108:\n            return jjMoveStringLiteralDfa5_0(active0, 0x20000000000000L, active1, 0L);\n        case 110:\n            return jjMoveStringLiteralDfa5_0(active0, 0x100002000000000L, active1, 0x1L);\n        case 111:\n            return jjMoveStringLiteralDfa5_0(active0, 0x240000000000L, active1, 0L);\n        case 114:\n            if ((active1 & 0x800L) != 0L) {\n                return jjStartNfaWithStates_0(4, 75, 12);\n            }\n            break;\n        case 115:\n            return jjMoveStringLiteralDfa5_0(active0, 0x40114000000000L, active1, 0x4L);\n        case 116:\n            if ((active0 & 0x4000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(4, 50, 12);\n            }\n            return jjMoveStringLiteralDfa5_0(active0, 0xe402000000000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(3, active0, active1);\n}","int jjMoveStringLiteralDfa4_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa4_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = active0 & 1125899906842624L""];\n	""7"" [label=""$stack16 = $stack15 cmp 0L""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, -2017049683108560896L, active1, 0L)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(4, 50, 12)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 18033365085061120L, active1, 4L)""];\n	""11"" [label=""$stack20 = active1 & 2048L""];\n	""12"" [label=""$stack21 = $stack20 cmp 0L""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(3, active0, active1)""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(4, 75, 12)""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 39582418599936L, active1, 0L)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 72057731476881408L, active1, 1L)""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 9007199254740992L, active1, 0L)""];\n	""18"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 549755813888L, active1, 4096L)""];\n	""19"" [label=""$stack28 = active1 & 64L""];\n	""20"" [label=""$stack29 = $stack28 cmp 0L""];\n	""21"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 222127118614528L, active1, 520L)""];\n	""22"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(4, 70, 12)""];\n	""23"" [label=""$stack32 = active1 & 8192L""];\n	""24"" [label=""$stack33 = $stack32 cmp 0L""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 68719476736L, active1, 0L)""];\n	""26"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(4, 77, 12)""];\n	""27"" [label=""$stack36 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 1297036692682702848L, active1, 16386L)""];\n	""28"" [label=""$stack37 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 34359738368L, active1, 0L)""];\n	""29"" [label=""$stack38 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa5_0(long,long,long,long)>(active0, 576460752303423488L, active1, 0L)""];\n	""30"" [label=""$stack39 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(2, old0, old1)""];\n	""31"" [label=""$stack40 := @caughtexception""];\n	""32"" [label=""active0 := @parameter1: long""];\n	""33"" [label=""active0 = active0 & old0""];\n	""34"" [label=""active1 := @parameter3: long""];\n	""35"" [label=""active1 = active1 & old1""];\n	""36"" [label=""e = $stack40""];\n	""37"" [label=""goto""];\n	""38"" [label=""if $stack11 != 0""];\n	""39"" [label=""if $stack16 == 0""];\n	""40"" [label=""if $stack21 == 0""];\n	""41"" [label=""if $stack29 == 0""];\n	""42"" [label=""if $stack33 == 0""];\n	""43"" [label=""old0 := @parameter0: long""];\n	""44"" [label=""old1 := @parameter2: long""];\n	""45"" [label=""return $stack17""];\n	""46"" [label=""return $stack18""];\n	""47"" [label=""return $stack19""];\n	""48"" [label=""return $stack22""];\n	""49"" [label=""return $stack23""];\n	""50"" [label=""return $stack24""];\n	""51"" [label=""return $stack25""];\n	""52"" [label=""return $stack26""];\n	""53"" [label=""return $stack27""];\n	""54"" [label=""return $stack30""];\n	""55"" [label=""return $stack31""];\n	""56"" [label=""return $stack34""];\n	""57"" [label=""return $stack35""];\n	""58"" [label=""return $stack36""];\n	""59"" [label=""return $stack37""];\n	""60"" [label=""return $stack38""];\n	""61"" [label=""return $stack39""];\n	""62"" [label=""return 4""];\n	""63"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(3, active0, active1)""];\n	""64"" [label=""switch($stack14) \{     case 45:     case 58:     case 97:     case 100:     case 101:     case 105:     case 108:     case 110:     case 111:     case 114:     case 115:     case 116:     default:  \}""];\n	""65"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""66"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""47""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""40""[label=""cfg_next""];\n	""13"" -> ""48""[label=""cfg_next""];\n	""14"" -> ""49""[label=""cfg_next""];\n	""15"" -> ""50""[label=""cfg_next""];\n	""16"" -> ""51""[label=""cfg_next""];\n	""17"" -> ""52""[label=""cfg_next""];\n	""18"" -> ""53""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""38""[label=""cfg_next""];\n	""20"" -> ""41""[label=""cfg_next""];\n	""21"" -> ""54""[label=""cfg_next""];\n	""22"" -> ""55""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""42""[label=""cfg_next""];\n	""25"" -> ""56""[label=""cfg_next""];\n	""26"" -> ""57""[label=""cfg_next""];\n	""27"" -> ""58""[label=""cfg_next""];\n	""28"" -> ""59""[label=""cfg_next""];\n	""29"" -> ""60""[label=""cfg_next""];\n	""3"" -> ""31""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""61""[label=""cfg_next""];\n	""31"" -> ""36""[label=""cfg_next""];\n	""32"" -> ""44""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""1""[label=""cfg_next""];\n	""36"" -> ""63""[label=""cfg_next""];\n	""37"" -> ""5""[label=""cfg_goto""];\n	""38"" -> ""3""[label=""cfg_true""];\n	""38"" -> ""30""[label=""cfg_false""];\n	""39"" -> ""8""[label=""cfg_true""];\n	""39"" -> ""9""[label=""cfg_false""];\n	""4"" -> ""31""[label=""cfg_except""];\n	""4"" -> ""66""[label=""cfg_next""];\n	""40"" -> ""13""[label=""cfg_true""];\n	""40"" -> ""14""[label=""cfg_false""];\n	""41"" -> ""21""[label=""cfg_true""];\n	""41"" -> ""22""[label=""cfg_false""];\n	""42"" -> ""25""[label=""cfg_true""];\n	""42"" -> ""26""[label=""cfg_false""];\n	""43"" -> ""32""[label=""cfg_next""];\n	""44"" -> ""34""[label=""cfg_next""];\n	""5"" -> ""64""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""63"" -> ""62""[label=""cfg_next""];\n	""64"" -> ""10""[label=""cfg_switch""];\n	""64"" -> ""11""[label=""cfg_switch""];\n	""64"" -> ""13""[label=""cfg_switch""];\n	""64"" -> ""15""[label=""cfg_switch""];\n	""64"" -> ""16""[label=""cfg_switch""];\n	""64"" -> ""17""[label=""cfg_switch""];\n	""64"" -> ""18""[label=""cfg_switch""];\n	""64"" -> ""19""[label=""cfg_switch""];\n	""64"" -> ""23""[label=""cfg_switch""];\n	""64"" -> ""27""[label=""cfg_switch""];\n	""64"" -> ""28""[label=""cfg_switch""];\n	""64"" -> ""29""[label=""cfg_switch""];\n	""64"" -> ""6""[label=""cfg_switch""];\n	""65"" -> ""43""[label=""cfg_next""];\n	""66"" -> ""31""[label=""cfg_except""];\n	""66"" -> ""37""[label=""cfg_next""];\n	""7"" -> ""39""[label=""cfg_next""];\n	""8"" -> ""45""[label=""cfg_next""];\n	""9"" -> ""46""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa5_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa5_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(3, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(4, active0, active1);\n        return 5;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa6_0(active0, 0x20000000000000L, active1, 0L);\n        case 58:\n            if ((active0 & 0x800000000L) != 0L) {\n                return jjStopAtPos(5, 35);\n            }\n            return jjMoveStringLiteralDfa6_0(active0, 0x1000000000L, active1, 0L);\n        case 97:\n            return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x8L);\n        case 98:\n            return jjMoveStringLiteralDfa6_0(active0, 0x8000000000L, active1, 0L);\n        case 100:\n            return jjMoveStringLiteralDfa6_0(active0, 0x420000000000L, active1, 0L);\n        case 103:\n            if ((active0 & 0x100000000000000L) != 0L) {\n                jjmatchedKind = 56;\n                jjmatchedPos = 5;\n            }\n            return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x1L);\n        case 105:\n            return jjMoveStringLiteralDfa6_0(active0, 0x1002000000000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x6L);\n        case 110:\n            return jjMoveStringLiteralDfa6_0(active0, 0x880200000000L, active1, 0x1000L);\n        case 112:\n            return jjMoveStringLiteralDfa6_0(active0, 0x40010000000000L, active1, 0L);\n        case 114:\n            if ((active1 & 0x200L) != 0L) {\n                return jjStartNfaWithStates_0(5, 73, 12);\n            }\n            return jjMoveStringLiteralDfa6_0(active0, 0xe000000000000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa6_0(active0, 0x400000400000000L, active1, 0L);\n        case 116:\n            if ((active0 & 0x200000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(5, 57, 12);\n            }\n            return jjMoveStringLiteralDfa6_0(active0, 0x106000000000L, active1, 0x4000L);\n        case 119:\n            return jjMoveStringLiteralDfa6_0(active0, 0x800240000000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(4, active0, active1);\n}","int jjMoveStringLiteralDfa5_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa5_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 576500334722023424L, active1, 0L)""];\n	""7"" [label=""$stack16 = active0 & 144115188075855872L""];\n	""8"" [label=""$stack17 = $stack16 cmp 0L""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 18004502904832L, active1, 16384L)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(5, 57, 12)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 288230393331580928L, active1, 0L)""];\n	""12"" [label=""$stack21 = active1 & 512L""];\n	""13"" [label=""$stack22 = $stack21 cmp 0L""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, -2305843009213693952L, active1, 0L)""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(5, 73, 12)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 18015498021109760L, active1, 0L)""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 149542171312128L, active1, 4096L)""];\n	""18"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 0L, active1, 6L)""];\n	""19"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 1153484454560268288L, active1, 0L)""];\n	""20"" [label=""$stack29 = active0 & 72057594037927936L""];\n	""21"" [label=""$stack30 = $stack29 cmp 0L""];\n	""22"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 0L, active1, 1L)""];\n	""23"" [label=""$stack32 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 72567767433216L, active1, 0L)""];\n	""24"" [label=""$stack33 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 549755813888L, active1, 0L)""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 0L, active1, 8L)""];\n	""26"" [label=""$stack35 = active0 & 34359738368L""];\n	""27"" [label=""$stack36 = $stack35 cmp 0L""];\n	""28"" [label=""$stack37 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 68719476736L, active1, 0L)""];\n	""29"" [label=""$stack38 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(5, 35)""];\n	""30"" [label=""$stack39 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa6_0(long,long,long,long)>(active0, 9007199254740992L, active1, 0L)""];\n	""31"" [label=""$stack40 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(4, active0, active1)""];\n	""32"" [label=""$stack41 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(3, old0, old1)""];\n	""33"" [label=""$stack42 := @caughtexception""];\n	""34"" [label=""active0 := @parameter1: long""];\n	""35"" [label=""active0 = active0 & old0""];\n	""36"" [label=""active1 := @parameter3: long""];\n	""37"" [label=""active1 = active1 & old1""];\n	""38"" [label=""e = $stack42""];\n	""39"" [label=""goto""];\n	""40"" [label=""if $stack11 != 0""];\n	""41"" [label=""if $stack17 == 0""];\n	""42"" [label=""if $stack22 == 0""];\n	""43"" [label=""if $stack30 == 0""];\n	""44"" [label=""if $stack36 == 0""];\n	""45"" [label=""old0 := @parameter0: long""];\n	""46"" [label=""old1 := @parameter2: long""];\n	""47"" [label=""return $stack15""];\n	""48"" [label=""return $stack18""];\n	""49"" [label=""return $stack19""];\n	""50"" [label=""return $stack20""];\n	""51"" [label=""return $stack23""];\n	""52"" [label=""return $stack24""];\n	""53"" [label=""return $stack25""];\n	""54"" [label=""return $stack26""];\n	""55"" [label=""return $stack27""];\n	""56"" [label=""return $stack28""];\n	""57"" [label=""return $stack31""];\n	""58"" [label=""return $stack32""];\n	""59"" [label=""return $stack33""];\n	""60"" [label=""return $stack34""];\n	""61"" [label=""return $stack37""];\n	""62"" [label=""return $stack38""];\n	""63"" [label=""return $stack39""];\n	""64"" [label=""return $stack40""];\n	""65"" [label=""return $stack41""];\n	""66"" [label=""return 5""];\n	""67"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(4, active0, active1)""];\n	""68"" [label=""switch($stack14) \{     case 45:     case 58:     case 97:     case 98:     case 100:     case 103:     case 105:     case 108:     case 110:     case 112:     case 114:     case 115:     case 116:     case 119:     default:  \}""];\n	""69"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""70"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""71"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 56""];\n	""72"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 5""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""49""[label=""cfg_next""];\n	""11"" -> ""50""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""42""[label=""cfg_next""];\n	""14"" -> ""51""[label=""cfg_next""];\n	""15"" -> ""52""[label=""cfg_next""];\n	""16"" -> ""53""[label=""cfg_next""];\n	""17"" -> ""54""[label=""cfg_next""];\n	""18"" -> ""55""[label=""cfg_next""];\n	""19"" -> ""56""[label=""cfg_next""];\n	""2"" -> ""40""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""43""[label=""cfg_next""];\n	""22"" -> ""57""[label=""cfg_next""];\n	""23"" -> ""58""[label=""cfg_next""];\n	""24"" -> ""59""[label=""cfg_next""];\n	""25"" -> ""60""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""44""[label=""cfg_next""];\n	""28"" -> ""61""[label=""cfg_next""];\n	""29"" -> ""62""[label=""cfg_next""];\n	""3"" -> ""33""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""63""[label=""cfg_next""];\n	""31"" -> ""64""[label=""cfg_next""];\n	""32"" -> ""65""[label=""cfg_next""];\n	""33"" -> ""38""[label=""cfg_next""];\n	""34"" -> ""46""[label=""cfg_next""];\n	""35"" -> ""37""[label=""cfg_next""];\n	""36"" -> ""35""[label=""cfg_next""];\n	""37"" -> ""1""[label=""cfg_next""];\n	""38"" -> ""67""[label=""cfg_next""];\n	""39"" -> ""5""[label=""cfg_goto""];\n	""4"" -> ""33""[label=""cfg_except""];\n	""4"" -> ""70""[label=""cfg_next""];\n	""40"" -> ""3""[label=""cfg_true""];\n	""40"" -> ""32""[label=""cfg_false""];\n	""41"" -> ""10""[label=""cfg_false""];\n	""41"" -> ""9""[label=""cfg_true""];\n	""42"" -> ""14""[label=""cfg_true""];\n	""42"" -> ""15""[label=""cfg_false""];\n	""43"" -> ""22""[label=""cfg_true""];\n	""43"" -> ""71""[label=""cfg_false""];\n	""44"" -> ""28""[label=""cfg_true""];\n	""44"" -> ""29""[label=""cfg_false""];\n	""45"" -> ""34""[label=""cfg_next""];\n	""46"" -> ""36""[label=""cfg_next""];\n	""5"" -> ""68""[label=""cfg_next""];\n	""6"" -> ""47""[label=""cfg_next""];\n	""67"" -> ""66""[label=""cfg_next""];\n	""68"" -> ""11""[label=""cfg_switch""];\n	""68"" -> ""12""[label=""cfg_switch""];\n	""68"" -> ""16""[label=""cfg_switch""];\n	""68"" -> ""17""[label=""cfg_switch""];\n	""68"" -> ""18""[label=""cfg_switch""];\n	""68"" -> ""19""[label=""cfg_switch""];\n	""68"" -> ""20""[label=""cfg_switch""];\n	""68"" -> ""23""[label=""cfg_switch""];\n	""68"" -> ""24""[label=""cfg_switch""];\n	""68"" -> ""25""[label=""cfg_switch""];\n	""68"" -> ""26""[label=""cfg_switch""];\n	""68"" -> ""30""[label=""cfg_switch""];\n	""68"" -> ""31""[label=""cfg_switch""];\n	""68"" -> ""6""[label=""cfg_switch""];\n	""68"" -> ""7""[label=""cfg_switch""];\n	""69"" -> ""45""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""33""[label=""cfg_except""];\n	""70"" -> ""39""[label=""cfg_next""];\n	""71"" -> ""72""[label=""cfg_next""];\n	""72"" -> ""22""[label=""cfg_next""];\n	""8"" -> ""41""[label=""cfg_next""];\n	""9"" -> ""48""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa6_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa6_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(4, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(5, active0, active1);\n        return 6;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa7_0(active0, 0x400000000000000L, active1, 0x4001L);\n        case 58:\n            if ((active0 & 0x1000000000L) != 0L) {\n                return jjStopAtPos(6, 36);\n            }\n            return jjMoveStringLiteralDfa7_0(active0, 0x2000000000L, active1, 0L);\n        case 97:\n            return jjMoveStringLiteralDfa7_0(active0, 0x40010000000000L, active1, 0x4L);\n        case 100:\n            return jjMoveStringLiteralDfa7_0(active0, 0x880000000000L, active1, 0L);\n        case 103:\n            if ((active1 & 0x1000L) != 0L) {\n                return jjStartNfaWithStates_0(6, 76, 12);\n            }\n            break;\n        case 105:\n            return jjMoveStringLiteralDfa7_0(active0, 0xe800660000000000L, active1, 0x2L);\n        case 110:\n            if ((active1 & 0x8L) != 0L) {\n                return jjStartNfaWithStates_0(6, 67, 12);\n            }\n            return jjMoveStringLiteralDfa7_0(active0, 0x1020000000000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa7_0(active0, 0x2104000000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa7_0(active0, 0x400000000L, active1, 0L);\n        case 116:\n            if ((active0 & 0x200000000L) != 0L) {\n                return jjStartNfaWithStates_0(6, 33, 12);\n            }\n            break;\n        case 117:\n            return jjMoveStringLiteralDfa7_0(active0, 0x8000000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(5, active0, active1);\n}","int jjMoveStringLiteralDfa6_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa6_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 549755813888L, active1, 0L)""];\n	""7"" [label=""$stack16 = active0 & 8589934592L""];\n	""8"" [label=""$stack17 = $stack16 cmp 0L""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(5, active0, active1)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(6, 33, 12)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 17179869184L, active1, 0L)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 580817017372672L, active1, 0L)""];\n	""13"" [label=""$stack22 = active1 & 8L""];\n	""14"" [label=""$stack23 = $stack22 cmp 0L""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 1161928703861587968L, active1, 0L)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(6, 67, 12)""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, -1729270106724237312L, active1, 2L)""];\n	""18"" [label=""$stack27 = active1 & 4096L""];\n	""19"" [label=""$stack28 = $stack27 cmp 0L""];\n	""20"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(6, 76, 12)""];\n	""21"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 149533581377536L, active1, 0L)""];\n	""22"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 18015498021109760L, active1, 4L)""];\n	""23"" [label=""$stack32 = active0 & 68719476736L""];\n	""24"" [label=""$stack33 = $stack32 cmp 0L""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 137438953472L, active1, 0L)""];\n	""26"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(6, 36)""];\n	""27"" [label=""$stack36 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa7_0(long,long,long,long)>(active0, 288230376151711744L, active1, 16385L)""];\n	""28"" [label=""$stack37 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(4, old0, old1)""];\n	""29"" [label=""$stack38 := @caughtexception""];\n	""30"" [label=""active0 := @parameter1: long""];\n	""31"" [label=""active0 = active0 & old0""];\n	""32"" [label=""active1 := @parameter3: long""];\n	""33"" [label=""active1 = active1 & old1""];\n	""34"" [label=""e = $stack38""];\n	""35"" [label=""goto""];\n	""36"" [label=""if $stack11 != 0""];\n	""37"" [label=""if $stack17 == 0""];\n	""38"" [label=""if $stack23 == 0""];\n	""39"" [label=""if $stack28 == 0""];\n	""40"" [label=""if $stack33 == 0""];\n	""41"" [label=""old0 := @parameter0: long""];\n	""42"" [label=""old1 := @parameter2: long""];\n	""43"" [label=""return $stack15""];\n	""44"" [label=""return $stack18""];\n	""45"" [label=""return $stack19""];\n	""46"" [label=""return $stack20""];\n	""47"" [label=""return $stack21""];\n	""48"" [label=""return $stack24""];\n	""49"" [label=""return $stack25""];\n	""50"" [label=""return $stack26""];\n	""51"" [label=""return $stack29""];\n	""52"" [label=""return $stack30""];\n	""53"" [label=""return $stack31""];\n	""54"" [label=""return $stack34""];\n	""55"" [label=""return $stack35""];\n	""56"" [label=""return $stack36""];\n	""57"" [label=""return $stack37""];\n	""58"" [label=""return 6""];\n	""59"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(5, active0, active1)""];\n	""60"" [label=""switch($stack14) \{     case 45:     case 58:     case 97:     case 100:     case 103:     case 105:     case 110:     case 111:     case 115:     case 116:     case 117:     default:  \}""];\n	""61"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""62"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""45""[label=""cfg_next""];\n	""11"" -> ""46""[label=""cfg_next""];\n	""12"" -> ""47""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""38""[label=""cfg_next""];\n	""15"" -> ""48""[label=""cfg_next""];\n	""16"" -> ""49""[label=""cfg_next""];\n	""17"" -> ""50""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""39""[label=""cfg_next""];\n	""2"" -> ""36""[label=""cfg_next""];\n	""20"" -> ""51""[label=""cfg_next""];\n	""21"" -> ""52""[label=""cfg_next""];\n	""22"" -> ""53""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""40""[label=""cfg_next""];\n	""25"" -> ""54""[label=""cfg_next""];\n	""26"" -> ""55""[label=""cfg_next""];\n	""27"" -> ""56""[label=""cfg_next""];\n	""28"" -> ""57""[label=""cfg_next""];\n	""29"" -> ""34""[label=""cfg_next""];\n	""3"" -> ""29""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""42""[label=""cfg_next""];\n	""31"" -> ""33""[label=""cfg_next""];\n	""32"" -> ""31""[label=""cfg_next""];\n	""33"" -> ""1""[label=""cfg_next""];\n	""34"" -> ""59""[label=""cfg_next""];\n	""35"" -> ""5""[label=""cfg_goto""];\n	""36"" -> ""28""[label=""cfg_false""];\n	""36"" -> ""3""[label=""cfg_true""];\n	""37"" -> ""10""[label=""cfg_false""];\n	""37"" -> ""9""[label=""cfg_true""];\n	""38"" -> ""15""[label=""cfg_true""];\n	""38"" -> ""16""[label=""cfg_false""];\n	""39"" -> ""20""[label=""cfg_false""];\n	""39"" -> ""9""[label=""cfg_true""];\n	""4"" -> ""29""[label=""cfg_except""];\n	""4"" -> ""62""[label=""cfg_next""];\n	""40"" -> ""25""[label=""cfg_true""];\n	""40"" -> ""26""[label=""cfg_false""];\n	""41"" -> ""30""[label=""cfg_next""];\n	""42"" -> ""32""[label=""cfg_next""];\n	""5"" -> ""60""[label=""cfg_next""];\n	""59"" -> ""58""[label=""cfg_next""];\n	""6"" -> ""43""[label=""cfg_next""];\n	""60"" -> ""11""[label=""cfg_switch""];\n	""60"" -> ""12""[label=""cfg_switch""];\n	""60"" -> ""13""[label=""cfg_switch""];\n	""60"" -> ""17""[label=""cfg_switch""];\n	""60"" -> ""18""[label=""cfg_switch""];\n	""60"" -> ""21""[label=""cfg_switch""];\n	""60"" -> ""22""[label=""cfg_switch""];\n	""60"" -> ""23""[label=""cfg_switch""];\n	""60"" -> ""27""[label=""cfg_switch""];\n	""60"" -> ""6""[label=""cfg_switch""];\n	""60"" -> ""7""[label=""cfg_switch""];\n	""60"" -> ""9""[label=""cfg_switch""];\n	""61"" -> ""41""[label=""cfg_next""];\n	""62"" -> ""29""[label=""cfg_except""];\n	""62"" -> ""35""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""37""[label=""cfg_next""];\n	""9"" -> ""44""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa7_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa7_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(5, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(6, active0, active1);\n        return 7;\n    }\n    switch(curChar) {\n        case 58:\n            if ((active0 & 0x2000000000L) != 0L) {\n                return jjStopAtPos(7, 37);\n            }\n            break;\n        case 97:\n            return jjMoveStringLiteralDfa8_0(active0, 0x20880000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa8_0(active0, 0x40010000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa8_0(active0, 0x400000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x1L);\n        case 110:\n            if ((active0 & 0x2000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(7, 49, 12);\n            }\n            return jjMoveStringLiteralDfa8_0(active0, 0xe000660000000000L, active1, 0x4000L);\n        case 114:\n            return jjMoveStringLiteralDfa8_0(active0, 0x104000000000L, active1, 0L);\n        case 115:\n            if ((active0 & 0x1000000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(7, 60, 12);\n            }\n            break;\n        case 116:\n            return jjMoveStringLiteralDfa8_0(active0, 0x800008000000000L, active1, 0x4L);\n        case 119:\n            return jjMoveStringLiteralDfa8_0(active0, 0x400000000000000L, active1, 0L);\n        case 122:\n            return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x2L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(6, active0, active1);\n}","int jjMoveStringLiteralDfa7_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa7_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 0L, active1, 2L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 288230376151711744L, active1, 0L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 576461302059237376L, active1, 4L)""];\n	""9"" [label=""$stack18 = active0 & 1152921504606846976L""];\n	""10"" [label=""$stack19 = $stack18 cmp 0L""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(6, active0, active1)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(7, 60, 12)""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 17867063951360L, active1, 0L)""];\n	""14"" [label=""$stack23 = active0 & 562949953421312L""];\n	""15"" [label=""$stack24 = $stack23 cmp 0L""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, -2305730859027660800L, active1, 16384L)""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(7, 49, 12)""];\n	""18"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 0L, active1, 1L)""];\n	""19"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 17179869184L, active1, 0L)""];\n	""20"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 18015498021109760L, active1, 0L)""];\n	""21"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa8_0(long,long,long,long)>(active0, 9156732836118528L, active1, 0L)""];\n	""22"" [label=""$stack31 = active0 & 137438953472L""];\n	""23"" [label=""$stack32 = $stack31 cmp 0L""];\n	""24"" [label=""$stack33 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(7, 37)""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(5, old0, old1)""];\n	""26"" [label=""$stack35 := @caughtexception""];\n	""27"" [label=""active0 := @parameter1: long""];\n	""28"" [label=""active0 = active0 & old0""];\n	""29"" [label=""active1 := @parameter3: long""];\n	""30"" [label=""active1 = active1 & old1""];\n	""31"" [label=""e = $stack35""];\n	""32"" [label=""goto""];\n	""33"" [label=""if $stack11 != 0""];\n	""34"" [label=""if $stack19 == 0""];\n	""35"" [label=""if $stack24 == 0""];\n	""36"" [label=""if $stack32 == 0""];\n	""37"" [label=""old0 := @parameter0: long""];\n	""38"" [label=""old1 := @parameter2: long""];\n	""39"" [label=""return $stack15""];\n	""40"" [label=""return $stack16""];\n	""41"" [label=""return $stack17""];\n	""42"" [label=""return $stack20""];\n	""43"" [label=""return $stack21""];\n	""44"" [label=""return $stack22""];\n	""45"" [label=""return $stack25""];\n	""46"" [label=""return $stack26""];\n	""47"" [label=""return $stack27""];\n	""48"" [label=""return $stack28""];\n	""49"" [label=""return $stack29""];\n	""50"" [label=""return $stack30""];\n	""51"" [label=""return $stack33""];\n	""52"" [label=""return $stack34""];\n	""53"" [label=""return 7""];\n	""54"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(6, active0, active1)""];\n	""55"" [label=""switch($stack14) \{     case 58:     case 97:     case 99:     case 105:     case 108:     case 110:     case 114:     case 115:     case 116:     case 119:     case 122:     default:  \}""];\n	""56"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""57"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""34""[label=""cfg_next""];\n	""11"" -> ""42""[label=""cfg_next""];\n	""12"" -> ""43""[label=""cfg_next""];\n	""13"" -> ""44""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""35""[label=""cfg_next""];\n	""16"" -> ""45""[label=""cfg_next""];\n	""17"" -> ""46""[label=""cfg_next""];\n	""18"" -> ""47""[label=""cfg_next""];\n	""19"" -> ""48""[label=""cfg_next""];\n	""2"" -> ""33""[label=""cfg_next""];\n	""20"" -> ""49""[label=""cfg_next""];\n	""21"" -> ""50""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""36""[label=""cfg_next""];\n	""24"" -> ""51""[label=""cfg_next""];\n	""25"" -> ""52""[label=""cfg_next""];\n	""26"" -> ""31""[label=""cfg_next""];\n	""27"" -> ""38""[label=""cfg_next""];\n	""28"" -> ""30""[label=""cfg_next""];\n	""29"" -> ""28""[label=""cfg_next""];\n	""3"" -> ""26""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_next""];\n	""31"" -> ""54""[label=""cfg_next""];\n	""32"" -> ""5""[label=""cfg_goto""];\n	""33"" -> ""25""[label=""cfg_false""];\n	""33"" -> ""3""[label=""cfg_true""];\n	""34"" -> ""11""[label=""cfg_true""];\n	""34"" -> ""12""[label=""cfg_false""];\n	""35"" -> ""16""[label=""cfg_true""];\n	""35"" -> ""17""[label=""cfg_false""];\n	""36"" -> ""11""[label=""cfg_true""];\n	""36"" -> ""24""[label=""cfg_false""];\n	""37"" -> ""27""[label=""cfg_next""];\n	""38"" -> ""29""[label=""cfg_next""];\n	""4"" -> ""26""[label=""cfg_except""];\n	""4"" -> ""57""[label=""cfg_next""];\n	""5"" -> ""55""[label=""cfg_next""];\n	""54"" -> ""53""[label=""cfg_next""];\n	""55"" -> ""11""[label=""cfg_switch""];\n	""55"" -> ""13""[label=""cfg_switch""];\n	""55"" -> ""14""[label=""cfg_switch""];\n	""55"" -> ""18""[label=""cfg_switch""];\n	""55"" -> ""19""[label=""cfg_switch""];\n	""55"" -> ""20""[label=""cfg_switch""];\n	""55"" -> ""21""[label=""cfg_switch""];\n	""55"" -> ""22""[label=""cfg_switch""];\n	""55"" -> ""6""[label=""cfg_switch""];\n	""55"" -> ""7""[label=""cfg_switch""];\n	""55"" -> ""8""[label=""cfg_switch""];\n	""55"" -> ""9""[label=""cfg_switch""];\n	""56"" -> ""37""[label=""cfg_next""];\n	""57"" -> ""26""[label=""cfg_except""];\n	""57"" -> ""32""[label=""cfg_next""];\n	""6"" -> ""39""[label=""cfg_next""];\n	""7"" -> ""40""[label=""cfg_next""];\n	""8"" -> ""41""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa8_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa8_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(6, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(7, active0, active1);\n        return 8;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa9_0(active0, 0x100000000000L, active1, 0L);\n        case 58:\n            return jjMoveStringLiteralDfa9_0(active0, 0x4000000000L, active1, 0L);\n        case 101:\n            if ((active1 & 0x4L) != 0L) {\n                return jjStartNfaWithStates_0(8, 66, 12);\n            }\n            return jjMoveStringLiteralDfa9_0(active0, 0x40018000000000L, active1, 0x3L);\n        case 103:\n            if ((active0 & 0x8000000000000000L) != 0L) {\n                jjmatchedKind = 63;\n                jjmatchedPos = 8;\n            }\n            return jjMoveStringLiteralDfa9_0(active0, 0x6000660000000000L, active1, 0L);\n        case 104:\n            if ((active0 & 0x800000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(8, 59, 12);\n            }\n            break;\n        case 105:\n            return jjMoveStringLiteralDfa9_0(active0, 0x400000000000000L, active1, 0L);\n        case 109:\n            return jjMoveStringLiteralDfa9_0(active0, 0x20000000000000L, active1, 0L);\n        case 110:\n            return jjMoveStringLiteralDfa9_0(active0, 0x880400000000L, active1, 0L);\n        case 117:\n            return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x4000L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(7, active0, active1);\n}","int jjMoveStringLiteralDfa8_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa8_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 0L, active1, 16384L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 149550761246720L, active1, 0L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 9007199254740992L, active1, 0L)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 288230376151711744L, active1, 0L)""];\n	""10"" [label=""$stack19 = active0 & 576460752303423488L""];\n	""11"" [label=""$stack20 = $stack19 cmp 0L""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(7, active0, active1)""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(8, 59, 12)""];\n	""14"" [label=""$stack23 = active0 & -9223372036854775808L""];\n	""15"" [label=""$stack24 = $stack23 cmp 0L""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 6917641177827115008L, active1, 0L)""];\n	""17"" [label=""$stack26 = active1 & 4L""];\n	""18"" [label=""$stack27 = $stack26 cmp 0L""];\n	""19"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 18016047776923648L, active1, 3L)""];\n	""20"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(8, 66, 12)""];\n	""21"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 274877906944L, active1, 0L)""];\n	""22"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa9_0(long,long,long,long)>(active0, 17592186044416L, active1, 0L)""];\n	""23"" [label=""$stack32 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(6, old0, old1)""];\n	""24"" [label=""$stack33 := @caughtexception""];\n	""25"" [label=""active0 := @parameter1: long""];\n	""26"" [label=""active0 = active0 & old0""];\n	""27"" [label=""active1 := @parameter3: long""];\n	""28"" [label=""active1 = active1 & old1""];\n	""29"" [label=""e = $stack33""];\n	""30"" [label=""goto""];\n	""31"" [label=""if $stack11 != 0""];\n	""32"" [label=""if $stack20 == 0""];\n	""33"" [label=""if $stack24 == 0""];\n	""34"" [label=""if $stack27 == 0""];\n	""35"" [label=""old0 := @parameter0: long""];\n	""36"" [label=""old1 := @parameter2: long""];\n	""37"" [label=""return $stack15""];\n	""38"" [label=""return $stack16""];\n	""39"" [label=""return $stack17""];\n	""40"" [label=""return $stack18""];\n	""41"" [label=""return $stack21""];\n	""42"" [label=""return $stack22""];\n	""43"" [label=""return $stack25""];\n	""44"" [label=""return $stack28""];\n	""45"" [label=""return $stack29""];\n	""46"" [label=""return $stack30""];\n	""47"" [label=""return $stack31""];\n	""48"" [label=""return $stack32""];\n	""49"" [label=""return 8""];\n	""50"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(7, active0, active1)""];\n	""51"" [label=""switch($stack14) \{     case 45:     case 58:     case 101:     case 103:     case 104:     case 105:     case 109:     case 110:     case 117:     default:  \}""];\n	""52"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""53"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""54"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 63""];\n	""55"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 8""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""32""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""42""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""33""[label=""cfg_next""];\n	""16"" -> ""43""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""34""[label=""cfg_next""];\n	""19"" -> ""44""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""45""[label=""cfg_next""];\n	""21"" -> ""46""[label=""cfg_next""];\n	""22"" -> ""47""[label=""cfg_next""];\n	""23"" -> ""48""[label=""cfg_next""];\n	""24"" -> ""29""[label=""cfg_next""];\n	""25"" -> ""36""[label=""cfg_next""];\n	""26"" -> ""28""[label=""cfg_next""];\n	""27"" -> ""26""[label=""cfg_next""];\n	""28"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""50""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""5""[label=""cfg_goto""];\n	""31"" -> ""23""[label=""cfg_false""];\n	""31"" -> ""3""[label=""cfg_true""];\n	""32"" -> ""12""[label=""cfg_true""];\n	""32"" -> ""13""[label=""cfg_false""];\n	""33"" -> ""16""[label=""cfg_true""];\n	""33"" -> ""54""[label=""cfg_false""];\n	""34"" -> ""19""[label=""cfg_true""];\n	""34"" -> ""20""[label=""cfg_false""];\n	""35"" -> ""25""[label=""cfg_next""];\n	""36"" -> ""27""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_except""];\n	""4"" -> ""53""[label=""cfg_next""];\n	""5"" -> ""51""[label=""cfg_next""];\n	""50"" -> ""49""[label=""cfg_next""];\n	""51"" -> ""10""[label=""cfg_switch""];\n	""51"" -> ""12""[label=""cfg_switch""];\n	""51"" -> ""14""[label=""cfg_switch""];\n	""51"" -> ""17""[label=""cfg_switch""];\n	""51"" -> ""21""[label=""cfg_switch""];\n	""51"" -> ""22""[label=""cfg_switch""];\n	""51"" -> ""6""[label=""cfg_switch""];\n	""51"" -> ""7""[label=""cfg_switch""];\n	""51"" -> ""8""[label=""cfg_switch""];\n	""51"" -> ""9""[label=""cfg_switch""];\n	""52"" -> ""35""[label=""cfg_next""];\n	""53"" -> ""24""[label=""cfg_except""];\n	""53"" -> ""30""[label=""cfg_next""];\n	""54"" -> ""55""[label=""cfg_next""];\n	""55"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""37""[label=""cfg_next""];\n	""7"" -> ""38""[label=""cfg_next""];\n	""8"" -> ""39""[label=""cfg_next""];\n	""9"" -> ""40""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa9_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa9_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(7, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(8, active0, active1);\n        return 9;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa10_0(active0, 0x6040600000000000L, active1, 0x2L);\n        case 58:\n            if ((active0 & 0x4000000000L) != 0L) {\n                return jjStopAtPos(9, 38);\n            }\n            return jjMoveStringLiteralDfa10_0(active0, 0x78000000000L, active1, 0L);\n        case 101:\n            if ((active0 & 0x20000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(9, 53, 12);\n            }\n            break;\n        case 103:\n            return jjMoveStringLiteralDfa10_0(active0, 0x400000000L, active1, 0L);\n        case 109:\n            return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x4000L);\n        case 110:\n            return jjMoveStringLiteralDfa10_0(active0, 0L, active1, 0x1L);\n        case 111:\n            return jjMoveStringLiteralDfa10_0(active0, 0x100000000000L, active1, 0L);\n        case 116:\n            return jjMoveStringLiteralDfa10_0(active0, 0x400880000000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(8, active0, active1);\n}","int jjMoveStringLiteralDfa9_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa9_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa10_0(long,long,long,long)>(active0, 288379909733089280L, active1, 0L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa10_0(long,long,long,long)>(active0, 17592186044416L, active1, 0L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa10_0(long,long,long,long)>(active0, 0L, active1, 1L)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa10_0(long,long,long,long)>(active0, 0L, active1, 16384L)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa10_0(long,long,long,long)>(active0, 17179869184L, active1, 0L)""];\n	""11"" [label=""$stack20 = active0 & 9007199254740992L""];\n	""12"" [label=""$stack21 = $stack20 cmp 0L""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(8, active0, active1)""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(9, 53, 12)""];\n	""15"" [label=""$stack24 = active0 & 274877906944L""];\n	""16"" [label=""$stack25 = $stack24 cmp 0L""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa10_0(long,long,long,long)>(active0, 8246337208320L, active1, 0L)""];\n	""18"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(9, 38)""];\n	""19"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa10_0(long,long,long,long)>(active0, 6935648979266830336L, active1, 2L)""];\n	""20"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(7, old0, old1)""];\n	""21"" [label=""$stack30 := @caughtexception""];\n	""22"" [label=""active0 := @parameter1: long""];\n	""23"" [label=""active0 = active0 & old0""];\n	""24"" [label=""active1 := @parameter3: long""];\n	""25"" [label=""active1 = active1 & old1""];\n	""26"" [label=""e = $stack30""];\n	""27"" [label=""goto""];\n	""28"" [label=""if $stack11 != 0""];\n	""29"" [label=""if $stack21 == 0""];\n	""30"" [label=""if $stack25 == 0""];\n	""31"" [label=""old0 := @parameter0: long""];\n	""32"" [label=""old1 := @parameter2: long""];\n	""33"" [label=""return $stack15""];\n	""34"" [label=""return $stack16""];\n	""35"" [label=""return $stack17""];\n	""36"" [label=""return $stack18""];\n	""37"" [label=""return $stack19""];\n	""38"" [label=""return $stack22""];\n	""39"" [label=""return $stack23""];\n	""40"" [label=""return $stack26""];\n	""41"" [label=""return $stack27""];\n	""42"" [label=""return $stack28""];\n	""43"" [label=""return $stack29""];\n	""44"" [label=""return 9""];\n	""45"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(8, active0, active1)""];\n	""46"" [label=""switch($stack14) \{     case 45:     case 58:     case 101:     case 103:     case 109:     case 110:     case 111:     case 116:     default:  \}""];\n	""47"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""48"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""37""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""29""[label=""cfg_next""];\n	""13"" -> ""38""[label=""cfg_next""];\n	""14"" -> ""39""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""30""[label=""cfg_next""];\n	""17"" -> ""40""[label=""cfg_next""];\n	""18"" -> ""41""[label=""cfg_next""];\n	""19"" -> ""42""[label=""cfg_next""];\n	""2"" -> ""28""[label=""cfg_next""];\n	""20"" -> ""43""[label=""cfg_next""];\n	""21"" -> ""26""[label=""cfg_next""];\n	""22"" -> ""32""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_next""];\n	""26"" -> ""45""[label=""cfg_next""];\n	""27"" -> ""5""[label=""cfg_goto""];\n	""28"" -> ""20""[label=""cfg_false""];\n	""28"" -> ""3""[label=""cfg_true""];\n	""29"" -> ""13""[label=""cfg_true""];\n	""29"" -> ""14""[label=""cfg_false""];\n	""3"" -> ""21""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""17""[label=""cfg_true""];\n	""30"" -> ""18""[label=""cfg_false""];\n	""31"" -> ""22""[label=""cfg_next""];\n	""32"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_except""];\n	""4"" -> ""48""[label=""cfg_next""];\n	""45"" -> ""44""[label=""cfg_next""];\n	""46"" -> ""10""[label=""cfg_switch""];\n	""46"" -> ""11""[label=""cfg_switch""];\n	""46"" -> ""13""[label=""cfg_switch""];\n	""46"" -> ""15""[label=""cfg_switch""];\n	""46"" -> ""19""[label=""cfg_switch""];\n	""46"" -> ""6""[label=""cfg_switch""];\n	""46"" -> ""7""[label=""cfg_switch""];\n	""46"" -> ""8""[label=""cfg_switch""];\n	""46"" -> ""9""[label=""cfg_switch""];\n	""47"" -> ""31""[label=""cfg_next""];\n	""48"" -> ""21""[label=""cfg_except""];\n	""48"" -> ""27""[label=""cfg_next""];\n	""5"" -> ""46""[label=""cfg_next""];\n	""6"" -> ""33""[label=""cfg_next""];\n	""7"" -> ""34""[label=""cfg_next""];\n	""8"" -> ""35""[label=""cfg_next""];\n	""9"" -> ""36""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa10_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa10_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(8, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(9, active0, active1);\n        return 10;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa11_0(active0, 0x800400000000L, active1, 0L);\n        case 58:\n            if ((active0 & 0x8000000000L) != 0L) {\n                return jjStopAtPos(10, 39);\n            } else if ((active0 & 0x10000000000L) != 0L) {\n                return jjStopAtPos(10, 40);\n            } else if ((active0 & 0x20000000000L) != 0L) {\n                return jjStopAtPos(10, 41);\n            } else if ((active0 & 0x40000000000L) != 0L) {\n                return jjStopAtPos(10, 42);\n            }\n            return jjMoveStringLiteralDfa11_0(active0, 0x80000000000L, active1, 0L);\n        case 97:\n            return jjMoveStringLiteralDfa11_0(active0, 0x4000000000000000L, active1, 0L);\n        case 98:\n            return jjMoveStringLiteralDfa11_0(active0, 0x2000000000000000L, active1, 0x4000L);\n        case 103:\n            return jjMoveStringLiteralDfa11_0(active0, 0L, active1, 0x1L);\n        case 104:\n            if ((active0 & 0x400000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(10, 58, 12);\n            }\n            break;\n        case 114:\n            return jjMoveStringLiteralDfa11_0(active0, 0x100000000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa11_0(active0, 0x600000000000L, active1, 0x2L);\n        case 117:\n            return jjMoveStringLiteralDfa11_0(active0, 0x40000000000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(9, active0, active1);\n}","int jjMoveStringLiteralDfa10_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa10_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 18014398509481984L, active1, 0L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 105553116266496L, active1, 2L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 17592186044416L, active1, 0L)""];\n	""9"" [label=""$stack18 = active0 & 288230376151711744L""];\n	""10"" [label=""$stack19 = $stack18 cmp 0L""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(9, active0, active1)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(10, 58, 12)""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 0L, active1, 1L)""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 2305843009213693952L, active1, 16384L)""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 4611686018427387904L, active1, 0L)""];\n	""16"" [label=""$stack25 = active0 & 549755813888L""];\n	""17"" [label=""$stack26 = $stack25 cmp 0L""];\n	""18"" [label=""$stack27 = active0 & 1099511627776L""];\n	""19"" [label=""$stack28 = $stack27 cmp 0L""];\n	""20"" [label=""$stack29 = active0 & 2199023255552L""];\n	""21"" [label=""$stack30 = $stack29 cmp 0L""];\n	""22"" [label=""$stack31 = active0 & 4398046511104L""];\n	""23"" [label=""$stack32 = $stack31 cmp 0L""];\n	""24"" [label=""$stack33 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 8796093022208L, active1, 0L)""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(10, 42)""];\n	""26"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(10, 41)""];\n	""27"" [label=""$stack36 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(10, 40)""];\n	""28"" [label=""$stack37 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(10, 39)""];\n	""29"" [label=""$stack38 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa11_0(long,long,long,long)>(active0, 140754668224512L, active1, 0L)""];\n	""30"" [label=""$stack39 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(8, old0, old1)""];\n	""31"" [label=""$stack40 := @caughtexception""];\n	""32"" [label=""active0 := @parameter1: long""];\n	""33"" [label=""active0 = active0 & old0""];\n	""34"" [label=""active1 := @parameter3: long""];\n	""35"" [label=""active1 = active1 & old1""];\n	""36"" [label=""e = $stack40""];\n	""37"" [label=""goto""];\n	""38"" [label=""if $stack11 != 0""];\n	""39"" [label=""if $stack19 == 0""];\n	""40"" [label=""if $stack26 == 0""];\n	""41"" [label=""if $stack28 == 0""];\n	""42"" [label=""if $stack30 == 0""];\n	""43"" [label=""if $stack32 == 0""];\n	""44"" [label=""old0 := @parameter0: long""];\n	""45"" [label=""old1 := @parameter2: long""];\n	""46"" [label=""return $stack15""];\n	""47"" [label=""return $stack16""];\n	""48"" [label=""return $stack17""];\n	""49"" [label=""return $stack20""];\n	""50"" [label=""return $stack21""];\n	""51"" [label=""return $stack22""];\n	""52"" [label=""return $stack23""];\n	""53"" [label=""return $stack24""];\n	""54"" [label=""return $stack33""];\n	""55"" [label=""return $stack34""];\n	""56"" [label=""return $stack35""];\n	""57"" [label=""return $stack36""];\n	""58"" [label=""return $stack37""];\n	""59"" [label=""return $stack38""];\n	""60"" [label=""return $stack39""];\n	""61"" [label=""return 10""];\n	""62"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(9, active0, active1)""];\n	""63"" [label=""switch($stack14) \{     case 45:     case 58:     case 97:     case 98:     case 103:     case 104:     case 114:     case 115:     case 117:     default:  \}""];\n	""64"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""65"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""39""[label=""cfg_next""];\n	""11"" -> ""49""[label=""cfg_next""];\n	""12"" -> ""50""[label=""cfg_next""];\n	""13"" -> ""51""[label=""cfg_next""];\n	""14"" -> ""52""[label=""cfg_next""];\n	""15"" -> ""53""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""40""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""41""[label=""cfg_next""];\n	""2"" -> ""38""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""42""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""43""[label=""cfg_next""];\n	""24"" -> ""54""[label=""cfg_next""];\n	""25"" -> ""55""[label=""cfg_next""];\n	""26"" -> ""56""[label=""cfg_next""];\n	""27"" -> ""57""[label=""cfg_next""];\n	""28"" -> ""58""[label=""cfg_next""];\n	""29"" -> ""59""[label=""cfg_next""];\n	""3"" -> ""31""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""60""[label=""cfg_next""];\n	""31"" -> ""36""[label=""cfg_next""];\n	""32"" -> ""45""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""1""[label=""cfg_next""];\n	""36"" -> ""62""[label=""cfg_next""];\n	""37"" -> ""5""[label=""cfg_goto""];\n	""38"" -> ""3""[label=""cfg_true""];\n	""38"" -> ""30""[label=""cfg_false""];\n	""39"" -> ""11""[label=""cfg_true""];\n	""39"" -> ""12""[label=""cfg_false""];\n	""4"" -> ""31""[label=""cfg_except""];\n	""4"" -> ""65""[label=""cfg_next""];\n	""40"" -> ""18""[label=""cfg_true""];\n	""40"" -> ""28""[label=""cfg_false""];\n	""41"" -> ""20""[label=""cfg_true""];\n	""41"" -> ""27""[label=""cfg_false""];\n	""42"" -> ""22""[label=""cfg_true""];\n	""42"" -> ""26""[label=""cfg_false""];\n	""43"" -> ""24""[label=""cfg_true""];\n	""43"" -> ""25""[label=""cfg_false""];\n	""44"" -> ""32""[label=""cfg_next""];\n	""45"" -> ""34""[label=""cfg_next""];\n	""5"" -> ""63""[label=""cfg_next""];\n	""6"" -> ""46""[label=""cfg_next""];\n	""62"" -> ""61""[label=""cfg_next""];\n	""63"" -> ""11""[label=""cfg_switch""];\n	""63"" -> ""13""[label=""cfg_switch""];\n	""63"" -> ""14""[label=""cfg_switch""];\n	""63"" -> ""15""[label=""cfg_switch""];\n	""63"" -> ""16""[label=""cfg_switch""];\n	""63"" -> ""29""[label=""cfg_switch""];\n	""63"" -> ""6""[label=""cfg_switch""];\n	""63"" -> ""7""[label=""cfg_switch""];\n	""63"" -> ""8""[label=""cfg_switch""];\n	""63"" -> ""9""[label=""cfg_switch""];\n	""64"" -> ""44""[label=""cfg_next""];\n	""65"" -> ""31""[label=""cfg_except""];\n	""65"" -> ""37""[label=""cfg_next""];\n	""7"" -> ""47""[label=""cfg_next""];\n	""8"" -> ""48""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa11_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa11_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(9, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(10, active0, active1);\n        return 11;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa12_0(active0, 0x100000000000L, active1, 0L);\n        case 58:\n            if ((active0 & 0x80000000000L) != 0L) {\n                return jjStopAtPos(11, 43);\n            }\n            break;\n        case 101:\n            return jjMoveStringLiteralDfa12_0(active0, 0x2000000000000000L, active1, 0x4000L);\n        case 102:\n            return jjMoveStringLiteralDfa12_0(active0, 0x4000000000000000L, active1, 0L);\n        case 105:\n            return jjMoveStringLiteralDfa12_0(active0, 0x600400000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa12_0(active0, 0x800000000000L, active1, 0L);\n        case 112:\n            return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x2L);\n        case 114:\n            return jjMoveStringLiteralDfa12_0(active0, 0x40000000000000L, active1, 0L);\n        case 116:\n            return jjMoveStringLiteralDfa12_0(active0, 0L, active1, 0x1L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(10, active0, active1);\n}","int jjMoveStringLiteralDfa11_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa11_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 0L, active1, 1L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 18014398509481984L, active1, 0L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 0L, active1, 2L)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 140737488355328L, active1, 0L)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 105570296135680L, active1, 0L)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 4611686018427387904L, active1, 0L)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 2305843009213693952L, active1, 16384L)""];\n	""13"" [label=""$stack22 = active0 & 8796093022208L""];\n	""14"" [label=""$stack23 = $stack22 cmp 0L""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(10, active0, active1)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(11, 43)""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa12_0(long,long,long,long)>(active0, 17592186044416L, active1, 0L)""];\n	""18"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(9, old0, old1)""];\n	""19"" [label=""$stack28 := @caughtexception""];\n	""20"" [label=""active0 := @parameter1: long""];\n	""21"" [label=""active0 = active0 & old0""];\n	""22"" [label=""active1 := @parameter3: long""];\n	""23"" [label=""active1 = active1 & old1""];\n	""24"" [label=""e = $stack28""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack11 != 0""];\n	""27"" [label=""if $stack23 == 0""];\n	""28"" [label=""old0 := @parameter0: long""];\n	""29"" [label=""old1 := @parameter2: long""];\n	""30"" [label=""return $stack15""];\n	""31"" [label=""return $stack16""];\n	""32"" [label=""return $stack17""];\n	""33"" [label=""return $stack18""];\n	""34"" [label=""return $stack19""];\n	""35"" [label=""return $stack20""];\n	""36"" [label=""return $stack21""];\n	""37"" [label=""return $stack24""];\n	""38"" [label=""return $stack25""];\n	""39"" [label=""return $stack26""];\n	""40"" [label=""return $stack27""];\n	""41"" [label=""return 11""];\n	""42"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(10, active0, active1)""];\n	""43"" [label=""switch($stack14) \{     case 45:     case 58:     case 101:     case 102:     case 105:     case 111:     case 112:     case 114:     case 116:     default:  \}""];\n	""44"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""34""[label=""cfg_next""];\n	""11"" -> ""35""[label=""cfg_next""];\n	""12"" -> ""36""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""37""[label=""cfg_next""];\n	""16"" -> ""38""[label=""cfg_next""];\n	""17"" -> ""39""[label=""cfg_next""];\n	""18"" -> ""40""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""29""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""42""[label=""cfg_next""];\n	""25"" -> ""5""[label=""cfg_goto""];\n	""26"" -> ""18""[label=""cfg_false""];\n	""26"" -> ""3""[label=""cfg_true""];\n	""27"" -> ""15""[label=""cfg_true""];\n	""27"" -> ""16""[label=""cfg_false""];\n	""28"" -> ""20""[label=""cfg_next""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_except""];\n	""4"" -> ""45""[label=""cfg_next""];\n	""42"" -> ""41""[label=""cfg_next""];\n	""43"" -> ""10""[label=""cfg_switch""];\n	""43"" -> ""11""[label=""cfg_switch""];\n	""43"" -> ""12""[label=""cfg_switch""];\n	""43"" -> ""13""[label=""cfg_switch""];\n	""43"" -> ""15""[label=""cfg_switch""];\n	""43"" -> ""17""[label=""cfg_switch""];\n	""43"" -> ""6""[label=""cfg_switch""];\n	""43"" -> ""7""[label=""cfg_switch""];\n	""43"" -> ""8""[label=""cfg_switch""];\n	""43"" -> ""9""[label=""cfg_switch""];\n	""44"" -> ""28""[label=""cfg_next""];\n	""45"" -> ""19""[label=""cfg_except""];\n	""45"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""43""[label=""cfg_next""];\n	""6"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""31""[label=""cfg_next""];\n	""8"" -> ""32""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa12_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa12_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(10, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(11, active0, active1);\n        return 12;\n    }\n    switch(curChar) {\n        case 97:\n            return jjMoveStringLiteralDfa13_0(active0, 0L, active1, 0x2L);\n        case 98:\n            return jjMoveStringLiteralDfa13_0(active0, 0x600000000000L, active1, 0L);\n        case 102:\n            return jjMoveStringLiteralDfa13_0(active0, 0x2000000000000000L, active1, 0L);\n        case 104:\n            if ((active1 & 0x1L) != 0L) {\n                return jjStartNfaWithStates_0(12, 64, 12);\n            }\n            break;\n        case 105:\n            if ((active0 & 0x40000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(12, 54, 12);\n            }\n            break;\n        case 110:\n            return jjMoveStringLiteralDfa13_0(active0, 0x400000000L, active1, 0L);\n        case 114:\n            if ((active1 & 0x4000L) != 0L) {\n                return jjStartNfaWithStates_0(12, 78, 12);\n            }\n            return jjMoveStringLiteralDfa13_0(active0, 0x800000000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa13_0(active0, 0x100000000000L, active1, 0L);\n        case 116:\n            return jjMoveStringLiteralDfa13_0(active0, 0x4000000000000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(11, active0, active1);\n}","int jjMoveStringLiteralDfa12_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa12_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa13_0(long,long,long,long)>(active0, 4611686018427387904L, active1, 0L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa13_0(long,long,long,long)>(active0, 17592186044416L, active1, 0L)""];\n	""8"" [label=""$stack17 = active1 & 16384L""];\n	""9"" [label=""$stack18 = $stack17 cmp 0L""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa13_0(long,long,long,long)>(active0, 140737488355328L, active1, 0L)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(12, 78, 12)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa13_0(long,long,long,long)>(active0, 17179869184L, active1, 0L)""];\n	""13"" [label=""$stack22 = active0 & 18014398509481984L""];\n	""14"" [label=""$stack23 = $stack22 cmp 0L""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(11, active0, active1)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(12, 54, 12)""];\n	""17"" [label=""$stack26 = active1 & 1L""];\n	""18"" [label=""$stack27 = $stack26 cmp 0L""];\n	""19"" [label=""$stack28 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(12, 64, 12)""];\n	""20"" [label=""$stack29 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa13_0(long,long,long,long)>(active0, 2305843009213693952L, active1, 0L)""];\n	""21"" [label=""$stack30 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa13_0(long,long,long,long)>(active0, 105553116266496L, active1, 0L)""];\n	""22"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa13_0(long,long,long,long)>(active0, 0L, active1, 2L)""];\n	""23"" [label=""$stack32 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(10, old0, old1)""];\n	""24"" [label=""$stack33 := @caughtexception""];\n	""25"" [label=""active0 := @parameter1: long""];\n	""26"" [label=""active0 = active0 & old0""];\n	""27"" [label=""active1 := @parameter3: long""];\n	""28"" [label=""active1 = active1 & old1""];\n	""29"" [label=""e = $stack33""];\n	""30"" [label=""goto""];\n	""31"" [label=""if $stack11 != 0""];\n	""32"" [label=""if $stack18 == 0""];\n	""33"" [label=""if $stack23 == 0""];\n	""34"" [label=""if $stack27 == 0""];\n	""35"" [label=""old0 := @parameter0: long""];\n	""36"" [label=""old1 := @parameter2: long""];\n	""37"" [label=""return $stack15""];\n	""38"" [label=""return $stack16""];\n	""39"" [label=""return $stack19""];\n	""40"" [label=""return $stack20""];\n	""41"" [label=""return $stack21""];\n	""42"" [label=""return $stack24""];\n	""43"" [label=""return $stack25""];\n	""44"" [label=""return $stack28""];\n	""45"" [label=""return $stack29""];\n	""46"" [label=""return $stack30""];\n	""47"" [label=""return $stack31""];\n	""48"" [label=""return $stack32""];\n	""49"" [label=""return 12""];\n	""50"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(11, active0, active1)""];\n	""51"" [label=""switch($stack14) \{     case 97:     case 98:     case 99:     case 100:     case 101:     case 102:     case 103:     case 104:     case 105:     case 106:     case 107:     case 108:     case 109:     case 110:     case 111:     case 112:     case 113:     case 114:     case 115:     case 116:     default:  \}""];\n	""52"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""53"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""39""[label=""cfg_next""];\n	""11"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""33""[label=""cfg_next""];\n	""15"" -> ""42""[label=""cfg_next""];\n	""16"" -> ""43""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""34""[label=""cfg_next""];\n	""19"" -> ""44""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""45""[label=""cfg_next""];\n	""21"" -> ""46""[label=""cfg_next""];\n	""22"" -> ""47""[label=""cfg_next""];\n	""23"" -> ""48""[label=""cfg_next""];\n	""24"" -> ""29""[label=""cfg_next""];\n	""25"" -> ""36""[label=""cfg_next""];\n	""26"" -> ""28""[label=""cfg_next""];\n	""27"" -> ""26""[label=""cfg_next""];\n	""28"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""50""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""5""[label=""cfg_goto""];\n	""31"" -> ""23""[label=""cfg_false""];\n	""31"" -> ""3""[label=""cfg_true""];\n	""32"" -> ""10""[label=""cfg_true""];\n	""32"" -> ""11""[label=""cfg_false""];\n	""33"" -> ""15""[label=""cfg_true""];\n	""33"" -> ""16""[label=""cfg_false""];\n	""34"" -> ""15""[label=""cfg_true""];\n	""34"" -> ""19""[label=""cfg_false""];\n	""35"" -> ""25""[label=""cfg_next""];\n	""36"" -> ""27""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_except""];\n	""4"" -> ""53""[label=""cfg_next""];\n	""5"" -> ""51""[label=""cfg_next""];\n	""50"" -> ""49""[label=""cfg_next""];\n	""51"" -> ""12""[label=""cfg_switch""];\n	""51"" -> ""13""[label=""cfg_switch""];\n	""51"" -> ""15""[label=""cfg_switch""];\n	""51"" -> ""17""[label=""cfg_switch""];\n	""51"" -> ""20""[label=""cfg_switch""];\n	""51"" -> ""21""[label=""cfg_switch""];\n	""51"" -> ""22""[label=""cfg_switch""];\n	""51"" -> ""6""[label=""cfg_switch""];\n	""51"" -> ""7""[label=""cfg_switch""];\n	""51"" -> ""8""[label=""cfg_switch""];\n	""52"" -> ""35""[label=""cfg_next""];\n	""53"" -> ""24""[label=""cfg_except""];\n	""53"" -> ""30""[label=""cfg_next""];\n	""6"" -> ""37""[label=""cfg_next""];\n	""7"" -> ""38""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa13_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa13_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(11, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(12, active0, active1);\n        return 13;\n    }\n    switch(curChar) {\n        case 45:\n            return jjMoveStringLiteralDfa14_0(active0, 0x800000000000L, active1, 0L);\n        case 99:\n            return jjMoveStringLiteralDfa14_0(active0, 0L, active1, 0x2L);\n        case 101:\n            return jjMoveStringLiteralDfa14_0(active0, 0x4000100000000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa14_0(active0, 0x600000000000L, active1, 0L);\n        case 111:\n            return jjMoveStringLiteralDfa14_0(active0, 0x2000000000000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa14_0(active0, 0x400000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(12, active0, active1);\n}","int jjMoveStringLiteralDfa13_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa13_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa14_0(long,long,long,long)>(active0, 17179869184L, active1, 0L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa14_0(long,long,long,long)>(active0, 2305843009213693952L, active1, 0L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa14_0(long,long,long,long)>(active0, 105553116266496L, active1, 0L)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa14_0(long,long,long,long)>(active0, 4611703610613432320L, active1, 0L)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa14_0(long,long,long,long)>(active0, 0L, active1, 2L)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa14_0(long,long,long,long)>(active0, 140737488355328L, active1, 0L)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(12, active0, active1)""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(11, old0, old1)""];\n	""14"" [label=""$stack23 := @caughtexception""];\n	""15"" [label=""active0 := @parameter1: long""];\n	""16"" [label=""active0 = active0 & old0""];\n	""17"" [label=""active1 := @parameter3: long""];\n	""18"" [label=""active1 = active1 & old1""];\n	""19"" [label=""e = $stack23""];\n	""20"" [label=""goto""];\n	""21"" [label=""if $stack11 != 0""];\n	""22"" [label=""old0 := @parameter0: long""];\n	""23"" [label=""old1 := @parameter2: long""];\n	""24"" [label=""return $stack15""];\n	""25"" [label=""return $stack16""];\n	""26"" [label=""return $stack17""];\n	""27"" [label=""return $stack18""];\n	""28"" [label=""return $stack19""];\n	""29"" [label=""return $stack20""];\n	""30"" [label=""return $stack21""];\n	""31"" [label=""return $stack22""];\n	""32"" [label=""return 13""];\n	""33"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(12, active0, active1)""];\n	""34"" [label=""switch($stack14) \{     case 45:     case 99:     case 101:     case 108:     case 111:     case 115:     default:  \}""];\n	""35"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""36"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""29""[label=""cfg_next""];\n	""12"" -> ""30""[label=""cfg_next""];\n	""13"" -> ""31""[label=""cfg_next""];\n	""14"" -> ""19""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""33""[label=""cfg_next""];\n	""2"" -> ""21""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_goto""];\n	""21"" -> ""13""[label=""cfg_false""];\n	""21"" -> ""3""[label=""cfg_true""];\n	""22"" -> ""15""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""33"" -> ""32""[label=""cfg_next""];\n	""34"" -> ""10""[label=""cfg_switch""];\n	""34"" -> ""11""[label=""cfg_switch""];\n	""34"" -> ""12""[label=""cfg_switch""];\n	""34"" -> ""6""[label=""cfg_switch""];\n	""34"" -> ""7""[label=""cfg_switch""];\n	""34"" -> ""8""[label=""cfg_switch""];\n	""34"" -> ""9""[label=""cfg_switch""];\n	""35"" -> ""22""[label=""cfg_next""];\n	""36"" -> ""14""[label=""cfg_except""];\n	""36"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_except""];\n	""4"" -> ""36""[label=""cfg_next""];\n	""5"" -> ""34""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""25""[label=""cfg_next""];\n	""8"" -> ""26""[label=""cfg_next""];\n	""9"" -> ""27""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa14_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa14_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(12, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(13, active0, active1);\n        return 14;\n    }\n    switch(curChar) {\n        case 101:\n            if ((active1 & 0x2L) != 0L) {\n                return jjStartNfaWithStates_0(14, 65, 12);\n            }\n            break;\n        case 105:\n            return jjMoveStringLiteralDfa15_0(active0, 0x600000000000L, active1, 0L);\n        case 108:\n            return jjMoveStringLiteralDfa15_0(active0, 0x100000000000L, active1, 0L);\n        case 114:\n            if ((active0 & 0x4000000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(14, 62, 12);\n            }\n            return jjMoveStringLiteralDfa15_0(active0, 0x2000000000000000L, active1, 0L);\n        case 115:\n            return jjMoveStringLiteralDfa15_0(active0, 0x800000000000L, active1, 0L);\n        case 116:\n            return jjMoveStringLiteralDfa15_0(active0, 0x400000000L, active1, 0L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(13, active0, active1);\n}","int jjMoveStringLiteralDfa14_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa14_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa15_0(long,long,long,long)>(active0, 17179869184L, active1, 0L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa15_0(long,long,long,long)>(active0, 140737488355328L, active1, 0L)""];\n	""8"" [label=""$stack17 = active0 & 4611686018427387904L""];\n	""9"" [label=""$stack18 = $stack17 cmp 0L""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa15_0(long,long,long,long)>(active0, 2305843009213693952L, active1, 0L)""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(14, 62, 12)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa15_0(long,long,long,long)>(active0, 17592186044416L, active1, 0L)""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa15_0(long,long,long,long)>(active0, 105553116266496L, active1, 0L)""];\n	""14"" [label=""$stack23 = active1 & 2L""];\n	""15"" [label=""$stack24 = $stack23 cmp 0L""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(13, active0, active1)""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(14, 65, 12)""];\n	""18"" [label=""$stack27 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(12, old0, old1)""];\n	""19"" [label=""$stack28 := @caughtexception""];\n	""20"" [label=""active0 := @parameter1: long""];\n	""21"" [label=""active0 = active0 & old0""];\n	""22"" [label=""active1 := @parameter3: long""];\n	""23"" [label=""active1 = active1 & old1""];\n	""24"" [label=""e = $stack28""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack11 != 0""];\n	""27"" [label=""if $stack18 == 0""];\n	""28"" [label=""if $stack24 == 0""];\n	""29"" [label=""old0 := @parameter0: long""];\n	""30"" [label=""old1 := @parameter2: long""];\n	""31"" [label=""return $stack15""];\n	""32"" [label=""return $stack16""];\n	""33"" [label=""return $stack19""];\n	""34"" [label=""return $stack20""];\n	""35"" [label=""return $stack21""];\n	""36"" [label=""return $stack22""];\n	""37"" [label=""return $stack25""];\n	""38"" [label=""return $stack26""];\n	""39"" [label=""return $stack27""];\n	""40"" [label=""return 14""];\n	""41"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(13, active0, active1)""];\n	""42"" [label=""switch($stack14) \{     case 101:     case 102:     case 103:     case 104:     case 105:     case 106:     case 107:     case 108:     case 109:     case 110:     case 111:     case 112:     case 113:     case 114:     case 115:     case 116:     default:  \}""];\n	""43"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""33""[label=""cfg_next""];\n	""11"" -> ""34""[label=""cfg_next""];\n	""12"" -> ""35""[label=""cfg_next""];\n	""13"" -> ""36""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""28""[label=""cfg_next""];\n	""16"" -> ""37""[label=""cfg_next""];\n	""17"" -> ""38""[label=""cfg_next""];\n	""18"" -> ""39""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""41""[label=""cfg_next""];\n	""25"" -> ""5""[label=""cfg_goto""];\n	""26"" -> ""18""[label=""cfg_false""];\n	""26"" -> ""3""[label=""cfg_true""];\n	""27"" -> ""10""[label=""cfg_true""];\n	""27"" -> ""11""[label=""cfg_false""];\n	""28"" -> ""16""[label=""cfg_true""];\n	""28"" -> ""17""[label=""cfg_false""];\n	""29"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_except""];\n	""4"" -> ""44""[label=""cfg_next""];\n	""41"" -> ""40""[label=""cfg_next""];\n	""42"" -> ""12""[label=""cfg_switch""];\n	""42"" -> ""13""[label=""cfg_switch""];\n	""42"" -> ""14""[label=""cfg_switch""];\n	""42"" -> ""16""[label=""cfg_switch""];\n	""42"" -> ""6""[label=""cfg_switch""];\n	""42"" -> ""7""[label=""cfg_switch""];\n	""42"" -> ""8""[label=""cfg_switch""];\n	""43"" -> ""29""[label=""cfg_next""];\n	""44"" -> ""19""[label=""cfg_except""];\n	""44"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""42""[label=""cfg_next""];\n	""6"" -> ""31""[label=""cfg_next""];\n	""7"" -> ""32""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""27""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa15_0(long,long,long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa15_0(final long old0, long active0, final long old1, long active1) {\n    if (((active0 &= old0) | (active1 &= old1)) == 0L) {\n        return jjStartNfa_0(13, old0, old1);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(14, active0, 0L);\n        return 15;\n    }\n    switch(curChar) {\n        case 101:\n            if ((active0 & 0x2000000000000000L) != 0L) {\n                return jjStartNfaWithStates_0(15, 61, 12);\n            }\n            return jjMoveStringLiteralDfa16_0(active0, 0x800000000000L);\n        case 102:\n            return jjMoveStringLiteralDfa16_0(active0, 0x100000000000L);\n        case 110:\n            return jjMoveStringLiteralDfa16_0(active0, 0x600000000000L);\n        case 114:\n            return jjMoveStringLiteralDfa16_0(active0, 0x400000000L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(14, active0, 0L);\n}","int jjMoveStringLiteralDfa15_0(long,long,long,long)","digraph cfg_jjMoveStringLiteralDfa15_0 {\n	""1"" [label=""$stack10 = active0 | active1""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa16_0(long,long)>(active0, 17179869184L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa16_0(long,long)>(active0, 105553116266496L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa16_0(long,long)>(active0, 17592186044416L)""];\n	""9"" [label=""$stack18 = active0 & 2305843009213693952L""];\n	""10"" [label=""$stack19 = $stack18 cmp 0L""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa16_0(long,long)>(active0, 140737488355328L)""];\n	""12"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(15, 61, 12)""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(14, active0, 0L)""];\n	""14"" [label=""$stack23 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(13, old0, old1)""];\n	""15"" [label=""$stack24 := @caughtexception""];\n	""16"" [label=""active0 := @parameter1: long""];\n	""17"" [label=""active0 = active0 & old0""];\n	""18"" [label=""active1 := @parameter3: long""];\n	""19"" [label=""active1 = active1 & old1""];\n	""20"" [label=""e = $stack24""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack11 != 0""];\n	""23"" [label=""if $stack19 == 0""];\n	""24"" [label=""old0 := @parameter0: long""];\n	""25"" [label=""old1 := @parameter2: long""];\n	""26"" [label=""return $stack15""];\n	""27"" [label=""return $stack16""];\n	""28"" [label=""return $stack17""];\n	""29"" [label=""return $stack20""];\n	""30"" [label=""return $stack21""];\n	""31"" [label=""return $stack22""];\n	""32"" [label=""return $stack23""];\n	""33"" [label=""return 15""];\n	""34"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(14, active0, 0L)""];\n	""35"" [label=""switch($stack14) \{     case 101:     case 102:     case 110:     case 114:     default:  \}""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""37"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack13""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""29""[label=""cfg_next""];\n	""12"" -> ""30""[label=""cfg_next""];\n	""13"" -> ""31""[label=""cfg_next""];\n	""14"" -> ""32""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""34""[label=""cfg_next""];\n	""21"" -> ""5""[label=""cfg_goto""];\n	""22"" -> ""14""[label=""cfg_false""];\n	""22"" -> ""3""[label=""cfg_true""];\n	""23"" -> ""11""[label=""cfg_true""];\n	""23"" -> ""12""[label=""cfg_false""];\n	""24"" -> ""16""[label=""cfg_next""];\n	""25"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""13""[label=""cfg_switch""];\n	""35"" -> ""6""[label=""cfg_switch""];\n	""35"" -> ""7""[label=""cfg_switch""];\n	""35"" -> ""8""[label=""cfg_switch""];\n	""35"" -> ""9""[label=""cfg_switch""];\n	""36"" -> ""24""[label=""cfg_next""];\n	""37"" -> ""15""[label=""cfg_except""];\n	""37"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_except""];\n	""4"" -> ""37""[label=""cfg_next""];\n	""5"" -> ""35""[label=""cfg_next""];\n	""6"" -> ""26""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa16_0(long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa16_0(final long old0, long active0) {\n    if ((active0 &= old0) == 0L) {\n        return jjStartNfa_0(14, old0, 0L);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(15, active0, 0L);\n        return 16;\n    }\n    switch(curChar) {\n        case 58:\n            return jjMoveStringLiteralDfa17_0(active0, 0x100000000000L);\n        case 103:\n            return jjMoveStringLiteralDfa17_0(active0, 0x600000000000L);\n        case 108:\n            return jjMoveStringLiteralDfa17_0(active0, 0x800000000000L);\n        case 117:\n            return jjMoveStringLiteralDfa17_0(active0, 0x400000000L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(15, active0, 0L);\n}","int jjMoveStringLiteralDfa16_0(long,long)","digraph cfg_jjMoveStringLiteralDfa16_0 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa17_0(long,long)>(active0, 17179869184L)""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa17_0(long,long)>(active0, 140737488355328L)""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa17_0(long,long)>(active0, 105553116266496L)""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa17_0(long,long)>(active0, 17592186044416L)""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(15, active0, 0L)""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(14, old0, 0L)""];\n	""7"" [label=""$stack16 := @caughtexception""];\n	""8"" [label=""$stack6 = active0 cmp 0L""];\n	""9"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""10"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""11"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""12"" [label=""active0 := @parameter1: long""];\n	""13"" [label=""active0 = active0 & old0""];\n	""14"" [label=""e = $stack16""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack6 != 0""];\n	""17"" [label=""old0 := @parameter0: long""];\n	""18"" [label=""return $stack10""];\n	""19"" [label=""return $stack11""];\n	""20"" [label=""return $stack12""];\n	""21"" [label=""return $stack13""];\n	""22"" [label=""return $stack14""];\n	""23"" [label=""return $stack15""];\n	""24"" [label=""return 16""];\n	""25"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(15, active0, 0L)""];\n	""26"" [label=""switch($stack9) \{     case 58:     case 103:     case 108:     case 117:     default:  \}""];\n	""27"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack8""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_except""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_goto""];\n	""16"" -> ""6""[label=""cfg_false""];\n	""16"" -> ""9""[label=""cfg_true""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""25"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""1""[label=""cfg_switch""];\n	""26"" -> ""2""[label=""cfg_switch""];\n	""26"" -> ""3""[label=""cfg_switch""];\n	""26"" -> ""4""[label=""cfg_switch""];\n	""26"" -> ""5""[label=""cfg_switch""];\n	""27"" -> ""17""[label=""cfg_next""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""28"" -> ""7""[label=""cfg_except""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_except""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa17_0(long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa17_0(final long old0, long active0) {\n    if ((active0 &= old0) == 0L) {\n        return jjStartNfa_0(15, old0, 0L);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(16, active0, 0L);\n        return 17;\n    }\n    switch(curChar) {\n        case 58:\n            if ((active0 & 0x100000000000L) != 0L) {\n                return jjStopAtPos(17, 44);\n            }\n            return jjMoveStringLiteralDfa18_0(active0, 0x600000000000L);\n        case 99:\n            return jjMoveStringLiteralDfa18_0(active0, 0x400000000L);\n        case 102:\n            return jjMoveStringLiteralDfa18_0(active0, 0x800000000000L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(16, active0, 0L);\n}","int jjMoveStringLiteralDfa17_0(long,long)","digraph cfg_jjMoveStringLiteralDfa17_0 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa18_0(long,long)>(active0, 140737488355328L)""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa18_0(long,long)>(active0, 17179869184L)""];\n	""3"" [label=""$stack12 = active0 & 17592186044416L""];\n	""4"" [label=""$stack13 = $stack12 cmp 0L""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa18_0(long,long)>(active0, 105553116266496L)""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(17, 44)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(16, active0, 0L)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(15, old0, 0L)""];\n	""9"" [label=""$stack18 := @caughtexception""];\n	""10"" [label=""$stack6 = active0 cmp 0L""];\n	""11"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""12"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""13"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""14"" [label=""active0 := @parameter1: long""];\n	""15"" [label=""active0 = active0 & old0""];\n	""16"" [label=""e = $stack18""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack13 == 0""];\n	""19"" [label=""if $stack6 != 0""];\n	""20"" [label=""old0 := @parameter0: long""];\n	""21"" [label=""return $stack10""];\n	""22"" [label=""return $stack11""];\n	""23"" [label=""return $stack14""];\n	""24"" [label=""return $stack15""];\n	""25"" [label=""return $stack16""];\n	""26"" [label=""return $stack17""];\n	""27"" [label=""return 17""];\n	""28"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(16, active0, 0L)""];\n	""29"" [label=""switch($stack9) \{     case 58:     case 99:     case 102:     default:  \}""];\n	""30"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack8""];\n	""1"" -> ""21""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_except""];\n	""12"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_except""];\n	""13"" -> ""29""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_goto""];\n	""18"" -> ""5""[label=""cfg_true""];\n	""18"" -> ""6""[label=""cfg_false""];\n	""19"" -> ""11""[label=""cfg_true""];\n	""19"" -> ""8""[label=""cfg_false""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""14""[label=""cfg_next""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""29"" -> ""1""[label=""cfg_switch""];\n	""29"" -> ""2""[label=""cfg_switch""];\n	""29"" -> ""3""[label=""cfg_switch""];\n	""29"" -> ""7""[label=""cfg_switch""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""20""[label=""cfg_next""];\n	""31"" -> ""17""[label=""cfg_next""];\n	""31"" -> ""9""[label=""cfg_except""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""25""[label=""cfg_next""];\n	""8"" -> ""26""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa18_0(long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa18_0(final long old0, long active0) {\n    if ((active0 &= old0) == 0L) {\n        return jjStartNfa_0(16, old0, 0L);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(17, active0, 0L);\n        return 18;\n    }\n    switch(curChar) {\n        case 58:\n            if ((active0 & 0x200000000000L) != 0L) {\n                return jjStopAtPos(18, 45);\n            } else if ((active0 & 0x400000000000L) != 0L) {\n                return jjStopAtPos(18, 46);\n            }\n            return jjMoveStringLiteralDfa19_0(active0, 0x800000000000L);\n        case 116:\n            return jjMoveStringLiteralDfa19_0(active0, 0x400000000L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(17, active0, 0L);\n}","int jjMoveStringLiteralDfa18_0(long,long)","digraph cfg_jjMoveStringLiteralDfa18_0 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa19_0(long,long)>(active0, 17179869184L)""];\n	""2"" [label=""$stack11 = active0 & 35184372088832L""];\n	""3"" [label=""$stack12 = $stack11 cmp 0L""];\n	""4"" [label=""$stack13 = active0 & 70368744177664L""];\n	""5"" [label=""$stack14 = $stack13 cmp 0L""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa19_0(long,long)>(active0, 140737488355328L)""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(18, 46)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(18, 45)""];\n	""9"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(17, active0, 0L)""];\n	""10"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(16, old0, 0L)""];\n	""11"" [label=""$stack20 := @caughtexception""];\n	""12"" [label=""$stack6 = active0 cmp 0L""];\n	""13"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""14"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""15"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""16"" [label=""active0 := @parameter1: long""];\n	""17"" [label=""active0 = active0 & old0""];\n	""18"" [label=""e = $stack20""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack12 == 0""];\n	""21"" [label=""if $stack14 == 0""];\n	""22"" [label=""if $stack6 != 0""];\n	""23"" [label=""old0 := @parameter0: long""];\n	""24"" [label=""return $stack10""];\n	""25"" [label=""return $stack15""];\n	""26"" [label=""return $stack16""];\n	""27"" [label=""return $stack17""];\n	""28"" [label=""return $stack18""];\n	""29"" [label=""return $stack19""];\n	""30"" [label=""return 18""];\n	""31"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(17, active0, 0L)""];\n	""32"" [label=""switch($stack9) \{     case 58:     case 116:     default:  \}""];\n	""33"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""34"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack8""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_except""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_except""];\n	""14"" -> ""34""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""31""[label=""cfg_next""];\n	""19"" -> ""15""[label=""cfg_goto""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""4""[label=""cfg_true""];\n	""20"" -> ""8""[label=""cfg_false""];\n	""21"" -> ""6""[label=""cfg_true""];\n	""21"" -> ""7""[label=""cfg_false""];\n	""22"" -> ""10""[label=""cfg_false""];\n	""22"" -> ""13""[label=""cfg_true""];\n	""23"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""32"" -> ""1""[label=""cfg_switch""];\n	""32"" -> ""2""[label=""cfg_switch""];\n	""32"" -> ""9""[label=""cfg_switch""];\n	""33"" -> ""23""[label=""cfg_next""];\n	""34"" -> ""11""[label=""cfg_except""];\n	""34"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""26""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""28""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa19_0(long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa19_0(final long old0, long active0) {\n    if ((active0 &= old0) == 0L) {\n        return jjStartNfa_0(17, old0, 0L);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(18, active0, 0L);\n        return 19;\n    }\n    switch(curChar) {\n        case 58:\n            if ((active0 & 0x800000000000L) != 0L) {\n                return jjStopAtPos(19, 47);\n            }\n            break;\n        case 105:\n            return jjMoveStringLiteralDfa20_0(active0, 0x400000000L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(18, active0, 0L);\n}","int jjMoveStringLiteralDfa19_0(long,long)","digraph cfg_jjMoveStringLiteralDfa19_0 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa20_0(long,long)>(active0, 17179869184L)""];\n	""2"" [label=""$stack11 = active0 & 140737488355328L""];\n	""3"" [label=""$stack12 = $stack11 cmp 0L""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(18, active0, 0L)""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopAtPos(int,int)>(19, 47)""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(17, old0, 0L)""];\n	""7"" [label=""$stack16 := @caughtexception""];\n	""8"" [label=""$stack6 = active0 cmp 0L""];\n	""9"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""10"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""11"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""12"" [label=""active0 := @parameter1: long""];\n	""13"" [label=""active0 = active0 & old0""];\n	""14"" [label=""e = $stack16""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack12 == 0""];\n	""17"" [label=""if $stack6 != 0""];\n	""18"" [label=""old0 := @parameter0: long""];\n	""19"" [label=""return $stack10""];\n	""20"" [label=""return $stack13""];\n	""21"" [label=""return $stack14""];\n	""22"" [label=""return $stack15""];\n	""23"" [label=""return 19""];\n	""24"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(18, active0, 0L)""];\n	""25"" [label=""switch($stack9) \{     case 58:     case 105:     default:  \}""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""27"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack8""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_except""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_goto""];\n	""16"" -> ""4""[label=""cfg_true""];\n	""16"" -> ""5""[label=""cfg_false""];\n	""17"" -> ""6""[label=""cfg_false""];\n	""17"" -> ""9""[label=""cfg_true""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_switch""];\n	""25"" -> ""2""[label=""cfg_switch""];\n	""25"" -> ""4""[label=""cfg_switch""];\n	""26"" -> ""18""[label=""cfg_next""];\n	""27"" -> ""15""[label=""cfg_next""];\n	""27"" -> ""7""[label=""cfg_except""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_except""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa20_0(long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa20_0(final long old0, long active0) {\n    if ((active0 &= old0) == 0L) {\n        return jjStartNfa_0(18, old0, 0L);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(19, active0, 0L);\n        return 20;\n    }\n    switch(curChar) {\n        case 111:\n            return jjMoveStringLiteralDfa21_0(active0, 0x400000000L);\n        default:\n            break;\n    }\n    return jjStartNfa_0(19, active0, 0L);\n}","int jjMoveStringLiteralDfa20_0(long,long)","digraph cfg_jjMoveStringLiteralDfa20_0 {\n	""1"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa21_0(long,long)>(active0, 17179869184L)""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(19, active0, 0L)""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(18, old0, 0L)""];\n	""4"" [label=""$stack13 := @caughtexception""];\n	""5"" [label=""$stack6 = active0 cmp 0L""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""9"" [label=""active0 := @parameter1: long""];\n	""10"" [label=""active0 = active0 & old0""];\n	""11"" [label=""e = $stack13""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack6 != 0""];\n	""14"" [label=""old0 := @parameter0: long""];\n	""15"" [label=""return $stack10""];\n	""16"" [label=""return $stack11""];\n	""17"" [label=""return $stack12""];\n	""18"" [label=""return 20""];\n	""19"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(19, active0, 0L)""];\n	""20"" [label=""switch($stack9) \{     case 111:     default:  \}""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""22"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack8""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_goto""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_switch""];\n	""20"" -> ""2""[label=""cfg_switch""];\n	""21"" -> ""14""[label=""cfg_next""];\n	""22"" -> ""12""[label=""cfg_next""];\n	""22"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_except""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_except""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveStringLiteralDfa21_0(long,long)",Method,No Comment,"private int jjMoveStringLiteralDfa21_0(final long old0, long active0) {\n    if ((active0 &= old0) == 0L) {\n        return jjStartNfa_0(19, old0, 0L);\n    }\n    try {\n        curChar = input_stream.readChar();\n    } catch (final java.io.IOException e) {\n        jjStopStringLiteralDfa_0(20, active0, 0L);\n        return 21;\n    }\n    switch(curChar) {\n        case 110:\n            if ((active0 & 0x400000000L) != 0L) {\n                return jjStartNfaWithStates_0(21, 34, 12);\n            }\n            break;\n        default:\n            break;\n    }\n    return jjStartNfa_0(20, active0, 0L);\n}","int jjMoveStringLiteralDfa21_0(long,long)","digraph cfg_jjMoveStringLiteralDfa21_0 {\n	""1"" [label=""$stack10 = active0 & 17179869184L""];\n	""2"" [label=""$stack11 = $stack10 cmp 0L""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(20, active0, 0L)""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfaWithStates_0(int,int,int)>(21, 34, 12)""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStartNfa_0(int,long,long)>(19, old0, 0L)""];\n	""6"" [label=""$stack15 := @caughtexception""];\n	""7"" [label=""$stack6 = active0 cmp 0L""];\n	""8"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""9"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""11"" [label=""active0 := @parameter1: long""];\n	""12"" [label=""active0 = active0 & old0""];\n	""13"" [label=""e = $stack15""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack11 == 0""];\n	""16"" [label=""if $stack6 != 0""];\n	""17"" [label=""old0 := @parameter0: long""];\n	""18"" [label=""return $stack12""];\n	""19"" [label=""return $stack13""];\n	""20"" [label=""return $stack14""];\n	""21"" [label=""return 21""];\n	""22"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjStopStringLiteralDfa_0(int,long,long)>(20, active0, 0L)""];\n	""23"" [label=""switch($stack9) \{     case 110:     default:  \}""];\n	""24"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack8""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_goto""];\n	""15"" -> ""3""[label=""cfg_true""];\n	""15"" -> ""4""[label=""cfg_false""];\n	""16"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""8""[label=""cfg_true""];\n	""17"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_switch""];\n	""23"" -> ""3""[label=""cfg_switch""];\n	""24"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""14""[label=""cfg_next""];\n	""25"" -> ""6""[label=""cfg_except""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_except""];\n}\n",private 
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCheckNAdd(int),Method,No Comment,private void jjCheckNAdd(final int state) {\n    if (jjrounds[state] != jjround) {\n        jjstateSet[jjnewStateCnt++] = state;\n        jjrounds[state] = jjround;\n    }\n},void jjCheckNAdd(int),"digraph cfg_jjCheckNAdd {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjrounds>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjround>""];\n	""3"" [label=""$stack4 = $stack2[state]""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt>""];\n	""5"" [label=""$stack6 = $stack5 + 1""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet>""];\n	""7"" [label=""$stack7[$stack5] = state""];\n	""8"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjrounds>""];\n	""9"" [label=""$stack8[state] = $stack9""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjround>""];\n	""11"" [label=""if $stack4 == $stack3""];\n	""12"" [label=""return""];\n	""13"" [label=""state := @parameter0: int""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt> = $stack6""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_false""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjAddStates(int,int)",Method,No Comment,"private void jjAddStates(int start, final int end) {\n    do {\n        jjstateSet[jjnewStateCnt++] = jjnextStates[start];\n    } while (start++ != end);\n}","void jjAddStates(int,int)","digraph cfg_jjAddStates {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt>""];\n	""2"" [label=""$stack4 = $stack3 + 1""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet>""];\n	""4"" [label=""$stack5[$stack3] = $stack7""];\n	""5"" [label=""$stack6 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjnextStates>""];\n	""6"" [label=""$stack7 = $stack6[start]""];\n	""7"" [label=""$stack8 = start""];\n	""8"" [label=""end := @parameter1: int""];\n	""9"" [label=""if $stack8 != end""];\n	""10"" [label=""return""];\n	""11"" [label=""start := @parameter0: int""];\n	""12"" [label=""start = start + 1""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt> = $stack4""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCheckNAddTwoStates(int,int)",Method,No Comment,"private void jjCheckNAddTwoStates(final int state1, final int state2) {\n    jjCheckNAdd(state1);\n    jjCheckNAdd(state2);\n}","void jjCheckNAddTwoStates(int,int)","digraph cfg_jjCheckNAddTwoStates {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(state1)""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(state2)""];\n	""4"" [label=""state1 := @parameter0: int""];\n	""5"" [label=""state2 := @parameter1: int""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjMoveNfa_0(int,int)",Method,No Comment,"private int jjMoveNfa_0(final int startState, int curPos) {\n    int startsAt = 0;\n    jjnewStateCnt = 13;\n    int i = 1;\n    jjstateSet[0] = startState;\n    int kind = 0x7fffffff;\n    for (; ; ) {\n        if (++jjround == 0x7fffffff) {\n            ReInitRounds();\n        }\n        if (curChar < 64) {\n            final long l = 1L << curChar;\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 0:\n                        if ((0x3ff000000000000L & l) != 0L) {\n                            if (kind > 20) {\n                                kind = 20;\n                            }\n                            jjCheckNAddTwoStates(6, 7);\n                        } else {\n                            switch(curChar) {\n                                case 46:\n                                    jjCheckNAdd(10);\n                                    break;\n                                case 39:\n                                    jjCheckNAddTwoStates(4, 5);\n                                    break;\n                                case 34:\n                                    jjCheckNAddTwoStates(1, 2);\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n                        break;\n                    case 1:\n                        if ((0xfffffffbffffffffL & l) != 0L) {\n                            jjCheckNAddTwoStates(1, 2);\n                        }\n                        break;\n                    case 2:\n                        if (curChar == 34 && kind > 18) {\n                            kind = 18;\n                        }\n                        break;\n                    case 3:\n                        if (curChar == 39) {\n                            jjCheckNAddTwoStates(4, 5);\n                        }\n                        break;\n                    case 4:\n                        if ((0xffffff7fffffffffL & l) != 0L) {\n                            jjCheckNAddTwoStates(4, 5);\n                        }\n                        break;\n                    case 5:\n                        if (curChar == 39 && kind > 18) {\n                            kind = 18;\n                        }\n                        break;\n                    case 6:\n                        if ((0x3ff000000000000L & l) == 0L) {\n                            break;\n                        }\n                        if (kind > 20) {\n                            kind = 20;\n                        }\n                        jjCheckNAddTwoStates(6, 7);\n                        break;\n                    case 7:\n                        if (curChar != 46) {\n                            break;\n                        }\n                        if (kind > 20) {\n                            kind = 20;\n                        }\n                        jjCheckNAdd(8);\n                        break;\n                    case 8:\n                        if ((0x3ff000000000000L & l) == 0L) {\n                            break;\n                        }\n                        if (kind > 20) {\n                            kind = 20;\n                        }\n                        jjCheckNAdd(8);\n                        break;\n                    case 9:\n                        if (curChar == 46) {\n                            jjCheckNAdd(10);\n                        }\n                        break;\n                    case 10:\n                        if ((0x3ff000000000000L & l) == 0L) {\n                            break;\n                        }\n                        if (kind > 20) {\n                            kind = 20;\n                        }\n                        jjCheckNAdd(10);\n                        break;\n                    case 12:\n                        if ((0x3ff600000000000L & l) == 0L) {\n                            break;\n                        }\n                        if (kind > 79) {\n                            kind = 79;\n                        }\n                        jjstateSet[jjnewStateCnt++] = 12;\n                        break;\n                    default:\n                        break;\n                }\n            } while (i != startsAt);\n        } else if (curChar < 128) {\n            final long l = 1L << (curChar & 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 0:\n                    case 12:\n                        if ((0x7fffffe87fffffeL & l) == 0L) {\n                            break;\n                        }\n                        if (kind > 79) {\n                            kind = 79;\n                        }\n                        jjCheckNAdd(12);\n                        break;\n                    case 1:\n                        jjAddStates(0, 1);\n                        break;\n                    case 4:\n                        jjAddStates(2, 3);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i != startsAt);\n        } else {\n            final int hiByte = curChar >> 8;\n            final int i1 = hiByte >> 6;\n            final long l1 = 1L << (hiByte & 077);\n            final int i2 = (curChar & 0xff) >> 6;\n            final long l2 = 1L << (curChar & 077);\n            MatchLoop: do {\n                switch(jjstateSet[--i]) {\n                    case 0:\n                        if (!jjCanMove_1(hiByte, i1, i2, l1, l2)) {\n                            break;\n                        }\n                        if (kind > 79) {\n                            kind = 79;\n                        }\n                        jjCheckNAdd(12);\n                        break;\n                    case 1:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n                            jjAddStates(0, 1);\n                        }\n                        break;\n                    case 4:\n                        if (jjCanMove_0(hiByte, i1, i2, l1, l2)) {\n                            jjAddStates(2, 3);\n                        }\n                        break;\n                    case 12:\n                        if (!jjCanMove_2(hiByte, i1, i2, l1, l2)) {\n                            break;\n                        }\n                        if (kind > 79) {\n                            kind = 79;\n                        }\n                        jjCheckNAdd(12);\n                        break;\n                    default:\n                        break;\n                }\n            } while (i != startsAt);\n        }\n        if (kind != 0x7fffffff) {\n            jjmatchedKind = kind;\n            jjmatchedPos = curPos;\n            kind = 0x7fffffff;\n        }\n        ++curPos;\n        if ((i = jjnewStateCnt) == (startsAt = 13 - (jjnewStateCnt = startsAt))) {\n            return curPos;\n        }\n        try {\n            curChar = input_stream.readChar();\n        } catch (final java.io.IOException e) {\n            return curPos;\n        }\n    }\n}","int jjMoveNfa_0(int,int)","digraph cfg_jjMoveNfa_0 {\n	""1"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet>""];\n	""2"" [label=""$stack13[0] = startState""];\n	""3"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjround>""];\n	""4"" [label=""$stack15 = $stack14 + 1""];\n	""5"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""6"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""7"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""8"" [label=""$stack19 = l & 63""];\n	""9"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""10"" [label=""$stack21 = $stack20 & 255""];\n	""11"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""12"" [label=""$stack23 = $stack22 & 63""];\n	""13"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet>""];\n	""14"" [label=""$stack25 = $stack24[i]""];\n	""15"" [label=""$stack26 = staticinvoke <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: boolean jjCanMove_2(int,int,int,long,long)>(l, i1, i2, l1, l2)""];\n	""16"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""17"" [label=""$stack28 = virtualinvoke $stack27.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""18"" [label=""$stack29 = staticinvoke <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: boolean jjCanMove_0(int,int,int,long,long)>(l, i1, i2, l1, l2)""];\n	""19"" [label=""$stack30 = staticinvoke <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: boolean jjCanMove_0(int,int,int,long,long)>(l, i1, i2, l1, l2)""];\n	""20"" [label=""$stack31 = staticinvoke <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: boolean jjCanMove_1(int,int,int,long,long)>(l, i1, i2, l1, l2)""];\n	""21"" [label=""$stack32 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""22"" [label=""$stack33 = $stack32 & 63""];\n	""23"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet>""];\n	""24"" [label=""$stack35 = $stack34[i]""];\n	""25"" [label=""$stack36 = 576460745995190270L & l""];\n	""26"" [label=""$stack37 = $stack36 cmp 0L""];\n	""27"" [label=""$stack38 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""28"" [label=""$stack39 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet>""];\n	""29"" [label=""$stack40 = $stack39[i]""];\n	""30"" [label=""$stack41 = 288054454291267584L & l""];\n	""31"" [label=""$stack42 = $stack41 cmp 0L""];\n	""32"" [label=""$stack43 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt>""];\n	""33"" [label=""$stack44 = $stack43 + 1""];\n	""34"" [label=""$stack45 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet>""];\n	""35"" [label=""$stack45[$stack43] = 12""];\n	""36"" [label=""$stack46 = 287948901175001088L & l""];\n	""37"" [label=""$stack47 = $stack46 cmp 0L""];\n	""38"" [label=""$stack48 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""39"" [label=""$stack49 = 287948901175001088L & l""];\n	""40"" [label=""$stack50 = $stack49 cmp 0L""];\n	""41"" [label=""$stack51 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""42"" [label=""$stack52 = 287948901175001088L & l""];\n	""43"" [label=""$stack53 = $stack52 cmp 0L""];\n	""44"" [label=""$stack54 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""45"" [label=""$stack55 = -549755813889L & l""];\n	""46"" [label=""$stack56 = $stack55 cmp 0L""];\n	""47"" [label=""$stack57 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""48"" [label=""$stack58 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""49"" [label=""$stack59 = -17179869185L & l""];\n	""50"" [label=""$stack60 = $stack59 cmp 0L""];\n	""51"" [label=""$stack61 = 287948901175001088L & l""];\n	""52"" [label=""$stack62 = $stack61 cmp 0L""];\n	""53"" [label=""$stack63 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""54"" [label=""$stack64 := @caughtexception""];\n	""55"" [label=""curPos := @parameter1: int""];\n	""56"" [label=""curPos = curPos + 1""];\n	""57"" [label=""goto""];\n	""58"" [label=""goto""];\n	""59"" [label=""goto""];\n	""60"" [label=""goto""];\n	""61"" [label=""goto""];\n	""62"" [label=""goto""];\n	""63"" [label=""goto""];\n	""64"" [label=""goto""];\n	""65"" [label=""goto""];\n	""66"" [label=""goto""];\n	""67"" [label=""goto""];\n	""68"" [label=""goto""];\n	""69"" [label=""goto""];\n	""70"" [label=""goto""];\n	""71"" [label=""goto""];\n	""72"" [label=""goto""];\n	""73"" [label=""goto""];\n	""74"" [label=""goto""];\n	""75"" [label=""goto""];\n	""76"" [label=""goto""];\n	""77"" [label=""goto""];\n	""78"" [label=""goto""];\n	""79"" [label=""goto""];\n	""80"" [label=""goto""];\n	""81"" [label=""goto""];\n	""82"" [label=""goto""];\n	""83"" [label=""goto""];\n	""84"" [label=""goto""];\n	""85"" [label=""goto""];\n	""86"" [label=""goto""];\n	""87"" [label=""goto""];\n	""88"" [label=""goto""];\n	""89"" [label=""goto""];\n	""90"" [label=""goto""];\n	""91"" [label=""i = 1""];\n	""92"" [label=""i = i + -1""];\n	""93"" [label=""i = i + -1""];\n	""94"" [label=""i = i + -1""];\n	""95"" [label=""i = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt>""];\n	""96"" [label=""i1 = l >> 6""];\n	""97"" [label=""i2 = $stack21 >> 6""];\n	""98"" [label=""if $stack15 != 2147483647""];\n	""99"" [label=""if $stack16 >= 64""];\n	""100"" [label=""if $stack17 >= 128""];\n	""101"" [label=""if $stack26 != 0""];\n	""102"" [label=""if $stack29 == 0""];\n	""103"" [label=""if $stack30 == 0""];\n	""104"" [label=""if $stack31 != 0""];\n	""105"" [label=""if $stack37 != 0""];\n	""106"" [label=""if $stack42 != 0""];\n	""107"" [label=""if $stack47 != 0""];\n	""108"" [label=""if $stack48 != 46""];\n	""109"" [label=""if $stack50 != 0""];\n	""110"" [label=""if $stack51 == 46""];\n	""111"" [label=""if $stack53 != 0""];\n	""112"" [label=""if $stack54 != 39""];\n	""113"" [label=""if $stack56 == 0""];\n	""114"" [label=""if $stack57 != 39""];\n	""115"" [label=""if $stack58 != 34""];\n	""116"" [label=""if $stack60 == 0""];\n	""117"" [label=""if $stack62 == 0""];\n	""118"" [label=""if i != startsAt""];\n	""119"" [label=""if i != startsAt""];\n	""120"" [label=""if i != startsAt""];\n	""121"" [label=""if i != startsAt""];\n	""122"" [label=""if kind <= 18""];\n	""123"" [label=""if kind <= 18""];\n	""124"" [label=""if kind <= 20""];\n	""125"" [label=""if kind <= 20""];\n	""126"" [label=""if kind <= 20""];\n	""127"" [label=""if kind <= 20""];\n	""128"" [label=""if kind <= 20""];\n	""129"" [label=""if kind <= 79""];\n	""130"" [label=""if kind <= 79""];\n	""131"" [label=""if kind <= 79""];\n	""132"" [label=""if kind <= 79""];\n	""133"" [label=""if kind == 2147483647""];\n	""134"" [label=""kind = 18""];\n	""135"" [label=""kind = 18""];\n	""136"" [label=""kind = 20""];\n	""137"" [label=""kind = 20""];\n	""138"" [label=""kind = 20""];\n	""139"" [label=""kind = 20""];\n	""140"" [label=""kind = 20""];\n	""141"" [label=""kind = 2147483647""];\n	""142"" [label=""kind = 2147483647""];\n	""143"" [label=""kind = 79""];\n	""144"" [label=""kind = 79""];\n	""145"" [label=""kind = 79""];\n	""146"" [label=""kind = 79""];\n	""147"" [label=""l = $stack18 >> 8""];\n	""148"" [label=""l = $stack64""];\n	""149"" [label=""l = 1L << $stack33""];\n	""150"" [label=""l = 1L << $stack38""];\n	""151"" [label=""l1 = 1L << $stack19""];\n	""152"" [label=""l2 = 1L << $stack23""];\n	""153"" [label=""return curPos""];\n	""154"" [label=""return curPos""];\n	""155"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void ReInitRounds()>()""];\n	""156"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjAddStates(int,int)>(0, 1)""];\n	""157"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjAddStates(int,int)>(0, 1)""];\n	""158"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjAddStates(int,int)>(2, 3)""];\n	""159"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjAddStates(int,int)>(2, 3)""];\n	""160"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(10)""];\n	""161"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(10)""];\n	""162"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(10)""];\n	""163"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(12)""];\n	""164"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(12)""];\n	""165"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(12)""];\n	""166"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(8)""];\n	""167"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAdd(int)>(8)""];\n	""168"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAddTwoStates(int,int)>(1, 2)""];\n	""169"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAddTwoStates(int,int)>(1, 2)""];\n	""170"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAddTwoStates(int,int)>(4, 5)""];\n	""171"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAddTwoStates(int,int)>(4, 5)""];\n	""172"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAddTwoStates(int,int)>(4, 5)""];\n	""173"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAddTwoStates(int,int)>(6, 7)""];\n	""174"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void jjCheckNAddTwoStates(int,int)>(6, 7)""];\n	""175"" [label=""startState := @parameter0: int""];\n	""176"" [label=""startsAt = 0""];\n	""177"" [label=""startsAt = 13 - startsAt""];\n	""178"" [label=""switch($stack25) \{     case 0:     case 1:     case 4:     case 12:     default:  \}""];\n	""179"" [label=""switch($stack35) \{     case 0:     case 1:     case 4:     case 12:     default:  \}""];\n	""180"" [label=""switch($stack40) \{     case 0:     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     default:  \}""];\n	""181"" [label=""switch($stack63) \{     case 34:     case 39:     case 46:     default:  \}""];\n	""182"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""183"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack28""];\n	""184"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = kind""];\n	""185"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = curPos""];\n	""186"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt> = $stack44""];\n	""187"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt> = 13""];\n	""188"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt> = startsAt""];\n	""189"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjround> = $stack15""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""97""[label=""cfg_next""];\n	""100"" -> ""21""[label=""cfg_false""];\n	""100"" -> ""7""[label=""cfg_true""];\n	""101"" -> ""132""[label=""cfg_true""];\n	""101"" -> ""88""[label=""cfg_false""];\n	""102"" -> ""120""[label=""cfg_true""];\n	""102"" -> ""159""[label=""cfg_false""];\n	""103"" -> ""120""[label=""cfg_true""];\n	""103"" -> ""157""[label=""cfg_false""];\n	""104"" -> ""131""[label=""cfg_true""];\n	""104"" -> ""84""[label=""cfg_false""];\n	""105"" -> ""130""[label=""cfg_true""];\n	""105"" -> ""81""[label=""cfg_false""];\n	""106"" -> ""129""[label=""cfg_true""];\n	""106"" -> ""76""[label=""cfg_false""];\n	""107"" -> ""128""[label=""cfg_true""];\n	""107"" -> ""74""[label=""cfg_false""];\n	""108"" -> ""118""[label=""cfg_true""];\n	""108"" -> ""161""[label=""cfg_false""];\n	""109"" -> ""127""[label=""cfg_true""];\n	""109"" -> ""71""[label=""cfg_false""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""110"" -> ""126""[label=""cfg_true""];\n	""110"" -> ""69""[label=""cfg_false""];\n	""111"" -> ""125""[label=""cfg_true""];\n	""111"" -> ""67""[label=""cfg_false""];\n	""112"" -> ""118""[label=""cfg_true""];\n	""112"" -> ""123""[label=""cfg_false""];\n	""113"" -> ""118""[label=""cfg_true""];\n	""113"" -> ""172""[label=""cfg_false""];\n	""114"" -> ""118""[label=""cfg_true""];\n	""114"" -> ""171""[label=""cfg_false""];\n	""115"" -> ""118""[label=""cfg_true""];\n	""115"" -> ""122""[label=""cfg_false""];\n	""116"" -> ""118""[label=""cfg_true""];\n	""116"" -> ""169""[label=""cfg_false""];\n	""117"" -> ""124""[label=""cfg_false""];\n	""117"" -> ""53""[label=""cfg_true""];\n	""118"" -> ""28""[label=""cfg_true""];\n	""118"" -> ""78""[label=""cfg_false""];\n	""119"" -> ""23""[label=""cfg_true""];\n	""119"" -> ""83""[label=""cfg_false""];\n	""12"" -> ""152""[label=""cfg_next""];\n	""120"" -> ""13""[label=""cfg_true""];\n	""120"" -> ""133""[label=""cfg_false""];\n	""121"" -> ""153""[label=""cfg_false""];\n	""121"" -> ""16""[label=""cfg_true""];\n	""122"" -> ""118""[label=""cfg_true""];\n	""122"" -> ""134""[label=""cfg_false""];\n	""123"" -> ""118""[label=""cfg_true""];\n	""123"" -> ""135""[label=""cfg_false""];\n	""124"" -> ""136""[label=""cfg_false""];\n	""124"" -> ""173""[label=""cfg_true""];\n	""125"" -> ""137""[label=""cfg_false""];\n	""125"" -> ""174""[label=""cfg_true""];\n	""126"" -> ""138""[label=""cfg_false""];\n	""126"" -> ""166""[label=""cfg_true""];\n	""127"" -> ""139""[label=""cfg_false""];\n	""127"" -> ""167""[label=""cfg_true""];\n	""128"" -> ""140""[label=""cfg_false""];\n	""128"" -> ""162""[label=""cfg_true""];\n	""129"" -> ""143""[label=""cfg_false""];\n	""129"" -> ""34""[label=""cfg_true""];\n	""13"" -> ""94""[label=""cfg_next""];\n	""130"" -> ""144""[label=""cfg_false""];\n	""130"" -> ""163""[label=""cfg_true""];\n	""131"" -> ""145""[label=""cfg_false""];\n	""131"" -> ""164""[label=""cfg_true""];\n	""132"" -> ""146""[label=""cfg_false""];\n	""132"" -> ""165""[label=""cfg_true""];\n	""133"" -> ""184""[label=""cfg_false""];\n	""133"" -> ""56""[label=""cfg_true""];\n	""134"" -> ""63""[label=""cfg_next""];\n	""135"" -> ""66""[label=""cfg_next""];\n	""136"" -> ""173""[label=""cfg_next""];\n	""137"" -> ""174""[label=""cfg_next""];\n	""138"" -> ""166""[label=""cfg_next""];\n	""139"" -> ""167""[label=""cfg_next""];\n	""14"" -> ""178""[label=""cfg_next""];\n	""140"" -> ""162""[label=""cfg_next""];\n	""141"" -> ""3""[label=""cfg_next""];\n	""142"" -> ""56""[label=""cfg_next""];\n	""143"" -> ""34""[label=""cfg_next""];\n	""144"" -> ""163""[label=""cfg_next""];\n	""145"" -> ""164""[label=""cfg_next""];\n	""146"" -> ""165""[label=""cfg_next""];\n	""147"" -> ""96""[label=""cfg_next""];\n	""148"" -> ""154""[label=""cfg_next""];\n	""149"" -> ""23""[label=""cfg_next""];\n	""15"" -> ""101""[label=""cfg_next""];\n	""150"" -> ""28""[label=""cfg_next""];\n	""151"" -> ""9""[label=""cfg_next""];\n	""152"" -> ""13""[label=""cfg_next""];\n	""155"" -> ""5""[label=""cfg_next""];\n	""156"" -> ""79""[label=""cfg_next""];\n	""157"" -> ""86""[label=""cfg_next""];\n	""158"" -> ""80""[label=""cfg_next""];\n	""159"" -> ""87""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""54""[label=""cfg_except""];\n	""160"" -> ""61""[label=""cfg_next""];\n	""161"" -> ""73""[label=""cfg_next""];\n	""162"" -> ""75""[label=""cfg_next""];\n	""163"" -> ""82""[label=""cfg_next""];\n	""164"" -> ""85""[label=""cfg_next""];\n	""165"" -> ""89""[label=""cfg_next""];\n	""166"" -> ""70""[label=""cfg_next""];\n	""167"" -> ""72""[label=""cfg_next""];\n	""168"" -> ""59""[label=""cfg_next""];\n	""169"" -> ""62""[label=""cfg_next""];\n	""17"" -> ""183""[label=""cfg_next""];\n	""17"" -> ""54""[label=""cfg_except""];\n	""170"" -> ""60""[label=""cfg_next""];\n	""171"" -> ""64""[label=""cfg_next""];\n	""172"" -> ""65""[label=""cfg_next""];\n	""173"" -> ""57""[label=""cfg_next""];\n	""174"" -> ""68""[label=""cfg_next""];\n	""175"" -> ""55""[label=""cfg_next""];\n	""176"" -> ""187""[label=""cfg_next""];\n	""177"" -> ""121""[label=""cfg_next""];\n	""178"" -> ""120""[label=""cfg_switch""];\n	""178"" -> ""15""[label=""cfg_switch""];\n	""178"" -> ""18""[label=""cfg_switch""];\n	""178"" -> ""19""[label=""cfg_switch""];\n	""178"" -> ""20""[label=""cfg_switch""];\n	""179"" -> ""119""[label=""cfg_switch""];\n	""179"" -> ""156""[label=""cfg_switch""];\n	""179"" -> ""158""[label=""cfg_switch""];\n	""179"" -> ""25""[label=""cfg_switch""];\n	""18"" -> ""102""[label=""cfg_next""];\n	""180"" -> ""118""[label=""cfg_switch""];\n	""180"" -> ""30""[label=""cfg_switch""];\n	""180"" -> ""36""[label=""cfg_switch""];\n	""180"" -> ""38""[label=""cfg_switch""];\n	""180"" -> ""39""[label=""cfg_switch""];\n	""180"" -> ""41""[label=""cfg_switch""];\n	""180"" -> ""42""[label=""cfg_switch""];\n	""180"" -> ""44""[label=""cfg_switch""];\n	""180"" -> ""45""[label=""cfg_switch""];\n	""180"" -> ""47""[label=""cfg_switch""];\n	""180"" -> ""48""[label=""cfg_switch""];\n	""180"" -> ""49""[label=""cfg_switch""];\n	""180"" -> ""51""[label=""cfg_switch""];\n	""181"" -> ""160""[label=""cfg_switch""];\n	""181"" -> ""168""[label=""cfg_switch""];\n	""181"" -> ""170""[label=""cfg_switch""];\n	""181"" -> ""58""[label=""cfg_switch""];\n	""182"" -> ""175""[label=""cfg_next""];\n	""183"" -> ""54""[label=""cfg_except""];\n	""183"" -> ""90""[label=""cfg_next""];\n	""184"" -> ""185""[label=""cfg_next""];\n	""185"" -> ""142""[label=""cfg_next""];\n	""186"" -> ""35""[label=""cfg_next""];\n	""187"" -> ""91""[label=""cfg_next""];\n	""188"" -> ""177""[label=""cfg_next""];\n	""189"" -> ""98""[label=""cfg_next""];\n	""19"" -> ""103""[label=""cfg_next""];\n	""2"" -> ""141""[label=""cfg_next""];\n	""20"" -> ""104""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""149""[label=""cfg_next""];\n	""23"" -> ""93""[label=""cfg_next""];\n	""24"" -> ""179""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""105""[label=""cfg_next""];\n	""27"" -> ""150""[label=""cfg_next""];\n	""28"" -> ""92""[label=""cfg_next""];\n	""29"" -> ""180""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""106""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""186""[label=""cfg_next""];\n	""34"" -> ""32""[label=""cfg_next""];\n	""35"" -> ""77""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""107""[label=""cfg_next""];\n	""38"" -> ""108""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""189""[label=""cfg_next""];\n	""40"" -> ""109""[label=""cfg_next""];\n	""41"" -> ""110""[label=""cfg_next""];\n	""42"" -> ""43""[label=""cfg_next""];\n	""43"" -> ""111""[label=""cfg_next""];\n	""44"" -> ""112""[label=""cfg_next""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""46"" -> ""113""[label=""cfg_next""];\n	""47"" -> ""114""[label=""cfg_next""];\n	""48"" -> ""115""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""99""[label=""cfg_next""];\n	""50"" -> ""116""[label=""cfg_next""];\n	""51"" -> ""52""[label=""cfg_next""];\n	""52"" -> ""117""[label=""cfg_next""];\n	""53"" -> ""181""[label=""cfg_next""];\n	""54"" -> ""148""[label=""cfg_next""];\n	""55"" -> ""176""[label=""cfg_next""];\n	""56"" -> ""95""[label=""cfg_next""];\n	""57"" -> ""118""[label=""cfg_goto""];\n	""58"" -> ""118""[label=""cfg_goto""];\n	""59"" -> ""118""[label=""cfg_goto""];\n	""6"" -> ""100""[label=""cfg_next""];\n	""60"" -> ""118""[label=""cfg_goto""];\n	""61"" -> ""118""[label=""cfg_goto""];\n	""62"" -> ""118""[label=""cfg_goto""];\n	""63"" -> ""118""[label=""cfg_goto""];\n	""64"" -> ""118""[label=""cfg_goto""];\n	""65"" -> ""118""[label=""cfg_goto""];\n	""66"" -> ""118""[label=""cfg_goto""];\n	""67"" -> ""118""[label=""cfg_goto""];\n	""68"" -> ""118""[label=""cfg_goto""];\n	""69"" -> ""118""[label=""cfg_goto""];\n	""7"" -> ""147""[label=""cfg_next""];\n	""70"" -> ""118""[label=""cfg_goto""];\n	""71"" -> ""118""[label=""cfg_goto""];\n	""72"" -> ""118""[label=""cfg_goto""];\n	""73"" -> ""118""[label=""cfg_goto""];\n	""74"" -> ""118""[label=""cfg_goto""];\n	""75"" -> ""118""[label=""cfg_goto""];\n	""76"" -> ""118""[label=""cfg_goto""];\n	""77"" -> ""118""[label=""cfg_goto""];\n	""78"" -> ""133""[label=""cfg_goto""];\n	""79"" -> ""119""[label=""cfg_goto""];\n	""8"" -> ""151""[label=""cfg_next""];\n	""80"" -> ""119""[label=""cfg_goto""];\n	""81"" -> ""119""[label=""cfg_goto""];\n	""82"" -> ""119""[label=""cfg_goto""];\n	""83"" -> ""133""[label=""cfg_goto""];\n	""84"" -> ""120""[label=""cfg_goto""];\n	""85"" -> ""120""[label=""cfg_goto""];\n	""86"" -> ""120""[label=""cfg_goto""];\n	""87"" -> ""120""[label=""cfg_goto""];\n	""88"" -> ""120""[label=""cfg_goto""];\n	""89"" -> ""120""[label=""cfg_goto""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""90"" -> ""3""[label=""cfg_goto""];\n	""91"" -> ""1""[label=""cfg_next""];\n	""92"" -> ""29""[label=""cfg_next""];\n	""93"" -> ""24""[label=""cfg_next""];\n	""94"" -> ""14""[label=""cfg_next""];\n	""95"" -> ""188""[label=""cfg_next""];\n	""96"" -> ""8""[label=""cfg_next""];\n	""97"" -> ""11""[label=""cfg_next""];\n	""98"" -> ""155""[label=""cfg_false""];\n	""98"" -> ""5""[label=""cfg_true""];\n	""99"" -> ""27""[label=""cfg_false""];\n	""99"" -> ""6""[label=""cfg_true""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCanMove_0(int,int,int,long,long)",Method,No Comment,"private static boolean jjCanMove_0(final int hiByte, final int i1, final int i2, final long l1, final long l2) {\n    switch(hiByte) {\n        case 0:\n            return (jjbitVec2[i2] & l2) != 0L;\n        default:\n            if ((jjbitVec0[i1] & l1) != 0L) {\n                return true;\n            }\n            return false;\n    }\n}","boolean jjCanMove_0(int,int,int,long,long)","digraph cfg_jjCanMove_0 {\n	""1"" [label=""$stack10 = $stack9 cmp 0L""];\n	""2"" [label=""$stack11 = 0""];\n	""3"" [label=""$stack11 = 1""];\n	""4"" [label=""$stack12 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec0>""];\n	""5"" [label=""$stack13 = $stack12[i1]""];\n	""6"" [label=""$stack14 = $stack13 & l1""];\n	""7"" [label=""$stack15 = $stack14 cmp 0L""];\n	""8"" [label=""$stack7 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec2>""];\n	""9"" [label=""$stack8 = $stack7[i2]""];\n	""10"" [label=""$stack9 = $stack8 & l2""];\n	""11"" [label=""goto""];\n	""12"" [label=""hiByte := @parameter0: int""];\n	""13"" [label=""i1 := @parameter1: int""];\n	""14"" [label=""i2 := @parameter2: int""];\n	""15"" [label=""if $stack10 == 0""];\n	""16"" [label=""if $stack15 == 0""];\n	""17"" [label=""l1 := @parameter3: long""];\n	""18"" [label=""l2 := @parameter4: long""];\n	""19"" [label=""return $stack11""];\n	""20"" [label=""return 0""];\n	""21"" [label=""return 1""];\n	""22"" [label=""switch(hiByte) \{     case 0:     default:  \}""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_goto""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_true""];\n	""15"" -> ""3""[label=""cfg_false""];\n	""16"" -> ""20""[label=""cfg_true""];\n	""16"" -> ""21""[label=""cfg_false""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""4""[label=""cfg_switch""];\n	""22"" -> ""8""[label=""cfg_switch""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCanMove_1(int,int,int,long,long)",Method,No Comment,"private static boolean jjCanMove_1(final int hiByte, final int i1, final int i2, final long l1, final long l2) {\n    switch(hiByte) {\n        case 0:\n            return (jjbitVec4[i2] & l2) != 0L;\n        case 1:\n            return (jjbitVec5[i2] & l2) != 0L;\n        case 2:\n            return (jjbitVec6[i2] & l2) != 0L;\n        case 3:\n            return (jjbitVec7[i2] & l2) != 0L;\n        case 4:\n            return (jjbitVec8[i2] & l2) != 0L;\n        case 5:\n            return (jjbitVec9[i2] & l2) != 0L;\n        case 6:\n            return (jjbitVec10[i2] & l2) != 0L;\n        case 9:\n            return (jjbitVec11[i2] & l2) != 0L;\n        case 10:\n            return (jjbitVec12[i2] & l2) != 0L;\n        case 11:\n            return (jjbitVec13[i2] & l2) != 0L;\n        case 12:\n            return (jjbitVec14[i2] & l2) != 0L;\n        case 13:\n            return (jjbitVec15[i2] & l2) != 0L;\n        case 14:\n            return (jjbitVec16[i2] & l2) != 0L;\n        case 15:\n            return (jjbitVec17[i2] & l2) != 0L;\n        case 16:\n            return (jjbitVec18[i2] & l2) != 0L;\n        case 17:\n            return (jjbitVec19[i2] & l2) != 0L;\n        case 30:\n            return (jjbitVec20[i2] & l2) != 0L;\n        case 31:\n            return (jjbitVec21[i2] & l2) != 0L;\n        case 33:\n            return (jjbitVec22[i2] & l2) != 0L;\n        case 48:\n            return (jjbitVec23[i2] & l2) != 0L;\n        case 49:\n            return (jjbitVec24[i2] & l2) != 0L;\n        case 159:\n            return (jjbitVec25[i2] & l2) != 0L;\n        case 215:\n            return (jjbitVec26[i2] & l2) != 0L;\n        default:\n            if ((jjbitVec3[i1] & l1) != 0L) {\n                return true;\n            }\n            return false;\n    }\n}","boolean jjCanMove_1(int,int,int,long,long)","digraph cfg_jjCanMove_1 {\n	""1"" [label=""$stack10 = $stack9 cmp 0L""];\n	""2"" [label=""$stack100 = $stack99 cmp 0L""];\n	""3"" [label=""$stack101 = 0""];\n	""4"" [label=""$stack101 = 1""];\n	""5"" [label=""$stack102 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec7>""];\n	""6"" [label=""$stack103 = $stack102[i2]""];\n	""7"" [label=""$stack104 = $stack103 & l2""];\n	""8"" [label=""$stack105 = $stack104 cmp 0L""];\n	""9"" [label=""$stack106 = 0""];\n	""10"" [label=""$stack106 = 1""];\n	""11"" [label=""$stack107 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec6>""];\n	""12"" [label=""$stack108 = $stack107[i2]""];\n	""13"" [label=""$stack109 = $stack108 & l2""];\n	""14"" [label=""$stack11 = 0""];\n	""15"" [label=""$stack11 = 1""];\n	""16"" [label=""$stack110 = $stack109 cmp 0L""];\n	""17"" [label=""$stack111 = 0""];\n	""18"" [label=""$stack111 = 1""];\n	""19"" [label=""$stack112 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec5>""];\n	""20"" [label=""$stack113 = $stack112[i2]""];\n	""21"" [label=""$stack114 = $stack113 & l2""];\n	""22"" [label=""$stack115 = $stack114 cmp 0L""];\n	""23"" [label=""$stack116 = 0""];\n	""24"" [label=""$stack116 = 1""];\n	""25"" [label=""$stack117 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec4>""];\n	""26"" [label=""$stack118 = $stack117[i2]""];\n	""27"" [label=""$stack119 = $stack118 & l2""];\n	""28"" [label=""$stack12 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec25>""];\n	""29"" [label=""$stack120 = $stack119 cmp 0L""];\n	""30"" [label=""$stack121 = 0""];\n	""31"" [label=""$stack121 = 1""];\n	""32"" [label=""$stack122 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec3>""];\n	""33"" [label=""$stack123 = $stack122[i1]""];\n	""34"" [label=""$stack124 = $stack123 & l1""];\n	""35"" [label=""$stack125 = $stack124 cmp 0L""];\n	""36"" [label=""$stack13 = $stack12[i2]""];\n	""37"" [label=""$stack14 = $stack13 & l2""];\n	""38"" [label=""$stack15 = $stack14 cmp 0L""];\n	""39"" [label=""$stack16 = 0""];\n	""40"" [label=""$stack16 = 1""];\n	""41"" [label=""$stack17 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec24>""];\n	""42"" [label=""$stack18 = $stack17[i2]""];\n	""43"" [label=""$stack19 = $stack18 & l2""];\n	""44"" [label=""$stack20 = $stack19 cmp 0L""];\n	""45"" [label=""$stack21 = 0""];\n	""46"" [label=""$stack21 = 1""];\n	""47"" [label=""$stack22 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec23>""];\n	""48"" [label=""$stack23 = $stack22[i2]""];\n	""49"" [label=""$stack24 = $stack23 & l2""];\n	""50"" [label=""$stack25 = $stack24 cmp 0L""];\n	""51"" [label=""$stack26 = 0""];\n	""52"" [label=""$stack26 = 1""];\n	""53"" [label=""$stack27 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec22>""];\n	""54"" [label=""$stack28 = $stack27[i2]""];\n	""55"" [label=""$stack29 = $stack28 & l2""];\n	""56"" [label=""$stack30 = $stack29 cmp 0L""];\n	""57"" [label=""$stack31 = 0""];\n	""58"" [label=""$stack31 = 1""];\n	""59"" [label=""$stack32 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec21>""];\n	""60"" [label=""$stack33 = $stack32[i2]""];\n	""61"" [label=""$stack34 = $stack33 & l2""];\n	""62"" [label=""$stack35 = $stack34 cmp 0L""];\n	""63"" [label=""$stack36 = 0""];\n	""64"" [label=""$stack36 = 1""];\n	""65"" [label=""$stack37 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec20>""];\n	""66"" [label=""$stack38 = $stack37[i2]""];\n	""67"" [label=""$stack39 = $stack38 & l2""];\n	""68"" [label=""$stack40 = $stack39 cmp 0L""];\n	""69"" [label=""$stack41 = 0""];\n	""70"" [label=""$stack41 = 1""];\n	""71"" [label=""$stack42 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec19>""];\n	""72"" [label=""$stack43 = $stack42[i2]""];\n	""73"" [label=""$stack44 = $stack43 & l2""];\n	""74"" [label=""$stack45 = $stack44 cmp 0L""];\n	""75"" [label=""$stack46 = 0""];\n	""76"" [label=""$stack46 = 1""];\n	""77"" [label=""$stack47 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec18>""];\n	""78"" [label=""$stack48 = $stack47[i2]""];\n	""79"" [label=""$stack49 = $stack48 & l2""];\n	""80"" [label=""$stack50 = $stack49 cmp 0L""];\n	""81"" [label=""$stack51 = 0""];\n	""82"" [label=""$stack51 = 1""];\n	""83"" [label=""$stack52 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec17>""];\n	""84"" [label=""$stack53 = $stack52[i2]""];\n	""85"" [label=""$stack54 = $stack53 & l2""];\n	""86"" [label=""$stack55 = $stack54 cmp 0L""];\n	""87"" [label=""$stack56 = 0""];\n	""88"" [label=""$stack56 = 1""];\n	""89"" [label=""$stack57 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec16>""];\n	""90"" [label=""$stack58 = $stack57[i2]""];\n	""91"" [label=""$stack59 = $stack58 & l2""];\n	""92"" [label=""$stack60 = $stack59 cmp 0L""];\n	""93"" [label=""$stack61 = 0""];\n	""94"" [label=""$stack61 = 1""];\n	""95"" [label=""$stack62 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec15>""];\n	""96"" [label=""$stack63 = $stack62[i2]""];\n	""97"" [label=""$stack64 = $stack63 & l2""];\n	""98"" [label=""$stack65 = $stack64 cmp 0L""];\n	""99"" [label=""$stack66 = 0""];\n	""100"" [label=""$stack66 = 1""];\n	""101"" [label=""$stack67 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec14>""];\n	""102"" [label=""$stack68 = $stack67[i2]""];\n	""103"" [label=""$stack69 = $stack68 & l2""];\n	""104"" [label=""$stack7 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec26>""];\n	""105"" [label=""$stack70 = $stack69 cmp 0L""];\n	""106"" [label=""$stack71 = 0""];\n	""107"" [label=""$stack71 = 1""];\n	""108"" [label=""$stack72 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec13>""];\n	""109"" [label=""$stack73 = $stack72[i2]""];\n	""110"" [label=""$stack74 = $stack73 & l2""];\n	""111"" [label=""$stack75 = $stack74 cmp 0L""];\n	""112"" [label=""$stack76 = 0""];\n	""113"" [label=""$stack76 = 1""];\n	""114"" [label=""$stack77 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec12>""];\n	""115"" [label=""$stack78 = $stack77[i2]""];\n	""116"" [label=""$stack79 = $stack78 & l2""];\n	""117"" [label=""$stack8 = $stack7[i2]""];\n	""118"" [label=""$stack80 = $stack79 cmp 0L""];\n	""119"" [label=""$stack81 = 0""];\n	""120"" [label=""$stack81 = 1""];\n	""121"" [label=""$stack82 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec11>""];\n	""122"" [label=""$stack83 = $stack82[i2]""];\n	""123"" [label=""$stack84 = $stack83 & l2""];\n	""124"" [label=""$stack85 = $stack84 cmp 0L""];\n	""125"" [label=""$stack86 = 0""];\n	""126"" [label=""$stack86 = 1""];\n	""127"" [label=""$stack87 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec10>""];\n	""128"" [label=""$stack88 = $stack87[i2]""];\n	""129"" [label=""$stack89 = $stack88 & l2""];\n	""130"" [label=""$stack9 = $stack8 & l2""];\n	""131"" [label=""$stack90 = $stack89 cmp 0L""];\n	""132"" [label=""$stack91 = 0""];\n	""133"" [label=""$stack91 = 1""];\n	""134"" [label=""$stack92 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec9>""];\n	""135"" [label=""$stack93 = $stack92[i2]""];\n	""136"" [label=""$stack94 = $stack93 & l2""];\n	""137"" [label=""$stack95 = $stack94 cmp 0L""];\n	""138"" [label=""$stack96 = 0""];\n	""139"" [label=""$stack96 = 1""];\n	""140"" [label=""$stack97 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec8>""];\n	""141"" [label=""$stack98 = $stack97[i2]""];\n	""142"" [label=""$stack99 = $stack98 & l2""];\n	""143"" [label=""goto""];\n	""144"" [label=""goto""];\n	""145"" [label=""goto""];\n	""146"" [label=""goto""];\n	""147"" [label=""goto""];\n	""148"" [label=""goto""];\n	""149"" [label=""goto""];\n	""150"" [label=""goto""];\n	""151"" [label=""goto""];\n	""152"" [label=""goto""];\n	""153"" [label=""goto""];\n	""154"" [label=""goto""];\n	""155"" [label=""goto""];\n	""156"" [label=""goto""];\n	""157"" [label=""goto""];\n	""158"" [label=""goto""];\n	""159"" [label=""goto""];\n	""160"" [label=""goto""];\n	""161"" [label=""goto""];\n	""162"" [label=""goto""];\n	""163"" [label=""goto""];\n	""164"" [label=""goto""];\n	""165"" [label=""goto""];\n	""166"" [label=""hiByte := @parameter0: int""];\n	""167"" [label=""i1 := @parameter1: int""];\n	""168"" [label=""i2 := @parameter2: int""];\n	""169"" [label=""if $stack10 == 0""];\n	""170"" [label=""if $stack100 == 0""];\n	""171"" [label=""if $stack105 == 0""];\n	""172"" [label=""if $stack110 == 0""];\n	""173"" [label=""if $stack115 == 0""];\n	""174"" [label=""if $stack120 == 0""];\n	""175"" [label=""if $stack125 == 0""];\n	""176"" [label=""if $stack15 == 0""];\n	""177"" [label=""if $stack20 == 0""];\n	""178"" [label=""if $stack25 == 0""];\n	""179"" [label=""if $stack30 == 0""];\n	""180"" [label=""if $stack35 == 0""];\n	""181"" [label=""if $stack40 == 0""];\n	""182"" [label=""if $stack45 == 0""];\n	""183"" [label=""if $stack50 == 0""];\n	""184"" [label=""if $stack55 == 0""];\n	""185"" [label=""if $stack60 == 0""];\n	""186"" [label=""if $stack65 == 0""];\n	""187"" [label=""if $stack70 == 0""];\n	""188"" [label=""if $stack75 == 0""];\n	""189"" [label=""if $stack80 == 0""];\n	""190"" [label=""if $stack85 == 0""];\n	""191"" [label=""if $stack90 == 0""];\n	""192"" [label=""if $stack95 == 0""];\n	""193"" [label=""l1 := @parameter3: long""];\n	""194"" [label=""l2 := @parameter4: long""];\n	""195"" [label=""return $stack101""];\n	""196"" [label=""return $stack106""];\n	""197"" [label=""return $stack11""];\n	""198"" [label=""return $stack111""];\n	""199"" [label=""return $stack116""];\n	""200"" [label=""return $stack121""];\n	""201"" [label=""return $stack16""];\n	""202"" [label=""return $stack21""];\n	""203"" [label=""return $stack26""];\n	""204"" [label=""return $stack31""];\n	""205"" [label=""return $stack36""];\n	""206"" [label=""return $stack41""];\n	""207"" [label=""return $stack46""];\n	""208"" [label=""return $stack51""];\n	""209"" [label=""return $stack56""];\n	""210"" [label=""return $stack61""];\n	""211"" [label=""return $stack66""];\n	""212"" [label=""return $stack71""];\n	""213"" [label=""return $stack76""];\n	""214"" [label=""return $stack81""];\n	""215"" [label=""return $stack86""];\n	""216"" [label=""return $stack91""];\n	""217"" [label=""return $stack96""];\n	""218"" [label=""return 0""];\n	""219"" [label=""return 1""];\n	""220"" [label=""switch(hiByte) \{     case 0:     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 30:     case 31:     case 33:     case 48:     case 49:     case 159:     case 215:     default:  \}""];\n	""1"" -> ""169""[label=""cfg_next""];\n	""10"" -> ""146""[label=""cfg_next""];\n	""100"" -> ""154""[label=""cfg_next""];\n	""101"" -> ""102""[label=""cfg_next""];\n	""102"" -> ""103""[label=""cfg_next""];\n	""103"" -> ""105""[label=""cfg_next""];\n	""104"" -> ""117""[label=""cfg_next""];\n	""105"" -> ""187""[label=""cfg_next""];\n	""106"" -> ""212""[label=""cfg_next""];\n	""107"" -> ""153""[label=""cfg_next""];\n	""108"" -> ""109""[label=""cfg_next""];\n	""109"" -> ""110""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""110"" -> ""111""[label=""cfg_next""];\n	""111"" -> ""188""[label=""cfg_next""];\n	""112"" -> ""213""[label=""cfg_next""];\n	""113"" -> ""152""[label=""cfg_next""];\n	""114"" -> ""115""[label=""cfg_next""];\n	""115"" -> ""116""[label=""cfg_next""];\n	""116"" -> ""118""[label=""cfg_next""];\n	""117"" -> ""130""[label=""cfg_next""];\n	""118"" -> ""189""[label=""cfg_next""];\n	""119"" -> ""214""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""120"" -> ""151""[label=""cfg_next""];\n	""121"" -> ""122""[label=""cfg_next""];\n	""122"" -> ""123""[label=""cfg_next""];\n	""123"" -> ""124""[label=""cfg_next""];\n	""124"" -> ""190""[label=""cfg_next""];\n	""125"" -> ""215""[label=""cfg_next""];\n	""126"" -> ""150""[label=""cfg_next""];\n	""127"" -> ""128""[label=""cfg_next""];\n	""128"" -> ""129""[label=""cfg_next""];\n	""129"" -> ""131""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""130"" -> ""1""[label=""cfg_next""];\n	""131"" -> ""191""[label=""cfg_next""];\n	""132"" -> ""216""[label=""cfg_next""];\n	""133"" -> ""149""[label=""cfg_next""];\n	""134"" -> ""135""[label=""cfg_next""];\n	""135"" -> ""136""[label=""cfg_next""];\n	""136"" -> ""137""[label=""cfg_next""];\n	""137"" -> ""192""[label=""cfg_next""];\n	""138"" -> ""217""[label=""cfg_next""];\n	""139"" -> ""148""[label=""cfg_next""];\n	""14"" -> ""197""[label=""cfg_next""];\n	""140"" -> ""141""[label=""cfg_next""];\n	""141"" -> ""142""[label=""cfg_next""];\n	""142"" -> ""2""[label=""cfg_next""];\n	""143"" -> ""200""[label=""cfg_goto""];\n	""144"" -> ""199""[label=""cfg_goto""];\n	""145"" -> ""198""[label=""cfg_goto""];\n	""146"" -> ""196""[label=""cfg_goto""];\n	""147"" -> ""195""[label=""cfg_goto""];\n	""148"" -> ""217""[label=""cfg_goto""];\n	""149"" -> ""216""[label=""cfg_goto""];\n	""15"" -> ""165""[label=""cfg_next""];\n	""150"" -> ""215""[label=""cfg_goto""];\n	""151"" -> ""214""[label=""cfg_goto""];\n	""152"" -> ""213""[label=""cfg_goto""];\n	""153"" -> ""212""[label=""cfg_goto""];\n	""154"" -> ""211""[label=""cfg_goto""];\n	""155"" -> ""210""[label=""cfg_goto""];\n	""156"" -> ""209""[label=""cfg_goto""];\n	""157"" -> ""208""[label=""cfg_goto""];\n	""158"" -> ""207""[label=""cfg_goto""];\n	""159"" -> ""206""[label=""cfg_goto""];\n	""16"" -> ""172""[label=""cfg_next""];\n	""160"" -> ""205""[label=""cfg_goto""];\n	""161"" -> ""204""[label=""cfg_goto""];\n	""162"" -> ""203""[label=""cfg_goto""];\n	""163"" -> ""202""[label=""cfg_goto""];\n	""164"" -> ""201""[label=""cfg_goto""];\n	""165"" -> ""197""[label=""cfg_goto""];\n	""166"" -> ""167""[label=""cfg_next""];\n	""167"" -> ""168""[label=""cfg_next""];\n	""168"" -> ""193""[label=""cfg_next""];\n	""169"" -> ""14""[label=""cfg_true""];\n	""169"" -> ""15""[label=""cfg_false""];\n	""17"" -> ""198""[label=""cfg_next""];\n	""170"" -> ""3""[label=""cfg_true""];\n	""170"" -> ""4""[label=""cfg_false""];\n	""171"" -> ""10""[label=""cfg_false""];\n	""171"" -> ""9""[label=""cfg_true""];\n	""172"" -> ""17""[label=""cfg_true""];\n	""172"" -> ""18""[label=""cfg_false""];\n	""173"" -> ""23""[label=""cfg_true""];\n	""173"" -> ""24""[label=""cfg_false""];\n	""174"" -> ""30""[label=""cfg_true""];\n	""174"" -> ""31""[label=""cfg_false""];\n	""175"" -> ""218""[label=""cfg_true""];\n	""175"" -> ""219""[label=""cfg_false""];\n	""176"" -> ""39""[label=""cfg_true""];\n	""176"" -> ""40""[label=""cfg_false""];\n	""177"" -> ""45""[label=""cfg_true""];\n	""177"" -> ""46""[label=""cfg_false""];\n	""178"" -> ""51""[label=""cfg_true""];\n	""178"" -> ""52""[label=""cfg_false""];\n	""179"" -> ""57""[label=""cfg_true""];\n	""179"" -> ""58""[label=""cfg_false""];\n	""18"" -> ""145""[label=""cfg_next""];\n	""180"" -> ""63""[label=""cfg_true""];\n	""180"" -> ""64""[label=""cfg_false""];\n	""181"" -> ""69""[label=""cfg_true""];\n	""181"" -> ""70""[label=""cfg_false""];\n	""182"" -> ""75""[label=""cfg_true""];\n	""182"" -> ""76""[label=""cfg_false""];\n	""183"" -> ""81""[label=""cfg_true""];\n	""183"" -> ""82""[label=""cfg_false""];\n	""184"" -> ""87""[label=""cfg_true""];\n	""184"" -> ""88""[label=""cfg_false""];\n	""185"" -> ""93""[label=""cfg_true""];\n	""185"" -> ""94""[label=""cfg_false""];\n	""186"" -> ""100""[label=""cfg_false""];\n	""186"" -> ""99""[label=""cfg_true""];\n	""187"" -> ""106""[label=""cfg_true""];\n	""187"" -> ""107""[label=""cfg_false""];\n	""188"" -> ""112""[label=""cfg_true""];\n	""188"" -> ""113""[label=""cfg_false""];\n	""189"" -> ""119""[label=""cfg_true""];\n	""189"" -> ""120""[label=""cfg_false""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""190"" -> ""125""[label=""cfg_true""];\n	""190"" -> ""126""[label=""cfg_false""];\n	""191"" -> ""132""[label=""cfg_true""];\n	""191"" -> ""133""[label=""cfg_false""];\n	""192"" -> ""138""[label=""cfg_true""];\n	""192"" -> ""139""[label=""cfg_false""];\n	""193"" -> ""194""[label=""cfg_next""];\n	""194"" -> ""220""[label=""cfg_next""];\n	""2"" -> ""170""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""173""[label=""cfg_next""];\n	""220"" -> ""101""[label=""cfg_switch""];\n	""220"" -> ""104""[label=""cfg_switch""];\n	""220"" -> ""108""[label=""cfg_switch""];\n	""220"" -> ""11""[label=""cfg_switch""];\n	""220"" -> ""114""[label=""cfg_switch""];\n	""220"" -> ""121""[label=""cfg_switch""];\n	""220"" -> ""127""[label=""cfg_switch""];\n	""220"" -> ""134""[label=""cfg_switch""];\n	""220"" -> ""140""[label=""cfg_switch""];\n	""220"" -> ""19""[label=""cfg_switch""];\n	""220"" -> ""25""[label=""cfg_switch""];\n	""220"" -> ""28""[label=""cfg_switch""];\n	""220"" -> ""32""[label=""cfg_switch""];\n	""220"" -> ""41""[label=""cfg_switch""];\n	""220"" -> ""47""[label=""cfg_switch""];\n	""220"" -> ""5""[label=""cfg_switch""];\n	""220"" -> ""53""[label=""cfg_switch""];\n	""220"" -> ""59""[label=""cfg_switch""];\n	""220"" -> ""65""[label=""cfg_switch""];\n	""220"" -> ""71""[label=""cfg_switch""];\n	""220"" -> ""77""[label=""cfg_switch""];\n	""220"" -> ""83""[label=""cfg_switch""];\n	""220"" -> ""89""[label=""cfg_switch""];\n	""220"" -> ""95""[label=""cfg_switch""];\n	""23"" -> ""199""[label=""cfg_next""];\n	""24"" -> ""144""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""36""[label=""cfg_next""];\n	""29"" -> ""174""[label=""cfg_next""];\n	""3"" -> ""195""[label=""cfg_next""];\n	""30"" -> ""200""[label=""cfg_next""];\n	""31"" -> ""143""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""34""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""175""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""176""[label=""cfg_next""];\n	""39"" -> ""201""[label=""cfg_next""];\n	""4"" -> ""147""[label=""cfg_next""];\n	""40"" -> ""164""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""43""[label=""cfg_next""];\n	""43"" -> ""44""[label=""cfg_next""];\n	""44"" -> ""177""[label=""cfg_next""];\n	""45"" -> ""202""[label=""cfg_next""];\n	""46"" -> ""163""[label=""cfg_next""];\n	""47"" -> ""48""[label=""cfg_next""];\n	""48"" -> ""49""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""178""[label=""cfg_next""];\n	""51"" -> ""203""[label=""cfg_next""];\n	""52"" -> ""162""[label=""cfg_next""];\n	""53"" -> ""54""[label=""cfg_next""];\n	""54"" -> ""55""[label=""cfg_next""];\n	""55"" -> ""56""[label=""cfg_next""];\n	""56"" -> ""179""[label=""cfg_next""];\n	""57"" -> ""204""[label=""cfg_next""];\n	""58"" -> ""161""[label=""cfg_next""];\n	""59"" -> ""60""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""61""[label=""cfg_next""];\n	""61"" -> ""62""[label=""cfg_next""];\n	""62"" -> ""180""[label=""cfg_next""];\n	""63"" -> ""205""[label=""cfg_next""];\n	""64"" -> ""160""[label=""cfg_next""];\n	""65"" -> ""66""[label=""cfg_next""];\n	""66"" -> ""67""[label=""cfg_next""];\n	""67"" -> ""68""[label=""cfg_next""];\n	""68"" -> ""181""[label=""cfg_next""];\n	""69"" -> ""206""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""159""[label=""cfg_next""];\n	""71"" -> ""72""[label=""cfg_next""];\n	""72"" -> ""73""[label=""cfg_next""];\n	""73"" -> ""74""[label=""cfg_next""];\n	""74"" -> ""182""[label=""cfg_next""];\n	""75"" -> ""207""[label=""cfg_next""];\n	""76"" -> ""158""[label=""cfg_next""];\n	""77"" -> ""78""[label=""cfg_next""];\n	""78"" -> ""79""[label=""cfg_next""];\n	""79"" -> ""80""[label=""cfg_next""];\n	""8"" -> ""171""[label=""cfg_next""];\n	""80"" -> ""183""[label=""cfg_next""];\n	""81"" -> ""208""[label=""cfg_next""];\n	""82"" -> ""157""[label=""cfg_next""];\n	""83"" -> ""84""[label=""cfg_next""];\n	""84"" -> ""85""[label=""cfg_next""];\n	""85"" -> ""86""[label=""cfg_next""];\n	""86"" -> ""184""[label=""cfg_next""];\n	""87"" -> ""209""[label=""cfg_next""];\n	""88"" -> ""156""[label=""cfg_next""];\n	""89"" -> ""90""[label=""cfg_next""];\n	""9"" -> ""196""[label=""cfg_next""];\n	""90"" -> ""91""[label=""cfg_next""];\n	""91"" -> ""92""[label=""cfg_next""];\n	""92"" -> ""185""[label=""cfg_next""];\n	""93"" -> ""210""[label=""cfg_next""];\n	""94"" -> ""155""[label=""cfg_next""];\n	""95"" -> ""96""[label=""cfg_next""];\n	""96"" -> ""97""[label=""cfg_next""];\n	""97"" -> ""98""[label=""cfg_next""];\n	""98"" -> ""186""[label=""cfg_next""];\n	""99"" -> ""211""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjCanMove_2(int,int,int,long,long)",Method,No Comment,"private static boolean jjCanMove_2(final int hiByte, final int i1, final int i2, final long l1, final long l2) {\n    switch(hiByte) {\n        case 0:\n            return (jjbitVec27[i2] & l2) != 0L;\n        case 1:\n            return (jjbitVec5[i2] & l2) != 0L;\n        case 2:\n            return (jjbitVec28[i2] & l2) != 0L;\n        case 3:\n            return (jjbitVec29[i2] & l2) != 0L;\n        case 4:\n            return (jjbitVec30[i2] & l2) != 0L;\n        case 5:\n            return (jjbitVec31[i2] & l2) != 0L;\n        case 6:\n            return (jjbitVec32[i2] & l2) != 0L;\n        case 9:\n            return (jjbitVec33[i2] & l2) != 0L;\n        case 10:\n            return (jjbitVec34[i2] & l2) != 0L;\n        case 11:\n            return (jjbitVec35[i2] & l2) != 0L;\n        case 12:\n            return (jjbitVec36[i2] & l2) != 0L;\n        case 13:\n            return (jjbitVec37[i2] & l2) != 0L;\n        case 14:\n            return (jjbitVec38[i2] & l2) != 0L;\n        case 15:\n            return (jjbitVec39[i2] & l2) != 0L;\n        case 16:\n            return (jjbitVec18[i2] & l2) != 0L;\n        case 17:\n            return (jjbitVec19[i2] & l2) != 0L;\n        case 30:\n            return (jjbitVec20[i2] & l2) != 0L;\n        case 31:\n            return (jjbitVec21[i2] & l2) != 0L;\n        case 32:\n            return (jjbitVec40[i2] & l2) != 0L;\n        case 33:\n            return (jjbitVec22[i2] & l2) != 0L;\n        case 48:\n            return (jjbitVec41[i2] & l2) != 0L;\n        case 49:\n            return (jjbitVec24[i2] & l2) != 0L;\n        case 159:\n            return (jjbitVec25[i2] & l2) != 0L;\n        case 215:\n            return (jjbitVec26[i2] & l2) != 0L;\n        default:\n            if ((jjbitVec3[i1] & l1) != 0L) {\n                return true;\n            }\n            return false;\n    }\n}","boolean jjCanMove_2(int,int,int,long,long)","digraph cfg_jjCanMove_2 {\n	""1"" [label=""$stack10 = $stack9 cmp 0L""];\n	""2"" [label=""$stack100 = $stack99 cmp 0L""];\n	""3"" [label=""$stack101 = 0""];\n	""4"" [label=""$stack101 = 1""];\n	""5"" [label=""$stack102 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec30>""];\n	""6"" [label=""$stack103 = $stack102[i2]""];\n	""7"" [label=""$stack104 = $stack103 & l2""];\n	""8"" [label=""$stack105 = $stack104 cmp 0L""];\n	""9"" [label=""$stack106 = 0""];\n	""10"" [label=""$stack106 = 1""];\n	""11"" [label=""$stack107 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec29>""];\n	""12"" [label=""$stack108 = $stack107[i2]""];\n	""13"" [label=""$stack109 = $stack108 & l2""];\n	""14"" [label=""$stack11 = 0""];\n	""15"" [label=""$stack11 = 1""];\n	""16"" [label=""$stack110 = $stack109 cmp 0L""];\n	""17"" [label=""$stack111 = 0""];\n	""18"" [label=""$stack111 = 1""];\n	""19"" [label=""$stack112 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec28>""];\n	""20"" [label=""$stack113 = $stack112[i2]""];\n	""21"" [label=""$stack114 = $stack113 & l2""];\n	""22"" [label=""$stack115 = $stack114 cmp 0L""];\n	""23"" [label=""$stack116 = 0""];\n	""24"" [label=""$stack116 = 1""];\n	""25"" [label=""$stack117 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec5>""];\n	""26"" [label=""$stack118 = $stack117[i2]""];\n	""27"" [label=""$stack119 = $stack118 & l2""];\n	""28"" [label=""$stack12 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec25>""];\n	""29"" [label=""$stack120 = $stack119 cmp 0L""];\n	""30"" [label=""$stack121 = 0""];\n	""31"" [label=""$stack121 = 1""];\n	""32"" [label=""$stack122 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec27>""];\n	""33"" [label=""$stack123 = $stack122[i2]""];\n	""34"" [label=""$stack124 = $stack123 & l2""];\n	""35"" [label=""$stack125 = $stack124 cmp 0L""];\n	""36"" [label=""$stack126 = 0""];\n	""37"" [label=""$stack126 = 1""];\n	""38"" [label=""$stack127 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec3>""];\n	""39"" [label=""$stack128 = $stack127[i1]""];\n	""40"" [label=""$stack129 = $stack128 & l1""];\n	""41"" [label=""$stack13 = $stack12[i2]""];\n	""42"" [label=""$stack130 = $stack129 cmp 0L""];\n	""43"" [label=""$stack14 = $stack13 & l2""];\n	""44"" [label=""$stack15 = $stack14 cmp 0L""];\n	""45"" [label=""$stack16 = 0""];\n	""46"" [label=""$stack16 = 1""];\n	""47"" [label=""$stack17 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec24>""];\n	""48"" [label=""$stack18 = $stack17[i2]""];\n	""49"" [label=""$stack19 = $stack18 & l2""];\n	""50"" [label=""$stack20 = $stack19 cmp 0L""];\n	""51"" [label=""$stack21 = 0""];\n	""52"" [label=""$stack21 = 1""];\n	""53"" [label=""$stack22 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec41>""];\n	""54"" [label=""$stack23 = $stack22[i2]""];\n	""55"" [label=""$stack24 = $stack23 & l2""];\n	""56"" [label=""$stack25 = $stack24 cmp 0L""];\n	""57"" [label=""$stack26 = 0""];\n	""58"" [label=""$stack26 = 1""];\n	""59"" [label=""$stack27 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec22>""];\n	""60"" [label=""$stack28 = $stack27[i2]""];\n	""61"" [label=""$stack29 = $stack28 & l2""];\n	""62"" [label=""$stack30 = $stack29 cmp 0L""];\n	""63"" [label=""$stack31 = 0""];\n	""64"" [label=""$stack31 = 1""];\n	""65"" [label=""$stack32 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec40>""];\n	""66"" [label=""$stack33 = $stack32[i2]""];\n	""67"" [label=""$stack34 = $stack33 & l2""];\n	""68"" [label=""$stack35 = $stack34 cmp 0L""];\n	""69"" [label=""$stack36 = 0""];\n	""70"" [label=""$stack36 = 1""];\n	""71"" [label=""$stack37 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec21>""];\n	""72"" [label=""$stack38 = $stack37[i2]""];\n	""73"" [label=""$stack39 = $stack38 & l2""];\n	""74"" [label=""$stack40 = $stack39 cmp 0L""];\n	""75"" [label=""$stack41 = 0""];\n	""76"" [label=""$stack41 = 1""];\n	""77"" [label=""$stack42 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec20>""];\n	""78"" [label=""$stack43 = $stack42[i2]""];\n	""79"" [label=""$stack44 = $stack43 & l2""];\n	""80"" [label=""$stack45 = $stack44 cmp 0L""];\n	""81"" [label=""$stack46 = 0""];\n	""82"" [label=""$stack46 = 1""];\n	""83"" [label=""$stack47 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec19>""];\n	""84"" [label=""$stack48 = $stack47[i2]""];\n	""85"" [label=""$stack49 = $stack48 & l2""];\n	""86"" [label=""$stack50 = $stack49 cmp 0L""];\n	""87"" [label=""$stack51 = 0""];\n	""88"" [label=""$stack51 = 1""];\n	""89"" [label=""$stack52 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec18>""];\n	""90"" [label=""$stack53 = $stack52[i2]""];\n	""91"" [label=""$stack54 = $stack53 & l2""];\n	""92"" [label=""$stack55 = $stack54 cmp 0L""];\n	""93"" [label=""$stack56 = 0""];\n	""94"" [label=""$stack56 = 1""];\n	""95"" [label=""$stack57 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec39>""];\n	""96"" [label=""$stack58 = $stack57[i2]""];\n	""97"" [label=""$stack59 = $stack58 & l2""];\n	""98"" [label=""$stack60 = $stack59 cmp 0L""];\n	""99"" [label=""$stack61 = 0""];\n	""100"" [label=""$stack61 = 1""];\n	""101"" [label=""$stack62 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec38>""];\n	""102"" [label=""$stack63 = $stack62[i2]""];\n	""103"" [label=""$stack64 = $stack63 & l2""];\n	""104"" [label=""$stack65 = $stack64 cmp 0L""];\n	""105"" [label=""$stack66 = 0""];\n	""106"" [label=""$stack66 = 1""];\n	""107"" [label=""$stack67 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec37>""];\n	""108"" [label=""$stack68 = $stack67[i2]""];\n	""109"" [label=""$stack69 = $stack68 & l2""];\n	""110"" [label=""$stack7 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec26>""];\n	""111"" [label=""$stack70 = $stack69 cmp 0L""];\n	""112"" [label=""$stack71 = 0""];\n	""113"" [label=""$stack71 = 1""];\n	""114"" [label=""$stack72 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec36>""];\n	""115"" [label=""$stack73 = $stack72[i2]""];\n	""116"" [label=""$stack74 = $stack73 & l2""];\n	""117"" [label=""$stack75 = $stack74 cmp 0L""];\n	""118"" [label=""$stack76 = 0""];\n	""119"" [label=""$stack76 = 1""];\n	""120"" [label=""$stack77 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec35>""];\n	""121"" [label=""$stack78 = $stack77[i2]""];\n	""122"" [label=""$stack79 = $stack78 & l2""];\n	""123"" [label=""$stack8 = $stack7[i2]""];\n	""124"" [label=""$stack80 = $stack79 cmp 0L""];\n	""125"" [label=""$stack81 = 0""];\n	""126"" [label=""$stack81 = 1""];\n	""127"" [label=""$stack82 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec34>""];\n	""128"" [label=""$stack83 = $stack82[i2]""];\n	""129"" [label=""$stack84 = $stack83 & l2""];\n	""130"" [label=""$stack85 = $stack84 cmp 0L""];\n	""131"" [label=""$stack86 = 0""];\n	""132"" [label=""$stack86 = 1""];\n	""133"" [label=""$stack87 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec33>""];\n	""134"" [label=""$stack88 = $stack87[i2]""];\n	""135"" [label=""$stack89 = $stack88 & l2""];\n	""136"" [label=""$stack9 = $stack8 & l2""];\n	""137"" [label=""$stack90 = $stack89 cmp 0L""];\n	""138"" [label=""$stack91 = 0""];\n	""139"" [label=""$stack91 = 1""];\n	""140"" [label=""$stack92 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec32>""];\n	""141"" [label=""$stack93 = $stack92[i2]""];\n	""142"" [label=""$stack94 = $stack93 & l2""];\n	""143"" [label=""$stack95 = $stack94 cmp 0L""];\n	""144"" [label=""$stack96 = 0""];\n	""145"" [label=""$stack96 = 1""];\n	""146"" [label=""$stack97 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjbitVec31>""];\n	""147"" [label=""$stack98 = $stack97[i2]""];\n	""148"" [label=""$stack99 = $stack98 & l2""];\n	""149"" [label=""goto""];\n	""150"" [label=""goto""];\n	""151"" [label=""goto""];\n	""152"" [label=""goto""];\n	""153"" [label=""goto""];\n	""154"" [label=""goto""];\n	""155"" [label=""goto""];\n	""156"" [label=""goto""];\n	""157"" [label=""goto""];\n	""158"" [label=""goto""];\n	""159"" [label=""goto""];\n	""160"" [label=""goto""];\n	""161"" [label=""goto""];\n	""162"" [label=""goto""];\n	""163"" [label=""goto""];\n	""164"" [label=""goto""];\n	""165"" [label=""goto""];\n	""166"" [label=""goto""];\n	""167"" [label=""goto""];\n	""168"" [label=""goto""];\n	""169"" [label=""goto""];\n	""170"" [label=""goto""];\n	""171"" [label=""goto""];\n	""172"" [label=""goto""];\n	""173"" [label=""hiByte := @parameter0: int""];\n	""174"" [label=""i1 := @parameter1: int""];\n	""175"" [label=""i2 := @parameter2: int""];\n	""176"" [label=""if $stack10 == 0""];\n	""177"" [label=""if $stack100 == 0""];\n	""178"" [label=""if $stack105 == 0""];\n	""179"" [label=""if $stack110 == 0""];\n	""180"" [label=""if $stack115 == 0""];\n	""181"" [label=""if $stack120 == 0""];\n	""182"" [label=""if $stack125 == 0""];\n	""183"" [label=""if $stack130 == 0""];\n	""184"" [label=""if $stack15 == 0""];\n	""185"" [label=""if $stack20 == 0""];\n	""186"" [label=""if $stack25 == 0""];\n	""187"" [label=""if $stack30 == 0""];\n	""188"" [label=""if $stack35 == 0""];\n	""189"" [label=""if $stack40 == 0""];\n	""190"" [label=""if $stack45 == 0""];\n	""191"" [label=""if $stack50 == 0""];\n	""192"" [label=""if $stack55 == 0""];\n	""193"" [label=""if $stack60 == 0""];\n	""194"" [label=""if $stack65 == 0""];\n	""195"" [label=""if $stack70 == 0""];\n	""196"" [label=""if $stack75 == 0""];\n	""197"" [label=""if $stack80 == 0""];\n	""198"" [label=""if $stack85 == 0""];\n	""199"" [label=""if $stack90 == 0""];\n	""200"" [label=""if $stack95 == 0""];\n	""201"" [label=""l1 := @parameter3: long""];\n	""202"" [label=""l2 := @parameter4: long""];\n	""203"" [label=""return $stack101""];\n	""204"" [label=""return $stack106""];\n	""205"" [label=""return $stack11""];\n	""206"" [label=""return $stack111""];\n	""207"" [label=""return $stack116""];\n	""208"" [label=""return $stack121""];\n	""209"" [label=""return $stack126""];\n	""210"" [label=""return $stack16""];\n	""211"" [label=""return $stack21""];\n	""212"" [label=""return $stack26""];\n	""213"" [label=""return $stack31""];\n	""214"" [label=""return $stack36""];\n	""215"" [label=""return $stack41""];\n	""216"" [label=""return $stack46""];\n	""217"" [label=""return $stack51""];\n	""218"" [label=""return $stack56""];\n	""219"" [label=""return $stack61""];\n	""220"" [label=""return $stack66""];\n	""221"" [label=""return $stack71""];\n	""222"" [label=""return $stack76""];\n	""223"" [label=""return $stack81""];\n	""224"" [label=""return $stack86""];\n	""225"" [label=""return $stack91""];\n	""226"" [label=""return $stack96""];\n	""227"" [label=""return 0""];\n	""228"" [label=""return 1""];\n	""229"" [label=""switch(hiByte) \{     case 0:     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 30:     case 31:     case 32:     case 33:     case 48:     case 49:     case 159:     case 215:     default:  \}""];\n	""1"" -> ""176""[label=""cfg_next""];\n	""10"" -> ""153""[label=""cfg_next""];\n	""100"" -> ""162""[label=""cfg_next""];\n	""101"" -> ""102""[label=""cfg_next""];\n	""102"" -> ""103""[label=""cfg_next""];\n	""103"" -> ""104""[label=""cfg_next""];\n	""104"" -> ""194""[label=""cfg_next""];\n	""105"" -> ""220""[label=""cfg_next""];\n	""106"" -> ""161""[label=""cfg_next""];\n	""107"" -> ""108""[label=""cfg_next""];\n	""108"" -> ""109""[label=""cfg_next""];\n	""109"" -> ""111""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""110"" -> ""123""[label=""cfg_next""];\n	""111"" -> ""195""[label=""cfg_next""];\n	""112"" -> ""221""[label=""cfg_next""];\n	""113"" -> ""160""[label=""cfg_next""];\n	""114"" -> ""115""[label=""cfg_next""];\n	""115"" -> ""116""[label=""cfg_next""];\n	""116"" -> ""117""[label=""cfg_next""];\n	""117"" -> ""196""[label=""cfg_next""];\n	""118"" -> ""222""[label=""cfg_next""];\n	""119"" -> ""159""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""120"" -> ""121""[label=""cfg_next""];\n	""121"" -> ""122""[label=""cfg_next""];\n	""122"" -> ""124""[label=""cfg_next""];\n	""123"" -> ""136""[label=""cfg_next""];\n	""124"" -> ""197""[label=""cfg_next""];\n	""125"" -> ""223""[label=""cfg_next""];\n	""126"" -> ""158""[label=""cfg_next""];\n	""127"" -> ""128""[label=""cfg_next""];\n	""128"" -> ""129""[label=""cfg_next""];\n	""129"" -> ""130""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""130"" -> ""198""[label=""cfg_next""];\n	""131"" -> ""224""[label=""cfg_next""];\n	""132"" -> ""157""[label=""cfg_next""];\n	""133"" -> ""134""[label=""cfg_next""];\n	""134"" -> ""135""[label=""cfg_next""];\n	""135"" -> ""137""[label=""cfg_next""];\n	""136"" -> ""1""[label=""cfg_next""];\n	""137"" -> ""199""[label=""cfg_next""];\n	""138"" -> ""225""[label=""cfg_next""];\n	""139"" -> ""156""[label=""cfg_next""];\n	""14"" -> ""205""[label=""cfg_next""];\n	""140"" -> ""141""[label=""cfg_next""];\n	""141"" -> ""142""[label=""cfg_next""];\n	""142"" -> ""143""[label=""cfg_next""];\n	""143"" -> ""200""[label=""cfg_next""];\n	""144"" -> ""226""[label=""cfg_next""];\n	""145"" -> ""155""[label=""cfg_next""];\n	""146"" -> ""147""[label=""cfg_next""];\n	""147"" -> ""148""[label=""cfg_next""];\n	""148"" -> ""2""[label=""cfg_next""];\n	""149"" -> ""209""[label=""cfg_goto""];\n	""15"" -> ""172""[label=""cfg_next""];\n	""150"" -> ""208""[label=""cfg_goto""];\n	""151"" -> ""207""[label=""cfg_goto""];\n	""152"" -> ""206""[label=""cfg_goto""];\n	""153"" -> ""204""[label=""cfg_goto""];\n	""154"" -> ""203""[label=""cfg_goto""];\n	""155"" -> ""226""[label=""cfg_goto""];\n	""156"" -> ""225""[label=""cfg_goto""];\n	""157"" -> ""224""[label=""cfg_goto""];\n	""158"" -> ""223""[label=""cfg_goto""];\n	""159"" -> ""222""[label=""cfg_goto""];\n	""16"" -> ""179""[label=""cfg_next""];\n	""160"" -> ""221""[label=""cfg_goto""];\n	""161"" -> ""220""[label=""cfg_goto""];\n	""162"" -> ""219""[label=""cfg_goto""];\n	""163"" -> ""218""[label=""cfg_goto""];\n	""164"" -> ""217""[label=""cfg_goto""];\n	""165"" -> ""216""[label=""cfg_goto""];\n	""166"" -> ""215""[label=""cfg_goto""];\n	""167"" -> ""214""[label=""cfg_goto""];\n	""168"" -> ""213""[label=""cfg_goto""];\n	""169"" -> ""212""[label=""cfg_goto""];\n	""17"" -> ""206""[label=""cfg_next""];\n	""170"" -> ""211""[label=""cfg_goto""];\n	""171"" -> ""210""[label=""cfg_goto""];\n	""172"" -> ""205""[label=""cfg_goto""];\n	""173"" -> ""174""[label=""cfg_next""];\n	""174"" -> ""175""[label=""cfg_next""];\n	""175"" -> ""201""[label=""cfg_next""];\n	""176"" -> ""14""[label=""cfg_true""];\n	""176"" -> ""15""[label=""cfg_false""];\n	""177"" -> ""3""[label=""cfg_true""];\n	""177"" -> ""4""[label=""cfg_false""];\n	""178"" -> ""10""[label=""cfg_false""];\n	""178"" -> ""9""[label=""cfg_true""];\n	""179"" -> ""17""[label=""cfg_true""];\n	""179"" -> ""18""[label=""cfg_false""];\n	""18"" -> ""152""[label=""cfg_next""];\n	""180"" -> ""23""[label=""cfg_true""];\n	""180"" -> ""24""[label=""cfg_false""];\n	""181"" -> ""30""[label=""cfg_true""];\n	""181"" -> ""31""[label=""cfg_false""];\n	""182"" -> ""36""[label=""cfg_true""];\n	""182"" -> ""37""[label=""cfg_false""];\n	""183"" -> ""227""[label=""cfg_true""];\n	""183"" -> ""228""[label=""cfg_false""];\n	""184"" -> ""45""[label=""cfg_true""];\n	""184"" -> ""46""[label=""cfg_false""];\n	""185"" -> ""51""[label=""cfg_true""];\n	""185"" -> ""52""[label=""cfg_false""];\n	""186"" -> ""57""[label=""cfg_true""];\n	""186"" -> ""58""[label=""cfg_false""];\n	""187"" -> ""63""[label=""cfg_true""];\n	""187"" -> ""64""[label=""cfg_false""];\n	""188"" -> ""69""[label=""cfg_true""];\n	""188"" -> ""70""[label=""cfg_false""];\n	""189"" -> ""75""[label=""cfg_true""];\n	""189"" -> ""76""[label=""cfg_false""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""190"" -> ""81""[label=""cfg_true""];\n	""190"" -> ""82""[label=""cfg_false""];\n	""191"" -> ""87""[label=""cfg_true""];\n	""191"" -> ""88""[label=""cfg_false""];\n	""192"" -> ""93""[label=""cfg_true""];\n	""192"" -> ""94""[label=""cfg_false""];\n	""193"" -> ""100""[label=""cfg_false""];\n	""193"" -> ""99""[label=""cfg_true""];\n	""194"" -> ""105""[label=""cfg_true""];\n	""194"" -> ""106""[label=""cfg_false""];\n	""195"" -> ""112""[label=""cfg_true""];\n	""195"" -> ""113""[label=""cfg_false""];\n	""196"" -> ""118""[label=""cfg_true""];\n	""196"" -> ""119""[label=""cfg_false""];\n	""197"" -> ""125""[label=""cfg_true""];\n	""197"" -> ""126""[label=""cfg_false""];\n	""198"" -> ""131""[label=""cfg_true""];\n	""198"" -> ""132""[label=""cfg_false""];\n	""199"" -> ""138""[label=""cfg_true""];\n	""199"" -> ""139""[label=""cfg_false""];\n	""2"" -> ""177""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""200"" -> ""144""[label=""cfg_true""];\n	""200"" -> ""145""[label=""cfg_false""];\n	""201"" -> ""202""[label=""cfg_next""];\n	""202"" -> ""229""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""180""[label=""cfg_next""];\n	""229"" -> ""101""[label=""cfg_switch""];\n	""229"" -> ""107""[label=""cfg_switch""];\n	""229"" -> ""11""[label=""cfg_switch""];\n	""229"" -> ""110""[label=""cfg_switch""];\n	""229"" -> ""114""[label=""cfg_switch""];\n	""229"" -> ""120""[label=""cfg_switch""];\n	""229"" -> ""127""[label=""cfg_switch""];\n	""229"" -> ""133""[label=""cfg_switch""];\n	""229"" -> ""140""[label=""cfg_switch""];\n	""229"" -> ""146""[label=""cfg_switch""];\n	""229"" -> ""19""[label=""cfg_switch""];\n	""229"" -> ""25""[label=""cfg_switch""];\n	""229"" -> ""28""[label=""cfg_switch""];\n	""229"" -> ""32""[label=""cfg_switch""];\n	""229"" -> ""38""[label=""cfg_switch""];\n	""229"" -> ""47""[label=""cfg_switch""];\n	""229"" -> ""5""[label=""cfg_switch""];\n	""229"" -> ""53""[label=""cfg_switch""];\n	""229"" -> ""59""[label=""cfg_switch""];\n	""229"" -> ""65""[label=""cfg_switch""];\n	""229"" -> ""71""[label=""cfg_switch""];\n	""229"" -> ""77""[label=""cfg_switch""];\n	""229"" -> ""83""[label=""cfg_switch""];\n	""229"" -> ""89""[label=""cfg_switch""];\n	""229"" -> ""95""[label=""cfg_switch""];\n	""23"" -> ""207""[label=""cfg_next""];\n	""24"" -> ""151""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""41""[label=""cfg_next""];\n	""29"" -> ""181""[label=""cfg_next""];\n	""3"" -> ""203""[label=""cfg_next""];\n	""30"" -> ""208""[label=""cfg_next""];\n	""31"" -> ""150""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""34""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""182""[label=""cfg_next""];\n	""36"" -> ""209""[label=""cfg_next""];\n	""37"" -> ""149""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""154""[label=""cfg_next""];\n	""40"" -> ""42""[label=""cfg_next""];\n	""41"" -> ""43""[label=""cfg_next""];\n	""42"" -> ""183""[label=""cfg_next""];\n	""43"" -> ""44""[label=""cfg_next""];\n	""44"" -> ""184""[label=""cfg_next""];\n	""45"" -> ""210""[label=""cfg_next""];\n	""46"" -> ""171""[label=""cfg_next""];\n	""47"" -> ""48""[label=""cfg_next""];\n	""48"" -> ""49""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""185""[label=""cfg_next""];\n	""51"" -> ""211""[label=""cfg_next""];\n	""52"" -> ""170""[label=""cfg_next""];\n	""53"" -> ""54""[label=""cfg_next""];\n	""54"" -> ""55""[label=""cfg_next""];\n	""55"" -> ""56""[label=""cfg_next""];\n	""56"" -> ""186""[label=""cfg_next""];\n	""57"" -> ""212""[label=""cfg_next""];\n	""58"" -> ""169""[label=""cfg_next""];\n	""59"" -> ""60""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""61""[label=""cfg_next""];\n	""61"" -> ""62""[label=""cfg_next""];\n	""62"" -> ""187""[label=""cfg_next""];\n	""63"" -> ""213""[label=""cfg_next""];\n	""64"" -> ""168""[label=""cfg_next""];\n	""65"" -> ""66""[label=""cfg_next""];\n	""66"" -> ""67""[label=""cfg_next""];\n	""67"" -> ""68""[label=""cfg_next""];\n	""68"" -> ""188""[label=""cfg_next""];\n	""69"" -> ""214""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""167""[label=""cfg_next""];\n	""71"" -> ""72""[label=""cfg_next""];\n	""72"" -> ""73""[label=""cfg_next""];\n	""73"" -> ""74""[label=""cfg_next""];\n	""74"" -> ""189""[label=""cfg_next""];\n	""75"" -> ""215""[label=""cfg_next""];\n	""76"" -> ""166""[label=""cfg_next""];\n	""77"" -> ""78""[label=""cfg_next""];\n	""78"" -> ""79""[label=""cfg_next""];\n	""79"" -> ""80""[label=""cfg_next""];\n	""8"" -> ""178""[label=""cfg_next""];\n	""80"" -> ""190""[label=""cfg_next""];\n	""81"" -> ""216""[label=""cfg_next""];\n	""82"" -> ""165""[label=""cfg_next""];\n	""83"" -> ""84""[label=""cfg_next""];\n	""84"" -> ""85""[label=""cfg_next""];\n	""85"" -> ""86""[label=""cfg_next""];\n	""86"" -> ""191""[label=""cfg_next""];\n	""87"" -> ""217""[label=""cfg_next""];\n	""88"" -> ""164""[label=""cfg_next""];\n	""89"" -> ""90""[label=""cfg_next""];\n	""9"" -> ""204""[label=""cfg_next""];\n	""90"" -> ""91""[label=""cfg_next""];\n	""91"" -> ""92""[label=""cfg_next""];\n	""92"" -> ""192""[label=""cfg_next""];\n	""93"" -> ""218""[label=""cfg_next""];\n	""94"" -> ""163""[label=""cfg_next""];\n	""95"" -> ""96""[label=""cfg_next""];\n	""96"" -> ""97""[label=""cfg_next""];\n	""97"" -> ""98""[label=""cfg_next""];\n	""98"" -> ""193""[label=""cfg_next""];\n	""99"" -> ""219""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.ReInit(SimpleCharStream),Method,No Comment,public void ReInit(final SimpleCharStream stream) {\n    jjmatchedPos = jjnewStateCnt = 0;\n    curLexState = defaultLexState;\n    input_stream = stream;\n    ReInitRounds();\n},void ReInit(org.apache.commons.jxpath.ri.parser.SimpleCharStream),"digraph cfg_ReInit {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int defaultLexState>""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void ReInitRounds()>()""];\n	""4"" [label=""stream := @parameter0: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int curLexState> = $stack2""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 0""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjnewStateCnt> = 0""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream> = stream""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.ReInitRounds(),Method,No Comment,private void ReInitRounds() {\n    int i;\n    jjround = 0x80000001;\n    for (i = 13; i-- > 0; ) {\n        jjrounds[i] = 0x80000000;\n    }\n},void ReInitRounds(),"digraph cfg_ReInitRounds {\n	""1"" [label=""$stack2 = i""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjrounds>""];\n	""3"" [label=""$stack3[i] = -2147483648""];\n	""4"" [label=""goto""];\n	""5"" [label=""i = 13""];\n	""6"" [label=""i = i + -1""];\n	""7"" [label=""if $stack2 <= 0""];\n	""8"" [label=""return""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjround> = -2147483647""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_true""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.ReInit(SimpleCharStream,int)",Method,No Comment,"public void ReInit(final SimpleCharStream stream, final int lexState) {\n    ReInit(stream);\n    SwitchTo(lexState);\n}","void ReInit(org.apache.commons.jxpath.ri.parser.SimpleCharStream,int)","digraph cfg_ReInit {\n	""1"" [label=""lexState := @parameter1: int""];\n	""2"" [label=""return""];\n	""3"" [label=""stream := @parameter0: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""5"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void ReInit(org.apache.commons.jxpath.ri.parser.SimpleCharStream)>(stream)""];\n	""6"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void SwitchTo(int)>(lexState)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.SwitchTo(int),Method,No Comment,"public void SwitchTo(final int lexState) {\n    if (lexState >= 1 || lexState < 0) {\n        throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE);\n    }\n    curLexState = lexState;\n}",void SwitchTo(int),"digraph cfg_SwitchTo {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Error: Ignoring invalid lexical state : \"")""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(lexState)""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"". State unchanged.\"")""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack7 = new org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""7"" [label=""if lexState >= 0""];\n	""8"" [label=""if lexState >= 1""];\n	""9"" [label=""lexState := @parameter0: int""];\n	""10"" [label=""return""];\n	""11"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""12"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.parser.TokenMgrError: void <init>(java.lang.String,int)>($stack6, 2)""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int curLexState> = lexState""];\n	""15"" [label=""throw $stack7""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_true""];\n	""7"" -> ""6""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_true""];\n	""8"" -> ""7""[label=""cfg_false""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.jjFillToken(),Method,No Comment,protected Token jjFillToken() {\n    final Token t = Token.newToken(jjmatchedKind);\n    t.kind = jjmatchedKind;\n    final String im = jjstrLiteralImages[jjmatchedKind];\n    t.image = im == null ? input_stream.GetImage() : im;\n    t.beginLine = input_stream.getBeginLine();\n    t.beginColumn = input_stream.getBeginColumn();\n    t.endLine = input_stream.getEndLine();\n    t.endColumn = input_stream.getEndColumn();\n    return t;\n},org.apache.commons.jxpath.ri.parser.Token jjFillToken(),"digraph cfg_jjFillToken {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int getBeginColumn()>()""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int getEndLine()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int getEndColumn()>()""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""7"" [label=""$stack16 = im""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: java.lang.String GetImage()>()""];\n	""9"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind>""];\n	""10"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind>""];\n	""11"" [label=""$stack5 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: java.lang.String[] jjstrLiteralImages>""];\n	""12"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind>""];\n	""13"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""14"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int getBeginLine()>()""];\n	""15"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""16"" [label=""goto""];\n	""17"" [label=""if im != null""];\n	""18"" [label=""im = $stack5[$stack6]""];\n	""19"" [label=""return t""];\n	""20"" [label=""t = staticinvoke <org.apache.commons.jxpath.ri.parser.Token: org.apache.commons.jxpath.ri.parser.Token newToken(int)>($stack3)""];\n	""21"" [label=""t.<org.apache.commons.jxpath.ri.parser.Token: int beginColumn> = $stack10""];\n	""22"" [label=""t.<org.apache.commons.jxpath.ri.parser.Token: int beginLine> = $stack8""];\n	""23"" [label=""t.<org.apache.commons.jxpath.ri.parser.Token: int endColumn> = $stack14""];\n	""24"" [label=""t.<org.apache.commons.jxpath.ri.parser.Token: int endLine> = $stack12""];\n	""25"" [label=""t.<org.apache.commons.jxpath.ri.parser.Token: int kind> = $stack4""];\n	""26"" [label=""t.<org.apache.commons.jxpath.ri.parser.Token: java.lang.String image> = $stack16""];\n	""27"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""1"" -> ""21""[label=""cfg_next""];\n	""10"" -> ""25""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""22""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""26""[label=""cfg_goto""];\n	""17"" -> ""6""[label=""cfg_false""];\n	""17"" -> ""7""[label=""cfg_true""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_next""];\n	""21"" -> ""2""[label=""cfg_next""];\n	""22"" -> ""15""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""24"" -> ""4""[label=""cfg_next""];\n	""25"" -> ""11""[label=""cfg_next""];\n	""26"" -> ""13""[label=""cfg_next""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""26""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.getNextToken(),Method,No Comment,"public Token getNextToken() {\n    Token matchedToken;\n    int curPos = 0;\n    EOFLoop: for (; ; ) {\n        try {\n            curChar = input_stream.BeginToken();\n        } catch (final java.io.IOException e) {\n            jjmatchedKind = 0;\n            matchedToken = jjFillToken();\n            return matchedToken;\n        }\n        try {\n            input_stream.backup(0);\n            while (curChar <= 32 && (0x100003600L & 1L << curChar) != 0L) {\n                curChar = input_stream.BeginToken();\n            }\n        } catch (final java.io.IOException e1) {\n            continue EOFLoop;\n        }\n        jjmatchedKind = 0x7fffffff;\n        jjmatchedPos = 0;\n        curPos = jjMoveStringLiteralDfa0_0();\n        if (jjmatchedKind != 0x7fffffff) {\n            if (jjmatchedPos + 1 < curPos) {\n                input_stream.backup(curPos - jjmatchedPos - 1);\n            }\n            if ((jjtoToken[jjmatchedKind >> 6] & 1L << (jjmatchedKind & 077)) != 0L) {\n                matchedToken = jjFillToken();\n                return matchedToken;\n            }\n            continue EOFLoop;\n        }\n        int error_line = input_stream.getEndLine();\n        int error_column = input_stream.getEndColumn();\n        String error_after = null;\n        boolean EOFSeen = false;\n        try {\n            input_stream.readChar();\n            input_stream.backup(1);\n        } catch (final java.io.IOException e1) {\n            EOFSeen = true;\n            error_after = curPos <= 1 ? """" : input_stream.GetImage();\n            if (curChar == '\n' || curChar == '\r') {\n                error_line++;\n                error_column = 0;\n            } else {\n                error_column++;\n            }\n        }\n        if (!EOFSeen) {\n            input_stream.backup(1);\n            error_after = curPos <= 1 ? """" : input_stream.GetImage();\n        }\n        throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);\n    }\n}",org.apache.commons.jxpath.ri.parser.Token getNextToken(),"digraph cfg_getNextToken {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int curLexState>""];\n	""10"" [label=""$stack19 = new org.apache.commons.jxpath.ri.parser.TokenMgrError""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""12"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""14"" [label=""$stack23 = $stack22 + 1""];\n	""15"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind>""];\n	""16"" [label=""$stack25 = <org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: long[] jjtoToken>""];\n	""17"" [label=""$stack26 = $stack24 >> 6""];\n	""18"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind>""];\n	""19"" [label=""$stack28 = $stack27 & 63""];\n	""20"" [label=""$stack29 = $stack25[$stack26]""];\n	""21"" [label=""$stack30 = 1L << $stack28""];\n	""22"" [label=""$stack31 = $stack29 & $stack30""];\n	""23"" [label=""$stack32 = $stack31 cmp 0L""];\n	""24"" [label=""$stack33 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos>""];\n	""25"" [label=""$stack34 = curPos - $stack33""];\n	""26"" [label=""$stack35 = $stack34 - 1""];\n	""27"" [label=""$stack36 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""28"" [label=""$stack37 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""29"" [label=""$stack38 = 1L << $stack37""];\n	""30"" [label=""$stack39 = 4294981120L & $stack38""];\n	""31"" [label=""$stack40 = $stack39 cmp 0L""];\n	""32"" [label=""$stack41 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""33"" [label=""$stack42 = virtualinvoke $stack41.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char BeginToken()>()""];\n	""34"" [label=""$stack43 := @caughtexception""];\n	""35"" [label=""$stack44 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""36"" [label=""$stack45 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""37"" [label=""$stack46 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar>""];\n	""38"" [label=""$stack47 := @caughtexception""];\n	""39"" [label=""$stack48 := @caughtexception""];\n	""40"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream>""];\n	""41"" [label=""$stack9 = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char BeginToken()>()""];\n	""42"" [label=""EOFSeen = 0""];\n	""43"" [label=""EOFSeen = 1""];\n	""44"" [label=""curPos = 0""];\n	""45"" [label=""curPos = specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjMoveStringLiteralDfa0_0()>()""];\n	""46"" [label=""e = $stack47""];\n	""47"" [label=""e = $stack48""];\n	""48"" [label=""e = e + 1""];\n	""49"" [label=""e = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int getEndLine()>()""];\n	""50"" [label=""e1 = $stack43""];\n	""51"" [label=""error_after = \""\""""];\n	""52"" [label=""error_after = \""\""""];\n	""53"" [label=""error_after = null""];\n	""54"" [label=""error_after = virtualinvoke $stack21.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: java.lang.String GetImage()>()""];\n	""55"" [label=""error_after = virtualinvoke $stack44.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: java.lang.String GetImage()>()""];\n	""56"" [label=""error_column = 0""];\n	""57"" [label=""error_column = error_column + 1""];\n	""58"" [label=""error_column = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: int getEndColumn()>()""];\n	""59"" [label=""goto""];\n	""60"" [label=""goto""];\n	""61"" [label=""goto""];\n	""62"" [label=""goto""];\n	""63"" [label=""goto""];\n	""64"" [label=""goto""];\n	""65"" [label=""goto""];\n	""66"" [label=""goto""];\n	""67"" [label=""if $stack11 > 32""];\n	""68"" [label=""if $stack12 == 2147483647""];\n	""69"" [label=""if $stack23 >= curPos""];\n	""70"" [label=""if $stack32 == 0""];\n	""71"" [label=""if $stack40 == 0""];\n	""72"" [label=""if $stack45 == 10""];\n	""73"" [label=""if $stack46 != 13""];\n	""74"" [label=""if EOFSeen != 0""];\n	""75"" [label=""if curPos > 1""];\n	""76"" [label=""if curPos > 1""];\n	""77"" [label=""matchedToken = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token jjFillToken()>()""];\n	""78"" [label=""matchedToken = virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.Token jjFillToken()>()""];\n	""79"" [label=""return matchedToken""];\n	""80"" [label=""return matchedToken""];\n	""81"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.ri.parser.TokenMgrError: void <init>(boolean,int,int,int,java.lang.String,char,int)>(EOFSeen, $stack18, e, error_column, error_after, $stack17, 0)""];\n	""82"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""83"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack42""];\n	""84"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: char curChar> = $stack9""];\n	""85"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 0""];\n	""86"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedKind> = 2147483647""];\n	""87"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int jjmatchedPos> = 0""];\n	""88"" [label=""throw $stack19""];\n	""89"" [label=""virtualinvoke $stack10.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void backup(int)>(0)""];\n	""90"" [label=""virtualinvoke $stack15.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: char readChar()>()""];\n	""91"" [label=""virtualinvoke $stack16.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void backup(int)>(1)""];\n	""92"" [label=""virtualinvoke $stack20.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void backup(int)>(1)""];\n	""93"" [label=""virtualinvoke $stack36.<org.apache.commons.jxpath.ri.parser.SimpleCharStream: void backup(int)>($stack35)""];\n	""1"" -> ""38""[label=""cfg_except""];\n	""1"" -> ""89""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""92""[label=""cfg_next""];\n	""12"" -> ""54""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""69""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""38""[label=""cfg_except""];\n	""2"" -> ""67""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""70""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""93""[label=""cfg_next""];\n	""27"" -> ""24""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""38""[label=""cfg_except""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""29"" -> ""38""[label=""cfg_except""];\n	""3"" -> ""68""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""30"" -> ""38""[label=""cfg_except""];\n	""31"" -> ""38""[label=""cfg_except""];\n	""31"" -> ""71""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""32"" -> ""38""[label=""cfg_except""];\n	""33"" -> ""38""[label=""cfg_except""];\n	""33"" -> ""83""[label=""cfg_next""];\n	""34"" -> ""50""[label=""cfg_next""];\n	""35"" -> ""55""[label=""cfg_next""];\n	""36"" -> ""72""[label=""cfg_next""];\n	""37"" -> ""73""[label=""cfg_next""];\n	""38"" -> ""46""[label=""cfg_next""];\n	""39"" -> ""47""[label=""cfg_next""];\n	""4"" -> ""49""[label=""cfg_next""];\n	""40"" -> ""39""[label=""cfg_except""];\n	""40"" -> ""41""[label=""cfg_next""];\n	""41"" -> ""39""[label=""cfg_except""];\n	""41"" -> ""84""[label=""cfg_next""];\n	""42"" -> ""6""[label=""cfg_next""];\n	""43"" -> ""75""[label=""cfg_next""];\n	""44"" -> ""40""[label=""cfg_next""];\n	""45"" -> ""3""[label=""cfg_next""];\n	""46"" -> ""62""[label=""cfg_next""];\n	""47"" -> ""85""[label=""cfg_next""];\n	""48"" -> ""56""[label=""cfg_next""];\n	""49"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""58""[label=""cfg_next""];\n	""50"" -> ""43""[label=""cfg_next""];\n	""51"" -> ""64""[label=""cfg_next""];\n	""52"" -> ""66""[label=""cfg_next""];\n	""53"" -> ""42""[label=""cfg_next""];\n	""54"" -> ""10""[label=""cfg_next""];\n	""55"" -> ""36""[label=""cfg_next""];\n	""56"" -> ""65""[label=""cfg_next""];\n	""57"" -> ""74""[label=""cfg_next""];\n	""58"" -> ""53""[label=""cfg_next""];\n	""59"" -> ""1""[label=""cfg_goto""];\n	""6"" -> ""34""[label=""cfg_except""];\n	""6"" -> ""90""[label=""cfg_next""];\n	""60"" -> ""86""[label=""cfg_goto""];\n	""61"" -> ""2""[label=""cfg_goto""];\n	""61"" -> ""38""[label=""cfg_except""];\n	""62"" -> ""40""[label=""cfg_goto""];\n	""63"" -> ""74""[label=""cfg_goto""];\n	""64"" -> ""36""[label=""cfg_goto""];\n	""65"" -> ""74""[label=""cfg_goto""];\n	""66"" -> ""10""[label=""cfg_goto""];\n	""67"" -> ""28""[label=""cfg_false""];\n	""67"" -> ""38""[label=""cfg_except""];\n	""67"" -> ""60""[label=""cfg_true""];\n	""68"" -> ""13""[label=""cfg_false""];\n	""68"" -> ""4""[label=""cfg_true""];\n	""69"" -> ""16""[label=""cfg_true""];\n	""69"" -> ""27""[label=""cfg_false""];\n	""7"" -> ""34""[label=""cfg_except""];\n	""7"" -> ""91""[label=""cfg_next""];\n	""70"" -> ""40""[label=""cfg_true""];\n	""70"" -> ""78""[label=""cfg_false""];\n	""71"" -> ""32""[label=""cfg_false""];\n	""71"" -> ""38""[label=""cfg_except""];\n	""71"" -> ""60""[label=""cfg_true""];\n	""72"" -> ""37""[label=""cfg_false""];\n	""72"" -> ""48""[label=""cfg_true""];\n	""73"" -> ""48""[label=""cfg_false""];\n	""73"" -> ""57""[label=""cfg_true""];\n	""74"" -> ""10""[label=""cfg_true""];\n	""74"" -> ""11""[label=""cfg_false""];\n	""75"" -> ""35""[label=""cfg_true""];\n	""75"" -> ""51""[label=""cfg_false""];\n	""76"" -> ""12""[label=""cfg_true""];\n	""76"" -> ""52""[label=""cfg_false""];\n	""77"" -> ""79""[label=""cfg_next""];\n	""78"" -> ""80""[label=""cfg_next""];\n	""8"" -> ""81""[label=""cfg_next""];\n	""81"" -> ""88""[label=""cfg_next""];\n	""82"" -> ""44""[label=""cfg_next""];\n	""83"" -> ""38""[label=""cfg_except""];\n	""83"" -> ""61""[label=""cfg_next""];\n	""84"" -> ""39""[label=""cfg_except""];\n	""84"" -> ""59""[label=""cfg_next""];\n	""85"" -> ""77""[label=""cfg_next""];\n	""86"" -> ""87""[label=""cfg_next""];\n	""87"" -> ""45""[label=""cfg_next""];\n	""89"" -> ""2""[label=""cfg_next""];\n	""89"" -> ""38""[label=""cfg_except""];\n	""9"" -> ""8""[label=""cfg_next""];\n	""90"" -> ""34""[label=""cfg_except""];\n	""90"" -> ""7""[label=""cfg_next""];\n	""91"" -> ""34""[label=""cfg_except""];\n	""91"" -> ""63""[label=""cfg_next""];\n	""92"" -> ""76""[label=""cfg_next""];\n	""93"" -> ""16""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.<init>(SimpleCharStream),Constructor,No Comment,"public XPathParserTokenManager(final SimpleCharStream stream) {\n    if (SimpleCharStream.staticFlag) {\n        throw new Error(""ERROR: Cannot use a static CharStream class with a non-static lexical analyzer."");\n    }\n    input_stream = stream;\n}",void <init>(org.apache.commons.jxpath.ri.parser.SimpleCharStream),"digraph cfg_init {\n	""1"" [label=""$stack2 = <java.lang.System: java.io.PrintStream out>""];\n	""2"" [label=""$stack3 = newarray (int)[13]""];\n	""3"" [label=""$stack4 = newarray (int)[26]""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""6"" [label=""stream := @parameter0: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int curLexState> = 0""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int defaultLexState> = 0""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjrounds> = $stack3""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: int[] jjstateSet> = $stack4""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: java.io.PrintStream debugStream> = $stack2""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: org.apache.commons.jxpath.ri.parser.SimpleCharStream input_stream> = stream""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.parser.XPathParserTokenManager.<init>(SimpleCharStream,int)",Constructor,No Comment,"public XPathParserTokenManager(final SimpleCharStream stream, final int lexState) {\n    this(stream);\n    SwitchTo(lexState);\n}","void <init>(org.apache.commons.jxpath.ri.parser.SimpleCharStream,int)","digraph cfg_init {\n	""1"" [label=""lexState := @parameter1: int""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void <init>(org.apache.commons.jxpath.ri.parser.SimpleCharStream)>(stream)""];\n	""4"" [label=""stream := @parameter0: org.apache.commons.jxpath.ri.parser.SimpleCharStream""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.parser.XPathParserTokenManager""];\n	""6"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.parser.XPathParserTokenManager: void SwitchTo(int)>(lexState)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.getXPath(),Method,* Gets the source expression.\n     * @return String,protected String getXPath() {\n    return xpath;\n},java.lang.String getXPath(),"digraph cfg_getXPath {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.getExpression(),Method,* Gets the compiled expression.\n     * @return Expression,protected Expression getExpression() {\n    return expression;\n},org.apache.commons.jxpath.ri.compiler.Expression getExpression(),"digraph cfg_getExpression {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.toString(),Method,No Comment,@Override\npublic String toString() {\n    return xpath;\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.getValue(JXPathContext),Method,No Comment,"@Override\npublic Object getValue(final JXPathContext context) {\n    return ((JXPathContextReferenceImpl) context).getValue(xpath, expression);\n}",java.lang.Object getValue(org.apache.commons.jxpath.JXPathContext),"digraph cfg_getValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.lang.Object getValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>($stack3, $stack2)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathCompiledExpression.getValue(JXPathContext,Class)",Method,No Comment,"@Override\npublic Object getValue(final JXPathContext context, final Class requiredType) {\n    return ((JXPathContextReferenceImpl) context).getValue(xpath, expression, requiredType);\n}","java.lang.Object getValue(org.apache.commons.jxpath.JXPathContext,java.lang.Class)","digraph cfg_getValue {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack5 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.lang.Object getValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Class)>($stack4, $stack3, requiredType)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""6"" [label=""requiredType := @parameter1: java.lang.Class""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathCompiledExpression.setValue(JXPathContext,Object)",Method,No Comment,"@Override\npublic void setValue(final JXPathContext context, final Object value) {\n    ((JXPathContextReferenceImpl) context).setValue(xpath, expression, value);\n}","void setValue(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_setValue {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack5 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""return""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""7"" [label=""value := @parameter1: java.lang.Object""];\n	""8"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void setValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object)>($stack4, $stack3, value)""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.createPath(JXPathContext),Method,No Comment,"@Override\npublic Pointer createPath(final JXPathContext context) {\n    return ((JXPathContextReferenceImpl) context).createPath(xpath, expression);\n}",org.apache.commons.jxpath.Pointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer createPath(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>($stack3, $stack2)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathCompiledExpression.createPathAndSetValue(JXPathContext,Object)",Method,No Comment,"@Override\npublic Pointer createPathAndSetValue(final JXPathContext context, final Object value) {\n    return ((JXPathContextReferenceImpl) context).createPathAndSetValue(xpath, expression, value);\n}","org.apache.commons.jxpath.Pointer createPathAndSetValue(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPathAndSetValue {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack5 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer createPathAndSetValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object)>($stack4, $stack3, value)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""6"" [label=""return $stack6""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""8"" [label=""value := @parameter1: java.lang.Object""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.iterate(JXPathContext),Method,No Comment,"@Override\npublic Iterator iterate(final JXPathContext context) {\n    return ((JXPathContextReferenceImpl) context).iterate(xpath, expression);\n}",java.util.Iterator iterate(org.apache.commons.jxpath.JXPathContext),"digraph cfg_iterate {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Iterator iterate(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>($stack3, $stack2)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathCompiledExpression.getPointer(JXPathContext,String)",Method,No Comment,"@Override\npublic Pointer getPointer(final JXPathContext context, final String xpath) {\n    return ((JXPathContextReferenceImpl) context).getPointer(xpath, expression);\n}","org.apache.commons.jxpath.Pointer getPointer(org.apache.commons.jxpath.JXPathContext,java.lang.String)","digraph cfg_getPointer {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer getPointer(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack3)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""7"" [label=""xpath := @parameter1: java.lang.String""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.iteratePointers(JXPathContext),Method,No Comment,"@Override\npublic Iterator iteratePointers(final JXPathContext context) {\n    return ((JXPathContextReferenceImpl) context).iteratePointers(xpath, expression);\n}",java.util.Iterator iteratePointers(org.apache.commons.jxpath.JXPathContext),"digraph cfg_iteratePointers {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Iterator iteratePointers(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>($stack3, $stack2)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.removePath(JXPathContext),Method,No Comment,"@Override\npublic void removePath(final JXPathContext context) {\n    ((JXPathContextReferenceImpl) context).removePath(xpath, expression);\n}",void removePath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_removePath {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""return""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""7"" [label=""virtualinvoke $stack4.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void removePath(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>($stack3, $stack2)""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathCompiledExpression.removeAll(JXPathContext),Method,No Comment,"@Override\npublic void removeAll(final JXPathContext context) {\n    ((JXPathContextReferenceImpl) context).removeAll(xpath, expression);\n}",void removeAll(org.apache.commons.jxpath.JXPathContext),"digraph cfg_removeAll {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath>""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) context""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""return""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""7"" [label=""virtualinvoke $stack4.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void removeAll(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>($stack3, $stack2)""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathCompiledExpression.<init>(String,Expression)",Constructor,* Create a new JXPathCompiledExpression.\n     * @param xpath source\n     * @param expression compiled,"public JXPathCompiledExpression(final String xpath, final Expression expression) {\n    this.xpath = xpath;\n    this.expression = expression;\n}","void <init>(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""expression := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: java.lang.String xpath> = xpath""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: org.apache.commons.jxpath.ri.compiler.Expression expression> = expression""];\n	""7"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.isContainer(),Method,* This type of node is auxiliary.\n     * @return true,@Override\npublic boolean isContainer() {\n    return true;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getPropertyCount(),Method,* Number of the DP object's properties.\n     * @return int,@Override\npublic int getPropertyCount() {\n    return getPropertyNames().length;\n},int getPropertyCount(),"digraph cfg_getPropertyCount {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""2"" [label=""$stack2 = lengthof $stack1""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getPropertyNames(),Method,"* Names of all properties, sorted alphabetically.\n     * @return String[]","@Override\npublic String[] getPropertyNames() {\n    if (names == null) {\n        String[] allNames = handler.getPropertyNames(getBean());\n        names = new String[allNames.length];\n        System.arraycopy(allNames, 0, names, 0, names.length);\n        Arrays.sort(names);\n        if (requiredPropertyName != null) {\n            final int inx = Arrays.binarySearch(names, requiredPropertyName);\n            if (inx < 0) {\n                allNames = names;\n                names = new String[allNames.length + 1];\n                names[0] = requiredPropertyName;\n                System.arraycopy(allNames, 0, names, 1, allNames.length);\n                Arrays.sort(names);\n            }\n        }\n    }\n    return names;\n}",java.lang.String[] getPropertyNames(),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack10 = lengthof $stack9""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String requiredPropertyName>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String requiredPropertyName>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""7"" [label=""$stack16 = lengthof allNames""];\n	""8"" [label=""$stack17 = $stack16 + 1""];\n	""9"" [label=""$stack18 = newarray (java.lang.String)[$stack17]""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""11"" [label=""$stack19[0] = $stack20""];\n	""12"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String requiredPropertyName>""];\n	""13"" [label=""$stack21 = lengthof allNames""];\n	""14"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""15"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""16"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""17"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""18"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""19"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""20"" [label=""$stack7 = lengthof allNames""];\n	""21"" [label=""$stack8 = newarray (java.lang.String)[$stack7]""];\n	""22"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""23"" [label=""allNames = interfaceinvoke $stack5.<org.apache.commons.jxpath.DynamicPropertyHandler: java.lang.String[] getPropertyNames(java.lang.Object)>($stack6)""];\n	""24"" [label=""allNames = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""25"" [label=""if $stack13 == null""];\n	""26"" [label=""if $stack3 != null""];\n	""27"" [label=""if inx >= 0""];\n	""28"" [label=""inx = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($stack15, $stack14)""];\n	""29"" [label=""return $stack4""];\n	""30"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(allNames, 0, $stack11, 0, $stack10)""];\n	""31"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(allNames, 0, $stack22, 1, $stack21)""];\n	""32"" [label=""staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($stack12)""];\n	""33"" [label=""staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($stack23)""];\n	""34"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""35"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names> = $stack18""];\n	""36"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names> = $stack8""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""31""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""33""[label=""cfg_next""];\n	""16"" -> ""26""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""36""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""17""[label=""cfg_true""];\n	""25"" -> ""6""[label=""cfg_false""];\n	""26"" -> ""17""[label=""cfg_true""];\n	""26"" -> ""18""[label=""cfg_false""];\n	""27"" -> ""17""[label=""cfg_true""];\n	""27"" -> ""24""[label=""cfg_false""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""3"" -> ""32""[label=""cfg_next""];\n	""30"" -> ""3""[label=""cfg_next""];\n	""31"" -> ""15""[label=""cfg_next""];\n	""32"" -> ""4""[label=""cfg_next""];\n	""33"" -> ""17""[label=""cfg_next""];\n	""34"" -> ""16""[label=""cfg_next""];\n	""35"" -> ""10""[label=""cfg_next""];\n	""36"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""28""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""35""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getPropertyName(),Method,"* Returns the name of the currently selected property or ""*""\n     * if none has been selected.\n     * @return String","@Override\npublic String getPropertyName() {\n    if (name == null) {\n        final String[] names = getPropertyNames();\n        name = propertyIndex >= 0 && propertyIndex < names.length ? names[propertyIndex] : ""*"";\n    }\n    return name;\n}",java.lang.String getPropertyName(),"digraph cfg_getPropertyName {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String name>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String name>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int propertyIndex>""];\n	""4"" [label=""$stack5 = lengthof names""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int propertyIndex>""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int propertyIndex>""];\n	""7"" [label=""$stack8 = \""*\""""];\n	""8"" [label=""$stack8 = names[$stack7]""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack2 != null""];\n	""11"" [label=""if $stack4 < 0""];\n	""12"" [label=""if $stack6 >= $stack5""];\n	""13"" [label=""names = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""14"" [label=""return $stack3""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String name> = $stack8""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.setPropertyName(String),Method,"* Select a property by name.  If the supplied name is\n     * not one of the object's existing properties, it implicitly\n     * adds this name to the object's property name list. It does not\n     * set the property value though. In order to set the property\n     * value, call setValue().\n     * @param propertyName to set","@Override\npublic void setPropertyName(final String propertyName) {\n    setPropertyIndex(UNSPECIFIED_PROPERTY);\n    this.name = propertyName;\n    requiredPropertyName = propertyName;\n    if (names != null && Arrays.binarySearch(names, propertyName) < 0) {\n        names = null;\n    }\n}",void setPropertyName(java.lang.String),"digraph cfg_setPropertyName {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names>""];\n	""3"" [label=""$stack4 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($stack3, propertyName)""];\n	""4"" [label=""if $stack2 == null""];\n	""5"" [label=""if $stack4 >= 0""];\n	""6"" [label=""propertyName := @parameter0: java.lang.String""];\n	""7"" [label=""return""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String name> = propertyName""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String requiredPropertyName> = propertyName""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] names> = null""];\n	""12"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: void setPropertyIndex(int)>(-2147483648)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getPropertyIndex(),Method,* Index of the currently selected property in the list of all\n     * properties sorted alphabetically.\n     * @return int,@Override\npublic int getPropertyIndex() {\n    if (propertyIndex == UNSPECIFIED_PROPERTY) {\n        final String[] names = getPropertyNames();\n        for (int i = 0; i < names.length; i++) {\n            if (names[i].equals(name)) {\n                setPropertyIndex(i);\n                break;\n            }\n        }\n    }\n    return super.getPropertyIndex();\n},int getPropertyIndex(),"digraph cfg_getPropertyIndex {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int propertyIndex>""];\n	""2"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getPropertyIndex()>()""];\n	""3"" [label=""$stack5 = lengthof names""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String name>""];\n	""5"" [label=""$stack7 = names[i]""];\n	""6"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>($stack6)""];\n	""7"" [label=""goto""];\n	""8"" [label=""goto""];\n	""9"" [label=""i = 0""];\n	""10"" [label=""i = i + 1""];\n	""11"" [label=""if $stack3 != -2147483648""];\n	""12"" [label=""if $stack8 == 0""];\n	""13"" [label=""if i >= $stack5""];\n	""14"" [label=""names = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""15"" [label=""return $stack4""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""17"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: void setPropertyIndex(int)>(i)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_false""];\n	""11"" -> ""2""[label=""cfg_true""];\n	""12"" -> ""10""[label=""cfg_true""];\n	""12"" -> ""17""[label=""cfg_false""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_goto""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.setPropertyIndex(int),Method,* Index a property by its index in the list of all\n     * properties sorted alphabetically.\n     * @param index to set,@Override\npublic void setPropertyIndex(final int index) {\n    if (propertyIndex != index) {\n        super.setPropertyIndex(index);\n        name = null;\n    }\n},void setPropertyIndex(int),"digraph cfg_setPropertyIndex {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int propertyIndex>""];\n	""2"" [label=""if $stack2 == index""];\n	""3"" [label=""index := @parameter0: int""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyIndex(int)>(index)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String name> = null""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_true""];\n	""2"" -> ""5""[label=""cfg_false""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getBaseValue(),Method,"* Returns the value of the property, not an element of the collection\n     * represented by the property, if any.\n     * @return Object","@Override\npublic Object getBaseValue() {\n    return handler.getProperty(getBean(), getPropertyName());\n}",java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""2"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""4"" [label=""$stack4 = interfaceinvoke $stack1.<org.apache.commons.jxpath.DynamicPropertyHandler: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($stack3, $stack2)""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.getImmediateNode(),Method,"* If index == WHOLE_COLLECTION, the value of the property, otherwise\n     * the value of the index'th element of the collection represented by the\n     * property. If the property is not a collection, index should be zero\n     * and the value will be the property itself.\n     * @return Object","@Override\npublic Object getImmediateNode() {\n    Object value;\n    if (index == WHOLE_COLLECTION) {\n        value = ValueUtils.getValue(handler.getProperty(getBean(), getPropertyName()));\n    } else {\n        value = ValueUtils.getValue(handler.getProperty(getBean(), getPropertyName()), index);\n    }\n    return value;\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke $stack8.<org.apache.commons.jxpath.DynamicPropertyHandler: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($stack10, $stack9)""];\n	""3"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""5"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""6"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""8"" [label=""$stack7 = interfaceinvoke $stack3.<org.apache.commons.jxpath.DynamicPropertyHandler: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($stack5, $stack4)""];\n	""9"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""10"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack2 != -2147483648""];\n	""13"" [label=""return value""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""15"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>($stack11)""];\n	""16"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>($stack7, $stack6)""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_goto""];\n	""12"" -> ""4""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.isActualProperty(),Method,* A dynamic property is always considered actual - all keys are apparently\n     * existing with possibly the value of null.\n     * @return boolean,@Override\nprotected boolean isActualProperty() {\n    return true;\n},boolean isActualProperty(),"digraph cfg_isActualProperty {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.setValue(Object),Method,"* If index == WHOLE_COLLECTION, change the value of the property, otherwise\n     * change the value of the index'th element of the collection\n     * represented by the property.\n     * @param value to set","@Override\npublic void setValue(final Object value) {\n    if (index == WHOLE_COLLECTION) {\n        handler.setProperty(getBean(), getPropertyName(), value);\n    } else {\n        ValueUtils.setValue(handler.getProperty(getBean(), getPropertyName()), index, value);\n    }\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""4"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""5"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""7"" [label=""$stack7 = interfaceinvoke $stack3.<org.apache.commons.jxpath.DynamicPropertyHandler: java.lang.Object getProperty(java.lang.Object,java.lang.String)>($stack5, $stack4)""];\n	""8"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""9"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack2 != -2147483648""];\n	""12"" [label=""interfaceinvoke $stack8.<org.apache.commons.jxpath.DynamicPropertyHandler: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>($stack10, $stack9, value)""];\n	""13"" [label=""return""];\n	""14"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,int,java.lang.Object)>($stack7, $stack6, value)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""16"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_goto""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.createPath(JXPathContext),Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context) {\n    // Ignore the name passed to us, use our own data\n    Object collection = getBaseValue();\n    if (collection == null) {\n        final AbstractFactory factory = getAbstractFactory(context);\n        final boolean success = factory.createObject(context, this, getBean(), getPropertyName(), 0);\n        if (!success) {\n            throw new JXPathAbstractFactoryException(""Factory could not create an object for path: "" + asPath());\n        }\n        collection = getBaseValue();\n    }\n    if (index != WHOLE_COLLECTION) {\n        if (index < 0) {\n            throw new JXPathInvalidAccessException(""Index is less than 1: "" + asPath());\n        }\n        if (index >= getLength()) {\n            collection = ValueUtils.expandCollection(collection, index + 1);\n            handler.setProperty(getBean(), getPropertyName(), collection);\n        }\n    }\n    return this;\n}",org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack10 = $stack9 + 1""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""5"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String asPath()>()""];\n	""7"" [label=""$stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Index is less than 1: \"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15)""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack19 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""11"" [label=""$stack20 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""12"" [label=""$stack21 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""13"" [label=""$stack22 = new java.lang.StringBuilder""];\n	""14"" [label=""$stack23 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String asPath()>()""];\n	""15"" [label=""$stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory could not create an object for path: \"")""];\n	""16"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23)""];\n	""17"" [label=""$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""18"" [label=""$stack27 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""19"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""20"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""21"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""22"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int getLength()>()""];\n	""23"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""24"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object expandCollection(java.lang.Object,int)>(collection, $stack10)""];\n	""25"" [label=""collection = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""26"" [label=""collection = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""27"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""28"" [label=""factory = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.AbstractFactory getAbstractFactory(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""29"" [label=""if $stack5 == -2147483648""];\n	""30"" [label=""if $stack6 >= 0""];\n	""31"" [label=""if $stack7 < $stack8""];\n	""32"" [label=""if collection != null""];\n	""33"" [label=""if success != 0""];\n	""34"" [label=""interfaceinvoke $stack11.<org.apache.commons.jxpath.DynamicPropertyHandler: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>($stack13, $stack12, collection)""];\n	""35"" [label=""return this""];\n	""36"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack18)""];\n	""38"" [label=""specialinvoke $stack22.<java.lang.StringBuilder: void <init>()>()""];\n	""39"" [label=""specialinvoke $stack27.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack26)""];\n	""40"" [label=""success = virtualinvoke factory.<org.apache.commons.jxpath.AbstractFactory: boolean createObject(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.Pointer,java.lang.Object,java.lang.String,int)>(context, this, $stack21, $stack20, 0)""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""42"" [label=""throw $stack19""];\n	""43"" [label=""throw $stack27""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""38""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""39""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""29""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""31""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""2""[label=""cfg_next""];\n	""25"" -> ""32""[label=""cfg_next""];\n	""26"" -> ""19""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""12""[label=""cfg_next""];\n	""29"" -> ""20""[label=""cfg_false""];\n	""29"" -> ""35""[label=""cfg_true""];\n	""3"" -> ""34""[label=""cfg_next""];\n	""30"" -> ""10""[label=""cfg_false""];\n	""30"" -> ""21""[label=""cfg_true""];\n	""31"" -> ""23""[label=""cfg_false""];\n	""31"" -> ""35""[label=""cfg_true""];\n	""32"" -> ""19""[label=""cfg_true""];\n	""32"" -> ""28""[label=""cfg_false""];\n	""33"" -> ""18""[label=""cfg_false""];\n	""33"" -> ""26""[label=""cfg_true""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""36"" -> ""7""[label=""cfg_next""];\n	""37"" -> ""42""[label=""cfg_next""];\n	""38"" -> ""15""[label=""cfg_next""];\n	""39"" -> ""43""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""33""[label=""cfg_next""];\n	""41"" -> ""27""[label=""cfg_next""];\n	""5"" -> ""36""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""37""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.createPath(JXPathContext,Object)",Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context, final Object value) {\n    if (index == WHOLE_COLLECTION) {\n        handler.setProperty(getBean(), getPropertyName(), value);\n    } else {\n        createPath(context);\n        ValueUtils.setValue(getBaseValue(), index, value);\n    }\n    return this;\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""3"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""5"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""6"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""7"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack3 != -2147483648""];\n	""10"" [label=""interfaceinvoke $stack6.<org.apache.commons.jxpath.DynamicPropertyHandler: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>($stack8, $stack7, value)""];\n	""11"" [label=""return this""];\n	""12"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,int,java.lang.Object)>($stack5, $stack4, value)""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""14"" [label=""value := @parameter1: java.lang.Object""];\n	""15"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_goto""];\n	""9"" -> ""15""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.remove(),Method,No Comment,"@Override\npublic void remove() {\n    if (index == WHOLE_COLLECTION) {\n        removeKey();\n    } else if (isCollection()) {\n        final Object collection = ValueUtils.remove(getBaseValue(), index);\n        handler.setProperty(getBean(), getPropertyName(), collection);\n    } else if (index == 0) {\n        removeKey();\n    }\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: boolean isCollection()>()""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""5"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""7"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""8"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""9"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object remove(java.lang.Object,int)>($stack6, $stack5)""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack2 != -2147483648""];\n	""13"" [label=""if $stack3 == 0""];\n	""14"" [label=""if $stack4 != 0""];\n	""15"" [label=""interfaceinvoke $stack7.<org.apache.commons.jxpath.DynamicPropertyHandler: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>($stack9, $stack8, collection)""];\n	""16"" [label=""return""];\n	""17"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: void removeKey()>()""];\n	""18"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: void removeKey()>()""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_goto""];\n	""11"" -> ""16""[label=""cfg_goto""];\n	""12"" -> ""17""[label=""cfg_false""];\n	""12"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""3""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""16""[label=""cfg_true""];\n	""14"" -> ""18""[label=""cfg_false""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.removeKey(),Method,* Remove the current property.,"private void removeKey() {\n    final Object bean = getBean();\n    if (bean instanceof Map) {\n        ((Map) bean).remove(getPropertyName());\n    } else {\n        handler.setProperty(bean, getPropertyName(), null);\n    }\n}",void removeKey(),"digraph cfg_removeKey {\n	""1"" [label=""$stack2 = bean instanceof java.util.Map""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""4"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""5"" [label=""$stack6 = (java.util.Map) bean""];\n	""6"" [label=""bean = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.Object getBean()>()""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""interfaceinvoke $stack3.<org.apache.commons.jxpath.DynamicPropertyHandler: void setProperty(java.lang.Object,java.lang.String,java.lang.Object)>(bean, $stack4, null)""];\n	""10"" [label=""interfaceinvoke $stack6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($stack5)""];\n	""11"" [label=""return""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getImmediateParentPointer().asPath());\n    if (buffer.length() == 0) {\n        buffer.append(""/."");\n    } else if (buffer.charAt(buffer.length() - 1) == '/') {\n        buffer.append('.');\n    }\n    buffer.append(""[@name='"");\n    buffer.append(escape(getPropertyName()));\n    buffer.append(""']"");\n    if (index != WHOLE_COLLECTION && isCollection()) {\n        buffer.append('[').append(index + 1).append(']');\n    }\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String escape(java.lang.String)>($stack9)""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""3"" [label=""$stack12 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: boolean isCollection()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: int index>""];\n	""6"" [label=""$stack15 = $stack14 + 1""];\n	""7"" [label=""$stack16 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15)""];\n	""9"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""11"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""12"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""13"" [label=""$stack6 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""14"" [label=""$stack7 = $stack6 - 1""];\n	""15"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack7)""];\n	""16"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: java.lang.String getPropertyName()>()""];\n	""17"" [label=""buffer = $stack2""];\n	""18"" [label=""goto""];\n	""19"" [label=""if $stack11 == -2147483648""];\n	""20"" [label=""if $stack13 == 0""];\n	""21"" [label=""if $stack5 != 0""];\n	""22"" [label=""if $stack8 != 47""];\n	""23"" [label=""return $stack12""];\n	""24"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""26"" [label=""virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""27"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46)""];\n	""28"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/.\"")""];\n	""29"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[@name=\'\"")""];\n	""30"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\']\"")""];\n	""31"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)""];\n	""32"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""1"" -> ""31""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""32""[label=""cfg_next""];\n	""12"" -> ""21""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""22""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_goto""];\n	""19"" -> ""3""[label=""cfg_true""];\n	""19"" -> ""4""[label=""cfg_false""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_true""];\n	""20"" -> ""7""[label=""cfg_false""];\n	""21"" -> ""13""[label=""cfg_true""];\n	""21"" -> ""28""[label=""cfg_false""];\n	""22"" -> ""27""[label=""cfg_false""];\n	""22"" -> ""29""[label=""cfg_true""];\n	""24"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""9""[label=""cfg_next""];\n	""26"" -> ""3""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""18""[label=""cfg_next""];\n	""29"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""30"" -> ""2""[label=""cfg_next""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""32"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""26""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer.<init>(NodePointer,DynamicPropertyHandler)",Constructor,* Create a new DynamicPropertyPointer.\n     * @param parent pointer\n     * @param handler DynamicPropertyHandler,"public DynamicPropertyPointer(final NodePointer parent, final DynamicPropertyHandler handler) {\n    super(parent);\n    this.handler = handler;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.DynamicPropertyHandler)","digraph cfg_init {\n	""1"" [label=""handler := @parameter1: org.apache.commons.jxpath.DynamicPropertyHandler""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler> = handler""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return DYNAMIC_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 800""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n    final JXPathBeanInfo bi = JXPathIntrospector.getBeanInfo(bean.getClass());\n    if (bi.isDynamic()) {\n        final DynamicPropertyHandler handler = ValueUtils.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n        return new DynamicPointer(name, bean, handler, locale);\n    }\n    return null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack6 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack7 = interfaceinvoke bi.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isDynamic()>()""];\n	""3"" [label=""$stack8 = interfaceinvoke bi.<org.apache.commons.jxpath.JXPathBeanInfo: java.lang.Class getDynamicPropertyHandlerClass()>()""];\n	""4"" [label=""$stack9 = new org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""5"" [label=""bean := @parameter1: java.lang.Object""];\n	""6"" [label=""bi = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack6)""];\n	""7"" [label=""handler = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: org.apache.commons.jxpath.DynamicPropertyHandler getDynamicPropertyHandler(java.lang.Class)>($stack8)""];\n	""8"" [label=""if $stack7 == 0""];\n	""9"" [label=""locale := @parameter2: java.util.Locale""];\n	""10"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""11"" [label=""return $stack9""];\n	""12"" [label=""return null""];\n	""13"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: void <init>(org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.DynamicPropertyHandler,java.util.Locale)>(name, bean, handler, locale)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""12""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    if (bean == null) {\n        return new NullPointer(parent, name);\n    }\n    final JXPathBeanInfo bi = JXPathIntrospector.getBeanInfo(bean.getClass());\n    if (bi.isDynamic()) {\n        final DynamicPropertyHandler handler = ValueUtils.getDynamicPropertyHandler(bi.getDynamicPropertyHandlerClass());\n        return new DynamicPointer(parent, name, bean, handler);\n    }\n    return null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""2"" [label=""$stack6 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack7 = interfaceinvoke bi.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isDynamic()>()""];\n	""4"" [label=""$stack8 = interfaceinvoke bi.<org.apache.commons.jxpath.JXPathBeanInfo: java.lang.Class getDynamicPropertyHandlerClass()>()""];\n	""5"" [label=""$stack9 = new org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""6"" [label=""bean := @parameter2: java.lang.Object""];\n	""7"" [label=""bi = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack6)""];\n	""8"" [label=""handler = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: org.apache.commons.jxpath.DynamicPropertyHandler getDynamicPropertyHandler(java.lang.Class)>($stack8)""];\n	""9"" [label=""if $stack7 == 0""];\n	""10"" [label=""if bean != null""];\n	""11"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""12"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""13"" [label=""return $stack10""];\n	""14"" [label=""return $stack9""];\n	""15"" [label=""return null""];\n	""16"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.model.beans.NullPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(parent, name)""];\n	""17"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.DynamicPropertyHandler)>(parent, name, bean, handler)""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointerFactory""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyIterator.<init>(PropertyOwnerPointer,String,boolean,NodePointer)",Constructor,* Create a new DynamicPropertyIterator\n     * @param pointer PropertyOwnerPointer\n     * @param name String\n     * @param reverse iteration order\n     * @param startWith beginning child,"public DynamicPropertyIterator(final PropertyOwnerPointer pointer, final String name, final boolean reverse, final NodePointer startWith) {\n    super(pointer, name, reverse, startWith);\n}","void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_init {\n	""1"" [label=""name := @parameter1: java.lang.String""];\n	""2"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""3"" [label=""return""];\n	""4"" [label=""reverse := @parameter2: boolean""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(pointer, name, reverse, startWith)""];\n	""6"" [label=""startWith := @parameter3: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyIterator""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.getPropertyPointer(),Method,No Comment,"@Override\npublic PropertyPointer getPropertyPointer() {\n    return new DynamicPropertyPointer(this, handler);\n}",org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer(),"digraph cfg_getPropertyPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.DynamicPropertyHandler)>(this, $stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.createNodeIterator(String,boolean,NodePointer)",Method,No Comment,"@Override\npublic NodeIterator createNodeIterator(final String property, final boolean reverse, final NodePointer startWith) {\n    return new PropertyIterator(this, property, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator createNodeIterator(java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_createNodeIterator {\n	""1"" [label=""$stack4 = new org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""2"" [label=""property := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack4""];\n	""4"" [label=""reverse := @parameter1: boolean""];\n	""5"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(this, property, reverse, startWith)""];\n	""6"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.attributeIterator(QName),Method,No Comment,"@Override\npublic NodeIterator attributeIterator(final QName name) {\n    return new DynamicAttributeIterator(this, name);\n}",org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.dynamic.DynamicAttributeIterator""];\n	""2"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.dynamic.DynamicAttributeIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.QName)>(this, name)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return name;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.isDynamicPropertyDeclarationSupported(),Method,No Comment,@Override\npublic boolean isDynamicPropertyDeclarationSupported() {\n    return true;\n},boolean isDynamicPropertyDeclarationSupported(),"digraph cfg_isDynamicPropertyDeclarationSupported {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.getBaseValue(),Method,* Returns the DP object iself.\n     * @return Object,@Override\npublic Object getBaseValue() {\n    return bean;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: java.lang.Object bean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    final Object value = getNode();\n    return value == null || JXPathIntrospector.getBeanInfo(value.getClass()).isAtomic();\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack2 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack2)""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isAtomic()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if value == null""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""11"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: java.lang.Object getNode()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.getLength(),Method,* Returns 1.\n     * @return int,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    return parent == null ? ""/"" : super.asPath();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack2 = \""/\""""];\n	""3"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.String asPath()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return System.identityHashCode(bean) + (name == null ? 0 : name.hashCode());\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: java.lang.Object bean>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""4"" [label=""$stack4 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($stack1)""];\n	""5"" [label=""$stack5 = 0""];\n	""6"" [label=""$stack5 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.QName: int hashCode()>()""];\n	""7"" [label=""$stack6 = $stack4 + $stack5""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack2 != null""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_goto""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof DynamicPointer)) {\n        return false;\n    }\n    final DynamicPointer other = (DynamicPointer) object;\n    if (bean != other.bean) {\n        return false;\n    }\n    return name == other.name || name != null && name.equals(other.name);\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack10 = other.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.QName: boolean equals(java.lang.Object)>($stack10)""];\n	""4"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""5"" [label=""$stack4 = other.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: java.lang.Object bean>""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: java.lang.Object bean>""];\n	""7"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""8"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""9"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""10"" [label=""$stack9 = 0""];\n	""11"" [label=""$stack9 = 1""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack12 == 0""];\n	""14"" [label=""if $stack3 != 0""];\n	""15"" [label=""if $stack5 == $stack4""];\n	""16"" [label=""if $stack7 == $stack6""];\n	""17"" [label=""if $stack8 == null""];\n	""18"" [label=""if object != this""];\n	""19"" [label=""object := @parameter0: java.lang.Object""];\n	""20"" [label=""other = (org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer) object""];\n	""21"" [label=""return $stack9""];\n	""22"" [label=""return 0""];\n	""23"" [label=""return 0""];\n	""24"" [label=""return 1""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""21""[label=""cfg_goto""];\n	""13"" -> ""10""[label=""cfg_true""];\n	""13"" -> ""11""[label=""cfg_false""];\n	""14"" -> ""20""[label=""cfg_true""];\n	""14"" -> ""22""[label=""cfg_false""];\n	""15"" -> ""23""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_true""];\n	""16"" -> ""9""[label=""cfg_false""];\n	""17"" -> ""10""[label=""cfg_true""];\n	""17"" -> ""2""[label=""cfg_false""];\n	""18"" -> ""24""[label=""cfg_false""];\n	""18"" -> ""4""[label=""cfg_true""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""25"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.<init>(QName,Object,DynamicPropertyHandler,Locale)",Constructor,* Create a new DynamicPointer.\n     * @param name property name\n     * @param bean owning bean\n     * @param handler DynamicPropertyHandler\n     * @param locale Locale,"public DynamicPointer(final QName name, final Object bean, final DynamicPropertyHandler handler, final Locale locale) {\n    super(null, locale);\n    this.name = name;\n    this.bean = bean;\n    this.handler = handler;\n}","void <init>(org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.DynamicPropertyHandler,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""bean := @parameter1: java.lang.Object""];\n	""2"" [label=""handler := @parameter2: org.apache.commons.jxpath.DynamicPropertyHandler""];\n	""3"" [label=""locale := @parameter3: java.util.Locale""];\n	""4"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: java.lang.Object bean> = bean""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler> = handler""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer.<init>(NodePointer,QName,Object,DynamicPropertyHandler)",Constructor,* Create a new DynamicPointer.\n     * @param parent parent pointer\n     * @param name property name\n     * @param bean owning bean\n     * @param handler DynamicPropertyHandler,"public DynamicPointer(final NodePointer parent, final QName name, final Object bean, final DynamicPropertyHandler handler) {\n    super(parent);\n    this.name = name;\n    this.bean = bean;\n    this.handler = handler;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.DynamicPropertyHandler)","digraph cfg_init {\n	""1"" [label=""bean := @parameter2: java.lang.Object""];\n	""2"" [label=""handler := @parameter3: org.apache.commons.jxpath.DynamicPropertyHandler""];\n	""3"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: java.lang.Object bean> = bean""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.DynamicPropertyHandler handler> = handler""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynamic.DynamicAttributeIterator.prepareForIndividualProperty(String),Method,No Comment,@Override\nprotected void prepareForIndividualProperty(final String name) {\n    ((DynamicPropertyPointer) getPropertyPointer()).setPropertyName(name);\n    super.prepareForIndividualProperty(name);\n},void prepareForIndividualProperty(java.lang.String),"digraph cfg_prepareForIndividualProperty {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynamic.DynamicAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer getPropertyPointer()>()""];\n	""2"" [label=""$stack3 = (org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer) $stack2""];\n	""3"" [label=""name := @parameter0: java.lang.String""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: void prepareForIndividualProperty(java.lang.String)>(name)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicAttributeIterator""];\n	""7"" [label=""virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.dynamic.DynamicPropertyPointer: void setPropertyName(java.lang.String)>(name)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.model.dynamic.DynamicAttributeIterator.<init>(PropertyOwnerPointer,QName)",Constructor,* Create a new DynamicAttributeIterator.\n     * @param parent pointer\n     * @param name to match properties,"public DynamicAttributeIterator(final PropertyOwnerPointer parent, final QName name) {\n    super(parent, name);\n}","void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.QName)","digraph cfg_init {\n	""1"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.QName)>(parent, name)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynamic.DynamicAttributeIterator""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodeIterator.getPosition(),Abstract Method,* Gets the current iterator position.\n     * @return int position,int getPosition();,int getPosition(),digraph cfg_getPosition {\n}\n,default
org.apache.commons.jxpath.ri.model.NodeIterator.setPosition(int),Abstract Method,* Sets the new current position.\n     * @param position the position to set\n     * @return {@code true} if there is a node at {@code position}.,boolean setPosition(int position);,boolean setPosition(int),digraph cfg_setPosition {\n}\n,default
org.apache.commons.jxpath.ri.model.NodeIterator.getNodePointer(),Abstract Method,* Gets the NodePointer at the current position.\n     * @return NodePointer,NodePointer getNodePointer();,org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),digraph cfg_getNodePointer {\n}\n,default
org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory.getOrder(),Method,* {@inheritDoc},@Override\npublic int getOrder() {\n    return DynaBeanPointerFactory.DYNA_BEAN_POINTER_FACTORY_ORDER - 1;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 699""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory.createNodePointer(QName,Object,Locale)",Method,* {@inheritDoc},"@Override\npublic NodePointer createNodePointer(final QName name, final Object object, final Locale locale) {\n    return object instanceof LazyDynaBean ? new StrictLazyDynaBeanPointer(name, (LazyDynaBean) object, locale) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = object instanceof org.apache.commons.beanutils.LazyDynaBean""];\n	""2"" [label=""$stack5 = (org.apache.commons.beanutils.LazyDynaBean) object""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""locale := @parameter2: java.util.Locale""];\n	""8"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""9"" [label=""object := @parameter1: java.lang.Object""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer: void <init>(org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.LazyDynaBean,java.util.Locale)>(name, $stack5, locale)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,* {@inheritDoc},"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object object) {\n    return object instanceof LazyDynaBean ? new StrictLazyDynaBeanPointer(parent, name, (LazyDynaBean) object) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = object instanceof org.apache.commons.beanutils.LazyDynaBean""];\n	""2"" [label=""$stack5 = (org.apache.commons.beanutils.LazyDynaBean) object""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""8"" [label=""object := @parameter2: java.lang.Object""];\n	""9"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.LazyDynaBean)>(parent, name, $stack5)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer.getPropertyPointer(),Method,* {@inheritDoc},"@Override\npublic PropertyPointer getPropertyPointer() {\n    return new DynaBeanPropertyPointer(this, lazyDynaBean) {\n\n        private static final long serialVersionUID = 1L;\n\n        @Override\n        protected boolean isActualProperty() {\n            return ((LazyDynaClass) lazyDynaBean.getDynaClass()).isDynaProperty(getPropertyName());\n        }\n    };\n}",org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer(),"digraph cfg_getPropertyPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer: org.apache.commons.beanutils.LazyDynaBean lazyDynaBean>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer$1""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer$1: void <init>(org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.beanutils.DynaBean)>(this, this, $stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer.<init>(NodePointer,QName,LazyDynaBean)",Constructor,* Create a new StrictLazyDynaBeanPointer instance.\n         *\n         * @param parent pointer\n         * @param name is the name given to the first node\n         * @param lazyDynaBean pointed,"public StrictLazyDynaBeanPointer(final NodePointer parent, final QName name, final LazyDynaBean lazyDynaBean) {\n    super(parent, name, lazyDynaBean);\n    this.lazyDynaBean = lazyDynaBean;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.LazyDynaBean)","digraph cfg_init {\n	""1"" [label=""lazyDynaBean := @parameter2: org.apache.commons.beanutils.LazyDynaBean""];\n	""2"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.DynaBean)>(parent, name, lazyDynaBean)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer: org.apache.commons.beanutils.LazyDynaBean lazyDynaBean> = lazyDynaBean""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer.<init>(QName,LazyDynaBean,Locale)",Constructor,* Create a new StrictLazyDynaBeanPointer instance.\n         *\n         * @param name is the name given to the first node\n         * @param lazyDynaBean pointed\n         * @param locale Locale,"public StrictLazyDynaBeanPointer(final QName name, final LazyDynaBean lazyDynaBean, final Locale locale) {\n    super(name, lazyDynaBean, locale);\n    this.lazyDynaBean = lazyDynaBean;\n}","void <init>(org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.LazyDynaBean,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""lazyDynaBean := @parameter1: org.apache.commons.beanutils.LazyDynaBean""];\n	""2"" [label=""locale := @parameter2: java.util.Locale""];\n	""3"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: void <init>(org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.DynaBean,java.util.Locale)>(name, lazyDynaBean, locale)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.StrictLazyDynaBeanPointerFactory$StrictLazyDynaBeanPointer: org.apache.commons.beanutils.LazyDynaBean lazyDynaBean> = lazyDynaBean""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return DYNA_BEAN_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 700""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n    return bean instanceof DynaBean ? new DynaBeanPointer(name, (DynaBean) bean, locale) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.apache.commons.beanutils.DynaBean""];\n	""2"" [label=""$stack5 = (org.apache.commons.beanutils.DynaBean) bean""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""bean := @parameter1: java.lang.Object""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""locale := @parameter2: java.util.Locale""];\n	""9"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: void <init>(org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.DynaBean,java.util.Locale)>(name, $stack5, locale)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    return bean instanceof DynaBean ? new DynaBeanPointer(parent, name, (DynaBean) bean) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.apache.commons.beanutils.DynaBean""];\n	""2"" [label=""$stack5 = (org.apache.commons.beanutils.DynaBean) bean""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""bean := @parameter2: java.lang.Object""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""9"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.DynaBean)>(parent, name, $stack5)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointerFactory""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.getPropertyPointer(),Method,No Comment,"@Override\npublic PropertyPointer getPropertyPointer() {\n    return new DynaBeanPropertyPointer(this, dynaBean);\n}",org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer(),"digraph cfg_getPropertyPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.beanutils.DynaBean)>(this, $stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return name;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return dynaBean;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return dynaBean;\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return false;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return name == null ? 0 : name.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""3"" [label=""$stack3 = 0""];\n	""4"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.QName: int hashCode()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.equals(Object),Method,No Comment,"@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof DynaBeanPointer)) {\n        return false;\n    }\n    final DynaBeanPointer other = (DynaBeanPointer) object;\n    if (!(equalObjects(parent, other.parent) && equalObjects(name, other.name))) {\n        return false;\n    }\n    final int iThis = index == WHOLE_COLLECTION ? 0 : index;\n    final int iOther = other.index == WHOLE_COLLECTION ? 0 : other.index;\n    return iThis == iOther && dynaBean == other.dynaBean;\n}",boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""$stack11 = staticinvoke <org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: boolean equalObjects(java.lang.Object,java.lang.Object)>($stack10, $stack9)""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: int index>""];\n	""4"" [label=""$stack13 = other.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: int index>""];\n	""5"" [label=""$stack14 = other.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""7"" [label=""$stack16 = 0""];\n	""8"" [label=""$stack16 = 1""];\n	""9"" [label=""$stack5 = object instanceof org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""10"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""11"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""12"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: boolean equalObjects(java.lang.Object,java.lang.Object)>($stack7, $stack6)""];\n	""13"" [label=""$stack9 = other.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""iOther = 0""];\n	""18"" [label=""iOther = other.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: int index>""];\n	""19"" [label=""iThis = 0""];\n	""20"" [label=""iThis = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: int index>""];\n	""21"" [label=""if $stack11 != 0""];\n	""22"" [label=""if $stack12 != -2147483648""];\n	""23"" [label=""if $stack13 != -2147483648""];\n	""24"" [label=""if $stack15 != $stack14""];\n	""25"" [label=""if $stack5 != 0""];\n	""26"" [label=""if $stack8 == 0""];\n	""27"" [label=""if iThis != iOther""];\n	""28"" [label=""if object != this""];\n	""29"" [label=""object := @parameter0: java.lang.Object""];\n	""30"" [label=""other = (org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer) object""];\n	""31"" [label=""return $stack16""];\n	""32"" [label=""return 0""];\n	""33"" [label=""return 0""];\n	""34"" [label=""return 1""];\n	""35"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""26""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_goto""];\n	""15"" -> ""27""[label=""cfg_goto""];\n	""16"" -> ""31""[label=""cfg_goto""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""27""[label=""cfg_next""];\n	""19"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""21""[label=""cfg_next""];\n	""20"" -> ""4""[label=""cfg_next""];\n	""21"" -> ""3""[label=""cfg_true""];\n	""21"" -> ""33""[label=""cfg_false""];\n	""22"" -> ""19""[label=""cfg_false""];\n	""22"" -> ""20""[label=""cfg_true""];\n	""23"" -> ""17""[label=""cfg_false""];\n	""23"" -> ""18""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_true""];\n	""24"" -> ""8""[label=""cfg_false""];\n	""25"" -> ""30""[label=""cfg_true""];\n	""25"" -> ""32""[label=""cfg_false""];\n	""26"" -> ""1""[label=""cfg_false""];\n	""26"" -> ""33""[label=""cfg_true""];\n	""27"" -> ""6""[label=""cfg_false""];\n	""27"" -> ""7""[label=""cfg_true""];\n	""28"" -> ""34""[label=""cfg_false""];\n	""28"" -> ""9""[label=""cfg_true""];\n	""29"" -> ""28""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_next""];\n	""35"" -> ""29""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""31""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    return parent == null ? ""/"" : super.asPath();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack2 = \""/\""""];\n	""3"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.String asPath()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.equalObjects(Object,Object)",Method,* Learn whether two objects are == || .equals().\n     * @param o1 first object\n     * @param o2 second object\n     * @return boolean,"private static boolean equalObjects(final Object o1, final Object o2) {\n    return o1 == o2 || o1 != null && o1.equals(o2);\n}","boolean equalObjects(java.lang.Object,java.lang.Object)","digraph cfg_equalObjects {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = 1""];\n	""3"" [label=""$stack3 = virtualinvoke o1.<java.lang.Object: boolean equals(java.lang.Object)>(o2)""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if o1 == null""];\n	""7"" [label=""if o1 == o2""];\n	""8"" [label=""o1 := @parameter0: java.lang.Object""];\n	""9"" [label=""o2 := @parameter1: java.lang.Object""];\n	""10"" [label=""return $stack2""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""6""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.<init>(QName,DynaBean,Locale)",Constructor,* Create a new DynaBeanPointer.\n     * @param name is the name given to the first node\n     * @param dynaBean pointed\n     * @param locale Locale,"public DynaBeanPointer(final QName name, final DynaBean dynaBean, final Locale locale) {\n    super(null, locale);\n    this.name = name;\n    this.dynaBean = dynaBean;\n}","void <init>(org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.DynaBean,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""dynaBean := @parameter1: org.apache.commons.beanutils.DynaBean""];\n	""2"" [label=""locale := @parameter2: java.util.Locale""];\n	""3"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.beanutils.DynaBean dynaBean> = dynaBean""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer.<init>(NodePointer,QName,DynaBean)",Constructor,* Create a new DynaBeanPointer.\n     * @param parent pointer\n     * @param name is the name given to the first node\n     * @param dynaBean pointed,"public DynaBeanPointer(final NodePointer parent, final QName name, final DynaBean dynaBean) {\n    super(parent);\n    this.name = name;\n    this.dynaBean = dynaBean;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,org.apache.commons.beanutils.DynaBean)","digraph cfg_init {\n	""1"" [label=""dynaBean := @parameter2: org.apache.commons.beanutils.DynaBean""];\n	""2"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.beanutils.DynaBean dynaBean> = dynaBean""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return dynaBean.get(getPropertyName());\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""3"" [label=""$stack3 = interfaceinvoke $stack1.<org.apache.commons.beanutils.DynaBean: java.lang.Object get(java.lang.String)>($stack2)""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.isContainer(),Method,* This type of node is auxiliary.\n     * @return true,@Override\npublic boolean isContainer() {\n    return true;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getPropertyCount(),Method,No Comment,@Override\npublic int getPropertyCount() {\n    return getPropertyNames().length;\n},int getPropertyCount(),"digraph cfg_getPropertyCount {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""2"" [label=""$stack2 = lengthof $stack1""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getPropertyNames(),Method,No Comment,@Override\npublic String[] getPropertyNames() {\n    /* @todo do something about the sorting - LIKE WHAT? - MJB */\n    if (names == null) {\n        final DynaClass dynaClass = dynaBean.getDynaClass();\n        final DynaProperty[] dynaProperties = dynaClass.getDynaProperties();\n        final ArrayList properties = new ArrayList(dynaProperties.length);\n        for (final DynaProperty element : dynaProperties) {\n            final String name = element.getName();\n            if (!CLASS.equals(name)) {\n                properties.add(name);\n            }\n        }\n        names = (String[]) properties.toArray(new String[properties.size()]);\n        Arrays.sort(names);\n    }\n    return names;\n},java.lang.String[] getPropertyNames(),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String[] names>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""3"" [label=""$stack12 = lengthof dynaProperties""];\n	""4"" [label=""$stack13 = new java.util.ArrayList""];\n	""5"" [label=""$stack14 = virtualinvoke properties.<java.util.ArrayList: int size()>()""];\n	""6"" [label=""$stack15 = newarray (java.lang.String)[$stack14]""];\n	""7"" [label=""$stack16 = virtualinvoke properties.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($stack15)""];\n	""8"" [label=""$stack17 = (java.lang.String[]) $stack16""];\n	""9"" [label=""$stack18 = (java.lang.String[]) $stack17""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String[] names>""];\n	""11"" [label=""$stack20 = \""class\""""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>(name)""];\n	""13"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String[] names>""];\n	""14"" [label=""dynaClass = interfaceinvoke $stack11.<org.apache.commons.beanutils.DynaBean: org.apache.commons.beanutils.DynaClass getDynaClass()>()""];\n	""15"" [label=""dynaProperties = interfaceinvoke dynaClass.<org.apache.commons.beanutils.DynaClass: org.apache.commons.beanutils.DynaProperty[] getDynaProperties()>()""];\n	""16"" [label=""element = l4[l6]""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack21 != 0""];\n	""19"" [label=""if $stack9 != null""];\n	""20"" [label=""if l6 >= l5""];\n	""21"" [label=""l4 = dynaProperties""];\n	""22"" [label=""l5 = lengthof l4""];\n	""23"" [label=""l6 = 0""];\n	""24"" [label=""l6 = l6 + 1""];\n	""25"" [label=""name = virtualinvoke element.<org.apache.commons.beanutils.DynaProperty: java.lang.String getName()>()""];\n	""26"" [label=""properties = $stack13""];\n	""27"" [label=""return $stack10""];\n	""28"" [label=""specialinvoke $stack13.<java.util.ArrayList: void <init>(int)>($stack12)""];\n	""29"" [label=""staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($stack19)""];\n	""30"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String[] names> = $stack18""];\n	""32"" [label=""virtualinvoke properties.<java.util.ArrayList: boolean add(java.lang.Object)>(name)""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_goto""];\n	""18"" -> ""24""[label=""cfg_true""];\n	""18"" -> ""32""[label=""cfg_false""];\n	""19"" -> ""1""[label=""cfg_true""];\n	""19"" -> ""2""[label=""cfg_false""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_false""];\n	""20"" -> ""5""[label=""cfg_true""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""11""[label=""cfg_next""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""28"" -> ""26""[label=""cfg_next""];\n	""29"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_next""];\n	""31"" -> ""10""[label=""cfg_next""];\n	""32"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""31""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getPropertyName(),Method,"* Returns the name of the currently selected property or ""*""\n     * if none has been selected.\n     * @return String","@Override\npublic String getPropertyName() {\n    if (name == null) {\n        final String[] names = getPropertyNames();\n        name = propertyIndex >= 0 && propertyIndex < names.length ? names[propertyIndex] : ""*"";\n    }\n    return name;\n}",java.lang.String getPropertyName(),"digraph cfg_getPropertyName {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int propertyIndex>""];\n	""4"" [label=""$stack5 = lengthof names""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int propertyIndex>""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int propertyIndex>""];\n	""7"" [label=""$stack8 = \""*\""""];\n	""8"" [label=""$stack8 = names[$stack7]""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack2 != null""];\n	""11"" [label=""if $stack4 < 0""];\n	""12"" [label=""if $stack6 >= $stack5""];\n	""13"" [label=""names = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""14"" [label=""return $stack3""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name> = $stack8""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.setPropertyName(String),Method,* Select a property by name.\n     * @param propertyName to select,@Override\npublic void setPropertyName(final String propertyName) {\n    setPropertyIndex(UNSPECIFIED_PROPERTY);\n    this.name = propertyName;\n},void setPropertyName(java.lang.String),"digraph cfg_setPropertyName {\n	""1"" [label=""propertyName := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name> = propertyName""];\n	""5"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: void setPropertyIndex(int)>(-2147483648)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getPropertyIndex(),Method,* Index of the currently selected property in the list of all\n     * properties sorted alphabetically.\n     * @return int,@Override\npublic int getPropertyIndex() {\n    if (propertyIndex == UNSPECIFIED_PROPERTY) {\n        final String[] names = getPropertyNames();\n        for (int i = 0; i < names.length; i++) {\n            if (names[i].equals(name)) {\n                propertyIndex = i;\n                name = null;\n                break;\n            }\n        }\n    }\n    return super.getPropertyIndex();\n},int getPropertyIndex(),"digraph cfg_getPropertyIndex {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int propertyIndex>""];\n	""2"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getPropertyIndex()>()""];\n	""3"" [label=""$stack5 = lengthof names""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name>""];\n	""5"" [label=""$stack7 = names[i]""];\n	""6"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>($stack6)""];\n	""7"" [label=""goto""];\n	""8"" [label=""goto""];\n	""9"" [label=""i = 0""];\n	""10"" [label=""i = i + 1""];\n	""11"" [label=""if $stack3 != -2147483648""];\n	""12"" [label=""if $stack8 == 0""];\n	""13"" [label=""if i >= $stack5""];\n	""14"" [label=""names = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""15"" [label=""return $stack4""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int propertyIndex> = i""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name> = null""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_false""];\n	""11"" -> ""2""[label=""cfg_true""];\n	""12"" -> ""10""[label=""cfg_true""];\n	""12"" -> ""17""[label=""cfg_false""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_goto""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.setPropertyIndex(int),Method,* Index a property by its index in the list of all\n     * properties sorted alphabetically.\n     * @param index to set,@Override\npublic void setPropertyIndex(final int index) {\n    if (propertyIndex != index) {\n        super.setPropertyIndex(index);\n        name = null;\n    }\n},void setPropertyIndex(int),"digraph cfg_setPropertyIndex {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int propertyIndex>""];\n	""2"" [label=""if $stack2 == index""];\n	""3"" [label=""index := @parameter0: int""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyIndex(int)>(index)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name> = null""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_true""];\n	""2"" -> ""5""[label=""cfg_false""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.getImmediateNode(),Method,"* If index == WHOLE_COLLECTION, the value of the property, otherwise\n     * the value of the index'th element of the collection represented by the\n     * property. If the property is not a collection, index should be zero\n     * and the value will be the property itself.\n     * @return Object","@Override\npublic Object getImmediateNode() {\n    final String name = getPropertyName();\n    if (name.equals(""*"")) {\n        return null;\n    }\n    Object value;\n    if (index == WHOLE_COLLECTION) {\n        value = ValueUtils.getValue(dynaBean.get(name));\n    } else if (isIndexedProperty()) {\n        // DynaClass at this point is not based on whether\n        // the property is indeed indexed, but rather on\n        // whether it is an array or List. Therefore\n        // the indexed set may fail.\n        try {\n            value = ValueUtils.getValue(dynaBean.get(name, index));\n        } catch (final ArrayIndexOutOfBoundsException ex) {\n            value = null;\n        } catch (final IllegalArgumentException ex) {\n            value = dynaBean.get(name);\n            value = ValueUtils.getValue(value, index);\n        }\n    } else {\n        value = dynaBean.get(name);\n        if (ValueUtils.isCollection(value)) {\n            value = ValueUtils.getValue(value, index);\n        } else if (index != 0) {\n            value = null;\n        }\n    }\n    return value;\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""4"" [label=""$stack13 = interfaceinvoke $stack12.<org.apache.commons.beanutils.DynaBean: java.lang.Object get(java.lang.String,int)>(name, $stack11)""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""6"" [label=""$stack15 = interfaceinvoke $stack14.<org.apache.commons.beanutils.DynaBean: java.lang.Object get(java.lang.String)>(name)""];\n	""7"" [label=""$stack16 := @caughtexception""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""10"" [label=""$stack19 := @caughtexception""];\n	""11"" [label=""$stack4 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>(\""*\"")""];\n	""12"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""13"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: boolean isIndexedProperty()>()""];\n	""14"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""15"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(value)""];\n	""16"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""17"" [label=""ex = $stack16""];\n	""18"" [label=""ex = $stack19""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""if $stack4 == 0""];\n	""25"" [label=""if $stack5 != -2147483648""];\n	""26"" [label=""if $stack6 == 0""];\n	""27"" [label=""if $stack8 == 0""];\n	""28"" [label=""if $stack9 == 0""];\n	""29"" [label=""name = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""30"" [label=""return null""];\n	""31"" [label=""return value""];\n	""32"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""33"" [label=""value = interfaceinvoke $stack17.<org.apache.commons.beanutils.DynaBean: java.lang.Object get(java.lang.String)>(name)""];\n	""34"" [label=""value = interfaceinvoke $stack7.<org.apache.commons.beanutils.DynaBean: java.lang.Object get(java.lang.String)>(name)""];\n	""35"" [label=""value = null""];\n	""36"" [label=""value = null""];\n	""37"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>($stack13)""];\n	""38"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>($stack15)""];\n	""39"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>(value, $stack10)""];\n	""40"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>(value, $stack18)""];\n	""1"" -> ""39""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""24""[label=""cfg_next""];\n	""12"" -> ""25""[label=""cfg_next""];\n	""13"" -> ""26""[label=""cfg_next""];\n	""14"" -> ""34""[label=""cfg_next""];\n	""15"" -> ""27""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_next""];\n	""17"" -> ""8""[label=""cfg_next""];\n	""18"" -> ""35""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_goto""];\n	""2"" -> ""10""[label=""cfg_except""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_except""];\n	""20"" -> ""31""[label=""cfg_goto""];\n	""21"" -> ""31""[label=""cfg_goto""];\n	""22"" -> ""31""[label=""cfg_goto""];\n	""23"" -> ""31""[label=""cfg_goto""];\n	""24"" -> ""12""[label=""cfg_true""];\n	""24"" -> ""30""[label=""cfg_false""];\n	""25"" -> ""13""[label=""cfg_true""];\n	""25"" -> ""5""[label=""cfg_false""];\n	""26"" -> ""14""[label=""cfg_true""];\n	""26"" -> ""3""[label=""cfg_false""];\n	""27"" -> ""1""[label=""cfg_false""];\n	""27"" -> ""16""[label=""cfg_true""];\n	""28"" -> ""31""[label=""cfg_true""];\n	""28"" -> ""36""[label=""cfg_false""];\n	""29"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_except""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_except""];\n	""32"" -> ""29""[label=""cfg_next""];\n	""33"" -> ""9""[label=""cfg_next""];\n	""34"" -> ""15""[label=""cfg_next""];\n	""35"" -> ""22""[label=""cfg_next""];\n	""36"" -> ""31""[label=""cfg_next""];\n	""37"" -> ""10""[label=""cfg_except""];\n	""37"" -> ""20""[label=""cfg_next""];\n	""37"" -> ""7""[label=""cfg_except""];\n	""38"" -> ""19""[label=""cfg_next""];\n	""39"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_except""];\n	""4"" -> ""37""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_except""];\n	""40"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""38""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""33""[label=""cfg_next""];\n	""9"" -> ""40""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.isActualProperty(),Method,* Returns true if the bean has the currently selected property.\n     * @return boolean,@Override\nprotected boolean isActualProperty() {\n    final DynaClass dynaClass = dynaBean.getDynaClass();\n    return dynaClass.getDynaProperty(getPropertyName()) != null;\n},boolean isActualProperty(),"digraph cfg_isActualProperty {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""3"" [label=""$stack4 = interfaceinvoke dynaClass.<org.apache.commons.beanutils.DynaClass: org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String)>($stack3)""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""dynaClass = interfaceinvoke $stack2.<org.apache.commons.beanutils.DynaBean: org.apache.commons.beanutils.DynaClass getDynaClass()>()""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == null""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.isIndexedProperty(),Method,* Learn whether the property referenced is an indexed property.\n     * @return boolean,protected boolean isIndexedProperty() {\n    final DynaClass dynaClass = dynaBean.getDynaClass();\n    final DynaProperty property = dynaClass.getDynaProperty(name);\n    return property.isIndexed();\n},boolean isIndexedProperty(),"digraph cfg_isIndexedProperty {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String name>""];\n	""3"" [label=""$stack5 = virtualinvoke property.<org.apache.commons.beanutils.DynaProperty: boolean isIndexed()>()""];\n	""4"" [label=""dynaClass = interfaceinvoke $stack3.<org.apache.commons.beanutils.DynaBean: org.apache.commons.beanutils.DynaClass getDynaClass()>()""];\n	""5"" [label=""property = interfaceinvoke dynaClass.<org.apache.commons.beanutils.DynaClass: org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String)>($stack4)""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.setValue(Object),Method,"* If index == WHOLE_COLLECTION, change the value of the property, otherwise\n     * change the value of the index'th element of the collection\n     * represented by the property.\n     * @param value to set","@Override\npublic void setValue(final Object value) {\n    setValue(index, value);\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: void setValue(int,java.lang.Object)>($stack2, value)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.remove(),Method,No Comment,"@Override\npublic void remove() {\n    if (index == WHOLE_COLLECTION) {\n        dynaBean.set(getPropertyName(), null);\n    } else if (isIndexedProperty()) {\n        dynaBean.set(getPropertyName(), index, null);\n    } else if (isCollection()) {\n        final Object collection = ValueUtils.remove(getBaseValue(), index);\n        dynaBean.set(getPropertyName(), collection);\n    } else if (index == 0) {\n        dynaBean.set(getPropertyName(), null);\n    }\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""5"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""7"" [label=""$stack16 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""8"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""9"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: boolean isIndexedProperty()>()""];\n	""10"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: boolean isCollection()>()""];\n	""11"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""12"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""13"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""14"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: int index>""];\n	""15"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""16"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object remove(java.lang.Object,int)>($stack9, $stack8)""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack2 != -2147483648""];\n	""21"" [label=""if $stack3 == 0""];\n	""22"" [label=""if $stack4 == 0""];\n	""23"" [label=""if $stack5 != 0""];\n	""24"" [label=""interfaceinvoke $stack10.<org.apache.commons.beanutils.DynaBean: void set(java.lang.String,java.lang.Object)>($stack11, collection)""];\n	""25"" [label=""interfaceinvoke $stack12.<org.apache.commons.beanutils.DynaBean: void set(java.lang.String,int,java.lang.Object)>($stack14, $stack13, null)""];\n	""26"" [label=""interfaceinvoke $stack15.<org.apache.commons.beanutils.DynaBean: void set(java.lang.String,java.lang.Object)>($stack16, null)""];\n	""27"" [label=""interfaceinvoke $stack6.<org.apache.commons.beanutils.DynaBean: void set(java.lang.String,java.lang.Object)>($stack7, null)""];\n	""28"" [label=""return""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""27""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""28""[label=""cfg_goto""];\n	""18"" -> ""28""[label=""cfg_goto""];\n	""19"" -> ""28""[label=""cfg_goto""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_false""];\n	""20"" -> ""9""[label=""cfg_true""];\n	""21"" -> ""10""[label=""cfg_true""];\n	""21"" -> ""3""[label=""cfg_false""];\n	""22"" -> ""11""[label=""cfg_true""];\n	""22"" -> ""15""[label=""cfg_false""];\n	""23"" -> ""12""[label=""cfg_false""];\n	""23"" -> ""28""[label=""cfg_true""];\n	""24"" -> ""19""[label=""cfg_next""];\n	""25"" -> ""18""[label=""cfg_next""];\n	""26"" -> ""17""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""29"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""26""[label=""cfg_next""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.setValue(int,Object)",Method,* Sets an indexed value.\n     * @param index to change\n     * @param value to set,"private void setValue(final int index, final Object value) {\n    if (index == WHOLE_COLLECTION) {\n        dynaBean.set(getPropertyName(), convert(value, false));\n    } else if (isIndexedProperty()) {\n        dynaBean.set(getPropertyName(), index, convert(value, true));\n    } else {\n        final Object baseValue = dynaBean.get(getPropertyName());\n        ValueUtils.setValue(baseValue, index, value);\n    }\n}","void setValue(int,java.lang.Object)","digraph cfg_setValue {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.Object convert(java.lang.Object,boolean)>(value, 0)""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""4"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: boolean isIndexedProperty()>()""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""6"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""7"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""8"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.Object convert(java.lang.Object,boolean)>(value, 1)""];\n	""9"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""10"" [label=""baseValue = interfaceinvoke $stack5.<org.apache.commons.beanutils.DynaBean: java.lang.Object get(java.lang.String)>($stack6)""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack4 == 0""];\n	""14"" [label=""if index != -2147483648""];\n	""15"" [label=""index := @parameter0: int""];\n	""16"" [label=""interfaceinvoke $stack10.<org.apache.commons.beanutils.DynaBean: void set(java.lang.String,java.lang.Object)>($stack12, $stack11)""];\n	""17"" [label=""interfaceinvoke $stack7.<org.apache.commons.beanutils.DynaBean: void set(java.lang.String,int,java.lang.Object)>($stack9, index, $stack8)""];\n	""18"" [label=""return""];\n	""19"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,int,java.lang.Object)>(baseValue, index, value)""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""21"" [label=""value := @parameter1: java.lang.Object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_goto""];\n	""12"" -> ""18""[label=""cfg_goto""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_false""];\n	""14"" -> ""1""[label=""cfg_false""];\n	""14"" -> ""4""[label=""cfg_true""];\n	""15"" -> ""21""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.convert(Object,boolean)",Method,* Convert a value to the appropriate property type.\n     * @param value to convert\n     * @param element whether this should be a collection element.\n     * @return conversion result,"private Object convert(final Object value, final boolean element) {\n    final DynaClass dynaClass = dynaBean.getDynaClass();\n    final DynaProperty property = dynaClass.getDynaProperty(getPropertyName());\n    Class type = property.getType();\n    if (element) {\n        if (type.isArray()) {\n            type = type.getComponentType();\n        } else {\n            // No need to convert\n            return value;\n        }\n    }\n    try {\n        return TypeUtils.convert(value, type);\n    } catch (final Exception ex) {\n        final String string = value == null ? ""null"" : value.getClass().getName();\n        throw new JXPathTypeConversionException(""Cannot convert value of class "" + string + "" to type "" + type, ex);\n    }\n}","java.lang.Object convert(java.lang.Object,boolean)","digraph cfg_convert {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, type)""];\n	""2"" [label=""$stack11 = virtualinvoke type.<java.lang.Class: boolean isArray()>()""];\n	""3"" [label=""$stack12 := @caughtexception""];\n	""4"" [label=""$stack13 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""5"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot convert value of class \"")""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" to type \"")""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(type)""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""11"" [label=""$stack20 = new org.apache.commons.jxpath.JXPathTypeConversionException""];\n	""12"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean>""];\n	""13"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: java.lang.String getPropertyName()>()""];\n	""14"" [label=""dynaClass = interfaceinvoke $stack8.<org.apache.commons.beanutils.DynaBean: org.apache.commons.beanutils.DynaClass getDynaClass()>()""];\n	""15"" [label=""element := @parameter1: boolean""];\n	""16"" [label=""ex = $stack12""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""if $stack11 == 0""];\n	""20"" [label=""if element == 0""];\n	""21"" [label=""if value != null""];\n	""22"" [label=""property = interfaceinvoke dynaClass.<org.apache.commons.beanutils.DynaClass: org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String)>($stack9)""];\n	""23"" [label=""return $stack10""];\n	""24"" [label=""return value""];\n	""25"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""26"" [label=""specialinvoke $stack20.<org.apache.commons.jxpath.JXPathTypeConversionException: void <init>(java.lang.String,java.lang.Exception)>($stack19, ex)""];\n	""27"" [label=""string = \""null\""""];\n	""28"" [label=""string = virtualinvoke $stack13.<java.lang.Class: java.lang.String getName()>()""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""30"" [label=""throw $stack20""];\n	""31"" [label=""type = virtualinvoke property.<org.apache.commons.beanutils.DynaProperty: java.lang.Class getType()>()""];\n	""32"" [label=""type = virtualinvoke type.<java.lang.Class: java.lang.Class getComponentType()>()""];\n	""33"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""1"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""26""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_goto""];\n	""18"" -> ""11""[label=""cfg_goto""];\n	""19"" -> ""24""[label=""cfg_true""];\n	""19"" -> ""32""[label=""cfg_false""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_true""];\n	""20"" -> ""2""[label=""cfg_false""];\n	""21"" -> ""27""[label=""cfg_false""];\n	""21"" -> ""4""[label=""cfg_true""];\n	""22"" -> ""31""[label=""cfg_next""];\n	""25"" -> ""6""[label=""cfg_next""];\n	""26"" -> ""30""[label=""cfg_next""];\n	""27"" -> ""18""[label=""cfg_next""];\n	""28"" -> ""11""[label=""cfg_next""];\n	""29"" -> ""33""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""31"" -> ""20""[label=""cfg_next""];\n	""32"" -> ""17""[label=""cfg_next""];\n	""33"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""25""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer.<init>(NodePointer,DynaBean)",Constructor,* Create a new DynaBeanPropertyPointer.\n     * @param parent pointer\n     * @param dynaBean pointed,"public DynaBeanPropertyPointer(final NodePointer parent, final DynaBean dynaBean) {\n    super(parent);\n    this.dynaBean = dynaBean;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.beanutils.DynaBean)","digraph cfg_init {\n	""1"" [label=""dynaBean := @parameter1: org.apache.commons.beanutils.DynaBean""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.dynabeans.DynaBeanPropertyPointer: org.apache.commons.beanutils.DynaBean dynaBean> = dynaBean""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return CONTAINER_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 200""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n    return bean instanceof Container ? new ContainerPointer((Container) bean, locale) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.apache.commons.jxpath.Container""];\n	""2"" [label=""$stack5 = (org.apache.commons.jxpath.Container) bean""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""bean := @parameter1: java.lang.Object""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""locale := @parameter2: java.util.Locale""];\n	""9"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: void <init>(org.apache.commons.jxpath.Container,java.util.Locale)>($stack5, locale)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    return bean instanceof Container ? new ContainerPointer(parent, (Container) bean) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.apache.commons.jxpath.Container""];\n	""2"" [label=""$stack5 = (org.apache.commons.jxpath.Container) bean""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""bean := @parameter2: java.lang.Object""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""9"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.Container)>(parent, $stack5)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointerFactory""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.isContainer(),Method,* This type of node is auxiliary.\n     * @return {@code true}.,@Override\npublic boolean isContainer() {\n    return true;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return null;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return container;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.Container container>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    final Object value = getBaseValue();\n    return value != null && ValueUtils.isCollection(value);\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(value)""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if value == null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""9"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    final Object value = getBaseValue();\n    return value == null ? 1 : ValueUtils.getLength(value);\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""$stack2 = 1""];\n	""2"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>(value)""];\n	""3"" [label=""goto""];\n	""4"" [label=""if value != null""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""7"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return getValuePointer().isLeaf();\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLeaf()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getImmediateNode(),Method,No Comment,"@Override\npublic Object getImmediateNode() {\n    final Object value = getBaseValue();\n    if (index != WHOLE_COLLECTION) {\n        return index >= 0 && index < getLength() ? ValueUtils.getValue(value, index) : null;\n    }\n    return ValueUtils.getValue(value);\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int index>""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>(value)""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int index>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int index>""];\n	""5"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int getLength()>()""];\n	""6"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int index>""];\n	""7"" [label=""$stack8 = null""];\n	""8"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>(value, $stack7)""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack2 == -2147483648""];\n	""11"" [label=""if $stack4 < 0""];\n	""12"" [label=""if $stack5 >= $stack6""];\n	""13"" [label=""return $stack3""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""16"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.setValue(Object),Method,No Comment,@Override\npublic void setValue(final Object value) {\n    // TODO: what if this is a collection?\n    container.setValue(value);\n},void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.Container container>""];\n	""2"" [label=""interfaceinvoke $stack2.<org.apache.commons.jxpath.Container: void setValue(java.lang.Object)>(value)""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getImmediateValuePointer(),Method,No Comment,"@Override\npublic NodePointer getImmediateValuePointer() {\n    if (valuePointer == null) {\n        final Object value = getImmediateNode();\n        valuePointer = newChildNodePointer(this, getName(), value);\n    }\n    return valuePointer;\n}",org.apache.commons.jxpath.ri.model.NodePointer getImmediateValuePointer(),"digraph cfg_getImmediateValuePointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer>""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""4"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer newChildNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)>(this, $stack4, value)""];\n	""5"" [label=""if $stack2 != null""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = $stack5""];\n	""9"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: java.lang.Object getImmediateNode()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""9""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return System.identityHashCode(container) + index;\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.Container container>""];\n	""2"" [label=""$stack2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($stack1)""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int index>""];\n	""4"" [label=""$stack4 = $stack2 + $stack3""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof ContainerPointer)) {\n        return false;\n    }\n    final ContainerPointer other = (ContainerPointer) object;\n    return container == other.container && index == other.index;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""2"" [label=""$stack4 = other.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.Container container>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.Container container>""];\n	""4"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int index>""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: int index>""];\n	""6"" [label=""$stack8 = 0""];\n	""7"" [label=""$stack8 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack3 != 0""];\n	""10"" [label=""if $stack5 != $stack4""];\n	""11"" [label=""if $stack7 != $stack6""];\n	""12"" [label=""if object != this""];\n	""13"" [label=""object := @parameter0: java.lang.Object""];\n	""14"" [label=""other = (org.apache.commons.jxpath.ri.model.container.ContainerPointer) object""];\n	""15"" [label=""return $stack8""];\n	""16"" [label=""return 0""];\n	""17"" [label=""return 1""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_true""];\n	""12"" -> ""17""[label=""cfg_false""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_goto""];\n	""9"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""16""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.container.ContainerPointer.childIterator(NodeTest,boolean,NodePointer)",Method,No Comment,"@Override\npublic NodeIterator childIterator(final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    return getValuePointer().childIterator(test, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_childIterator {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(test, reverse, startWith)""];\n	""3"" [label=""return $stack5""];\n	""4"" [label=""reverse := @parameter1: boolean""];\n	""5"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.attributeIterator(QName),Method,No Comment,@Override\npublic NodeIterator attributeIterator(final QName name) {\n    return getValuePointer().attributeIterator(name);\n},org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""3"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.namespaceIterator(),Method,No Comment,@Override\npublic NodeIterator namespaceIterator() {\n    return getValuePointer().namespaceIterator();\n},org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator(),"digraph cfg_namespaceIterator {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.namespacePointer(String),Method,No Comment,@Override\npublic NodePointer namespacePointer(final String namespace) {\n    return getValuePointer().namespacePointer(namespace);\n},org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String),"digraph cfg_namespacePointer {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String)>(namespace)""];\n	""3"" [label=""namespace := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.testNode(NodeTest),Method,No Comment,@Override\npublic boolean testNode(final NodeTest nodeTest) {\n    return getValuePointer().testNode(nodeTest);\n},boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>(nodeTest)""];\n	""3"" [label=""nodeTest := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.container.ContainerPointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    return pointer1.getIndex() - pointer2.getIndex();\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""$stack3 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""2"" [label=""$stack4 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""3"" [label=""$stack5 = $stack3 - $stack4""];\n	""4"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.getNamespaceURI(String),Method,No Comment,@Override\npublic String getNamespaceURI(final String prefix) {\n    return getValuePointer().getNamespaceURI(prefix);\n},java.lang.String getNamespaceURI(java.lang.String),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""3"" [label=""prefix := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.container.ContainerPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    return parent == null ? ""/"" : parent.asPath();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack3 = \""/\""""];\n	""4"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.container.ContainerPointer.<init>(Container,Locale)",Constructor,* Create a new ContainerPointer.\n     * @param container Container object\n     * @param locale Locale,"public ContainerPointer(final Container container, final Locale locale) {\n    super(null, locale);\n    this.container = container;\n}","void <init>(org.apache.commons.jxpath.Container,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""container := @parameter0: org.apache.commons.jxpath.Container""];\n	""2"" [label=""locale := @parameter1: java.util.Locale""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.Container container> = container""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.container.ContainerPointer.<init>(NodePointer,Container)",Constructor,* Create a new ContainerPointer.\n     * @param parent parent pointer\n     * @param container Container object,"public ContainerPointer(final NodePointer parent, final Container container) {\n    super(parent);\n    this.container = container;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.Container)","digraph cfg_init {\n	""1"" [label=""container := @parameter1: org.apache.commons.jxpath.Container""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.container.ContainerPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.container.ContainerPointer: org.apache.commons.jxpath.Container container> = container""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.isContainer(),Method,No Comment,@Override\npublic boolean isContainer() {\n    return true;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return name;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.getBaseValue(),Method,No Comment,"@Override\npublic Object getBaseValue() {\n    if (!actual) {\n        throw new JXPathException(""Undefined variable: "" + name);\n    }\n    return variables.getVariable(name.toString());\n}",java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""2"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""3"" [label=""$stack11 = new org.apache.commons.jxpath.JXPathException""];\n	""4"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""5"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""6"" [label=""$stack4 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""7"" [label=""$stack5 = interfaceinvoke $stack3.<org.apache.commons.jxpath.Variables: java.lang.Object getVariable(java.lang.String)>($stack4)""];\n	""8"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""10"" [label=""$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Undefined variable: \"")""];\n	""11"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7)""];\n	""12"" [label=""if $stack1 != 0""];\n	""13"" [label=""return $stack5""];\n	""14"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack10)""];\n	""15"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""17"" [label=""throw $stack11""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    final Object value = getNode();\n    return value == null || JXPathIntrospector.getBeanInfo(value.getClass()).isAtomic();\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack2 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack2)""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isAtomic()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if value == null""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""11"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getNode()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    final Object value = getBaseValue();\n    return value != null && ValueUtils.isCollection(value);\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(value)""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if value == null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""9"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.getImmediateNode(),Method,No Comment,"@Override\npublic Object getImmediateNode() {\n    final Object value = getBaseValue();\n    return index == WHOLE_COLLECTION ? ValueUtils.getValue(value) : ValueUtils.getValue(value, index);\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""3"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>(value)""];\n	""4"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>(value, $stack3)""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 != -2147483648""];\n	""7"" [label=""return $stack4""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""9"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.setValue(Object),Method,No Comment,"@Override\npublic void setValue(final Object value) {\n    if (!actual) {\n        throw new JXPathException(""Cannot set undefined variable: "" + name);\n    }\n    valuePointer = null;\n    if (index != WHOLE_COLLECTION) {\n        final Object collection = getBaseValue();\n        ValueUtils.setValue(collection, index, value);\n    } else {\n        variables.declareVariable(name.toString(), value);\n    }\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot set undefined variable: \"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack14 = new org.apache.commons.jxpath.JXPathException""];\n	""6"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""7"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""8"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""9"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""10"" [label=""$stack7 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""11"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""12"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""13"" [label=""collection = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getBaseValue()>()""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack3 != 0""];\n	""16"" [label=""if $stack4 == -2147483648""];\n	""17"" [label=""interfaceinvoke $stack6.<org.apache.commons.jxpath.Variables: void declareVariable(java.lang.String,java.lang.Object)>($stack7, value)""];\n	""18"" [label=""return""];\n	""19"" [label=""specialinvoke $stack14.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack13)""];\n	""20"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""21"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,int,java.lang.Object)>(collection, $stack8, value)""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = null""];\n	""24"" [label=""throw $stack14""];\n	""25"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_goto""];\n	""15"" -> ""23""[label=""cfg_true""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""13""[label=""cfg_false""];\n	""16"" -> ""9""[label=""cfg_true""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_next""];\n	""21"" -> ""14""[label=""cfg_next""];\n	""22"" -> ""25""[label=""cfg_next""];\n	""23"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    return actual;\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.setIndex(int),Method,No Comment,@Override\npublic void setIndex(final int index) {\n    super.setIndex(index);\n    valuePointer = null;\n},void setIndex(int),"digraph cfg_setIndex {\n	""1"" [label=""index := @parameter0: int""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = null""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.getImmediateValuePointer(),Method,No Comment,"@Override\npublic NodePointer getImmediateValuePointer() {\n    if (valuePointer == null) {\n        Object value;\n        if (actual) {\n            value = getImmediateNode();\n            valuePointer = newChildNodePointer(this, null, value);\n        } else {\n            return new NullPointer(this, getName()) {\n\n                private static final long serialVersionUID = 1L;\n\n                @Override\n                public Object getImmediateNode() {\n                    throw new JXPathException(""Undefined variable: "" + name);\n                }\n            };\n        }\n    }\n    return valuePointer;\n}",org.apache.commons.jxpath.ri.model.NodePointer getImmediateValuePointer(),"digraph cfg_getImmediateValuePointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""4"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""5"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.VariablePointer$1""];\n	""6"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer newChildNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)>(this, null, value)""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack2 != null""];\n	""9"" [label=""if $stack4 == 0""];\n	""10"" [label=""return $stack3""];\n	""11"" [label=""return $stack6""];\n	""12"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.VariablePointer$1: void <init>(org.apache.commons.jxpath.ri.model.VariablePointer,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(this, this, $stack5)""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = $stack7""];\n	""15"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getImmediateNode()>()""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""15""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    if (actual) {\n        final Object value = getBaseValue();\n        return value == null ? 1 : ValueUtils.getLength(value);\n    }\n    return 0;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""2"" [label=""$stack3 = 1""];\n	""3"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>(value)""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if value != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""return 0""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""10"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""10""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointer.createPath(JXPathContext,Object)",Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context, final Object value) {\n    if (actual) {\n        setValue(value);\n        return this;\n    }\n    final NodePointer ptr = createPath(context);\n    ptr.setValue(value);\n    return ptr;\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""if $stack4 == 0""];\n	""4"" [label=""ptr = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""5"" [label=""return ptr""];\n	""6"" [label=""return this""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""8"" [label=""value := @parameter1: java.lang.Object""];\n	""9"" [label=""virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""10"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_false""];\n	""3"" -> ""4""[label=""cfg_true""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.createPath(JXPathContext),Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context) {\n    if (!actual) {\n        final AbstractFactory factory = getAbstractFactory(context);\n        if (!factory.declareVariable(context, name.toString())) {\n            throw new JXPathAbstractFactoryException(""Factory cannot define variable '"" + name + ""' for path: "" + asPath());\n        }\n        findVariables(context);\n        // Assert: actual == true\n    }\n    return this;\n}",org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8)""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.String asPath()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\' for path: \"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""7"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""8"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""9"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""10"" [label=""$stack6 = virtualinvoke factory.<org.apache.commons.jxpath.AbstractFactory: boolean declareVariable(org.apache.commons.jxpath.JXPathContext,java.lang.String)>(context, $stack5)""];\n	""11"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""12"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""13"" [label=""$stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory cannot define variable \'\"")""];\n	""14"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""15"" [label=""factory = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.AbstractFactory getAbstractFactory(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""16"" [label=""if $stack3 != 0""];\n	""17"" [label=""if $stack6 != 0""];\n	""18"" [label=""return this""];\n	""19"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack14)""];\n	""20"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""22"" [label=""throw $stack15""];\n	""23"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: void findVariables(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_false""];\n	""16"" -> ""18""[label=""cfg_true""];\n	""17"" -> ""23""[label=""cfg_true""];\n	""17"" -> ""6""[label=""cfg_false""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""21"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointer.createChild(JXPathContext,QName,int)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index) {\n    final Object collection = createCollection(context, index);\n    if (!isActual() || index != 0 && index != WHOLE_COLLECTION) {\n        final AbstractFactory factory = getAbstractFactory(context);\n        final boolean success = factory.createObject(context, this, collection, getName().toString(), index);\n        if (!success) {\n            throw new JXPathAbstractFactoryException(""Factory could not create object path: "" + asPath());\n        }\n        final NodePointer cln = (NodePointer) clone();\n        cln.setIndex(index);\n        return cln;\n    }\n    return this;\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object clone()>()""];\n	""3"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.String asPath()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory could not create object path: \"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack17 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""9"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean isActual()>()""];\n	""10"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""11"" [label=""cln = (org.apache.commons.jxpath.ri.model.NodePointer) $stack11""];\n	""12"" [label=""collection = specialinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object createCollection(org.apache.commons.jxpath.JXPathContext,int)>(context, index)""];\n	""13"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""14"" [label=""factory = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.AbstractFactory getAbstractFactory(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""15"" [label=""if $stack8 == 0""];\n	""16"" [label=""if index == -2147483648""];\n	""17"" [label=""if index == 0""];\n	""18"" [label=""if success != 0""];\n	""19"" [label=""index := @parameter2: int""];\n	""20"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""21"" [label=""return cln""];\n	""22"" [label=""return this""];\n	""23"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()""];\n	""24"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack16)""];\n	""25"" [label=""success = virtualinvoke factory.<org.apache.commons.jxpath.AbstractFactory: boolean createObject(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.Pointer,java.lang.Object,java.lang.String,int)>(context, this, collection, $stack10, index)""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""27"" [label=""throw $stack17""];\n	""28"" [label=""virtualinvoke cln.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""1"" -> ""25""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_true""];\n	""15"" -> ""17""[label=""cfg_false""];\n	""16"" -> ""14""[label=""cfg_false""];\n	""16"" -> ""22""[label=""cfg_true""];\n	""17"" -> ""16""[label=""cfg_false""];\n	""17"" -> ""22""[label=""cfg_true""];\n	""18"" -> ""2""[label=""cfg_true""];\n	""18"" -> ""8""[label=""cfg_false""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""24"" -> ""27""[label=""cfg_next""];\n	""25"" -> ""18""[label=""cfg_next""];\n	""26"" -> ""13""[label=""cfg_next""];\n	""28"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""24""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointer.createChild(JXPathContext,QName,int,Object)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    final Object collection = createCollection(context, index);\n    ValueUtils.setValue(collection, index, value);\n    final NodePointer cl = (NodePointer) clone();\n    cl.setIndex(index);\n    return cl;\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object clone()>()""];\n	""2"" [label=""cl = (org.apache.commons.jxpath.ri.model.NodePointer) $stack7""];\n	""3"" [label=""collection = specialinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object createCollection(org.apache.commons.jxpath.JXPathContext,int)>(context, index)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""index := @parameter2: int""];\n	""6"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""7"" [label=""return cl""];\n	""8"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,int,java.lang.Object)>(collection, index, value)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""10"" [label=""value := @parameter3: java.lang.Object""];\n	""11"" [label=""virtualinvoke cl.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointer.createCollection(JXPathContext,int)",Method,* Create a collection.\n     * @param context JXPathContext\n     * @param index collection index\n     * @return Object,"private Object createCollection(final JXPathContext context, int index) {\n    createPath(context);\n    Object collection = getBaseValue();\n    if (collection == null) {\n        throw new JXPathAbstractFactoryException(""Factory did not assign a collection to variable '"" + name + ""' for path: "" + asPath());\n    }\n    if (index == WHOLE_COLLECTION) {\n        index = 0;\n    } else if (index < 0) {\n        throw new JXPathInvalidAccessException(""Index is less than 1: "" + asPath());\n    }\n    if (index >= getLength()) {\n        collection = ValueUtils.expandCollection(collection, index + 1);\n        variables.declareVariable(name.toString(), collection);\n    }\n    return collection;\n}","java.lang.Object createCollection(org.apache.commons.jxpath.JXPathContext,int)","digraph cfg_createCollection {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.String asPath()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Index is less than 1: \"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack14 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""6"" [label=""$stack15 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""8"" [label=""$stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory did not assign a collection to variable \'\"")""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16)""];\n	""10"" [label=""$stack19 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.String asPath()>()""];\n	""11"" [label=""$stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\' for path: \"")""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19)""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""15"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: int getLength()>()""];\n	""16"" [label=""$stack5 = index + 1""];\n	""17"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""18"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""19"" [label=""$stack8 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""20"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""21"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object expandCollection(java.lang.Object,int)>(collection, $stack5)""];\n	""22"" [label=""collection = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getBaseValue()>()""];\n	""23"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""24"" [label=""goto""];\n	""25"" [label=""if collection != null""];\n	""26"" [label=""if index != -2147483648""];\n	""27"" [label=""if index < $stack4""];\n	""28"" [label=""if index >= 0""];\n	""29"" [label=""index := @parameter1: int""];\n	""30"" [label=""index = 0""];\n	""31"" [label=""interfaceinvoke $stack7.<org.apache.commons.jxpath.Variables: void declareVariable(java.lang.String,java.lang.Object)>($stack8, collection)""];\n	""32"" [label=""return collection""];\n	""33"" [label=""specialinvoke $stack14.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack13)""];\n	""34"" [label=""specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack22)""];\n	""36"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""38"" [label=""throw $stack14""];\n	""39"" [label=""throw $stack23""];\n	""40"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""35""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""27""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""36""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""25""[label=""cfg_next""];\n	""23"" -> ""29""[label=""cfg_next""];\n	""24"" -> ""15""[label=""cfg_goto""];\n	""25"" -> ""14""[label=""cfg_false""];\n	""25"" -> ""26""[label=""cfg_true""];\n	""26"" -> ""28""[label=""cfg_true""];\n	""26"" -> ""30""[label=""cfg_false""];\n	""27"" -> ""16""[label=""cfg_false""];\n	""27"" -> ""32""[label=""cfg_true""];\n	""28"" -> ""15""[label=""cfg_true""];\n	""28"" -> ""5""[label=""cfg_false""];\n	""29"" -> ""40""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""24""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""33"" -> ""38""[label=""cfg_next""];\n	""34"" -> ""8""[label=""cfg_next""];\n	""35"" -> ""39""[label=""cfg_next""];\n	""36"" -> ""2""[label=""cfg_next""];\n	""37"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""33""[label=""cfg_next""];\n	""40"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""34""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.VariablePointer.remove(),Method,No Comment,"@Override\npublic void remove() {\n    if (actual) {\n        if (index == WHOLE_COLLECTION) {\n            variables.undeclareVariable(name.toString());\n        } else {\n            if (index < 0) {\n                throw new JXPathInvalidAccessException(""Index is less than 1: "" + asPath());\n            }\n            Object collection = getBaseValue();\n            if (collection != null && index < getLength()) {\n                collection = ValueUtils.remove(collection, index);\n                variables.declareVariable(name.toString(), collection);\n            }\n        }\n    }\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.String asPath()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Index is less than 1: \"")""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12)""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack16 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""10"" [label=""$stack19 = virtualinvoke $stack17.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""11"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""12"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""13"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""14"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""15"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: int getLength()>()""];\n	""16"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""17"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""18"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""19"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object remove(java.lang.Object,int)>(collection, $stack7)""];\n	""20"" [label=""collection = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getBaseValue()>()""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack2 == 0""];\n	""23"" [label=""if $stack3 != -2147483648""];\n	""24"" [label=""if $stack4 >= 0""];\n	""25"" [label=""if $stack5 >= $stack6""];\n	""26"" [label=""if collection == null""];\n	""27"" [label=""interfaceinvoke $stack18.<org.apache.commons.jxpath.Variables: void undeclareVariable(java.lang.String)>($stack19)""];\n	""28"" [label=""interfaceinvoke $stack9.<org.apache.commons.jxpath.Variables: void declareVariable(java.lang.String,java.lang.Object)>($stack10, collection)""];\n	""29"" [label=""return""];\n	""30"" [label=""specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>()""];\n	""31"" [label=""specialinvoke $stack16.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack15)""];\n	""32"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""33"" [label=""throw $stack16""];\n	""1"" -> ""28""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_next""];\n	""11"" -> ""22""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""25""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""30""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_next""];\n	""21"" -> ""29""[label=""cfg_goto""];\n	""22"" -> ""12""[label=""cfg_false""];\n	""22"" -> ""29""[label=""cfg_true""];\n	""23"" -> ""13""[label=""cfg_true""];\n	""23"" -> ""9""[label=""cfg_false""];\n	""24"" -> ""20""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_false""];\n	""25"" -> ""16""[label=""cfg_false""];\n	""25"" -> ""29""[label=""cfg_true""];\n	""26"" -> ""14""[label=""cfg_false""];\n	""26"" -> ""29""[label=""cfg_true""];\n	""27"" -> ""21""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""4""[label=""cfg_next""];\n	""31"" -> ""33""[label=""cfg_next""];\n	""32"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""31""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.findVariables(JXPathContext),Method,* Assimilate the Variables instance associated with the specified context.\n     * @param context JXPathContext to search,protected void findVariables(final JXPathContext context) {\n    valuePointer = null;\n    JXPathContext varCtx = context;\n    while (varCtx != null) {\n        variables = varCtx.getVariables();\n        if (variables.isDeclaredVariable(name.toString())) {\n            actual = true;\n            break;\n        }\n        varCtx = varCtx.getParentContext();\n        variables = null;\n    }\n},void findVariables(org.apache.commons.jxpath.JXPathContext),"digraph cfg_findVariables {\n	""1"" [label=""$stack3 = virtualinvoke varCtx.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Variables getVariables()>()""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""4"" [label=""$stack6 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""5"" [label=""$stack7 = interfaceinvoke $stack5.<org.apache.commons.jxpath.Variables: boolean isDeclaredVariable(java.lang.String)>($stack6)""];\n	""6"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""7"" [label=""goto""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack7 == 0""];\n	""10"" [label=""if varCtx == null""];\n	""11"" [label=""return""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual> = 1""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables> = $stack3""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables> = null""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = null""];\n	""17"" [label=""varCtx = context""];\n	""18"" [label=""varCtx = virtualinvoke varCtx.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext getParentContext()>()""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""10""[label=""cfg_goto""];\n	""9"" -> ""13""[label=""cfg_false""];\n	""9"" -> ""18""[label=""cfg_true""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.VariablePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return (actual ? System.identityHashCode(variables) : 0) + name.hashCode() + index;\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.QName: int hashCode()>()""];\n	""4"" [label=""$stack4 = $stack8 + $stack3""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""6"" [label=""$stack6 = $stack4 + $stack5""];\n	""7"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""8"" [label=""$stack8 = 0""];\n	""9"" [label=""$stack8 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($stack7)""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack1 == 0""];\n	""12"" [label=""return $stack6""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_goto""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""11"" -> ""8""[label=""cfg_true""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof VariablePointer)) {\n        return false;\n    }\n    final VariablePointer other = (VariablePointer) object;\n    return variables == other.variables && name.equals(other.name) && index == other.index;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""2"" [label=""$stack11 = 0""];\n	""3"" [label=""$stack11 = 1""];\n	""4"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""5"" [label=""$stack4 = other.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables>""];\n	""7"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""8"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""9"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.QName: boolean equals(java.lang.Object)>($stack6)""];\n	""10"" [label=""$stack9 = other.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack10 != $stack9""];\n	""13"" [label=""if $stack3 != 0""];\n	""14"" [label=""if $stack5 != $stack4""];\n	""15"" [label=""if $stack8 == 0""];\n	""16"" [label=""if object != this""];\n	""17"" [label=""object := @parameter0: java.lang.Object""];\n	""18"" [label=""other = (org.apache.commons.jxpath.ri.model.VariablePointer) object""];\n	""19"" [label=""return $stack11""];\n	""20"" [label=""return 0""];\n	""21"" [label=""return 1""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_goto""];\n	""12"" -> ""2""[label=""cfg_true""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""13"" -> ""20""[label=""cfg_false""];\n	""14"" -> ""2""[label=""cfg_true""];\n	""14"" -> ""8""[label=""cfg_false""];\n	""15"" -> ""1""[label=""cfg_false""];\n	""15"" -> ""2""[label=""cfg_true""];\n	""16"" -> ""21""[label=""cfg_false""];\n	""16"" -> ""4""[label=""cfg_true""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.asPath(),Method,No Comment,@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append('$');\n    buffer.append(name);\n    if (!actual) {\n        if (index != WHOLE_COLLECTION) {\n            buffer.append('[').append(index + 1).append(']');\n        }\n    } else if (index != WHOLE_COLLECTION && (getNode() == null || isCollection())) {\n        buffer.append('[').append(index + 1).append(']');\n    }\n    return buffer.toString();\n},java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9)""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean isCollection()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""6"" [label=""$stack15 = $stack14 + 1""];\n	""7"" [label=""$stack16 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15)""];\n	""9"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name>""];\n	""11"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual>""];\n	""12"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""13"" [label=""$stack6 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: java.lang.Object getNode()>()""];\n	""15"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.VariablePointer: int index>""];\n	""16"" [label=""$stack9 = $stack8 + 1""];\n	""17"" [label=""buffer = $stack2""];\n	""18"" [label=""goto""];\n	""19"" [label=""if $stack12 == 0""];\n	""20"" [label=""if $stack13 == -2147483648""];\n	""21"" [label=""if $stack4 != 0""];\n	""22"" [label=""if $stack5 == -2147483648""];\n	""23"" [label=""if $stack7 == null""];\n	""24"" [label=""return $stack6""];\n	""25"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""27"" [label=""virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""28"" [label=""virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""29"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36)""];\n	""30"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3)""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""30""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""23""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_goto""];\n	""19"" -> ""1""[label=""cfg_false""];\n	""19"" -> ""13""[label=""cfg_true""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_true""];\n	""20"" -> ""7""[label=""cfg_false""];\n	""21"" -> ""12""[label=""cfg_true""];\n	""21"" -> ""4""[label=""cfg_false""];\n	""22"" -> ""13""[label=""cfg_true""];\n	""22"" -> ""14""[label=""cfg_false""];\n	""23"" -> ""1""[label=""cfg_true""];\n	""23"" -> ""3""[label=""cfg_false""];\n	""25"" -> ""17""[label=""cfg_next""];\n	""26"" -> ""9""[label=""cfg_next""];\n	""27"" -> ""13""[label=""cfg_next""];\n	""28"" -> ""18""[label=""cfg_next""];\n	""29"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointer.childIterator(NodeTest,boolean,NodePointer)",Method,No Comment,"@Override\npublic NodeIterator childIterator(final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    return getValuePointer().childIterator(test, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_childIterator {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(test, reverse, startWith)""];\n	""3"" [label=""return $stack5""];\n	""4"" [label=""reverse := @parameter1: boolean""];\n	""5"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.attributeIterator(QName),Method,No Comment,@Override\npublic NodeIterator attributeIterator(final QName name) {\n    return getValuePointer().attributeIterator(name);\n},org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""3"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.namespaceIterator(),Method,No Comment,@Override\npublic NodeIterator namespaceIterator() {\n    return getValuePointer().namespaceIterator();\n},org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator(),"digraph cfg_namespaceIterator {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.namespacePointer(String),Method,No Comment,@Override\npublic NodePointer namespacePointer(final String name) {\n    return getValuePointer().namespacePointer(name);\n},org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String),"digraph cfg_namespacePointer {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String)>(name)""];\n	""3"" [label=""name := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.testNode(NodeTest),Method,No Comment,@Override\npublic boolean testNode(final NodeTest nodeTest) {\n    return getValuePointer().testNode(nodeTest);\n},boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>(nodeTest)""];\n	""3"" [label=""nodeTest := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    return pointer1.getIndex() - pointer2.getIndex();\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""$stack3 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""2"" [label=""$stack4 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""3"" [label=""$stack5 = $stack3 - $stack4""];\n	""4"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointer.<init>(Variables,QName)",Constructor,* Create a new VariablePointer.\n     * @param variables Variables instance\n     * @param name variable name,"public VariablePointer(final Variables variables, final QName name) {\n    super(null);\n    this.variables = variables;\n    this.name = name;\n    actual = true;\n}","void <init>(org.apache.commons.jxpath.Variables,org.apache.commons.jxpath.ri.QName)","digraph cfg_init {\n	""1"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(null)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual> = 1""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.Variables variables> = variables""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""8"" [label=""variables := @parameter0: org.apache.commons.jxpath.Variables""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointer.<init>(QName),Constructor,* Create a new (non-actual) VariablePointer.\n     * @param name variable name,public VariablePointer(final QName name) {\n    super(null);\n    this.name = name;\n    actual = false;\n},void <init>(org.apache.commons.jxpath.ri.QName),"digraph cfg_init {\n	""1"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(null)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: boolean actual> = 0""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.newNodePointer(QName,Object,Locale)",Method,* Allocates an entirely new NodePointer by iterating through all installed\n     * NodePointerFactories until it finds one that can create a pointer.\n     * @param name QName\n     * @param bean Object\n     * @param locale Locale\n     * @return NodePointer,"public static NodePointer newNodePointer(final QName name, final Object bean, final Locale locale) {\n    NodePointer pointer;\n    if (bean == null) {\n        pointer = new NullPointer(name, locale);\n        return pointer;\n    }\n    final NodePointerFactory[] factories = JXPathContextReferenceImpl.getNodePointerFactories();\n    for (final NodePointerFactory element : factories) {\n        pointer = element.createNodePointer(name, bean, locale);\n        if (pointer != null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(""Could not allocate a NodePointer for object of "" + bean.getClass());\n}","org.apache.commons.jxpath.ri.model.NodePointer newNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_newNodePointer {\n	""1"" [label=""$stack10 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Could not allocate a NodePointer for object of \"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack14 = new org.apache.commons.jxpath.JXPathException""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""7"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""8"" [label=""bean := @parameter1: java.lang.Object""];\n	""9"" [label=""element = l5[l7]""];\n	""10"" [label=""factories = staticinvoke <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] getNodePointerFactories()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""if bean != null""];\n	""13"" [label=""if l7 >= l6""];\n	""14"" [label=""if pointer == null""];\n	""15"" [label=""l5 = factories""];\n	""16"" [label=""l6 = lengthof l5""];\n	""17"" [label=""l7 = 0""];\n	""18"" [label=""l7 = l7 + 1""];\n	""19"" [label=""locale := @parameter2: java.util.Locale""];\n	""20"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""21"" [label=""pointer = $stack15""];\n	""22"" [label=""pointer = interfaceinvoke element.<org.apache.commons.jxpath.ri.model.NodePointerFactory: org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>(name, bean, locale)""];\n	""23"" [label=""return pointer""];\n	""24"" [label=""return pointer""];\n	""25"" [label=""specialinvoke $stack14.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack13)""];\n	""26"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.ri.model.beans.NullPointer: void <init>(org.apache.commons.jxpath.ri.QName,java.util.Locale)>(name, locale)""];\n	""27"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""28"" [label=""throw $stack14""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_goto""];\n	""12"" -> ""10""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""24""[label=""cfg_false""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_next""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""8""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""25"" -> ""28""[label=""cfg_next""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""27"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""26""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.model.NodePointer.newChildNodePointer(NodePointer,QName,Object)",Method,* Allocates an new child NodePointer by iterating through all installed\n     * NodePointerFactories until it finds one that can create a pointer.\n     * @param parent pointer\n     * @param name QName\n     * @param bean Object\n     * @return NodePointer,"public static NodePointer newChildNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    final NodePointerFactory[] factories = JXPathContextReferenceImpl.getNodePointerFactories();\n    for (final NodePointerFactory element : factories) {\n        final NodePointer pointer = element.createNodePointer(parent, name, bean);\n        if (pointer != null) {\n            return pointer;\n        }\n    }\n    throw new JXPathException(""Could not allocate a NodePointer for object of "" + bean.getClass());\n}","org.apache.commons.jxpath.ri.model.NodePointer newChildNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_newChildNodePointer {\n	""1"" [label=""$stack10 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Could not allocate a NodePointer for object of \"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack14 = new org.apache.commons.jxpath.JXPathException""];\n	""6"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""7"" [label=""bean := @parameter2: java.lang.Object""];\n	""8"" [label=""element = l4[l6]""];\n	""9"" [label=""factories = staticinvoke <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] getNodePointerFactories()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""if l6 >= l5""];\n	""12"" [label=""if pointer == null""];\n	""13"" [label=""l4 = factories""];\n	""14"" [label=""l5 = lengthof l4""];\n	""15"" [label=""l6 = 0""];\n	""16"" [label=""l6 = l6 + 1""];\n	""17"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""18"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""19"" [label=""pointer = interfaceinvoke element.<org.apache.commons.jxpath.ri.model.NodePointerFactory: org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)>(parent, name, bean)""];\n	""20"" [label=""return pointer""];\n	""21"" [label=""specialinvoke $stack14.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack13)""];\n	""22"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""23"" [label=""throw $stack14""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_goto""];\n	""11"" -> ""5""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""16""[label=""cfg_true""];\n	""12"" -> ""20""[label=""cfg_false""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.model.NodePointer.getNamespaceResolver(),Method,* Gets the NamespaceResolver associated with this NodePointer.\n     * @return NamespaceResolver,public NamespaceResolver getNamespaceResolver() {\n    if (namespaceResolver == null && parent != null) {\n        namespaceResolver = parent.getNamespaceResolver();\n    }\n    return namespaceResolver;\n},org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver(),"digraph cfg_getNamespaceResolver {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""return $stack2""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver> = $stack5""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.setNamespaceResolver(NamespaceResolver),Method,* Sets the NamespaceResolver for this NodePointer.\n     * @param namespaceResolver NamespaceResolver,public void setNamespaceResolver(final NamespaceResolver namespaceResolver) {\n    this.namespaceResolver = namespaceResolver;\n},void setNamespaceResolver(org.apache.commons.jxpath.ri.NamespaceResolver),"digraph cfg_setNamespaceResolver {\n	""1"" [label=""namespaceResolver := @parameter0: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver> = namespaceResolver""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getParent(),Method,* Gets the parent pointer.\n     * @return NodePointer,public NodePointer getParent() {\n    NodePointer pointer = parent;\n    while (pointer != null && pointer.isContainer()) {\n        pointer = pointer.getImmediateParentPointer();\n    }\n    return pointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getParent(),"digraph cfg_getParent {\n	""1"" [label=""$stack2 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""2"" [label=""goto""];\n	""3"" [label=""if $stack2 == 0""];\n	""4"" [label=""if pointer == null""];\n	""5"" [label=""pointer = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""6"" [label=""pointer = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""7"" [label=""return pointer""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_goto""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""3"" -> ""7""[label=""cfg_true""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getImmediateParentPointer(),Method,* Gets the immediate parent pointer.\n     * @return NodePointer,public NodePointer getImmediateParentPointer() {\n    return parent;\n},org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer(),"digraph cfg_getImmediateParentPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.setAttribute(boolean),Method,"* Sets to true if the pointer represents the ""attribute::"" axis.\n     * @param attribute boolean",public void setAttribute(final boolean attribute) {\n    this.attribute = attribute;\n},void setAttribute(boolean),"digraph cfg_setAttribute {\n	""1"" [label=""attribute := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean attribute> = attribute""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isAttribute(),Method,"* Returns true if the pointer represents the ""attribute::"" axis.\n     * @return boolean",public boolean isAttribute() {\n    return attribute;\n},boolean isAttribute(),"digraph cfg_isAttribute {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean attribute>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isRoot(),Method,* Returns true if this Pointer has no parent.\n     * @return boolean,public boolean isRoot() {\n    return parent == null;\n},boolean isRoot(),"digraph cfg_isRoot {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isLeaf(),Abstract Method,"* If true, this node does not have children\n     * @return boolean",public abstract boolean isLeaf();,boolean isLeaf(),digraph cfg_isLeaf {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.NodePointer.isNode(),Method,* Learn whether this pointer is considered to be a node.\n     * @return boolean\n     * @deprecated Please use !isContainer(),@Deprecated\npublic boolean isNode() {\n    return !isContainer();\n},boolean isNode(),"digraph cfg_isNode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 != 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isContainer(),Method,"* If true, this node is auxiliary and can only be used as an intermediate in\n     * the chain of pointers.\n     * @return boolean",public boolean isContainer() {\n    return false;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getIndex(),Method,"* If the pointer represents a collection, the index identifies\n     * an element of that collection.  The default value of {@code index}\n     * is {@code WHOLE_COLLECTION}, which just means that the pointer\n     * is not indexed at all.\n     * Note: the index on NodePointer starts with 0, not 1.\n     * @return int",public int getIndex() {\n    return index;\n},int getIndex(),"digraph cfg_getIndex {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: int index>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.setIndex(int),Method,* Sets the index of this NodePointer.\n     * @param index int,public void setIndex(final int index) {\n    this.index = index;\n},void setIndex(int),"digraph cfg_setIndex {\n	""1"" [label=""index := @parameter0: int""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: int index> = index""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isCollection(),Abstract Method,* Returns {@code true} if the value of the pointer is an array or\n     * a Collection.\n     * @return boolean,public abstract boolean isCollection();,boolean isCollection(),digraph cfg_isCollection {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.NodePointer.getLength(),Abstract Method,"* If the pointer represents a collection (or collection element),\n     * returns the length of the collection.\n     * Otherwise returns 1 (even if the value is null).\n     * @return int",public abstract int getLength();,int getLength(),digraph cfg_getLength {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.NodePointer.getValue(),Method,"* By default, returns {@code getNode()}, can be overridden to\n     * return a ""canonical"" value, like for instance a DOM element should\n     * return its string value.\n     * @return Object value",@Override\npublic Object getValue() {\n    final NodePointer valuePointer = getValuePointer();\n    if (valuePointer != this) {\n        return valuePointer.getValue();\n    }\n    // Default behavior is to return the same as getNode()\n    return getNode();\n},java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""2"" [label=""$stack3 = virtualinvoke valuePointer.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""3"" [label=""if valuePointer == this""];\n	""4"" [label=""return $stack2""];\n	""5"" [label=""return $stack3""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""7"" [label=""valuePointer = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_true""];\n	""3"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getValuePointer(),Method,"* If this pointer manages a transparent container, like a variable,\n     * this method returns the pointer to the contents.\n     * Only an auxiliary (non-node) pointer can (and should) return a\n     * value pointer other than itself.\n     * Note that you probably don't want to override\n     * {@code getValuePointer()} directly.  Override the\n     * {@code getImmediateValuePointer()} method instead.  The\n     * {@code getValuePointer()} method is calls\n     * {@code getImmediateValuePointer()} and, if the result is not\n     * {@code this}, invokes {@code getValuePointer()} recursively.\n     * The idea here is to open all nested containers. Let's say we have a\n     * container within a container within a container. The\n     * {@code getValuePointer()} method should then open all those\n     * containers and return the pointer to the ultimate contents. It does so\n     * with the above recursion.\n     * @return NodePointer",public NodePointer getValuePointer() {\n    final NodePointer ivp = getImmediateValuePointer();\n    return ivp == this ? this : ivp.getValuePointer();\n},org.apache.commons.jxpath.ri.model.NodePointer getValuePointer(),"digraph cfg_getValuePointer {\n	""1"" [label=""$stack2 = this""];\n	""2"" [label=""$stack2 = virtualinvoke ivp.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if ivp != this""];\n	""5"" [label=""ivp = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateValuePointer()>()""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getImmediateValuePointer(),Method,* @see #getValuePointer()\n     * @return NodePointer is either {@code this} or a pointer\n     *   for the immediately contained value.,public NodePointer getImmediateValuePointer() {\n    return this;\n},org.apache.commons.jxpath.ri.model.NodePointer getImmediateValuePointer(),"digraph cfg_getImmediateValuePointer {\n	""1"" [label=""return this""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isActual(),Method,"* An actual pointer points to an existing part of an object graph, even\n     * if it is null. A non-actual pointer represents a part that does not exist\n     * at all.\n     * For instance consider the pointer ""/address/street"".\n     * If both <em>address</em> and <em>street</em> are not null,\n     * the pointer is actual.\n     * If <em>address</em> is not null, but <em>street</em> is null,\n     * the pointer is still actual.\n     * If <em>address</em> is null, the pointer is not actual.\n     * (In JavaBeans) if <em>address</em> is not a property of the root bean,\n     * a Pointer for this path cannot be obtained at all - actual or otherwise.\n     * @return boolean",public boolean isActual() {\n    return index == WHOLE_COLLECTION || index >= 0 && index < getLength();\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: int index>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.NodePointer: int index>""];\n	""3"" [label=""$stack3 = 0""];\n	""4"" [label=""$stack3 = 1""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.NodePointer: int index>""];\n	""6"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: int getLength()>()""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack1 == -2147483648""];\n	""9"" [label=""if $stack2 < 0""];\n	""10"" [label=""if $stack4 >= $stack5""];\n	""11"" [label=""return $stack3""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getName(),Abstract Method,* Returns the name of this node. Can be null.\n     * @return QName,public abstract QName getName();,org.apache.commons.jxpath.ri.QName getName(),digraph cfg_getName {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.NodePointer.getBaseValue(),Abstract Method,"* Returns the value represented by the pointer before indexing.\n     * So, if the node represents an element of a collection, this\n     * method returns the collection itself.\n     * @return Object value",public abstract Object getBaseValue();,java.lang.Object getBaseValue(),digraph cfg_getBaseValue {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.NodePointer.getNodeValue(),Method,"* Returns the object the pointer points to; does not convert it\n     * to a ""canonical"" type.\n     * @return Object node value\n     * @deprecated 1.1 Please use getNode()",@Deprecated\npublic Object getNodeValue() {\n    return getNode();\n},java.lang.Object getNodeValue(),"digraph cfg_getNodeValue {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getNode(),Method,"* Returns the object the pointer points to; does not convert it\n     * to a ""canonical"" type. Opens containers, properties etc and returns\n     * the ultimate contents.\n     * @return Object node",@Override\npublic Object getNode() {\n    return getValuePointer().getImmediateNode();\n},java.lang.Object getNode(),"digraph cfg_getNode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getImmediateNode()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getRootNode(),Method,* Gets the root node.\n     * @return Object value of this pointer's root (top parent).,@Override\npublic synchronized Object getRootNode() {\n    if (rootNode == null) {\n        rootNode = parent == null ? getImmediateNode() : parent.getRootNode();\n    }\n    return rootNode;\n},java.lang.Object getRootNode(),"digraph cfg_getRootNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object rootNode>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object rootNode>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getRootNode()>()""];\n	""6"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getImmediateNode()>()""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack1 != null""];\n	""9"" [label=""if $stack3 != null""];\n	""10"" [label=""return $stack2""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object rootNode> = $stack5""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.model.NodePointer.getImmediateNode(),Abstract Method,"* Returns the object the pointer points to; does not convert it\n     * to a ""canonical"" type.\n     * @return Object node",public abstract Object getImmediateNode();,java.lang.Object getImmediateNode(),digraph cfg_getImmediateNode {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.NodePointer.setValue(Object),Abstract Method,* Converts the value to the required type and changes the corresponding\n     * object to that value.\n     * @param value the value to set,@Override\npublic abstract void setValue(Object value);,void setValue(java.lang.Object),digraph cfg_setValue {\n}\n,"public , abstract "
"org.apache.commons.jxpath.ri.model.NodePointer.compareChildNodePointers(NodePointer,NodePointer)",Abstract Method,"* Compares two child NodePointers and returns a positive number,\n     * zero or a positive number according to the order of the pointers.\n     * @param pointer1 first pointer to be compared\n     * @param pointer2 second pointer to be compared\n     * @return int per Java comparison conventions","public abstract int compareChildNodePointers(NodePointer pointer1, NodePointer pointer2);","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)",digraph cfg_compareChildNodePointers {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.NodePointer.testNode(NodeTest),Method,* Checks if this Pointer matches the supplied NodeTest.\n     * @param test the NodeTest to execute\n     * @return true if a match,"public boolean testNode(final NodeTest test) {\n    if (test == null) {\n        return true;\n    }\n    if (test instanceof NodeNameTest) {\n        if (isContainer()) {\n            return false;\n        }\n        final NodeNameTest nodeNameTest = (NodeNameTest) test;\n        final QName testName = nodeNameTest.getNodeName();\n        final QName nodeName = getName();\n        if (nodeName == null) {\n            return false;\n        }\n        final String testPrefix = testName.getPrefix();\n        final String nodePrefix = nodeName.getPrefix();\n        if (!safeEquals(testPrefix, nodePrefix)) {\n            final String testNS = getNamespaceURI(testPrefix);\n            final String nodeNS = getNamespaceURI(nodePrefix);\n            if (!safeEquals(testNS, nodeNS)) {\n                return false;\n            }\n        }\n        if (nodeNameTest.isWildcard()) {\n            return true;\n        }\n        return testName.getName().equals(nodeName.getName());\n    }\n    return test instanceof NodeTypeTest && ((NodeTypeTest) test).getNodeType() == Compiler.NODE_TYPE_NODE && isNode();\n}",boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack10 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) test""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isNode()>()""];\n	""5"" [label=""$stack14 = 0""];\n	""6"" [label=""$stack14 = 1""];\n	""7"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""8"" [label=""$stack16 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: boolean safeEquals(java.lang.Object,java.lang.Object)>(testPrefix, nodePrefix)""];\n	""9"" [label=""$stack17 = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: boolean isWildcard()>()""];\n	""10"" [label=""$stack18 = virtualinvoke nodeName.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""11"" [label=""$stack19 = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""12"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack18)""];\n	""13"" [label=""$stack21 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: boolean safeEquals(java.lang.Object,java.lang.Object)>(testNS, nodeNS)""];\n	""14"" [label=""$stack9 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack10 == 0""];\n	""17"" [label=""if $stack12 != 1""];\n	""18"" [label=""if $stack13 == 0""];\n	""19"" [label=""if $stack15 == 0""];\n	""20"" [label=""if $stack16 != 0""];\n	""21"" [label=""if $stack17 == 0""];\n	""22"" [label=""if $stack21 != 0""];\n	""23"" [label=""if $stack9 == 0""];\n	""24"" [label=""if nodeName != null""];\n	""25"" [label=""if test != null""];\n	""26"" [label=""nodeNS = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(nodePrefix)""];\n	""27"" [label=""nodeName = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""28"" [label=""nodeNameTest = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) test""];\n	""29"" [label=""nodePrefix = virtualinvoke nodeName.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""30"" [label=""return $stack14""];\n	""31"" [label=""return $stack20""];\n	""32"" [label=""return 0""];\n	""33"" [label=""return 0""];\n	""34"" [label=""return 0""];\n	""35"" [label=""return 1""];\n	""36"" [label=""return 1""];\n	""37"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""38"" [label=""testNS = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(testPrefix)""];\n	""39"" [label=""testName = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""40"" [label=""testPrefix = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""31""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""23""[label=""cfg_next""];\n	""15"" -> ""30""[label=""cfg_goto""];\n	""16"" -> ""2""[label=""cfg_false""];\n	""16"" -> ""5""[label=""cfg_true""];\n	""17"" -> ""4""[label=""cfg_false""];\n	""17"" -> ""5""[label=""cfg_true""];\n	""18"" -> ""5""[label=""cfg_true""];\n	""18"" -> ""6""[label=""cfg_false""];\n	""19"" -> ""28""[label=""cfg_true""];\n	""19"" -> ""32""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""38""[label=""cfg_false""];\n	""20"" -> ""9""[label=""cfg_true""];\n	""21"" -> ""11""[label=""cfg_true""];\n	""21"" -> ""36""[label=""cfg_false""];\n	""22"" -> ""34""[label=""cfg_false""];\n	""22"" -> ""9""[label=""cfg_true""];\n	""23"" -> ""1""[label=""cfg_true""];\n	""23"" -> ""7""[label=""cfg_false""];\n	""24"" -> ""33""[label=""cfg_false""];\n	""24"" -> ""40""[label=""cfg_true""];\n	""25"" -> ""14""[label=""cfg_true""];\n	""25"" -> ""35""[label=""cfg_false""];\n	""26"" -> ""13""[label=""cfg_next""];\n	""27"" -> ""24""[label=""cfg_next""];\n	""28"" -> ""39""[label=""cfg_next""];\n	""29"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""37"" -> ""25""[label=""cfg_next""];\n	""38"" -> ""26""[label=""cfg_next""];\n	""39"" -> ""27""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""40"" -> ""29""[label=""cfg_next""];\n	""41"" -> ""37""[label=""cfg_next""];\n	""5"" -> ""30""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.createPath(JXPathContext,Object)",Method,*  Called directly by JXPathContext. Must create path and\n     *  set value.\n     *  @param context the owning JXPathContext\n     *  @param value the new value to set\n     *  @return created NodePointer,"public NodePointer createPath(final JXPathContext context, final Object value) {\n    setValue(value);\n    return this;\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""return this""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""value := @parameter1: java.lang.Object""];\n	""5"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.remove(),Method,* Remove the node of the object graph this pointer points to.,"public void remove() {\n    // It is a no-op\n    //        System.err.println(""REMOVING: "" + asPath() + "" "" + getClass());\n    //        printPointerChain();\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.createPath(JXPathContext),Method,* Called by a child pointer when it needs to create a parent object.\n     * Must create an object described by this pointer and return\n     * a new pointer that properly describes the new object.\n     * @param context the owning JXPathContext\n     * @return created NodePointer,public NodePointer createPath(final JXPathContext context) {\n    return this;\n},org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""return this""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.createChild(JXPathContext,QName,int,Object)",Method,"* Called by a child pointer if that child needs to assign the value\n     * supplied in the createPath(context, value) call to a non-existent\n     * node. This method may have to expand the collection in order to assign\n     * the element.\n     * @param context the owning JXPathCOntext\n     * @param name the QName at which a child should be created\n     * @param index child index.\n     * @param value node value to set\n     * @return created NodePointer","public NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    throw new JXPathException(""Cannot create an object for path "" + asPath() + ""/"" + name + ""["" + (index + 1) + ""]"" + "", operation is not allowed for this type of node"");\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name)""];\n	""2"" [label=""$stack11 = index + 1""];\n	""3"" [label=""$stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""], operation is not allowed for this type of node\"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack16 = new org.apache.commons.jxpath.JXPathException""];\n	""8"" [label=""$stack5 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""10"" [label=""$stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create an object for path \"")""];\n	""11"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6)""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/\"")""];\n	""13"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""14"" [label=""index := @parameter2: int""];\n	""15"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""16"" [label=""specialinvoke $stack16.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack15)""];\n	""17"" [label=""specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>()""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""19"" [label=""throw $stack16""];\n	""20"" [label=""value := @parameter3: java.lang.Object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.createChild(JXPathContext,QName,int)",Method,"* Called by a child pointer when it needs to create a parent object for a\n     * non-existent collection element. It may have to expand the collection,\n     * then create an element object and return a new pointer describing the\n     * newly created element.\n     * @param context the owning JXPathCOntext\n     * @param name the QName at which a child should be created\n     * @param index child index.\n     * @return created NodePointer","public NodePointer createChild(final JXPathContext context, final QName name, final int index) {\n    throw new JXPathException(""Cannot create an object for path "" + asPath() + ""/"" + name + ""["" + (index + 1) + ""]"" + "", operation is not allowed for this type of node"");\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack10 = index + 1""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack10)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""], operation is not allowed for this type of node\"")""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""8"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""9"" [label=""$stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create an object for path \"")""];\n	""10"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""11"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/\"")""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name)""];\n	""13"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""14"" [label=""index := @parameter2: int""];\n	""15"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""16"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack14)""];\n	""17"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""19"" [label=""throw $stack15""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""17"" -> ""9""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.createAttribute(JXPathContext,QName)",Method,* Called to create a non-existing attribute\n     * @param context the owning JXPathCOntext\n     * @param name the QName at which an attribute should be created\n     * @return created NodePointer,"public NodePointer createAttribute(final JXPathContext context, final QName name) {\n    throw new JXPathException(""Cannot create an attribute for path "" + asPath() + ""/@"" + name + "", operation is not allowed for this type of node"");\n}","org.apache.commons.jxpath.ri.model.NodePointer createAttribute(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName)","digraph cfg_createAttribute {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.JXPathException""];\n	""3"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""5"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create an attribute for path \"")""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""7"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/@\"")""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name)""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", operation is not allowed for this type of node\"")""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""11"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""12"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack10)""];\n	""13"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""15"" [label=""throw $stack11""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getLocale(),Method,"* If the Pointer has a parent, returns the parent's locale; otherwise\n     * returns the locale specified when this Pointer was created.\n     * @return Locale for this NodePointer",public Locale getLocale() {\n    if (locale == null && parent != null) {\n        locale = parent.getLocale();\n    }\n    return locale;\n},java.util.Locale getLocale(),"digraph cfg_getLocale {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale locale>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale locale>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale getLocale()>()""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""return $stack2""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale locale> = $stack5""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isLanguage(String),Method,"* Check whether our locale matches the specified language.\n     * @param lang String language to check\n     * @return true if the selected locale name starts\n     *              with the specified prefix <em>lang</em>, case-insensitive.","public boolean isLanguage(final String lang) {\n    final Locale loc = getLocale();\n    final String name = loc.toString().replace('_', '-');\n    return name.toUpperCase(Locale.ENGLISH).startsWith(lang.toUpperCase(Locale.ENGLISH));\n}",boolean isLanguage(java.lang.String),"digraph cfg_isLanguage {\n	""1"" [label=""$stack4 = virtualinvoke loc.<java.util.Locale: java.lang.String toString()>()""];\n	""2"" [label=""$stack5 = <java.util.Locale: java.util.Locale ENGLISH>""];\n	""3"" [label=""$stack6 = <java.util.Locale: java.util.Locale ENGLISH>""];\n	""4"" [label=""$stack7 = virtualinvoke lang.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack6)""];\n	""5"" [label=""$stack8 = virtualinvoke name.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack5)""];\n	""6"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.String: boolean startsWith(java.lang.String)>($stack7)""];\n	""7"" [label=""lang := @parameter0: java.lang.String""];\n	""8"" [label=""loc = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale getLocale()>()""];\n	""9"" [label=""name = virtualinvoke $stack4.<java.lang.String: java.lang.String replace(char,char)>(95, 45)""];\n	""10"" [label=""return $stack9""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.childIterator(NodeTest,boolean,NodePointer)",Method,"* Returns a NodeIterator that iterates over all children or all children\n     * that match the given NodeTest, starting with the specified one.\n     * @param test NodeTest to filter children\n     * @param reverse specified iteration direction\n     * @param startWith the NodePointer to start with\n     * @return NodeIterator","public NodeIterator childIterator(final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    final NodePointer valuePointer = getValuePointer();\n    return valuePointer == null || valuePointer == this ? null : valuePointer.childIterator(test, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_childIterator {\n	""1"" [label=""$stack5 = null""];\n	""2"" [label=""$stack5 = virtualinvoke valuePointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(test, reverse, startWith)""];\n	""3"" [label=""goto""];\n	""4"" [label=""if valuePointer != this""];\n	""5"" [label=""if valuePointer == null""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""reverse := @parameter1: boolean""];\n	""8"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""9"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""11"" [label=""valuePointer = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.attributeIterator(QName),Method,* Returns a NodeIterator that iterates over all attributes of the current\n     * node matching the supplied node name (could have a wildcard).\n     * May return null if the object does not support the attributes.\n     * @param qname the attribute name to test\n     * @return NodeIterator,public NodeIterator attributeIterator(final QName qname) {\n    final NodePointer valuePointer = getValuePointer();\n    return valuePointer == null || valuePointer == this ? null : valuePointer.attributeIterator(qname);\n},org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack3 = null""];\n	""2"" [label=""$stack3 = virtualinvoke valuePointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>(qname)""];\n	""3"" [label=""goto""];\n	""4"" [label=""if valuePointer != this""];\n	""5"" [label=""if valuePointer == null""];\n	""6"" [label=""qname := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""9"" [label=""valuePointer = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.namespaceIterator(),Method,* Returns a NodeIterator that iterates over all namespaces of the value\n     * currently pointed at.\n     * May return null if the object does not support the namespaces.\n     * @return NodeIterator,public NodeIterator namespaceIterator() {\n    return null;\n},org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator(),"digraph cfg_namespaceIterator {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.namespacePointer(String),Method,* Returns a NodePointer for the specified namespace. Will return null\n     * if namespaces are not supported.\n     * Will return UNKNOWN_NAMESPACE if there is no such namespace.\n     * @param namespace incoming namespace\n     * @return NodePointer for {@code namespace},public NodePointer namespacePointer(final String namespace) {\n    return null;\n},org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String),"digraph cfg_namespacePointer {\n	""1"" [label=""namespace := @parameter0: java.lang.String""];\n	""2"" [label=""return null""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getNamespaceURI(String),Method,* Decodes a namespace prefix to the corresponding URI.\n     * @param prefix prefix to decode\n     * @return String uri,public String getNamespaceURI(final String prefix) {\n    return null;\n},java.lang.String getNamespaceURI(java.lang.String),"digraph cfg_getNamespaceURI {\n	""1"" [label=""prefix := @parameter0: java.lang.String""];\n	""2"" [label=""return null""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.getNamespaceURI(),Method,* Returns the namespace URI associated with this Pointer.\n     * @return String uri,public String getNamespaceURI() {\n    return null;\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.isDefaultNamespace(String),Method,* Returns true if the supplied prefix represents the\n     * default namespace in the context of the current node.\n     * @param prefix the prefix to check\n     * @return {@code true} if prefix is default,protected boolean isDefaultNamespace(final String prefix) {\n    if (prefix == null) {\n        return true;\n    }\n    final String namespace = getNamespaceURI(prefix);\n    return namespace != null && namespace.equals(getDefaultNamespaceURI());\n},boolean isDefaultNamespace(java.lang.String),"digraph cfg_isDefaultNamespace {\n	""1"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getDefaultNamespaceURI()>()""];\n	""2"" [label=""$stack4 = virtualinvoke namespace.<java.lang.String: boolean equals(java.lang.Object)>($stack3)""];\n	""3"" [label=""$stack5 = 0""];\n	""4"" [label=""$stack5 = 1""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""if namespace == null""];\n	""8"" [label=""if prefix != null""];\n	""9"" [label=""namespace = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""10"" [label=""prefix := @parameter0: java.lang.String""];\n	""11"" [label=""return $stack5""];\n	""12"" [label=""return 1""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""12""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.NodePointer.getDefaultNamespaceURI(),Method,* Gets the default ns uri\n     * @return String uri,protected String getDefaultNamespaceURI() {\n    return null;\n},java.lang.String getDefaultNamespaceURI(),"digraph cfg_getDefaultNamespaceURI {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.model.NodePointer.getPointerByID(JXPathContext,String)",Method,* Locates a node by ID.\n     * @param context JXPathContext owning context\n     * @param id String id\n     * @return Pointer found,"public Pointer getPointerByID(final JXPathContext context, final String id) {\n    return context.getPointerByID(id);\n}","org.apache.commons.jxpath.Pointer getPointerByID(org.apache.commons.jxpath.JXPathContext,java.lang.String)","digraph cfg_getPointerByID {\n	""1"" [label=""$stack3 = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Pointer getPointerByID(java.lang.String)>(id)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""id := @parameter1: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.getPointerByKey(JXPathContext,String,String)",Method,* Locates a node by key and value.\n     * @param context owning JXPathContext\n     * @param key key to search for\n     * @param value value to match\n     * @return Pointer found,"public Pointer getPointerByKey(final JXPathContext context, final String key, final String value) {\n    return context.getPointerByKey(key, value);\n}","org.apache.commons.jxpath.Pointer getPointerByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.String)","digraph cfg_getPointerByKey {\n	""1"" [label=""$stack4 = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Pointer getPointerByKey(java.lang.String,java.lang.String)>(key, value)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""key := @parameter1: java.lang.String""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""value := @parameter2: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.getNodeSetByKey(JXPathContext,String,Object)",Method,* Find a NodeSet by key/value.\n     * @param context owning JXPathContext\n     * @param key key to search for\n     * @param value value to match\n     * @return NodeSet found,"public NodeSet getNodeSetByKey(final JXPathContext context, final String key, final Object value) {\n    return context.getNodeSetByKey(key, value);\n}","org.apache.commons.jxpath.NodeSet getNodeSetByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.Object)","digraph cfg_getNodeSetByKey {\n	""1"" [label=""$stack4 = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.NodeSet getNodeSetByKey(java.lang.String,java.lang.Object)>(key, value)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""key := @parameter1: java.lang.String""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""value := @parameter2: java.lang.Object""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.asPath(),Method,* Returns an XPath that maps to this Pointer.\n     * @return String xpath expression,"@Override\npublic String asPath() {\n    // If the parent of this node is a container, it is responsible\n    // for appended this node's part of the path.\n    if (parent != null && parent.isContainer()) {\n        return parent.asPath();\n    }\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n    }\n    if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n        buffer.append('/');\n    }\n    if (attribute) {\n        buffer.append('@');\n    }\n    buffer.append(getName());\n    if (index != WHOLE_COLLECTION && isCollection()) {\n        buffer.append('[').append(index + 1).append(']');\n    }\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isCollection()>()""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.NodePointer: int index>""];\n	""3"" [label=""$stack12 = $stack11 + 1""];\n	""4"" [label=""$stack13 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12)""];\n	""6"" [label=""$stack15 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""7"" [label=""$stack16 = $stack15 - 1""];\n	""8"" [label=""$stack17 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack16)""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""11"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""12"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""13"" [label=""$stack21 = virtualinvoke $stack20.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""14"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""15"" [label=""$stack23 = virtualinvoke $stack22.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""16"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""17"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""18"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""19"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean attribute>""];\n	""20"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""21"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.NodePointer: int index>""];\n	""22"" [label=""$stack9 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""23"" [label=""buffer = $stack3""];\n	""24"" [label=""if $stack10 == 0""];\n	""25"" [label=""if $stack17 == 47""];\n	""26"" [label=""if $stack2 == null""];\n	""27"" [label=""if $stack21 == 0""];\n	""28"" [label=""if $stack4 == null""];\n	""29"" [label=""if $stack5 == 0""];\n	""30"" [label=""if $stack6 == 0""];\n	""31"" [label=""if $stack8 == -2147483648""];\n	""32"" [label=""return $stack23""];\n	""33"" [label=""return $stack9""];\n	""34"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""35"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""36"" [label=""virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""37"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""38"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64)""];\n	""39"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7)""];\n	""40"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19)""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""40""[label=""cfg_next""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""27""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""34""[label=""cfg_next""];\n	""17"" -> ""28""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_next""];\n	""19"" -> ""30""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""39""[label=""cfg_next""];\n	""21"" -> ""31""[label=""cfg_next""];\n	""22"" -> ""33""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""22""[label=""cfg_true""];\n	""24"" -> ""4""[label=""cfg_false""];\n	""25"" -> ""19""[label=""cfg_true""];\n	""25"" -> ""37""[label=""cfg_false""];\n	""26"" -> ""12""[label=""cfg_false""];\n	""26"" -> ""16""[label=""cfg_true""];\n	""27"" -> ""14""[label=""cfg_false""];\n	""27"" -> ""16""[label=""cfg_true""];\n	""28"" -> ""18""[label=""cfg_true""];\n	""28"" -> ""9""[label=""cfg_false""];\n	""29"" -> ""37""[label=""cfg_true""];\n	""29"" -> ""6""[label=""cfg_false""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""20""[label=""cfg_true""];\n	""30"" -> ""38""[label=""cfg_false""];\n	""31"" -> ""1""[label=""cfg_false""];\n	""31"" -> ""22""[label=""cfg_true""];\n	""34"" -> ""23""[label=""cfg_next""];\n	""35"" -> ""11""[label=""cfg_next""];\n	""36"" -> ""22""[label=""cfg_next""];\n	""37"" -> ""19""[label=""cfg_next""];\n	""38"" -> ""20""[label=""cfg_next""];\n	""39"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""40"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""36""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.clone(),Method,* Clone this NodePointer.\n     * @return cloned NodePointer,@Override\npublic Object clone() {\n    try {\n        final NodePointer ptr = (NodePointer) super.clone();\n        if (parent != null) {\n            ptr.parent = (NodePointer) parent.clone();\n        }\n        return ptr;\n    } catch (final CloneNotSupportedException ex) {\n        // Of course it is supported\n        ex.printStackTrace();\n    }\n    return null;\n},java.lang.Object clone(),"digraph cfg_clone {\n	""1"" [label=""$stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>()""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack4 = ptr""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""6"" [label=""$stack7 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack6""];\n	""7"" [label=""$stack8 := @caughtexception""];\n	""8"" [label=""if $stack3 == null""];\n	""9"" [label=""ptr = $stack8""];\n	""10"" [label=""ptr = (org.apache.commons.jxpath.ri.model.NodePointer) $stack2""];\n	""11"" [label=""ptr.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent> = $stack7""];\n	""12"" [label=""return $stack4""];\n	""13"" [label=""return null""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""15"" [label=""virtualinvoke ptr.<java.lang.CloneNotSupportedException: void printStackTrace()>()""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""1"" -> ""7""[label=""cfg_except""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_except""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_except""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_except""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_except""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_except""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""7""[label=""cfg_except""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.toString(),Method,No Comment,@Override\npublic String toString() {\n    return asPath();\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.compareTo(Object),Method,No Comment,"@Override\npublic int compareTo(final Object object) {\n    if (object == this) {\n        return 0;\n    }\n    // Let it throw a ClassCastException\n    final NodePointer pointer = (NodePointer) object;\n    if (safeEquals(parent, pointer.parent)) {\n        return parent == null ? 0 : parent.compareChildNodePointers(this, pointer);\n    }\n    // Task 1: find the common parent\n    int depth1 = 0;\n    NodePointer p1 = this;\n    final HashSet parents1 = new HashSet();\n    while (p1 != null) {\n        depth1++;\n        p1 = p1.parent;\n        if (p1 != null) {\n            parents1.add(p1);\n        }\n    }\n    boolean commonParentFound = false;\n    int depth2 = 0;\n    NodePointer p2 = pointer;\n    while (p2 != null) {\n        depth2++;\n        p2 = p2.parent;\n        if (parents1.contains(p2)) {\n            commonParentFound = true;\n        }\n    }\n    //nodes from different graphs are equal, else continue comparison:\n    return commonParentFound ? compareNodePointers(this, depth1, pointer, depth2) : 0;\n}",int compareTo(java.lang.Object),"digraph cfg_compareTo {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack11 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: boolean safeEquals(java.lang.Object,java.lang.Object)>($stack10, $stack9)""];\n	""3"" [label=""$stack12 = new java.util.HashSet""];\n	""4"" [label=""$stack13 = 0""];\n	""5"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: int compareNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,int,org.apache.commons.jxpath.ri.model.NodePointer,int)>(this, depth1, pointer, depth2)""];\n	""6"" [label=""$stack14 = virtualinvoke parents1.<java.util.HashSet: boolean contains(java.lang.Object)>(p2)""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""9"" [label=""$stack17 = 0""];\n	""10"" [label=""$stack17 = virtualinvoke $stack16.<org.apache.commons.jxpath.ri.model.NodePointer: int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)>(this, pointer)""];\n	""11"" [label=""$stack9 = pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""12"" [label=""commonParentFound = 0""];\n	""13"" [label=""commonParentFound = 1""];\n	""14"" [label=""depth1 = 0""];\n	""15"" [label=""depth1 = depth1 + 1""];\n	""16"" [label=""depth2 = 0""];\n	""17"" [label=""depth2 = depth2 + 1""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack11 == 0""];\n	""23"" [label=""if $stack14 == 0""];\n	""24"" [label=""if $stack15 != null""];\n	""25"" [label=""if commonParentFound == 0""];\n	""26"" [label=""if object != this""];\n	""27"" [label=""if p1 == null""];\n	""28"" [label=""if p1 == null""];\n	""29"" [label=""if p2 == null""];\n	""30"" [label=""object := @parameter0: java.lang.Object""];\n	""31"" [label=""p1 = p1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""32"" [label=""p1 = this""];\n	""33"" [label=""p2 = p2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""34"" [label=""p2 = pointer""];\n	""35"" [label=""parents1 = $stack12""];\n	""36"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) object""];\n	""37"" [label=""return $stack13""];\n	""38"" [label=""return $stack17""];\n	""39"" [label=""return 0""];\n	""40"" [label=""specialinvoke $stack12.<java.util.HashSet: void <init>()>()""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""42"" [label=""virtualinvoke parents1.<java.util.HashSet: boolean add(java.lang.Object)>(p1)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""38""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_next""];\n	""14"" -> ""32""[label=""cfg_next""];\n	""15"" -> ""31""[label=""cfg_next""];\n	""16"" -> ""34""[label=""cfg_next""];\n	""17"" -> ""33""[label=""cfg_next""];\n	""18"" -> ""38""[label=""cfg_goto""];\n	""19"" -> ""27""[label=""cfg_goto""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""29""[label=""cfg_goto""];\n	""21"" -> ""37""[label=""cfg_goto""];\n	""22"" -> ""14""[label=""cfg_true""];\n	""22"" -> ""7""[label=""cfg_false""];\n	""23"" -> ""13""[label=""cfg_false""];\n	""23"" -> ""29""[label=""cfg_true""];\n	""24"" -> ""8""[label=""cfg_true""];\n	""24"" -> ""9""[label=""cfg_false""];\n	""25"" -> ""4""[label=""cfg_true""];\n	""25"" -> ""5""[label=""cfg_false""];\n	""26"" -> ""36""[label=""cfg_true""];\n	""26"" -> ""39""[label=""cfg_false""];\n	""27"" -> ""12""[label=""cfg_true""];\n	""27"" -> ""15""[label=""cfg_false""];\n	""28"" -> ""27""[label=""cfg_true""];\n	""28"" -> ""42""[label=""cfg_false""];\n	""29"" -> ""17""[label=""cfg_false""];\n	""29"" -> ""25""[label=""cfg_true""];\n	""3"" -> ""40""[label=""cfg_next""];\n	""30"" -> ""26""[label=""cfg_next""];\n	""31"" -> ""28""[label=""cfg_next""];\n	""32"" -> ""3""[label=""cfg_next""];\n	""33"" -> ""6""[label=""cfg_next""];\n	""34"" -> ""29""[label=""cfg_next""];\n	""35"" -> ""27""[label=""cfg_next""];\n	""36"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""37""[label=""cfg_next""];\n	""40"" -> ""35""[label=""cfg_next""];\n	""41"" -> ""30""[label=""cfg_next""];\n	""42"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""24""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.compareNodePointers(NodePointer,int,NodePointer,int)",Method,* Compare node pointers.\n     * @param p1 pointer 1\n     * @param depth1 depth 1\n     * @param p2 pointer 2\n     * @param depth2 depth 2\n     * @return comparison result: (< 0) -> (p1 lt p2); (0) -> (p1 eq p2); (> 0) -> (p1 gt p2),"private int compareNodePointers(final NodePointer p1, final int depth1, final NodePointer p2, final int depth2) {\n    if (depth1 < depth2) {\n        final int r = compareNodePointers(p1, depth1, p2.parent, depth2 - 1);\n        return r == 0 ? -1 : r;\n    }\n    if (depth1 > depth2) {\n        final int r = compareNodePointers(p1.parent, depth1 - 1, p2, depth2);\n        return r == 0 ? 1 : r;\n    }\n    //henceforth depth1 == depth2:\n    if (safeEquals(p1, p2)) {\n        return 0;\n    }\n    if (depth1 == 1) {\n        throw new JXPathException(""Cannot compare pointers that do not belong to the same tree: '"" + p1 + ""' and '"" + p2 + ""'"");\n    }\n    final int r = compareNodePointers(p1.parent, depth1 - 1, p2.parent, depth2 - 1);\n    return r == 0 ? p1.parent.compareChildNodePointers(p1, p2) : r;\n}","int compareNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,int,org.apache.commons.jxpath.ri.model.NodePointer,int)","digraph cfg_compareNodePointers {\n	""1"" [label=""$stack10 = p1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack11 = p1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack12 = r""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodePointer: int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)>(p1, p2)""];\n	""5"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot compare pointers that do not belong to the same tree: \'\"")""];\n	""7"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(p1)""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\' and \'\"")""];\n	""9"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(p2)""];\n	""10"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""11"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack20 = new org.apache.commons.jxpath.JXPathException""];\n	""13"" [label=""$stack21 = depth1 - 1""];\n	""14"" [label=""$stack22 = p1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""15"" [label=""$stack23 = 1""];\n	""16"" [label=""$stack23 = r""];\n	""17"" [label=""$stack24 = depth2 - 1""];\n	""18"" [label=""$stack25 = p2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""19"" [label=""$stack26 = -1""];\n	""20"" [label=""$stack26 = r""];\n	""21"" [label=""$stack6 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: boolean safeEquals(java.lang.Object,java.lang.Object)>(p1, p2)""];\n	""22"" [label=""$stack7 = depth2 - 1""];\n	""23"" [label=""$stack8 = p2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""24"" [label=""$stack9 = depth1 - 1""];\n	""25"" [label=""depth1 := @parameter1: int""];\n	""26"" [label=""depth2 := @parameter3: int""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""if $stack6 == 0""];\n	""31"" [label=""if depth1 != 1""];\n	""32"" [label=""if depth1 <= depth2""];\n	""33"" [label=""if depth1 >= depth2""];\n	""34"" [label=""if r != 0""];\n	""35"" [label=""if r != 0""];\n	""36"" [label=""if r != 0""];\n	""37"" [label=""p1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""38"" [label=""p2 := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""39"" [label=""r = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: int compareNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,int,org.apache.commons.jxpath.ri.model.NodePointer,int)>($stack10, $stack9, $stack8, $stack7)""];\n	""40"" [label=""r = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: int compareNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,int,org.apache.commons.jxpath.ri.model.NodePointer,int)>($stack22, $stack21, p2, depth2)""];\n	""41"" [label=""r = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: int compareNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,int,org.apache.commons.jxpath.ri.model.NodePointer,int)>(p1, depth1, $stack25, $stack24)""];\n	""42"" [label=""return $stack12""];\n	""43"" [label=""return $stack23""];\n	""44"" [label=""return $stack26""];\n	""45"" [label=""return 0""];\n	""46"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""47"" [label=""specialinvoke $stack20.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack19)""];\n	""48"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""49"" [label=""throw $stack20""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""47""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""40""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""28""[label=""cfg_next""];\n	""16"" -> ""43""[label=""cfg_next""];\n	""17"" -> ""41""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""27""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""44""[label=""cfg_next""];\n	""21"" -> ""30""[label=""cfg_next""];\n	""22"" -> ""39""[label=""cfg_next""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""38""[label=""cfg_next""];\n	""26"" -> ""33""[label=""cfg_next""];\n	""27"" -> ""44""[label=""cfg_goto""];\n	""28"" -> ""43""[label=""cfg_goto""];\n	""29"" -> ""42""[label=""cfg_goto""];\n	""3"" -> ""42""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_true""];\n	""30"" -> ""45""[label=""cfg_false""];\n	""31"" -> ""1""[label=""cfg_true""];\n	""31"" -> ""12""[label=""cfg_false""];\n	""32"" -> ""14""[label=""cfg_false""];\n	""32"" -> ""21""[label=""cfg_true""];\n	""33"" -> ""18""[label=""cfg_false""];\n	""33"" -> ""32""[label=""cfg_true""];\n	""34"" -> ""19""[label=""cfg_false""];\n	""34"" -> ""20""[label=""cfg_true""];\n	""35"" -> ""15""[label=""cfg_false""];\n	""35"" -> ""16""[label=""cfg_true""];\n	""36"" -> ""2""[label=""cfg_false""];\n	""36"" -> ""3""[label=""cfg_true""];\n	""37"" -> ""25""[label=""cfg_next""];\n	""38"" -> ""26""[label=""cfg_next""];\n	""39"" -> ""36""[label=""cfg_next""];\n	""4"" -> ""29""[label=""cfg_next""];\n	""40"" -> ""35""[label=""cfg_next""];\n	""41"" -> ""34""[label=""cfg_next""];\n	""46"" -> ""6""[label=""cfg_next""];\n	""47"" -> ""49""[label=""cfg_next""];\n	""48"" -> ""37""[label=""cfg_next""];\n	""5"" -> ""46""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.NodePointer.printPointerChain(),Method,* Print internal structure of a pointer for debugging,"public void printPointerChain() {\n    printDeep(this, """");\n}",void printPointerChain(),"digraph cfg_printPointerChain {\n	""1"" [label=""return""];\n	""2"" [label=""staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: void printDeep(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>(this, \""\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.setExceptionHandler(ExceptionHandler),Method,* Sets the exceptionHandler of this NodePointer.\n     * @param exceptionHandler the ExceptionHandler to set,public void setExceptionHandler(final ExceptionHandler exceptionHandler) {\n    this.exceptionHandler = exceptionHandler;\n},void setExceptionHandler(org.apache.commons.jxpath.ExceptionHandler),"digraph cfg_setExceptionHandler {\n	""1"" [label=""exceptionHandler := @parameter0: org.apache.commons.jxpath.ExceptionHandler""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ExceptionHandler exceptionHandler> = exceptionHandler""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.NodePointer.handle(Throwable,NodePointer)",Method,"* Handle a Throwable using an installed ExceptionHandler, if available.\n     * Public to facilitate calling for RI support; not truly intended for public consumption.\n     * @param t to handle\n     * @param originator context","public void handle(final Throwable t, final NodePointer originator) {\n    if (exceptionHandler != null) {\n        exceptionHandler.handle(t, originator);\n        return;\n    }\n    if (parent != null) {\n        parent.handle(t, originator);\n    }\n}","void handle(java.lang.Throwable,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_handle {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ExceptionHandler exceptionHandler>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ExceptionHandler exceptionHandler>""];\n	""5"" [label=""if $stack3 == null""];\n	""6"" [label=""if $stack4 == null""];\n	""7"" [label=""interfaceinvoke $stack6.<org.apache.commons.jxpath.ExceptionHandler: void handle(java.lang.Throwable,org.apache.commons.jxpath.Pointer)>(t, originator)""];\n	""8"" [label=""originator := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""9"" [label=""return""];\n	""10"" [label=""return""];\n	""11"" [label=""t := @parameter0: java.lang.Throwable""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""13"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: void handle(java.lang.Throwable,org.apache.commons.jxpath.ri.model.NodePointer)>(t, originator)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.handle(Throwable),Method,"* Handle a Throwable using an installed ExceptionHandler, if available.\n     * Public to facilitate calling for RI support; not truly intended for public consumption.\n     * @param t to handle","public void handle(final Throwable t) {\n    handle(t, this);\n}",void handle(java.lang.Throwable),"digraph cfg_handle {\n	""1"" [label=""return""];\n	""2"" [label=""t := @parameter0: java.lang.Throwable""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void handle(java.lang.Throwable,org.apache.commons.jxpath.ri.model.NodePointer)>(t, this)""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointer.escape(String),Method,* Return a string escaping single and double quotes.\n     * @param string string to treat\n     * @return string with any necessary changes made.,"protected String escape(final String string) {\n    final char[] c = { '\'', '""' };\n    final String[] esc = { ""&apos;"", ""&quot;"" };\n    StringBuilder sb = null;\n    for (int i = 0; sb == null && i < c.length; i++) {\n        if (string.indexOf(c[i]) >= 0) {\n            sb = new StringBuilder(string);\n        }\n    }\n    if (sb == null) {\n        return string;\n    }\n    for (int i = 0; i < c.length; i++) {\n        if (string.indexOf(c[i]) < 0) {\n            continue;\n        }\n        int pos = 0;\n        while (pos < sb.length()) {\n            if (sb.charAt(pos) == c[i]) {\n                sb.replace(pos, pos + 1, esc[i]);\n                pos += esc[i].length();\n            } else {\n                pos++;\n            }\n        }\n    }\n    return sb.toString();\n}",java.lang.String escape(java.lang.String),"digraph cfg_escape {\n	""1"" [label=""$stack10 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = c[i]""];\n	""3"" [label=""$stack12 = virtualinvoke string.<java.lang.String: int indexOf(int)>($stack11)""];\n	""4"" [label=""$stack13 = virtualinvoke sb.<java.lang.StringBuilder: int length()>()""];\n	""5"" [label=""$stack14 = c[i]""];\n	""6"" [label=""$stack15 = virtualinvoke sb.<java.lang.StringBuilder: char charAt(int)>(pos)""];\n	""7"" [label=""$stack16 = esc[i]""];\n	""8"" [label=""$stack17 = pos + 1""];\n	""9"" [label=""$stack18 = esc[i]""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.String: int length()>()""];\n	""11"" [label=""$stack20 = lengthof c""];\n	""12"" [label=""$stack21 = c[i]""];\n	""13"" [label=""$stack22 = virtualinvoke string.<java.lang.String: int indexOf(int)>($stack21)""];\n	""14"" [label=""$stack23 = new java.lang.StringBuilder""];\n	""15"" [label=""$stack7 = newarray (char)[2]""];\n	""16"" [label=""$stack7[0] = 39""];\n	""17"" [label=""$stack7[1] = 34""];\n	""18"" [label=""$stack8 = newarray (java.lang.String)[2]""];\n	""19"" [label=""$stack8[0] = \""&apos;\""""];\n	""20"" [label=""$stack8[1] = \""&quot;\""""];\n	""21"" [label=""$stack9 = lengthof c""];\n	""22"" [label=""c = $stack7""];\n	""23"" [label=""esc = $stack8""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""i = 0""];\n	""30"" [label=""i = 0""];\n	""31"" [label=""i = i + 1""];\n	""32"" [label=""i = i + 1""];\n	""33"" [label=""if $stack12 >= 0""];\n	""34"" [label=""if $stack15 != $stack14""];\n	""35"" [label=""if $stack22 < 0""];\n	""36"" [label=""if i >= $stack20""];\n	""37"" [label=""if i >= $stack9""];\n	""38"" [label=""if pos >= $stack13""];\n	""39"" [label=""if sb != null""];\n	""40"" [label=""if sb != null""];\n	""41"" [label=""pos = 0""];\n	""42"" [label=""pos = pos + $stack19""];\n	""43"" [label=""pos = pos + 1""];\n	""44"" [label=""return $stack10""];\n	""45"" [label=""return string""];\n	""46"" [label=""sb = $stack23""];\n	""47"" [label=""sb = null""];\n	""48"" [label=""specialinvoke $stack23.<java.lang.StringBuilder: void <init>(java.lang.String)>(string)""];\n	""49"" [label=""string := @parameter0: java.lang.String""];\n	""50"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""51"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>(pos, $stack17, $stack16)""];\n	""1"" -> ""44""[label=""cfg_next""];\n	""10"" -> ""42""[label=""cfg_next""];\n	""11"" -> ""36""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""35""[label=""cfg_next""];\n	""14"" -> ""48""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""37""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""23"" -> ""47""[label=""cfg_next""];\n	""24"" -> ""39""[label=""cfg_goto""];\n	""25"" -> ""32""[label=""cfg_goto""];\n	""26"" -> ""4""[label=""cfg_goto""];\n	""27"" -> ""4""[label=""cfg_goto""];\n	""28"" -> ""21""[label=""cfg_goto""];\n	""29"" -> ""39""[label=""cfg_next""];\n	""3"" -> ""33""[label=""cfg_next""];\n	""30"" -> ""21""[label=""cfg_next""];\n	""31"" -> ""24""[label=""cfg_next""];\n	""32"" -> ""28""[label=""cfg_next""];\n	""33"" -> ""25""[label=""cfg_false""];\n	""33"" -> ""41""[label=""cfg_true""];\n	""34"" -> ""43""[label=""cfg_true""];\n	""34"" -> ""8""[label=""cfg_false""];\n	""35"" -> ""14""[label=""cfg_false""];\n	""35"" -> ""31""[label=""cfg_true""];\n	""36"" -> ""12""[label=""cfg_false""];\n	""36"" -> ""40""[label=""cfg_true""];\n	""37"" -> ""1""[label=""cfg_true""];\n	""37"" -> ""2""[label=""cfg_false""];\n	""38"" -> ""32""[label=""cfg_true""];\n	""38"" -> ""6""[label=""cfg_false""];\n	""39"" -> ""11""[label=""cfg_false""];\n	""39"" -> ""40""[label=""cfg_true""];\n	""4"" -> ""38""[label=""cfg_next""];\n	""40"" -> ""30""[label=""cfg_true""];\n	""40"" -> ""45""[label=""cfg_false""];\n	""41"" -> ""4""[label=""cfg_next""];\n	""42"" -> ""26""[label=""cfg_next""];\n	""43"" -> ""27""[label=""cfg_next""];\n	""46"" -> ""31""[label=""cfg_next""];\n	""47"" -> ""29""[label=""cfg_next""];\n	""48"" -> ""46""[label=""cfg_next""];\n	""49"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""34""[label=""cfg_next""];\n	""50"" -> ""49""[label=""cfg_next""];\n	""51"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""51""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.NodePointer.getAbstractFactory(JXPathContext),Method,* Gets the AbstractFactory associated with the specified JXPathContext.\n     * @param context JXPathContext\n     * @return AbstractFactory,"protected AbstractFactory getAbstractFactory(final JXPathContext context) {\n    final AbstractFactory factory = context.getFactory();\n    if (factory == null) {\n        throw new JXPathException(""Factory is not set on the JXPathContext - cannot create path: "" + asPath());\n    }\n    return factory;\n}",org.apache.commons.jxpath.AbstractFactory getAbstractFactory(org.apache.commons.jxpath.JXPathContext),"digraph cfg_getAbstractFactory {\n	""1"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""3"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory is not set on the JXPathContext - cannot create path: \"")""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack8 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""8"" [label=""factory = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.AbstractFactory getFactory()>()""];\n	""9"" [label=""if factory != null""];\n	""10"" [label=""return factory""];\n	""11"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""12"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack7)""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""14"" [label=""throw $stack8""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",protected 
"org.apache.commons.jxpath.ri.model.NodePointer.printDeep(NodePointer,String)",Method,* Print deep\n     * @param pointer to print\n     * @param indent indentation level,"private static void printDeep(final NodePointer pointer, final String indent) {\n    if (indent.length() == 0) {\n        System.err.println(""POINTER: "" + pointer + ""("" + pointer.getClass().getName() + "")"");\n    } else {\n        System.err.println(indent + "" of "" + pointer + ""("" + pointer.getClass().getName() + "")"");\n    }\n    if (pointer.getImmediateParentPointer() != null) {\n        printDeep(pointer.getImmediateParentPointer(), indent + ""  "");\n    }\n}","void printDeep(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)","digraph cfg_printDeep {\n	""1"" [label=""$stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""(\"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"")\"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack14 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""6"" [label=""$stack15 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indent)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""  \"")""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack19 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""11"" [label=""$stack2 = virtualinvoke indent.<java.lang.String: int length()>()""];\n	""12"" [label=""$stack20 = new java.lang.StringBuilder""];\n	""13"" [label=""$stack21 = <java.lang.System: java.io.PrintStream err>""];\n	""14"" [label=""$stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""POINTER: \"")""];\n	""15"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(pointer)""];\n	""16"" [label=""$stack24 = virtualinvoke pointer.<java.lang.Object: java.lang.Class getClass()>()""];\n	""17"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.Class: java.lang.String getName()>()""];\n	""18"" [label=""$stack26 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""(\"")""];\n	""19"" [label=""$stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25)""];\n	""20"" [label=""$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"")\"")""];\n	""21"" [label=""$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""22"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""23"" [label=""$stack4 = <java.lang.System: java.io.PrintStream err>""];\n	""24"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indent)""];\n	""25"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" of \"")""];\n	""26"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(pointer)""];\n	""27"" [label=""$stack8 = virtualinvoke pointer.<java.lang.Object: java.lang.Class getClass()>()""];\n	""28"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.Class: java.lang.String getName()>()""];\n	""29"" [label=""goto""];\n	""30"" [label=""if $stack14 == null""];\n	""31"" [label=""if $stack2 != 0""];\n	""32"" [label=""indent := @parameter1: java.lang.String""];\n	""33"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""34"" [label=""return""];\n	""35"" [label=""specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>()""];\n	""36"" [label=""specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""38"" [label=""staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: void printDeep(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>($stack19, $stack18)""];\n	""39"" [label=""virtualinvoke $stack21.<java.io.PrintStream: void println(java.lang.String)>($stack29)""];\n	""40"" [label=""virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>($stack13)""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""36""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""18""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""39""[label=""cfg_next""];\n	""22"" -> ""37""[label=""cfg_next""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""2""[label=""cfg_next""];\n	""29"" -> ""5""[label=""cfg_goto""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""10""[label=""cfg_false""];\n	""30"" -> ""34""[label=""cfg_true""];\n	""31"" -> ""13""[label=""cfg_false""];\n	""31"" -> ""23""[label=""cfg_true""];\n	""32"" -> ""11""[label=""cfg_next""];\n	""33"" -> ""32""[label=""cfg_next""];\n	""35"" -> ""7""[label=""cfg_next""];\n	""36"" -> ""14""[label=""cfg_next""];\n	""37"" -> ""24""[label=""cfg_next""];\n	""38"" -> ""34""[label=""cfg_next""];\n	""39"" -> ""29""[label=""cfg_next""];\n	""4"" -> ""40""[label=""cfg_next""];\n	""40"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""30""[label=""cfg_next""];\n	""6"" -> ""35""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""38""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.model.NodePointer.safeEquals(Object,Object)",Method,No Comment,"private static boolean safeEquals(final Object o1, final Object o2) {\n    return o1 == o2 || o1 != null && o1.equals(o2);\n}","boolean safeEquals(java.lang.Object,java.lang.Object)","digraph cfg_safeEquals {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = 1""];\n	""3"" [label=""$stack3 = virtualinvoke o1.<java.lang.Object: boolean equals(java.lang.Object)>(o2)""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if o1 == null""];\n	""7"" [label=""if o1 == o2""];\n	""8"" [label=""o1 := @parameter0: java.lang.Object""];\n	""9"" [label=""o2 := @parameter1: java.lang.Object""];\n	""10"" [label=""return $stack2""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""6""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.model.NodePointer.verify(NodePointer),Method,* Verify the structure of a given NodePointer.\n     * @param nodePointer to check\n     * @return nodePointer\n     * @throws JXPathNotFoundException Thrown when there is no value at the NodePointer.,"public static NodePointer verify(final NodePointer nodePointer) {\n    if (!nodePointer.isActual()) {\n        // We need to differentiate between pointers representing\n        // a non-existing property and ones representing a property\n        // whose value is null.  In the latter case, the pointer\n        // is going to have isActual == false, but its parent,\n        // which is a non-node pointer identifying the bean property,\n        // will return isActual() == true.\n        final NodePointer parent = nodePointer.getImmediateParentPointer();\n        if (parent == null || !parent.isContainer() || !parent.isActual()) {\n            throw new JXPathNotFoundException(""No value for xpath: "" + nodePointer);\n        }\n    }\n    return nodePointer;\n}",org.apache.commons.jxpath.ri.model.NodePointer verify(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_verify {\n	""1"" [label=""$stack2 = virtualinvoke nodePointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""2"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No value for xpath: \"")""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(nodePointer)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack7 = new org.apache.commons.jxpath.JXPathNotFoundException""];\n	""7"" [label=""$stack8 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""8"" [label=""$stack9 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""9"" [label=""if $stack2 != 0""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""if $stack9 != 0""];\n	""12"" [label=""if parent == null""];\n	""13"" [label=""nodePointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""14"" [label=""parent = virtualinvoke nodePointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""15"" [label=""return nodePointer""];\n	""16"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""17"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.JXPathNotFoundException: void <init>(java.lang.String)>($stack6)""];\n	""18"" [label=""throw $stack7""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""10"" -> ""8""[label=""cfg_false""];\n	""11"" -> ""15""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_true""];\n	""12"" -> ""7""[label=""cfg_false""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_false""];\n	""9"" -> ""15""[label=""cfg_true""];\n}\n","public , static "
org.apache.commons.jxpath.ri.model.NodePointer.<init>(NodePointer),Constructor,* Create a new NodePointer.\n     * @param parent Pointer,protected NodePointer(final NodePointer parent) {\n    this.parent = parent;\n},void <init>(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_init {\n	""1"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean attribute> = 0""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: int index> = -2147483648""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.model.NodePointer.<init>(NodePointer,Locale)",Constructor,* Create a new NodePointer.\n     * @param parent Pointer\n     * @param locale Locale,"protected NodePointer(final NodePointer parent, final Locale locale) {\n    this.parent = parent;\n    this.locale = locale;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""locale := @parameter1: java.util.Locale""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean attribute> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: int index> = -2147483648""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale locale> = locale""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.isContainer(),Method,* This type of node is auxiliary.\n     * @return true,@Override\npublic boolean isContainer() {\n    return true;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyCount(),Method,No Comment,@Override\npublic int getPropertyCount() {\n    if (beanInfo.isAtomic()) {\n        return 0;\n    }\n    return getPropertyDescriptors().length;\n},int getPropertyCount(),"digraph cfg_getPropertyCount {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: org.apache.commons.jxpath.JXPathBeanInfo beanInfo>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isAtomic()>()""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor[] getPropertyDescriptors()>()""];\n	""4"" [label=""$stack4 = lengthof $stack3""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""return $stack4""];\n	""7"" [label=""return 0""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyNames(),Method,"* Gets the names of all properties, sorted alphabetically\n     * @return String[]",@Override\npublic String[] getPropertyNames() {\n    if (names == null) {\n        final PropertyDescriptor[] pds = getPropertyDescriptors();\n        names = new String[pds.length];\n        for (int i = 0; i < names.length; i++) {\n            names[i] = pds[i].getName();\n        }\n    }\n    return names;\n},java.lang.String[] getPropertyNames(),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String[] names>""];\n	""2"" [label=""$stack10[i] = $stack11""];\n	""3"" [label=""$stack11 = virtualinvoke $stack9.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String[] names>""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String[] names>""];\n	""6"" [label=""$stack5 = lengthof pds""];\n	""7"" [label=""$stack6 = newarray (java.lang.String)[$stack5]""];\n	""8"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String[] names>""];\n	""9"" [label=""$stack8 = lengthof $stack7""];\n	""10"" [label=""$stack9 = pds[i]""];\n	""11"" [label=""goto""];\n	""12"" [label=""i = 0""];\n	""13"" [label=""i = i + 1""];\n	""14"" [label=""if $stack3 != null""];\n	""15"" [label=""if i >= $stack8""];\n	""16"" [label=""pds = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor[] getPropertyDescriptors()>()""];\n	""17"" [label=""return $stack4""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String[] names> = $stack6""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_goto""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_false""];\n	""14"" -> ""5""[label=""cfg_true""];\n	""15"" -> ""1""[label=""cfg_false""];\n	""15"" -> ""5""[label=""cfg_true""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.setPropertyName(String),Method,* Select a property by name.\n     * @param propertyName String name,@Override\npublic void setPropertyName(final String propertyName) {\n    setPropertyIndex(UNSPECIFIED_PROPERTY);\n    this.propertyName = propertyName;\n},void setPropertyName(java.lang.String),"digraph cfg_setPropertyName {\n	""1"" [label=""propertyName := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String propertyName> = propertyName""];\n	""5"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: void setPropertyIndex(int)>(-2147483648)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.setPropertyIndex(int),Method,* Selects a property by its offset in the alphabetically sorted list.\n     * @param index property index,@Override\npublic void setPropertyIndex(final int index) {\n    if (propertyIndex != index) {\n        super.setPropertyIndex(index);\n        propertyName = null;\n        propertyDescriptor = null;\n        baseValue = UNINITIALIZED;\n        value = UNINITIALIZED;\n    }\n},void setPropertyIndex(int),"digraph cfg_setPropertyIndex {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int propertyIndex>""];\n	""2"" [label=""$stack3 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""3"" [label=""$stack4 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""4"" [label=""if $stack2 == index""];\n	""5"" [label=""index := @parameter0: int""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyIndex(int)>(index)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor propertyDescriptor> = null""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object baseValue> = $stack3""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = $stack4""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String propertyName> = null""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getBaseValue(),Method,* Gets the value of the currently selected property.\n     * @return Object value,"@Override\npublic Object getBaseValue() {\n    if (baseValue == UNINITIALIZED) {\n        final PropertyDescriptor pd = getPropertyDescriptor();\n        if (pd == null) {\n            return null;\n        }\n        baseValue = ValueUtils.getValue(getBean(), pd);\n    }\n    return baseValue;\n}",java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object baseValue>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object baseValue>""];\n	""4"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBean()>()""];\n	""5"" [label=""$stack6 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,java.beans.PropertyDescriptor)>($stack5, pd)""];\n	""6"" [label=""if $stack3 != $stack2""];\n	""7"" [label=""if pd != null""];\n	""8"" [label=""pd = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""return null""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object baseValue> = $stack6""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""10""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.setIndex(int),Method,No Comment,"@Override\npublic void setIndex(final int index) {\n    if (this.index == index) {\n        return;\n    }\n    // When dealing with a scalar, index == 0 is equivalent to\n    // WHOLE_COLLECTION, so do not change it.\n    if (this.index != WHOLE_COLLECTION || index != 0 || isCollection()) {\n        super.setIndex(index);\n        value = UNINITIALIZED;\n    }\n}",void setIndex(int),"digraph cfg_setIndex {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""3"" [label=""$stack4 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""4"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: boolean isCollection()>()""];\n	""5"" [label=""if $stack2 != index""];\n	""6"" [label=""if $stack3 != -2147483648""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""if index != 0""];\n	""9"" [label=""index := @parameter0: int""];\n	""10"" [label=""return""];\n	""11"" [label=""return""];\n	""12"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>(index)""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_false""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""12""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""11""[label=""cfg_true""];\n	""7"" -> ""12""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getImmediateNode(),Method,"* If index == WHOLE_COLLECTION, the value of the property, otherwise\n     * the value of the index'th element of the collection represented by the\n     * property. If the property is not a collection, index should be zero\n     * and the value will be the property itself.\n     * @return Object","@Override\npublic Object getImmediateNode() {\n    if (value == UNINITIALIZED) {\n        if (index == WHOLE_COLLECTION) {\n            value = ValueUtils.getValue(getBaseValue());\n        } else {\n            final PropertyDescriptor pd = getPropertyDescriptor();\n            if (pd == null) {\n                value = null;\n            } else {\n                value = ValueUtils.getValue(getBean(), pd, index);\n            }\n        }\n    }\n    return value;\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>($stack9)""];\n	""2"" [label=""$stack2 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value>""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""7"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBean()>()""];\n	""8"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,java.beans.PropertyDescriptor,int)>($stack7, pd, $stack6)""];\n	""9"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack3 != $stack2""];\n	""13"" [label=""if $stack5 != -2147483648""];\n	""14"" [label=""if pd != null""];\n	""15"" [label=""pd = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""16"" [label=""return $stack4""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = $stack10""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = $stack8""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = null""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_goto""];\n	""11"" -> ""4""[label=""cfg_goto""];\n	""12"" -> ""4""[label=""cfg_true""];\n	""12"" -> ""5""[label=""cfg_false""];\n	""13"" -> ""15""[label=""cfg_true""];\n	""13"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""20""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_next""];\n	""19"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.isActualProperty(),Method,No Comment,@Override\nprotected boolean isActualProperty() {\n    return getPropertyDescriptor() != null;\n},boolean isActualProperty(),"digraph cfg_isActualProperty {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    final PropertyDescriptor pd = getPropertyDescriptor();\n    if (pd == null) {\n        return false;\n    }\n    if (pd instanceof IndexedPropertyDescriptor) {\n        return true;\n    }\n    final int hint = ValueUtils.getCollectionHint(pd.getPropertyType());\n    if (hint == -1) {\n        return false;\n    }\n    if (hint == 1) {\n        return true;\n    }\n    final Object value = getBaseValue();\n    return value != null && ValueUtils.isCollection(value);\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""$stack4 = pd instanceof java.beans.IndexedPropertyDescriptor""];\n	""2"" [label=""$stack5 = virtualinvoke pd.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>()""];\n	""3"" [label=""$stack6 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(value)""];\n	""4"" [label=""$stack7 = 0""];\n	""5"" [label=""$stack7 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""hint = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getCollectionHint(java.lang.Class)>($stack5)""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if $stack6 == 0""];\n	""10"" [label=""if hint != -1""];\n	""11"" [label=""if hint != 1""];\n	""12"" [label=""if pd != null""];\n	""13"" [label=""if value == null""];\n	""14"" [label=""pd = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""15"" [label=""return $stack7""];\n	""16"" [label=""return 0""];\n	""17"" [label=""return 0""];\n	""18"" [label=""return 1""];\n	""19"" [label=""return 1""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""21"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""17""[label=""cfg_false""];\n	""11"" -> ""19""[label=""cfg_false""];\n	""11"" -> ""21""[label=""cfg_true""];\n	""12"" -> ""1""[label=""cfg_true""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""4""[label=""cfg_true""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""20"" -> ""14""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_goto""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getLength(),Method,"* If the property contains a collection, then the length of that\n     * collection, otherwise - 1.\n     * @return int length","@Override\npublic int getLength() {\n    final PropertyDescriptor pd = getPropertyDescriptor();\n    if (pd == null) {\n        return 1;\n    }\n    if (pd instanceof IndexedPropertyDescriptor) {\n        return ValueUtils.getIndexedPropertyLength(getBean(), (IndexedPropertyDescriptor) pd);\n    }\n    final int hint = ValueUtils.getCollectionHint(pd.getPropertyType());\n    if (hint == -1) {\n        return 1;\n    }\n    return super.getLength();\n}",int getLength(),"digraph cfg_getLength {\n	""1"" [label=""$stack3 = pd instanceof java.beans.IndexedPropertyDescriptor""];\n	""2"" [label=""$stack4 = virtualinvoke pd.<java.beans.PropertyDescriptor: java.lang.Class getPropertyType()>()""];\n	""3"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getLength()>()""];\n	""4"" [label=""$stack6 = (java.beans.IndexedPropertyDescriptor) pd""];\n	""5"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBean()>()""];\n	""6"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getIndexedPropertyLength(java.lang.Object,java.beans.IndexedPropertyDescriptor)>($stack7, $stack6)""];\n	""7"" [label=""hint = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getCollectionHint(java.lang.Class)>($stack4)""];\n	""8"" [label=""if $stack3 == 0""];\n	""9"" [label=""if hint != -1""];\n	""10"" [label=""if pd != null""];\n	""11"" [label=""pd = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""12"" [label=""return $stack5""];\n	""13"" [label=""return $stack8""];\n	""14"" [label=""return 1""];\n	""15"" [label=""return 1""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_true""];\n	""10"" -> ""14""[label=""cfg_false""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""15""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.setValue(Object),Method,"* If index == WHOLE_COLLECTION, change the value of the property, otherwise\n     * change the value of the index'th element of the collection\n     * represented by the property.\n     * @param value value to set","@Override\npublic void setValue(final Object value) {\n    final PropertyDescriptor pd = getPropertyDescriptor();\n    if (pd == null) {\n        throw new JXPathInvalidAccessException(""Cannot set property: "" + asPath() + "" - no such property"");\n    }\n    if (index == WHOLE_COLLECTION) {\n        ValueUtils.setValue(getBean(), pd, value);\n    } else {\n        ValueUtils.setValue(getBean(), pd, index, value);\n    }\n    this.value = value;\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" - no such property\"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""5"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""6"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""7"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBean()>()""];\n	""8"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBean()>()""];\n	""9"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String asPath()>()""];\n	""11"" [label=""$stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot set property: \"")""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack3 != -2147483648""];\n	""14"" [label=""if pd != null""];\n	""15"" [label=""pd = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""16"" [label=""return""];\n	""17"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack12)""];\n	""18"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""19"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,java.beans.PropertyDescriptor,int,java.lang.Object)>($stack5, pd, $stack4, value)""];\n	""20"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,java.beans.PropertyDescriptor,java.lang.Object)>($stack6, pd, value)""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""22"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = value""];\n	""23"" [label=""throw $stack13""];\n	""24"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_goto""];\n	""13"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""8""[label=""cfg_false""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""5""[label=""cfg_true""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""23""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_next""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_next""];\n	""22"" -> ""16""[label=""cfg_next""];\n	""24"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.createPath(JXPathContext),Method,No Comment,@Override\npublic NodePointer createPath(final JXPathContext context) {\n    if (getImmediateNode() == null) {\n        super.createPath(context);\n        baseValue = UNINITIALIZED;\n        value = UNINITIALIZED;\n    }\n    return this;\n},org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getImmediateNode()>()""];\n	""2"" [label=""$stack3 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""3"" [label=""$stack4 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""if $stack2 != null""];\n	""6"" [label=""return this""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object baseValue> = $stack3""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.remove(),Method,No Comment,"@Override\npublic void remove() {\n    if (index == WHOLE_COLLECTION) {\n        setValue(null);\n    } else if (isCollection()) {\n        final Object o = getBaseValue();\n        final Object collection = ValueUtils.remove(getBaseValue(), index);\n        if (collection != o) {\n            ValueUtils.setValue(getBean(), getPropertyDescriptor(), collection);\n        }\n    } else if (index == 0) {\n        index = WHOLE_COLLECTION;\n        setValue(null);\n    }\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: boolean isCollection()>()""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index>""];\n	""5"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""6"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""7"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBean()>()""];\n	""8"" [label=""collection = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object remove(java.lang.Object,int)>($stack7, $stack6)""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack3 != -2147483648""];\n	""12"" [label=""if $stack4 == 0""];\n	""13"" [label=""if $stack5 != 0""];\n	""14"" [label=""if collection == o""];\n	""15"" [label=""o = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object getBaseValue()>()""];\n	""16"" [label=""return""];\n	""17"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,java.beans.PropertyDescriptor,java.lang.Object)>($stack9, $stack8, collection)""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int index> = -2147483648""];\n	""20"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: void setValue(java.lang.Object)>(null)""];\n	""21"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: void setValue(java.lang.Object)>(null)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_goto""];\n	""11"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""20""[label=""cfg_false""];\n	""12"" -> ""15""[label=""cfg_false""];\n	""12"" -> ""3""[label=""cfg_true""];\n	""13"" -> ""16""[label=""cfg_true""];\n	""13"" -> ""19""[label=""cfg_false""];\n	""14"" -> ""10""[label=""cfg_true""];\n	""14"" -> ""7""[label=""cfg_false""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyName(),Method,* Gets the name of the currently selected property.\n     * @return String property name,"@Override\npublic String getPropertyName() {\n    if (propertyName == null) {\n        final PropertyDescriptor pd = getPropertyDescriptor();\n        if (pd != null) {\n            propertyName = pd.getName();\n        }\n    }\n    return propertyName != null ? propertyName : ""*"";\n}",java.lang.String getPropertyName(),"digraph cfg_getPropertyName {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String propertyName>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String propertyName>""];\n	""3"" [label=""$stack4 = \""*\""""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String propertyName>""];\n	""5"" [label=""$stack5 = virtualinvoke pd.<java.beans.PropertyDescriptor: java.lang.String getName()>()""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 != null""];\n	""8"" [label=""if $stack3 == null""];\n	""9"" [label=""if pd == null""];\n	""10"" [label=""pd = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor getPropertyDescriptor()>()""];\n	""11"" [label=""return $stack4""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String propertyName> = $stack5""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_goto""];\n	""7"" -> ""10""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyDescriptor(),Method,* Finds the property descriptor corresponding to the current property\n     * index.\n     * @return PropertyDescriptor,private PropertyDescriptor getPropertyDescriptor() {\n    if (propertyDescriptor == null) {\n        final int inx = getPropertyIndex();\n        if (inx == UNSPECIFIED_PROPERTY) {\n            propertyDescriptor = beanInfo.getPropertyDescriptor(propertyName);\n        } else {\n            final PropertyDescriptor[] propertyDescriptors = getPropertyDescriptors();\n            if (inx >= 0 && inx < propertyDescriptors.length) {\n                propertyDescriptor = propertyDescriptors[inx];\n            } else {\n                propertyDescriptor = null;\n            }\n        }\n    }\n    return propertyDescriptor;\n},java.beans.PropertyDescriptor getPropertyDescriptor(),"digraph cfg_getPropertyDescriptor {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor propertyDescriptor>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor propertyDescriptor>""];\n	""3"" [label=""$stack5 = lengthof propertyDescriptors""];\n	""4"" [label=""$stack6 = propertyDescriptors[inx]""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.String propertyName>""];\n	""6"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: org.apache.commons.jxpath.JXPathBeanInfo beanInfo>""];\n	""7"" [label=""$stack9 = interfaceinvoke $stack8.<org.apache.commons.jxpath.JXPathBeanInfo: java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String)>($stack7)""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack3 != null""];\n	""11"" [label=""if inx != -2147483648""];\n	""12"" [label=""if inx < 0""];\n	""13"" [label=""if inx >= $stack5""];\n	""14"" [label=""inx = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: int getPropertyIndex()>()""];\n	""15"" [label=""propertyDescriptors = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor[] getPropertyDescriptors()>()""];\n	""16"" [label=""return $stack4""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor propertyDescriptor> = $stack6""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor propertyDescriptor> = $stack9""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor propertyDescriptor> = null""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""15""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""20""[label=""cfg_true""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""20""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""9""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_goto""];\n	""9"" -> ""2""[label=""cfg_goto""];\n}\n",private 
org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.getPropertyDescriptors(),Method,* Gets all PropertyDescriptors.\n     * @return PropertyDescriptor[],protected synchronized PropertyDescriptor[] getPropertyDescriptors() {\n    if (propertyDescriptors == null) {\n        propertyDescriptors = beanInfo.getPropertyDescriptors();\n    }\n    return propertyDescriptors;\n},java.beans.PropertyDescriptor[] getPropertyDescriptors(),"digraph cfg_getPropertyDescriptors {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor[] propertyDescriptors>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: org.apache.commons.jxpath.JXPathBeanInfo beanInfo>""];\n	""4"" [label=""$stack4 = interfaceinvoke $stack3.<org.apache.commons.jxpath.JXPathBeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>()""];\n	""5"" [label=""if $stack1 != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.beans.PropertyDescriptor[] propertyDescriptors> = $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n","protected , synchronized "
"org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer.<init>(NodePointer,JXPathBeanInfo)",Constructor,* Create a new BeanPropertyPointer.\n     * @param parent parent pointer\n     * @param beanInfo describes the target property/ies.,"public BeanPropertyPointer(final NodePointer parent, final JXPathBeanInfo beanInfo) {\n    super(parent);\n    this.beanInfo = beanInfo;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.JXPathBeanInfo)","digraph cfg_init {\n	""1"" [label=""$stack3 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""2"" [label=""$stack4 = <org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""3"" [label=""beanInfo := @parameter1: org.apache.commons.jxpath.JXPathBeanInfo""];\n	""4"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object baseValue> = $stack3""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: java.lang.Object value> = $stack4""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: org.apache.commons.jxpath.JXPathBeanInfo beanInfo> = beanInfo""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.getName(),Method,No Comment,"@Override\npublic QName getName() {\n    return new QName(""xml"", ""lang"");\n}",org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = new org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(\""xml\"", \""lang\"")""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.getNamespaceURI(),Method,No Comment,@Override\npublic String getNamespaceURI() {\n    return null;\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.getBaseValue(),Method,No Comment,"@Override\npublic Object getBaseValue() {\n    return parent.getLocale().toString().replace('_', '-');\n}",java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.LangAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale getLocale()>()""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.util.Locale: java.lang.String toString()>()""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.String: java.lang.String replace(char,char)>(95, 45)""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return getBaseValue();\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.LangAttributePointer: java.lang.Object getBaseValue()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.setValue(Object),Method,* {@inheritDoc}\n     *\n     * Throws UnsupportedOperationException.\n     * @param value Object,"@Override\npublic void setValue(final Object value) {\n    throw new UnsupportedOperationException(""Cannot change locale using the 'lang' attribute"");\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot change locale using the \'lang\' attribute\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""4"" [label=""throw $stack2""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n        if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n            buffer.append('/');\n        }\n    }\n    buffer.append(""@xml:lang"");\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack9)""];\n	""2"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.LangAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack4 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.LangAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""7"" [label=""$stack7 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""8"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""9"" [label=""$stack9 = $stack8 - 1""];\n	""10"" [label=""buffer = $stack2""];\n	""11"" [label=""if $stack10 == 47""];\n	""12"" [label=""if $stack3 == null""];\n	""13"" [label=""if $stack7 == 0""];\n	""14"" [label=""return $stack4""];\n	""15"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""17"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""@xml:lang\"")""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_false""];\n	""11"" -> ""18""[label=""cfg_true""];\n	""12"" -> ""18""[label=""cfg_true""];\n	""12"" -> ""5""[label=""cfg_false""];\n	""13"" -> ""17""[label=""cfg_true""];\n	""13"" -> ""8""[label=""cfg_false""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return 0;\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    return object instanceof LangAttributePointer;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack2 = object instanceof org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""2"" [label=""object := @parameter0: java.lang.Object""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.testNode(NodeTest),Method,No Comment,@Override\npublic boolean testNode(final NodeTest test) {\n    return false;\n},boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""return 0""];\n	""2"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    // Won't happen - lang attributes don't have children\n    return 0;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return 0""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.LangAttributePointer.<init>(NodePointer),Constructor,* Create a new LangAttributePointer.\n     * @param parent parent pointer.,public LangAttributePointer(final NodePointer parent) {\n    super(parent);\n},void <init>(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_init {\n	""1"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.getElementNodeIterator(NodePointer),Abstract Method,* Implemented by subclasses to produce child/attribute node iterators.\n     * @param elementPointer owning pointer\n     * @return NodeIterator,protected abstract NodeIterator getElementNodeIterator(NodePointer elementPointer);,org.apache.commons.jxpath.ri.model.NodeIterator getElementNodeIterator(org.apache.commons.jxpath.ri.model.NodePointer),digraph cfg_getElementNodeIterator {\n}\n,"protected , abstract "
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (collection == null) {\n        prepare();\n    }\n    if (position < 1 || position > collection.size()) {\n        return false;\n    }\n    this.position = position;\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<java.util.List: int size()>()""];\n	""4"" [label=""if $stack2 != null""];\n	""5"" [label=""if position < 1""];\n	""6"" [label=""if position <= $stack4""];\n	""7"" [label=""position := @parameter0: int""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: void prepare()>()""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: int position> = position""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""12""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.getNodePointer(),Method,No Comment,@Override\npublic NodePointer getNodePointer() {\n    if (position == 0) {\n        return null;\n    }\n    return (NodePointer) collection.get(position - 1);\n},org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: int position>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: int position>""];\n	""3"" [label=""$stack3 = $stack2 - 1""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""5"" [label=""$stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>($stack3)""];\n	""6"" [label=""$stack6 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack5""];\n	""7"" [label=""if $stack1 != 0""];\n	""8"" [label=""return $stack6""];\n	""9"" [label=""return null""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""9""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.prepare(),Method,* Prepare...,"private void prepare() {\n    collection = new ArrayList();\n    final NodePointer ptr = (NodePointer) pointer.clone();\n    final int length = ptr.getLength();\n    for (int i = 0; i < length; i++) {\n        ptr.setIndex(i);\n        final NodePointer elementPointer = ptr.getValuePointer();\n        final NodeIterator iter = getElementNodeIterator(elementPointer);\n        for (int j = 1; iter.setPosition(j); j++) {\n            final NodePointer childPointer = iter.getNodePointer();\n            if (reverse) {\n                collection.add(0, childPointer);\n            } else {\n                collection.add(childPointer);\n            }\n        }\n    }\n    if (startWith != null) {\n        final int index = collection.indexOf(startWith);\n        if (index == -1) {\n            throw new JXPathException(""Invalid starting pointer for iterator: "" + startWith);\n        }\n        while (collection.size() > index) {\n            if (!reverse) {\n                collection.remove(collection.size() - 1);\n            } else {\n                collection.remove(0);\n            }\n        }\n    }\n}",void prepare(),"digraph cfg_prepare {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object clone()>()""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer startWith>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer startWith>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""6"" [label=""$stack15 = interfaceinvoke $stack14.<java.util.List: int size()>()""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: boolean reverse>""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""11"" [label=""$stack20 = interfaceinvoke $stack18.<java.util.List: int size()>()""];\n	""12"" [label=""$stack21 = $stack20 - 1""];\n	""13"" [label=""$stack22 = new java.lang.StringBuilder""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer startWith>""];\n	""15"" [label=""$stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Invalid starting pointer for iterator: \"")""];\n	""16"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack23)""];\n	""17"" [label=""$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""18"" [label=""$stack27 = new org.apache.commons.jxpath.JXPathException""];\n	""19"" [label=""$stack28 = interfaceinvoke iter.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(j)""];\n	""20"" [label=""$stack29 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: boolean reverse>""];\n	""21"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""22"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection>""];\n	""23"" [label=""$stack8 = new java.util.ArrayList""];\n	""24"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: org.apache.commons.jxpath.ri.model.beans.CollectionPointer pointer>""];\n	""25"" [label=""childPointer = interfaceinvoke iter.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""26"" [label=""elementPointer = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""i = 0""];\n	""33"" [label=""i = i + 1""];\n	""34"" [label=""i = interfaceinvoke $stack13.<java.util.List: int indexOf(java.lang.Object)>($stack12)""];\n	""35"" [label=""if $stack11 == null""];\n	""36"" [label=""if $stack15 <= i""];\n	""37"" [label=""if $stack16 != 0""];\n	""38"" [label=""if $stack28 == 0""];\n	""39"" [label=""if $stack29 == 0""];\n	""40"" [label=""if i != -1""];\n	""41"" [label=""if i >= length""];\n	""42"" [label=""interfaceinvoke $stack17.<java.util.List: java.lang.Object remove(int)>(0)""];\n	""43"" [label=""interfaceinvoke $stack19.<java.util.List: java.lang.Object remove(int)>($stack21)""];\n	""44"" [label=""interfaceinvoke $stack30.<java.util.List: boolean add(java.lang.Object)>(childPointer)""];\n	""45"" [label=""interfaceinvoke $stack31.<java.util.List: void add(int,java.lang.Object)>(0, childPointer)""];\n	""46"" [label=""iter = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: org.apache.commons.jxpath.ri.model.NodeIterator getElementNodeIterator(org.apache.commons.jxpath.ri.model.NodePointer)>(elementPointer)""];\n	""47"" [label=""j = 1""];\n	""48"" [label=""j = j + 1""];\n	""49"" [label=""length = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: int getLength()>()""];\n	""50"" [label=""ptr = (org.apache.commons.jxpath.ri.model.NodePointer) $stack10""];\n	""51"" [label=""return""];\n	""52"" [label=""specialinvoke $stack22.<java.lang.StringBuilder: void <init>()>()""];\n	""53"" [label=""specialinvoke $stack27.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack26)""];\n	""54"" [label=""specialinvoke $stack8.<java.util.ArrayList: void <init>()>()""];\n	""55"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator""];\n	""56"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: java.util.List collection> = $stack8""];\n	""57"" [label=""throw $stack27""];\n	""58"" [label=""virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(i)""];\n	""1"" -> ""50""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""43""[label=""cfg_next""];\n	""13"" -> ""52""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""53""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""38""[label=""cfg_next""];\n	""2"" -> ""35""[label=""cfg_next""];\n	""20"" -> ""39""[label=""cfg_next""];\n	""21"" -> ""44""[label=""cfg_next""];\n	""22"" -> ""45""[label=""cfg_next""];\n	""23"" -> ""54""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""25"" -> ""20""[label=""cfg_next""];\n	""26"" -> ""46""[label=""cfg_next""];\n	""27"" -> ""48""[label=""cfg_goto""];\n	""28"" -> ""19""[label=""cfg_goto""];\n	""29"" -> ""41""[label=""cfg_goto""];\n	""3"" -> ""34""[label=""cfg_next""];\n	""30"" -> ""5""[label=""cfg_goto""];\n	""31"" -> ""5""[label=""cfg_goto""];\n	""32"" -> ""41""[label=""cfg_next""];\n	""33"" -> ""29""[label=""cfg_next""];\n	""34"" -> ""40""[label=""cfg_next""];\n	""35"" -> ""4""[label=""cfg_false""];\n	""35"" -> ""51""[label=""cfg_true""];\n	""36"" -> ""51""[label=""cfg_true""];\n	""36"" -> ""7""[label=""cfg_false""];\n	""37"" -> ""10""[label=""cfg_false""];\n	""37"" -> ""8""[label=""cfg_true""];\n	""38"" -> ""25""[label=""cfg_false""];\n	""38"" -> ""33""[label=""cfg_true""];\n	""39"" -> ""21""[label=""cfg_true""];\n	""39"" -> ""22""[label=""cfg_false""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""18""[label=""cfg_false""];\n	""40"" -> ""5""[label=""cfg_true""];\n	""41"" -> ""2""[label=""cfg_true""];\n	""41"" -> ""58""[label=""cfg_false""];\n	""42"" -> ""31""[label=""cfg_next""];\n	""43"" -> ""30""[label=""cfg_next""];\n	""44"" -> ""48""[label=""cfg_next""];\n	""45"" -> ""27""[label=""cfg_next""];\n	""46"" -> ""47""[label=""cfg_next""];\n	""47"" -> ""19""[label=""cfg_next""];\n	""48"" -> ""28""[label=""cfg_next""];\n	""49"" -> ""32""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""49""[label=""cfg_next""];\n	""52"" -> ""15""[label=""cfg_next""];\n	""53"" -> ""57""[label=""cfg_next""];\n	""54"" -> ""56""[label=""cfg_next""];\n	""55"" -> ""23""[label=""cfg_next""];\n	""56"" -> ""24""[label=""cfg_next""];\n	""58"" -> ""26""[label=""cfg_next""];\n	""6"" -> ""36""[label=""cfg_next""];\n	""7"" -> ""37""[label=""cfg_next""];\n	""8"" -> ""42""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator.<init>(CollectionPointer,boolean,NodePointer)",Constructor,* Create a new CollectionNodeIterator.\n     * @param pointer collection pointer\n     * @param reverse iteration order\n     * @param startWith starting pointer,"protected CollectionNodeIterator(final CollectionPointer pointer, final boolean reverse, final NodePointer startWith) {\n    this.pointer = pointer;\n    this.reverse = reverse;\n    this.startWith = startWith;\n}","void <init>(org.apache.commons.jxpath.ri.model.beans.CollectionPointer,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_init {\n	""1"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""2"" [label=""return""];\n	""3"" [label=""reverse := @parameter1: boolean""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: boolean reverse> = reverse""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer startWith> = startWith""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: org.apache.commons.jxpath.ri.model.beans.CollectionPointer pointer> = pointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return null;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return collection;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return true;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return ValueUtils.getLength(getBaseValue());\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object getBaseValue()>()""];\n	""2"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    final Object value = getNode();\n    return value == null || JXPathIntrospector.getBeanInfo(value.getClass()).isAtomic();\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack2 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack2)""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isAtomic()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if value == null""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""11"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object getNode()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.isContainer(),Method,No Comment,@Override\npublic boolean isContainer() {\n    return index != WHOLE_COLLECTION;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == -2147483648""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.getImmediateNode(),Method,No Comment,"@Override\npublic Object getImmediateNode() {\n    return index == WHOLE_COLLECTION ? ValueUtils.getValue(collection) : ValueUtils.getValue(collection, index);\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection>""];\n	""4"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>($stack5)""];\n	""5"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>($stack3, $stack2)""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection>""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack1 != -2147483648""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.setValue(Object),Method,No Comment,"@Override\npublic void setValue(final Object value) {\n    if (index == WHOLE_COLLECTION) {\n        parent.setValue(value);\n    } else {\n        ValueUtils.setValue(collection, index, value);\n    }\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 != -2147483648""];\n	""7"" [label=""return""];\n	""8"" [label=""staticinvoke <org.apache.commons.jxpath.util.ValueUtils: void setValue(java.lang.Object,int,java.lang.Object)>($stack4, $stack3, value)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""10"" [label=""value := @parameter0: java.lang.Object""];\n	""11"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.setIndex(int),Method,No Comment,@Override\npublic void setIndex(final int index) {\n    super.setIndex(index);\n    valuePointer = null;\n},void setIndex(int),"digraph cfg_setIndex {\n	""1"" [label=""index := @parameter0: int""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = null""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.getValuePointer(),Method,No Comment,"@Override\npublic NodePointer getValuePointer() {\n    if (valuePointer == null) {\n        if (index == WHOLE_COLLECTION) {\n            valuePointer = this;\n        } else {\n            final Object value = getImmediateNode();\n            valuePointer = newChildNodePointer(this, getName(), value);\n        }\n    }\n    return valuePointer;\n}",org.apache.commons.jxpath.ri.model.NodePointer getValuePointer(),"digraph cfg_getValuePointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""4"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""5"" [label=""$stack6 = staticinvoke <org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer newChildNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)>(this, $stack5, value)""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 != null""];\n	""8"" [label=""if $stack4 != -2147483648""];\n	""9"" [label=""return $stack3""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = $stack6""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer valuePointer> = this""];\n	""13"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object getImmediateNode()>()""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_false""];\n	""8"" -> ""13""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.createPath(JXPathContext),Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context) {\n    if (ValueUtils.getLength(getBaseValue()) <= index) {\n        collection = ValueUtils.expandCollection(getNode(), index + 1);\n    }\n    return this;\n}",org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object getBaseValue()>()""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""3"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>($stack2)""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""5"" [label=""$stack6 = $stack5 + 1""];\n	""6"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object getNode()>()""];\n	""7"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object expandCollection(java.lang.Object,int)>($stack7, $stack6)""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""9"" [label=""if $stack4 > $stack3""];\n	""10"" [label=""return this""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection> = $stack8""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.createPath(JXPathContext,Object)",Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context, final Object value) {\n    final NodePointer ptr = createPath(context);\n    ptr.setValue(value);\n    return ptr;\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""ptr = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""3"" [label=""return ptr""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""5"" [label=""value := @parameter1: java.lang.Object""];\n	""6"" [label=""virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.createChild(JXPathContext,QName,int,Object)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    final NodePointer ptr = (NodePointer) clone();\n    ptr.setIndex(index);\n    return ptr.createPath(context, value);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object clone()>()""];\n	""2"" [label=""$stack7 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(context, value)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""index := @parameter2: int""];\n	""5"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""ptr = (org.apache.commons.jxpath.ri.model.NodePointer) $stack6""];\n	""7"" [label=""return $stack7""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""9"" [label=""value := @parameter3: java.lang.Object""];\n	""10"" [label=""virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.createChild(JXPathContext,QName,int)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index) {\n    final NodePointer ptr = (NodePointer) clone();\n    ptr.setIndex(index);\n    return ptr.createPath(context);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object clone()>()""];\n	""2"" [label=""$stack6 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""index := @parameter2: int""];\n	""5"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""ptr = (org.apache.commons.jxpath.ri.model.NodePointer) $stack5""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""9"" [label=""virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return System.identityHashCode(collection) + index;\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection>""];\n	""2"" [label=""$stack2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($stack1)""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""4"" [label=""$stack4 = $stack2 + $stack3""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof CollectionPointer)) {\n        return false;\n    }\n    final CollectionPointer other = (CollectionPointer) object;\n    return collection == other.collection && index == other.index;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""2"" [label=""$stack4 = other.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection>""];\n	""4"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""6"" [label=""$stack8 = 0""];\n	""7"" [label=""$stack8 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack3 != 0""];\n	""10"" [label=""if $stack5 != $stack4""];\n	""11"" [label=""if $stack7 != $stack6""];\n	""12"" [label=""if object != this""];\n	""13"" [label=""object := @parameter0: java.lang.Object""];\n	""14"" [label=""other = (org.apache.commons.jxpath.ri.model.beans.CollectionPointer) object""];\n	""15"" [label=""return $stack8""];\n	""16"" [label=""return 0""];\n	""17"" [label=""return 1""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_true""];\n	""12"" -> ""17""[label=""cfg_false""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_goto""];\n	""9"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""16""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.childIterator(NodeTest,boolean,NodePointer)",Method,No Comment,"@Override\npublic NodeIterator childIterator(final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    if (index == WHOLE_COLLECTION) {\n        return new CollectionChildNodeIterator(this, test, reverse, startWith);\n    }\n    return getValuePointer().childIterator(test, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_childIterator {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(test, reverse, startWith)""];\n	""4"" [label=""$stack7 = new org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator""];\n	""5"" [label=""if $stack4 != -2147483648""];\n	""6"" [label=""return $stack6""];\n	""7"" [label=""return $stack7""];\n	""8"" [label=""reverse := @parameter1: boolean""];\n	""9"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.CollectionPointer,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(this, test, reverse, startWith)""];\n	""10"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""11"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.attributeIterator(QName),Method,No Comment,"@Override\npublic NodeIterator attributeIterator(final QName name) {\n    return index == WHOLE_COLLECTION ? new CollectionAttributeNodeIterator(this, name) : getValuePointer().attributeIterator(name);\n}",org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""$stack4 = new org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 != -2147483648""];\n	""7"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.CollectionPointer,org.apache.commons.jxpath.ri.QName)>(this, name)""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.namespaceIterator(),Method,No Comment,@Override\npublic NodeIterator namespaceIterator() {\n    return index == WHOLE_COLLECTION ? null : getValuePointer().namespaceIterator();\n},org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator(),"digraph cfg_namespaceIterator {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""$stack3 = null""];\n	""4"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 != -2147483648""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.namespacePointer(String),Method,No Comment,@Override\npublic NodePointer namespacePointer(final String namespace) {\n    return index == WHOLE_COLLECTION ? null : getValuePointer().namespacePointer(namespace);\n},org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String),"digraph cfg_namespacePointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""$stack4 = null""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String)>(namespace)""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 != -2147483648""];\n	""7"" [label=""namespace := @parameter0: java.lang.String""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.testNode(NodeTest),Method,No Comment,@Override\npublic boolean testNode(final NodeTest test) {\n    if (index == WHOLE_COLLECTION) {\n        if (test == null) {\n            return true;\n        }\n        if (test instanceof NodeNameTest) {\n            return false;\n        }\n        return test instanceof NodeTypeTest && ((NodeTypeTest) test).getNodeType() == Compiler.NODE_TYPE_NODE;\n    }\n    return getValuePointer().testNode(test);\n},boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest)>(test)""];\n	""4"" [label=""$stack5 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""5"" [label=""$stack6 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""6"" [label=""$stack7 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) test""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""8"" [label=""$stack9 = 0""];\n	""9"" [label=""$stack9 = 1""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack2 != -2147483648""];\n	""12"" [label=""if $stack5 == 0""];\n	""13"" [label=""if $stack6 == 0""];\n	""14"" [label=""if $stack8 != 1""];\n	""15"" [label=""if test != null""];\n	""16"" [label=""return $stack4""];\n	""17"" [label=""return $stack9""];\n	""18"" [label=""return 0""];\n	""19"" [label=""return 1""];\n	""20"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_goto""];\n	""11"" -> ""15""[label=""cfg_false""];\n	""11"" -> ""2""[label=""cfg_true""];\n	""12"" -> ""18""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""6""[label=""cfg_false""];\n	""13"" -> ""8""[label=""cfg_true""];\n	""14"" -> ""8""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""19""[label=""cfg_false""];\n	""15"" -> ""4""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    return pointer1.getIndex() - pointer2.getIndex();\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""$stack3 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""2"" [label=""$stack4 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""3"" [label=""$stack5 = $stack3 - $stack4""];\n	""4"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    final NodePointer parent = getImmediateParentPointer();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n        if (index != WHOLE_COLLECTION) {\n            // Address the list[1][2] case\n            if (parent.getIndex() != WHOLE_COLLECTION) {\n                buffer.append(""/."");\n            }\n            buffer.append(""["").append(index + 1).append(']');\n        }\n    } else if (index != WHOLE_COLLECTION) {\n        buffer.append(""/.["").append(index + 1).append(']');\n    } else {\n        buffer.append(""/"");\n    }\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""3"" [label=""$stack12 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""5"" [label=""$stack14 = $stack13 + 1""];\n	""6"" [label=""$stack15 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack14)""];\n	""8"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""10"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""11"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: int index>""];\n	""12"" [label=""$stack7 = $stack6 + 1""];\n	""13"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/.[\"")""];\n	""14"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack7)""];\n	""15"" [label=""buffer = $stack3""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack11 == -2147483648""];\n	""19"" [label=""if $stack12 == -2147483648""];\n	""20"" [label=""if $stack4 == -2147483648""];\n	""21"" [label=""if parent == null""];\n	""22"" [label=""parent = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""23"" [label=""return $stack5""];\n	""24"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""26"" [label=""virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""27"" [label=""virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""28"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/\"")""];\n	""29"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/.\"")""];\n	""30"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""22""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_goto""];\n	""17"" -> ""10""[label=""cfg_goto""];\n	""18"" -> ""10""[label=""cfg_true""];\n	""18"" -> ""3""[label=""cfg_false""];\n	""19"" -> ""29""[label=""cfg_false""];\n	""19"" -> ""6""[label=""cfg_true""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_false""];\n	""20"" -> ""28""[label=""cfg_true""];\n	""21"" -> ""1""[label=""cfg_false""];\n	""21"" -> ""9""[label=""cfg_true""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""15""[label=""cfg_next""];\n	""25"" -> ""8""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_next""];\n	""27"" -> ""17""[label=""cfg_next""];\n	""28"" -> ""10""[label=""cfg_next""];\n	""29"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""30"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""26""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.<init>(Object,Locale)",Constructor,* Create a new CollectionPointer.\n     * @param collection value\n     * @param locale Locale,"public CollectionPointer(final Object collection, final Locale locale) {\n    super(null, locale);\n    this.collection = collection;\n}","void <init>(java.lang.Object,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""collection := @parameter0: java.lang.Object""];\n	""2"" [label=""locale := @parameter1: java.util.Locale""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection> = collection""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointer.<init>(NodePointer,Object)",Constructor,* Create a new CollectionPointer.\n     * @param parent parent NodePointer\n     * @param collection value,"public CollectionPointer(final NodePointer parent, final Object collection) {\n    super(parent);\n    this.collection = collection;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""collection := @parameter1: java.lang.Object""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: java.lang.Object collection> = collection""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator.getElementNodeIterator(NodePointer),Method,No Comment,"@Override\nprotected NodeIterator getElementNodeIterator(final NodePointer elementPointer) {\n    return elementPointer.childIterator(test, false, null);\n}",org.apache.commons.jxpath.ri.model.NodeIterator getElementNodeIterator(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_getElementNodeIterator {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator: org.apache.commons.jxpath.ri.compiler.NodeTest test>""];\n	""2"" [label=""$stack3 = virtualinvoke elementPointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>($stack2, 0, null)""];\n	""3"" [label=""elementPointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator.<init>(CollectionPointer,NodeTest,boolean,NodePointer)",Constructor,* Create a new CollectionChildNodeIterator.\n     * @param pointer CollectionPointer\n     * @param test child test\n     * @param reverse iteration order\n     * @param startWith starting pointer,"public CollectionChildNodeIterator(final CollectionPointer pointer, final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    super(pointer, reverse, startWith);\n    this.test = test;\n}","void <init>(org.apache.commons.jxpath.ri.model.beans.CollectionPointer,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_init {\n	""1"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""2"" [label=""return""];\n	""3"" [label=""reverse := @parameter2: boolean""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.CollectionPointer,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(pointer, reverse, startWith)""];\n	""5"" [label=""startWith := @parameter3: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""test := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionChildNodeIterator: org.apache.commons.jxpath.ri.compiler.NodeTest test> = test""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator.getNodePointer(),Method,No Comment,@Override\npublic NodePointer getNodePointer() {\n    return includeXmlLang && position == 1 ? new LangAttributePointer(parent) : super.getNodePointer();\n},org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: boolean includeXmlLang>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.beans.LangAttributePointer""];\n	""3"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: int position>""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack1 == 0""];\n	""8"" [label=""if $stack3 != 1""];\n	""9"" [label=""return $stack2""];\n	""10"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.beans.LangAttributePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>($stack4)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""3""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    this.position = position;\n    if (includeXmlLang) {\n        return position == 1 || super.setPosition(position - 1);\n    }\n    return super.setPosition(position);\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: boolean includeXmlLang>""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean setPosition(int)>(position)""];\n	""3"" [label=""$stack4 = position - 1""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean setPosition(int)>($stack4)""];\n	""5"" [label=""$stack6 = 0""];\n	""6"" [label=""$stack6 = 1""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""if $stack5 == 0""];\n	""10"" [label=""if position == 1""];\n	""11"" [label=""position := @parameter0: int""];\n	""12"" [label=""return $stack3""];\n	""13"" [label=""return $stack6""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: int position> = position""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_goto""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator.<init>(PropertyOwnerPointer,QName)",Constructor,* Create a new BeanAttributeIterator.\n     * @param parent parent pointer\n     * @param name name of this bean,"public BeanAttributeIterator(final PropertyOwnerPointer parent, final QName name) {\n    super(parent, name.getPrefix() == null && (name.getName() == null || name.getName().equals(""*"")) ? null : name.toString(), false, null);\n    this.parent = parent;\n    includeXmlLang = name.getPrefix() != null && name.getPrefix().equals(""xml"") && (name.getName().equals(""lang"") || name.getName().equals(""*""));\n}","void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.QName)","digraph cfg_init {\n	""1"" [label=""$stack10 = 0""];\n	""2"" [label=""$stack10 = 1""];\n	""3"" [label=""$stack11 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(\""*\"")""];\n	""5"" [label=""$stack13 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""6"" [label=""$stack14 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""7"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>(\""*\"")""];\n	""8"" [label=""$stack3 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""9"" [label=""$stack4 = null""];\n	""10"" [label=""$stack4 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""11"" [label=""$stack5 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""12"" [label=""$stack6 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""13"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>(\""xml\"")""];\n	""14"" [label=""$stack8 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""15"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>(\""lang\"")""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack12 == 0""];\n	""19"" [label=""if $stack13 == null""];\n	""20"" [label=""if $stack15 == 0""];\n	""21"" [label=""if $stack3 != null""];\n	""22"" [label=""if $stack5 == null""];\n	""23"" [label=""if $stack7 == 0""];\n	""24"" [label=""if $stack9 != 0""];\n	""25"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""26"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""27"" [label=""return""];\n	""28"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(parent, $stack4, 0, null)""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: boolean includeXmlLang> = $stack10""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: int position> = 0""];\n	""32"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""22""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""23""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_goto""];\n	""17"" -> ""30""[label=""cfg_goto""];\n	""18"" -> ""1""[label=""cfg_true""];\n	""18"" -> ""2""[label=""cfg_false""];\n	""19"" -> ""6""[label=""cfg_false""];\n	""19"" -> ""9""[label=""cfg_true""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_true""];\n	""20"" -> ""9""[label=""cfg_false""];\n	""21"" -> ""10""[label=""cfg_true""];\n	""21"" -> ""5""[label=""cfg_false""];\n	""22"" -> ""1""[label=""cfg_true""];\n	""22"" -> ""12""[label=""cfg_false""];\n	""23"" -> ""1""[label=""cfg_true""];\n	""23"" -> ""14""[label=""cfg_false""];\n	""24"" -> ""2""[label=""cfg_true""];\n	""24"" -> ""3""[label=""cfg_false""];\n	""25"" -> ""8""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""31""[label=""cfg_next""];\n	""29"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""27""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator.getElementNodeIterator(NodePointer),Method,No Comment,@Override\nprotected NodeIterator getElementNodeIterator(final NodePointer elementPointer) {\n    return elementPointer.attributeIterator(name);\n},org.apache.commons.jxpath.ri.model.NodeIterator getElementNodeIterator(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_getElementNodeIterator {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""$stack3 = virtualinvoke elementPointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>($stack2)""];\n	""3"" [label=""elementPointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator.<init>(CollectionPointer,QName)",Constructor,* Create a new CollectionAttributeNodeIterator.\n     * @param pointer collection pointer\n     * @param name attribute name,"public CollectionAttributeNodeIterator(final CollectionPointer pointer, final QName name) {\n    super(pointer, false, null);\n    this.name = name;\n}","void <init>(org.apache.commons.jxpath.ri.model.beans.CollectionPointer,org.apache.commons.jxpath.ri.QName)","digraph cfg_init {\n	""1"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionNodeIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.CollectionPointer,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(pointer, 0, null)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return new QName(propertyName);\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String propertyName>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String)>($stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.setPropertyIndex(int),Method,No Comment,@Override\npublic void setPropertyIndex(final int index) {\n},void setPropertyIndex(int),"digraph cfg_setPropertyIndex {\n	""1"" [label=""index := @parameter0: int""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 0;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return null;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return null;\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getValuePointer(),Method,No Comment,"@Override\npublic NodePointer getValuePointer() {\n    return new NullPointer(this, new QName(getPropertyName()));\n}",org.apache.commons.jxpath.ri.model.NodePointer getValuePointer(),"digraph cfg_getValuePointer {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String getPropertyName()>()""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""$stack3 = new org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String)>($stack1)""];\n	""6"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.model.beans.NullPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(this, $stack2)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.isActualProperty(),Method,No Comment,@Override\nprotected boolean isActualProperty() {\n    return false;\n},boolean isActualProperty(),"digraph cfg_isActualProperty {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    return false;\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.isContainer(),Method,No Comment,@Override\npublic boolean isContainer() {\n    return true;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.setValue(Object),Method,No Comment,"@Override\npublic void setValue(final Object value) {\n    if (parent == null || parent.isContainer()) {\n        throw new JXPathInvalidAccessException(""Cannot set property "" + asPath() + "", the target object is null"");\n    }\n    if (parent instanceof PropertyOwnerPointer && ((PropertyOwnerPointer) parent).isDynamicPropertyDeclarationSupported()) {\n        // If the parent property owner can create\n        // a property automatically - let it do so\n        final PropertyPointer propertyPointer = ((PropertyOwnerPointer) parent).getPropertyPointer();\n        propertyPointer.setPropertyName(propertyName);\n        propertyPointer.setValue(value);\n    } else {\n        throw new JXPathInvalidAccessException(""Cannot set property "" + asPath() + "", path does not match a changeable location"");\n    }\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack14 = $stack13 instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""6"" [label=""$stack15 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack16 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String asPath()>()""];\n	""8"" [label=""$stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot set property \"")""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16)""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", path does not match a changeable location\"")""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack21 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""14"" [label=""$stack23 = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) $stack22""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: boolean isDynamicPropertyDeclarationSupported()>()""];\n	""16"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""17"" [label=""$stack26 = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) $stack25""];\n	""18"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String propertyName>""];\n	""19"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""20"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""21"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String asPath()>()""];\n	""22"" [label=""$stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot set property \"")""];\n	""23"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""24"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", the target object is null\"")""];\n	""25"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""26"" [label=""goto""];\n	""27"" [label=""if $stack12 == 0""];\n	""28"" [label=""if $stack14 == 0""];\n	""29"" [label=""if $stack24 == 0""];\n	""30"" [label=""if $stack3 == null""];\n	""31"" [label=""propertyPointer = virtualinvoke $stack26.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer()>()""];\n	""32"" [label=""return""];\n	""33"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack9)""];\n	""34"" [label=""specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack21.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack20)""];\n	""36"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""38"" [label=""throw $stack10""];\n	""39"" [label=""throw $stack21""];\n	""40"" [label=""value := @parameter0: java.lang.Object""];\n	""41"" [label=""virtualinvoke propertyPointer.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyName(java.lang.String)>($stack27)""];\n	""42"" [label=""virtualinvoke propertyPointer.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""35""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""29""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""31""[label=""cfg_next""];\n	""18"" -> ""41""[label=""cfg_next""];\n	""19"" -> ""30""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""36""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""33""[label=""cfg_next""];\n	""26"" -> ""32""[label=""cfg_goto""];\n	""27"" -> ""1""[label=""cfg_false""];\n	""27"" -> ""4""[label=""cfg_true""];\n	""28"" -> ""12""[label=""cfg_true""];\n	""28"" -> ""13""[label=""cfg_false""];\n	""29"" -> ""12""[label=""cfg_true""];\n	""29"" -> ""16""[label=""cfg_false""];\n	""3"" -> ""27""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_true""];\n	""30"" -> ""2""[label=""cfg_false""];\n	""31"" -> ""18""[label=""cfg_next""];\n	""33"" -> ""38""[label=""cfg_next""];\n	""34"" -> ""8""[label=""cfg_next""];\n	""35"" -> ""39""[label=""cfg_next""];\n	""36"" -> ""22""[label=""cfg_next""];\n	""37"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""19""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""26""[label=""cfg_next""];\n	""5"" -> ""28""[label=""cfg_next""];\n	""6"" -> ""34""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createPath(JXPathContext),Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context) {\n    NodePointer newParent = parent.createPath(context);\n    if (isAttribute()) {\n        return newParent.createAttribute(context, getName());\n    }\n    if (parent instanceof NullPointer && parent.equals(newParent)) {\n        throw createBadFactoryException(context.getFactory());\n    }\n    // Consider these two use cases:\n    // 1. The parent pointer of NullPropertyPointer is\n    //    a PropertyOwnerPointer other than NullPointer. When we call\n    //    createPath on it, it most likely returns itself. We then\n    //    take a PropertyPointer from it and get the PropertyPointer\n    //    to expand the collection for the corresponding property.\n    //\n    // 2. The parent pointer of NullPropertyPointer is a NullPointer.\n    //    When we call createPath, it may return a PropertyOwnerPointer\n    //    or it may return anything else, like a DOMNodePointer.\n    //    In the former case we need to do exactly what we did in use\n    //    case 1.  In the latter case, we simply request that the\n    //    non-property pointer expand the collection by itself.\n    if (newParent instanceof PropertyOwnerPointer) {\n        final PropertyOwnerPointer pop = (PropertyOwnerPointer) newParent;\n        newParent = pop.getPropertyPointer();\n    }\n    return newParent.createChild(context, getName(), getIndex());\n}",org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""2"" [label=""$stack11 = virtualinvoke newParent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)>(context, $stack10, $stack9)""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.Object: boolean equals(java.lang.Object)>(newParent)""];\n	""5"" [label=""$stack14 = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.AbstractFactory getFactory()>()""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.JXPathAbstractFactoryException createBadFactoryException(org.apache.commons.jxpath.AbstractFactory)>($stack14)""];\n	""7"" [label=""$stack16 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""8"" [label=""$stack17 = virtualinvoke newParent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createAttribute(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName)>(context, $stack16)""];\n	""9"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""10"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: boolean isAttribute()>()""];\n	""11"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""12"" [label=""$stack7 = $stack6 instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""13"" [label=""$stack8 = newParent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""14"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: int getIndex()>()""];\n	""15"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""16"" [label=""if $stack13 == 0""];\n	""17"" [label=""if $stack5 == 0""];\n	""18"" [label=""if $stack7 == 0""];\n	""19"" [label=""if $stack8 == 0""];\n	""20"" [label=""newParent = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""21"" [label=""newParent = virtualinvoke pop.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer()>()""];\n	""22"" [label=""pop = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) newParent""];\n	""23"" [label=""return $stack11""];\n	""24"" [label=""return $stack17""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""26"" [label=""throw $stack15""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_true""];\n	""16"" -> ""5""[label=""cfg_false""];\n	""17"" -> ""11""[label=""cfg_true""];\n	""17"" -> ""7""[label=""cfg_false""];\n	""18"" -> ""13""[label=""cfg_true""];\n	""18"" -> ""3""[label=""cfg_false""];\n	""19"" -> ""1""[label=""cfg_true""];\n	""19"" -> ""22""[label=""cfg_false""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""25"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""26""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createPath(JXPathContext,Object)",Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context, final Object value) {\n    NodePointer newParent = parent.createPath(context);\n    if (isAttribute()) {\n        final NodePointer pointer = newParent.createAttribute(context, getName());\n        pointer.setValue(value);\n        return pointer;\n    }\n    if (parent instanceof NullPointer && parent.equals(newParent)) {\n        throw createBadFactoryException(context.getFactory());\n    }\n    if (newParent instanceof PropertyOwnerPointer) {\n        final PropertyOwnerPointer pop = (PropertyOwnerPointer) newParent;\n        newParent = pop.getPropertyPointer();\n    }\n    return newParent.createChild(context, getName(), index, value);\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: int index>""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""3"" [label=""$stack12 = virtualinvoke newParent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)>(context, $stack11, $stack10, value)""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.Object: boolean equals(java.lang.Object)>(newParent)""];\n	""6"" [label=""$stack15 = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.AbstractFactory getFactory()>()""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.JXPathAbstractFactoryException createBadFactoryException(org.apache.commons.jxpath.AbstractFactory)>($stack15)""];\n	""8"" [label=""$stack17 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""9"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""10"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: boolean isAttribute()>()""];\n	""11"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""12"" [label=""$stack8 = $stack7 instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""13"" [label=""$stack9 = newParent instanceof org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""14"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""15"" [label=""if $stack14 == 0""];\n	""16"" [label=""if $stack6 == 0""];\n	""17"" [label=""if $stack8 == 0""];\n	""18"" [label=""if $stack9 == 0""];\n	""19"" [label=""newParent = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""20"" [label=""newParent = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer()>()""];\n	""21"" [label=""pointer = (org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer) newParent""];\n	""22"" [label=""pointer = virtualinvoke newParent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createAttribute(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName)>(context, $stack17)""];\n	""23"" [label=""return $stack12""];\n	""24"" [label=""return pointer""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""26"" [label=""throw $stack16""];\n	""27"" [label=""value := @parameter1: java.lang.Object""];\n	""28"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""18""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_true""];\n	""15"" -> ""6""[label=""cfg_false""];\n	""16"" -> ""11""[label=""cfg_true""];\n	""16"" -> ""8""[label=""cfg_false""];\n	""17"" -> ""13""[label=""cfg_true""];\n	""17"" -> ""4""[label=""cfg_false""];\n	""18"" -> ""2""[label=""cfg_true""];\n	""18"" -> ""21""[label=""cfg_false""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""28""[label=""cfg_next""];\n	""25"" -> ""14""[label=""cfg_next""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""28"" -> ""24""[label=""cfg_next""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""26""[label=""cfg_next""];\n	""8"" -> ""22""[label=""cfg_next""];\n	""9"" -> ""19""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createChild(JXPathContext,QName,int)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index) {\n    return createPath(context).createChild(context, name, index);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)>(context, name, index)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""index := @parameter2: int""];\n	""5"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createChild(JXPathContext,QName,int,Object)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    return createPath(context).createChild(context, name, index, value);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""2"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)>(context, name, index, value)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""index := @parameter2: int""];\n	""5"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""return $stack6""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""8"" [label=""value := @parameter3: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getPropertyName(),Method,No Comment,@Override\npublic String getPropertyName() {\n    return propertyName;\n},java.lang.String getPropertyName(),"digraph cfg_getPropertyName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String propertyName>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.setPropertyName(String),Method,No Comment,@Override\npublic void setPropertyName(final String propertyName) {\n    this.propertyName = propertyName;\n},void setPropertyName(java.lang.String),"digraph cfg_setPropertyName {\n	""1"" [label=""propertyName := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String propertyName> = propertyName""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.setNameAttributeValue(String),Method,* Sets the name attribute.\n     * @param attributeValue value to set,public void setNameAttributeValue(final String attributeValue) {\n    this.propertyName = attributeValue;\n    byNameAttribute = true;\n},void setNameAttributeValue(java.lang.String),"digraph cfg_setNameAttributeValue {\n	""1"" [label=""attributeValue := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: boolean byNameAttribute> = 1""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String propertyName> = attributeValue""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return getIndex() != WHOLE_COLLECTION;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: int getIndex()>()""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == -2147483648""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getPropertyCount(),Method,No Comment,@Override\npublic int getPropertyCount() {\n    return 0;\n},int getPropertyCount(),"digraph cfg_getPropertyCount {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.getPropertyNames(),Method,No Comment,@Override\npublic String[] getPropertyNames() {\n    return new String[0];\n},java.lang.String[] getPropertyNames(),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack1 = newarray (java.lang.String)[0]""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    if (!byNameAttribute) {\n        return super.asPath();\n    }\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getImmediateParentPointer().asPath());\n    buffer.append(""[@name='"");\n    buffer.append(escape(getPropertyName()));\n    buffer.append(""']"");\n    if (index != WHOLE_COLLECTION) {\n        buffer.append('[').append(index + 1).append(']');\n    }\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: int index>""];\n	""2"" [label=""$stack11 = $stack10 + 1""];\n	""3"" [label=""$stack12 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11)""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String asPath()>()""];\n	""6"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: boolean byNameAttribute>""];\n	""7"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""8"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""9"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""10"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String getPropertyName()>()""];\n	""11"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String escape(java.lang.String)>($stack6)""];\n	""12"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: int index>""];\n	""13"" [label=""$stack9 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""buffer = $stack3""];\n	""15"" [label=""if $stack2 != 0""];\n	""16"" [label=""if $stack8 == -2147483648""];\n	""17"" [label=""return $stack14""];\n	""18"" [label=""return $stack9""];\n	""19"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""21"" [label=""virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""22"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[@name=\'\"")""];\n	""23"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\']\"")""];\n	""24"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""25"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""13"" -> ""18""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""15"" -> ""7""[label=""cfg_true""];\n	""16"" -> ""13""[label=""cfg_true""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""19"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""23"" -> ""12""[label=""cfg_next""];\n	""24"" -> ""22""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.createBadFactoryException(AbstractFactory),Method,"* Create a ""bad factory"" JXPathAbstractFactoryException for the specified AbstractFactory.\n     * @param factory AbstractFactory\n     * @return JXPathAbstractFactoryException","private JXPathAbstractFactoryException createBadFactoryException(final AbstractFactory factory) {\n    return new JXPathAbstractFactoryException(""Factory "" + factory + "" reported success creating object for path: "" + asPath() + "" but object was null.  Terminating to avoid stack recursion."");\n}",org.apache.commons.jxpath.JXPathAbstractFactoryException createBadFactoryException(org.apache.commons.jxpath.AbstractFactory),"digraph cfg_createBadFactoryException {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""2"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory \"")""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(factory)""];\n	""5"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String asPath()>()""];\n	""6"" [label=""$stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" reported success creating object for path: \"")""];\n	""7"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" but object was null.  Terminating to avoid stack recursion.\"")""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""factory := @parameter0: org.apache.commons.jxpath.AbstractFactory""];\n	""11"" [label=""return $stack10""];\n	""12"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack9)""];\n	""13"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer.<init>(NodePointer),Constructor,* Create a new NullPropertyPointer.\n     * @param parent pointer,public NullPropertyPointer(final NodePointer parent) {\n    super(parent);\n},void <init>(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_init {\n	""1"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: boolean byNameAttribute> = 0""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: java.lang.String propertyName> = \""*\""""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return null;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return null;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return null;\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.getPropertyPointer(),Method,* Gets the property pointer for this.\n     * @return PropertyPointer,public PropertyPointer getPropertyPointer() {\n    return new NullPropertyPointer(this);\n},org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer(),"digraph cfg_getPropertyPointer {\n	""1"" [label=""$stack1 = new org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(this)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.getValuePointer(),Method,No Comment,"@Override\npublic NodePointer getValuePointer() {\n    return new NullPointer(this, getName());\n}",org.apache.commons.jxpath.ri.model.NodePointer getValuePointer(),"digraph cfg_getValuePointer {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.beans.NullPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(this, $stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.setValue(Object),Method,No Comment,"@Override\npublic void setValue(final Object value) {\n    throw new UnsupportedOperationException(""Collection element does not exist: "" + this);\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Collection element does not exist: \"")""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this)""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack6 = new java.lang.UnsupportedOperationException""];\n	""6"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""7"" [label=""specialinvoke $stack6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack5)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""9"" [label=""throw $stack6""];\n	""10"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    return false;\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.isContainer(),Method,No Comment,@Override\npublic boolean isContainer() {\n    return true;\n},boolean isContainer(),"digraph cfg_isContainer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.createPath(JXPathContext),Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context) {\n    return parent.createChild(context, null, index);\n}",org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)>(context, null, $stack2)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullElementPointer.createPath(JXPathContext,Object)",Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context, final Object value) {\n    return parent.createChild(context, null, index, value);\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)>(context, null, $stack3, value)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""7"" [label=""value := @parameter1: java.lang.Object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return getImmediateParentPointer().hashCode() + index;\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.Object: int hashCode()>()""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index>""];\n	""4"" [label=""$stack4 = $stack2 + $stack3""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof NullElementPointer)) {\n        return false;\n    }\n    final NullElementPointer other = (NullElementPointer) object;\n    return getImmediateParentPointer() == other.getImmediateParentPointer() && index == other.index;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" [label=""$stack4 = virtualinvoke other.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""3"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""4"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index>""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index>""];\n	""6"" [label=""$stack8 = 0""];\n	""7"" [label=""$stack8 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack3 != 0""];\n	""10"" [label=""if $stack5 != $stack4""];\n	""11"" [label=""if $stack7 != $stack6""];\n	""12"" [label=""if object != this""];\n	""13"" [label=""object := @parameter0: java.lang.Object""];\n	""14"" [label=""other = (org.apache.commons.jxpath.ri.model.beans.NullElementPointer) object""];\n	""15"" [label=""return $stack8""];\n	""16"" [label=""return 0""];\n	""17"" [label=""return 1""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_true""];\n	""12"" -> ""17""[label=""cfg_false""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_goto""];\n	""9"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""16""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 0;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullElementPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    final NodePointer parent = getImmediateParentPointer();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n    }\n    if (index != WHOLE_COLLECTION) {\n        // Address the list[1][2] case\n        if (parent != null && parent.getIndex() != WHOLE_COLLECTION) {\n            buffer.append(""/."");\n        } else if (parent != null && parent.getImmediateParentPointer() != null && parent.getImmediateParentPointer().getIndex() != WHOLE_COLLECTION) {\n            buffer.append(""/."");\n        }\n        buffer.append(""["").append(index + 1).append(']');\n    }\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""2"" [label=""$stack11 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""4"" [label=""$stack13 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""5"" [label=""$stack14 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""6"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index>""];\n	""8"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index>""];\n	""10"" [label=""$stack7 = $stack6 + 1""];\n	""11"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack7)""];\n	""13"" [label=""buffer = $stack3""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack10 == null""];\n	""16"" [label=""if $stack12 == -2147483648""];\n	""17"" [label=""if $stack13 == -2147483648""];\n	""18"" [label=""if $stack4 == -2147483648""];\n	""19"" [label=""if parent == null""];\n	""20"" [label=""if parent == null""];\n	""21"" [label=""if parent == null""];\n	""22"" [label=""parent = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""23"" [label=""return $stack5""];\n	""24"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""26"" [label=""virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""27"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/.\"")""];\n	""28"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/.\"")""];\n	""29"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""26""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_goto""];\n	""15"" -> ""11""[label=""cfg_true""];\n	""15"" -> ""2""[label=""cfg_false""];\n	""16"" -> ""11""[label=""cfg_true""];\n	""16"" -> ""28""[label=""cfg_false""];\n	""17"" -> ""21""[label=""cfg_true""];\n	""17"" -> ""27""[label=""cfg_false""];\n	""18"" -> ""20""[label=""cfg_false""];\n	""18"" -> ""8""[label=""cfg_true""];\n	""19"" -> ""5""[label=""cfg_false""];\n	""19"" -> ""7""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_true""];\n	""20"" -> ""4""[label=""cfg_false""];\n	""21"" -> ""1""[label=""cfg_false""];\n	""21"" -> ""11""[label=""cfg_true""];\n	""22"" -> ""19""[label=""cfg_next""];\n	""24"" -> ""13""[label=""cfg_next""];\n	""25"" -> ""6""[label=""cfg_next""];\n	""26"" -> ""8""[label=""cfg_next""];\n	""27"" -> ""14""[label=""cfg_next""];\n	""28"" -> ""11""[label=""cfg_next""];\n	""29"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""23""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullElementPointer.<init>(NodePointer,int)",Constructor,* Create a new NullElementPointer.\n     * @param parent parent pointer\n     * @param index int,"public NullElementPointer(final NodePointer parent, final int index) {\n    super(parent, (Object) null);\n    this.index = index;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,int)","digraph cfg_init {\n	""1"" [label=""index := @parameter1: int""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object)>(parent, null)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullElementPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullElementPointer: int index> = index""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return name;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return null;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    return false;\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.getPropertyPointer(),Method,No Comment,@Override\npublic PropertyPointer getPropertyPointer() {\n    return new NullPropertyPointer(this);\n},org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer(),"digraph cfg_getPropertyPointer {\n	""1"" [label=""$stack1 = new org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(this)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPointer.createPath(JXPathContext,Object)",Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context, final Object value) {\n    if (parent != null) {\n        return parent.createPath(context, value).getValuePointer();\n    }\n    throw new UnsupportedOperationException(""Cannot create the root object: "" + asPath());\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(context, value)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: java.lang.String asPath()>()""];\n	""7"" [label=""$stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create the root object: \"")""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""9"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack9 = new java.lang.UnsupportedOperationException""];\n	""11"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""12"" [label=""if $stack3 == null""];\n	""13"" [label=""return $stack12""];\n	""14"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""15"" [label=""specialinvoke $stack9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack8)""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""17"" [label=""throw $stack9""];\n	""18"" [label=""value := @parameter1: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_false""];\n	""12"" -> ""10""[label=""cfg_true""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.createPath(JXPathContext),Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context) {\n    if (parent != null) {\n        return parent.createPath(context).getValuePointer();\n    }\n    throw new UnsupportedOperationException(""Cannot create the root object: "" + asPath());\n}",org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""3"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: java.lang.String asPath()>()""];\n	""6"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create the root object: \"")""];\n	""7"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack8 = new java.lang.UnsupportedOperationException""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""11"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""12"" [label=""if $stack2 == null""];\n	""13"" [label=""return $stack11""];\n	""14"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""15"" [label=""specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack7)""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""17"" [label=""throw $stack8""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_false""];\n	""12"" -> ""9""[label=""cfg_true""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPointer.createChild(JXPathContext,QName,int)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index) {\n    return createPath(context).createChild(context, name, index);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)>(context, name, index)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""index := @parameter2: int""];\n	""5"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPointer.createChild(JXPathContext,QName,int,Object)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    return createPath(context).createChild(context, name, index, value);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""2"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)>(context, name, index, value)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""4"" [label=""index := @parameter2: int""];\n	""5"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""return $stack6""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""8"" [label=""value := @parameter3: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return name == null ? 0 : name.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""3"" [label=""$stack3 = 0""];\n	""4"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.QName: int hashCode()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof NullPointer)) {\n        return false;\n    }\n    final NullPointer other = (NullPointer) object;\n    return name == other.name || name != null && name.equals(other.name);\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.QName: boolean equals(java.lang.Object)>($stack8)""];\n	""2"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""3"" [label=""$stack4 = other.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""6"" [label=""$stack7 = 0""];\n	""7"" [label=""$stack7 = 1""];\n	""8"" [label=""$stack8 = other.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""9"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack10 == 0""];\n	""12"" [label=""if $stack3 != 0""];\n	""13"" [label=""if $stack5 == $stack4""];\n	""14"" [label=""if $stack6 == null""];\n	""15"" [label=""if object != this""];\n	""16"" [label=""object := @parameter0: java.lang.Object""];\n	""17"" [label=""other = (org.apache.commons.jxpath.ri.model.beans.NullPointer) object""];\n	""18"" [label=""return $stack7""];\n	""19"" [label=""return 0""];\n	""20"" [label=""return 1""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_goto""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""17""[label=""cfg_true""];\n	""12"" -> ""19""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_false""];\n	""13"" -> ""7""[label=""cfg_true""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""2""[label=""cfg_true""];\n	""15"" -> ""20""[label=""cfg_false""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    if (id != null) {\n        return ""id("" + id + "")"";\n    }\n    return parent == null ? ""null()"" : super.asPath();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: java.lang.String id>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack3 = \""null()\""""];\n	""4"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.String asPath()>()""];\n	""5"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: java.lang.String id>""];\n	""7"" [label=""$stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""id(\"")""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""9"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"")\"")""];\n	""10"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack1 == null""];\n	""13"" [label=""if $stack2 != null""];\n	""14"" [label=""return $stack3""];\n	""15"" [label=""return $stack9""];\n	""16"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_goto""];\n	""12"" -> ""2""[label=""cfg_true""];\n	""12"" -> ""5""[label=""cfg_false""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""4""[label=""cfg_true""];\n	""16"" -> ""7""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.NullPointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 0;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPointer.<init>(QName,Locale)",Constructor,* Create a new NullPointer.\n     * @param name node name\n     * @param locale Locale,"public NullPointer(final QName name, final Locale locale) {\n    super(null, locale);\n    this.name = name;\n}","void <init>(org.apache.commons.jxpath.ri.QName,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""locale := @parameter1: java.util.Locale""];\n	""2"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPointer.<init>(NodePointer,QName)",Constructor,* Used for the root node.\n     * @param parent parent pointer\n     * @param name node name,"public NullPointer(final NodePointer parent, final QName name) {\n    super(parent);\n    this.name = name;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)","digraph cfg_init {\n	""1"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.NullPointer.<init>(Locale,String)",Constructor,* Create a new NullPointer.\n     * @param locale Locale\n     * @param id String,"public NullPointer(final Locale locale, final String id) {\n    super(null, locale);\n    this.id = id;\n}","void <init>(java.util.Locale,java.lang.String)","digraph cfg_init {\n	""1"" [label=""id := @parameter1: java.lang.String""];\n	""2"" [label=""locale := @parameter0: java.util.Locale""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.NullPointer: java.lang.String id> = id""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.getPropertyPointer(),Method,No Comment,"@Override\npublic PropertyPointer getPropertyPointer() {\n    return new BeanPropertyPointer(this, beanInfo);\n}",org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer(),"digraph cfg_getPropertyPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.JXPathBeanInfo beanInfo>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.beans.BeanPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.JXPathBeanInfo)>(this, $stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return name;\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return bean;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.isCollection(),Method,* {@inheritDoc}\n     * @return false,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.getLength(),Method,* {@inheritDoc}\n     * @return 1,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    final Object value = getNode();\n    return value == null || JXPathIntrospector.getBeanInfo(value.getClass()).isAtomic();\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack2 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack2)""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isAtomic()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if value == null""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""11"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object getNode()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return name == null ? 0 : name.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""3"" [label=""$stack3 = 0""];\n	""4"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.QName: int hashCode()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof BeanPointer)) {\n        return false;\n    }\n    final BeanPointer other = (BeanPointer) object;\n    if (parent != other.parent && (parent == null || !parent.equals(other.parent))) {\n        return false;\n    }\n    if (name == null && other.name != null || name != null && !name.equals(other.name)) {\n        return false;\n    }\n    final int iThis = index == WHOLE_COLLECTION ? 0 : index;\n    final int iOther = other.index == WHOLE_COLLECTION ? 0 : other.index;\n    if (iThis != iOther) {\n        return false;\n    }\n    if (bean instanceof Number || bean instanceof String || bean instanceof Boolean) {\n        return bean.equals(other.bean);\n    }\n    return bean == other.bean;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: int index>""];\n	""2"" [label=""$stack11 = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: int index>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""4"" [label=""$stack13 = $stack12 instanceof java.lang.Number""];\n	""5"" [label=""$stack14 = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.Object: boolean equals(java.lang.Object)>($stack14)""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""9"" [label=""$stack18 = $stack17 instanceof java.lang.String""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""11"" [label=""$stack20 = $stack19 instanceof java.lang.Boolean""];\n	""12"" [label=""$stack21 = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""14"" [label=""$stack23 = 0""];\n	""15"" [label=""$stack23 = 1""];\n	""16"" [label=""$stack24 = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""17"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""18"" [label=""$stack26 = virtualinvoke $stack25.<org.apache.commons.jxpath.ri.QName: boolean equals(java.lang.Object)>($stack24)""];\n	""19"" [label=""$stack27 = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""20"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""21"" [label=""$stack29 = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""22"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""23"" [label=""$stack31 = virtualinvoke $stack30.<java.lang.Object: boolean equals(java.lang.Object)>($stack29)""];\n	""24"" [label=""$stack5 = object instanceof org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""25"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""26"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""27"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""28"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name>""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""iOther = 0""];\n	""33"" [label=""iOther = other.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: int index>""];\n	""34"" [label=""iThis = 0""];\n	""35"" [label=""iThis = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: int index>""];\n	""36"" [label=""if $stack10 != -2147483648""];\n	""37"" [label=""if $stack11 != -2147483648""];\n	""38"" [label=""if $stack13 != 0""];\n	""39"" [label=""if $stack18 != 0""];\n	""40"" [label=""if $stack20 == 0""];\n	""41"" [label=""if $stack22 != $stack21""];\n	""42"" [label=""if $stack26 != 0""];\n	""43"" [label=""if $stack27 != null""];\n	""44"" [label=""if $stack28 == null""];\n	""45"" [label=""if $stack31 != 0""];\n	""46"" [label=""if $stack5 != 0""];\n	""47"" [label=""if $stack7 == $stack6""];\n	""48"" [label=""if $stack8 != null""];\n	""49"" [label=""if $stack9 == null""];\n	""50"" [label=""if iThis == iOther""];\n	""51"" [label=""if object != this""];\n	""52"" [label=""object := @parameter0: java.lang.Object""];\n	""53"" [label=""other = (org.apache.commons.jxpath.ri.model.beans.BeanPointer) object""];\n	""54"" [label=""return $stack16""];\n	""55"" [label=""return $stack23""];\n	""56"" [label=""return 0""];\n	""57"" [label=""return 0""];\n	""58"" [label=""return 0""];\n	""59"" [label=""return 0""];\n	""60"" [label=""return 1""];\n	""61"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""1"" -> ""36""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""55""[label=""cfg_next""];\n	""15"" -> ""31""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""42""[label=""cfg_next""];\n	""19"" -> ""43""[label=""cfg_next""];\n	""2"" -> ""37""[label=""cfg_next""];\n	""20"" -> ""44""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""45""[label=""cfg_next""];\n	""24"" -> ""46""[label=""cfg_next""];\n	""25"" -> ""47""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""48""[label=""cfg_next""];\n	""28"" -> ""49""[label=""cfg_next""];\n	""29"" -> ""2""[label=""cfg_goto""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""50""[label=""cfg_goto""];\n	""31"" -> ""55""[label=""cfg_goto""];\n	""32"" -> ""30""[label=""cfg_next""];\n	""33"" -> ""50""[label=""cfg_next""];\n	""34"" -> ""29""[label=""cfg_next""];\n	""35"" -> ""2""[label=""cfg_next""];\n	""36"" -> ""34""[label=""cfg_false""];\n	""36"" -> ""35""[label=""cfg_true""];\n	""37"" -> ""32""[label=""cfg_false""];\n	""37"" -> ""33""[label=""cfg_true""];\n	""38"" -> ""6""[label=""cfg_true""];\n	""38"" -> ""8""[label=""cfg_false""];\n	""39"" -> ""10""[label=""cfg_false""];\n	""39"" -> ""6""[label=""cfg_true""];\n	""4"" -> ""38""[label=""cfg_next""];\n	""40"" -> ""13""[label=""cfg_true""];\n	""40"" -> ""6""[label=""cfg_false""];\n	""41"" -> ""14""[label=""cfg_true""];\n	""41"" -> ""15""[label=""cfg_false""];\n	""42"" -> ""1""[label=""cfg_true""];\n	""42"" -> ""58""[label=""cfg_false""];\n	""43"" -> ""28""[label=""cfg_false""];\n	""43"" -> ""58""[label=""cfg_true""];\n	""44"" -> ""22""[label=""cfg_false""];\n	""44"" -> ""57""[label=""cfg_true""];\n	""45"" -> ""27""[label=""cfg_true""];\n	""45"" -> ""57""[label=""cfg_false""];\n	""46"" -> ""53""[label=""cfg_true""];\n	""46"" -> ""56""[label=""cfg_false""];\n	""47"" -> ""20""[label=""cfg_false""];\n	""47"" -> ""27""[label=""cfg_true""];\n	""48"" -> ""19""[label=""cfg_false""];\n	""48"" -> ""28""[label=""cfg_true""];\n	""49"" -> ""1""[label=""cfg_true""];\n	""49"" -> ""17""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""50"" -> ""3""[label=""cfg_true""];\n	""50"" -> ""59""[label=""cfg_false""];\n	""51"" -> ""24""[label=""cfg_true""];\n	""51"" -> ""60""[label=""cfg_false""];\n	""52"" -> ""51""[label=""cfg_next""];\n	""53"" -> ""26""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""61"" -> ""52""[label=""cfg_next""];\n	""7"" -> ""54""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""39""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointer.asPath(),Method,"* {@inheritDoc}\n     * If the pointer has a parent, then parent's path.\n     * If the bean is null, ""null()"".\n     * If the bean is a primitive value, the value itself.\n     * Otherwise - an empty string.","@Override\npublic String asPath() {\n    if (parent != null) {\n        return super.asPath();\n    }\n    if (bean == null) {\n        return ""null()"";\n    }\n    if (bean instanceof Number) {\n        String string = bean.toString();\n        if (string.endsWith("".0"")) {\n            string = string.substring(0, string.length() - 2);\n        }\n        return string;\n    }\n    if (bean instanceof Boolean) {\n        return ((Boolean) bean).booleanValue() ? ""true()"" : ""false()"";\n    }\n    if (bean instanceof String) {\n        return ""'"" + bean + ""'"";\n    }\n    return ""/"";\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""8"" [label=""$stack17 = (java.lang.Boolean) $stack16""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.Boolean: boolean booleanValue()>()""];\n	""10"" [label=""$stack19 = \""false()\""""];\n	""11"" [label=""$stack19 = \""true()\""""];\n	""12"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""13"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""14"" [label=""$stack21 = virtualinvoke string.<java.lang.String: boolean endsWith(java.lang.String)>(\"".0\"")""];\n	""15"" [label=""$stack22 = virtualinvoke string.<java.lang.String: int length()>()""];\n	""16"" [label=""$stack23 = $stack22 - 2""];\n	""17"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.String asPath()>()""];\n	""18"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""19"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""20"" [label=""$stack5 = $stack4 instanceof java.lang.Number""];\n	""21"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""22"" [label=""$stack7 = $stack6 instanceof java.lang.Boolean""];\n	""23"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean>""];\n	""24"" [label=""$stack9 = $stack8 instanceof java.lang.String""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack18 == 0""];\n	""27"" [label=""if $stack2 == null""];\n	""28"" [label=""if $stack21 == 0""];\n	""29"" [label=""if $stack3 != null""];\n	""30"" [label=""if $stack5 == 0""];\n	""31"" [label=""if $stack7 == 0""];\n	""32"" [label=""if $stack9 == 0""];\n	""33"" [label=""return \""/\""""];\n	""34"" [label=""return \""null()\""""];\n	""35"" [label=""return $stack15""];\n	""36"" [label=""return $stack19""];\n	""37"" [label=""return $stack24""];\n	""38"" [label=""return string""];\n	""39"" [label=""specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>()""];\n	""40"" [label=""string = virtualinvoke $stack20.<java.lang.Object: java.lang.String toString()>()""];\n	""41"" [label=""string = virtualinvoke string.<java.lang.String: java.lang.String substring(int,int)>(0, $stack23)""];\n	""42"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""1"" -> ""39""[label=""cfg_next""];\n	""10"" -> ""36""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""27""[label=""cfg_next""];\n	""13"" -> ""40""[label=""cfg_next""];\n	""14"" -> ""28""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""41""[label=""cfg_next""];\n	""17"" -> ""37""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""31""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""32""[label=""cfg_next""];\n	""25"" -> ""36""[label=""cfg_goto""];\n	""26"" -> ""10""[label=""cfg_true""];\n	""26"" -> ""11""[label=""cfg_false""];\n	""27"" -> ""17""[label=""cfg_false""];\n	""27"" -> ""18""[label=""cfg_true""];\n	""28"" -> ""15""[label=""cfg_false""];\n	""28"" -> ""38""[label=""cfg_true""];\n	""29"" -> ""19""[label=""cfg_true""];\n	""29"" -> ""34""[label=""cfg_false""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_false""];\n	""30"" -> ""21""[label=""cfg_true""];\n	""31"" -> ""23""[label=""cfg_true""];\n	""31"" -> ""7""[label=""cfg_false""];\n	""32"" -> ""1""[label=""cfg_false""];\n	""32"" -> ""33""[label=""cfg_true""];\n	""39"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""14""[label=""cfg_next""];\n	""41"" -> ""38""[label=""cfg_next""];\n	""42"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""35""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""26""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.BeanPointer.<init>(QName,Object,JXPathBeanInfo,Locale)",Constructor,* Create a new BeanPointer.\n     * @param name is the name given to the first node\n     * @param bean pointed\n     * @param beanInfo JXPathBeanInfo\n     * @param locale Locale,"public BeanPointer(final QName name, final Object bean, final JXPathBeanInfo beanInfo, final Locale locale) {\n    super(null, locale);\n    this.name = name;\n    this.bean = bean;\n    this.beanInfo = beanInfo;\n}","void <init>(org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.JXPathBeanInfo,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""bean := @parameter1: java.lang.Object""];\n	""2"" [label=""beanInfo := @parameter2: org.apache.commons.jxpath.JXPathBeanInfo""];\n	""3"" [label=""locale := @parameter3: java.util.Locale""];\n	""4"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean> = bean""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.JXPathBeanInfo beanInfo> = beanInfo""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.BeanPointer.<init>(NodePointer,QName,Object,JXPathBeanInfo)",Constructor,* Create a new BeanPointer.\n     * @param parent pointer\n     * @param name is the name given to the first node\n     * @param bean pointed\n     * @param beanInfo JXPathBeanInfo,"public BeanPointer(final NodePointer parent, final QName name, final Object bean, final JXPathBeanInfo beanInfo) {\n    super(parent);\n    this.name = name;\n    this.bean = bean;\n    this.beanInfo = beanInfo;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.JXPathBeanInfo)","digraph cfg_init {\n	""1"" [label=""bean := @parameter2: java.lang.Object""];\n	""2"" [label=""beanInfo := @parameter3: org.apache.commons.jxpath.JXPathBeanInfo""];\n	""3"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: java.lang.Object bean> = bean""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.JXPathBeanInfo beanInfo> = beanInfo""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: org.apache.commons.jxpath.ri.QName name> = name""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.getPropertyPointer(),Method,* Gets the property pointer.\n     * @return NodePointer,protected NodePointer getPropertyPointer() {\n    return propertyNodePointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getPropertyPointer(),"digraph cfg_getPropertyPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.reset(),Method,* Reset property iteration.,public void reset() {\n    position = 0;\n    targetReady = false;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""3"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean targetReady> = 0""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int position> = 0""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.getNodePointer(),Method,No Comment,@Override\npublic NodePointer getNodePointer() {\n    if (position == 0) {\n        if (name != null) {\n            if (!targetReady) {\n                prepareForIndividualProperty(name);\n            }\n            // If there is no such property - return null\n            if (empty) {\n                return null;\n            }\n        } else {\n            if (!setPosition(1)) {\n                return null;\n            }\n            reset();\n        }\n    }\n    try {\n        return propertyNodePointer.getValuePointer();\n    } catch (final Throwable t) {\n        propertyNodePointer.handle(t);\n        final NullPropertyPointer npp = new NullPropertyPointer(propertyNodePointer.getImmediateParentPointer());\n        npp.setPropertyName(propertyNodePointer.getPropertyName());\n        npp.setIndex(propertyNodePointer.getIndex());\n        return npp.getValuePointer();\n    }\n},org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: java.lang.String name>""];\n	""2"" [label=""$stack11 := @caughtexception""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String getPropertyName()>()""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getIndex()>()""];\n	""11"" [label=""$stack20 = virtualinvoke npp.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""12"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int position>""];\n	""13"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""14"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""15"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: java.lang.String name>""];\n	""16"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean setPosition(int)>(1)""];\n	""17"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean targetReady>""];\n	""18"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean empty>""];\n	""19"" [label=""if $stack3 != 0""];\n	""20"" [label=""if $stack6 == null""];\n	""21"" [label=""if $stack7 != 0""];\n	""22"" [label=""if $stack8 != 0""];\n	""23"" [label=""if $stack9 == 0""];\n	""24"" [label=""npp = $stack15""];\n	""25"" [label=""return $stack20""];\n	""26"" [label=""return $stack5""];\n	""27"" [label=""return null""];\n	""28"" [label=""return null""];\n	""29"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>($stack14)""];\n	""30"" [label=""t = $stack11""];\n	""31"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""32"" [label=""virtualinvoke $stack12.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void handle(java.lang.Throwable)>(t)""];\n	""33"" [label=""virtualinvoke npp.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void setIndex(int)>($stack19)""];\n	""34"" [label=""virtualinvoke npp.<org.apache.commons.jxpath.ri.model.beans.NullPropertyPointer: void setPropertyName(java.lang.String)>($stack17)""];\n	""35"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: void prepareForIndividualProperty(java.lang.String)>($stack10)""];\n	""36"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: void reset()>()""];\n	""1"" -> ""35""[label=""cfg_next""];\n	""10"" -> ""33""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_except""];\n	""14"" -> ""2""[label=""cfg_except""];\n	""14"" -> ""26""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""23""[label=""cfg_next""];\n	""19"" -> ""13""[label=""cfg_true""];\n	""19"" -> ""15""[label=""cfg_false""];\n	""2"" -> ""30""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_true""];\n	""20"" -> ""17""[label=""cfg_false""];\n	""21"" -> ""28""[label=""cfg_false""];\n	""21"" -> ""36""[label=""cfg_true""];\n	""22"" -> ""1""[label=""cfg_false""];\n	""22"" -> ""18""[label=""cfg_true""];\n	""23"" -> ""13""[label=""cfg_true""];\n	""23"" -> ""27""[label=""cfg_false""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""29"" -> ""24""[label=""cfg_next""];\n	""3"" -> ""32""[label=""cfg_next""];\n	""30"" -> ""3""[label=""cfg_next""];\n	""31"" -> ""12""[label=""cfg_next""];\n	""32"" -> ""6""[label=""cfg_next""];\n	""33"" -> ""11""[label=""cfg_next""];\n	""34"" -> ""9""[label=""cfg_next""];\n	""35"" -> ""18""[label=""cfg_next""];\n	""36"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""34""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    return name == null ? setPositionAllProperties(position) : setPositionIndividualProperty(position);\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: java.lang.String name>""];\n	""2"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean setPositionAllProperties(int)>(position)""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean setPositionIndividualProperty(int)>(position)""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack2 != null""];\n	""6"" [label=""position := @parameter0: int""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.setPositionIndividualProperty(int),Method,* Sets position for an individual property.\n     * @param position int position\n     * @return whether this was a valid position,private boolean setPositionIndividualProperty(final int position) {\n    this.position = position;\n    if (position < 1) {\n        return false;\n    }\n    if (!targetReady) {\n        prepareForIndividualProperty(name);\n    }\n    if (empty) {\n        return false;\n    }\n    final int length = getLength();\n    int index;\n    if (!reverse) {\n        index = position + startIndex;\n        if (!includeStart) {\n            index++;\n        }\n        if (index > length) {\n            return false;\n        }\n    } else {\n        int end = startIndex;\n        if (end == -1) {\n            end = length - 1;\n        }\n        index = end - position + 2;\n        if (!includeStart) {\n            index--;\n        }\n        if (index < 1) {\n            return false;\n        }\n    }\n    propertyNodePointer.setIndex(index - 1);\n    return true;\n},boolean setPositionIndividualProperty(int),"digraph cfg_setPositionIndividualProperty {\n	""1"" [label=""$stack10 = index - 1""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart>""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: java.lang.String name>""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean targetReady>""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean empty>""];\n	""8"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean reverse>""];\n	""9"" [label=""$stack8 = end - position""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart>""];\n	""11"" [label=""end = length - 1""];\n	""12"" [label=""end = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""13"" [label=""if $stack13 != 0""];\n	""14"" [label=""if $stack5 != 0""];\n	""15"" [label=""if $stack6 == 0""];\n	""16"" [label=""if $stack7 != 0""];\n	""17"" [label=""if $stack9 != 0""];\n	""18"" [label=""if end != -1""];\n	""19"" [label=""if index <= length""];\n	""20"" [label=""if index >= 1""];\n	""21"" [label=""if position >= 1""];\n	""22"" [label=""index = $stack8 + 2""];\n	""23"" [label=""index = index + -1""];\n	""24"" [label=""index = index + 1""];\n	""25"" [label=""index = position + $stack12""];\n	""26"" [label=""length = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int getLength()>()""];\n	""27"" [label=""position := @parameter0: int""];\n	""28"" [label=""return 0""];\n	""29"" [label=""return 0""];\n	""30"" [label=""return 0""];\n	""31"" [label=""return 0""];\n	""32"" [label=""return 1""];\n	""33"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""34"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int position> = position""];\n	""35"" [label=""virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>($stack10)""];\n	""36"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: void prepareForIndividualProperty(java.lang.String)>($stack14)""];\n	""1"" -> ""35""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""24""[label=""cfg_false""];\n	""14"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""26""[label=""cfg_true""];\n	""15"" -> ""29""[label=""cfg_false""];\n	""16"" -> ""12""[label=""cfg_true""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""20""[label=""cfg_true""];\n	""17"" -> ""23""[label=""cfg_false""];\n	""18"" -> ""11""[label=""cfg_false""];\n	""18"" -> ""9""[label=""cfg_true""];\n	""19"" -> ""2""[label=""cfg_true""];\n	""19"" -> ""30""[label=""cfg_false""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_true""];\n	""20"" -> ""31""[label=""cfg_false""];\n	""21"" -> ""28""[label=""cfg_false""];\n	""21"" -> ""6""[label=""cfg_true""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""19""[label=""cfg_next""];\n	""25"" -> ""4""[label=""cfg_next""];\n	""26"" -> ""8""[label=""cfg_next""];\n	""27"" -> ""34""[label=""cfg_next""];\n	""3"" -> ""25""[label=""cfg_next""];\n	""33"" -> ""27""[label=""cfg_next""];\n	""34"" -> ""21""[label=""cfg_next""];\n	""35"" -> ""32""[label=""cfg_next""];\n	""36"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""36""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.setPositionAllProperties(int),Method,* Sets position for all properties\n     * @param position int position\n     * @return whether this was a valid position,private boolean setPositionAllProperties(final int position) {\n    this.position = position;\n    if (position < 1) {\n        return false;\n    }\n    int offset;\n    final int count = propertyNodePointer.getPropertyCount();\n    if (!reverse) {\n        int index = 1;\n        for (int i = startPropertyIndex; i < count; i++) {\n            propertyNodePointer.setPropertyIndex(i);\n            int length = getLength();\n            if (i == startPropertyIndex) {\n                length -= startIndex;\n                if (!includeStart) {\n                    length--;\n                }\n                offset = startIndex + position - index;\n                if (!includeStart) {\n                    offset++;\n                }\n            } else {\n                offset = position - index;\n            }\n            if (index <= position && position < index + length) {\n                propertyNodePointer.setIndex(offset);\n                return true;\n            }\n            index += length;\n        }\n    } else {\n        int index = 1;\n        int start = startPropertyIndex;\n        if (start == PropertyPointer.UNSPECIFIED_PROPERTY) {\n            start = count - 1;\n        }\n        for (int i = start; i >= 0; i--) {\n            propertyNodePointer.setPropertyIndex(i);\n            int length = getLength();\n            if (i == startPropertyIndex) {\n                int end = startIndex;\n                if (end == -1) {\n                    end = length - 1;\n                }\n                length = end + 1;\n                offset = end - position + 1;\n                if (!includeStart) {\n                    offset--;\n                    length--;\n                }\n            } else {\n                offset = length - (position - index) - 1;\n            }\n            if (index <= position && position < index + length) {\n                propertyNodePointer.setIndex(offset);\n                return true;\n            }\n            index += length;\n        }\n    }\n    return false;\n},boolean setPositionAllProperties(int),"digraph cfg_setPositionAllProperties {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean reverse>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""4"" [label=""$stack13 = position - index""];\n	""5"" [label=""$stack14 = length_1 - $stack13""];\n	""6"" [label=""$stack15 = index + length_1""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""8"" [label=""$stack17 = end - position""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart>""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""12"" [label=""$stack21 = index + length""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""15"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart>""];\n	""16"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""17"" [label=""$stack26 = $stack25 + position""];\n	""18"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart>""];\n	""19"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""20"" [label=""count = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getPropertyCount()>()""];\n	""21"" [label=""end = length_1 - 1""];\n	""22"" [label=""end = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""i = count - 1""];\n	""29"" [label=""i = i + 1""];\n	""30"" [label=""i = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""31"" [label=""i = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""32"" [label=""if $stack10 != 0""];\n	""33"" [label=""if $stack18 != 0""];\n	""34"" [label=""if $stack24 != 0""];\n	""35"" [label=""if $stack27 != 0""];\n	""36"" [label=""if end != -1""];\n	""37"" [label=""if i != $stack20""];\n	""38"" [label=""if i != -2147483648""];\n	""39"" [label=""if i >= count""];\n	""40"" [label=""if index > position""];\n	""41"" [label=""if index > position""];\n	""42"" [label=""if length != $stack12""];\n	""43"" [label=""if length < 0""];\n	""44"" [label=""if position >= $stack15""];\n	""45"" [label=""if position >= $stack21""];\n	""46"" [label=""if position >= 1""];\n	""47"" [label=""index = 1""];\n	""48"" [label=""index = 1""];\n	""49"" [label=""index = index + length""];\n	""50"" [label=""index = index + length_1""];\n	""51"" [label=""length = i""];\n	""52"" [label=""length = length + -1""];\n	""53"" [label=""length = length + -1""];\n	""54"" [label=""length = length - $stack23""];\n	""55"" [label=""length = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int getLength()>()""];\n	""56"" [label=""length_1 = end + 1""];\n	""57"" [label=""length_1 = length_1 + -1""];\n	""58"" [label=""length_1 = specialinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int getLength()>()""];\n	""59"" [label=""offset = $stack14 - 1""];\n	""60"" [label=""offset = $stack17 + 1""];\n	""61"" [label=""offset = $stack26 - index""];\n	""62"" [label=""offset = offset + -1""];\n	""63"" [label=""offset = offset + 1""];\n	""64"" [label=""offset = position - index""];\n	""65"" [label=""position := @parameter0: int""];\n	""66"" [label=""return 0""];\n	""67"" [label=""return 0""];\n	""68"" [label=""return 1""];\n	""69"" [label=""return 1""];\n	""70"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""71"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int position> = position""];\n	""72"" [label=""virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyIndex(int)>(length)""];\n	""73"" [label=""virtualinvoke $stack16.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>(offset)""];\n	""74"" [label=""virtualinvoke $stack19.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyIndex(int)>(i)""];\n	""75"" [label=""virtualinvoke $stack22.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>(offset)""];\n	""1"" -> ""32""[label=""cfg_next""];\n	""10"" -> ""74""[label=""cfg_next""];\n	""11"" -> ""37""[label=""cfg_next""];\n	""12"" -> ""45""[label=""cfg_next""];\n	""13"" -> ""75""[label=""cfg_next""];\n	""14"" -> ""54""[label=""cfg_next""];\n	""15"" -> ""34""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""61""[label=""cfg_next""];\n	""18"" -> ""35""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""72""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""56""[label=""cfg_next""];\n	""22"" -> ""36""[label=""cfg_next""];\n	""23"" -> ""67""[label=""cfg_goto""];\n	""24"" -> ""40""[label=""cfg_goto""];\n	""25"" -> ""39""[label=""cfg_goto""];\n	""26"" -> ""41""[label=""cfg_goto""];\n	""27"" -> ""43""[label=""cfg_goto""];\n	""28"" -> ""51""[label=""cfg_next""];\n	""29"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""42""[label=""cfg_next""];\n	""30"" -> ""39""[label=""cfg_next""];\n	""31"" -> ""38""[label=""cfg_next""];\n	""32"" -> ""47""[label=""cfg_false""];\n	""32"" -> ""48""[label=""cfg_true""];\n	""33"" -> ""26""[label=""cfg_true""];\n	""33"" -> ""62""[label=""cfg_false""];\n	""34"" -> ""16""[label=""cfg_true""];\n	""34"" -> ""52""[label=""cfg_false""];\n	""35"" -> ""40""[label=""cfg_true""];\n	""35"" -> ""63""[label=""cfg_false""];\n	""36"" -> ""21""[label=""cfg_false""];\n	""36"" -> ""56""[label=""cfg_true""];\n	""37"" -> ""14""[label=""cfg_false""];\n	""37"" -> ""64""[label=""cfg_true""];\n	""38"" -> ""28""[label=""cfg_false""];\n	""38"" -> ""51""[label=""cfg_true""];\n	""39"" -> ""10""[label=""cfg_false""];\n	""39"" -> ""23""[label=""cfg_true""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""12""[label=""cfg_false""];\n	""40"" -> ""49""[label=""cfg_true""];\n	""41"" -> ""50""[label=""cfg_true""];\n	""41"" -> ""6""[label=""cfg_false""];\n	""42"" -> ""22""[label=""cfg_false""];\n	""42"" -> ""4""[label=""cfg_true""];\n	""43"" -> ""2""[label=""cfg_false""];\n	""43"" -> ""67""[label=""cfg_true""];\n	""44"" -> ""50""[label=""cfg_true""];\n	""44"" -> ""7""[label=""cfg_false""];\n	""45"" -> ""13""[label=""cfg_false""];\n	""45"" -> ""49""[label=""cfg_true""];\n	""46"" -> ""19""[label=""cfg_true""];\n	""46"" -> ""66""[label=""cfg_false""];\n	""47"" -> ""30""[label=""cfg_next""];\n	""48"" -> ""31""[label=""cfg_next""];\n	""49"" -> ""29""[label=""cfg_next""];\n	""5"" -> ""59""[label=""cfg_next""];\n	""50"" -> ""53""[label=""cfg_next""];\n	""51"" -> ""43""[label=""cfg_next""];\n	""52"" -> ""16""[label=""cfg_next""];\n	""53"" -> ""27""[label=""cfg_next""];\n	""54"" -> ""15""[label=""cfg_next""];\n	""55"" -> ""11""[label=""cfg_next""];\n	""56"" -> ""8""[label=""cfg_next""];\n	""57"" -> ""26""[label=""cfg_next""];\n	""58"" -> ""3""[label=""cfg_next""];\n	""59"" -> ""41""[label=""cfg_next""];\n	""6"" -> ""44""[label=""cfg_next""];\n	""60"" -> ""9""[label=""cfg_next""];\n	""61"" -> ""18""[label=""cfg_next""];\n	""62"" -> ""57""[label=""cfg_next""];\n	""63"" -> ""24""[label=""cfg_next""];\n	""64"" -> ""40""[label=""cfg_next""];\n	""65"" -> ""71""[label=""cfg_next""];\n	""7"" -> ""73""[label=""cfg_next""];\n	""70"" -> ""65""[label=""cfg_next""];\n	""71"" -> ""46""[label=""cfg_next""];\n	""72"" -> ""58""[label=""cfg_next""];\n	""73"" -> ""69""[label=""cfg_next""];\n	""74"" -> ""55""[label=""cfg_next""];\n	""75"" -> ""68""[label=""cfg_next""];\n	""8"" -> ""60""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.prepareForIndividualProperty(String),Method,* Prepare for an individual property.\n     * @param name property name,protected void prepareForIndividualProperty(final String name) {\n    targetReady = true;\n    empty = true;\n    final String[] names = propertyNodePointer.getPropertyNames();\n    if (!reverse) {\n        if (startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY) {\n            startPropertyIndex = 0;\n        }\n        if (startIndex == NodePointer.WHOLE_COLLECTION) {\n            startIndex = 0;\n        }\n        for (int i = startPropertyIndex; i < names.length; i++) {\n            if (names[i].equals(name)) {\n                propertyNodePointer.setPropertyIndex(i);\n                if (i != startPropertyIndex) {\n                    startIndex = 0;\n                    includeStart = true;\n                }\n                empty = false;\n                break;\n            }\n        }\n    } else {\n        if (startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY) {\n            startPropertyIndex = names.length - 1;\n        }\n        if (startIndex == NodePointer.WHOLE_COLLECTION) {\n            startIndex = -1;\n        }\n        for (int i = startPropertyIndex; i >= 0; i--) {\n            if (names[i].equals(name)) {\n                propertyNodePointer.setPropertyIndex(i);\n                if (i != startPropertyIndex) {\n                    startIndex = -1;\n                    includeStart = true;\n                }\n                empty = false;\n                break;\n            }\n        }\n    }\n},void prepareForIndividualProperty(java.lang.String),"digraph cfg_prepareForIndividualProperty {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""3"" [label=""$stack12 = lengthof names""];\n	""4"" [label=""$stack13 = $stack12 - 1""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""7"" [label=""$stack16 = lengthof names""];\n	""8"" [label=""$stack17 = names[i]""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>(name)""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""12"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""13"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean reverse>""];\n	""14"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""15"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""16"" [label=""$stack8 = names[i]""];\n	""17"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>(name)""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""i = i + -1""];\n	""24"" [label=""i = i + 1""];\n	""25"" [label=""i = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""26"" [label=""i = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex>""];\n	""27"" [label=""if $stack14 != -2147483648""];\n	""28"" [label=""if $stack15 != -2147483648""];\n	""29"" [label=""if $stack18 == 0""];\n	""30"" [label=""if $stack5 != 0""];\n	""31"" [label=""if $stack6 != -2147483648""];\n	""32"" [label=""if $stack7 != -2147483648""];\n	""33"" [label=""if $stack9 == 0""];\n	""34"" [label=""if i < 0""];\n	""35"" [label=""if i == $stack11""];\n	""36"" [label=""if i == $stack20""];\n	""37"" [label=""if i >= $stack16""];\n	""38"" [label=""name := @parameter0: java.lang.String""];\n	""39"" [label=""names = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String[] getPropertyNames()>()""];\n	""40"" [label=""return""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean empty> = 0""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean empty> = 0""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean empty> = 1""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart> = 1""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart> = 1""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean targetReady> = 1""];\n	""48"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = -1""];\n	""49"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = -1""];\n	""50"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = 0""];\n	""51"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = 0""];\n	""52"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex> = $stack13""];\n	""53"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex> = 0""];\n	""54"" [label=""virtualinvoke $stack10.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyIndex(int)>(i)""];\n	""55"" [label=""virtualinvoke $stack19.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyIndex(int)>(i)""];\n	""1"" -> ""54""[label=""cfg_next""];\n	""10"" -> ""55""[label=""cfg_next""];\n	""11"" -> ""36""[label=""cfg_next""];\n	""12"" -> ""39""[label=""cfg_next""];\n	""13"" -> ""30""[label=""cfg_next""];\n	""14"" -> ""31""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""33""[label=""cfg_next""];\n	""18"" -> ""40""[label=""cfg_goto""];\n	""19"" -> ""18""[label=""cfg_goto""];\n	""2"" -> ""35""[label=""cfg_next""];\n	""20"" -> ""7""[label=""cfg_goto""];\n	""21"" -> ""40""[label=""cfg_goto""];\n	""22"" -> ""34""[label=""cfg_goto""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""20""[label=""cfg_next""];\n	""25"" -> ""7""[label=""cfg_next""];\n	""26"" -> ""34""[label=""cfg_next""];\n	""27"" -> ""53""[label=""cfg_false""];\n	""27"" -> ""6""[label=""cfg_true""];\n	""28"" -> ""25""[label=""cfg_true""];\n	""28"" -> ""50""[label=""cfg_false""];\n	""29"" -> ""10""[label=""cfg_false""];\n	""29"" -> ""24""[label=""cfg_true""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""14""[label=""cfg_true""];\n	""30"" -> ""5""[label=""cfg_false""];\n	""31"" -> ""15""[label=""cfg_true""];\n	""31"" -> ""3""[label=""cfg_false""];\n	""32"" -> ""26""[label=""cfg_true""];\n	""32"" -> ""48""[label=""cfg_false""];\n	""33"" -> ""1""[label=""cfg_false""];\n	""33"" -> ""23""[label=""cfg_true""];\n	""34"" -> ""16""[label=""cfg_false""];\n	""34"" -> ""40""[label=""cfg_true""];\n	""35"" -> ""43""[label=""cfg_true""];\n	""35"" -> ""49""[label=""cfg_false""];\n	""36"" -> ""42""[label=""cfg_true""];\n	""36"" -> ""51""[label=""cfg_false""];\n	""37"" -> ""18""[label=""cfg_true""];\n	""37"" -> ""8""[label=""cfg_false""];\n	""38"" -> ""47""[label=""cfg_next""];\n	""39"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""52""[label=""cfg_next""];\n	""41"" -> ""38""[label=""cfg_next""];\n	""42"" -> ""19""[label=""cfg_next""];\n	""43"" -> ""21""[label=""cfg_next""];\n	""44"" -> ""12""[label=""cfg_next""];\n	""45"" -> ""42""[label=""cfg_next""];\n	""46"" -> ""43""[label=""cfg_next""];\n	""47"" -> ""44""[label=""cfg_next""];\n	""48"" -> ""26""[label=""cfg_next""];\n	""49"" -> ""46""[label=""cfg_next""];\n	""5"" -> ""27""[label=""cfg_next""];\n	""50"" -> ""25""[label=""cfg_next""];\n	""51"" -> ""45""[label=""cfg_next""];\n	""52"" -> ""15""[label=""cfg_next""];\n	""53"" -> ""6""[label=""cfg_next""];\n	""54"" -> ""2""[label=""cfg_next""];\n	""55"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""37""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""29""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.PropertyIterator.getLength(),Method,* Computes length for the current pointer - ignores any exceptions.\n     * @return length,private int getLength() {\n    int length;\n    try {\n        // TBD: cache length\n        length = propertyNodePointer.getLength();\n    } catch (final Throwable t) {\n        propertyNodePointer.handle(t);\n        length = 0;\n    }\n    return length;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""2"" [label=""$stack4 := @caughtexception""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer>""];\n	""4"" [label=""goto""];\n	""5"" [label=""length = 0""];\n	""6"" [label=""length = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getLength()>()""];\n	""7"" [label=""return length""];\n	""8"" [label=""t = $stack4""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""10"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void handle(java.lang.Throwable)>(t)""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.beans.PropertyIterator.<init>(PropertyOwnerPointer,String,boolean,NodePointer)",Constructor,* Create a new PropertyIterator.\n     * @param pointer owning pointer\n     * @param name property name\n     * @param reverse iteration order\n     * @param startWith beginning pointer,"public PropertyIterator(final PropertyOwnerPointer pointer, final String name, final boolean reverse, NodePointer startWith) {\n    propertyNodePointer = (PropertyPointer) pointer.getPropertyPointer().clone();\n    this.name = name;\n    this.reverse = reverse;\n    this.includeStart = true;\n    if (reverse) {\n        this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;\n        this.startIndex = -1;\n    }\n    if (startWith != null) {\n        while (startWith != null && startWith.getImmediateParentPointer() != pointer) {\n            startWith = startWith.getImmediateParentPointer();\n        }\n        if (startWith == null) {\n            throw new JXPathException(""PropertyIerator startWith parameter is "" + ""not a child of the supplied parent"");\n        }\n        this.startPropertyIndex = ((PropertyPointer) startWith).getPropertyIndex();\n        this.startIndex = startWith.getIndex();\n        if (this.startIndex == NodePointer.WHOLE_COLLECTION) {\n            this.startIndex = 0;\n        }\n        this.includeStart = false;\n        if (reverse && startIndex == -1) {\n            this.includeStart = true;\n        }\n    }\n}","void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_init {\n	""1"" [label=""$stack10 = virtualinvoke startWith.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex>""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.JXPathException""];\n	""5"" [label=""$stack14 = virtualinvoke startWith.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""6"" [label=""$stack5 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer()>()""];\n	""7"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object clone()>()""];\n	""8"" [label=""$stack7 = (org.apache.commons.jxpath.ri.model.beans.PropertyPointer) $stack6""];\n	""9"" [label=""$stack8 = (org.apache.commons.jxpath.ri.model.beans.PropertyPointer) startWith""];\n	""10"" [label=""$stack9 = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getPropertyIndex()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack11 != -2147483648""];\n	""13"" [label=""if $stack12 != -1""];\n	""14"" [label=""if $stack14 == pointer""];\n	""15"" [label=""if reverse == 0""];\n	""16"" [label=""if reverse == 0""];\n	""17"" [label=""if startWith != null""];\n	""18"" [label=""if startWith == null""];\n	""19"" [label=""if startWith == null""];\n	""20"" [label=""name := @parameter1: java.lang.String""];\n	""21"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""22"" [label=""return""];\n	""23"" [label=""reverse := @parameter2: boolean""];\n	""24"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""PropertyIerator startWith parameter is not a child of the supplied parent\"")""];\n	""25"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""26"" [label=""startWith := @parameter3: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""27"" [label=""startWith = virtualinvoke startWith.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""28"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean empty> = 0""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart> = 0""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart> = 0""];\n	""32"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart> = 1""];\n	""33"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean includeStart> = 1""];\n	""34"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean reverse> = reverse""];\n	""35"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: boolean targetReady> = 0""];\n	""36"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int position> = 0""];\n	""37"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = $stack10""];\n	""38"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = -1""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = 0""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startIndex> = 0""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex> = $stack9""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: int startPropertyIndex> = -2147483648""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: java.lang.String name> = name""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: org.apache.commons.jxpath.ri.model.beans.PropertyPointer propertyNodePointer> = $stack7""];\n	""45"" [label=""throw $stack13""];\n	""1"" -> ""37""[label=""cfg_next""];\n	""10"" -> ""41""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_goto""];\n	""12"" -> ""31""[label=""cfg_true""];\n	""12"" -> ""40""[label=""cfg_false""];\n	""13"" -> ""22""[label=""cfg_true""];\n	""13"" -> ""33""[label=""cfg_false""];\n	""14"" -> ""17""[label=""cfg_true""];\n	""14"" -> ""27""[label=""cfg_false""];\n	""15"" -> ""18""[label=""cfg_true""];\n	""15"" -> ""42""[label=""cfg_false""];\n	""16"" -> ""22""[label=""cfg_true""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""4""[label=""cfg_false""];\n	""17"" -> ""9""[label=""cfg_true""];\n	""18"" -> ""19""[label=""cfg_false""];\n	""18"" -> ""22""[label=""cfg_true""];\n	""19"" -> ""17""[label=""cfg_true""];\n	""19"" -> ""5""[label=""cfg_false""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""23"" -> ""26""[label=""cfg_next""];\n	""24"" -> ""45""[label=""cfg_next""];\n	""25"" -> ""29""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""11""[label=""cfg_next""];\n	""28"" -> ""21""[label=""cfg_next""];\n	""29"" -> ""39""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""30"" -> ""6""[label=""cfg_next""];\n	""31"" -> ""16""[label=""cfg_next""];\n	""32"" -> ""15""[label=""cfg_next""];\n	""33"" -> ""22""[label=""cfg_next""];\n	""34"" -> ""32""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""30""[label=""cfg_next""];\n	""37"" -> ""2""[label=""cfg_next""];\n	""38"" -> ""18""[label=""cfg_next""];\n	""39"" -> ""35""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_next""];\n	""40"" -> ""31""[label=""cfg_next""];\n	""41"" -> ""1""[label=""cfg_next""];\n	""42"" -> ""38""[label=""cfg_next""];\n	""43"" -> ""34""[label=""cfg_next""];\n	""44"" -> ""43""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""44""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.childIterator(NodeTest,boolean,NodePointer)",Method,No Comment,"@Override\npublic NodeIterator childIterator(final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    if (test == null) {\n        return createNodeIterator(null, reverse, startWith);\n    }\n    if (test instanceof NodeNameTest) {\n        final NodeNameTest nodeNameTest = (NodeNameTest) test;\n        final QName testName = nodeNameTest.getNodeName();\n        if (isValidProperty(testName)) {\n            return createNodeIterator(nodeNameTest.isWildcard() ? null : testName.toString(), reverse, startWith);\n        }\n        return null;\n    }\n    return test instanceof NodeTypeTest && ((NodeTypeTest) test).getNodeType() == Compiler.NODE_TYPE_NODE ? createNodeIterator(null, reverse, startWith) : null;\n}","org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_childIterator {\n	""1"" [label=""$stack10 = null""];\n	""2"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodeIterator createNodeIterator(java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(null, reverse, startWith)""];\n	""3"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: boolean isValidProperty(org.apache.commons.jxpath.ri.QName)>(testName)""];\n	""4"" [label=""$stack12 = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: boolean isWildcard()>()""];\n	""5"" [label=""$stack13 = null""];\n	""6"" [label=""$stack13 = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""7"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodeIterator createNodeIterator(java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>($stack13, reverse, startWith)""];\n	""8"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodeIterator createNodeIterator(java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(null, reverse, startWith)""];\n	""9"" [label=""$stack6 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""10"" [label=""$stack7 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""11"" [label=""$stack8 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) test""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack11 == 0""];\n	""16"" [label=""if $stack12 == 0""];\n	""17"" [label=""if $stack6 == 0""];\n	""18"" [label=""if $stack7 == 0""];\n	""19"" [label=""if $stack9 != 1""];\n	""20"" [label=""if test != null""];\n	""21"" [label=""nodeNameTest = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) test""];\n	""22"" [label=""return $stack10""];\n	""23"" [label=""return $stack14""];\n	""24"" [label=""return $stack15""];\n	""25"" [label=""return null""];\n	""26"" [label=""reverse := @parameter1: boolean""];\n	""27"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""28"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""29"" [label=""testName = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""30"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""1"" -> ""22""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_goto""];\n	""14"" -> ""22""[label=""cfg_goto""];\n	""15"" -> ""25""[label=""cfg_true""];\n	""15"" -> ""4""[label=""cfg_false""];\n	""16"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""6""[label=""cfg_true""];\n	""17"" -> ""10""[label=""cfg_true""];\n	""17"" -> ""21""[label=""cfg_false""];\n	""18"" -> ""1""[label=""cfg_true""];\n	""18"" -> ""11""[label=""cfg_false""];\n	""19"" -> ""1""[label=""cfg_true""];\n	""19"" -> ""2""[label=""cfg_false""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""8""[label=""cfg_false""];\n	""20"" -> ""9""[label=""cfg_true""];\n	""21"" -> ""29""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""20""[label=""cfg_next""];\n	""28"" -> ""26""[label=""cfg_next""];\n	""29"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""30"" -> ""28""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""23""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.createNodeIterator(String,boolean,NodePointer)",Method,* Create a NodeIterator.\n     * @param property property name\n     * @param reverse whether to iterate in reverse\n     * @param startWith first pointer to return\n     * @return NodeIterator,"public NodeIterator createNodeIterator(final String property, final boolean reverse, final NodePointer startWith) {\n    return new PropertyIterator(this, property, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator createNodeIterator(java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_createNodeIterator {\n	""1"" [label=""$stack4 = new org.apache.commons.jxpath.ri.model.beans.PropertyIterator""];\n	""2"" [label=""property := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack4""];\n	""4"" [label=""reverse := @parameter1: boolean""];\n	""5"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.model.beans.PropertyIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,java.lang.String,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(this, property, reverse, startWith)""];\n	""6"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.attributeIterator(QName),Method,No Comment,"@Override\npublic NodeIterator attributeIterator(final QName name) {\n    return new BeanAttributeIterator(this, name);\n}",org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator""];\n	""2"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.beans.BeanAttributeIterator: void <init>(org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer,org.apache.commons.jxpath.ri.QName)>(this, name)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.setIndex(int),Method,No Comment,@Override\npublic void setIndex(final int index) {\n    if (this.index != index) {\n        super.setIndex(index);\n        value = UNINITIALIZED;\n    }\n},void setIndex(int),"digraph cfg_setIndex {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: int index>""];\n	""2"" [label=""$stack3 = <org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object UNINITIALIZED>""];\n	""3"" [label=""if $stack2 == index""];\n	""4"" [label=""index := @parameter0: int""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void setIndex(int)>(index)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value> = $stack3""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.getImmediateNode(),Method,No Comment,"@Override\npublic Object getImmediateNode() {\n    if (value == UNINITIALIZED) {\n        value = index == WHOLE_COLLECTION ? ValueUtils.getValue(getBaseValue()) : ValueUtils.getValue(getBaseValue(), index);\n    }\n    return value;\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = <org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object UNINITIALIZED>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: int index>""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: int index>""];\n	""6"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object getBaseValue()>()""];\n	""7"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>($stack8)""];\n	""8"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>($stack6, $stack5)""];\n	""9"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object getBaseValue()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack2 != $stack1""];\n	""12"" [label=""if $stack4 != -2147483648""];\n	""13"" [label=""return $stack3""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value> = $stack7""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_goto""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.getName(),Abstract Method,No Comment,@Override\npublic abstract QName getName();,org.apache.commons.jxpath.ri.QName getName(),digraph cfg_getName {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.isValidProperty(QName),Method,* Learn whether {@code name} is a valid child name for this PropertyOwnerPointer.\n     * @param name the QName to test\n     * @return {@code true} if {@code QName} is a valid property name.\n     * @since JXPath 1.3,public boolean isValidProperty(final QName name) {\n    return isDefaultNamespace(name.getPrefix());\n},boolean isValidProperty(org.apache.commons.jxpath.ri.QName),"digraph cfg_isValidProperty {\n	""1"" [label=""$stack2 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: boolean isDefaultNamespace(java.lang.String)>($stack2)""];\n	""3"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.setValue(Object),Method,"* Throws an exception if you try to change the root element, otherwise\n     * forwards the call to the parent pointer.\n     * @param value to set","@Override\npublic void setValue(final Object value) {\n    this.value = value;\n    if (parent != null) {\n        if (parent.isContainer()) {\n            parent.setValue(value);\n        } else {\n            if (index == WHOLE_COLLECTION) {\n                throw new UnsupportedOperationException(""Cannot setValue of an object that is not "" + ""some other object's property"");\n            }\n            throw new JXPathInvalidAccessException(""The specified collection element does not exist: "" + this);\n        }\n    } else {\n        throw new UnsupportedOperationException(""Cannot replace the root object"");\n    }\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""3"" [label=""$stack12 = new java.lang.UnsupportedOperationException""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""6"" [label=""$stack3 = new java.lang.UnsupportedOperationException""];\n	""7"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""8"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isContainer()>()""];\n	""9"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: int index>""];\n	""10"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""11"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""The specified collection element does not exist: \"")""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this)""];\n	""13"" [label=""goto""];\n	""14"" [label=""if $stack2 == null""];\n	""15"" [label=""if $stack5 == 0""];\n	""16"" [label=""if $stack6 != -2147483648""];\n	""17"" [label=""return""];\n	""18"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String)>($stack10)""];\n	""19"" [label=""specialinvoke $stack12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot setValue of an object that is not some other object\'s property\"")""];\n	""20"" [label=""specialinvoke $stack3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot replace the root object\"")""];\n	""21"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value> = value""];\n	""24"" [label=""throw $stack11""];\n	""25"" [label=""throw $stack12""];\n	""26"" [label=""throw $stack3""];\n	""27"" [label=""value := @parameter0: java.lang.Object""];\n	""28"" [label=""virtualinvoke $stack13.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_goto""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""7""[label=""cfg_false""];\n	""15"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""9""[label=""cfg_true""];\n	""16"" -> ""2""[label=""cfg_true""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""18"" -> ""24""[label=""cfg_next""];\n	""19"" -> ""25""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_next""];\n	""21"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""27""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""27"" -> ""23""[label=""cfg_next""];\n	""28"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""20""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.remove(),Method,"* If this is a root node pointer, throws an exception; otherwise\n     * forwards the call to the parent node.","@Override\npublic void remove() {\n    this.value = null;\n    if (parent != null) {\n        parent.remove();\n    } else {\n        throw new UnsupportedOperationException(""Cannot remove an object that is not "" + ""some other object's property or a collection element"");\n    }\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == null""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot remove an object that is not some other object\'s property or a collection element\"")""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value> = null""];\n	""10"" [label=""throw $stack2""];\n	""11"" [label=""virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: void remove()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.getPropertyPointer(),Abstract Method,* Gets a PropertyPointer for this PropertyOwnerPointer.\n     * @return PropertyPointer,public abstract PropertyPointer getPropertyPointer();,org.apache.commons.jxpath.ri.model.beans.PropertyPointer getPropertyPointer(),digraph cfg_getPropertyPointer {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.isDynamicPropertyDeclarationSupported(),Method,"* Learn whether dynamic property declaration is supported.\n     * @return true if the property owner can set a property ""does not exist"".\n     *         A good example is a Map. You can always assign a value to any\n     *         key even if it has never been ""declared"".",public boolean isDynamicPropertyDeclarationSupported() {\n    return false;\n},boolean isDynamicPropertyDeclarationSupported(),"digraph cfg_isDynamicPropertyDeclarationSupported {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    final int r = pointer1.getName().toString().compareTo(pointer2.getName().toString());\n    return r == 0 ? pointer1.getIndex() - pointer2.getIndex() : r;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""$stack10 = $stack8 - $stack9""];\n	""2"" [label=""$stack10 = r""];\n	""3"" [label=""$stack4 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""4"" [label=""$stack5 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""6"" [label=""$stack7 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""7"" [label=""$stack8 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""8"" [label=""$stack9 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""9"" [label=""goto""];\n	""10"" [label=""if r != 0""];\n	""11"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""12"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""13"" [label=""r = virtualinvoke $stack7.<java.lang.String: int compareTo(java.lang.String)>($stack6)""];\n	""14"" [label=""return $stack10""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_goto""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.<init>(NodePointer,Locale)",Constructor,* Create a new PropertyOwnerPointer.\n     * @param parent parent pointer\n     * @param locale Locale,"protected PropertyOwnerPointer(final NodePointer parent, final Locale locale) {\n    super(parent, locale);\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""$stack3 = <org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object UNINITIALIZED>""];\n	""2"" [label=""locale := @parameter1: java.util.Locale""];\n	""3"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(parent, locale)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value> = $stack3""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer.<init>(NodePointer),Constructor,* Create a new PropertyOwnerPointer.\n     * @param parent pointer,protected PropertyOwnerPointer(final NodePointer parent) {\n    super(parent);\n},void <init>(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_init {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object UNINITIALIZED>""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyOwnerPointer: java.lang.Object value> = $stack2""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return COLLECTION_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 10""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n    return ValueUtils.isCollection(bean) ? new CollectionPointer(bean, locale) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(bean)""];\n	""2"" [label=""$stack5 = new org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""3"" [label=""$stack5 = null""];\n	""4"" [label=""bean := @parameter1: java.lang.Object""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""locale := @parameter2: java.util.Locale""];\n	""8"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: void <init>(java.lang.Object,java.util.Locale)>(bean, locale)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    return ValueUtils.isCollection(bean) ? new CollectionPointer(parent, bean) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(bean)""];\n	""2"" [label=""$stack5 = new org.apache.commons.jxpath.ri.model.beans.CollectionPointer""];\n	""3"" [label=""$stack5 = null""];\n	""4"" [label=""bean := @parameter2: java.lang.Object""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""8"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.model.beans.CollectionPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object)>(parent, bean)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.CollectionPointerFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getPropertyIndex(),Method,* Gets the property index.\n     * @return int index,public int getPropertyIndex() {\n    return propertyIndex;\n},int getPropertyIndex(),"digraph cfg_getPropertyIndex {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int propertyIndex>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.setPropertyIndex(int),Method,* Sets the property index.\n     * @param index property index,public void setPropertyIndex(final int index) {\n    if (propertyIndex != index) {\n        propertyIndex = index;\n        setIndex(WHOLE_COLLECTION);\n    }\n},void setPropertyIndex(int),"digraph cfg_setPropertyIndex {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int propertyIndex>""];\n	""2"" [label=""if $stack2 == index""];\n	""3"" [label=""index := @parameter0: int""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int propertyIndex> = index""];\n	""7"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>(-2147483648)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_true""];\n	""2"" -> ""6""[label=""cfg_false""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getBean(),Method,* Gets the parent bean.\n     * @return Object,public Object getBean() {\n    if (bean == null) {\n        bean = getImmediateParentPointer().getNode();\n    }\n    return bean;\n},java.lang.Object getBean(),"digraph cfg_getBean {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object bean>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object bean>""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""5"" [label=""if $stack1 != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object bean> = $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getName(),Method,No Comment,"@Override\npublic QName getName() {\n    return new QName(null, getPropertyName());\n}",org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String getPropertyName()>()""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(null, $stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getPropertyName(),Abstract Method,* Gets the property name.\n     * @return String property name.,public abstract String getPropertyName();,java.lang.String getPropertyName(),digraph cfg_getPropertyName {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.setPropertyName(String),Abstract Method,* Sets the property name.\n     * @param propertyName property name to set.,public abstract void setPropertyName(String propertyName);,void setPropertyName(java.lang.String),digraph cfg_setPropertyName {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getPropertyCount(),Abstract Method,* Count the number of properties represented.\n     * @return int,public abstract int getPropertyCount();,int getPropertyCount(),digraph cfg_getPropertyCount {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getPropertyNames(),Abstract Method,* Gets the names of the included properties.\n     * @return String[],public abstract String[] getPropertyNames();,java.lang.String[] getPropertyNames(),digraph cfg_getPropertyNames {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.isActualProperty(),Abstract Method,* Learn whether this pointer references an actual property.\n     * @return true if actual,protected abstract boolean isActualProperty();,boolean isActualProperty(),digraph cfg_isActualProperty {\n}\n,"protected , abstract "
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    if (!isActualProperty()) {\n        return false;\n    }\n    return super.isActual();\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: boolean isActualProperty()>()""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""3"" [label=""if $stack1 != 0""];\n	""4"" [label=""return $stack2""];\n	""5"" [label=""return 0""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""5""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getImmediateNode(),Method,No Comment,"@Override\npublic Object getImmediateNode() {\n    if (value == UNINITIALIZED) {\n        value = index == WHOLE_COLLECTION ? ValueUtils.getValue(getBaseValue()) : ValueUtils.getValue(getBaseValue(), index);\n    }\n    return value;\n}",java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = <org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object value>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object value>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""6"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getBaseValue()>()""];\n	""7"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object)>($stack8)""];\n	""8"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.Object getValue(java.lang.Object,int)>($stack6, $stack5)""];\n	""9"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getBaseValue()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack2 != $stack1""];\n	""12"" [label=""if $stack4 != -2147483648""];\n	""13"" [label=""return $stack3""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object value> = $stack7""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_goto""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    final Object value = getBaseValue();\n    return value != null && ValueUtils.isCollection(value);\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: boolean isCollection(java.lang.Object)>(value)""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if value == null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""9"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getBaseValue()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    final Object value = getNode();\n    return value == null || JXPathIntrospector.getBeanInfo(value.getClass()).isAtomic();\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack2 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack2)""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isAtomic()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if value == null""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""11"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getNode()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getLength(),Method,"* If the property contains a collection, then the length of that\n     * collection, otherwise - 1.\n     * @return int length",@Override\npublic int getLength() {\n    final Object baseValue = getBaseValue();\n    return baseValue == null ? 1 : ValueUtils.getLength(baseValue);\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""$stack2 = 1""];\n	""2"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: int getLength(java.lang.Object)>(baseValue)""];\n	""3"" [label=""baseValue = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getBaseValue()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""if baseValue != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_false""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.getImmediateValuePointer(),Method,* Returns a NodePointer that can be used to access the currently\n     * selected property value.\n     * @return NodePointer,"@Override\npublic NodePointer getImmediateValuePointer() {\n    return newChildNodePointer((NodePointer) clone(), getName(), getImmediateNode());\n}",org.apache.commons.jxpath.ri.model.NodePointer getImmediateValuePointer(),"digraph cfg_getImmediateValuePointer {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object clone()>()""];\n	""2"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getImmediateNode()>()""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack1""];\n	""5"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer newChildNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)>($stack4, $stack3, $stack2)""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createPath(JXPathContext),Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context) {\n    if (getImmediateNode() == null) {\n        final AbstractFactory factory = getAbstractFactory(context);\n        final int inx = index == WHOLE_COLLECTION ? 0 : index;\n        final boolean success = factory.createObject(context, this, getBean(), getPropertyName(), inx);\n        if (!success) {\n            throw new JXPathAbstractFactoryException(""Factory "" + factory + "" could not create an object for path: "" + asPath());\n        }\n    }\n    return this;\n}",org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext),"digraph cfg_createPath {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory \"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(factory)""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String asPath()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" could not create an object for path: \"")""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12)""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack16 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""8"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getImmediateNode()>()""];\n	""9"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""10"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String getPropertyName()>()""];\n	""11"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object getBean()>()""];\n	""12"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""13"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""14"" [label=""factory = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.AbstractFactory getAbstractFactory(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack5 != null""];\n	""17"" [label=""if $stack6 != -2147483648""];\n	""18"" [label=""if success != 0""];\n	""19"" [label=""inx = 0""];\n	""20"" [label=""inx = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""21"" [label=""return this""];\n	""22"" [label=""specialinvoke $stack16.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack15)""];\n	""23"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""24"" [label=""success = virtualinvoke factory.<org.apache.commons.jxpath.AbstractFactory: boolean createObject(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.Pointer,java.lang.Object,java.lang.String,int)>(context, this, $stack8, $stack7, inx)""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""26"" [label=""throw $stack16""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""24""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_goto""];\n	""16"" -> ""14""[label=""cfg_false""];\n	""16"" -> ""21""[label=""cfg_true""];\n	""17"" -> ""19""[label=""cfg_false""];\n	""17"" -> ""20""[label=""cfg_true""];\n	""18"" -> ""21""[label=""cfg_true""];\n	""18"" -> ""7""[label=""cfg_false""];\n	""19"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""26""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""18""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createPath(JXPathContext,Object)",Method,No Comment,"@Override\npublic NodePointer createPath(final JXPathContext context, final Object value) {\n    // If neccessary, expand collection\n    if (index != WHOLE_COLLECTION && index >= getLength()) {\n        createPath(context);\n    }\n    setValue(value);\n    return this;\n}","org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_createPath {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""3"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getLength()>()""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""if $stack3 == -2147483648""];\n	""6"" [label=""if $stack4 < $stack5""];\n	""7"" [label=""return this""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""9"" [label=""value := @parameter1: java.lang.Object""];\n	""10"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""11"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createChild(JXPathContext,QName,int,Object)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    final PropertyPointer prop = (PropertyPointer) clone();\n    if (name != null) {\n        prop.setPropertyName(name.toString());\n    }\n    prop.setIndex(index);\n    return prop.createPath(context, value);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object clone()>()""];\n	""2"" [label=""$stack7 = virtualinvoke prop.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(context, value)""];\n	""3"" [label=""$stack8 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""if name == null""];\n	""6"" [label=""index := @parameter2: int""];\n	""7"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""8"" [label=""prop = (org.apache.commons.jxpath.ri.model.beans.PropertyPointer) $stack6""];\n	""9"" [label=""return $stack7""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""11"" [label=""value := @parameter3: java.lang.Object""];\n	""12"" [label=""virtualinvoke prop.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>(index)""];\n	""13"" [label=""virtualinvoke prop.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyName(java.lang.String)>($stack8)""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyPointer.createChild(JXPathContext,QName,int)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index) {\n    final PropertyPointer prop = (PropertyPointer) clone();\n    if (name != null) {\n        prop.setPropertyName(name.toString());\n    }\n    prop.setIndex(index);\n    return prop.createPath(context);\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object clone()>()""];\n	""2"" [label=""$stack6 = virtualinvoke prop.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""3"" [label=""$stack7 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""5"" [label=""if name == null""];\n	""6"" [label=""index := @parameter2: int""];\n	""7"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""8"" [label=""prop = (org.apache.commons.jxpath.ri.model.beans.PropertyPointer) $stack5""];\n	""9"" [label=""return $stack6""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""11"" [label=""virtualinvoke prop.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setIndex(int)>(index)""];\n	""12"" [label=""virtualinvoke prop.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: void setPropertyName(java.lang.String)>($stack7)""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return getImmediateParentPointer().hashCode() + propertyIndex + index;\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getImmediateParentPointer()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.Object: int hashCode()>()""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int propertyIndex>""];\n	""4"" [label=""$stack4 = $stack2 + $stack3""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""6"" [label=""$stack6 = $stack4 + $stack5""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof PropertyPointer)) {\n        return false;\n    }\n    final PropertyPointer other = (PropertyPointer) object;\n    if (parent != other.parent && (parent == null || !parent.equals(other.parent))) {\n        return false;\n    }\n    if (getPropertyIndex() != other.getPropertyIndex() || !getPropertyName().equals(other.getPropertyName())) {\n        return false;\n    }\n    final int iThis = index == WHOLE_COLLECTION ? 0 : index;\n    final int iOther = other.index == WHOLE_COLLECTION ? 0 : other.index;\n    return iThis == iOther;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack10 = virtualinvoke other.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String getPropertyName()>()""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.String getPropertyName()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>($stack10)""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""5"" [label=""$stack14 = other.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""6"" [label=""$stack15 = 0""];\n	""7"" [label=""$stack15 = 1""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""9"" [label=""$stack17 = other.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""11"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.Object: boolean equals(java.lang.Object)>($stack17)""];\n	""12"" [label=""$stack5 = object instanceof org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""13"" [label=""$stack6 = other.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""14"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""15"" [label=""$stack8 = virtualinvoke other.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getPropertyIndex()>()""];\n	""16"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int getPropertyIndex()>()""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""iOther = 0""];\n	""21"" [label=""iOther = other.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""22"" [label=""iThis = 0""];\n	""23"" [label=""iThis = this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int index>""];\n	""24"" [label=""if $stack12 != 0""];\n	""25"" [label=""if $stack13 != -2147483648""];\n	""26"" [label=""if $stack14 != -2147483648""];\n	""27"" [label=""if $stack16 == null""];\n	""28"" [label=""if $stack19 != 0""];\n	""29"" [label=""if $stack5 != 0""];\n	""30"" [label=""if $stack7 == $stack6""];\n	""31"" [label=""if $stack9 != $stack8""];\n	""32"" [label=""if iThis != iOther""];\n	""33"" [label=""if object != this""];\n	""34"" [label=""object := @parameter0: java.lang.Object""];\n	""35"" [label=""other = (org.apache.commons.jxpath.ri.model.beans.PropertyPointer) object""];\n	""36"" [label=""return $stack15""];\n	""37"" [label=""return 0""];\n	""38"" [label=""return 0""];\n	""39"" [label=""return 0""];\n	""40"" [label=""return 1""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""29""[label=""cfg_next""];\n	""13"" -> ""30""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""31""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_goto""];\n	""18"" -> ""32""[label=""cfg_goto""];\n	""19"" -> ""36""[label=""cfg_goto""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""32""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""24"" -> ""39""[label=""cfg_false""];\n	""24"" -> ""4""[label=""cfg_true""];\n	""25"" -> ""22""[label=""cfg_false""];\n	""25"" -> ""23""[label=""cfg_true""];\n	""26"" -> ""20""[label=""cfg_false""];\n	""26"" -> ""21""[label=""cfg_true""];\n	""27"" -> ""10""[label=""cfg_false""];\n	""27"" -> ""38""[label=""cfg_true""];\n	""28"" -> ""16""[label=""cfg_true""];\n	""28"" -> ""38""[label=""cfg_false""];\n	""29"" -> ""35""[label=""cfg_true""];\n	""29"" -> ""37""[label=""cfg_false""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""30"" -> ""16""[label=""cfg_true""];\n	""30"" -> ""8""[label=""cfg_false""];\n	""31"" -> ""2""[label=""cfg_false""];\n	""31"" -> ""39""[label=""cfg_true""];\n	""32"" -> ""6""[label=""cfg_true""];\n	""32"" -> ""7""[label=""cfg_false""];\n	""33"" -> ""12""[label=""cfg_true""];\n	""33"" -> ""40""[label=""cfg_false""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""41"" -> ""34""[label=""cfg_next""];\n	""5"" -> ""26""[label=""cfg_next""];\n	""6"" -> ""36""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.PropertyPointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    return getValuePointer().compareChildNodePointers(pointer1, pointer2);\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)>(pointer1, pointer2)""];\n	""3"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""4"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.PropertyPointer.<init>(NodePointer),Constructor,"* Takes a javabean, a descriptor of a property of that object and\n     * an offset within that property (starting with 0).\n     * @param parent parent pointer",public PropertyPointer(final NodePointer parent) {\n    super(parent);\n},void <init>(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_init {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object UNINITIALIZED>""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.PropertyPointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: int propertyIndex> = -2147483648""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.beans.PropertyPointer: java.lang.Object value> = $stack2""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return BEAN_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 900""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n    final JXPathBeanInfo bi = JXPathIntrospector.getBeanInfo(bean.getClass());\n    return new BeanPointer(name, bean, bi, locale);\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack5 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""3"" [label=""bean := @parameter1: java.lang.Object""];\n	""4"" [label=""bi = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack5)""];\n	""5"" [label=""locale := @parameter2: java.util.Locale""];\n	""6"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: void <init>(org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.JXPathBeanInfo,java.util.Locale)>(name, bean, bi, locale)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    if (bean == null) {\n        return new NullPointer(parent, name);\n    }\n    final JXPathBeanInfo bi = JXPathIntrospector.getBeanInfo(bean.getClass());\n    return new BeanPointer(parent, name, bean, bi);\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack5 = virtualinvoke bean.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.beans.BeanPointer""];\n	""3"" [label=""$stack7 = new org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""4"" [label=""bean := @parameter2: java.lang.Object""];\n	""5"" [label=""bi = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class)>($stack5)""];\n	""6"" [label=""if bean != null""];\n	""7"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""8"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""9"" [label=""return $stack6""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.beans.BeanPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object,org.apache.commons.jxpath.JXPathBeanInfo)>(parent, name, bean, bi)""];\n	""12"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.model.beans.NullPointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(parent, name)""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.beans.BeanPointerFactory""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return new QName(prefix);\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String)>($stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return null;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return getNamespaceURI();\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String getNamespaceURI()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.getNamespaceURI(),Method,No Comment,@Override\npublic String getNamespaceURI() {\n    if (namespaceURI == null) {\n        namespaceURI = parent.getNamespaceURI(prefix);\n    }\n    return namespaceURI;\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String namespaceURI>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String namespaceURI>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>($stack3)""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String namespaceURI> = $stack5""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.setValue(Object),Method,* Throws UnsupportedOperationException.\n     * @param value Object,"@Override\npublic void setValue(final Object value) {\n    throw new UnsupportedOperationException(""Cannot modify DOM trees"");\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot modify DOM trees\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""4"" [label=""throw $stack2""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.testNode(NodeTest),Method,No Comment,@Override\npublic boolean testNode(final NodeTest nodeTest) {\n    return nodeTest == null || nodeTest instanceof NodeTypeTest && ((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE;\n},boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack2 = nodeTest instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) nodeTest""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 == 0""];\n	""8"" [label=""if $stack5 != 1""];\n	""9"" [label=""if nodeTest == null""];\n	""10"" [label=""nodeTest := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""11"" [label=""return $stack3""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n        if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n            buffer.append('/');\n        }\n    }\n    buffer.append(""namespace::"");\n    buffer.append(prefix);\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = $stack9 - 1""];\n	""2"" [label=""$stack11 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack10)""];\n	""3"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix>""];\n	""6"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""9"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""10"" [label=""$stack9 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""11"" [label=""buffer = $stack2""];\n	""12"" [label=""if $stack11 == 47""];\n	""13"" [label=""if $stack3 == null""];\n	""14"" [label=""if $stack8 == 0""];\n	""15"" [label=""return $stack5""];\n	""16"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""namespace::\"")""];\n	""20"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""21"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_false""];\n	""12"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_false""];\n	""14"" -> ""10""[label=""cfg_false""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return prefix.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.String: int hashCode()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.NamespacePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof NamespacePointer)) {\n        return false;\n    }\n    final NamespacePointer other = (NamespacePointer) object;\n    return prefix.equals(other.prefix);\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""2"" [label=""$stack4 = other.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix>""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack4)""];\n	""5"" [label=""if $stack3 != 0""];\n	""6"" [label=""if object != this""];\n	""7"" [label=""object := @parameter0: java.lang.Object""];\n	""8"" [label=""other = (org.apache.commons.jxpath.ri.model.dom.NamespacePointer) object""];\n	""9"" [label=""return $stack6""];\n	""10"" [label=""return 0""];\n	""11"" [label=""return 1""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""1""[label=""cfg_true""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.NamespacePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    // Won't happen - namespaces don't have children\n    return 0;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return 0""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.NamespacePointer.<init>(NodePointer,String)",Constructor,* Create a new NamespacePointer.\n     * @param parent parent pointer\n     * @param prefix associated ns prefix.,"public NamespacePointer(final NodePointer parent, final String prefix) {\n    super(parent);\n    this.prefix = prefix;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)","digraph cfg_init {\n	""1"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""prefix := @parameter1: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix> = prefix""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.NamespacePointer.<init>(NodePointer,String,String)",Constructor,* Create a new NamespacePointer.\n     * @param parent parent pointer\n     * @param prefix associated ns prefix.\n     * @param namespaceURI associated ns URI.,"public NamespacePointer(final NodePointer parent, final String prefix, final String namespaceURI) {\n    super(parent);\n    this.prefix = prefix;\n    this.namespaceURI = namespaceURI;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String,java.lang.String)","digraph cfg_init {\n	""1"" [label=""namespaceURI := @parameter2: java.lang.String""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""prefix := @parameter1: java.lang.String""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String namespaceURI> = namespaceURI""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: java.lang.String prefix> = prefix""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.testNode(NodeTest),Method,No Comment,"@Override\npublic boolean testNode(final NodeTest test) {\n    return testNode(node, test);\n}",boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean testNode(org.w3c.dom.Node,org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack2, test)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.testNode(Node,NodeTest)",Method,* Test a Node.\n     * @param node to test\n     * @param test to execute\n     * @return true if node passes test,"public static boolean testNode(final Node node, final NodeTest test) {\n    if (test == null) {\n        return true;\n    }\n    if (test instanceof NodeNameTest) {\n        if (node.getNodeType() != Node.ELEMENT_NODE) {\n            return false;\n        }\n        final NodeNameTest nodeNameTest = (NodeNameTest) test;\n        final QName testName = nodeNameTest.getNodeName();\n        final String namespaceURI = nodeNameTest.getNamespaceURI();\n        final boolean wildcard = nodeNameTest.isWildcard();\n        final String testPrefix = testName.getPrefix();\n        if (wildcard && testPrefix == null) {\n            return true;\n        }\n        if (wildcard || testName.getName().equals(getLocalName(node))) {\n            final String nodeNS = getNamespaceURI(node);\n            return equalStrings(namespaceURI, nodeNS) || nodeNS == null && equalStrings(testPrefix, getPrefix(node));\n        }\n        return false;\n    }\n    if (test instanceof NodeTypeTest) {\n        final int nodeType = node.getNodeType();\n        switch(((NodeTypeTest) test).getNodeType()) {\n            case Compiler.NODE_TYPE_NODE:\n                return true;\n            case Compiler.NODE_TYPE_TEXT:\n                return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;\n            case Compiler.NODE_TYPE_COMMENT:\n                return nodeType == Node.COMMENT_NODE;\n            case Compiler.NODE_TYPE_PI:\n                return nodeType == Node.PROCESSING_INSTRUCTION_NODE;\n            default:\n                return false;\n        }\n    }\n    if (test instanceof ProcessingInstructionTest && node.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE) {\n        final String testPI = ((ProcessingInstructionTest) test).getTarget();\n        final String nodePI = ((ProcessingInstruction) node).getTarget();\n        return testPI.equals(nodePI);\n    }\n    return false;\n}","boolean testNode(org.w3c.dom.Node,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_testNode {\n	""1"" [label=""$stack10 = test instanceof org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest""];\n	""2"" [label=""$stack11 = interfaceinvoke node.<org.w3c.dom.Node: short getNodeType()>()""];\n	""3"" [label=""$stack12 = (org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest) test""];\n	""4"" [label=""$stack13 = (org.w3c.dom.ProcessingInstruction) node""];\n	""5"" [label=""$stack14 = virtualinvoke nodeNameTest.<java.lang.String: boolean equals(java.lang.Object)>(testName)""];\n	""6"" [label=""$stack15 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) test""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""8"" [label=""$stack17 = 0""];\n	""9"" [label=""$stack17 = 1""];\n	""10"" [label=""$stack18 = 0""];\n	""11"" [label=""$stack18 = 1""];\n	""12"" [label=""$stack19 = 0""];\n	""13"" [label=""$stack19 = 1""];\n	""14"" [label=""$stack20 = interfaceinvoke node.<org.w3c.dom.Node: short getNodeType()>()""];\n	""15"" [label=""$stack21 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean equalStrings(java.lang.String,java.lang.String)>(namespaceURI, nodeNS)""];\n	""16"" [label=""$stack22 = 0""];\n	""17"" [label=""$stack22 = 1""];\n	""18"" [label=""$stack23 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getPrefix(org.w3c.dom.Node)>(node)""];\n	""19"" [label=""$stack24 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean equalStrings(java.lang.String,java.lang.String)>(testPrefix, $stack23)""];\n	""20"" [label=""$stack25 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLocalName(org.w3c.dom.Node)>(node)""];\n	""21"" [label=""$stack26 = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""22"" [label=""$stack27 = virtualinvoke $stack26.<java.lang.String: boolean equals(java.lang.Object)>($stack25)""];\n	""23"" [label=""$stack8 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""24"" [label=""$stack9 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""if $stack10 == 0""];\n	""30"" [label=""if $stack11 != 7""];\n	""31"" [label=""if $stack20 == 1""];\n	""32"" [label=""if $stack21 != 0""];\n	""33"" [label=""if $stack24 == 0""];\n	""34"" [label=""if $stack27 == 0""];\n	""35"" [label=""if $stack8 == 0""];\n	""36"" [label=""if $stack9 == 0""];\n	""37"" [label=""if nodeNS != null""];\n	""38"" [label=""if nodeNameTest != 3""];\n	""39"" [label=""if nodeNameTest != 7""];\n	""40"" [label=""if nodeNameTest != 8""];\n	""41"" [label=""if nodeNameTest == 4""];\n	""42"" [label=""if test != null""];\n	""43"" [label=""if testPrefix != null""];\n	""44"" [label=""if wildcard != 0""];\n	""45"" [label=""if wildcard == 0""];\n	""46"" [label=""namespaceURI = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: java.lang.String getNamespaceURI()>()""];\n	""47"" [label=""node := @parameter0: org.w3c.dom.Node""];\n	""48"" [label=""nodeNS = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getNamespaceURI(org.w3c.dom.Node)>(node)""];\n	""49"" [label=""nodeNameTest = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) test""];\n	""50"" [label=""nodeNameTest = interfaceinvoke node.<org.w3c.dom.Node: short getNodeType()>()""];\n	""51"" [label=""nodeNameTest = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest: java.lang.String getTarget()>()""];\n	""52"" [label=""return $stack14""];\n	""53"" [label=""return $stack17""];\n	""54"" [label=""return $stack18""];\n	""55"" [label=""return $stack19""];\n	""56"" [label=""return $stack22""];\n	""57"" [label=""return 0""];\n	""58"" [label=""return 0""];\n	""59"" [label=""return 0""];\n	""60"" [label=""return 0""];\n	""61"" [label=""return 1""];\n	""62"" [label=""return 1""];\n	""63"" [label=""return 1""];\n	""64"" [label=""switch($stack16) \{     case 1:     case 2:     case 3:     case 4:     default:  \}""];\n	""65"" [label=""test := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""66"" [label=""testName = interfaceinvoke $stack13.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""67"" [label=""testName = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""68"" [label=""testPrefix = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""69"" [label=""wildcard = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: boolean isWildcard()>()""];\n	""1"" -> ""29""[label=""cfg_next""];\n	""10"" -> ""54""[label=""cfg_next""];\n	""11"" -> ""27""[label=""cfg_next""];\n	""12"" -> ""55""[label=""cfg_next""];\n	""13"" -> ""26""[label=""cfg_next""];\n	""14"" -> ""31""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""56""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""33""[label=""cfg_next""];\n	""2"" -> ""30""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""34""[label=""cfg_next""];\n	""23"" -> ""35""[label=""cfg_next""];\n	""24"" -> ""36""[label=""cfg_next""];\n	""25"" -> ""56""[label=""cfg_goto""];\n	""26"" -> ""55""[label=""cfg_goto""];\n	""27"" -> ""54""[label=""cfg_goto""];\n	""28"" -> ""53""[label=""cfg_goto""];\n	""29"" -> ""2""[label=""cfg_false""];\n	""29"" -> ""60""[label=""cfg_true""];\n	""3"" -> ""51""[label=""cfg_next""];\n	""30"" -> ""3""[label=""cfg_false""];\n	""30"" -> ""60""[label=""cfg_true""];\n	""31"" -> ""49""[label=""cfg_true""];\n	""31"" -> ""57""[label=""cfg_false""];\n	""32"" -> ""17""[label=""cfg_true""];\n	""32"" -> ""37""[label=""cfg_false""];\n	""33"" -> ""16""[label=""cfg_true""];\n	""33"" -> ""17""[label=""cfg_false""];\n	""34"" -> ""48""[label=""cfg_false""];\n	""34"" -> ""58""[label=""cfg_true""];\n	""35"" -> ""14""[label=""cfg_false""];\n	""35"" -> ""24""[label=""cfg_true""];\n	""36"" -> ""1""[label=""cfg_true""];\n	""36"" -> ""50""[label=""cfg_false""];\n	""37"" -> ""16""[label=""cfg_true""];\n	""37"" -> ""18""[label=""cfg_false""];\n	""38"" -> ""12""[label=""cfg_true""];\n	""38"" -> ""13""[label=""cfg_false""];\n	""39"" -> ""8""[label=""cfg_true""];\n	""39"" -> ""9""[label=""cfg_false""];\n	""4"" -> ""66""[label=""cfg_next""];\n	""40"" -> ""10""[label=""cfg_true""];\n	""40"" -> ""11""[label=""cfg_false""];\n	""41"" -> ""13""[label=""cfg_true""];\n	""41"" -> ""38""[label=""cfg_false""];\n	""42"" -> ""23""[label=""cfg_true""];\n	""42"" -> ""61""[label=""cfg_false""];\n	""43"" -> ""44""[label=""cfg_true""];\n	""43"" -> ""62""[label=""cfg_false""];\n	""44"" -> ""21""[label=""cfg_false""];\n	""44"" -> ""48""[label=""cfg_true""];\n	""45"" -> ""43""[label=""cfg_false""];\n	""45"" -> ""44""[label=""cfg_true""];\n	""46"" -> ""69""[label=""cfg_next""];\n	""47"" -> ""65""[label=""cfg_next""];\n	""48"" -> ""15""[label=""cfg_next""];\n	""49"" -> ""67""[label=""cfg_next""];\n	""5"" -> ""52""[label=""cfg_next""];\n	""50"" -> ""6""[label=""cfg_next""];\n	""51"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""64"" -> ""39""[label=""cfg_switch""];\n	""64"" -> ""40""[label=""cfg_switch""];\n	""64"" -> ""41""[label=""cfg_switch""];\n	""64"" -> ""59""[label=""cfg_switch""];\n	""64"" -> ""63""[label=""cfg_switch""];\n	""65"" -> ""42""[label=""cfg_next""];\n	""66"" -> ""5""[label=""cfg_next""];\n	""67"" -> ""46""[label=""cfg_next""];\n	""68"" -> ""45""[label=""cfg_next""];\n	""69"" -> ""68""[label=""cfg_next""];\n	""7"" -> ""64""[label=""cfg_next""];\n	""8"" -> ""53""[label=""cfg_next""];\n	""9"" -> ""28""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.equalStrings(String,String)",Method,* Test string equality.\n     * @param s1 String 1\n     * @param s2 String 2\n     * @return true if == or .equals(),"private static boolean equalStrings(String s1, String s2) {\n    if (s1 == s2) {\n        return true;\n    }\n    s1 = s1 == null ? """" : s1.trim();\n    s2 = s2 == null ? """" : s2.trim();\n    return s1.equals(s2);\n}","boolean equalStrings(java.lang.String,java.lang.String)","digraph cfg_equalStrings {\n	""1"" [label=""$stack2 = virtualinvoke s1.<java.lang.String: boolean equals(java.lang.Object)>(s2)""];\n	""2"" [label=""goto""];\n	""3"" [label=""goto""];\n	""4"" [label=""if s1 != null""];\n	""5"" [label=""if s1 != s2""];\n	""6"" [label=""if s2 != null""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""return 1""];\n	""9"" [label=""s1 := @parameter0: java.lang.String""];\n	""10"" [label=""s1 = \""\""""];\n	""11"" [label=""s1 = virtualinvoke s1.<java.lang.String: java.lang.String trim()>()""];\n	""12"" [label=""s2 := @parameter1: java.lang.String""];\n	""13"" [label=""s2 = \""\""""];\n	""14"" [label=""s2 = virtualinvoke s2.<java.lang.String: java.lang.String trim()>()""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_goto""];\n	""3"" -> ""1""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_false""];\n	""4"" -> ""11""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getName(),Method,No Comment,"@Override\npublic QName getName() {\n    String ln = null;\n    String ns = null;\n    final int type = node.getNodeType();\n    if (type == Node.ELEMENT_NODE) {\n        ns = getPrefix(node);\n        ln = getLocalName(node);\n    } else if (type == Node.PROCESSING_INSTRUCTION_NODE) {\n        ln = ((ProcessingInstruction) node).getTarget();\n    }\n    return new QName(ns, ln);\n}",org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack5 = new org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""4"" [label=""$stack7 = (org.w3c.dom.ProcessingInstruction) $stack6""];\n	""5"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""6"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""7"" [label=""goto""];\n	""8"" [label=""if type != 1""];\n	""9"" [label=""if type != 7""];\n	""10"" [label=""ln = interfaceinvoke $stack7.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""11"" [label=""ln = null""];\n	""12"" [label=""ln = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLocalName(org.w3c.dom.Node)>($stack9)""];\n	""13"" [label=""ns = null""];\n	""14"" [label=""ns = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getPrefix(org.w3c.dom.Node)>($stack8)""];\n	""15"" [label=""return $stack5""];\n	""16"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(ns, ln)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""18"" [label=""type = interfaceinvoke $stack4.<org.w3c.dom.Node: short getNodeType()>()""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""11""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_goto""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getNamespaceURI(),Method,No Comment,@Override\npublic String getNamespaceURI() {\n    return getNamespaceURI(node);\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getNamespaceURI(org.w3c.dom.Node)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.childIterator(NodeTest,boolean,NodePointer)",Method,No Comment,"@Override\npublic NodeIterator childIterator(final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    return new DOMNodeIterator(this, test, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_childIterator {\n	""1"" [label=""$stack4 = new org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""2"" [label=""return $stack4""];\n	""3"" [label=""reverse := @parameter1: boolean""];\n	""4"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(this, test, reverse, startWith)""];\n	""5"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.attributeIterator(QName),Method,No Comment,"@Override\npublic NodeIterator attributeIterator(final QName name) {\n    return new DOMAttributeIterator(this, name);\n}",org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator""];\n	""2"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(this, name)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.namespacePointer(String),Method,No Comment,"@Override\npublic NodePointer namespacePointer(final String prefix) {\n    return new NamespacePointer(this, prefix);\n}",org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String),"digraph cfg_namespacePointer {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""2"" [label=""prefix := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>(this, prefix)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.namespaceIterator(),Method,No Comment,@Override\npublic NodeIterator namespaceIterator() {\n    return new DOMNamespaceIterator(this);\n},org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator(),"digraph cfg_namespaceIterator {\n	""1"" [label=""$stack1 = new org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(this)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getNamespaceResolver(),Method,No Comment,@Override\npublic synchronized NamespaceResolver getNamespaceResolver() {\n    if (localNamespaceResolver == null) {\n        localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());\n        localNamespaceResolver.setNamespaceContextPointer(this);\n    }\n    return localNamespaceResolver;\n},org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver(),"digraph cfg_getNamespaceResolver {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver>""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""4"" [label=""$stack4 = new org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver>""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.NamespaceResolver: void <init>(org.apache.commons.jxpath.ri.NamespaceResolver)>($stack3)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver> = $stack4""];\n	""11"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.NamespaceResolver: void setNamespaceContextPointer(org.apache.commons.jxpath.ri.model.NodePointer)>(this)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getNamespaceURI(String),Method,No Comment,"@Override\npublic String getNamespaceURI(final String prefix) {\n    if (prefix == null || prefix.isEmpty()) {\n        return getDefaultNamespaceURI();\n    }\n    if (prefix.equals(""xml"")) {\n        return XML_NAMESPACE_URI;\n    }\n    if (prefix.equals(""xmlns"")) {\n        return XMLNS_NAMESPACE_URI;\n    }\n    String namespace = null;\n    if (namespaces == null) {\n        namespaces = new HashMap();\n    } else {\n        namespace = (String) namespaces.get(prefix);\n    }\n    if (namespace == null) {\n        final String qname = ""xmlns:"" + prefix;\n        Node aNode = node;\n        if (aNode instanceof Document) {\n            aNode = ((Document) aNode).getDocumentElement();\n        }\n        while (aNode != null) {\n            if (aNode.getNodeType() == Node.ELEMENT_NODE) {\n                final Attr attr = ((Element) aNode).getAttributeNode(qname);\n                if (attr != null) {\n                    namespace = attr.getValue();\n                    break;\n                }\n            }\n            aNode = aNode.getParentNode();\n        }\n        if (namespace == null || namespace.isEmpty()) {\n            namespace = UNKNOWN_NAMESPACE;\n        }\n    }\n    namespaces.put(prefix, namespace);\n    if (namespace == UNKNOWN_NAMESPACE) {\n        return null;\n    }\n    // TBD: We are supposed to resolve relative URIs to absolute ones.\n    return namespace;\n}",java.lang.String getNamespaceURI(java.lang.String),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.util.Map namespaces>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.util.Map namespaces>""];\n	""3"" [label=""$stack12 = interfaceinvoke $stack11.<java.util.Map: java.lang.Object get(java.lang.Object)>(prefix)""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.util.Map namespaces>""];\n	""5"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""xmlns:\"")""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix)""];\n	""8"" [label=""$stack17 = aNode instanceof org.w3c.dom.Document""];\n	""9"" [label=""$stack18 = virtualinvoke namespace.<java.lang.String: boolean isEmpty()>()""];\n	""10"" [label=""$stack19 = interfaceinvoke aNode.<org.w3c.dom.Node: short getNodeType()>()""];\n	""11"" [label=""$stack20 = (org.w3c.dom.Element) aNode""];\n	""12"" [label=""$stack21 = (org.w3c.dom.Document) aNode""];\n	""13"" [label=""$stack22 = new java.util.HashMap""];\n	""14"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getDefaultNamespaceURI()>()""];\n	""15"" [label=""$stack7 = virtualinvoke prefix.<java.lang.String: boolean isEmpty()>()""];\n	""16"" [label=""$stack8 = virtualinvoke prefix.<java.lang.String: boolean equals(java.lang.Object)>(\""xml\"")""];\n	""17"" [label=""$stack9 = virtualinvoke prefix.<java.lang.String: boolean equals(java.lang.Object)>(\""xmlns\"")""];\n	""18"" [label=""aNode = interfaceinvoke $stack21.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>()""];\n	""19"" [label=""aNode = interfaceinvoke aNode.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>()""];\n	""20"" [label=""aNode = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""21"" [label=""attr = interfaceinvoke $stack20.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(qname)""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""if $stack10 != null""];\n	""26"" [label=""if $stack17 == 0""];\n	""27"" [label=""if $stack18 == 0""];\n	""28"" [label=""if $stack19 != 1""];\n	""29"" [label=""if $stack7 == 0""];\n	""30"" [label=""if $stack8 == 0""];\n	""31"" [label=""if $stack9 == 0""];\n	""32"" [label=""if aNode == null""];\n	""33"" [label=""if attr == null""];\n	""34"" [label=""if namespace != \""<<unknown namespace>>\""""];\n	""35"" [label=""if namespace != null""];\n	""36"" [label=""if namespace == null""];\n	""37"" [label=""if prefix == null""];\n	""38"" [label=""interfaceinvoke $stack13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(prefix, namespace)""];\n	""39"" [label=""namespace = \""<<unknown namespace>>\""""];\n	""40"" [label=""namespace = (java.lang.String) $stack12""];\n	""41"" [label=""namespace = interfaceinvoke attr.<org.w3c.dom.Attr: java.lang.String getValue()>()""];\n	""42"" [label=""namespace = null""];\n	""43"" [label=""prefix := @parameter0: java.lang.String""];\n	""44"" [label=""qname = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""45"" [label=""return \""http://www.w3.org/2000/xmlns/\""""];\n	""46"" [label=""return \""http://www.w3.org/XML/1998/namespace\""""];\n	""47"" [label=""return $stack6""];\n	""48"" [label=""return namespace""];\n	""49"" [label=""return null""];\n	""50"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""51"" [label=""specialinvoke $stack22.<java.util.HashMap: void <init>()>()""];\n	""52"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""53"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.util.Map namespaces> = $stack22""];\n	""1"" -> ""25""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""51""[label=""cfg_next""];\n	""14"" -> ""47""[label=""cfg_next""];\n	""15"" -> ""29""[label=""cfg_next""];\n	""16"" -> ""30""[label=""cfg_next""];\n	""17"" -> ""31""[label=""cfg_next""];\n	""18"" -> ""32""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""8""[label=""cfg_next""];\n	""21"" -> ""33""[label=""cfg_next""];\n	""22"" -> ""35""[label=""cfg_goto""];\n	""23"" -> ""36""[label=""cfg_goto""];\n	""24"" -> ""32""[label=""cfg_goto""];\n	""25"" -> ""13""[label=""cfg_false""];\n	""25"" -> ""2""[label=""cfg_true""];\n	""26"" -> ""12""[label=""cfg_false""];\n	""26"" -> ""32""[label=""cfg_true""];\n	""27"" -> ""39""[label=""cfg_false""];\n	""27"" -> ""4""[label=""cfg_true""];\n	""28"" -> ""11""[label=""cfg_false""];\n	""28"" -> ""19""[label=""cfg_true""];\n	""29"" -> ""14""[label=""cfg_false""];\n	""29"" -> ""16""[label=""cfg_true""];\n	""3"" -> ""40""[label=""cfg_next""];\n	""30"" -> ""17""[label=""cfg_true""];\n	""30"" -> ""46""[label=""cfg_false""];\n	""31"" -> ""42""[label=""cfg_true""];\n	""31"" -> ""45""[label=""cfg_false""];\n	""32"" -> ""10""[label=""cfg_false""];\n	""32"" -> ""36""[label=""cfg_true""];\n	""33"" -> ""19""[label=""cfg_true""];\n	""33"" -> ""41""[label=""cfg_false""];\n	""34"" -> ""48""[label=""cfg_true""];\n	""34"" -> ""49""[label=""cfg_false""];\n	""35"" -> ""4""[label=""cfg_true""];\n	""35"" -> ""5""[label=""cfg_false""];\n	""36"" -> ""39""[label=""cfg_true""];\n	""36"" -> ""9""[label=""cfg_false""];\n	""37"" -> ""14""[label=""cfg_true""];\n	""37"" -> ""15""[label=""cfg_false""];\n	""38"" -> ""34""[label=""cfg_next""];\n	""39"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""38""[label=""cfg_next""];\n	""40"" -> ""35""[label=""cfg_next""];\n	""41"" -> ""23""[label=""cfg_next""];\n	""42"" -> ""1""[label=""cfg_next""];\n	""43"" -> ""37""[label=""cfg_next""];\n	""44"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""50""[label=""cfg_next""];\n	""50"" -> ""6""[label=""cfg_next""];\n	""51"" -> ""53""[label=""cfg_next""];\n	""52"" -> ""43""[label=""cfg_next""];\n	""53"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""44""[label=""cfg_next""];\n	""8"" -> ""26""[label=""cfg_next""];\n	""9"" -> ""27""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getDefaultNamespaceURI(),Method,No Comment,"@Override\npublic String getDefaultNamespaceURI() {\n    if (defaultNamespace == null) {\n        Node aNode = node;\n        if (aNode instanceof Document) {\n            aNode = ((Document) aNode).getDocumentElement();\n        }\n        while (aNode != null) {\n            if (aNode.getNodeType() == Node.ELEMENT_NODE) {\n                final Attr attr = ((Element) aNode).getAttributeNode(""xmlns"");\n                if (attr != null) {\n                    defaultNamespace = attr.getValue();\n                    break;\n                }\n            }\n            aNode = aNode.getParentNode();\n        }\n    }\n    if (defaultNamespace == null) {\n        defaultNamespace = """";\n    }\n    // TBD: We are supposed to resolve relative URIs to absolute ones.\n    return defaultNamespace.isEmpty() ? null : defaultNamespace;\n}",java.lang.String getDefaultNamespaceURI(),"digraph cfg_getDefaultNamespaceURI {\n	""1"" [label=""$stack10 = (org.w3c.dom.Element) aNode""];\n	""2"" [label=""$stack11 = interfaceinvoke attr.<org.w3c.dom.Attr: java.lang.String getValue()>()""];\n	""3"" [label=""$stack12 = (org.w3c.dom.Document) aNode""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String defaultNamespace>""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String defaultNamespace>""];\n	""6"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String defaultNamespace>""];\n	""7"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.String: boolean isEmpty()>()""];\n	""8"" [label=""$stack7 = null""];\n	""9"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String defaultNamespace>""];\n	""10"" [label=""$stack8 = aNode instanceof org.w3c.dom.Document""];\n	""11"" [label=""$stack9 = interfaceinvoke aNode.<org.w3c.dom.Node: short getNodeType()>()""];\n	""12"" [label=""aNode = interfaceinvoke $stack12.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>()""];\n	""13"" [label=""aNode = interfaceinvoke aNode.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>()""];\n	""14"" [label=""aNode = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""15"" [label=""attr = interfaceinvoke $stack10.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(\""xmlns\"")""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""if $stack3 != null""];\n	""20"" [label=""if $stack4 != null""];\n	""21"" [label=""if $stack6 == 0""];\n	""22"" [label=""if $stack8 == 0""];\n	""23"" [label=""if $stack9 != 1""];\n	""24"" [label=""if aNode == null""];\n	""25"" [label=""if attr == null""];\n	""26"" [label=""return $stack7""];\n	""27"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String defaultNamespace> = \""\""""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String defaultNamespace> = $stack11""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""25""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_goto""];\n	""17"" -> ""24""[label=""cfg_goto""];\n	""18"" -> ""26""[label=""cfg_goto""];\n	""19"" -> ""14""[label=""cfg_false""];\n	""19"" -> ""5""[label=""cfg_true""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""20"" -> ""28""[label=""cfg_false""];\n	""20"" -> ""6""[label=""cfg_true""];\n	""21"" -> ""8""[label=""cfg_false""];\n	""21"" -> ""9""[label=""cfg_true""];\n	""22"" -> ""24""[label=""cfg_true""];\n	""22"" -> ""3""[label=""cfg_false""];\n	""23"" -> ""1""[label=""cfg_false""];\n	""23"" -> ""13""[label=""cfg_true""];\n	""24"" -> ""11""[label=""cfg_false""];\n	""24"" -> ""5""[label=""cfg_true""];\n	""25"" -> ""13""[label=""cfg_true""];\n	""25"" -> ""2""[label=""cfg_false""];\n	""27"" -> ""4""[label=""cfg_next""];\n	""28"" -> ""6""[label=""cfg_next""];\n	""29"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""26""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return node;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return node;\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    return true;\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return !node.hasChildNodes();\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<org.w3c.dom.Node: boolean hasChildNodes()>()""];\n	""3"" [label=""$stack3 = 0""];\n	""4"" [label=""$stack3 = 1""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 != 0""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.isLanguage(String),Method,"* Returns true if the xml:lang attribute for the current node\n     * or its parent has the specified prefix <em>lang</em>.\n     * If no node has this prefix, calls {@code super.isLanguage(lang)}.\n     * @param lang ns to test\n     * @return boolean",@Override\npublic boolean isLanguage(final String lang) {\n    final String current = getLanguage();\n    return current == null ? super.isLanguage(lang) : current.toUpperCase(Locale.ENGLISH).startsWith(lang.toUpperCase(Locale.ENGLISH));\n},boolean isLanguage(java.lang.String),"digraph cfg_isLanguage {\n	""1"" [label=""$stack3 = <java.util.Locale: java.util.Locale ENGLISH>""];\n	""2"" [label=""$stack4 = <java.util.Locale: java.util.Locale ENGLISH>""];\n	""3"" [label=""$stack5 = virtualinvoke lang.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack4)""];\n	""4"" [label=""$stack6 = virtualinvoke current.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack3)""];\n	""5"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLanguage(java.lang.String)>(lang)""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.String: boolean startsWith(java.lang.String)>($stack5)""];\n	""7"" [label=""current = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLanguage()>()""];\n	""8"" [label=""goto""];\n	""9"" [label=""if current != null""];\n	""10"" [label=""lang := @parameter0: java.lang.String""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_goto""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.findEnclosingAttribute(Node,String)",Method,* Find the nearest occurrence of the specified attribute\n     * on the specified and enclosing elements.\n     * @param n current node\n     * @param attrName attribute name\n     * @return attribute value,"protected static String findEnclosingAttribute(Node n, final String attrName) {\n    while (n != null) {\n        if (n.getNodeType() == Node.ELEMENT_NODE) {\n            final Element e = (Element) n;\n            final String attr = e.getAttribute(attrName);\n            if (attr != null && !attr.isEmpty()) {\n                return attr;\n            }\n        }\n        n = n.getParentNode();\n    }\n    return null;\n}","java.lang.String findEnclosingAttribute(org.w3c.dom.Node,java.lang.String)","digraph cfg_findEnclosingAttribute {\n	""1"" [label=""$stack4 = interfaceinvoke n.<org.w3c.dom.Node: short getNodeType()>()""];\n	""2"" [label=""$stack5 = virtualinvoke attr.<java.lang.String: boolean isEmpty()>()""];\n	""3"" [label=""attr = interfaceinvoke e.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>(attrName)""];\n	""4"" [label=""attrName := @parameter1: java.lang.String""];\n	""5"" [label=""e = (org.w3c.dom.Element) n""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 != 1""];\n	""8"" [label=""if $stack5 != 0""];\n	""9"" [label=""if attr == null""];\n	""10"" [label=""if n == null""];\n	""11"" [label=""n := @parameter0: org.w3c.dom.Node""];\n	""12"" [label=""n = interfaceinvoke n.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>()""];\n	""13"" [label=""return attr""];\n	""14"" [label=""return null""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""14""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_true""];\n	""8"" -> ""13""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n","protected , static "
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getLanguage(),Method,* Gets the language attribute for this node.\n     * @return String language name,"protected String getLanguage() {\n    return findEnclosingAttribute(node, ""xml:lang"");\n}",java.lang.String getLanguage(),"digraph cfg_getLanguage {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String findEnclosingAttribute(org.w3c.dom.Node,java.lang.String)>($stack1, \""xml:lang\"")""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.setValue(Object),Method,"* Sets contents of the node to the specified value. If the value is\n     * a String, the contents of the node are replaced with this text.\n     * If the value is an Element or Document, the children of the\n     * node are replaced with the children of the passed node.\n     * @param value to set","@Override\npublic void setValue(final Object value) {\n    if (node.getNodeType() == Node.TEXT_NODE || node.getNodeType() == Node.CDATA_SECTION_NODE) {\n        final String string = (String) TypeUtils.convert(value, String.class);\n        if (string != null && !string.isEmpty()) {\n            node.setNodeValue(string);\n        } else {\n            node.getParentNode().removeChild(node);\n        }\n    } else {\n        NodeList children = node.getChildNodes();\n        final int count = children.getLength();\n        for (int i = count; --i >= 0; ) {\n            final Node child = children.item(i);\n            node.removeChild(child);\n        }\n        if (value instanceof Node) {\n            final Node valueNode = (Node) value;\n            if (valueNode instanceof Element || valueNode instanceof Document) {\n                children = valueNode.getChildNodes();\n                for (int i = 0; i < children.getLength(); i++) {\n                    final Node child = children.item(i);\n                    node.appendChild(child.cloneNode(true));\n                }\n            } else {\n                node.appendChild(valueNode.cloneNode(true));\n            }\n        } else {\n            final String string = (String) TypeUtils.convert(value, String.class);\n            if (string != null && !string.isEmpty()) {\n                final Node textNode = node.getOwnerDocument().createTextNode(string);\n                node.appendChild(textNode);\n            }\n        }\n    }\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""3"" [label=""$stack12 = interfaceinvoke $stack10.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>()""];\n	""4"" [label=""$stack13 = virtualinvoke string.<java.lang.String: boolean isEmpty()>()""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""7"" [label=""$stack16 = interfaceinvoke $stack15.<org.w3c.dom.Node: short getNodeType()>()""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""9"" [label=""$stack18 = value instanceof org.w3c.dom.Node""];\n	""10"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, class \""Ljava/lang/String;\"")""];\n	""11"" [label=""$stack20 = virtualinvoke i.<java.lang.String: boolean isEmpty()>()""];\n	""12"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""13"" [label=""$stack22 = interfaceinvoke $stack21.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>()""];\n	""14"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""15"" [label=""$stack24 = i instanceof org.w3c.dom.Element""];\n	""16"" [label=""$stack25 = interfaceinvoke string.<org.w3c.dom.NodeList: int getLength()>()""];\n	""17"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""18"" [label=""$stack27 = interfaceinvoke child_1.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(1)""];\n	""19"" [label=""$stack28 = i instanceof org.w3c.dom.Document""];\n	""20"" [label=""$stack29 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""21"" [label=""$stack30 = interfaceinvoke i.<org.w3c.dom.Node: org.w3c.dom.Node cloneNode(boolean)>(1)""];\n	""22"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""23"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""24"" [label=""$stack8 = interfaceinvoke $stack7.<org.w3c.dom.Node: short getNodeType()>()""];\n	""25"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, class \""Ljava/lang/String;\"")""];\n	""26"" [label=""child = 0""];\n	""27"" [label=""child = child + 1""];\n	""28"" [label=""child = interfaceinvoke $stack22.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(i)""];\n	""29"" [label=""child = interfaceinvoke string.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i)""];\n	""30"" [label=""child_1 = interfaceinvoke string.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(child)""];\n	""31"" [label=""count = interfaceinvoke string.<org.w3c.dom.NodeList: int getLength()>()""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""i = (java.lang.String) $stack19""];\n	""39"" [label=""i = (org.w3c.dom.Node) value""];\n	""40"" [label=""i = count""];\n	""41"" [label=""i = i + -1""];\n	""42"" [label=""if $stack13 != 0""];\n	""43"" [label=""if $stack16 != 4""];\n	""44"" [label=""if $stack18 == 0""];\n	""45"" [label=""if $stack20 != 0""];\n	""46"" [label=""if $stack24 != 0""];\n	""47"" [label=""if $stack28 == 0""];\n	""48"" [label=""if $stack8 == 3""];\n	""49"" [label=""if child >= $stack25""];\n	""50"" [label=""if i < 0""];\n	""51"" [label=""if i == null""];\n	""52"" [label=""if string == null""];\n	""53"" [label=""interfaceinvoke $stack12.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($stack11)""];\n	""54"" [label=""interfaceinvoke $stack14.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>(string)""];\n	""55"" [label=""interfaceinvoke $stack23.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(child)""];\n	""56"" [label=""interfaceinvoke $stack26.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($stack27)""];\n	""57"" [label=""interfaceinvoke $stack29.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($stack30)""];\n	""58"" [label=""interfaceinvoke $stack31.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>(child)""];\n	""59"" [label=""return""];\n	""60"" [label=""string = (java.lang.String) $stack9""];\n	""61"" [label=""string = interfaceinvoke $stack17.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>()""];\n	""62"" [label=""string = interfaceinvoke i.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>()""];\n	""63"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""64"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""38""[label=""cfg_next""];\n	""11"" -> ""45""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""55""[label=""cfg_next""];\n	""15"" -> ""46""[label=""cfg_next""];\n	""16"" -> ""49""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""56""[label=""cfg_next""];\n	""19"" -> ""47""[label=""cfg_next""];\n	""2"" -> ""53""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""57""[label=""cfg_next""];\n	""22"" -> ""58""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""24"" -> ""48""[label=""cfg_next""];\n	""25"" -> ""60""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_next""];\n	""27"" -> ""36""[label=""cfg_next""];\n	""28"" -> ""14""[label=""cfg_next""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""17""[label=""cfg_next""];\n	""31"" -> ""40""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_goto""];\n	""33"" -> ""59""[label=""cfg_goto""];\n	""34"" -> ""41""[label=""cfg_goto""];\n	""35"" -> ""37""[label=""cfg_goto""];\n	""36"" -> ""16""[label=""cfg_goto""];\n	""37"" -> ""59""[label=""cfg_goto""];\n	""38"" -> ""51""[label=""cfg_next""];\n	""39"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""42""[label=""cfg_next""];\n	""40"" -> ""41""[label=""cfg_next""];\n	""41"" -> ""50""[label=""cfg_next""];\n	""42"" -> ""1""[label=""cfg_true""];\n	""42"" -> ""5""[label=""cfg_false""];\n	""43"" -> ""25""[label=""cfg_false""];\n	""43"" -> ""8""[label=""cfg_true""];\n	""44"" -> ""10""[label=""cfg_true""];\n	""44"" -> ""39""[label=""cfg_false""];\n	""45"" -> ""12""[label=""cfg_false""];\n	""45"" -> ""59""[label=""cfg_true""];\n	""46"" -> ""19""[label=""cfg_false""];\n	""46"" -> ""62""[label=""cfg_true""];\n	""47"" -> ""20""[label=""cfg_true""];\n	""47"" -> ""62""[label=""cfg_false""];\n	""48"" -> ""25""[label=""cfg_true""];\n	""48"" -> ""6""[label=""cfg_false""];\n	""49"" -> ""30""[label=""cfg_false""];\n	""49"" -> ""35""[label=""cfg_true""];\n	""5"" -> ""54""[label=""cfg_next""];\n	""50"" -> ""29""[label=""cfg_false""];\n	""50"" -> ""9""[label=""cfg_true""];\n	""51"" -> ""11""[label=""cfg_false""];\n	""51"" -> ""59""[label=""cfg_true""];\n	""52"" -> ""1""[label=""cfg_true""];\n	""52"" -> ""4""[label=""cfg_false""];\n	""53"" -> ""33""[label=""cfg_next""];\n	""54"" -> ""32""[label=""cfg_next""];\n	""55"" -> ""59""[label=""cfg_next""];\n	""56"" -> ""27""[label=""cfg_next""];\n	""57"" -> ""37""[label=""cfg_next""];\n	""58"" -> ""34""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""52""[label=""cfg_next""];\n	""61"" -> ""31""[label=""cfg_next""];\n	""62"" -> ""26""[label=""cfg_next""];\n	""63"" -> ""64""[label=""cfg_next""];\n	""64"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""43""[label=""cfg_next""];\n	""8"" -> ""61""[label=""cfg_next""];\n	""9"" -> ""44""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.createChild(JXPathContext,QName,int)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, int index) {\n    if (index == WHOLE_COLLECTION) {\n        index = 0;\n    }\n    final boolean success = getAbstractFactory(context).createObject(context, this, node, name.toString(), index);\n    if (success) {\n        NodeTest nodeTest;\n        final String prefix = name.getPrefix();\n        final String namespaceURI = prefix == null ? null : context.getNamespaceURI(prefix);\n        nodeTest = new NodeNameTest(name, namespaceURI);\n        final NodeIterator it = childIterator(nodeTest, false, null);\n        if (it != null && it.setPosition(index + 1)) {\n            return it.getNodePointer();\n        }\n    }\n    throw new JXPathAbstractFactoryException(""Factory could not create a child node for path: "" + asPath() + ""/"" + name + ""["" + (index + 1) + ""]"");\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack10 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.AbstractFactory getAbstractFactory(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""3"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String asPath()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory could not create a child node for path: \"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/\"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name)""];\n	""9"" [label=""$stack18 = index + 1""];\n	""10"" [label=""$stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18)""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""]\"")""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""15"" [label=""$stack24 = new org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""16"" [label=""$stack25 = index + 1""];\n	""17"" [label=""$stack26 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack25)""];\n	""18"" [label=""$stack27 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""19"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""20"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack26 == 0""];\n	""23"" [label=""if index != -2147483648""];\n	""24"" [label=""if it == null""];\n	""25"" [label=""if prefix != null""];\n	""26"" [label=""if success == 0""];\n	""27"" [label=""index := @parameter2: int""];\n	""28"" [label=""index = 0""];\n	""29"" [label=""it = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(nodeTest, 0, null)""];\n	""30"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""31"" [label=""namespaceURI = null""];\n	""32"" [label=""namespaceURI = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""33"" [label=""nodeTest = $stack24""];\n	""34"" [label=""prefix = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""35"" [label=""return $stack27""];\n	""36"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack22)""];\n	""38"" [label=""specialinvoke $stack24.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: void <init>(org.apache.commons.jxpath.ri.QName,java.lang.String)>(name, namespaceURI)""];\n	""39"" [label=""success = virtualinvoke $stack11.<org.apache.commons.jxpath.AbstractFactory: boolean createObject(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.Pointer,java.lang.Object,java.lang.String,int)>(context, this, $stack9, $stack10, index)""];\n	""40"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""41"" [label=""throw $stack23""];\n	""1"" -> ""39""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""37""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""38""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""35""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""15""[label=""cfg_goto""];\n	""22"" -> ""14""[label=""cfg_true""];\n	""22"" -> ""18""[label=""cfg_false""];\n	""23"" -> ""2""[label=""cfg_true""];\n	""23"" -> ""28""[label=""cfg_false""];\n	""24"" -> ""14""[label=""cfg_true""];\n	""24"" -> ""16""[label=""cfg_false""];\n	""25"" -> ""31""[label=""cfg_false""];\n	""25"" -> ""32""[label=""cfg_true""];\n	""26"" -> ""14""[label=""cfg_true""];\n	""26"" -> ""34""[label=""cfg_false""];\n	""27"" -> ""23""[label=""cfg_next""];\n	""28"" -> ""2""[label=""cfg_next""];\n	""29"" -> ""24""[label=""cfg_next""];\n	""3"" -> ""36""[label=""cfg_next""];\n	""30"" -> ""27""[label=""cfg_next""];\n	""31"" -> ""21""[label=""cfg_next""];\n	""32"" -> ""15""[label=""cfg_next""];\n	""33"" -> ""29""[label=""cfg_next""];\n	""34"" -> ""25""[label=""cfg_next""];\n	""36"" -> ""5""[label=""cfg_next""];\n	""37"" -> ""41""[label=""cfg_next""];\n	""38"" -> ""33""[label=""cfg_next""];\n	""39"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""40"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.createChild(JXPathContext,QName,int,Object)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    final NodePointer ptr = createChild(context, name, index);\n    ptr.setValue(value);\n    return ptr;\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""index := @parameter2: int""];\n	""3"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""ptr = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)>(context, name, index)""];\n	""5"" [label=""return ptr""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""7"" [label=""value := @parameter3: java.lang.Object""];\n	""8"" [label=""virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.createAttribute(JXPathContext,QName)",Method,No Comment,"@Override\npublic NodePointer createAttribute(final JXPathContext context, final QName name) {\n    if (!(node instanceof Element)) {\n        return super.createAttribute(context, name);\n    }\n    final Element element = (Element) node;\n    final String prefix = name.getPrefix();\n    if (prefix != null) {\n        String ns = null;\n        final NamespaceResolver nsr = getNamespaceResolver();\n        if (nsr != null) {\n            ns = nsr.getNamespaceURI(prefix);\n        }\n        if (ns == null) {\n            throw new JXPathException(""Unknown namespace prefix: "" + prefix);\n        }\n        element.setAttributeNS(ns, name.toString(), """");\n    } else if (!element.hasAttribute(name.getName())) {\n        element.setAttribute(name.getName(), """");\n    }\n    final NodeIterator it = attributeIterator(name);\n    it.setPosition(1);\n    return it.getNodePointer();\n}","org.apache.commons.jxpath.ri.model.NodePointer createAttribute(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName)","digraph cfg_createAttribute {\n	""1"" [label=""$stack10 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke element.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>($stack10)""];\n	""3"" [label=""$stack12 = interfaceinvoke ns.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""4"" [label=""$stack13 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""5"" [label=""$stack14 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""6"" [label=""$stack15 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Unknown namespace prefix: \"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix)""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack19 = new org.apache.commons.jxpath.JXPathException""];\n	""11"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createAttribute(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName)>(context, name)""];\n	""12"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""13"" [label=""$stack8 = $stack7 instanceof org.w3c.dom.Element""];\n	""14"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""15"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""16"" [label=""element = (org.w3c.dom.Element) $stack9""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack11 != 0""];\n	""19"" [label=""if $stack8 != 0""];\n	""20"" [label=""if ns != null""];\n	""21"" [label=""if nsr == null""];\n	""22"" [label=""if prefix == null""];\n	""23"" [label=""interfaceinvoke element.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>($stack13, \""\"")""];\n	""24"" [label=""interfaceinvoke element.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(ns, $stack14, \""\"")""];\n	""25"" [label=""interfaceinvoke ns.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(1)""];\n	""26"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""27"" [label=""ns = null""];\n	""28"" [label=""ns = virtualinvoke nsr.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""29"" [label=""ns = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""30"" [label=""nsr = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""31"" [label=""prefix = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""32"" [label=""return $stack12""];\n	""33"" [label=""return $stack20""];\n	""34"" [label=""specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack18)""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""37"" [label=""throw $stack19""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""33""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""26""[label=""cfg_next""];\n	""16"" -> ""31""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_goto""];\n	""18"" -> ""29""[label=""cfg_true""];\n	""18"" -> ""4""[label=""cfg_false""];\n	""19"" -> ""11""[label=""cfg_false""];\n	""19"" -> ""14""[label=""cfg_true""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_false""];\n	""20"" -> ""5""[label=""cfg_true""];\n	""21"" -> ""20""[label=""cfg_true""];\n	""21"" -> ""28""[label=""cfg_false""];\n	""22"" -> ""1""[label=""cfg_true""];\n	""22"" -> ""27""[label=""cfg_false""];\n	""23"" -> ""29""[label=""cfg_next""];\n	""24"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""3""[label=""cfg_next""];\n	""26"" -> ""12""[label=""cfg_next""];\n	""27"" -> ""30""[label=""cfg_next""];\n	""28"" -> ""20""[label=""cfg_next""];\n	""29"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""32""[label=""cfg_next""];\n	""30"" -> ""21""[label=""cfg_next""];\n	""31"" -> ""22""[label=""cfg_next""];\n	""34"" -> ""7""[label=""cfg_next""];\n	""35"" -> ""37""[label=""cfg_next""];\n	""36"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""34""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""35""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.remove(),Method,No Comment,"@Override\npublic void remove() {\n    final Node parent = node.getParentNode();\n    if (parent == null) {\n        throw new JXPathException(""Cannot remove root DOM node"");\n    }\n    parent.removeChild(node);\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""3"" [label=""$stack4 = new org.apache.commons.jxpath.JXPathException""];\n	""4"" [label=""if parent != null""];\n	""5"" [label=""interfaceinvoke parent.<org.w3c.dom.Node: org.w3c.dom.Node removeChild(org.w3c.dom.Node)>($stack3)""];\n	""6"" [label=""parent = interfaceinvoke $stack2.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>()""];\n	""7"" [label=""return""];\n	""8"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""Cannot remove root DOM node\"")""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""10"" [label=""throw $stack4""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    if (id != null) {\n        return ""id('"" + escape(id) + ""')"";\n    }\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n    }\n    switch(node.getNodeType()) {\n        case Node.ELEMENT_NODE:\n            // If the parent pointer is not a DOMNodePointer, it is\n            // the parent's responsibility to produce the node test part\n            // of the path\n            if (parent instanceof DOMNodePointer) {\n                if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n                    buffer.append('/');\n                }\n                final String ln = getLocalName(node);\n                final String nsURI = getNamespaceURI();\n                if (nsURI == null) {\n                    buffer.append(ln);\n                    buffer.append('[');\n                    buffer.append(getRelativePositionByQName()).append(']');\n                } else {\n                    final String prefix = getNamespaceResolver().getPrefix(nsURI);\n                    if (prefix != null) {\n                        buffer.append(prefix);\n                        buffer.append(':');\n                        buffer.append(ln);\n                        buffer.append('[');\n                        buffer.append(getRelativePositionByQName());\n                    } else {\n                        buffer.append(""node()"");\n                        buffer.append('[');\n                        buffer.append(getRelativePositionOfElement());\n                    }\n                    buffer.append(']');\n                }\n            }\n            break;\n        case Node.TEXT_NODE:\n        case Node.CDATA_SECTION_NODE:\n            buffer.append(""/text()"");\n            buffer.append('[');\n            buffer.append(getRelativePositionOfTextNode()).append(']');\n            break;\n        case Node.PROCESSING_INSTRUCTION_NODE:\n            buffer.append(""/processing-instruction(\'"");\n            buffer.append(((ProcessingInstruction) node).getTarget()).append(""')"");\n            buffer.append('[');\n            buffer.append(getRelativePositionOfPI()).append(']');\n            break;\n        case Node.DOCUMENT_NODE:\n            // That'll be empty\n            break;\n        default:\n            break;\n    }\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""3"" [label=""$stack12 = (org.w3c.dom.ProcessingInstruction) $stack11""];\n	""4"" [label=""$stack13 = interfaceinvoke $stack12.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""5"" [label=""$stack14 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""6"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: int getRelativePositionOfPI()>()""];\n	""7"" [label=""$stack16 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack15)""];\n	""8"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: int getRelativePositionOfTextNode()>()""];\n	""9"" [label=""$stack18 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17)""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""11"" [label=""$stack20 = $stack19 instanceof org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""12"" [label=""$stack21 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""14"" [label=""$stack23 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""15"" [label=""$stack24 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: int getRelativePositionOfElement()>()""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: int getRelativePositionByQName()>()""];\n	""17"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: int getRelativePositionByQName()>()""];\n	""18"" [label=""$stack27 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack26)""];\n	""19"" [label=""$stack28 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""20"" [label=""$stack29 = $stack28 - 1""];\n	""21"" [label=""$stack30 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack29)""];\n	""22"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""23"" [label=""$stack32 = virtualinvoke $stack31.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""24"" [label=""$stack33 = new java.lang.StringBuilder""];\n	""25"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String id>""];\n	""26"" [label=""$stack35 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String escape(java.lang.String)>($stack34)""];\n	""27"" [label=""$stack36 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""id(\'\"")""];\n	""28"" [label=""$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35)""];\n	""29"" [label=""$stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\')\"")""];\n	""30"" [label=""$stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""31"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String id>""];\n	""32"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""33"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""34"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""35"" [label=""$stack9 = interfaceinvoke $stack8.<org.w3c.dom.Node: short getNodeType()>()""];\n	""36"" [label=""buffer = $stack6""];\n	""37"" [label=""goto""];\n	""38"" [label=""goto""];\n	""39"" [label=""goto""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""if $stack20 == 0""];\n	""44"" [label=""if $stack21 == 0""];\n	""45"" [label=""if $stack30 == 47""];\n	""46"" [label=""if $stack5 == null""];\n	""47"" [label=""if $stack7 == null""];\n	""48"" [label=""if nsURI != null""];\n	""49"" [label=""if prefix == null""];\n	""50"" [label=""ln = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLocalName(org.w3c.dom.Node)>($stack22)""];\n	""51"" [label=""nsURI = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getNamespaceURI()>()""];\n	""52"" [label=""prefix = virtualinvoke $stack23.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getPrefix(java.lang.String)>(nsURI)""];\n	""53"" [label=""return $stack10""];\n	""54"" [label=""return $stack39""];\n	""55"" [label=""specialinvoke $stack33.<java.lang.StringBuilder: void <init>()>()""];\n	""56"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""57"" [label=""switch($stack9) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     default:  \}""];\n	""58"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""59"" [label=""virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\')\"")""];\n	""60"" [label=""virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""61"" [label=""virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""62"" [label=""virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""63"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""64"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)""];\n	""65"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""66"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""67"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""68"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""69"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""70"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""71"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack24)""];\n	""72"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25)""];\n	""73"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/processing-instruction(\'\"")""];\n	""74"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/text()\"")""];\n	""75"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""node()\"")""];\n	""76"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32)""];\n	""77"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ln)""];\n	""78"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ln)""];\n	""79"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix)""];\n	""1"" -> ""53""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""43""[label=""cfg_next""];\n	""12"" -> ""44""[label=""cfg_next""];\n	""13"" -> ""50""[label=""cfg_next""];\n	""14"" -> ""52""[label=""cfg_next""];\n	""15"" -> ""71""[label=""cfg_next""];\n	""16"" -> ""72""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""62""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""45""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""76""[label=""cfg_next""];\n	""24"" -> ""55""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""28""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""54""[label=""cfg_next""];\n	""31"" -> ""46""[label=""cfg_next""];\n	""32"" -> ""56""[label=""cfg_next""];\n	""33"" -> ""47""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""57""[label=""cfg_next""];\n	""36"" -> ""33""[label=""cfg_next""];\n	""37"" -> ""1""[label=""cfg_goto""];\n	""38"" -> ""39""[label=""cfg_goto""];\n	""39"" -> ""1""[label=""cfg_goto""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""70""[label=""cfg_goto""];\n	""41"" -> ""1""[label=""cfg_goto""];\n	""42"" -> ""1""[label=""cfg_goto""];\n	""43"" -> ""1""[label=""cfg_true""];\n	""43"" -> ""12""[label=""cfg_false""];\n	""44"" -> ""19""[label=""cfg_false""];\n	""44"" -> ""63""[label=""cfg_true""];\n	""45"" -> ""13""[label=""cfg_true""];\n	""45"" -> ""63""[label=""cfg_false""];\n	""46"" -> ""24""[label=""cfg_false""];\n	""46"" -> ""32""[label=""cfg_true""];\n	""47"" -> ""22""[label=""cfg_false""];\n	""47"" -> ""34""[label=""cfg_true""];\n	""48"" -> ""14""[label=""cfg_true""];\n	""48"" -> ""77""[label=""cfg_false""];\n	""49"" -> ""75""[label=""cfg_true""];\n	""49"" -> ""79""[label=""cfg_false""];\n	""5"" -> ""59""[label=""cfg_next""];\n	""50"" -> ""51""[label=""cfg_next""];\n	""51"" -> ""48""[label=""cfg_next""];\n	""52"" -> ""49""[label=""cfg_next""];\n	""55"" -> ""27""[label=""cfg_next""];\n	""56"" -> ""36""[label=""cfg_next""];\n	""57"" -> ""1""[label=""cfg_switch""];\n	""57"" -> ""10""[label=""cfg_switch""];\n	""57"" -> ""37""[label=""cfg_switch""];\n	""57"" -> ""73""[label=""cfg_switch""];\n	""57"" -> ""74""[label=""cfg_switch""];\n	""58"" -> ""31""[label=""cfg_next""];\n	""59"" -> ""69""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""42""[label=""cfg_next""];\n	""61"" -> ""41""[label=""cfg_next""];\n	""62"" -> ""38""[label=""cfg_next""];\n	""63"" -> ""13""[label=""cfg_next""];\n	""64"" -> ""78""[label=""cfg_next""];\n	""65"" -> ""17""[label=""cfg_next""];\n	""66"" -> ""16""[label=""cfg_next""];\n	""67"" -> ""15""[label=""cfg_next""];\n	""68"" -> ""8""[label=""cfg_next""];\n	""69"" -> ""6""[label=""cfg_next""];\n	""7"" -> ""60""[label=""cfg_next""];\n	""70"" -> ""39""[label=""cfg_next""];\n	""71"" -> ""70""[label=""cfg_next""];\n	""72"" -> ""40""[label=""cfg_next""];\n	""73"" -> ""2""[label=""cfg_next""];\n	""74"" -> ""68""[label=""cfg_next""];\n	""75"" -> ""67""[label=""cfg_next""];\n	""76"" -> ""34""[label=""cfg_next""];\n	""77"" -> ""65""[label=""cfg_next""];\n	""78"" -> ""66""[label=""cfg_next""];\n	""79"" -> ""64""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""61""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionByQName(),Method,* Gets relative position of this among like-named siblings.\n     * @return 1..n,private int getRelativePositionByQName() {\n    int count = 1;\n    Node n = node.getPreviousSibling();\n    while (n != null) {\n        if (n.getNodeType() == Node.ELEMENT_NODE && matchesQName(n)) {\n            count++;\n        }\n        n = n.getPreviousSibling();\n    }\n    return count;\n},int getRelativePositionByQName(),"digraph cfg_getRelativePositionByQName {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack4 = interfaceinvoke n.<org.w3c.dom.Node: short getNodeType()>()""];\n	""3"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean matchesQName(org.w3c.dom.Node)>(n)""];\n	""4"" [label=""count = 1""];\n	""5"" [label=""count = count + 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 != 1""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""if n == null""];\n	""10"" [label=""n = interfaceinvoke $stack3.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""11"" [label=""n = interfaceinvoke n.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""12"" [label=""return count""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""11""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.matchesQName(Node),Method,No Comment,"private boolean matchesQName(final Node n) {\n    if (getNamespaceURI() != null) {\n        return equalStrings(getNamespaceURI(n), getNamespaceURI()) && equalStrings(node.getLocalName(), n.getLocalName());\n    }\n    return equalStrings(node.getNodeName(), n.getNodeName());\n}",boolean matchesQName(org.w3c.dom.Node),"digraph cfg_matchesQName {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack11 = interfaceinvoke n.<org.w3c.dom.Node: java.lang.String getLocalName()>()""];\n	""3"" [label=""$stack12 = interfaceinvoke $stack10.<org.w3c.dom.Node: java.lang.String getLocalName()>()""];\n	""4"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean equalStrings(java.lang.String,java.lang.String)>($stack12, $stack11)""];\n	""5"" [label=""$stack14 = 0""];\n	""6"" [label=""$stack14 = 1""];\n	""7"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getNamespaceURI()>()""];\n	""8"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""9"" [label=""$stack4 = interfaceinvoke n.<org.w3c.dom.Node: java.lang.String getNodeName()>()""];\n	""10"" [label=""$stack5 = interfaceinvoke $stack3.<org.w3c.dom.Node: java.lang.String getNodeName()>()""];\n	""11"" [label=""$stack6 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean equalStrings(java.lang.String,java.lang.String)>($stack5, $stack4)""];\n	""12"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getNamespaceURI()>()""];\n	""13"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getNamespaceURI(org.w3c.dom.Node)>(n)""];\n	""14"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean equalStrings(java.lang.String,java.lang.String)>($stack8, $stack7)""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack13 == 0""];\n	""17"" [label=""if $stack2 == null""];\n	""18"" [label=""if $stack9 == 0""];\n	""19"" [label=""n := @parameter0: org.w3c.dom.Node""];\n	""20"" [label=""return $stack14""];\n	""21"" [label=""return $stack6""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_goto""];\n	""16"" -> ""5""[label=""cfg_true""];\n	""16"" -> ""6""[label=""cfg_false""];\n	""17"" -> ""13""[label=""cfg_false""];\n	""17"" -> ""8""[label=""cfg_true""];\n	""18"" -> ""1""[label=""cfg_false""];\n	""18"" -> ""5""[label=""cfg_true""];\n	""19"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""22"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionOfElement(),Method,* Gets relative position of this among all siblings.\n     * @return 1..n,private int getRelativePositionOfElement() {\n    int count = 1;\n    Node n = node.getPreviousSibling();\n    while (n != null) {\n        if (n.getNodeType() == Node.ELEMENT_NODE) {\n            count++;\n        }\n        n = n.getPreviousSibling();\n    }\n    return count;\n},int getRelativePositionOfElement(),"digraph cfg_getRelativePositionOfElement {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack4 = interfaceinvoke n.<org.w3c.dom.Node: short getNodeType()>()""];\n	""3"" [label=""count = 1""];\n	""4"" [label=""count = count + 1""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 != 1""];\n	""7"" [label=""if n == null""];\n	""8"" [label=""n = interfaceinvoke $stack3.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""9"" [label=""n = interfaceinvoke n.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""10"" [label=""return count""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""10""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionOfTextNode(),Method,* Gets the relative position of this among sibling text nodes.\n     * @return 1..n,private int getRelativePositionOfTextNode() {\n    int count = 1;\n    Node n = node.getPreviousSibling();\n    while (n != null) {\n        if (n.getNodeType() == Node.TEXT_NODE || n.getNodeType() == Node.CDATA_SECTION_NODE) {\n            count++;\n        }\n        n = n.getPreviousSibling();\n    }\n    return count;\n},int getRelativePositionOfTextNode(),"digraph cfg_getRelativePositionOfTextNode {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack4 = interfaceinvoke n.<org.w3c.dom.Node: short getNodeType()>()""];\n	""3"" [label=""$stack5 = interfaceinvoke n.<org.w3c.dom.Node: short getNodeType()>()""];\n	""4"" [label=""count = 1""];\n	""5"" [label=""count = count + 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 3""];\n	""8"" [label=""if $stack5 != 4""];\n	""9"" [label=""if n == null""];\n	""10"" [label=""n = interfaceinvoke $stack3.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""11"" [label=""n = interfaceinvoke n.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""12"" [label=""return count""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""5""[label=""cfg_true""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getRelativePositionOfPI(),Method,* Gets the relative position of this among same-target processing instruction siblings.\n     * @return 1..n,private int getRelativePositionOfPI() {\n    int count = 1;\n    final String target = ((ProcessingInstruction) node).getTarget();\n    Node n = node.getPreviousSibling();\n    while (n != null) {\n        if (n.getNodeType() == Node.PROCESSING_INSTRUCTION_NODE && ((ProcessingInstruction) n).getTarget().equals(target)) {\n            count++;\n        }\n        n = n.getPreviousSibling();\n    }\n    return count;\n},int getRelativePositionOfPI(),"digraph cfg_getRelativePositionOfPI {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(target)""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""3"" [label=""$stack5 = (org.w3c.dom.ProcessingInstruction) $stack4""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""5"" [label=""$stack7 = interfaceinvoke n.<org.w3c.dom.Node: short getNodeType()>()""];\n	""6"" [label=""$stack8 = (org.w3c.dom.ProcessingInstruction) n""];\n	""7"" [label=""$stack9 = interfaceinvoke $stack8.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""8"" [label=""count = 1""];\n	""9"" [label=""count = count + 1""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack10 == 0""];\n	""12"" [label=""if $stack7 != 7""];\n	""13"" [label=""if n == null""];\n	""14"" [label=""n = interfaceinvoke $stack6.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""15"" [label=""n = interfaceinvoke n.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""16"" [label=""return count""];\n	""17"" [label=""target = interfaceinvoke $stack5.<org.w3c.dom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_goto""];\n	""11"" -> ""15""[label=""cfg_true""];\n	""11"" -> ""9""[label=""cfg_false""];\n	""12"" -> ""15""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_false""];\n	""13"" -> ""16""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""4""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return node.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.Object: int hashCode()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    return object == this || object instanceof DOMNodePointer && node == ((DOMNodePointer) object).node;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack2 = object instanceof org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.ri.model.dom.DOMNodePointer) object""];\n	""5"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""if $stack6 != $stack5""];\n	""10"" [label=""if object == this""];\n	""11"" [label=""object := @parameter0: java.lang.Object""];\n	""12"" [label=""return $stack3""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getPrefix(Node),Method,* Gets any prefix from the specified node.\n     * @param node the node to check\n     * @return String xml prefix,"public static String getPrefix(final Node node) {\n    final String prefix = node.getPrefix();\n    if (prefix != null) {\n        return prefix;\n    }\n    final String name = node.getNodeName();\n    final int index = name.lastIndexOf(':');\n    return index < 0 ? null : name.substring(0, index);\n}",java.lang.String getPrefix(org.w3c.dom.Node),"digraph cfg_getPrefix {\n	""1"" [label=""$stack4 = null""];\n	""2"" [label=""$stack4 = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>(0, index)""];\n	""3"" [label=""goto""];\n	""4"" [label=""if index >= 0""];\n	""5"" [label=""if prefix == null""];\n	""6"" [label=""index = virtualinvoke name.<java.lang.String: int lastIndexOf(int)>(58)""];\n	""7"" [label=""name = interfaceinvoke node.<org.w3c.dom.Node: java.lang.String getNodeName()>()""];\n	""8"" [label=""node := @parameter0: org.w3c.dom.Node""];\n	""9"" [label=""prefix = interfaceinvoke node.<org.w3c.dom.Node: java.lang.String getPrefix()>()""];\n	""10"" [label=""return $stack4""];\n	""11"" [label=""return prefix""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getLocalName(Node),Method,* Gets the local name of the specified node.\n     * @param node node to check\n     * @return String local name,public static String getLocalName(final Node node) {\n    final String localName = node.getLocalName();\n    if (localName != null) {\n        return localName;\n    }\n    final String name = node.getNodeName();\n    final int index = name.lastIndexOf(':');\n    return index < 0 ? name : name.substring(index + 1);\n},java.lang.String getLocalName(org.w3c.dom.Node),"digraph cfg_getLocalName {\n	""1"" [label=""$stack4 = index + 1""];\n	""2"" [label=""$stack5 = name""];\n	""3"" [label=""$stack5 = virtualinvoke name.<java.lang.String: java.lang.String substring(int)>($stack4)""];\n	""4"" [label=""goto""];\n	""5"" [label=""if index >= 0""];\n	""6"" [label=""if localName == null""];\n	""7"" [label=""index = virtualinvoke name.<java.lang.String: int lastIndexOf(int)>(58)""];\n	""8"" [label=""localName = interfaceinvoke node.<org.w3c.dom.Node: java.lang.String getLocalName()>()""];\n	""9"" [label=""name = interfaceinvoke node.<org.w3c.dom.Node: java.lang.String getNodeName()>()""];\n	""10"" [label=""node := @parameter0: org.w3c.dom.Node""];\n	""11"" [label=""return $stack5""];\n	""12"" [label=""return localName""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""12""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getNamespaceURI(Node),Method,* Gets the ns uri of the specified node.\n     * @param node Node to check\n     * @return String ns uri,"public static String getNamespaceURI(Node node) {\n    if (node instanceof Document) {\n        node = ((Document) node).getDocumentElement();\n    }\n    final Element element = (Element) node;\n    String uri = element.getNamespaceURI();\n    if (uri == null) {\n        final String prefix = getPrefix(node);\n        final String qname = prefix == null ? ""xmlns"" : ""xmlns:"" + prefix;\n        Node aNode = node;\n        while (aNode != null) {\n            if (aNode.getNodeType() == Node.ELEMENT_NODE) {\n                final Attr attr = ((Element) aNode).getAttributeNode(qname);\n                if (attr != null) {\n                    uri = attr.getValue();\n                    break;\n                }\n            }\n            aNode = aNode.getParentNode();\n        }\n    }\n    return """".equals(uri) ? null : uri;\n}",java.lang.String getNamespaceURI(org.w3c.dom.Node),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack10 = null""];\n	""2"" [label=""$stack10 = uri""];\n	""3"" [label=""$stack11 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""xmlns:\"")""];\n	""5"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix)""];\n	""6"" [label=""$stack14 = interfaceinvoke aNode.<org.w3c.dom.Node: short getNodeType()>()""];\n	""7"" [label=""$stack15 = (org.w3c.dom.Element) aNode""];\n	""8"" [label=""$stack16 = (org.w3c.dom.Document) node""];\n	""9"" [label=""$stack7 = node instanceof org.w3c.dom.Document""];\n	""10"" [label=""$stack8 = \""\""""];\n	""11"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>(uri)""];\n	""12"" [label=""aNode = interfaceinvoke aNode.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>()""];\n	""13"" [label=""aNode = node""];\n	""14"" [label=""attr = interfaceinvoke $stack15.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(qname)""];\n	""15"" [label=""element = (org.w3c.dom.Element) node""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack14 != 1""];\n	""21"" [label=""if $stack7 == 0""];\n	""22"" [label=""if $stack9 == 0""];\n	""23"" [label=""if aNode == null""];\n	""24"" [label=""if attr == null""];\n	""25"" [label=""if prefix != null""];\n	""26"" [label=""if uri != null""];\n	""27"" [label=""node := @parameter0: org.w3c.dom.Node""];\n	""28"" [label=""node = interfaceinvoke $stack16.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>()""];\n	""29"" [label=""prefix = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getPrefix(org.w3c.dom.Node)>(node)""];\n	""30"" [label=""qname = \""xmlns\""""];\n	""31"" [label=""qname = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""32"" [label=""return $stack10""];\n	""33"" [label=""specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>()""];\n	""34"" [label=""uri = interfaceinvoke attr.<org.w3c.dom.Attr: java.lang.String getValue()>()""];\n	""35"" [label=""uri = interfaceinvoke element.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>()""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""22""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""23""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_next""];\n	""15"" -> ""35""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_goto""];\n	""17"" -> ""10""[label=""cfg_goto""];\n	""18"" -> ""23""[label=""cfg_goto""];\n	""19"" -> ""32""[label=""cfg_goto""];\n	""2"" -> ""32""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_true""];\n	""20"" -> ""7""[label=""cfg_false""];\n	""21"" -> ""15""[label=""cfg_true""];\n	""21"" -> ""8""[label=""cfg_false""];\n	""22"" -> ""1""[label=""cfg_false""];\n	""22"" -> ""2""[label=""cfg_true""];\n	""23"" -> ""10""[label=""cfg_true""];\n	""23"" -> ""6""[label=""cfg_false""];\n	""24"" -> ""12""[label=""cfg_true""];\n	""24"" -> ""34""[label=""cfg_false""];\n	""25"" -> ""3""[label=""cfg_true""];\n	""25"" -> ""30""[label=""cfg_false""];\n	""26"" -> ""10""[label=""cfg_true""];\n	""26"" -> ""29""[label=""cfg_false""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""29"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""33""[label=""cfg_next""];\n	""30"" -> ""16""[label=""cfg_next""];\n	""31"" -> ""13""[label=""cfg_next""];\n	""33"" -> ""4""[label=""cfg_next""];\n	""34"" -> ""17""[label=""cfg_next""];\n	""35"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""31""[label=""cfg_next""];\n	""6"" -> ""20""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getValue(),Method,No Comment,"@Override\npublic Object getValue() {\n    if (node.getNodeType() == Node.COMMENT_NODE) {\n        final String text = ((Comment) node).getData();\n        return text == null ? """" : text.trim();\n    }\n    return stringValue(node);\n}",java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<org.w3c.dom.Node: short getNodeType()>()""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String stringValue(org.w3c.dom.Node)>($stack4)""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""6"" [label=""$stack7 = (org.w3c.dom.Comment) $stack6""];\n	""7"" [label=""$stack8 = \""\""""];\n	""8"" [label=""$stack8 = virtualinvoke text.<java.lang.String: java.lang.String trim()>()""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack3 != 8""];\n	""11"" [label=""if text != null""];\n	""12"" [label=""return $stack5""];\n	""13"" [label=""return $stack8""];\n	""14"" [label=""text = interfaceinvoke $stack7.<org.w3c.dom.Comment: java.lang.String getData()>()""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""11"" -> ""8""[label=""cfg_true""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.stringValue(Node),Method,* Gets the string value of the specified node.\n     * @param node Node to check\n     * @return String,"private String stringValue(final Node node) {\n    final int nodeType = node.getNodeType();\n    if (nodeType == Node.COMMENT_NODE) {\n        return """";\n    }\n    final boolean trim = !""preserve"".equals(findEnclosingAttribute(node, ""xml:space""));\n    if (nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE) {\n        final String text = node.getNodeValue();\n        return text == null ? """" : trim ? text.trim() : text;\n    }\n    if (nodeType == Node.PROCESSING_INSTRUCTION_NODE) {\n        final String text = ((ProcessingInstruction) node).getData();\n        return text == null ? """" : trim ? text.trim() : text;\n    }\n    final NodeList list = node.getChildNodes();\n    final StringBuilder buf = new StringBuilder();\n    for (int i = 0; i < list.getLength(); i++) {\n        final Node child = list.item(i);\n        buf.append(stringValue(child));\n    }\n    return buf.toString();\n}",java.lang.String stringValue(org.w3c.dom.Node),"digraph cfg_stringValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>($stack8)""];\n	""2"" [label=""$stack11 = \""\""""];\n	""3"" [label=""$stack11 = text""];\n	""4"" [label=""$stack11 = virtualinvoke text.<java.lang.String: java.lang.String trim()>()""];\n	""5"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack13 = interfaceinvoke text.<org.w3c.dom.NodeList: int getLength()>()""];\n	""7"" [label=""$stack14 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack15 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String stringValue(org.w3c.dom.Node)>(child)""];\n	""9"" [label=""$stack16 = (org.w3c.dom.ProcessingInstruction) node""];\n	""10"" [label=""$stack17 = \""\""""];\n	""11"" [label=""$stack17 = text""];\n	""12"" [label=""$stack17 = virtualinvoke text.<java.lang.String: java.lang.String trim()>()""];\n	""13"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String findEnclosingAttribute(org.w3c.dom.Node,java.lang.String)>(node, \""xml:space\"")""];\n	""14"" [label=""$stack9 = \""preserve\""""];\n	""15"" [label=""buf = $stack12""];\n	""16"" [label=""child = interfaceinvoke text.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i)""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""i = 0""];\n	""24"" [label=""i = i + 1""];\n	""25"" [label=""if $stack10 != 0""];\n	""26"" [label=""if i >= $stack13""];\n	""27"" [label=""if nodeType != 4""];\n	""28"" [label=""if nodeType != 7""];\n	""29"" [label=""if nodeType != 8""];\n	""30"" [label=""if nodeType == 3""];\n	""31"" [label=""if text != null""];\n	""32"" [label=""if text != null""];\n	""33"" [label=""if trim == 0""];\n	""34"" [label=""if trim == 0""];\n	""35"" [label=""node := @parameter0: org.w3c.dom.Node""];\n	""36"" [label=""nodeType = interfaceinvoke node.<org.w3c.dom.Node: short getNodeType()>()""];\n	""37"" [label=""return \""\""""];\n	""38"" [label=""return $stack11""];\n	""39"" [label=""return $stack14""];\n	""40"" [label=""return $stack17""];\n	""41"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()""];\n	""42"" [label=""text = interfaceinvoke $stack16.<org.w3c.dom.ProcessingInstruction: java.lang.String getData()>()""];\n	""43"" [label=""text = interfaceinvoke node.<org.w3c.dom.Node: java.lang.String getNodeValue()>()""];\n	""44"" [label=""text = interfaceinvoke node.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>()""];\n	""45"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""46"" [label=""trim = 0""];\n	""47"" [label=""trim = 1""];\n	""48"" [label=""virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15)""];\n	""1"" -> ""25""[label=""cfg_next""];\n	""10"" -> ""20""[label=""cfg_next""];\n	""11"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""21""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_next""];\n	""16"" -> ""8""[label=""cfg_next""];\n	""17"" -> ""30""[label=""cfg_goto""];\n	""18"" -> ""38""[label=""cfg_goto""];\n	""19"" -> ""38""[label=""cfg_goto""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""40""[label=""cfg_goto""];\n	""21"" -> ""40""[label=""cfg_goto""];\n	""22"" -> ""6""[label=""cfg_goto""];\n	""23"" -> ""6""[label=""cfg_next""];\n	""24"" -> ""22""[label=""cfg_next""];\n	""25"" -> ""46""[label=""cfg_true""];\n	""25"" -> ""47""[label=""cfg_false""];\n	""26"" -> ""16""[label=""cfg_false""];\n	""26"" -> ""7""[label=""cfg_true""];\n	""27"" -> ""28""[label=""cfg_true""];\n	""27"" -> ""43""[label=""cfg_false""];\n	""28"" -> ""44""[label=""cfg_true""];\n	""28"" -> ""9""[label=""cfg_false""];\n	""29"" -> ""14""[label=""cfg_true""];\n	""29"" -> ""37""[label=""cfg_false""];\n	""3"" -> ""38""[label=""cfg_next""];\n	""30"" -> ""27""[label=""cfg_false""];\n	""30"" -> ""43""[label=""cfg_true""];\n	""31"" -> ""2""[label=""cfg_false""];\n	""31"" -> ""33""[label=""cfg_true""];\n	""32"" -> ""10""[label=""cfg_false""];\n	""32"" -> ""34""[label=""cfg_true""];\n	""33"" -> ""3""[label=""cfg_true""];\n	""33"" -> ""4""[label=""cfg_false""];\n	""34"" -> ""11""[label=""cfg_true""];\n	""34"" -> ""12""[label=""cfg_false""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""29""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""41"" -> ""15""[label=""cfg_next""];\n	""42"" -> ""32""[label=""cfg_next""];\n	""43"" -> ""31""[label=""cfg_next""];\n	""44"" -> ""5""[label=""cfg_next""];\n	""45"" -> ""35""[label=""cfg_next""];\n	""46"" -> ""30""[label=""cfg_next""];\n	""47"" -> ""17""[label=""cfg_next""];\n	""48"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""41""[label=""cfg_next""];\n	""6"" -> ""26""[label=""cfg_next""];\n	""7"" -> ""39""[label=""cfg_next""];\n	""8"" -> ""48""[label=""cfg_next""];\n	""9"" -> ""42""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getPointerByID(JXPathContext,String)",Method,* Locates a node by ID.\n     * @param context starting context\n     * @param id to find\n     * @return Pointer,"@Override\npublic Pointer getPointerByID(final JXPathContext context, final String id) {\n    final Document document = node.getNodeType() == Node.DOCUMENT_NODE ? (Document) node : node.getOwnerDocument();\n    final Element element = document.getElementById(id);\n    return element == null ? (Pointer) new NullPointer(getLocale(), id) : new DOMNodePointer(element, getLocale(), id);\n}","org.apache.commons.jxpath.Pointer getPointerByID(org.apache.commons.jxpath.JXPathContext,java.lang.String)","digraph cfg_getPointerByID {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.util.Locale getLocale()>()""];\n	""2"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""4"" [label=""$stack6 = interfaceinvoke $stack5.<org.w3c.dom.Node: short getNodeType()>()""];\n	""5"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""6"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.util.Locale getLocale()>()""];\n	""7"" [label=""$stack9 = new org.apache.commons.jxpath.ri.model.beans.NullPointer""];\n	""8"" [label=""$stack9 = new org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""9"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""10"" [label=""document = (org.w3c.dom.Document) $stack12""];\n	""11"" [label=""document = interfaceinvoke $stack7.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>()""];\n	""12"" [label=""element = interfaceinvoke document.<org.w3c.dom.Document: org.w3c.dom.Element getElementById(java.lang.String)>(id)""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""id := @parameter1: java.lang.String""];\n	""16"" [label=""if $stack6 != 9""];\n	""17"" [label=""if element != null""];\n	""18"" [label=""return $stack9""];\n	""19"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.model.beans.NullPointer: void <init>(java.util.Locale,java.lang.String)>($stack10, id)""];\n	""20"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: void <init>(org.w3c.dom.Node,java.util.Locale,java.lang.String)>(element, $stack8, id)""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_goto""];\n	""14"" -> ""18""[label=""cfg_goto""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_false""];\n	""16"" -> ""5""[label=""cfg_true""];\n	""17"" -> ""7""[label=""cfg_false""];\n	""17"" -> ""8""[label=""cfg_true""];\n	""19"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""20""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    final Node node1 = (Node) pointer1.getBaseValue();\n    final Node node2 = (Node) pointer2.getBaseValue();\n    if (node1 == node2) {\n        return 0;\n    }\n    final int t1 = node1.getNodeType();\n    final int t2 = node2.getNodeType();\n    if (t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE) {\n        return -1;\n    }\n    if (t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE) {\n        return 1;\n    }\n    if (t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE) {\n        final NamedNodeMap map = ((Node) getNode()).getAttributes();\n        final int length = map.getLength();\n        for (int i = 0; i < length; i++) {\n            final Node n = map.item(i);\n            if (n == node1) {\n                return -1;\n            }\n            if (n == node2) {\n                return 1;\n            }\n        }\n        // Should not happen\n        return 0;\n    }\n    Node current = node.getFirstChild();\n    while (current != null) {\n        if (current == node1) {\n            return -1;\n        }\n        if (current == node2) {\n            return 1;\n        }\n        current = current.getNextSibling();\n    }\n    return 0;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""$stack11 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getBaseValue()>()""];\n	""2"" [label=""$stack12 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getBaseValue()>()""];\n	""3"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node>""];\n	""4"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.Object getNode()>()""];\n	""5"" [label=""$stack15 = (org.w3c.dom.Node) $stack14""];\n	""6"" [label=""goto""];\n	""7"" [label=""goto""];\n	""8"" [label=""i = 0""];\n	""9"" [label=""i = i + 1""];\n	""10"" [label=""if i >= length""];\n	""11"" [label=""if map != node1""];\n	""12"" [label=""if map != node2""];\n	""13"" [label=""if map == null""];\n	""14"" [label=""if n != node1""];\n	""15"" [label=""if n != node2""];\n	""16"" [label=""if node1 != node2""];\n	""17"" [label=""if t1 != 2""];\n	""18"" [label=""if t1 != 2""];\n	""19"" [label=""if t1 == 2""];\n	""20"" [label=""if t2 != 2""];\n	""21"" [label=""if t2 != 2""];\n	""22"" [label=""if t2 == 2""];\n	""23"" [label=""length = interfaceinvoke map.<org.w3c.dom.NamedNodeMap: int getLength()>()""];\n	""24"" [label=""map = interfaceinvoke $stack13.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>()""];\n	""25"" [label=""map = interfaceinvoke $stack15.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>()""];\n	""26"" [label=""map = interfaceinvoke map.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>()""];\n	""27"" [label=""n = interfaceinvoke map.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i)""];\n	""28"" [label=""node1 = (org.w3c.dom.Node) $stack11""];\n	""29"" [label=""node2 = (org.w3c.dom.Node) $stack12""];\n	""30"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""31"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""32"" [label=""return -1""];\n	""33"" [label=""return -1""];\n	""34"" [label=""return -1""];\n	""35"" [label=""return 0""];\n	""36"" [label=""return 0""];\n	""37"" [label=""return 0""];\n	""38"" [label=""return 1""];\n	""39"" [label=""return 1""];\n	""40"" [label=""return 1""];\n	""41"" [label=""t1 = interfaceinvoke node1.<org.w3c.dom.Node: short getNodeType()>()""];\n	""42"" [label=""t2 = interfaceinvoke node2.<org.w3c.dom.Node: short getNodeType()>()""];\n	""43"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""1"" -> ""28""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_false""];\n	""10"" -> ""36""[label=""cfg_true""];\n	""11"" -> ""12""[label=""cfg_true""];\n	""11"" -> ""34""[label=""cfg_false""];\n	""12"" -> ""26""[label=""cfg_true""];\n	""12"" -> ""40""[label=""cfg_false""];\n	""13"" -> ""11""[label=""cfg_false""];\n	""13"" -> ""37""[label=""cfg_true""];\n	""14"" -> ""15""[label=""cfg_true""];\n	""14"" -> ""33""[label=""cfg_false""];\n	""15"" -> ""39""[label=""cfg_false""];\n	""15"" -> ""9""[label=""cfg_true""];\n	""16"" -> ""35""[label=""cfg_false""];\n	""16"" -> ""41""[label=""cfg_true""];\n	""17"" -> ""19""[label=""cfg_true""];\n	""17"" -> ""22""[label=""cfg_false""];\n	""18"" -> ""21""[label=""cfg_false""];\n	""18"" -> ""3""[label=""cfg_true""];\n	""19"" -> ""18""[label=""cfg_true""];\n	""19"" -> ""20""[label=""cfg_false""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_true""];\n	""20"" -> ""38""[label=""cfg_false""];\n	""21"" -> ""3""[label=""cfg_true""];\n	""21"" -> ""4""[label=""cfg_false""];\n	""22"" -> ""19""[label=""cfg_true""];\n	""22"" -> ""32""[label=""cfg_false""];\n	""23"" -> ""8""[label=""cfg_next""];\n	""24"" -> ""13""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""26"" -> ""7""[label=""cfg_next""];\n	""27"" -> ""14""[label=""cfg_next""];\n	""28"" -> ""2""[label=""cfg_next""];\n	""29"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""17""[label=""cfg_next""];\n	""43"" -> ""30""[label=""cfg_next""];\n	""5"" -> ""25""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""13""[label=""cfg_goto""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.<init>(Node,Locale)",Constructor,* Create a new DOMNodePointer.\n     * @param node pointed at\n     * @param locale Locale,"public DOMNodePointer(final Node node, final Locale locale) {\n    super(null, locale);\n    this.node = node;\n}","void <init>(org.w3c.dom.Node,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""locale := @parameter1: java.util.Locale""];\n	""2"" [label=""node := @parameter0: org.w3c.dom.Node""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node> = node""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.<init>(Node,Locale,String)",Constructor,* Create a new DOMNodePointer.\n     * @param node pointed at\n     * @param locale Locale\n     * @param id string id,"public DOMNodePointer(final Node node, final Locale locale, final String id) {\n    super(null, locale);\n    this.node = node;\n    this.id = id;\n}","void <init>(org.w3c.dom.Node,java.util.Locale,java.lang.String)","digraph cfg_init {\n	""1"" [label=""id := @parameter2: java.lang.String""];\n	""2"" [label=""locale := @parameter1: java.util.Locale""];\n	""3"" [label=""node := @parameter0: org.w3c.dom.Node""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String id> = id""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node> = node""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.<init>(NodePointer,Node)",Constructor,* Create a new DOMNodePointer.\n     * @param parent pointer\n     * @param node pointed,"public DOMNodePointer(final NodePointer parent, final Node node) {\n    super(parent);\n    this.node = node;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.w3c.dom.Node)","digraph cfg_init {\n	""1"" [label=""node := @parameter1: org.w3c.dom.Node""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: org.w3c.dom.Node node> = node""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getName(),Method,No Comment,"@Override\npublic QName getName() {\n    return new QName(DOMNodePointer.getPrefix(attr), DOMNodePointer.getLocalName(attr));\n}",org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""3"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLocalName(org.w3c.dom.Node)>($stack2)""];\n	""4"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getPrefix(org.w3c.dom.Node)>($stack1)""];\n	""5"" [label=""$stack5 = new org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getNamespaceURI(),Method,No Comment,@Override\npublic String getNamespaceURI() {\n    final String prefix = DOMNodePointer.getPrefix(attr);\n    return prefix == null ? null : parent.getNamespaceURI(prefix);\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack4 = null""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""5"" [label=""goto""];\n	""6"" [label=""if prefix != null""];\n	""7"" [label=""prefix = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getPrefix(org.w3c.dom.Node)>($stack2)""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getValue(),Method,No Comment,@Override\npublic Object getValue() {\n    final String value = attr.getValue();\n    if (value == null || value.isEmpty() && !attr.getSpecified()) {\n        return null;\n    }\n    return value;\n},java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""$stack3 = virtualinvoke value.<java.lang.String: boolean isEmpty()>()""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""4"" [label=""$stack5 = interfaceinvoke $stack4.<org.w3c.dom.Attr: boolean getSpecified()>()""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if $stack5 != 0""];\n	""7"" [label=""if value == null""];\n	""8"" [label=""return null""];\n	""9"" [label=""return value""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""11"" [label=""value = interfaceinvoke $stack2.<org.w3c.dom.Attr: java.lang.String getValue()>()""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return attr;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return attr;\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    return true;\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.testNode(NodeTest),Method,No Comment,@Override\npublic boolean testNode(final NodeTest nodeTest) {\n    return nodeTest == null || nodeTest instanceof NodeTypeTest && ((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE;\n},boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack2 = nodeTest instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) nodeTest""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 == 0""];\n	""8"" [label=""if $stack5 != 1""];\n	""9"" [label=""if nodeTest == null""];\n	""10"" [label=""nodeTest := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""11"" [label=""return $stack3""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.setValue(Object),Method,* Sets the value of this attribute.\n     * @param value to set,"@Override\npublic void setValue(final Object value) {\n    attr.setValue((String) TypeUtils.convert(value, String.class));\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, class \""Ljava/lang/String;\"")""];\n	""3"" [label=""$stack4 = (java.lang.String) $stack3""];\n	""4"" [label=""interfaceinvoke $stack2.<org.w3c.dom.Attr: void setValue(java.lang.String)>($stack4)""];\n	""5"" [label=""return""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""7"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.remove(),Method,No Comment,@Override\npublic void remove() {\n    attr.getOwnerElement().removeAttributeNode(attr);\n},void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""3"" [label=""$stack3 = interfaceinvoke $stack1.<org.w3c.dom.Attr: org.w3c.dom.Element getOwnerElement()>()""];\n	""4"" [label=""interfaceinvoke $stack3.<org.w3c.dom.Element: org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr)>($stack2)""];\n	""5"" [label=""return""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.asPath(),Method,No Comment,@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n        if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n            buffer.append('/');\n        }\n    }\n    buffer.append('@');\n    buffer.append(getName());\n    return buffer.toString();\n},java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = $stack9 - 1""];\n	""2"" [label=""$stack11 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack10)""];\n	""3"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""6"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""9"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""10"" [label=""$stack9 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""11"" [label=""buffer = $stack2""];\n	""12"" [label=""if $stack11 == 47""];\n	""13"" [label=""if $stack3 == null""];\n	""14"" [label=""if $stack8 == 0""];\n	""15"" [label=""return $stack5""];\n	""16"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64)""];\n	""20"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack4)""];\n	""21"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_false""];\n	""12"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_false""];\n	""14"" -> ""10""[label=""cfg_false""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return System.identityHashCode(attr);\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""2"" [label=""$stack2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    return object == this || object instanceof DOMAttributePointer && attr == ((DOMAttributePointer) object).attr;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack2 = object instanceof org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer) object""];\n	""5"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr>""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""if $stack6 != $stack5""];\n	""10"" [label=""if object == this""];\n	""11"" [label=""object := @parameter0: java.lang.Object""];\n	""12"" [label=""return $stack3""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    // Won't happen - attributes don't have children\n    return 0;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return 0""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer.<init>(NodePointer,Attr)",Constructor,* Create a new DOMAttributePointer.\n     * @param parent pointer\n     * @param attr pointed,"public DOMAttributePointer(final NodePointer parent, final Attr attr) {\n    super(parent);\n    this.attr = attr;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.w3c.dom.Attr)","digraph cfg_init {\n	""1"" [label=""attr := @parameter1: org.w3c.dom.Attr""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: org.w3c.dom.Attr attr> = attr""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.getNodePointer(),Method,No Comment,"@Override\npublic NodePointer getNodePointer() {\n    if (position == 0) {\n        setPosition(1);\n    }\n    return child == null ? null : new DOMNodePointer(parent, child);\n}",org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack5 = new org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""6"" [label=""$stack5 = null""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack1 != 0""];\n	""9"" [label=""if $stack2 != null""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.w3c.dom.Node)>($stack4, $stack3)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""13"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean setPosition(int)>(1)""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_goto""];\n	""8"" -> ""13""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    while (this.position < position) {\n        if (!next()) {\n            return false;\n        }\n    }\n    while (this.position > position) {\n        if (!previous()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean previous()>()""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean next()>()""];\n	""5"" [label=""if $stack2 >= position""];\n	""6"" [label=""if $stack3 <= position""];\n	""7"" [label=""if $stack4 != 0""];\n	""8"" [label=""if $stack5 != 0""];\n	""9"" [label=""position := @parameter0: int""];\n	""10"" [label=""return 0""];\n	""11"" [label=""return 0""];\n	""12"" [label=""return 1""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""12""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""11""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_true""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.previous(),Method,* Sets the previous position.\n     * @return whether valid,private boolean previous() {\n    position--;\n    if (!reverse) {\n        if (position == 0) {\n            child = null;\n        } else if (child == null) {\n            child = node.getLastChild();\n        } else {\n            child = child.getPreviousSibling();\n        }\n        while (child != null && !testChild()) {\n            child = child.getPreviousSibling();\n        }\n    } else {\n        child = child.getNextSibling();\n        while (child != null && !testChild()) {\n            child = child.getNextSibling();\n        }\n    }\n    return child != null;\n},boolean previous(),"digraph cfg_previous {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""2"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""3"" [label=""$stack11 = interfaceinvoke $stack10.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>()""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""7"" [label=""$stack15 = interfaceinvoke $stack14.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""9"" [label=""$stack17 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean testChild()>()""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""11"" [label=""$stack19 = interfaceinvoke $stack18.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""12"" [label=""$stack2 = $stack1 - 1""];\n	""13"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node node>""];\n	""14"" [label=""$stack21 = interfaceinvoke $stack20.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>()""];\n	""15"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean reverse>""];\n	""16"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""17"" [label=""$stack5 = interfaceinvoke $stack4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>()""];\n	""18"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""19"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""20"" [label=""$stack8 = 0""];\n	""21"" [label=""$stack8 = 1""];\n	""22"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean testChild()>()""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""if $stack12 != 0""];\n	""29"" [label=""if $stack13 != null""];\n	""30"" [label=""if $stack16 == null""];\n	""31"" [label=""if $stack17 != 0""];\n	""32"" [label=""if $stack3 != 0""];\n	""33"" [label=""if $stack6 == null""];\n	""34"" [label=""if $stack7 == null""];\n	""35"" [label=""if $stack9 != 0""];\n	""36"" [label=""return $stack8""];\n	""37"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""38"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position> = $stack2""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack11""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack15""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack19""];\n	""42"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack21""];\n	""43"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack5""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = null""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""41""[label=""cfg_next""];\n	""12"" -> ""38""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""42""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""43""[label=""cfg_next""];\n	""18"" -> ""33""[label=""cfg_next""];\n	""19"" -> ""34""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""36""[label=""cfg_next""];\n	""21"" -> ""26""[label=""cfg_next""];\n	""22"" -> ""35""[label=""cfg_next""];\n	""23"" -> ""8""[label=""cfg_goto""];\n	""24"" -> ""8""[label=""cfg_goto""];\n	""25"" -> ""8""[label=""cfg_goto""];\n	""26"" -> ""36""[label=""cfg_goto""];\n	""27"" -> ""18""[label=""cfg_goto""];\n	""28"" -> ""44""[label=""cfg_false""];\n	""28"" -> ""5""[label=""cfg_true""];\n	""29"" -> ""13""[label=""cfg_false""];\n	""29"" -> ""6""[label=""cfg_true""];\n	""3"" -> ""39""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""30"" -> ""9""[label=""cfg_false""];\n	""31"" -> ""10""[label=""cfg_false""];\n	""31"" -> ""19""[label=""cfg_true""];\n	""32"" -> ""16""[label=""cfg_true""];\n	""32"" -> ""4""[label=""cfg_false""];\n	""33"" -> ""19""[label=""cfg_true""];\n	""33"" -> ""22""[label=""cfg_false""];\n	""34"" -> ""20""[label=""cfg_true""];\n	""34"" -> ""21""[label=""cfg_false""];\n	""35"" -> ""19""[label=""cfg_true""];\n	""35"" -> ""2""[label=""cfg_false""];\n	""37"" -> ""1""[label=""cfg_next""];\n	""38"" -> ""15""[label=""cfg_next""];\n	""39"" -> ""27""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""40"" -> ""8""[label=""cfg_next""];\n	""41"" -> ""25""[label=""cfg_next""];\n	""42"" -> ""24""[label=""cfg_next""];\n	""43"" -> ""18""[label=""cfg_next""];\n	""44"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""40""[label=""cfg_next""];\n	""8"" -> ""30""[label=""cfg_next""];\n	""9"" -> ""31""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.next(),Method,* Sets the next position.\n     * @return whether valid,private boolean next() {\n    position++;\n    if (!reverse) {\n        if (position == 1 && child == null) {\n            child = node.getFirstChild();\n        } else {\n            child = child.getNextSibling();\n        }\n        while (child != null && !testChild()) {\n            child = child.getNextSibling();\n        }\n    } else {\n        if (position == 1 && child == null) {\n            child = node.getLastChild();\n        } else {\n            child = child.getPreviousSibling();\n        }\n        while (child != null && !testChild()) {\n            child = child.getPreviousSibling();\n        }\n    }\n    return child != null;\n},boolean next(),"digraph cfg_next {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""2"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean testChild()>()""];\n	""3"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""4"" [label=""$stack12 = interfaceinvoke $stack11.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node node>""];\n	""7"" [label=""$stack15 = interfaceinvoke $stack14.<org.w3c.dom.Node: org.w3c.dom.Node getLastChild()>()""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""10"" [label=""$stack18 = interfaceinvoke $stack17.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>()""];\n	""11"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""12"" [label=""$stack2 = $stack1 + 1""];\n	""13"" [label=""$stack20 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean testChild()>()""];\n	""14"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""15"" [label=""$stack22 = interfaceinvoke $stack21.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>()""];\n	""16"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""17"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node node>""];\n	""18"" [label=""$stack25 = interfaceinvoke $stack24.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>()""];\n	""19"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean reverse>""];\n	""20"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position>""];\n	""21"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""22"" [label=""$stack6 = interfaceinvoke $stack5.<org.w3c.dom.Node: org.w3c.dom.Node getPreviousSibling()>()""];\n	""23"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""24"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""25"" [label=""$stack9 = 0""];\n	""26"" [label=""$stack9 = 1""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""if $stack10 != 0""];\n	""33"" [label=""if $stack13 != null""];\n	""34"" [label=""if $stack16 != 1""];\n	""35"" [label=""if $stack19 == null""];\n	""36"" [label=""if $stack20 != 0""];\n	""37"" [label=""if $stack23 != null""];\n	""38"" [label=""if $stack3 != 0""];\n	""39"" [label=""if $stack4 != 1""];\n	""40"" [label=""if $stack7 == null""];\n	""41"" [label=""if $stack8 == null""];\n	""42"" [label=""return $stack9""];\n	""43"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""44"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position> = $stack2""];\n	""45"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack12""];\n	""46"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack15""];\n	""47"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack18""];\n	""48"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack22""];\n	""49"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack25""];\n	""50"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack6""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""47""[label=""cfg_next""];\n	""11"" -> ""35""[label=""cfg_next""];\n	""12"" -> ""44""[label=""cfg_next""];\n	""13"" -> ""36""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""48""[label=""cfg_next""];\n	""16"" -> ""37""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""49""[label=""cfg_next""];\n	""19"" -> ""38""[label=""cfg_next""];\n	""2"" -> ""32""[label=""cfg_next""];\n	""20"" -> ""39""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""50""[label=""cfg_next""];\n	""23"" -> ""40""[label=""cfg_next""];\n	""24"" -> ""41""[label=""cfg_next""];\n	""25"" -> ""42""[label=""cfg_next""];\n	""26"" -> ""29""[label=""cfg_next""];\n	""27"" -> ""11""[label=""cfg_goto""];\n	""28"" -> ""11""[label=""cfg_goto""];\n	""29"" -> ""42""[label=""cfg_goto""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""23""[label=""cfg_goto""];\n	""31"" -> ""23""[label=""cfg_goto""];\n	""32"" -> ""24""[label=""cfg_true""];\n	""32"" -> ""3""[label=""cfg_false""];\n	""33"" -> ""21""[label=""cfg_true""];\n	""33"" -> ""6""[label=""cfg_false""];\n	""34"" -> ""16""[label=""cfg_false""];\n	""34"" -> ""9""[label=""cfg_true""];\n	""35"" -> ""13""[label=""cfg_false""];\n	""35"" -> ""24""[label=""cfg_true""];\n	""36"" -> ""14""[label=""cfg_false""];\n	""36"" -> ""24""[label=""cfg_true""];\n	""37"" -> ""17""[label=""cfg_false""];\n	""37"" -> ""9""[label=""cfg_true""];\n	""38"" -> ""20""[label=""cfg_true""];\n	""38"" -> ""8""[label=""cfg_false""];\n	""39"" -> ""21""[label=""cfg_true""];\n	""39"" -> ""5""[label=""cfg_false""];\n	""4"" -> ""45""[label=""cfg_next""];\n	""40"" -> ""2""[label=""cfg_false""];\n	""40"" -> ""24""[label=""cfg_true""];\n	""41"" -> ""25""[label=""cfg_true""];\n	""41"" -> ""26""[label=""cfg_false""];\n	""43"" -> ""1""[label=""cfg_next""];\n	""44"" -> ""19""[label=""cfg_next""];\n	""45"" -> ""31""[label=""cfg_next""];\n	""46"" -> ""30""[label=""cfg_next""];\n	""47"" -> ""11""[label=""cfg_next""];\n	""48"" -> ""28""[label=""cfg_next""];\n	""49"" -> ""27""[label=""cfg_next""];\n	""5"" -> ""33""[label=""cfg_next""];\n	""50"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""46""[label=""cfg_next""];\n	""8"" -> ""34""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.testChild(),Method,* Test child.\n     * @return result of the test,"private boolean testChild() {\n    return DOMNodePointer.testNode(child, nodeTest);\n}",boolean testChild(),"digraph cfg_testChild {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child>""];\n	""3"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: boolean testNode(org.w3c.dom.Node,org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack2, $stack1)""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator.<init>(NodePointer,NodeTest,boolean,NodePointer)",Constructor,* Create a new DOMNodeIterator.\n     * @param parent parent pointer\n     * @param nodeTest test\n     * @param reverse whether to iterate in reverse\n     * @param startWith starting pointer,"public DOMNodeIterator(final NodePointer parent, final NodeTest nodeTest, final boolean reverse, final NodePointer startWith) {\n    this.parent = parent;\n    this.node = (Node) parent.getNode();\n    if (startWith != null) {\n        this.child = (Node) startWith.getNode();\n    }\n    this.nodeTest = nodeTest;\n    this.reverse = reverse;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_init {\n	""1"" [label=""$stack5 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""2"" [label=""$stack6 = (org.w3c.dom.Node) $stack5""];\n	""3"" [label=""$stack7 = virtualinvoke startWith.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""4"" [label=""$stack8 = (org.w3c.dom.Node) $stack7""];\n	""5"" [label=""if startWith == null""];\n	""6"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""7"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""8"" [label=""return""];\n	""9"" [label=""reverse := @parameter2: boolean""];\n	""10"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""11"" [label=""startWith := @parameter3: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: boolean reverse> = reverse""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: int position> = 0""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = $stack8""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node child> = null""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNodeIterator: org.w3c.dom.Node node> = $stack6""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.testAttr(Attr),Method,* Test an attribute.\n     * @param attr to test\n     * @return whether test succeeded,"private boolean testAttr(final Attr attr) {\n    final String nodePrefix = DOMNodePointer.getPrefix(attr);\n    final String nodeLocalName = DOMNodePointer.getLocalName(attr);\n    if (nodePrefix != null && nodePrefix.equals(""xmlns"")) {\n        return false;\n    }\n    if (nodePrefix == null && nodeLocalName.equals(""xmlns"")) {\n        return false;\n    }\n    final String testLocalName = name.getName();\n    if (testLocalName.equals(""*"") || testLocalName.equals(nodeLocalName)) {\n        final String testPrefix = name.getPrefix();\n        if (testPrefix == null || Objects.equals(testPrefix, nodePrefix)) {\n            return true;\n        }\n        if (nodePrefix == null) {\n            return false;\n        }\n        return Objects.equals(parent.getNamespaceURI(testPrefix), parent.getNamespaceURI(nodePrefix));\n    }\n    return false;\n}",boolean testAttr(org.w3c.dom.Attr),"digraph cfg_testAttr {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(nodePrefix)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(testPrefix)""];\n	""5"" [label=""$stack14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack13, $stack12)""];\n	""6"" [label=""$stack15 = virtualinvoke testLocalName.<java.lang.String: boolean equals(java.lang.Object)>(nodeLocalName)""];\n	""7"" [label=""$stack16 = virtualinvoke nodeLocalName.<java.lang.String: boolean equals(java.lang.Object)>(\""xmlns\"")""];\n	""8"" [label=""$stack17 = virtualinvoke nodePrefix.<java.lang.String: boolean equals(java.lang.Object)>(\""xmlns\"")""];\n	""9"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.QName name>""];\n	""10"" [label=""$stack7 = virtualinvoke testLocalName.<java.lang.String: boolean equals(java.lang.Object)>(\""*\"")""];\n	""11"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.QName name>""];\n	""12"" [label=""$stack9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(testPrefix, nodePrefix)""];\n	""13"" [label=""attr := @parameter0: org.w3c.dom.Attr""];\n	""14"" [label=""if $stack15 == 0""];\n	""15"" [label=""if $stack16 == 0""];\n	""16"" [label=""if $stack17 == 0""];\n	""17"" [label=""if $stack7 != 0""];\n	""18"" [label=""if $stack9 == 0""];\n	""19"" [label=""if nodePrefix != null""];\n	""20"" [label=""if nodePrefix != null""];\n	""21"" [label=""if nodePrefix == null""];\n	""22"" [label=""if testPrefix == null""];\n	""23"" [label=""nodeLocalName = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLocalName(org.w3c.dom.Node)>(attr)""];\n	""24"" [label=""nodePrefix = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getPrefix(org.w3c.dom.Node)>(attr)""];\n	""25"" [label=""return $stack14""];\n	""26"" [label=""return 0""];\n	""27"" [label=""return 0""];\n	""28"" [label=""return 0""];\n	""29"" [label=""return 0""];\n	""30"" [label=""return 1""];\n	""31"" [label=""testLocalName = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""32"" [label=""testPrefix = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""33"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""32""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_false""];\n	""14"" -> ""28""[label=""cfg_true""];\n	""15"" -> ""27""[label=""cfg_false""];\n	""15"" -> ""9""[label=""cfg_true""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""16"" -> ""26""[label=""cfg_false""];\n	""17"" -> ""11""[label=""cfg_true""];\n	""17"" -> ""6""[label=""cfg_false""];\n	""18"" -> ""20""[label=""cfg_true""];\n	""18"" -> ""30""[label=""cfg_false""];\n	""19"" -> ""7""[label=""cfg_false""];\n	""19"" -> ""9""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_true""];\n	""20"" -> ""29""[label=""cfg_false""];\n	""21"" -> ""19""[label=""cfg_true""];\n	""21"" -> ""8""[label=""cfg_false""];\n	""22"" -> ""12""[label=""cfg_false""];\n	""22"" -> ""30""[label=""cfg_true""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""31"" -> ""10""[label=""cfg_next""];\n	""32"" -> ""22""[label=""cfg_next""];\n	""33"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""25""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""31""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.getAttribute(Element,QName)",Method,* Gets the named attribute.\n     * @param element to search\n     * @param name to match\n     * @return Attr found,"private Attr getAttribute(final Element element, final QName name) {\n    final String testPrefix = name.getPrefix();\n    String testNS = null;\n    if (testPrefix != null) {\n        testNS = parent.getNamespaceResolver().getNamespaceURI(testPrefix);\n    }\n    if (testNS != null) {\n        Attr attr = element.getAttributeNodeNS(testNS, name.getName());\n        if (attr != null) {\n            return attr;\n        }\n        // This may mean that the parser does not support NS for\n        // attributes, example - the version of Crimson bundled\n        // with JDK 1.4.0\n        final NamedNodeMap nnm = element.getAttributes();\n        for (int i = 0; i < nnm.getLength(); i++) {\n            attr = (Attr) nnm.item(i);\n            if (testAttr(attr)) {\n                return attr;\n            }\n        }\n        return null;\n    }\n    return element.getAttributeNode(name.getName());\n}","org.w3c.dom.Attr getAttribute(org.w3c.dom.Element,org.apache.commons.jxpath.ri.QName)","digraph cfg_getAttribute {\n	""1"" [label=""$stack10 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke nnm.<org.w3c.dom.NamedNodeMap: int getLength()>()""];\n	""3"" [label=""$stack12 = interfaceinvoke nnm.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i)""];\n	""4"" [label=""$stack13 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: boolean testAttr(org.w3c.dom.Attr)>(attr)""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""7"" [label=""$stack8 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""8"" [label=""$stack9 = interfaceinvoke element.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>($stack8)""];\n	""9"" [label=""attr = (org.w3c.dom.Attr) $stack12""];\n	""10"" [label=""attr = interfaceinvoke element.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>(testNS, $stack10)""];\n	""11"" [label=""element := @parameter0: org.w3c.dom.Element""];\n	""12"" [label=""goto""];\n	""13"" [label=""i = 0""];\n	""14"" [label=""i = i + 1""];\n	""15"" [label=""if $stack13 == 0""];\n	""16"" [label=""if attr == null""];\n	""17"" [label=""if i >= $stack11""];\n	""18"" [label=""if testNS == null""];\n	""19"" [label=""if testPrefix == null""];\n	""20"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""21"" [label=""nnm = interfaceinvoke element.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>()""];\n	""22"" [label=""return $stack9""];\n	""23"" [label=""return attr""];\n	""24"" [label=""return attr""];\n	""25"" [label=""return null""];\n	""26"" [label=""testNS = null""];\n	""27"" [label=""testNS = virtualinvoke $stack15.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getNamespaceURI(java.lang.String)>(testPrefix)""];\n	""28"" [label=""testPrefix = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_goto""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_true""];\n	""15"" -> ""24""[label=""cfg_false""];\n	""16"" -> ""21""[label=""cfg_true""];\n	""16"" -> ""23""[label=""cfg_false""];\n	""17"" -> ""25""[label=""cfg_true""];\n	""17"" -> ""3""[label=""cfg_false""];\n	""18"" -> ""1""[label=""cfg_false""];\n	""18"" -> ""7""[label=""cfg_true""];\n	""19"" -> ""18""[label=""cfg_true""];\n	""19"" -> ""5""[label=""cfg_false""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""20"" -> ""28""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""26"" -> ""19""[label=""cfg_next""];\n	""27"" -> ""18""[label=""cfg_next""];\n	""28"" -> ""26""[label=""cfg_next""];\n	""29"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""27""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""22""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.getNodePointer(),Method,No Comment,"@Override\npublic NodePointer getNodePointer() {\n    if (position == 0) {\n        if (!setPosition(1)) {\n            return null;\n        }\n        position = 0;\n    }\n    int index = position - 1;\n    if (index < 0) {\n        index = 0;\n    }\n    return new DOMAttributePointer(parent, (Attr) attributes.get(index));\n}",org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: int position>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: int position>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: java.util.List attributes>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack6 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(index)""];\n	""6"" [label=""$stack7 = (org.w3c.dom.Attr) $stack6""];\n	""7"" [label=""$stack8 = new org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer""];\n	""8"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: boolean setPosition(int)>(1)""];\n	""9"" [label=""if $stack2 != 0""];\n	""10"" [label=""if $stack9 != 0""];\n	""11"" [label=""if index >= 0""];\n	""12"" [label=""index = $stack3 - 1""];\n	""13"" [label=""index = 0""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""return null""];\n	""16"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.model.dom.DOMAttributePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.w3c.dom.Attr)>($stack5, $stack7)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: int position> = 0""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_false""];\n	""10"" -> ""18""[label=""cfg_true""];\n	""11"" -> ""13""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""8""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    this.position = position;\n    return position >= 1 && position <= attributes.size();\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: java.util.List attributes>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<java.util.List: int size()>()""];\n	""3"" [label=""$stack4 = 0""];\n	""4"" [label=""$stack4 = 1""];\n	""5"" [label=""goto""];\n	""6"" [label=""if position < 1""];\n	""7"" [label=""if position > $stack3""];\n	""8"" [label=""position := @parameter0: int""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: int position> = position""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_goto""];\n	""6"" -> ""1""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator.<init>(NodePointer,QName)",Constructor,* Create a new DOMAttributeIterator.\n     * @param parent pointer\n     * @param name to test,"public DOMAttributeIterator(final NodePointer parent, final QName name) {\n    this.parent = parent;\n    this.name = name;\n    attributes = new ArrayList();\n    final Node node = (Node) parent.getNode();\n    if (node.getNodeType() == Node.ELEMENT_NODE) {\n        final String lname = name.getName();\n        if (!lname.equals(""*"")) {\n            final Attr attr = getAttribute((Element) node, name);\n            if (attr != null) {\n                attributes.add(attr);\n            }\n        } else {\n            final NamedNodeMap map = node.getAttributes();\n            final int count = map.getLength();\n            for (int i = 0; i < count; i++) {\n                final Attr attr = (Attr) map.item(i);\n                if (testAttr(attr)) {\n                    attributes.add(attr);\n                }\n            }\n        }\n    }\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)","digraph cfg_init {\n	""1"" [label=""$stack10 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke node.<org.w3c.dom.Node: short getNodeType()>()""];\n	""3"" [label=""$stack12 = virtualinvoke lname.<java.lang.String: boolean equals(java.lang.Object)>(\""*\"")""];\n	""4"" [label=""$stack13 = interfaceinvoke attr.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i)""];\n	""5"" [label=""$stack14 = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: boolean testAttr(org.w3c.dom.Attr)>(attr_1)""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: java.util.List attributes>""];\n	""7"" [label=""$stack16 = (org.w3c.dom.Element) node""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: java.util.List attributes>""];\n	""9"" [label=""$stack9 = new java.util.ArrayList""];\n	""10"" [label=""attr = interfaceinvoke node.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>()""];\n	""11"" [label=""attr = specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.w3c.dom.Attr getAttribute(org.w3c.dom.Element,org.apache.commons.jxpath.ri.QName)>($stack16, name)""];\n	""12"" [label=""attr_1 = (org.w3c.dom.Attr) $stack13""];\n	""13"" [label=""count = interfaceinvoke attr.<org.w3c.dom.NamedNodeMap: int getLength()>()""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""i = 0""];\n	""17"" [label=""i = i + 1""];\n	""18"" [label=""if $stack11 != 1""];\n	""19"" [label=""if $stack12 != 0""];\n	""20"" [label=""if $stack14 == 0""];\n	""21"" [label=""if attr == null""];\n	""22"" [label=""if i >= count""];\n	""23"" [label=""interfaceinvoke $stack15.<java.util.List: boolean add(java.lang.Object)>(attr_1)""];\n	""24"" [label=""interfaceinvoke $stack17.<java.util.List: boolean add(java.lang.Object)>(attr)""];\n	""25"" [label=""lname = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""26"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""27"" [label=""node = (org.w3c.dom.Node) $stack10""];\n	""28"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""29"" [label=""return""];\n	""30"" [label=""specialinvoke $stack9.<java.util.ArrayList: void <init>()>()""];\n	""31"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""32"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator""];\n	""33"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: int position> = 0""];\n	""34"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: java.util.List attributes> = $stack9""];\n	""35"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.QName name> = name""];\n	""36"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""29""[label=""cfg_goto""];\n	""15"" -> ""22""[label=""cfg_goto""];\n	""16"" -> ""22""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_false""];\n	""18"" -> ""29""[label=""cfg_true""];\n	""19"" -> ""10""[label=""cfg_true""];\n	""19"" -> ""7""[label=""cfg_false""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_true""];\n	""20"" -> ""6""[label=""cfg_false""];\n	""21"" -> ""14""[label=""cfg_true""];\n	""21"" -> ""8""[label=""cfg_false""];\n	""22"" -> ""29""[label=""cfg_true""];\n	""22"" -> ""4""[label=""cfg_false""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""14""[label=""cfg_next""];\n	""25"" -> ""3""[label=""cfg_next""];\n	""26"" -> ""31""[label=""cfg_next""];\n	""27"" -> ""2""[label=""cfg_next""];\n	""28"" -> ""26""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""30"" -> ""34""[label=""cfg_next""];\n	""31"" -> ""33""[label=""cfg_next""];\n	""32"" -> ""28""[label=""cfg_next""];\n	""33"" -> ""36""[label=""cfg_next""];\n	""34"" -> ""1""[label=""cfg_next""];\n	""35"" -> ""9""[label=""cfg_next""];\n	""36"" -> ""35""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""30""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return DOM_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 100""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n    return bean instanceof Node ? new DOMNodePointer((Node) bean, locale) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.w3c.dom.Node""];\n	""2"" [label=""$stack5 = (org.w3c.dom.Node) bean""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""bean := @parameter1: java.lang.Object""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""locale := @parameter2: java.util.Locale""];\n	""9"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: void <init>(org.w3c.dom.Node,java.util.Locale)>($stack5, locale)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    return bean instanceof Node ? new DOMNodePointer(parent, (Node) bean) : null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.w3c.dom.Node""];\n	""2"" [label=""$stack5 = (org.w3c.dom.Node) bean""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.dom.DOMNodePointer""];\n	""4"" [label=""$stack6 = null""];\n	""5"" [label=""bean := @parameter2: java.lang.Object""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""9"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.w3c.dom.Node)>(parent, $stack5)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMPointerFactory""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.collectNamespaces(List,Node)",Method,* Collect namespaces from attribute nodes.\n     * @param attributes attribute list\n     * @param node target node,"private void collectNamespaces(final List attributes, Node node) {\n    final Node parent = node.getParentNode();\n    if (parent != null) {\n        collectNamespaces(attributes, parent);\n    }\n    if (node.getNodeType() == Node.DOCUMENT_NODE) {\n        node = ((Document) node).getDocumentElement();\n    }\n    if (node.getNodeType() == Node.ELEMENT_NODE) {\n        final NamedNodeMap map = node.getAttributes();\n        final int count = map.getLength();\n        for (int i = 0; i < count; i++) {\n            final Attr attr = (Attr) map.item(i);\n            final String prefix = DOMNodePointer.getPrefix(attr);\n            final String name = DOMNodePointer.getLocalName(attr);\n            if (prefix != null && prefix.equals(""xmlns"") || prefix == null && name.equals(""xmlns"")) {\n                attributes.add(attr);\n            }\n        }\n    }\n}","void collectNamespaces(java.util.List,org.w3c.dom.Node)","digraph cfg_collectNamespaces {\n	""1"" [label=""$stack10 = interfaceinvoke node.<org.w3c.dom.Node: short getNodeType()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke node.<org.w3c.dom.Node: short getNodeType()>()""];\n	""3"" [label=""$stack12 = interfaceinvoke map.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i)""];\n	""4"" [label=""$stack13 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>(\""xmlns\"")""];\n	""5"" [label=""$stack14 = virtualinvoke prefix.<java.lang.String: boolean equals(java.lang.Object)>(\""xmlns\"")""];\n	""6"" [label=""$stack15 = (org.w3c.dom.Document) node""];\n	""7"" [label=""attr = (org.w3c.dom.Attr) $stack12""];\n	""8"" [label=""attributes := @parameter0: java.util.List""];\n	""9"" [label=""count = interfaceinvoke map.<org.w3c.dom.NamedNodeMap: int getLength()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""i = 0""];\n	""12"" [label=""i = i + 1""];\n	""13"" [label=""if $stack10 != 9""];\n	""14"" [label=""if $stack11 != 1""];\n	""15"" [label=""if $stack13 == 0""];\n	""16"" [label=""if $stack14 != 0""];\n	""17"" [label=""if i >= count""];\n	""18"" [label=""if parent == null""];\n	""19"" [label=""if prefix != null""];\n	""20"" [label=""if prefix == null""];\n	""21"" [label=""interfaceinvoke attributes.<java.util.List: boolean add(java.lang.Object)>(attr)""];\n	""22"" [label=""map = interfaceinvoke node.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>()""];\n	""23"" [label=""name = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLocalName(org.w3c.dom.Node)>(attr)""];\n	""24"" [label=""node := @parameter1: org.w3c.dom.Node""];\n	""25"" [label=""node = interfaceinvoke $stack15.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>()""];\n	""26"" [label=""parent = interfaceinvoke node.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>()""];\n	""27"" [label=""prefix = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getPrefix(org.w3c.dom.Node)>(attr)""];\n	""28"" [label=""return""];\n	""29"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: void collectNamespaces(java.util.List,org.w3c.dom.Node)>(attributes, parent)""];\n	""30"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_goto""];\n	""11"" -> ""17""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""6""[label=""cfg_false""];\n	""14"" -> ""22""[label=""cfg_false""];\n	""14"" -> ""28""[label=""cfg_true""];\n	""15"" -> ""12""[label=""cfg_true""];\n	""15"" -> ""21""[label=""cfg_false""];\n	""16"" -> ""19""[label=""cfg_false""];\n	""16"" -> ""21""[label=""cfg_true""];\n	""17"" -> ""28""[label=""cfg_true""];\n	""17"" -> ""3""[label=""cfg_false""];\n	""18"" -> ""1""[label=""cfg_true""];\n	""18"" -> ""29""[label=""cfg_false""];\n	""19"" -> ""12""[label=""cfg_true""];\n	""19"" -> ""4""[label=""cfg_false""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_true""];\n	""20"" -> ""5""[label=""cfg_false""];\n	""21"" -> ""12""[label=""cfg_next""];\n	""22"" -> ""9""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""2""[label=""cfg_next""];\n	""26"" -> ""18""[label=""cfg_next""];\n	""27"" -> ""23""[label=""cfg_next""];\n	""29"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""30"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.getNodePointer(),Method,No Comment,"@Override\npublic NodePointer getNodePointer() {\n    if (position == 0) {\n        if (!setPosition(1)) {\n            return null;\n        }\n        position = 0;\n    }\n    int index = position - 1;\n    if (index < 0) {\n        index = 0;\n    }\n    String prefix = """";\n    final Attr attr = (Attr) attributes.get(index);\n    final String name = attr.getPrefix();\n    if (name != null && name.equals(""xmlns"")) {\n        prefix = DOMNodePointer.getLocalName(attr);\n    }\n    return new NamespacePointer(parent, prefix, attr.getValue());\n}",org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack10 = interfaceinvoke attr.<org.w3c.dom.Attr: java.lang.String getValue()>()""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.model.dom.NamespacePointer""];\n	""3"" [label=""$stack12 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>(\""xmlns\"")""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: boolean setPosition(int)>(1)""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: int position>""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: int position>""];\n	""7"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: java.util.List attributes>""];\n	""8"" [label=""$stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>(index)""];\n	""9"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""10"" [label=""attr = (org.w3c.dom.Attr) $stack8""];\n	""11"" [label=""if $stack12 == 0""];\n	""12"" [label=""if $stack13 != 0""];\n	""13"" [label=""if $stack5 != 0""];\n	""14"" [label=""if index >= 0""];\n	""15"" [label=""if name == null""];\n	""16"" [label=""index = $stack6 - 1""];\n	""17"" [label=""index = 0""];\n	""18"" [label=""name = interfaceinvoke attr.<org.w3c.dom.Attr: java.lang.String getPrefix()>()""];\n	""19"" [label=""prefix = \""\""""];\n	""20"" [label=""prefix = staticinvoke <org.apache.commons.jxpath.ri.model.dom.DOMNodePointer: java.lang.String getLocalName(org.w3c.dom.Node)>(attr)""];\n	""21"" [label=""return $stack11""];\n	""22"" [label=""return null""];\n	""23"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.model.dom.NamespacePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String,java.lang.String)>($stack9, prefix, $stack10)""];\n	""24"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: int position> = 0""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""20""[label=""cfg_false""];\n	""12"" -> ""22""[label=""cfg_false""];\n	""12"" -> ""25""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""13"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""17""[label=""cfg_false""];\n	""14"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""2""[label=""cfg_true""];\n	""15"" -> ""3""[label=""cfg_false""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_next""];\n	""19"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""5""[label=""cfg_next""];\n	""25"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    this.position = position;\n    return position >= 1 && position <= attributes.size();\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: java.util.List attributes>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<java.util.List: int size()>()""];\n	""3"" [label=""$stack4 = 0""];\n	""4"" [label=""$stack4 = 1""];\n	""5"" [label=""goto""];\n	""6"" [label=""if position < 1""];\n	""7"" [label=""if position > $stack3""];\n	""8"" [label=""position := @parameter0: int""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: int position> = position""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_goto""];\n	""6"" -> ""1""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator.<init>(NodePointer),Constructor,* Create a new DOMNamespaceIterator.\n     * @param parent parent pointer,"public DOMNamespaceIterator(final NodePointer parent) {\n    this.parent = parent;\n    attributes = new ArrayList();\n    collectNamespaces(attributes, (Node) parent.getNode());\n}",void <init>(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_init {\n	""1"" [label=""$stack2 = new java.util.ArrayList""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: java.util.List attributes>""];\n	""3"" [label=""$stack4 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""4"" [label=""$stack5 = (org.w3c.dom.Node) $stack4""];\n	""5"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke $stack2.<java.util.ArrayList: void <init>()>()""];\n	""8"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""9"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: void collectNamespaces(java.util.List,org.w3c.dom.Node)>($stack3, $stack5)""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: int position> = 0""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: java.util.List attributes> = $stack2""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.model.dom.DOMNamespaceIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointerFactory.contextWrapper(JXPathContext),Method,* VariableContextWrapper factory method.\n     * @param context the JXPathContext to wrap.\n     * @return VariableContextWrapper.,public static VariableContextWrapper contextWrapper(final JXPathContext context) {\n    return new VariableContextWrapper(context);\n},org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper contextWrapper(org.apache.commons.jxpath.JXPathContext),"digraph cfg_contextWrapper {\n	""1"" [label=""$stack1 = new org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""return $stack1""];\n	""4"" [label=""specialinvoke $stack1.<org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper: void <init>(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.model.VariablePointerFactory$1)>(context, null)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.model.VariablePointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object object, final Locale locale) {\n    if (object instanceof VariableContextWrapper) {\n        JXPathContext varCtx = ((VariableContextWrapper) object).getContext();\n        while (varCtx != null) {\n            final Variables vars = varCtx.getVariables();\n            if (vars.isDeclaredVariable(name.toString())) {\n                return new VariablePointer(vars, name);\n            }\n            varCtx = varCtx.getParentContext();\n        }\n        // The variable is not declared, but we will create\n        // a pointer anyway in case the user wants to set, rather\n        // than get, the value of the variable.\n        return new VariablePointer(name);\n    }\n    return null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack10 = interfaceinvoke vars.<org.apache.commons.jxpath.Variables: boolean isDeclaredVariable(java.lang.String)>($stack9)""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""3"" [label=""$stack6 = object instanceof org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper""];\n	""4"" [label=""$stack7 = (org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper) object""];\n	""5"" [label=""$stack8 = new org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""6"" [label=""$stack9 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack10 == 0""];\n	""9"" [label=""if $stack6 == 0""];\n	""10"" [label=""if varCtx == null""];\n	""11"" [label=""locale := @parameter2: java.util.Locale""];\n	""12"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""13"" [label=""object := @parameter1: java.lang.Object""];\n	""14"" [label=""return $stack11""];\n	""15"" [label=""return $stack8""];\n	""16"" [label=""return null""];\n	""17"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.model.VariablePointer: void <init>(org.apache.commons.jxpath.Variables,org.apache.commons.jxpath.ri.QName)>(vars, name)""];\n	""18"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.model.VariablePointer: void <init>(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointerFactory""];\n	""20"" [label=""varCtx = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper: org.apache.commons.jxpath.JXPathContext getContext()>()""];\n	""21"" [label=""varCtx = virtualinvoke varCtx.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext getParentContext()>()""];\n	""22"" [label=""vars = virtualinvoke varCtx.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Variables getVariables()>()""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_false""];\n	""10"" -> ""5""[label=""cfg_true""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_next""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""22"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""21""[label=""cfg_true""];\n	""9"" -> ""16""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.VariablePointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object object) {\n    return createNodePointer(name, object, null);\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.VariablePointerFactory: org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>(name, object, null)""];\n	""2"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""object := @parameter2: java.lang.Object""];\n	""4"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointerFactory""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return VARIABLE_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 890""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper.getContext(),Method,* Gets the original (unwrapped) context.\n         *\n         * @return JXPathContext.,public JXPathContext getContext() {\n    return context;\n},org.apache.commons.jxpath.JXPathContext getContext(),"digraph cfg_getContext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper: org.apache.commons.jxpath.JXPathContext context>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper.<init>(JXPathContext),Constructor,* Create a new VariableContextWrapper.\n         * @param context to wrap,private VariableContextWrapper(final JXPathContext context) {\n    this.context = context;\n},void <init>(org.apache.commons.jxpath.JXPathContext),"digraph cfg_init {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper: org.apache.commons.jxpath.JXPathContext context> = context""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.getName(),Method,No Comment,"@Override\npublic QName getName() {\n    return new QName(JDOMNodePointer.getPrefix(attr), JDOMNodePointer.getLocalName(attr));\n}",org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""3"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getLocalName(java.lang.Object)>($stack2)""];\n	""4"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getPrefix(java.lang.Object)>($stack1)""];\n	""5"" [label=""$stack5 = new org.apache.commons.jxpath.ri.QName""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.getNamespaceURI(),Method,No Comment,@Override\npublic String getNamespaceURI() {\n    String uri = attr.getNamespaceURI();\n    if (uri != null && uri.isEmpty()) {\n        uri = null;\n    }\n    return uri;\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""$stack3 = virtualinvoke uri.<java.lang.String: boolean isEmpty()>()""];\n	""3"" [label=""if $stack3 == 0""];\n	""4"" [label=""if uri == null""];\n	""5"" [label=""return uri""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""7"" [label=""uri = null""];\n	""8"" [label=""uri = virtualinvoke $stack2.<org.jdom.Attribute: java.lang.String getNamespaceURI()>()""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""7""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.getValue(),Method,No Comment,@Override\npublic Object getValue() {\n    return attr.getValue();\n},java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.jdom.Attribute: java.lang.String getValue()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return attr;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return attr;\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.isActual(),Method,No Comment,@Override\npublic boolean isActual() {\n    return true;\n},boolean isActual(),"digraph cfg_isActual {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.setValue(Object),Method,No Comment,"@Override\npublic void setValue(final Object value) {\n    attr.setValue((String) TypeUtils.convert(value, String.class));\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, class \""Ljava/lang/String;\"")""];\n	""3"" [label=""$stack4 = (java.lang.String) $stack3""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""6"" [label=""value := @parameter0: java.lang.Object""];\n	""7"" [label=""virtualinvoke $stack2.<org.jdom.Attribute: org.jdom.Attribute setValue(java.lang.String)>($stack4)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.remove(),Method,No Comment,@Override\npublic void remove() {\n    attr.getParent().removeAttribute(attr);\n},void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack1.<org.jdom.Attribute: org.jdom.Element getParent()>()""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""6"" [label=""virtualinvoke $stack3.<org.jdom.Element: boolean removeAttribute(org.jdom.Attribute)>($stack2)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.asPath(),Method,No Comment,@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n        if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n            buffer.append('/');\n        }\n    }\n    buffer.append('@');\n    buffer.append(getName());\n    return buffer.toString();\n},java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = $stack9 - 1""];\n	""2"" [label=""$stack11 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack10)""];\n	""3"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""6"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""9"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""10"" [label=""$stack9 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""11"" [label=""buffer = $stack2""];\n	""12"" [label=""if $stack11 == 47""];\n	""13"" [label=""if $stack3 == null""];\n	""14"" [label=""if $stack8 == 0""];\n	""15"" [label=""return $stack5""];\n	""16"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64)""];\n	""20"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack4)""];\n	""21"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_false""];\n	""12"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_false""];\n	""14"" -> ""10""[label=""cfg_false""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return System.identityHashCode(attr);\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""2"" [label=""$stack2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    return object == this || object instanceof JDOMAttributePointer && ((JDOMAttributePointer) object).attr == attr;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack2 = object instanceof org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer) object""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""6"" [label=""$stack6 = $stack4.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr>""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""if $stack6 != $stack5""];\n	""10"" [label=""if object == this""];\n	""11"" [label=""object := @parameter0: java.lang.Object""];\n	""12"" [label=""return $stack3""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    // Won't happen - attributes don't have children\n    return 0;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return 0""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer.<init>(NodePointer,Attribute)",Constructor,* Create a JDOMAttributePointer.\n     * @param parent NodePointer parent\n     * @param attr JDOM Attribute,"public JDOMAttributePointer(final NodePointer parent, final Attribute attr) {\n    super(parent);\n    this.attr = attr;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.jdom.Attribute)","digraph cfg_init {\n	""1"" [label=""attr := @parameter1: org.jdom.Attribute""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: org.jdom.Attribute attr> = attr""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.childIterator(NodeTest,boolean,NodePointer)",Method,No Comment,"@Override\npublic NodeIterator childIterator(final NodeTest test, final boolean reverse, final NodePointer startWith) {\n    return new JDOMNodeIterator(this, test, reverse, startWith);\n}","org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_childIterator {\n	""1"" [label=""$stack4 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""2"" [label=""return $stack4""];\n	""3"" [label=""reverse := @parameter1: boolean""];\n	""4"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(this, test, reverse, startWith)""];\n	""5"" [label=""startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.attributeIterator(QName),Method,No Comment,"@Override\npublic NodeIterator attributeIterator(final QName name) {\n    return new JDOMAttributeIterator(this, name);\n}",org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName),"digraph cfg_attributeIterator {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator""];\n	""2"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(this, name)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.namespaceIterator(),Method,No Comment,@Override\npublic NodeIterator namespaceIterator() {\n    return new JDOMNamespaceIterator(this);\n},org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator(),"digraph cfg_namespaceIterator {\n	""1"" [label=""$stack1 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(this)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.namespacePointer(String),Method,No Comment,"@Override\npublic NodePointer namespacePointer(final String prefix) {\n    return new JDOMNamespacePointer(this, prefix);\n}",org.apache.commons.jxpath.ri.model.NodePointer namespacePointer(java.lang.String),"digraph cfg_namespacePointer {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""2"" [label=""prefix := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>(this, prefix)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getNamespaceURI(),Method,No Comment,@Override\npublic String getNamespaceURI() {\n    return getNamespaceURI(node);\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getNamespaceURI(java.lang.Object)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getNamespaceURI(Object),Method,* Gets the ns uri of the specified node.\n     * @param node Node to check\n     * @return String,"private static String getNamespaceURI(final Object node) {\n    if (node instanceof Element) {\n        final Element element = (Element) node;\n        String ns = element.getNamespaceURI();\n        if ("""".equals(ns)) {\n            ns = null;\n        }\n        return ns;\n    }\n    return null;\n}",java.lang.String getNamespaceURI(java.lang.Object),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack3 = node instanceof org.jdom.Element""];\n	""2"" [label=""$stack4 = \""\""""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>(ns)""];\n	""4"" [label=""element = (org.jdom.Element) node""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""if $stack5 == 0""];\n	""7"" [label=""node := @parameter0: java.lang.Object""];\n	""8"" [label=""ns = null""];\n	""9"" [label=""ns = virtualinvoke element.<org.jdom.Element: java.lang.String getNamespaceURI()>()""];\n	""10"" [label=""return ns""];\n	""11"" [label=""return null""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getNamespaceResolver(),Method,No Comment,@Override\npublic synchronized NamespaceResolver getNamespaceResolver() {\n    if (localNamespaceResolver == null) {\n        localNamespaceResolver = new NamespaceResolver(super.getNamespaceResolver());\n        localNamespaceResolver.setNamespaceContextPointer(this);\n    }\n    return localNamespaceResolver;\n},org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver(),"digraph cfg_getNamespaceResolver {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver>""];\n	""3"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""4"" [label=""$stack4 = new org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver>""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.NamespaceResolver: void <init>(org.apache.commons.jxpath.ri.NamespaceResolver)>($stack3)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver localNamespaceResolver> = $stack4""];\n	""11"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.NamespaceResolver: void setNamespaceContextPointer(org.apache.commons.jxpath.ri.model.NodePointer)>(this)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getNamespaceURI(String),Method,No Comment,"@Override\npublic String getNamespaceURI(final String prefix) {\n    if (prefix.equals(""xml"")) {\n        return Namespace.XML_NAMESPACE.getURI();\n    }\n    Element element = null;\n    if (node instanceof Document) {\n        element = ((Document) node).getRootElement();\n    }\n    if (node instanceof Element) {\n        element = (Element) node;\n    }\n    if (element == null) {\n        return null;\n    }\n    final Namespace ns = element.getNamespace(prefix);\n    return ns == null ? null : ns.getURI();\n}",java.lang.String getNamespaceURI(java.lang.String),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""3"" [label=""$stack12 = (org.jdom.Document) $stack11""];\n	""4"" [label=""$stack13 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<org.jdom.Namespace: java.lang.String getURI()>()""];\n	""6"" [label=""$stack4 = virtualinvoke prefix.<java.lang.String: boolean equals(java.lang.Object)>(\""xml\"")""];\n	""7"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""8"" [label=""$stack6 = $stack5 instanceof org.jdom.Document""];\n	""9"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""10"" [label=""$stack8 = $stack7 instanceof org.jdom.Element""];\n	""11"" [label=""$stack9 = null""];\n	""12"" [label=""$stack9 = virtualinvoke ns.<org.jdom.Namespace: java.lang.String getURI()>()""];\n	""13"" [label=""element = (org.jdom.Element) $stack10""];\n	""14"" [label=""element = null""];\n	""15"" [label=""element = virtualinvoke $stack12.<org.jdom.Document: org.jdom.Element getRootElement()>()""];\n	""16"" [label=""goto""];\n	""17"" [label=""if $stack4 == 0""];\n	""18"" [label=""if $stack6 == 0""];\n	""19"" [label=""if $stack8 == 0""];\n	""20"" [label=""if element != null""];\n	""21"" [label=""if ns != null""];\n	""22"" [label=""ns = virtualinvoke element.<org.jdom.Element: org.jdom.Namespace getNamespace(java.lang.String)>(prefix)""];\n	""23"" [label=""prefix := @parameter0: java.lang.String""];\n	""24"" [label=""return $stack14""];\n	""25"" [label=""return $stack9""];\n	""26"" [label=""return null""];\n	""27"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""25""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_goto""];\n	""17"" -> ""14""[label=""cfg_true""];\n	""17"" -> ""4""[label=""cfg_false""];\n	""18"" -> ""2""[label=""cfg_false""];\n	""18"" -> ""9""[label=""cfg_true""];\n	""19"" -> ""1""[label=""cfg_false""];\n	""19"" -> ""20""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_true""];\n	""20"" -> ""26""[label=""cfg_false""];\n	""21"" -> ""11""[label=""cfg_false""];\n	""21"" -> ""12""[label=""cfg_true""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""6""[label=""cfg_next""];\n	""27"" -> ""23""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    final Object node1 = pointer1.getBaseValue();\n    final Object node2 = pointer2.getBaseValue();\n    if (node1 == node2) {\n        return 0;\n    }\n    if (node1 instanceof Attribute && !(node2 instanceof Attribute)) {\n        return -1;\n    }\n    if (!(node1 instanceof Attribute) && node2 instanceof Attribute) {\n        return 1;\n    }\n    if (node1 instanceof Attribute && node2 instanceof Attribute) {\n        final List list = ((Element) getNode()).getAttributes();\n        final int length = list.size();\n        for (int i = 0; i < length; i++) {\n            final Object n = list.get(i);\n            if (n == node1) {\n                return -1;\n            } else if (n == node2) {\n                return 1;\n            }\n        }\n        // Should not happen\n        return 0;\n    }\n    if (!(node instanceof Element)) {\n        throw new IllegalStateException(""JXPath internal error: "" + ""compareChildNodes called for "" + node);\n    }\n    final List children = ((Element) node).getContent();\n    final int length = children.size();\n    for (int i = 0; i < length; i++) {\n        final Object n = children.get(i);\n        if (n == node1) {\n            return -1;\n        }\n        if (n == node2) {\n            return 1;\n        }\n    }\n    return 0;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""$stack10 = node1 instanceof org.jdom.Attribute""];\n	""2"" [label=""$stack11 = node1 instanceof org.jdom.Attribute""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""4"" [label=""$stack13 = $stack12 instanceof org.jdom.Element""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""6"" [label=""$stack15 = (org.jdom.Element) $stack14""];\n	""7"" [label=""$stack16 = new java.lang.StringBuilder""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""9"" [label=""$stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""JXPath internal error: compareChildNodes called for \"")""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17)""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack21 = new java.lang.IllegalStateException""];\n	""13"" [label=""$stack22 = node2 instanceof org.jdom.Attribute""];\n	""14"" [label=""$stack23 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object getNode()>()""];\n	""15"" [label=""$stack24 = (org.jdom.Element) $stack23""];\n	""16"" [label=""$stack25 = node2 instanceof org.jdom.Attribute""];\n	""17"" [label=""$stack26 = node2 instanceof org.jdom.Attribute""];\n	""18"" [label=""$stack9 = node1 instanceof org.jdom.Attribute""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""i = 0""];\n	""22"" [label=""i = 0""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""i = i + 1""];\n	""25"" [label=""if $stack10 != 0""];\n	""26"" [label=""if $stack11 == 0""];\n	""27"" [label=""if $stack13 != 0""];\n	""28"" [label=""if $stack22 == 0""];\n	""29"" [label=""if $stack25 == 0""];\n	""30"" [label=""if $stack26 != 0""];\n	""31"" [label=""if $stack9 == 0""];\n	""32"" [label=""if i >= length""];\n	""33"" [label=""if i >= length""];\n	""34"" [label=""if n != node1""];\n	""35"" [label=""if n != node1""];\n	""36"" [label=""if n != node2""];\n	""37"" [label=""if n != node2""];\n	""38"" [label=""if node1 != node2""];\n	""39"" [label=""length = interfaceinvoke list.<java.util.List: int size()>()""];\n	""40"" [label=""length = interfaceinvoke list.<java.util.List: int size()>()""];\n	""41"" [label=""list = virtualinvoke $stack15.<org.jdom.Element: java.util.List getContent()>()""];\n	""42"" [label=""list = virtualinvoke $stack24.<org.jdom.Element: java.util.List getAttributes()>()""];\n	""43"" [label=""n = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(i)""];\n	""44"" [label=""n = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(i)""];\n	""45"" [label=""node1 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getBaseValue()>()""];\n	""46"" [label=""node2 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getBaseValue()>()""];\n	""47"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""48"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""49"" [label=""return -1""];\n	""50"" [label=""return -1""];\n	""51"" [label=""return -1""];\n	""52"" [label=""return 0""];\n	""53"" [label=""return 0""];\n	""54"" [label=""return 0""];\n	""55"" [label=""return 1""];\n	""56"" [label=""return 1""];\n	""57"" [label=""return 1""];\n	""58"" [label=""specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>()""];\n	""59"" [label=""specialinvoke $stack21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack20)""];\n	""60"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""61"" [label=""throw $stack21""];\n	""1"" -> ""25""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""59""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""42""[label=""cfg_next""];\n	""16"" -> ""29""[label=""cfg_next""];\n	""17"" -> ""30""[label=""cfg_next""];\n	""18"" -> ""31""[label=""cfg_next""];\n	""19"" -> ""32""[label=""cfg_goto""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""33""[label=""cfg_goto""];\n	""21"" -> ""32""[label=""cfg_next""];\n	""22"" -> ""33""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""24"" -> ""20""[label=""cfg_next""];\n	""25"" -> ""16""[label=""cfg_false""];\n	""25"" -> ""2""[label=""cfg_true""];\n	""26"" -> ""13""[label=""cfg_false""];\n	""26"" -> ""3""[label=""cfg_true""];\n	""27"" -> ""12""[label=""cfg_false""];\n	""27"" -> ""5""[label=""cfg_true""];\n	""28"" -> ""14""[label=""cfg_false""];\n	""28"" -> ""3""[label=""cfg_true""];\n	""29"" -> ""2""[label=""cfg_true""];\n	""29"" -> ""55""[label=""cfg_false""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_true""];\n	""30"" -> ""49""[label=""cfg_false""];\n	""31"" -> ""1""[label=""cfg_true""];\n	""31"" -> ""17""[label=""cfg_false""];\n	""32"" -> ""43""[label=""cfg_false""];\n	""32"" -> ""53""[label=""cfg_true""];\n	""33"" -> ""44""[label=""cfg_false""];\n	""33"" -> ""54""[label=""cfg_true""];\n	""34"" -> ""36""[label=""cfg_true""];\n	""34"" -> ""50""[label=""cfg_false""];\n	""35"" -> ""37""[label=""cfg_true""];\n	""35"" -> ""51""[label=""cfg_false""];\n	""36"" -> ""23""[label=""cfg_true""];\n	""36"" -> ""56""[label=""cfg_false""];\n	""37"" -> ""24""[label=""cfg_true""];\n	""37"" -> ""57""[label=""cfg_false""];\n	""38"" -> ""18""[label=""cfg_true""];\n	""38"" -> ""52""[label=""cfg_false""];\n	""39"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""27""[label=""cfg_next""];\n	""40"" -> ""22""[label=""cfg_next""];\n	""41"" -> ""40""[label=""cfg_next""];\n	""42"" -> ""39""[label=""cfg_next""];\n	""43"" -> ""34""[label=""cfg_next""];\n	""44"" -> ""35""[label=""cfg_next""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""46"" -> ""38""[label=""cfg_next""];\n	""47"" -> ""48""[label=""cfg_next""];\n	""48"" -> ""45""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""58"" -> ""9""[label=""cfg_next""];\n	""59"" -> ""61""[label=""cfg_next""];\n	""6"" -> ""41""[label=""cfg_next""];\n	""60"" -> ""47""[label=""cfg_next""];\n	""7"" -> ""58""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return node;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    if (node instanceof Element) {\n        return ((Element) node).getContent().isEmpty();\n    }\n    if (node instanceof Document) {\n        return ((Document) node).getContent().isEmpty();\n    }\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack10 = (org.jdom.Element) $stack9""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<org.jdom.Element: java.util.List getContent()>()""];\n	""4"" [label=""$stack12 = interfaceinvoke $stack11.<java.util.List: boolean isEmpty()>()""];\n	""5"" [label=""$stack2 = $stack1 instanceof org.jdom.Element""];\n	""6"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""7"" [label=""$stack4 = $stack3 instanceof org.jdom.Document""];\n	""8"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""9"" [label=""$stack6 = (org.jdom.Document) $stack5""];\n	""10"" [label=""$stack7 = virtualinvoke $stack6.<org.jdom.Document: java.util.List getContent()>()""];\n	""11"" [label=""$stack8 = interfaceinvoke $stack7.<java.util.List: boolean isEmpty()>()""];\n	""12"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""13"" [label=""if $stack2 == 0""];\n	""14"" [label=""if $stack4 == 0""];\n	""15"" [label=""return $stack12""];\n	""16"" [label=""return $stack8""];\n	""17"" [label=""return 1""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_false""];\n	""13"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""17""[label=""cfg_true""];\n	""14"" -> ""8""[label=""cfg_false""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getName(),Method,No Comment,"@Override\npublic QName getName() {\n    String ns = null;\n    String ln = null;\n    if (node instanceof Element) {\n        ns = ((Element) node).getNamespacePrefix();\n        if (ns != null && ns.isEmpty()) {\n            ns = null;\n        }\n        ln = ((Element) node).getName();\n    } else if (node instanceof ProcessingInstruction) {\n        ln = ((ProcessingInstruction) node).getTarget();\n    }\n    return new QName(ns, ln);\n}",org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack11 = (org.jdom.Element) $stack10""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""4"" [label=""$stack13 = (org.jdom.Element) $stack12""];\n	""5"" [label=""$stack14 = virtualinvoke ns.<java.lang.String: boolean isEmpty()>()""];\n	""6"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""7"" [label=""$stack4 = $stack3 instanceof org.jdom.Element""];\n	""8"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""9"" [label=""$stack6 = $stack5 instanceof org.jdom.ProcessingInstruction""];\n	""10"" [label=""$stack7 = new org.apache.commons.jxpath.ri.QName""];\n	""11"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""12"" [label=""$stack9 = (org.jdom.ProcessingInstruction) $stack8""];\n	""13"" [label=""goto""];\n	""14"" [label=""if $stack14 == 0""];\n	""15"" [label=""if $stack4 == 0""];\n	""16"" [label=""if $stack6 == 0""];\n	""17"" [label=""if ns == null""];\n	""18"" [label=""ln = null""];\n	""19"" [label=""ln = virtualinvoke $stack13.<org.jdom.Element: java.lang.String getName()>()""];\n	""20"" [label=""ln = virtualinvoke $stack9.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""21"" [label=""ns = null""];\n	""22"" [label=""ns = null""];\n	""23"" [label=""ns = virtualinvoke $stack11.<org.jdom.Element: java.lang.String getNamespacePrefix()>()""];\n	""24"" [label=""return $stack7""];\n	""25"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(ns, ln)""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""25""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_goto""];\n	""14"" -> ""22""[label=""cfg_false""];\n	""14"" -> ""3""[label=""cfg_true""];\n	""15"" -> ""1""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""16"" -> ""10""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_false""];\n	""17"" -> ""3""[label=""cfg_true""];\n	""17"" -> ""5""[label=""cfg_false""];\n	""18"" -> ""6""[label=""cfg_next""];\n	""19"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""3""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return node;\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getValue(),Method,No Comment,"@Override\npublic Object getValue() {\n    if (node instanceof Element) {\n        final StringBuilder buf = new StringBuilder();\n        for (final NodeIterator children = childIterator(null, false, null); children.setPosition(children.getPosition() + 1); ) {\n            final NodePointer ptr = children.getNodePointer();\n            if (ptr.getImmediateNode() instanceof Element || ptr.getImmediateNode() instanceof Text) {\n                buf.append(ptr.getValue());\n            }\n        }\n        return buf.toString();\n    }\n    if (node instanceof Comment) {\n        String text = ((Comment) node).getText();\n        if (text != null) {\n            text = text.trim();\n        }\n        return text;\n    }\n    String result = null;\n    if (node instanceof Text) {\n        result = ((Text) node).getText();\n    }\n    if (node instanceof ProcessingInstruction) {\n        result = ((ProcessingInstruction) node).getData();\n    }\n    final boolean trim = !""preserve"".equals(findEnclosingAttribute(node, ""space"", Namespace.XML_NAMESPACE));\n    return result != null && trim ? result.trim() : result;\n}",java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack11 = $stack10 instanceof org.jdom.ProcessingInstruction""];\n	""3"" [label=""$stack12 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""5"" [label=""$stack14 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String findEnclosingAttribute(java.lang.Object,java.lang.String,org.jdom.Namespace)>($stack13, \""space\"", $stack12)""];\n	""6"" [label=""$stack15 = \""preserve\""""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack14)""];\n	""8"" [label=""$stack17 = buf""];\n	""9"" [label=""$stack17 = virtualinvoke buf.<java.lang.String: java.lang.String trim()>()""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""11"" [label=""$stack19 = (org.jdom.ProcessingInstruction) $stack18""];\n	""12"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""13"" [label=""$stack21 = (org.jdom.Text) $stack20""];\n	""14"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""15"" [label=""$stack23 = (org.jdom.Comment) $stack22""];\n	""16"" [label=""$stack24 = new java.lang.StringBuilder""];\n	""17"" [label=""$stack25 = interfaceinvoke children.<org.apache.commons.jxpath.ri.model.NodeIterator: int getPosition()>()""];\n	""18"" [label=""$stack26 = $stack25 + 1""];\n	""19"" [label=""$stack27 = interfaceinvoke children.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack26)""];\n	""20"" [label=""$stack28 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""21"" [label=""$stack29 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getImmediateNode()>()""];\n	""22"" [label=""$stack30 = $stack29 instanceof org.jdom.Element""];\n	""23"" [label=""$stack31 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""24"" [label=""$stack32 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getImmediateNode()>()""];\n	""25"" [label=""$stack33 = $stack32 instanceof org.jdom.Text""];\n	""26"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""27"" [label=""$stack5 = $stack4 instanceof org.jdom.Element""];\n	""28"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""29"" [label=""$stack7 = $stack6 instanceof org.jdom.Comment""];\n	""30"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""31"" [label=""$stack9 = $stack8 instanceof org.jdom.Text""];\n	""32"" [label=""buf = $stack24""];\n	""33"" [label=""buf = null""];\n	""34"" [label=""buf = virtualinvoke $stack19.<org.jdom.ProcessingInstruction: java.lang.String getData()>()""];\n	""35"" [label=""buf = virtualinvoke $stack21.<org.jdom.Text: java.lang.String getText()>()""];\n	""36"" [label=""buf = virtualinvoke $stack23.<org.jdom.Comment: java.lang.String getText()>()""];\n	""37"" [label=""buf = virtualinvoke buf.<java.lang.String: java.lang.String trim()>()""];\n	""38"" [label=""children = 0""];\n	""39"" [label=""children = 1""];\n	""40"" [label=""children = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(null, 0, null)""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""goto""];\n	""44"" [label=""if $stack11 == 0""];\n	""45"" [label=""if $stack16 != 0""];\n	""46"" [label=""if $stack27 == 0""];\n	""47"" [label=""if $stack30 != 0""];\n	""48"" [label=""if $stack33 == 0""];\n	""49"" [label=""if $stack5 == 0""];\n	""50"" [label=""if $stack7 == 0""];\n	""51"" [label=""if $stack9 == 0""];\n	""52"" [label=""if buf == null""];\n	""53"" [label=""if buf == null""];\n	""54"" [label=""if children == 0""];\n	""55"" [label=""ptr = interfaceinvoke children.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""56"" [label=""return $stack17""];\n	""57"" [label=""return $stack28""];\n	""58"" [label=""return buf""];\n	""59"" [label=""specialinvoke $stack24.<java.lang.StringBuilder: void <init>()>()""];\n	""60"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""61"" [label=""virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""34""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""35""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""36""[label=""cfg_next""];\n	""16"" -> ""59""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""46""[label=""cfg_next""];\n	""2"" -> ""44""[label=""cfg_next""];\n	""20"" -> ""57""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""47""[label=""cfg_next""];\n	""23"" -> ""61""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""48""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""49""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""50""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""51""[label=""cfg_next""];\n	""32"" -> ""40""[label=""cfg_next""];\n	""33"" -> ""30""[label=""cfg_next""];\n	""34"" -> ""6""[label=""cfg_next""];\n	""35"" -> ""1""[label=""cfg_next""];\n	""36"" -> ""52""[label=""cfg_next""];\n	""37"" -> ""58""[label=""cfg_next""];\n	""38"" -> ""53""[label=""cfg_next""];\n	""39"" -> ""42""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""17""[label=""cfg_next""];\n	""41"" -> ""17""[label=""cfg_goto""];\n	""42"" -> ""53""[label=""cfg_goto""];\n	""43"" -> ""56""[label=""cfg_goto""];\n	""44"" -> ""10""[label=""cfg_false""];\n	""44"" -> ""6""[label=""cfg_true""];\n	""45"" -> ""38""[label=""cfg_true""];\n	""45"" -> ""39""[label=""cfg_false""];\n	""46"" -> ""20""[label=""cfg_true""];\n	""46"" -> ""55""[label=""cfg_false""];\n	""47"" -> ""23""[label=""cfg_true""];\n	""47"" -> ""24""[label=""cfg_false""];\n	""48"" -> ""23""[label=""cfg_false""];\n	""48"" -> ""41""[label=""cfg_true""];\n	""49"" -> ""16""[label=""cfg_false""];\n	""49"" -> ""28""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""50"" -> ""14""[label=""cfg_false""];\n	""50"" -> ""33""[label=""cfg_true""];\n	""51"" -> ""1""[label=""cfg_true""];\n	""51"" -> ""12""[label=""cfg_false""];\n	""52"" -> ""37""[label=""cfg_false""];\n	""52"" -> ""58""[label=""cfg_true""];\n	""53"" -> ""54""[label=""cfg_false""];\n	""53"" -> ""8""[label=""cfg_true""];\n	""54"" -> ""8""[label=""cfg_true""];\n	""54"" -> ""9""[label=""cfg_false""];\n	""55"" -> ""21""[label=""cfg_next""];\n	""59"" -> ""32""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""60"" -> ""26""[label=""cfg_next""];\n	""61"" -> ""41""[label=""cfg_next""];\n	""7"" -> ""45""[label=""cfg_next""];\n	""8"" -> ""56""[label=""cfg_next""];\n	""9"" -> ""43""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.setValue(Object),Method,No Comment,"@Override\npublic void setValue(final Object value) {\n    if (node instanceof Text) {\n        final String string = (String) TypeUtils.convert(value, String.class);\n        if (string != null && !string.isEmpty()) {\n            ((Text) node).setText(string);\n        } else {\n            nodeParent(node).removeContent((Text) node);\n        }\n    } else {\n        final Element element = (Element) node;\n        element.getContent().clear();\n        if (value instanceof Element) {\n            final Element valueElement = (Element) value;\n            addContent(valueElement.getContent());\n        } else if (value instanceof Document) {\n            final Document valueDocument = (Document) value;\n            addContent(valueDocument.getContent());\n        } else if (value instanceof Text || value instanceof CDATA) {\n            final String string = ((Text) value).getText();\n            element.addContent(new Text(string));\n        } else if (value instanceof ProcessingInstruction) {\n            final ProcessingInstruction pi = (ProcessingInstruction) ((ProcessingInstruction) value).clone();\n            element.addContent(pi);\n        } else if (value instanceof Comment) {\n            final Comment comment = (Comment) ((Comment) value).clone();\n            element.addContent(comment);\n        } else {\n            final String string = (String) TypeUtils.convert(value, String.class);\n            if (string != null && !string.isEmpty()) {\n                element.addContent(new Text(string));\n            }\n        }\n    }\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack10 = value instanceof org.jdom.Text""];\n	""2"" [label=""$stack11 = (org.jdom.Text) value""];\n	""3"" [label=""$stack12 = new org.jdom.Text""];\n	""4"" [label=""$stack13 = value instanceof org.jdom.CDATA""];\n	""5"" [label=""$stack14 = value instanceof org.jdom.ProcessingInstruction""];\n	""6"" [label=""$stack15 = value instanceof org.jdom.Comment""];\n	""7"" [label=""$stack16 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, class \""Ljava/lang/String;\"")""];\n	""8"" [label=""$stack17 = virtualinvoke valueElement.<java.lang.String: boolean isEmpty()>()""];\n	""9"" [label=""$stack18 = new org.jdom.Text""];\n	""10"" [label=""$stack19 = (org.jdom.Comment) value""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<org.jdom.Comment: java.lang.Object clone()>()""];\n	""12"" [label=""$stack21 = (org.jdom.ProcessingInstruction) value""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<org.jdom.ProcessingInstruction: java.lang.Object clone()>()""];\n	""14"" [label=""$stack23 = virtualinvoke valueElement.<org.jdom.Document: java.util.List getContent()>()""];\n	""15"" [label=""$stack24 = virtualinvoke valueElement.<org.jdom.Element: java.util.List getContent()>()""];\n	""16"" [label=""$stack25 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, class \""Ljava/lang/String;\"")""];\n	""17"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""18"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""19"" [label=""$stack28 = (org.jdom.Text) $stack27""];\n	""20"" [label=""$stack29 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.jdom.Element nodeParent(java.lang.Object)>($stack26)""];\n	""21"" [label=""$stack30 = virtualinvoke string.<java.lang.String: boolean isEmpty()>()""];\n	""22"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""23"" [label=""$stack32 = (org.jdom.Text) $stack31""];\n	""24"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""25"" [label=""$stack5 = $stack4 instanceof org.jdom.Text""];\n	""26"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""27"" [label=""$stack7 = virtualinvoke string.<org.jdom.Element: java.util.List getContent()>()""];\n	""28"" [label=""$stack8 = value instanceof org.jdom.Element""];\n	""29"" [label=""$stack9 = value instanceof org.jdom.Document""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""if $stack10 != 0""];\n	""38"" [label=""if $stack13 == 0""];\n	""39"" [label=""if $stack14 == 0""];\n	""40"" [label=""if $stack15 == 0""];\n	""41"" [label=""if $stack17 != 0""];\n	""42"" [label=""if $stack30 != 0""];\n	""43"" [label=""if $stack5 == 0""];\n	""44"" [label=""if $stack8 == 0""];\n	""45"" [label=""if $stack9 == 0""];\n	""46"" [label=""if string == null""];\n	""47"" [label=""if valueElement == null""];\n	""48"" [label=""interfaceinvoke $stack7.<java.util.List: void clear()>()""];\n	""49"" [label=""return""];\n	""50"" [label=""specialinvoke $stack12.<org.jdom.Text: void <init>(java.lang.String)>(valueElement)""];\n	""51"" [label=""specialinvoke $stack18.<org.jdom.Text: void <init>(java.lang.String)>(valueElement)""];\n	""52"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: void addContent(java.util.List)>($stack23)""];\n	""53"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: void addContent(java.util.List)>($stack24)""];\n	""54"" [label=""string = (java.lang.String) $stack25""];\n	""55"" [label=""string = (org.jdom.Element) $stack6""];\n	""56"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""57"" [label=""value := @parameter0: java.lang.Object""];\n	""58"" [label=""valueElement = (java.lang.String) $stack16""];\n	""59"" [label=""valueElement = (org.jdom.Comment) $stack20""];\n	""60"" [label=""valueElement = (org.jdom.Document) value""];\n	""61"" [label=""valueElement = (org.jdom.Element) value""];\n	""62"" [label=""valueElement = (org.jdom.ProcessingInstruction) $stack22""];\n	""63"" [label=""valueElement = virtualinvoke $stack11.<org.jdom.Text: java.lang.String getText()>()""];\n	""64"" [label=""virtualinvoke $stack29.<org.jdom.Element: boolean removeContent(org.jdom.Content)>($stack28)""];\n	""65"" [label=""virtualinvoke $stack32.<org.jdom.Text: org.jdom.Text setText(java.lang.String)>(string)""];\n	""66"" [label=""virtualinvoke string.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack12)""];\n	""67"" [label=""virtualinvoke string.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack18)""];\n	""68"" [label=""virtualinvoke string.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(valueElement)""];\n	""69"" [label=""virtualinvoke string.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(valueElement)""];\n	""1"" -> ""37""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""59""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""62""[label=""cfg_next""];\n	""14"" -> ""52""[label=""cfg_next""];\n	""15"" -> ""53""[label=""cfg_next""];\n	""16"" -> ""54""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""64""[label=""cfg_next""];\n	""2"" -> ""63""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""42""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""65""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""43""[label=""cfg_next""];\n	""26"" -> ""55""[label=""cfg_next""];\n	""27"" -> ""48""[label=""cfg_next""];\n	""28"" -> ""44""[label=""cfg_next""];\n	""29"" -> ""45""[label=""cfg_next""];\n	""3"" -> ""50""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_goto""];\n	""31"" -> ""49""[label=""cfg_goto""];\n	""32"" -> ""49""[label=""cfg_goto""];\n	""33"" -> ""49""[label=""cfg_goto""];\n	""34"" -> ""49""[label=""cfg_goto""];\n	""35"" -> ""49""[label=""cfg_goto""];\n	""36"" -> ""49""[label=""cfg_goto""];\n	""37"" -> ""2""[label=""cfg_true""];\n	""37"" -> ""4""[label=""cfg_false""];\n	""38"" -> ""2""[label=""cfg_false""];\n	""38"" -> ""5""[label=""cfg_true""];\n	""39"" -> ""12""[label=""cfg_false""];\n	""39"" -> ""6""[label=""cfg_true""];\n	""4"" -> ""38""[label=""cfg_next""];\n	""40"" -> ""10""[label=""cfg_false""];\n	""40"" -> ""7""[label=""cfg_true""];\n	""41"" -> ""49""[label=""cfg_true""];\n	""41"" -> ""9""[label=""cfg_false""];\n	""42"" -> ""17""[label=""cfg_true""];\n	""42"" -> ""22""[label=""cfg_false""];\n	""43"" -> ""16""[label=""cfg_false""];\n	""43"" -> ""26""[label=""cfg_true""];\n	""44"" -> ""29""[label=""cfg_true""];\n	""44"" -> ""61""[label=""cfg_false""];\n	""45"" -> ""1""[label=""cfg_true""];\n	""45"" -> ""60""[label=""cfg_false""];\n	""46"" -> ""17""[label=""cfg_true""];\n	""46"" -> ""21""[label=""cfg_false""];\n	""47"" -> ""49""[label=""cfg_true""];\n	""47"" -> ""8""[label=""cfg_false""];\n	""48"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""39""[label=""cfg_next""];\n	""50"" -> ""66""[label=""cfg_next""];\n	""51"" -> ""67""[label=""cfg_next""];\n	""52"" -> ""33""[label=""cfg_next""];\n	""53"" -> ""32""[label=""cfg_next""];\n	""54"" -> ""46""[label=""cfg_next""];\n	""55"" -> ""27""[label=""cfg_next""];\n	""56"" -> ""57""[label=""cfg_next""];\n	""57"" -> ""24""[label=""cfg_next""];\n	""58"" -> ""47""[label=""cfg_next""];\n	""59"" -> ""69""[label=""cfg_next""];\n	""6"" -> ""40""[label=""cfg_next""];\n	""60"" -> ""14""[label=""cfg_next""];\n	""61"" -> ""15""[label=""cfg_next""];\n	""62"" -> ""68""[label=""cfg_next""];\n	""63"" -> ""3""[label=""cfg_next""];\n	""64"" -> ""31""[label=""cfg_next""];\n	""65"" -> ""30""[label=""cfg_next""];\n	""66"" -> ""34""[label=""cfg_next""];\n	""67"" -> ""49""[label=""cfg_next""];\n	""68"" -> ""35""[label=""cfg_next""];\n	""69"" -> ""36""[label=""cfg_next""];\n	""7"" -> ""58""[label=""cfg_next""];\n	""8"" -> ""41""[label=""cfg_next""];\n	""9"" -> ""51""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.addContent(List),Method,* Add the specified content to this element.\n     * @param content List,private void addContent(final List content) {\n    final Element element = (Element) node;\n    final int count = content.size();\n    for (int i = 0; i < count; i++) {\n        Object child = content.get(i);\n        if (child instanceof Element) {\n            child = ((Element) child).clone();\n            element.addContent((Element) child);\n        } else if (child instanceof Text) {\n            child = ((Text) child).clone();\n            element.addContent((Text) child);\n        } else if (node instanceof CDATA) {\n            child = ((CDATA) child).clone();\n            element.addContent((CDATA) child);\n        } else if (node instanceof ProcessingInstruction) {\n            child = ((ProcessingInstruction) child).clone();\n            element.addContent((ProcessingInstruction) child);\n        } else if (node instanceof Comment) {\n            child = ((Comment) child).clone();\n            element.addContent((Comment) child);\n        }\n    }\n},void addContent(java.util.List),"digraph cfg_addContent {\n	""1"" [label=""$stack10 = $stack9 instanceof org.jdom.CDATA""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""3"" [label=""$stack12 = $stack11 instanceof org.jdom.ProcessingInstruction""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""5"" [label=""$stack14 = $stack13 instanceof org.jdom.Comment""];\n	""6"" [label=""$stack15 = (org.jdom.Comment) child""];\n	""7"" [label=""$stack16 = (org.jdom.Comment) child""];\n	""8"" [label=""$stack17 = (org.jdom.ProcessingInstruction) child""];\n	""9"" [label=""$stack18 = (org.jdom.ProcessingInstruction) child""];\n	""10"" [label=""$stack19 = (org.jdom.CDATA) child""];\n	""11"" [label=""$stack20 = (org.jdom.CDATA) child""];\n	""12"" [label=""$stack21 = (org.jdom.Text) child""];\n	""13"" [label=""$stack22 = (org.jdom.Text) child""];\n	""14"" [label=""$stack23 = (org.jdom.Element) child""];\n	""15"" [label=""$stack24 = (org.jdom.Element) child""];\n	""16"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""17"" [label=""$stack7 = child instanceof org.jdom.Element""];\n	""18"" [label=""$stack8 = child instanceof org.jdom.Text""];\n	""19"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""20"" [label=""child = interfaceinvoke content.<java.util.List: java.lang.Object get(int)>(i)""];\n	""21"" [label=""child = virtualinvoke $stack15.<org.jdom.Comment: java.lang.Object clone()>()""];\n	""22"" [label=""child = virtualinvoke $stack17.<org.jdom.ProcessingInstruction: java.lang.Object clone()>()""];\n	""23"" [label=""child = virtualinvoke $stack19.<org.jdom.CDATA: java.lang.Object clone()>()""];\n	""24"" [label=""child = virtualinvoke $stack21.<org.jdom.Text: java.lang.Object clone()>()""];\n	""25"" [label=""child = virtualinvoke $stack23.<org.jdom.Element: java.lang.Object clone()>()""];\n	""26"" [label=""content := @parameter0: java.util.List""];\n	""27"" [label=""count = interfaceinvoke content.<java.util.List: int size()>()""];\n	""28"" [label=""element = (org.jdom.Element) $stack6""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""i = 0""];\n	""35"" [label=""i = i + 1""];\n	""36"" [label=""if $stack10 == 0""];\n	""37"" [label=""if $stack12 == 0""];\n	""38"" [label=""if $stack14 == 0""];\n	""39"" [label=""if $stack7 == 0""];\n	""40"" [label=""if $stack8 == 0""];\n	""41"" [label=""if i >= count""];\n	""42"" [label=""return""];\n	""43"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""44"" [label=""virtualinvoke element.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack16)""];\n	""45"" [label=""virtualinvoke element.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack18)""];\n	""46"" [label=""virtualinvoke element.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack20)""];\n	""47"" [label=""virtualinvoke element.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack22)""];\n	""48"" [label=""virtualinvoke element.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack24)""];\n	""1"" -> ""36""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""46""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_next""];\n	""13"" -> ""47""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""48""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_next""];\n	""17"" -> ""39""[label=""cfg_next""];\n	""18"" -> ""40""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""22"" -> ""9""[label=""cfg_next""];\n	""23"" -> ""11""[label=""cfg_next""];\n	""24"" -> ""13""[label=""cfg_next""];\n	""25"" -> ""15""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_next""];\n	""27"" -> ""34""[label=""cfg_next""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""29"" -> ""35""[label=""cfg_goto""];\n	""3"" -> ""37""[label=""cfg_next""];\n	""30"" -> ""35""[label=""cfg_goto""];\n	""31"" -> ""35""[label=""cfg_goto""];\n	""32"" -> ""35""[label=""cfg_goto""];\n	""33"" -> ""41""[label=""cfg_goto""];\n	""34"" -> ""41""[label=""cfg_next""];\n	""35"" -> ""33""[label=""cfg_next""];\n	""36"" -> ""10""[label=""cfg_false""];\n	""36"" -> ""2""[label=""cfg_true""];\n	""37"" -> ""4""[label=""cfg_true""];\n	""37"" -> ""8""[label=""cfg_false""];\n	""38"" -> ""35""[label=""cfg_true""];\n	""38"" -> ""6""[label=""cfg_false""];\n	""39"" -> ""14""[label=""cfg_false""];\n	""39"" -> ""18""[label=""cfg_true""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""12""[label=""cfg_false""];\n	""40"" -> ""19""[label=""cfg_true""];\n	""41"" -> ""20""[label=""cfg_false""];\n	""41"" -> ""42""[label=""cfg_true""];\n	""43"" -> ""26""[label=""cfg_next""];\n	""44"" -> ""35""[label=""cfg_next""];\n	""45"" -> ""32""[label=""cfg_next""];\n	""46"" -> ""31""[label=""cfg_next""];\n	""47"" -> ""30""[label=""cfg_next""];\n	""48"" -> ""29""[label=""cfg_next""];\n	""5"" -> ""38""[label=""cfg_next""];\n	""6"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""44""[label=""cfg_next""];\n	""8"" -> ""22""[label=""cfg_next""];\n	""9"" -> ""45""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.testNode(NodeTest),Method,No Comment,"@Override\npublic boolean testNode(final NodeTest test) {\n    return testNode(this, node, test);\n}",boolean testNode(org.apache.commons.jxpath.ri.compiler.NodeTest),"digraph cfg_testNode {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: boolean testNode(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object,org.apache.commons.jxpath.ri.compiler.NodeTest)>(this, $stack2, test)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.testNode(NodePointer,Object,NodeTest)",Method,* Execute test against node on behalf of pointer.\n     * @param pointer Pointer\n     * @param node to test\n     * @param test to execute\n     * @return true if node passes test,"public static boolean testNode(final NodePointer pointer, final Object node, final NodeTest test) {\n    if (test == null) {\n        return true;\n    }\n    if (test instanceof NodeNameTest) {\n        if (!(node instanceof Element)) {\n            return false;\n        }\n        final NodeNameTest nodeNameTest = (NodeNameTest) test;\n        final QName testName = nodeNameTest.getNodeName();\n        final String namespaceURI = nodeNameTest.getNamespaceURI();\n        final boolean wildcard = nodeNameTest.isWildcard();\n        final String testPrefix = testName.getPrefix();\n        if (wildcard && testPrefix == null) {\n            return true;\n        }\n        if (wildcard || testName.getName().equals(getLocalName(node))) {\n            final String nodeNS = getNamespaceURI(node);\n            return equalStrings(namespaceURI, nodeNS) || nodeNS == null && equalStrings(testPrefix, getPrefix(node));\n        }\n        return false;\n    }\n    if (test instanceof NodeTypeTest) {\n        switch(((NodeTypeTest) test).getNodeType()) {\n            case Compiler.NODE_TYPE_NODE:\n                return true;\n            case Compiler.NODE_TYPE_TEXT:\n                return node instanceof Text || node instanceof CDATA;\n            case Compiler.NODE_TYPE_COMMENT:\n                return node instanceof Comment;\n            case Compiler.NODE_TYPE_PI:\n                return node instanceof ProcessingInstruction;\n            default:\n                return false;\n        }\n    }\n    if (test instanceof ProcessingInstructionTest && node instanceof ProcessingInstruction) {\n        final String testPI = ((ProcessingInstructionTest) test).getTarget();\n        final String nodePI = ((ProcessingInstruction) node).getTarget();\n        return testPI.equals(nodePI);\n    }\n    return false;\n}","boolean testNode(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_testNode {\n	""1"" [label=""$stack10 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""2"" [label=""$stack11 = test instanceof org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest""];\n	""3"" [label=""$stack12 = node instanceof org.jdom.ProcessingInstruction""];\n	""4"" [label=""$stack13 = (org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest) test""];\n	""5"" [label=""$stack14 = (org.jdom.ProcessingInstruction) node""];\n	""6"" [label=""$stack15 = virtualinvoke nodeNameTest.<java.lang.String: boolean equals(java.lang.Object)>(testName)""];\n	""7"" [label=""$stack16 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) test""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""9"" [label=""$stack18 = node instanceof org.jdom.ProcessingInstruction""];\n	""10"" [label=""$stack19 = node instanceof org.jdom.Comment""];\n	""11"" [label=""$stack20 = node instanceof org.jdom.Text""];\n	""12"" [label=""$stack21 = node instanceof org.jdom.CDATA""];\n	""13"" [label=""$stack22 = 0""];\n	""14"" [label=""$stack22 = 1""];\n	""15"" [label=""$stack23 = node instanceof org.jdom.Element""];\n	""16"" [label=""$stack24 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: boolean equalStrings(java.lang.String,java.lang.String)>(namespaceURI, nodeNS)""];\n	""17"" [label=""$stack25 = 0""];\n	""18"" [label=""$stack25 = 1""];\n	""19"" [label=""$stack26 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getPrefix(java.lang.Object)>(node)""];\n	""20"" [label=""$stack27 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: boolean equalStrings(java.lang.String,java.lang.String)>(testPrefix, $stack26)""];\n	""21"" [label=""$stack28 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getLocalName(java.lang.Object)>(node)""];\n	""22"" [label=""$stack29 = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""23"" [label=""$stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>($stack28)""];\n	""24"" [label=""$stack9 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""if $stack10 == 0""];\n	""28"" [label=""if $stack11 == 0""];\n	""29"" [label=""if $stack12 == 0""];\n	""30"" [label=""if $stack20 != 0""];\n	""31"" [label=""if $stack21 == 0""];\n	""32"" [label=""if $stack23 != 0""];\n	""33"" [label=""if $stack24 != 0""];\n	""34"" [label=""if $stack27 == 0""];\n	""35"" [label=""if $stack30 == 0""];\n	""36"" [label=""if $stack9 == 0""];\n	""37"" [label=""if nodeNS != null""];\n	""38"" [label=""if test != null""];\n	""39"" [label=""if testPrefix != null""];\n	""40"" [label=""if wildcard != 0""];\n	""41"" [label=""if wildcard == 0""];\n	""42"" [label=""namespaceURI = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: java.lang.String getNamespaceURI()>()""];\n	""43"" [label=""node := @parameter1: java.lang.Object""];\n	""44"" [label=""nodeNS = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getNamespaceURI(java.lang.Object)>(node)""];\n	""45"" [label=""nodeNameTest = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) test""];\n	""46"" [label=""nodeNameTest = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest: java.lang.String getTarget()>()""];\n	""47"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""48"" [label=""return $stack15""];\n	""49"" [label=""return $stack18""];\n	""50"" [label=""return $stack19""];\n	""51"" [label=""return $stack22""];\n	""52"" [label=""return $stack25""];\n	""53"" [label=""return 0""];\n	""54"" [label=""return 0""];\n	""55"" [label=""return 0""];\n	""56"" [label=""return 0""];\n	""57"" [label=""return 1""];\n	""58"" [label=""return 1""];\n	""59"" [label=""return 1""];\n	""60"" [label=""switch($stack17) \{     case 1:     case 2:     case 3:     case 4:     default:  \}""];\n	""61"" [label=""test := @parameter2: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""62"" [label=""testName = virtualinvoke $stack14.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""63"" [label=""testName = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""64"" [label=""testPrefix = virtualinvoke testName.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""65"" [label=""wildcard = virtualinvoke nodeNameTest.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: boolean isWildcard()>()""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""50""[label=""cfg_next""];\n	""11"" -> ""30""[label=""cfg_next""];\n	""12"" -> ""31""[label=""cfg_next""];\n	""13"" -> ""51""[label=""cfg_next""];\n	""14"" -> ""26""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""33""[label=""cfg_next""];\n	""17"" -> ""52""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""28""[label=""cfg_next""];\n	""20"" -> ""34""[label=""cfg_next""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""35""[label=""cfg_next""];\n	""24"" -> ""36""[label=""cfg_next""];\n	""25"" -> ""52""[label=""cfg_goto""];\n	""26"" -> ""51""[label=""cfg_goto""];\n	""27"" -> ""2""[label=""cfg_true""];\n	""27"" -> ""7""[label=""cfg_false""];\n	""28"" -> ""3""[label=""cfg_false""];\n	""28"" -> ""56""[label=""cfg_true""];\n	""29"" -> ""4""[label=""cfg_false""];\n	""29"" -> ""56""[label=""cfg_true""];\n	""3"" -> ""29""[label=""cfg_next""];\n	""30"" -> ""12""[label=""cfg_false""];\n	""30"" -> ""14""[label=""cfg_true""];\n	""31"" -> ""13""[label=""cfg_true""];\n	""31"" -> ""14""[label=""cfg_false""];\n	""32"" -> ""45""[label=""cfg_true""];\n	""32"" -> ""53""[label=""cfg_false""];\n	""33"" -> ""18""[label=""cfg_true""];\n	""33"" -> ""37""[label=""cfg_false""];\n	""34"" -> ""17""[label=""cfg_true""];\n	""34"" -> ""18""[label=""cfg_false""];\n	""35"" -> ""44""[label=""cfg_false""];\n	""35"" -> ""54""[label=""cfg_true""];\n	""36"" -> ""1""[label=""cfg_true""];\n	""36"" -> ""15""[label=""cfg_false""];\n	""37"" -> ""17""[label=""cfg_true""];\n	""37"" -> ""19""[label=""cfg_false""];\n	""38"" -> ""24""[label=""cfg_true""];\n	""38"" -> ""57""[label=""cfg_false""];\n	""39"" -> ""40""[label=""cfg_true""];\n	""39"" -> ""58""[label=""cfg_false""];\n	""4"" -> ""46""[label=""cfg_next""];\n	""40"" -> ""22""[label=""cfg_false""];\n	""40"" -> ""44""[label=""cfg_true""];\n	""41"" -> ""39""[label=""cfg_false""];\n	""41"" -> ""40""[label=""cfg_true""];\n	""42"" -> ""65""[label=""cfg_next""];\n	""43"" -> ""61""[label=""cfg_next""];\n	""44"" -> ""16""[label=""cfg_next""];\n	""45"" -> ""63""[label=""cfg_next""];\n	""46"" -> ""5""[label=""cfg_next""];\n	""47"" -> ""43""[label=""cfg_next""];\n	""5"" -> ""62""[label=""cfg_next""];\n	""6"" -> ""48""[label=""cfg_next""];\n	""60"" -> ""10""[label=""cfg_switch""];\n	""60"" -> ""11""[label=""cfg_switch""];\n	""60"" -> ""55""[label=""cfg_switch""];\n	""60"" -> ""59""[label=""cfg_switch""];\n	""60"" -> ""9""[label=""cfg_switch""];\n	""61"" -> ""38""[label=""cfg_next""];\n	""62"" -> ""6""[label=""cfg_next""];\n	""63"" -> ""42""[label=""cfg_next""];\n	""64"" -> ""41""[label=""cfg_next""];\n	""65"" -> ""64""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""60""[label=""cfg_next""];\n	""9"" -> ""49""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.equalStrings(String,String)",Method,* Learn whether two strings are == or .equals()\n     * @param s1 string 1\n     * @param s2 string 2\n     * @return true if equal,"private static boolean equalStrings(String s1, String s2) {\n    if (s1 == s2) {\n        return true;\n    }\n    s1 = s1 == null ? """" : s1.trim();\n    s2 = s2 == null ? """" : s2.trim();\n    return s1.equals(s2);\n}","boolean equalStrings(java.lang.String,java.lang.String)","digraph cfg_equalStrings {\n	""1"" [label=""$stack2 = virtualinvoke s1.<java.lang.String: boolean equals(java.lang.Object)>(s2)""];\n	""2"" [label=""goto""];\n	""3"" [label=""goto""];\n	""4"" [label=""if s1 != null""];\n	""5"" [label=""if s1 != s2""];\n	""6"" [label=""if s2 != null""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""return 1""];\n	""9"" [label=""s1 := @parameter0: java.lang.String""];\n	""10"" [label=""s1 = \""\""""];\n	""11"" [label=""s1 = virtualinvoke s1.<java.lang.String: java.lang.String trim()>()""];\n	""12"" [label=""s2 := @parameter1: java.lang.String""];\n	""13"" [label=""s2 = \""\""""];\n	""14"" [label=""s2 = virtualinvoke s2.<java.lang.String: java.lang.String trim()>()""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_goto""];\n	""3"" -> ""1""[label=""cfg_goto""];\n	""4"" -> ""10""[label=""cfg_false""];\n	""4"" -> ""11""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getPrefix(Object),Method,* Gets the prefix from a given node.\n     * @param node to check\n     * @return String,public static String getPrefix(final Object node) {\n    if (node instanceof Element) {\n        final String prefix = ((Element) node).getNamespacePrefix();\n        return prefix == null || prefix.isEmpty() ? null : prefix;\n    }\n    if (node instanceof Attribute) {\n        final String prefix = ((Attribute) node).getNamespacePrefix();\n        return prefix == null || prefix.isEmpty() ? null : prefix;\n    }\n    return null;\n},java.lang.String getPrefix(java.lang.Object),"digraph cfg_getPrefix {\n	""1"" [label=""$stack2 = node instanceof org.jdom.Element""];\n	""2"" [label=""$stack3 = node instanceof org.jdom.Attribute""];\n	""3"" [label=""$stack4 = (org.jdom.Attribute) node""];\n	""4"" [label=""$stack5 = virtualinvoke prefix.<java.lang.String: boolean isEmpty()>()""];\n	""5"" [label=""$stack6 = null""];\n	""6"" [label=""$stack6 = prefix""];\n	""7"" [label=""$stack7 = (org.jdom.Element) node""];\n	""8"" [label=""$stack8 = virtualinvoke prefix.<java.lang.String: boolean isEmpty()>()""];\n	""9"" [label=""$stack9 = null""];\n	""10"" [label=""$stack9 = prefix""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack2 == 0""];\n	""14"" [label=""if $stack3 == 0""];\n	""15"" [label=""if $stack5 == 0""];\n	""16"" [label=""if $stack8 == 0""];\n	""17"" [label=""if prefix == null""];\n	""18"" [label=""if prefix == null""];\n	""19"" [label=""node := @parameter0: java.lang.Object""];\n	""20"" [label=""prefix = virtualinvoke $stack4.<org.jdom.Attribute: java.lang.String getNamespacePrefix()>()""];\n	""21"" [label=""prefix = virtualinvoke $stack7.<org.jdom.Element: java.lang.String getNamespacePrefix()>()""];\n	""22"" [label=""return $stack6""];\n	""23"" [label=""return $stack9""];\n	""24"" [label=""return null""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_goto""];\n	""12"" -> ""22""[label=""cfg_goto""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_false""];\n	""14"" -> ""24""[label=""cfg_true""];\n	""14"" -> ""3""[label=""cfg_false""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""15"" -> ""6""[label=""cfg_true""];\n	""16"" -> ""10""[label=""cfg_true""];\n	""16"" -> ""9""[label=""cfg_false""];\n	""17"" -> ""8""[label=""cfg_false""];\n	""17"" -> ""9""[label=""cfg_true""];\n	""18"" -> ""4""[label=""cfg_false""];\n	""18"" -> ""5""[label=""cfg_true""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getLocalName(Object),Method,* Gets the local name of the specified node.\n     * @param node to check\n     * @return String local name,public static String getLocalName(final Object node) {\n    if (node instanceof Element) {\n        return ((Element) node).getName();\n    }\n    if (node instanceof Attribute) {\n        return ((Attribute) node).getName();\n    }\n    return null;\n},java.lang.String getLocalName(java.lang.Object),"digraph cfg_getLocalName {\n	""1"" [label=""$stack1 = node instanceof org.jdom.Element""];\n	""2"" [label=""$stack2 = node instanceof org.jdom.Attribute""];\n	""3"" [label=""$stack3 = (org.jdom.Attribute) node""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.jdom.Attribute: java.lang.String getName()>()""];\n	""5"" [label=""$stack5 = (org.jdom.Element) node""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<org.jdom.Element: java.lang.String getName()>()""];\n	""7"" [label=""if $stack1 == 0""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""node := @parameter0: java.lang.Object""];\n	""10"" [label=""return $stack4""];\n	""11"" [label=""return $stack6""];\n	""12"" [label=""return null""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.isLanguage(String),Method,"* Returns true if the xml:lang attribute for the current node\n     * or its parent has the specified prefix <em>lang</em>.\n     * If no node has this prefix, calls {@code super.isLanguage(lang)}.\n     * @param lang to compare\n     * @return true if this element uses the specified language.",@Override\npublic boolean isLanguage(final String lang) {\n    final String current = getLanguage();\n    return current == null ? super.isLanguage(lang) : current.toUpperCase(Locale.ENGLISH).startsWith(lang.toUpperCase(Locale.ENGLISH));\n},boolean isLanguage(java.lang.String),"digraph cfg_isLanguage {\n	""1"" [label=""$stack3 = <java.util.Locale: java.util.Locale ENGLISH>""];\n	""2"" [label=""$stack4 = <java.util.Locale: java.util.Locale ENGLISH>""];\n	""3"" [label=""$stack5 = virtualinvoke lang.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack4)""];\n	""4"" [label=""$stack6 = virtualinvoke current.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack3)""];\n	""5"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLanguage(java.lang.String)>(lang)""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.String: boolean startsWith(java.lang.String)>($stack5)""];\n	""7"" [label=""current = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getLanguage()>()""];\n	""8"" [label=""goto""];\n	""9"" [label=""if current != null""];\n	""10"" [label=""lang := @parameter0: java.lang.String""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_goto""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getLanguage(),Method,* Gets the language of this element.\n     * @return String language,"protected String getLanguage() {\n    return findEnclosingAttribute(node, ""lang"", Namespace.XML_NAMESPACE);\n}",java.lang.String getLanguage(),"digraph cfg_getLanguage {\n	""1"" [label=""$stack1 = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""3"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String findEnclosingAttribute(java.lang.Object,java.lang.String,org.jdom.Namespace)>($stack2, \""lang\"", $stack1)""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.findEnclosingAttribute(Object,String,Namespace)",Method,* Find the nearest occurrence of the specified attribute\n     * on the specified and enclosing elements.\n     * @param n current node\n     * @param attrName attribute name\n     * @param ns Namespace\n     * @return attribute value,"protected static String findEnclosingAttribute(Object n, final String attrName, final Namespace ns) {\n    while (n != null) {\n        if (n instanceof Element) {\n            final Element e = (Element) n;\n            final String attr = e.getAttributeValue(attrName, ns);\n            if (attr != null && !attr.isEmpty()) {\n                return attr;\n            }\n        }\n        n = nodeParent(n);\n    }\n    return null;\n}","java.lang.String findEnclosingAttribute(java.lang.Object,java.lang.String,org.jdom.Namespace)","digraph cfg_findEnclosingAttribute {\n	""1"" [label=""$stack5 = n instanceof org.jdom.Element""];\n	""2"" [label=""$stack6 = virtualinvoke attr.<java.lang.String: boolean isEmpty()>()""];\n	""3"" [label=""attr = virtualinvoke e.<org.jdom.Element: java.lang.String getAttributeValue(java.lang.String,org.jdom.Namespace)>(attrName, ns)""];\n	""4"" [label=""attrName := @parameter1: java.lang.String""];\n	""5"" [label=""e = (org.jdom.Element) n""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""if $stack6 != 0""];\n	""9"" [label=""if attr == null""];\n	""10"" [label=""if n == null""];\n	""11"" [label=""n := @parameter0: java.lang.Object""];\n	""12"" [label=""n = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.jdom.Element nodeParent(java.lang.Object)>(n)""];\n	""13"" [label=""ns := @parameter2: org.jdom.Namespace""];\n	""14"" [label=""return attr""];\n	""15"" [label=""return null""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""15""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_true""];\n	""8"" -> ""14""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n","protected , static "
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.nodeParent(Object),Method,* Gets the parent of the specified node.\n     * @param node to check\n     * @return parent Element,private static Element nodeParent(final Object node) {\n    if (node instanceof Element) {\n        final Object parent = ((Element) node).getParent();\n        return parent instanceof Element ? (Element) parent : null;\n    }\n    if (node instanceof Text) {\n        return (Element) ((Text) node).getParent();\n    }\n    if (node instanceof CDATA) {\n        return (Element) ((CDATA) node).getParent();\n    }\n    if (node instanceof ProcessingInstruction) {\n        return (Element) ((ProcessingInstruction) node).getParent();\n    }\n    if (node instanceof Comment) {\n        return (Element) ((Comment) node).getParent();\n    }\n    return null;\n},org.jdom.Element nodeParent(java.lang.Object),"digraph cfg_nodeParent {\n	""1"" [label=""$stack10 = (org.jdom.ProcessingInstruction) node""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.jdom.ProcessingInstruction: org.jdom.Parent getParent()>()""];\n	""3"" [label=""$stack12 = (org.jdom.Element) $stack11""];\n	""4"" [label=""$stack13 = (org.jdom.CDATA) node""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<org.jdom.CDATA: org.jdom.Parent getParent()>()""];\n	""6"" [label=""$stack15 = (org.jdom.Element) $stack14""];\n	""7"" [label=""$stack16 = (org.jdom.Text) node""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<org.jdom.Text: org.jdom.Parent getParent()>()""];\n	""9"" [label=""$stack18 = (org.jdom.Element) $stack17""];\n	""10"" [label=""$stack19 = (org.jdom.Element) node""];\n	""11"" [label=""$stack2 = node instanceof org.jdom.Element""];\n	""12"" [label=""$stack20 = parent instanceof org.jdom.Element""];\n	""13"" [label=""$stack21 = (org.jdom.Element) parent""];\n	""14"" [label=""$stack21 = null""];\n	""15"" [label=""$stack3 = node instanceof org.jdom.Text""];\n	""16"" [label=""$stack4 = node instanceof org.jdom.CDATA""];\n	""17"" [label=""$stack5 = node instanceof org.jdom.ProcessingInstruction""];\n	""18"" [label=""$stack6 = node instanceof org.jdom.Comment""];\n	""19"" [label=""$stack7 = (org.jdom.Comment) node""];\n	""20"" [label=""$stack8 = virtualinvoke $stack7.<org.jdom.Comment: org.jdom.Parent getParent()>()""];\n	""21"" [label=""$stack9 = (org.jdom.Element) $stack8""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack2 == 0""];\n	""24"" [label=""if $stack20 == 0""];\n	""25"" [label=""if $stack3 == 0""];\n	""26"" [label=""if $stack4 == 0""];\n	""27"" [label=""if $stack5 == 0""];\n	""28"" [label=""if $stack6 == 0""];\n	""29"" [label=""node := @parameter0: java.lang.Object""];\n	""30"" [label=""parent = virtualinvoke $stack19.<org.jdom.Element: org.jdom.Parent getParent()>()""];\n	""31"" [label=""return $stack12""];\n	""32"" [label=""return $stack15""];\n	""33"" [label=""return $stack18""];\n	""34"" [label=""return $stack21""];\n	""35"" [label=""return $stack9""];\n	""36"" [label=""return null""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""30""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""34""[label=""cfg_next""];\n	""15"" -> ""25""[label=""cfg_next""];\n	""16"" -> ""26""[label=""cfg_next""];\n	""17"" -> ""27""[label=""cfg_next""];\n	""18"" -> ""28""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""35""[label=""cfg_next""];\n	""22"" -> ""34""[label=""cfg_goto""];\n	""23"" -> ""10""[label=""cfg_false""];\n	""23"" -> ""15""[label=""cfg_true""];\n	""24"" -> ""13""[label=""cfg_false""];\n	""24"" -> ""14""[label=""cfg_true""];\n	""25"" -> ""16""[label=""cfg_true""];\n	""25"" -> ""7""[label=""cfg_false""];\n	""26"" -> ""17""[label=""cfg_true""];\n	""26"" -> ""4""[label=""cfg_false""];\n	""27"" -> ""1""[label=""cfg_false""];\n	""27"" -> ""18""[label=""cfg_true""];\n	""28"" -> ""19""[label=""cfg_false""];\n	""28"" -> ""36""[label=""cfg_true""];\n	""29"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""31""[label=""cfg_next""];\n	""30"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""32""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n","private , static "
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.createChild(JXPathContext,QName,int)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, int index) {\n    if (index == WHOLE_COLLECTION) {\n        index = 0;\n    }\n    final boolean success = getAbstractFactory(context).createObject(context, this, node, name.toString(), index);\n    if (success) {\n        NodeTest nodeTest;\n        final String prefix = name.getPrefix();\n        final String namespaceURI = prefix == null ? null : context.getNamespaceURI(prefix);\n        nodeTest = new NodeNameTest(name, namespaceURI);\n        final NodeIterator it = childIterator(nodeTest, false, null);\n        if (it != null && it.setPosition(index + 1)) {\n            return it.getNodePointer();\n        }\n    }\n    throw new JXPathAbstractFactoryException(""Factory could not create "" + ""a child node for path: "" + asPath() + ""/"" + name + ""["" + (index + 1) + ""]"");\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)","digraph cfg_createChild {\n	""1"" [label=""$stack10 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.AbstractFactory getAbstractFactory(org.apache.commons.jxpath.JXPathContext)>(context)""];\n	""3"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String asPath()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Factory could not create a child node for path: \"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/\"")""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(name)""];\n	""9"" [label=""$stack18 = index + 1""];\n	""10"" [label=""$stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[\"")""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack18)""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""]\"")""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""15"" [label=""$stack24 = new org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""16"" [label=""$stack25 = index + 1""];\n	""17"" [label=""$stack26 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>($stack25)""];\n	""18"" [label=""$stack27 = interfaceinvoke it.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""19"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""20"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack26 == 0""];\n	""23"" [label=""if index != -2147483648""];\n	""24"" [label=""if it == null""];\n	""25"" [label=""if prefix != null""];\n	""26"" [label=""if success == 0""];\n	""27"" [label=""index := @parameter2: int""];\n	""28"" [label=""index = 0""];\n	""29"" [label=""it = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(nodeTest, 0, null)""];\n	""30"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""31"" [label=""namespaceURI = null""];\n	""32"" [label=""namespaceURI = virtualinvoke context.<org.apache.commons.jxpath.JXPathContext: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""33"" [label=""nodeTest = $stack24""];\n	""34"" [label=""prefix = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""35"" [label=""return $stack27""];\n	""36"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()""];\n	""37"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.JXPathAbstractFactoryException: void <init>(java.lang.String)>($stack22)""];\n	""38"" [label=""specialinvoke $stack24.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: void <init>(org.apache.commons.jxpath.ri.QName,java.lang.String)>(name, namespaceURI)""];\n	""39"" [label=""success = virtualinvoke $stack11.<org.apache.commons.jxpath.AbstractFactory: boolean createObject(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.Pointer,java.lang.Object,java.lang.String,int)>(context, this, $stack9, $stack10, index)""];\n	""40"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""41"" [label=""throw $stack23""];\n	""1"" -> ""39""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""37""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""38""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""35""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_next""];\n	""21"" -> ""15""[label=""cfg_goto""];\n	""22"" -> ""14""[label=""cfg_true""];\n	""22"" -> ""18""[label=""cfg_false""];\n	""23"" -> ""2""[label=""cfg_true""];\n	""23"" -> ""28""[label=""cfg_false""];\n	""24"" -> ""14""[label=""cfg_true""];\n	""24"" -> ""16""[label=""cfg_false""];\n	""25"" -> ""31""[label=""cfg_false""];\n	""25"" -> ""32""[label=""cfg_true""];\n	""26"" -> ""14""[label=""cfg_true""];\n	""26"" -> ""34""[label=""cfg_false""];\n	""27"" -> ""23""[label=""cfg_next""];\n	""28"" -> ""2""[label=""cfg_next""];\n	""29"" -> ""24""[label=""cfg_next""];\n	""3"" -> ""36""[label=""cfg_next""];\n	""30"" -> ""27""[label=""cfg_next""];\n	""31"" -> ""21""[label=""cfg_next""];\n	""32"" -> ""15""[label=""cfg_next""];\n	""33"" -> ""29""[label=""cfg_next""];\n	""34"" -> ""25""[label=""cfg_next""];\n	""36"" -> ""5""[label=""cfg_next""];\n	""37"" -> ""41""[label=""cfg_next""];\n	""38"" -> ""33""[label=""cfg_next""];\n	""39"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""40"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.createChild(JXPathContext,QName,int,Object)",Method,No Comment,"@Override\npublic NodePointer createChild(final JXPathContext context, final QName name, final int index, final Object value) {\n    final NodePointer ptr = createChild(context, name, index);\n    ptr.setValue(value);\n    return ptr;\n}","org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int,java.lang.Object)","digraph cfg_createChild {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""2"" [label=""index := @parameter2: int""];\n	""3"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""ptr = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer createChild(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName,int)>(context, name, index)""];\n	""5"" [label=""return ptr""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""7"" [label=""value := @parameter3: java.lang.Object""];\n	""8"" [label=""virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: void setValue(java.lang.Object)>(value)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.createAttribute(JXPathContext,QName)",Method,No Comment,"@Override\npublic NodePointer createAttribute(final JXPathContext context, final QName name) {\n    if (!(node instanceof Element)) {\n        return super.createAttribute(context, name);\n    }\n    final Element element = (Element) node;\n    final String prefix = name.getPrefix();\n    if (prefix != null) {\n        final String namespaceUri = getNamespaceResolver().getNamespaceURI(prefix);\n        if (namespaceUri == null) {\n            throw new JXPathException(""Unknown namespace prefix: "" + prefix);\n        }\n        final Namespace ns = Namespace.getNamespace(prefix, namespaceUri);\n        final Attribute attr = element.getAttribute(name.getName(), ns);\n        if (attr == null) {\n            element.setAttribute(name.getName(), """", ns);\n        }\n    } else {\n        final Attribute attr = element.getAttribute(name.getName());\n        if (attr == null) {\n            element.setAttribute(name.getName(), """");\n        }\n    }\n    final NodeIterator it = attributeIterator(name);\n    it.setPosition(1);\n    return it.getNodePointer();\n}","org.apache.commons.jxpath.ri.model.NodePointer createAttribute(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName)","digraph cfg_createAttribute {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack11 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""3"" [label=""$stack12 = interfaceinvoke namespaceUri.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""4"" [label=""$stack13 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""5"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""6"" [label=""$stack15 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""7"" [label=""$stack16 = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""8"" [label=""$stack17 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Unknown namespace prefix: \"")""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix)""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack21 = new org.apache.commons.jxpath.JXPathException""];\n	""13"" [label=""$stack22 = specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createAttribute(org.apache.commons.jxpath.JXPathContext,org.apache.commons.jxpath.ri.QName)>(context, name)""];\n	""14"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""15"" [label=""$stack9 = $stack8 instanceof org.jdom.Element""];\n	""16"" [label=""attr = virtualinvoke element.<org.jdom.Element: org.jdom.Attribute getAttribute(java.lang.String,org.jdom.Namespace)>($stack15, ns)""];\n	""17"" [label=""context := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""18"" [label=""element = (org.jdom.Element) $stack10""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack9 != 0""];\n	""21"" [label=""if attr != null""];\n	""22"" [label=""if namespaceUri != null""];\n	""23"" [label=""if namespaceUri != null""];\n	""24"" [label=""if prefix == null""];\n	""25"" [label=""interfaceinvoke namespaceUri.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(1)""];\n	""26"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""27"" [label=""namespaceUri = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""28"" [label=""namespaceUri = virtualinvoke element.<org.jdom.Element: org.jdom.Attribute getAttribute(java.lang.String)>($stack11)""];\n	""29"" [label=""namespaceUri = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)>(name)""];\n	""30"" [label=""ns = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>(prefix, namespaceUri)""];\n	""31"" [label=""prefix = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""32"" [label=""return $stack12""];\n	""33"" [label=""return $stack22""];\n	""34"" [label=""specialinvoke $stack17.<java.lang.StringBuilder: void <init>()>()""];\n	""35"" [label=""specialinvoke $stack21.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack20)""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""37"" [label=""throw $stack21""];\n	""38"" [label=""virtualinvoke element.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>($stack13, \""\"")""];\n	""39"" [label=""virtualinvoke element.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String,org.jdom.Namespace)>($stack16, \""\"", ns)""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""35""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""33""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""26""[label=""cfg_next""];\n	""18"" -> ""31""[label=""cfg_next""];\n	""19"" -> ""29""[label=""cfg_goto""];\n	""2"" -> ""28""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_true""];\n	""20"" -> ""13""[label=""cfg_false""];\n	""21"" -> ""19""[label=""cfg_true""];\n	""21"" -> ""7""[label=""cfg_false""];\n	""22"" -> ""12""[label=""cfg_false""];\n	""22"" -> ""30""[label=""cfg_true""];\n	""23"" -> ""29""[label=""cfg_true""];\n	""23"" -> ""4""[label=""cfg_false""];\n	""24"" -> ""2""[label=""cfg_true""];\n	""24"" -> ""5""[label=""cfg_false""];\n	""25"" -> ""3""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_next""];\n	""27"" -> ""22""[label=""cfg_next""];\n	""28"" -> ""23""[label=""cfg_next""];\n	""29"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""32""[label=""cfg_next""];\n	""30"" -> ""6""[label=""cfg_next""];\n	""31"" -> ""24""[label=""cfg_next""];\n	""34"" -> ""9""[label=""cfg_next""];\n	""35"" -> ""37""[label=""cfg_next""];\n	""36"" -> ""17""[label=""cfg_next""];\n	""38"" -> ""29""[label=""cfg_next""];\n	""39"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""38""[label=""cfg_next""];\n	""5"" -> ""27""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""39""[label=""cfg_next""];\n	""8"" -> ""34""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.remove(),Method,No Comment,"@Override\npublic void remove() {\n    final Element parent = nodeParent(node);\n    if (parent == null) {\n        throw new JXPathException(""Cannot remove root JDOM node"");\n    }\n    parent.getContent().remove(node);\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""3"" [label=""$stack4 = virtualinvoke parent.<org.jdom.Element: java.util.List getContent()>()""];\n	""4"" [label=""$stack5 = new org.apache.commons.jxpath.JXPathException""];\n	""5"" [label=""if parent != null""];\n	""6"" [label=""interfaceinvoke $stack4.<java.util.List: boolean remove(java.lang.Object)>($stack3)""];\n	""7"" [label=""parent = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.jdom.Element nodeParent(java.lang.Object)>($stack2)""];\n	""8"" [label=""return""];\n	""9"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""Cannot remove root JDOM node\"")""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""11"" [label=""throw $stack5""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    if (id != null) {\n        return ""id('"" + escape(id) + ""')"";\n    }\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n    }\n    if (node instanceof Element) {\n        // If the parent pointer is not a JDOMNodePointer, it is\n        // the parent's responsibility to produce the node test part\n        // of the path\n        if (parent instanceof JDOMNodePointer) {\n            if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n                buffer.append('/');\n            }\n            final String nsURI = getNamespaceURI();\n            final String ln = getLocalName(node);\n            if (nsURI == null) {\n                buffer.append(ln);\n                buffer.append('[');\n                buffer.append(getRelativePositionByQName()).append(']');\n            } else {\n                final String prefix = getNamespaceResolver().getPrefix(nsURI);\n                if (prefix != null) {\n                    buffer.append(prefix);\n                    buffer.append(':');\n                    buffer.append(ln);\n                    buffer.append('[');\n                    buffer.append(getRelativePositionByQName());\n                } else {\n                    buffer.append(""node()"");\n                    buffer.append('[');\n                    buffer.append(getRelativePositionOfElement());\n                }\n                buffer.append(']');\n            }\n        }\n    } else if (node instanceof Text || node instanceof CDATA) {\n        buffer.append(""/text()"");\n        buffer.append('[').append(getRelativePositionOfTextNode()).append(']');\n    } else if (node instanceof ProcessingInstruction) {\n        buffer.append(""/processing-instruction(\'"").append(((ProcessingInstruction) node).getTarget()).append(""')"");\n        buffer.append('[').append(getRelativePositionOfPI()).append(']');\n    }\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack11 = $stack10 instanceof org.jdom.Text""];\n	""3"" [label=""$stack12 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: int getRelativePositionOfTextNode()>()""];\n	""4"" [label=""$stack13 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack12)""];\n	""6"" [label=""$stack15 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""8"" [label=""$stack17 = $stack16 instanceof org.jdom.CDATA""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""10"" [label=""$stack19 = $stack18 instanceof org.jdom.ProcessingInstruction""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""12"" [label=""$stack21 = (org.jdom.ProcessingInstruction) $stack20""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""14"" [label=""$stack23 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/processing-instruction(\'\"")""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22)""];\n	""16"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: int getRelativePositionOfPI()>()""];\n	""17"" [label=""$stack26 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""18"" [label=""$stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack25)""];\n	""19"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""20"" [label=""$stack29 = $stack28 instanceof org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""21"" [label=""$stack30 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""22"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""23"" [label=""$stack32 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""24"" [label=""$stack33 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: int getRelativePositionOfElement()>()""];\n	""25"" [label=""$stack34 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: int getRelativePositionByQName()>()""];\n	""26"" [label=""$stack35 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: int getRelativePositionByQName()>()""];\n	""27"" [label=""$stack36 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack35)""];\n	""28"" [label=""$stack37 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""29"" [label=""$stack38 = $stack37 - 1""];\n	""30"" [label=""$stack39 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack38)""];\n	""31"" [label=""$stack40 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""32"" [label=""$stack41 = virtualinvoke $stack40.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""33"" [label=""$stack42 = new java.lang.StringBuilder""];\n	""34"" [label=""$stack43 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String id>""];\n	""35"" [label=""$stack44 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String escape(java.lang.String)>($stack43)""];\n	""36"" [label=""$stack45 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""id(\'\"")""];\n	""37"" [label=""$stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44)""];\n	""38"" [label=""$stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\')\"")""];\n	""39"" [label=""$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""40"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String id>""];\n	""41"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""42"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""43"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""44"" [label=""$stack9 = $stack8 instanceof org.jdom.Element""];\n	""45"" [label=""buffer = $stack6""];\n	""46"" [label=""goto""];\n	""47"" [label=""goto""];\n	""48"" [label=""goto""];\n	""49"" [label=""goto""];\n	""50"" [label=""if $stack11 != 0""];\n	""51"" [label=""if $stack17 == 0""];\n	""52"" [label=""if $stack19 == 0""];\n	""53"" [label=""if $stack29 == 0""];\n	""54"" [label=""if $stack30 == 0""];\n	""55"" [label=""if $stack39 == 47""];\n	""56"" [label=""if $stack5 == null""];\n	""57"" [label=""if $stack7 == null""];\n	""58"" [label=""if $stack9 == 0""];\n	""59"" [label=""if nsURI != null""];\n	""60"" [label=""if prefix == null""];\n	""61"" [label=""ln = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getLocalName(java.lang.Object)>($stack31)""];\n	""62"" [label=""nsURI = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getNamespaceURI()>()""];\n	""63"" [label=""prefix = virtualinvoke $stack32.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getPrefix(java.lang.String)>(nsURI)""];\n	""64"" [label=""return $stack15""];\n	""65"" [label=""return $stack48""];\n	""66"" [label=""specialinvoke $stack42.<java.lang.StringBuilder: void <init>()>()""];\n	""67"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""68"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""69"" [label=""virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""70"" [label=""virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\')\"")""];\n	""71"" [label=""virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""72"" [label=""virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""73"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""74"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)""];\n	""75"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""76"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""77"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""78"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""79"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack33)""];\n	""80"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack34)""];\n	""81"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/text()\"")""];\n	""82"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""node()\"")""];\n	""83"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41)""];\n	""84"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ln)""];\n	""85"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ln)""];\n	""86"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""52""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""70""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""71""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""50""[label=""cfg_next""];\n	""20"" -> ""53""[label=""cfg_next""];\n	""21"" -> ""54""[label=""cfg_next""];\n	""22"" -> ""61""[label=""cfg_next""];\n	""23"" -> ""63""[label=""cfg_next""];\n	""24"" -> ""79""[label=""cfg_next""];\n	""25"" -> ""80""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""72""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""30"" -> ""55""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""83""[label=""cfg_next""];\n	""33"" -> ""66""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""37""[label=""cfg_next""];\n	""36"" -> ""34""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""39"" -> ""65""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""56""[label=""cfg_next""];\n	""41"" -> ""67""[label=""cfg_next""];\n	""42"" -> ""57""[label=""cfg_next""];\n	""43"" -> ""44""[label=""cfg_next""];\n	""44"" -> ""58""[label=""cfg_next""];\n	""45"" -> ""42""[label=""cfg_next""];\n	""46"" -> ""47""[label=""cfg_goto""];\n	""47"" -> ""6""[label=""cfg_goto""];\n	""48"" -> ""78""[label=""cfg_goto""];\n	""49"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""69""[label=""cfg_next""];\n	""50"" -> ""7""[label=""cfg_false""];\n	""50"" -> ""81""[label=""cfg_true""];\n	""51"" -> ""81""[label=""cfg_false""];\n	""51"" -> ""9""[label=""cfg_true""];\n	""52"" -> ""14""[label=""cfg_false""];\n	""52"" -> ""6""[label=""cfg_true""];\n	""53"" -> ""21""[label=""cfg_false""];\n	""53"" -> ""6""[label=""cfg_true""];\n	""54"" -> ""28""[label=""cfg_false""];\n	""54"" -> ""73""[label=""cfg_true""];\n	""55"" -> ""62""[label=""cfg_true""];\n	""55"" -> ""73""[label=""cfg_false""];\n	""56"" -> ""33""[label=""cfg_false""];\n	""56"" -> ""41""[label=""cfg_true""];\n	""57"" -> ""31""[label=""cfg_false""];\n	""57"" -> ""43""[label=""cfg_true""];\n	""58"" -> ""1""[label=""cfg_true""];\n	""58"" -> ""19""[label=""cfg_false""];\n	""59"" -> ""23""[label=""cfg_true""];\n	""59"" -> ""84""[label=""cfg_false""];\n	""6"" -> ""64""[label=""cfg_next""];\n	""60"" -> ""82""[label=""cfg_true""];\n	""60"" -> ""86""[label=""cfg_false""];\n	""61"" -> ""59""[label=""cfg_next""];\n	""62"" -> ""22""[label=""cfg_next""];\n	""63"" -> ""60""[label=""cfg_next""];\n	""66"" -> ""36""[label=""cfg_next""];\n	""67"" -> ""45""[label=""cfg_next""];\n	""68"" -> ""40""[label=""cfg_next""];\n	""69"" -> ""49""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""17""[label=""cfg_next""];\n	""71"" -> ""6""[label=""cfg_next""];\n	""72"" -> ""46""[label=""cfg_next""];\n	""73"" -> ""62""[label=""cfg_next""];\n	""74"" -> ""85""[label=""cfg_next""];\n	""75"" -> ""26""[label=""cfg_next""];\n	""76"" -> ""25""[label=""cfg_next""];\n	""77"" -> ""24""[label=""cfg_next""];\n	""78"" -> ""47""[label=""cfg_next""];\n	""79"" -> ""78""[label=""cfg_next""];\n	""8"" -> ""51""[label=""cfg_next""];\n	""80"" -> ""48""[label=""cfg_next""];\n	""81"" -> ""4""[label=""cfg_next""];\n	""82"" -> ""77""[label=""cfg_next""];\n	""83"" -> ""43""[label=""cfg_next""];\n	""84"" -> ""75""[label=""cfg_next""];\n	""85"" -> ""76""[label=""cfg_next""];\n	""86"" -> ""74""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionByQName(),Method,* Gets relative position of this among like-named siblings.\n     * @return 1..n,private int getRelativePositionByQName() {\n    if (node instanceof Element) {\n        final Object parent = ((Element) node).getParent();\n        if (!(parent instanceof Element)) {\n            return 1;\n        }\n        final List children = ((Element) parent).getContent();\n        int count = 0;\n        for (final Object child : children) {\n            if (child instanceof Element && matchesQName((Element) child)) {\n                count++;\n            }\n            if (child == node) {\n                break;\n            }\n        }\n        return count;\n    }\n    return 1;\n},int getRelativePositionByQName(),"digraph cfg_getRelativePositionByQName {\n	""1"" [label=""$stack10 = parent instanceof org.jdom.Element""];\n	""2"" [label=""$stack11 = (org.jdom.Element) parent""];\n	""3"" [label=""$stack12 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack13 = child instanceof org.jdom.Element""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""6"" [label=""$stack15 = (org.jdom.Element) child""];\n	""7"" [label=""$stack16 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: boolean matchesQName(org.jdom.Element)>($stack15)""];\n	""8"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""9"" [label=""$stack7 = $stack6 instanceof org.jdom.Element""];\n	""10"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""11"" [label=""$stack9 = (org.jdom.Element) $stack8""];\n	""12"" [label=""child = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()""];\n	""13"" [label=""children = virtualinvoke $stack11.<org.jdom.Element: java.util.List getContent()>()""];\n	""14"" [label=""count = 0""];\n	""15"" [label=""count = count + 1""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack10 != 0""];\n	""19"" [label=""if $stack12 == 0""];\n	""20"" [label=""if $stack13 == 0""];\n	""21"" [label=""if $stack16 == 0""];\n	""22"" [label=""if $stack7 == 0""];\n	""23"" [label=""if child != $stack14""];\n	""24"" [label=""l4 = interfaceinvoke children.<java.util.List: java.util.Iterator iterator()>()""];\n	""25"" [label=""parent = virtualinvoke $stack9.<org.jdom.Element: org.jdom.Parent getParent()>()""];\n	""26"" [label=""return 1""];\n	""27"" [label=""return 1""];\n	""28"" [label=""return count""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_goto""];\n	""17"" -> ""3""[label=""cfg_goto""];\n	""18"" -> ""2""[label=""cfg_true""];\n	""18"" -> ""27""[label=""cfg_false""];\n	""19"" -> ""12""[label=""cfg_false""];\n	""19"" -> ""28""[label=""cfg_true""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_true""];\n	""20"" -> ""6""[label=""cfg_false""];\n	""21"" -> ""15""[label=""cfg_false""];\n	""21"" -> ""5""[label=""cfg_true""];\n	""22"" -> ""10""[label=""cfg_false""];\n	""22"" -> ""26""[label=""cfg_true""];\n	""23"" -> ""16""[label=""cfg_false""];\n	""23"" -> ""17""[label=""cfg_true""];\n	""24"" -> ""3""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.matchesQName(Element),Method,No Comment,private boolean matchesQName(final Element element) {\n    if (getNamespaceURI() != null) {\n        final String ns = getNamespaceURI(element);\n        if (ns == null || !ns.equals(getNamespaceURI())) {\n            return false;\n        }\n    }\n    return element.getName().equals(((Element) node).getName());\n},boolean matchesQName(org.jdom.Element),"digraph cfg_matchesQName {\n	""1"" [label=""$stack10 = virtualinvoke ns.<java.lang.String: boolean equals(java.lang.Object)>($stack9)""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""4"" [label=""$stack5 = (org.jdom.Element) $stack4""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<org.jdom.Element: java.lang.String getName()>()""];\n	""6"" [label=""$stack7 = virtualinvoke element.<org.jdom.Element: java.lang.String getName()>()""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>($stack6)""];\n	""8"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getNamespaceURI()>()""];\n	""9"" [label=""element := @parameter0: org.jdom.Element""];\n	""10"" [label=""if $stack10 != 0""];\n	""11"" [label=""if $stack3 == null""];\n	""12"" [label=""if ns == null""];\n	""13"" [label=""ns = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String getNamespaceURI(java.lang.Object)>(element)""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""return 0""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""13""[label=""cfg_false""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""12"" -> ""15""[label=""cfg_true""];\n	""12"" -> ""8""[label=""cfg_false""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionOfElement(),Method,* Gets relative position of this among all siblings.\n     * @return 1..n,private int getRelativePositionOfElement() {\n    final Object parent = ((Element) node).getParent();\n    if (parent == null) {\n        return 1;\n    }\n    List children;\n    if (parent instanceof Element) {\n        children = ((Element) parent).getContent();\n    } else {\n        children = ((Document) parent).getContent();\n    }\n    int count = 0;\n    for (final Object child : children) {\n        if (child instanceof Element) {\n            count++;\n        }\n        if (child == node) {\n            break;\n        }\n    }\n    return count;\n},int getRelativePositionOfElement(),"digraph cfg_getRelativePositionOfElement {\n	""1"" [label=""$stack10 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()""];\n	""2"" [label=""$stack11 = child instanceof org.jdom.Element""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""4"" [label=""$stack13 = (org.jdom.Element) parent""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""6"" [label=""$stack7 = (org.jdom.Element) $stack6""];\n	""7"" [label=""$stack8 = parent instanceof org.jdom.Element""];\n	""8"" [label=""$stack9 = (org.jdom.Document) parent""];\n	""9"" [label=""child = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()""];\n	""10"" [label=""children = virtualinvoke $stack13.<org.jdom.Element: java.util.List getContent()>()""];\n	""11"" [label=""children = virtualinvoke $stack9.<org.jdom.Document: java.util.List getContent()>()""];\n	""12"" [label=""count = 0""];\n	""13"" [label=""count = count + 1""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""if $stack10 == 0""];\n	""18"" [label=""if $stack11 == 0""];\n	""19"" [label=""if $stack8 == 0""];\n	""20"" [label=""if child != $stack12""];\n	""21"" [label=""if parent != null""];\n	""22"" [label=""l4 = interfaceinvoke children.<java.util.List: java.util.Iterator iterator()>()""];\n	""23"" [label=""parent = virtualinvoke $stack7.<org.jdom.Element: org.jdom.Parent getParent()>()""];\n	""24"" [label=""return 1""];\n	""25"" [label=""return count""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_goto""];\n	""15"" -> ""25""[label=""cfg_goto""];\n	""16"" -> ""1""[label=""cfg_goto""];\n	""17"" -> ""25""[label=""cfg_true""];\n	""17"" -> ""9""[label=""cfg_false""];\n	""18"" -> ""13""[label=""cfg_false""];\n	""18"" -> ""3""[label=""cfg_true""];\n	""19"" -> ""4""[label=""cfg_false""];\n	""19"" -> ""8""[label=""cfg_true""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_false""];\n	""20"" -> ""16""[label=""cfg_true""];\n	""21"" -> ""24""[label=""cfg_false""];\n	""21"" -> ""7""[label=""cfg_true""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionOfTextNode(),Method,* Gets the relative position of this among sibling text nodes.\n     * @return 1..n,private int getRelativePositionOfTextNode() {\n    Element parent;\n    if (node instanceof Text) {\n        parent = (Element) ((Text) node).getParent();\n    } else {\n        parent = (Element) ((CDATA) node).getParent();\n    }\n    if (parent == null) {\n        return 1;\n    }\n    final List children = parent.getContent();\n    int count = 0;\n    for (final Object child : children) {\n        if (child instanceof Text || child instanceof CDATA) {\n            count++;\n        }\n        if (child == node) {\n            break;\n        }\n    }\n    return count;\n},int getRelativePositionOfTextNode(),"digraph cfg_getRelativePositionOfTextNode {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.jdom.CDATA: org.jdom.Parent getParent()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()""];\n	""3"" [label=""$stack12 = child instanceof org.jdom.Text""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""5"" [label=""$stack14 = child instanceof org.jdom.CDATA""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""7"" [label=""$stack16 = (org.jdom.Text) $stack15""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<org.jdom.Text: org.jdom.Parent getParent()>()""];\n	""9"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""10"" [label=""$stack7 = $stack6 instanceof org.jdom.Text""];\n	""11"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""12"" [label=""$stack9 = (org.jdom.CDATA) $stack8""];\n	""13"" [label=""child = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()""];\n	""14"" [label=""children = virtualinvoke parent.<org.jdom.Element: java.util.List getContent()>()""];\n	""15"" [label=""count = 0""];\n	""16"" [label=""count = count + 1""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack11 == 0""];\n	""21"" [label=""if $stack12 != 0""];\n	""22"" [label=""if $stack14 == 0""];\n	""23"" [label=""if $stack7 == 0""];\n	""24"" [label=""if child != $stack13""];\n	""25"" [label=""if parent != null""];\n	""26"" [label=""l4 = interfaceinvoke children.<java.util.List: java.util.Iterator iterator()>()""];\n	""27"" [label=""parent = (org.jdom.Element) $stack10""];\n	""28"" [label=""parent = (org.jdom.Element) $stack17""];\n	""29"" [label=""return 1""];\n	""30"" [label=""return count""];\n	""31"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""26""[label=""cfg_next""];\n	""16"" -> ""4""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_goto""];\n	""18"" -> ""30""[label=""cfg_goto""];\n	""19"" -> ""2""[label=""cfg_goto""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_false""];\n	""20"" -> ""30""[label=""cfg_true""];\n	""21"" -> ""16""[label=""cfg_true""];\n	""21"" -> ""5""[label=""cfg_false""];\n	""22"" -> ""16""[label=""cfg_false""];\n	""22"" -> ""4""[label=""cfg_true""];\n	""23"" -> ""11""[label=""cfg_true""];\n	""23"" -> ""6""[label=""cfg_false""];\n	""24"" -> ""18""[label=""cfg_false""];\n	""24"" -> ""19""[label=""cfg_true""];\n	""25"" -> ""14""[label=""cfg_true""];\n	""25"" -> ""29""[label=""cfg_false""];\n	""26"" -> ""2""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""31"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.getRelativePositionOfPI(),Method,* Gets the relative position of this among same-target processing instruction siblings.\n     * @return 1..n,private int getRelativePositionOfPI() {\n    final String target = ((ProcessingInstruction) node).getTarget();\n    final Element parent = (Element) ((ProcessingInstruction) node).getParent();\n    if (parent == null) {\n        return 1;\n    }\n    final List children = parent.getContent();\n    int count = 0;\n    for (final Object child : children) {\n        if (child instanceof ProcessingInstruction && (target == null || target.equals(((ProcessingInstruction) child).getTarget()))) {\n            count++;\n        }\n        if (child == node) {\n            break;\n        }\n    }\n    return count;\n},int getRelativePositionOfPI(),"digraph cfg_getRelativePositionOfPI {\n	""1"" [label=""$stack10 = (org.jdom.ProcessingInstruction) $stack9""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.jdom.ProcessingInstruction: org.jdom.Parent getParent()>()""];\n	""3"" [label=""$stack12 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack13 = child instanceof org.jdom.ProcessingInstruction""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""6"" [label=""$stack15 = (org.jdom.ProcessingInstruction) child""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""8"" [label=""$stack17 = virtualinvoke target.<java.lang.String: boolean equals(java.lang.Object)>($stack16)""];\n	""9"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""10"" [label=""$stack8 = (org.jdom.ProcessingInstruction) $stack7""];\n	""11"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""12"" [label=""child = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>()""];\n	""13"" [label=""children = virtualinvoke parent.<org.jdom.Element: java.util.List getContent()>()""];\n	""14"" [label=""count = 0""];\n	""15"" [label=""count = count + 1""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack12 == 0""];\n	""19"" [label=""if $stack13 == 0""];\n	""20"" [label=""if $stack17 == 0""];\n	""21"" [label=""if child != $stack14""];\n	""22"" [label=""if parent != null""];\n	""23"" [label=""if target == null""];\n	""24"" [label=""l5 = interfaceinvoke children.<java.util.List: java.util.Iterator iterator()>()""];\n	""25"" [label=""parent = (org.jdom.Element) $stack11""];\n	""26"" [label=""return 1""];\n	""27"" [label=""return count""];\n	""28"" [label=""target = virtualinvoke $stack8.<org.jdom.ProcessingInstruction: java.lang.String getTarget()>()""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""27""[label=""cfg_goto""];\n	""17"" -> ""3""[label=""cfg_goto""];\n	""18"" -> ""12""[label=""cfg_false""];\n	""18"" -> ""27""[label=""cfg_true""];\n	""19"" -> ""23""[label=""cfg_false""];\n	""19"" -> ""5""[label=""cfg_true""];\n	""2"" -> ""25""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_false""];\n	""20"" -> ""5""[label=""cfg_true""];\n	""21"" -> ""16""[label=""cfg_false""];\n	""21"" -> ""17""[label=""cfg_true""];\n	""22"" -> ""13""[label=""cfg_true""];\n	""22"" -> ""26""[label=""cfg_false""];\n	""23"" -> ""15""[label=""cfg_true""];\n	""23"" -> ""6""[label=""cfg_false""];\n	""24"" -> ""3""[label=""cfg_next""];\n	""25"" -> ""22""[label=""cfg_next""];\n	""28"" -> ""11""[label=""cfg_next""];\n	""29"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return node.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.Object: int hashCode()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (object == this) {\n        return true;\n    }\n    if (!(object instanceof JDOMNodePointer)) {\n        return false;\n    }\n    final JDOMNodePointer other = (JDOMNodePointer) object;\n    return node == other.node;\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack3 = object instanceof org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""2"" [label=""$stack4 = other.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node>""];\n	""4"" [label=""$stack6 = 0""];\n	""5"" [label=""$stack6 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 != 0""];\n	""8"" [label=""if $stack5 != $stack4""];\n	""9"" [label=""if object != this""];\n	""10"" [label=""object := @parameter0: java.lang.Object""];\n	""11"" [label=""other = (org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer) object""];\n	""12"" [label=""return $stack6""];\n	""13"" [label=""return 0""];\n	""14"" [label=""return 1""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_goto""];\n	""7"" -> ""11""[label=""cfg_true""];\n	""7"" -> ""13""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""14""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.<init>(Object,Locale)",Constructor,* Create a new JDOMNodePointer.\n     * @param node pointed\n     * @param locale Locale,"public JDOMNodePointer(final Object node, final Locale locale) {\n    super(null, locale);\n    this.node = node;\n}","void <init>(java.lang.Object,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""locale := @parameter1: java.util.Locale""];\n	""2"" [label=""node := @parameter0: java.lang.Object""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node> = node""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.<init>(Object,Locale,String)",Constructor,* Create a new JDOMNodePointer.\n     * @param node pointed\n     * @param locale Locale\n     * @param id String id,"public JDOMNodePointer(final Object node, final Locale locale, final String id) {\n    super(null, locale);\n    this.node = node;\n    this.id = id;\n}","void <init>(java.lang.Object,java.util.Locale,java.lang.String)","digraph cfg_init {\n	""1"" [label=""id := @parameter2: java.lang.String""];\n	""2"" [label=""locale := @parameter1: java.util.Locale""];\n	""3"" [label=""node := @parameter0: java.lang.Object""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Locale)>(null, locale)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node> = node""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.String id> = id""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer.<init>(NodePointer,Object)",Constructor,* Create a new JDOMNodePointer.\n     * @param parent NodePointer\n     * @param node pointed,"public JDOMNodePointer(final NodePointer parent, final Object node) {\n    super(parent);\n    this.node = node;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""node := @parameter1: java.lang.Object""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: java.lang.Object node> = node""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator.getNodePointer(),Method,No Comment,"@Override\npublic NodePointer getNodePointer() {\n    if (position == 0) {\n        if (!setPosition(1)) {\n            return null;\n        }\n        position = 0;\n    }\n    int index = position - 1;\n    if (index < 0) {\n        index = 0;\n    }\n    return new JDOMAttributePointer(parent, (Attribute) attributes.get(index));\n}",org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: int position>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: int position>""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack6 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(index)""];\n	""6"" [label=""$stack7 = (org.jdom.Attribute) $stack6""];\n	""7"" [label=""$stack8 = new org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer""];\n	""8"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: boolean setPosition(int)>(1)""];\n	""9"" [label=""if $stack2 != 0""];\n	""10"" [label=""if $stack9 != 0""];\n	""11"" [label=""if index >= 0""];\n	""12"" [label=""index = $stack3 - 1""];\n	""13"" [label=""index = 0""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""return null""];\n	""16"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.jdom.Attribute)>($stack5, $stack7)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: int position> = 0""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_false""];\n	""10"" -> ""18""[label=""cfg_true""];\n	""11"" -> ""13""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""8""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (attributes == null) {\n        return false;\n    }\n    this.position = position;\n    return position >= 1 && position <= attributes.size();\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes>""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<java.util.List: int size()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 != null""];\n	""8"" [label=""if position < 1""];\n	""9"" [label=""if position > $stack4""];\n	""10"" [label=""position := @parameter0: int""];\n	""11"" [label=""return $stack5""];\n	""12"" [label=""return 0""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: int position> = position""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_false""];\n	""7"" -> ""14""[label=""cfg_true""];\n	""8"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator.<init>(NodePointer,QName)",Constructor,* Create a new JDOMAttributeIterator.\n     * @param parent pointer\n     * @param name test,"public JDOMAttributeIterator(final NodePointer parent, final QName name) {\n    this.parent = parent;\n    if (parent.getNode() instanceof Element) {\n        final Element element = (Element) parent.getNode();\n        final String prefix = name.getPrefix();\n        Namespace ns = null;\n        if (prefix != null) {\n            if (prefix.equals(""xml"")) {\n                ns = Namespace.XML_NAMESPACE;\n            } else {\n                final String uri = parent.getNamespaceResolver().getNamespaceURI(prefix);\n                if (uri != null) {\n                    ns = Namespace.getNamespace(prefix, uri);\n                }\n                if (ns == null) {\n                    // TBD: no attributes\n                    attributes = Collections.EMPTY_LIST;\n                    return;\n                }\n            }\n        } else {\n            ns = Namespace.NO_NAMESPACE;\n        }\n        final String lname = name.getName();\n        if (!lname.equals(""*"")) {\n            attributes = new ArrayList();\n            final Attribute attr = element.getAttribute(lname, ns);\n            if (attr != null) {\n                attributes.add(attr);\n            }\n        } else {\n            attributes = new ArrayList();\n            final List allAttributes = element.getAttributes();\n            for (int i = 0; i < allAttributes.size(); i++) {\n                final Attribute attr = (Attribute) allAttributes.get(i);\n                if (ns == Namespace.NO_NAMESPACE || attr.getNamespace().equals(ns)) {\n                    attributes.add(attr);\n                }\n            }\n        }\n    }\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)","digraph cfg_init {\n	""1"" [label=""$stack10 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""2"" [label=""$stack11 = $stack10 instanceof org.jdom.Element""];\n	""3"" [label=""$stack12 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""4"" [label=""$stack13 = virtualinvoke uri.<java.lang.String: boolean equals(java.lang.Object)>(\""*\"")""];\n	""5"" [label=""$stack14 = new java.util.ArrayList""];\n	""6"" [label=""$stack15 = interfaceinvoke attr.<java.util.List: int size()>()""];\n	""7"" [label=""$stack16 = interfaceinvoke attr.<java.util.List: java.lang.Object get(int)>(i)""];\n	""8"" [label=""$stack17 = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes>""];\n	""10"" [label=""$stack19 = virtualinvoke attr_1.<org.jdom.Attribute: org.jdom.Namespace getNamespace()>()""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<org.jdom.Namespace: boolean equals(java.lang.Object)>(ns)""];\n	""12"" [label=""$stack21 = new java.util.ArrayList""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes>""];\n	""14"" [label=""$stack23 = virtualinvoke prefix.<java.lang.String: boolean equals(java.lang.Object)>(\""xml\"")""];\n	""15"" [label=""$stack24 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""16"" [label=""$stack25 = <java.util.Collections: java.util.List EMPTY_LIST>""];\n	""17"" [label=""attr = virtualinvoke element.<org.jdom.Element: java.util.List getAttributes()>()""];\n	""18"" [label=""attr = virtualinvoke element.<org.jdom.Element: org.jdom.Attribute getAttribute(java.lang.String,org.jdom.Namespace)>(uri, ns)""];\n	""19"" [label=""attr_1 = (org.jdom.Attribute) $stack16""];\n	""20"" [label=""element = (org.jdom.Element) $stack12""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""i = 0""];\n	""26"" [label=""i = i + 1""];\n	""27"" [label=""if $stack11 == 0""];\n	""28"" [label=""if $stack13 != 0""];\n	""29"" [label=""if $stack20 == 0""];\n	""30"" [label=""if $stack23 == 0""];\n	""31"" [label=""if attr == null""];\n	""32"" [label=""if i >= $stack15""];\n	""33"" [label=""if ns != null""];\n	""34"" [label=""if ns == $stack17""];\n	""35"" [label=""if prefix == null""];\n	""36"" [label=""if uri == null""];\n	""37"" [label=""interfaceinvoke $stack18.<java.util.List: boolean add(java.lang.Object)>(attr_1)""];\n	""38"" [label=""interfaceinvoke $stack22.<java.util.List: boolean add(java.lang.Object)>(attr)""];\n	""39"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""40"" [label=""ns = <org.jdom.Namespace: org.jdom.Namespace NO_NAMESPACE>""];\n	""41"" [label=""ns = <org.jdom.Namespace: org.jdom.Namespace XML_NAMESPACE>""];\n	""42"" [label=""ns = null""];\n	""43"" [label=""ns = staticinvoke <org.jdom.Namespace: org.jdom.Namespace getNamespace(java.lang.String,java.lang.String)>(prefix, uri)""];\n	""44"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""45"" [label=""prefix = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""46"" [label=""return""];\n	""47"" [label=""return""];\n	""48"" [label=""specialinvoke $stack14.<java.util.ArrayList: void <init>()>()""];\n	""49"" [label=""specialinvoke $stack21.<java.util.ArrayList: void <init>()>()""];\n	""50"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""51"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator""];\n	""52"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: int position> = 0""];\n	""53"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes> = $stack14""];\n	""54"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes> = $stack21""];\n	""55"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: java.util.List attributes> = $stack25""];\n	""56"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""57"" [label=""uri = virtualinvoke $stack24.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""58"" [label=""uri = virtualinvoke name.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""29""[label=""cfg_next""];\n	""12"" -> ""49""[label=""cfg_next""];\n	""13"" -> ""38""[label=""cfg_next""];\n	""14"" -> ""30""[label=""cfg_next""];\n	""15"" -> ""57""[label=""cfg_next""];\n	""16"" -> ""55""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""31""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""20"" -> ""45""[label=""cfg_next""];\n	""21"" -> ""58""[label=""cfg_goto""];\n	""22"" -> ""58""[label=""cfg_goto""];\n	""23"" -> ""46""[label=""cfg_goto""];\n	""24"" -> ""6""[label=""cfg_goto""];\n	""25"" -> ""6""[label=""cfg_next""];\n	""26"" -> ""24""[label=""cfg_next""];\n	""27"" -> ""3""[label=""cfg_false""];\n	""27"" -> ""46""[label=""cfg_true""];\n	""28"" -> ""12""[label=""cfg_false""];\n	""28"" -> ""5""[label=""cfg_true""];\n	""29"" -> ""26""[label=""cfg_true""];\n	""29"" -> ""9""[label=""cfg_false""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""30"" -> ""15""[label=""cfg_true""];\n	""30"" -> ""41""[label=""cfg_false""];\n	""31"" -> ""13""[label=""cfg_false""];\n	""31"" -> ""23""[label=""cfg_true""];\n	""32"" -> ""46""[label=""cfg_true""];\n	""32"" -> ""7""[label=""cfg_false""];\n	""33"" -> ""16""[label=""cfg_false""];\n	""33"" -> ""22""[label=""cfg_true""];\n	""34"" -> ""10""[label=""cfg_false""];\n	""34"" -> ""9""[label=""cfg_true""];\n	""35"" -> ""14""[label=""cfg_false""];\n	""35"" -> ""40""[label=""cfg_true""];\n	""36"" -> ""33""[label=""cfg_true""];\n	""36"" -> ""43""[label=""cfg_false""];\n	""37"" -> ""26""[label=""cfg_next""];\n	""38"" -> ""23""[label=""cfg_next""];\n	""39"" -> ""50""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""40"" -> ""58""[label=""cfg_next""];\n	""41"" -> ""21""[label=""cfg_next""];\n	""42"" -> ""35""[label=""cfg_next""];\n	""43"" -> ""33""[label=""cfg_next""];\n	""44"" -> ""39""[label=""cfg_next""];\n	""45"" -> ""42""[label=""cfg_next""];\n	""48"" -> ""53""[label=""cfg_next""];\n	""49"" -> ""54""[label=""cfg_next""];\n	""5"" -> ""48""[label=""cfg_next""];\n	""50"" -> ""52""[label=""cfg_next""];\n	""51"" -> ""44""[label=""cfg_next""];\n	""52"" -> ""56""[label=""cfg_next""];\n	""53"" -> ""17""[label=""cfg_next""];\n	""54"" -> ""18""[label=""cfg_next""];\n	""55"" -> ""47""[label=""cfg_next""];\n	""56"" -> ""1""[label=""cfg_next""];\n	""57"" -> ""36""[label=""cfg_next""];\n	""58"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""32""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""34""[label=""cfg_next""];\n	""9"" -> ""37""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.getName(),Method,No Comment,@Override\npublic QName getName() {\n    return new QName(prefix);\n},org.apache.commons.jxpath.ri.QName getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix>""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String)>($stack1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.getBaseValue(),Method,No Comment,@Override\npublic Object getBaseValue() {\n    return null;\n},java.lang.Object getBaseValue(),"digraph cfg_getBaseValue {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.isCollection(),Method,No Comment,@Override\npublic boolean isCollection() {\n    return false;\n},boolean isCollection(),"digraph cfg_isCollection {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.getLength(),Method,No Comment,@Override\npublic int getLength() {\n    return 1;\n},int getLength(),"digraph cfg_getLength {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.getImmediateNode(),Method,No Comment,@Override\npublic Object getImmediateNode() {\n    return getNamespaceURI();\n},java.lang.Object getImmediateNode(),"digraph cfg_getImmediateNode {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String getNamespaceURI()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.getNamespaceURI(),Method,No Comment,@Override\npublic String getNamespaceURI() {\n    if (namespaceURI == null) {\n        namespaceURI = parent.getNamespaceURI(prefix);\n    }\n    return namespaceURI;\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String namespaceURI>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String namespaceURI>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>($stack3)""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String namespaceURI> = $stack5""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.isLeaf(),Method,No Comment,@Override\npublic boolean isLeaf() {\n    return true;\n},boolean isLeaf(),"digraph cfg_isLeaf {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.setValue(Object),Method,* Throws UnsupportedOperationException.\n     * @param value Object value to set,"@Override\npublic void setValue(final Object value) {\n    throw new UnsupportedOperationException(""Cannot modify a namespace"");\n}",void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""Cannot modify a namespace\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""4"" [label=""throw $stack2""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.asPath(),Method,No Comment,"@Override\npublic String asPath() {\n    final StringBuilder buffer = new StringBuilder();\n    if (parent != null) {\n        buffer.append(parent.asPath());\n        if (buffer.length() == 0 || buffer.charAt(buffer.length() - 1) != '/') {\n            buffer.append('/');\n        }\n    }\n    buffer.append(""namespace::"");\n    buffer.append(prefix);\n    return buffer.toString();\n}",java.lang.String asPath(),"digraph cfg_asPath {\n	""1"" [label=""$stack10 = $stack9 - 1""];\n	""2"" [label=""$stack11 = virtualinvoke buffer.<java.lang.StringBuilder: char charAt(int)>($stack10)""];\n	""3"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix>""];\n	""6"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""9"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""10"" [label=""$stack9 = virtualinvoke buffer.<java.lang.StringBuilder: int length()>()""];\n	""11"" [label=""buffer = $stack2""];\n	""12"" [label=""if $stack11 == 47""];\n	""13"" [label=""if $stack3 == null""];\n	""14"" [label=""if $stack8 == 0""];\n	""15"" [label=""return $stack5""];\n	""16"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""namespace::\"")""];\n	""20"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""21"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_false""];\n	""12"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""19""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_false""];\n	""14"" -> ""10""[label=""cfg_false""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return prefix.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.String: int hashCode()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    return object == this || object instanceof JDOMNamespacePointer && prefix.equals(((JDOMNamespacePointer) object).prefix);\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack2 = object instanceof org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""2"" [label=""$stack3 = 0""];\n	""3"" [label=""$stack3 = 1""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer) object""];\n	""5"" [label=""$stack5 = $stack4.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix>""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix>""];\n	""7"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>($stack5)""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack2 == 0""];\n	""10"" [label=""if $stack7 == 0""];\n	""11"" [label=""if object == this""];\n	""12"" [label=""object := @parameter0: java.lang.Object""];\n	""13"" [label=""return $stack3""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_goto""];\n	""9"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.compareChildNodePointers(NodePointer,NodePointer)",Method,No Comment,"@Override\npublic int compareChildNodePointers(final NodePointer pointer1, final NodePointer pointer2) {\n    // Won't happen - namespaces don't have children\n    return 0;\n}","int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_compareChildNodePointers {\n	""1"" [label=""pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""return 0""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.<init>(NodePointer,String)",Constructor,* Create a new JDOMNamespacePointer.\n     * @param parent parent pointer\n     * @param prefix ns prefix,"public JDOMNamespacePointer(final NodePointer parent, final String prefix) {\n    super(parent);\n    this.prefix = prefix;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)","digraph cfg_init {\n	""1"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""prefix := @parameter1: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix> = prefix""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer.<init>(NodePointer,String,String)",Constructor,* Create a new JDOMNamespacePointer.\n     * @param parent parent pointer\n     * @param prefix ns prefix\n     * @param namespaceURI ns URI,"public JDOMNamespacePointer(final NodePointer parent, final String prefix, final String namespaceURI) {\n    super(parent);\n    this.prefix = prefix;\n    this.namespaceURI = namespaceURI;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String,java.lang.String)","digraph cfg_init {\n	""1"" [label=""namespaceURI := @parameter2: java.lang.String""];\n	""2"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""prefix := @parameter1: java.lang.String""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String namespaceURI> = namespaceURI""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: java.lang.String prefix> = prefix""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.collectNamespaces(Element),Method,* Collect the namespaces from a JDOM Element.\n     * @param element the source Element,private void collectNamespaces(final Element element) {\n    Namespace ns = element.getNamespace();\n    if (ns != null && !prefixes.contains(ns.getPrefix())) {\n        namespaces.add(ns);\n        prefixes.add(ns.getPrefix());\n    }\n    final List others = element.getAdditionalNamespaces();\n    for (int i = 0; i < others.size(); i++) {\n        ns = (Namespace) others.get(i);\n        if (ns != null && !prefixes.contains(ns.getPrefix())) {\n            namespaces.add(ns);\n            prefixes.add(ns.getPrefix());\n        }\n    }\n    final Object elementParent = element.getParent();\n    if (elementParent instanceof Element) {\n        collectNamespaces((Element) elementParent);\n    }\n},void collectNamespaces(org.jdom.Element),"digraph cfg_collectNamespaces {\n	""1"" [label=""$stack10 = virtualinvoke ns.<org.jdom.Namespace: java.lang.String getPrefix()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke $stack9.<java.util.Set: boolean contains(java.lang.Object)>($stack10)""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.List namespaces>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.Set prefixes>""];\n	""5"" [label=""$stack14 = virtualinvoke ns.<org.jdom.Namespace: java.lang.String getPrefix()>()""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.Set prefixes>""];\n	""7"" [label=""$stack16 = virtualinvoke ns.<org.jdom.Namespace: java.lang.String getPrefix()>()""];\n	""8"" [label=""$stack17 = interfaceinvoke $stack15.<java.util.Set: boolean contains(java.lang.Object)>($stack16)""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.List namespaces>""];\n	""10"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.Set prefixes>""];\n	""11"" [label=""$stack20 = virtualinvoke ns.<org.jdom.Namespace: java.lang.String getPrefix()>()""];\n	""12"" [label=""$stack5 = interfaceinvoke others.<java.util.List: int size()>()""];\n	""13"" [label=""$stack6 = i instanceof org.jdom.Element""];\n	""14"" [label=""$stack7 = (org.jdom.Element) i""];\n	""15"" [label=""$stack8 = interfaceinvoke others.<java.util.List: java.lang.Object get(int)>(i)""];\n	""16"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.Set prefixes>""];\n	""17"" [label=""element := @parameter0: org.jdom.Element""];\n	""18"" [label=""goto""];\n	""19"" [label=""i = 0""];\n	""20"" [label=""i = i + 1""];\n	""21"" [label=""i = virtualinvoke element.<org.jdom.Element: org.jdom.Parent getParent()>()""];\n	""22"" [label=""if $stack11 != 0""];\n	""23"" [label=""if $stack17 != 0""];\n	""24"" [label=""if $stack6 == 0""];\n	""25"" [label=""if i >= $stack5""];\n	""26"" [label=""if ns == null""];\n	""27"" [label=""if ns == null""];\n	""28"" [label=""interfaceinvoke $stack12.<java.util.List: boolean add(java.lang.Object)>(ns)""];\n	""29"" [label=""interfaceinvoke $stack13.<java.util.Set: boolean add(java.lang.Object)>($stack14)""];\n	""30"" [label=""interfaceinvoke $stack18.<java.util.List: boolean add(java.lang.Object)>(ns)""];\n	""31"" [label=""interfaceinvoke $stack19.<java.util.Set: boolean add(java.lang.Object)>($stack20)""];\n	""32"" [label=""ns = (org.jdom.Namespace) $stack8""];\n	""33"" [label=""ns = virtualinvoke element.<org.jdom.Element: org.jdom.Namespace getNamespace()>()""];\n	""34"" [label=""others = virtualinvoke element.<org.jdom.Element: java.util.List getAdditionalNamespaces()>()""];\n	""35"" [label=""return""];\n	""36"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: void collectNamespaces(org.jdom.Element)>($stack7)""];\n	""37"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""25""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""36""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""33""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_goto""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""22"" -> ""20""[label=""cfg_true""];\n	""22"" -> ""3""[label=""cfg_false""];\n	""23"" -> ""34""[label=""cfg_true""];\n	""23"" -> ""9""[label=""cfg_false""];\n	""24"" -> ""14""[label=""cfg_false""];\n	""24"" -> ""35""[label=""cfg_true""];\n	""25"" -> ""15""[label=""cfg_false""];\n	""25"" -> ""21""[label=""cfg_true""];\n	""26"" -> ""34""[label=""cfg_true""];\n	""26"" -> ""6""[label=""cfg_false""];\n	""27"" -> ""16""[label=""cfg_false""];\n	""27"" -> ""20""[label=""cfg_true""];\n	""28"" -> ""4""[label=""cfg_next""];\n	""29"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""10""[label=""cfg_next""];\n	""31"" -> ""34""[label=""cfg_next""];\n	""32"" -> ""27""[label=""cfg_next""];\n	""33"" -> ""26""[label=""cfg_next""];\n	""34"" -> ""19""[label=""cfg_next""];\n	""36"" -> ""35""[label=""cfg_next""];\n	""37"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""23""[label=""cfg_next""];\n	""9"" -> ""30""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.getNodePointer(),Method,No Comment,"@Override\npublic NodePointer getNodePointer() {\n    if (position == 0) {\n        if (!setPosition(1)) {\n            return null;\n        }\n        position = 0;\n    }\n    int index = position - 1;\n    if (index < 0) {\n        index = 0;\n    }\n    final Namespace ns = (Namespace) namespaces.get(index);\n    return new JDOMNamespacePointer(parent, ns.getPrefix(), ns.getURI());\n}",org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: boolean setPosition(int)>(1)""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: int position>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: int position>""];\n	""5"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.List namespaces>""];\n	""6"" [label=""$stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(index)""];\n	""7"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""8"" [label=""$stack8 = virtualinvoke ns.<org.jdom.Namespace: java.lang.String getURI()>()""];\n	""9"" [label=""$stack9 = virtualinvoke ns.<org.jdom.Namespace: java.lang.String getPrefix()>()""];\n	""10"" [label=""if $stack11 != 0""];\n	""11"" [label=""if $stack3 != 0""];\n	""12"" [label=""if index >= 0""];\n	""13"" [label=""index = $stack4 - 1""];\n	""14"" [label=""index = 0""];\n	""15"" [label=""ns = (org.jdom.Namespace) $stack6""];\n	""16"" [label=""return $stack10""];\n	""17"" [label=""return null""];\n	""18"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespacePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String,java.lang.String)>($stack7, $stack9, $stack8)""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: int position> = 0""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_false""];\n	""10"" -> ""20""[label=""cfg_true""];\n	""11"" -> ""2""[label=""cfg_false""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""12"" -> ""14""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""20"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    if (namespaces == null) {\n        return false;\n    }\n    this.position = position;\n    return position >= 1 && position <= namespaces.size();\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.List namespaces>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.List namespaces>""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<java.util.List: int size()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 != null""];\n	""8"" [label=""if position < 1""];\n	""9"" [label=""if position > $stack4""];\n	""10"" [label=""position := @parameter0: int""];\n	""11"" [label=""return $stack5""];\n	""12"" [label=""return 0""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: int position> = position""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_false""];\n	""7"" -> ""14""[label=""cfg_true""];\n	""8"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator.<init>(NodePointer),Constructor,* Create a new JDOMNamespaceIterator.\n     * @param parent the parent NodePointer.,public JDOMNamespaceIterator(final NodePointer parent) {\n    this.parent = parent;\n    Object node = parent.getNode();\n    if (node instanceof Document) {\n        node = ((Document) node).getRootElement();\n    }\n    if (node instanceof Element) {\n        namespaces = new ArrayList();\n        prefixes = new HashSet();\n        collectNamespaces((Element) node);\n    }\n},void <init>(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_init {\n	""1"" [label=""$stack3 = node instanceof org.jdom.Document""];\n	""2"" [label=""$stack4 = node instanceof org.jdom.Element""];\n	""3"" [label=""$stack5 = new java.util.ArrayList""];\n	""4"" [label=""$stack6 = new java.util.HashSet""];\n	""5"" [label=""$stack7 = (org.jdom.Element) node""];\n	""6"" [label=""$stack8 = (org.jdom.Document) node""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""node = virtualinvoke $stack8.<org.jdom.Document: org.jdom.Element getRootElement()>()""];\n	""10"" [label=""node = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""11"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""12"" [label=""return""];\n	""13"" [label=""specialinvoke $stack5.<java.util.ArrayList: void <init>()>()""];\n	""14"" [label=""specialinvoke $stack6.<java.util.HashSet: void <init>()>()""];\n	""15"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: void collectNamespaces(org.jdom.Element)>($stack7)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: int position> = 0""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.List namespaces> = $stack5""];\n	""20"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: java.util.Set prefixes> = $stack6""];\n	""21"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNamespaceIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""18""[label=""cfg_next""];\n	""16"" -> ""12""[label=""cfg_next""];\n	""17"" -> ""11""[label=""cfg_next""];\n	""18"" -> ""21""[label=""cfg_next""];\n	""19"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""21"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""6""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory.getOrder(),Method,No Comment,@Override\npublic int getOrder() {\n    return JDOM_POINTER_FACTORY_ORDER;\n},int getOrder(),"digraph cfg_getOrder {\n	""1"" [label=""return 110""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory.createNodePointer(QName,Object,Locale)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n    if (bean instanceof Document) {\n        return new JDOMNodePointer(bean, locale);\n    }\n    if (bean instanceof Element) {\n        return new JDOMNodePointer(bean, locale);\n    }\n    return null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.jdom.Document""];\n	""2"" [label=""$stack5 = bean instanceof org.jdom.Element""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""4"" [label=""$stack7 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""5"" [label=""bean := @parameter1: java.lang.Object""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""locale := @parameter2: java.util.Locale""];\n	""9"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""return null""];\n	""13"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: void <init>(java.lang.Object,java.util.Locale)>(bean, locale)""];\n	""14"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: void <init>(java.lang.Object,java.util.Locale)>(bean, locale)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory.createNodePointer(NodePointer,QName,Object)",Method,No Comment,"@Override\npublic NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n    if (bean instanceof Document) {\n        return new JDOMNodePointer(parent, bean);\n    }\n    if (bean instanceof Element) {\n        return new JDOMNodePointer(parent, bean);\n    }\n    return null;\n}","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)","digraph cfg_createNodePointer {\n	""1"" [label=""$stack4 = bean instanceof org.jdom.Document""];\n	""2"" [label=""$stack5 = bean instanceof org.jdom.Element""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""4"" [label=""$stack7 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""5"" [label=""bean := @parameter2: java.lang.Object""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""name := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""9"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""return null""];\n	""13"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object)>(parent, bean)""];\n	""14"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object)>(parent, bean)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMPointerFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.getNodePointer(),Method,No Comment,"@Override\npublic NodePointer getNodePointer() {\n    if (child == null) {\n        if (!setPosition(1)) {\n            return null;\n        }\n        position = 0;\n    }\n    return new JDOMNodePointer(parent, child);\n}",org.apache.commons.jxpath.ri.model.NodePointer getNodePointer(),"digraph cfg_getNodePointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack4 = new org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer""];\n	""5"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean setPosition(int)>(1)""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""if $stack5 != 0""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""return null""];\n	""10"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object)>($stack3, $stack2)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position> = 0""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""6"" -> ""5""[label=""cfg_false""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""9""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.setPosition(int),Method,No Comment,@Override\npublic boolean setPosition(final int position) {\n    while (this.position < position) {\n        if (!next()) {\n            return false;\n        }\n    }\n    while (this.position > position) {\n        if (!previous()) {\n            return false;\n        }\n    }\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position>""];\n	""3"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean previous()>()""];\n	""4"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean next()>()""];\n	""5"" [label=""if $stack2 >= position""];\n	""6"" [label=""if $stack3 <= position""];\n	""7"" [label=""if $stack4 != 0""];\n	""8"" [label=""if $stack5 != 0""];\n	""9"" [label=""position := @parameter0: int""];\n	""10"" [label=""return 0""];\n	""11"" [label=""return 0""];\n	""12"" [label=""return 1""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""12""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""11""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_true""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.previous(),Method,"* This is actually never invoked during the normal evaluation\n     * of xpaths - an iterator is always going forward, never backwards.\n     * So, this is implemented only for completeness and perhaps for\n     * those who use these iterators outside of XPath evaluation.\n     * @return boolean",private boolean previous() {\n    position--;\n    if (!reverse) {\n        while (--index >= 0) {\n            child = children.get(index);\n            if (testChild()) {\n                return true;\n            }\n        }\n    } else {\n        for (; index < children.size(); index++) {\n            child = children.get(index);\n            if (testChild()) {\n                return true;\n            }\n        }\n    }\n    return false;\n},boolean previous(),"digraph cfg_previous {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position>""];\n	""2"" [label=""$stack10 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean testChild()>()""];\n	""3"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""4"" [label=""$stack12 = $stack11 + 1""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""6"" [label=""$stack14 = $stack13 - 1""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""9"" [label=""$stack17 = interfaceinvoke $stack16.<java.util.List: java.lang.Object get(int)>($stack15)""];\n	""10"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean testChild()>()""];\n	""11"" [label=""$stack2 = $stack1 - 1""];\n	""12"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean reverse>""];\n	""13"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""14"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""15"" [label=""$stack6 = interfaceinvoke $stack4.<java.util.List: int size()>()""];\n	""16"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""17"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""18"" [label=""$stack9 = interfaceinvoke $stack8.<java.util.List: java.lang.Object get(int)>($stack7)""];\n	""19"" [label=""goto""];\n	""20"" [label=""if $stack10 == 0""];\n	""21"" [label=""if $stack14 < 0""];\n	""22"" [label=""if $stack18 == 0""];\n	""23"" [label=""if $stack3 != 0""];\n	""24"" [label=""if $stack5 >= $stack6""];\n	""25"" [label=""return 0""];\n	""26"" [label=""return 1""];\n	""27"" [label=""return 1""];\n	""28"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack12""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack14""];\n	""31"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position> = $stack2""];\n	""32"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child> = $stack17""];\n	""33"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child> = $stack9""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""33""[label=""cfg_next""];\n	""19"" -> ""14""[label=""cfg_goto""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""27""[label=""cfg_false""];\n	""20"" -> ""3""[label=""cfg_true""];\n	""21"" -> ""25""[label=""cfg_true""];\n	""21"" -> ""8""[label=""cfg_false""];\n	""22"" -> ""26""[label=""cfg_false""];\n	""22"" -> ""5""[label=""cfg_true""];\n	""23"" -> ""14""[label=""cfg_true""];\n	""23"" -> ""5""[label=""cfg_false""];\n	""24"" -> ""17""[label=""cfg_false""];\n	""24"" -> ""25""[label=""cfg_true""];\n	""28"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""21""[label=""cfg_next""];\n	""31"" -> ""12""[label=""cfg_next""];\n	""32"" -> ""10""[label=""cfg_next""];\n	""33"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""29""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.next(),Method,* Iterate to next pointer.\n     * @return whether valid,private boolean next() {\n    position++;\n    if (!reverse) {\n        if (position == 1) {\n            index = 0;\n            if (child != null) {\n                index = children.indexOf(child) + 1;\n            }\n        } else {\n            index++;\n        }\n        for (; index < children.size(); index++) {\n            child = children.get(index);\n            if (testChild()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (position == 1) {\n        index = children.size() - 1;\n        if (child != null) {\n            index = children.indexOf(child) - 1;\n        }\n    } else {\n        index--;\n    }\n    for (; index >= 0; index--) {\n        child = children.get(index);\n        if (testChild()) {\n            return true;\n        }\n    }\n    return false;\n},boolean next(),"digraph cfg_next {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position>""];\n	""2"" [label=""$stack10 = interfaceinvoke $stack9.<java.util.List: java.lang.Object get(int)>($stack8)""];\n	""3"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean testChild()>()""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""5"" [label=""$stack13 = $stack12 - 1""];\n	""6"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""7"" [label=""$stack15 = interfaceinvoke $stack14.<java.util.List: int size()>()""];\n	""8"" [label=""$stack16 = $stack15 - 1""];\n	""9"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child>""];\n	""10"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child>""];\n	""11"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""12"" [label=""$stack2 = $stack1 + 1""];\n	""13"" [label=""$stack20 = interfaceinvoke $stack19.<java.util.List: int indexOf(java.lang.Object)>($stack18)""];\n	""14"" [label=""$stack21 = $stack20 - 1""];\n	""15"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position>""];\n	""16"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""17"" [label=""$stack24 = $stack23 + 1""];\n	""18"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""19"" [label=""$stack26 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""20"" [label=""$stack27 = interfaceinvoke $stack25.<java.util.List: int size()>()""];\n	""21"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""22"" [label=""$stack29 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""23"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean reverse>""];\n	""24"" [label=""$stack30 = interfaceinvoke $stack29.<java.util.List: java.lang.Object get(int)>($stack28)""];\n	""25"" [label=""$stack31 = specialinvoke this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean testChild()>()""];\n	""26"" [label=""$stack32 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""27"" [label=""$stack33 = $stack32 + 1""];\n	""28"" [label=""$stack34 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child>""];\n	""29"" [label=""$stack35 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child>""];\n	""30"" [label=""$stack36 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""31"" [label=""$stack37 = interfaceinvoke $stack36.<java.util.List: int indexOf(java.lang.Object)>($stack35)""];\n	""32"" [label=""$stack38 = $stack37 + 1""];\n	""33"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position>""];\n	""34"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""35"" [label=""$stack6 = $stack5 - 1""];\n	""36"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""37"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index>""];\n	""38"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children>""];\n	""39"" [label=""goto""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""if $stack11 == 0""];\n	""44"" [label=""if $stack17 == null""];\n	""45"" [label=""if $stack22 != 1""];\n	""46"" [label=""if $stack26 >= $stack27""];\n	""47"" [label=""if $stack3 != 0""];\n	""48"" [label=""if $stack31 == 0""];\n	""49"" [label=""if $stack34 == null""];\n	""50"" [label=""if $stack4 != 1""];\n	""51"" [label=""if $stack7 < 0""];\n	""52"" [label=""return 0""];\n	""53"" [label=""return 0""];\n	""54"" [label=""return 1""];\n	""55"" [label=""return 1""];\n	""56"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""57"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack13""];\n	""58"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack16""];\n	""59"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack21""];\n	""60"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack24""];\n	""61"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack33""];\n	""62"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack38""];\n	""63"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = $stack6""];\n	""64"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = 0""];\n	""65"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position> = $stack2""];\n	""66"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child> = $stack10""];\n	""67"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child> = $stack30""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""65""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""59""[label=""cfg_next""];\n	""15"" -> ""45""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""60""[label=""cfg_next""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""66""[label=""cfg_next""];\n	""20"" -> ""46""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""47""[label=""cfg_next""];\n	""24"" -> ""67""[label=""cfg_next""];\n	""25"" -> ""48""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""61""[label=""cfg_next""];\n	""28"" -> ""49""[label=""cfg_next""];\n	""29"" -> ""31""[label=""cfg_next""];\n	""3"" -> ""43""[label=""cfg_next""];\n	""30"" -> ""29""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""62""[label=""cfg_next""];\n	""33"" -> ""50""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""63""[label=""cfg_next""];\n	""36"" -> ""51""[label=""cfg_next""];\n	""37"" -> ""2""[label=""cfg_next""];\n	""38"" -> ""37""[label=""cfg_next""];\n	""39"" -> ""19""[label=""cfg_goto""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""19""[label=""cfg_goto""];\n	""41"" -> ""36""[label=""cfg_goto""];\n	""42"" -> ""36""[label=""cfg_goto""];\n	""43"" -> ""4""[label=""cfg_true""];\n	""43"" -> ""55""[label=""cfg_false""];\n	""44"" -> ""11""[label=""cfg_false""];\n	""44"" -> ""36""[label=""cfg_true""];\n	""45"" -> ""16""[label=""cfg_true""];\n	""45"" -> ""64""[label=""cfg_false""];\n	""46"" -> ""22""[label=""cfg_false""];\n	""46"" -> ""52""[label=""cfg_true""];\n	""47"" -> ""15""[label=""cfg_false""];\n	""47"" -> ""33""[label=""cfg_true""];\n	""48"" -> ""26""[label=""cfg_true""];\n	""48"" -> ""54""[label=""cfg_false""];\n	""49"" -> ""19""[label=""cfg_true""];\n	""49"" -> ""30""[label=""cfg_false""];\n	""5"" -> ""57""[label=""cfg_next""];\n	""50"" -> ""34""[label=""cfg_true""];\n	""50"" -> ""6""[label=""cfg_false""];\n	""51"" -> ""38""[label=""cfg_false""];\n	""51"" -> ""53""[label=""cfg_true""];\n	""56"" -> ""1""[label=""cfg_next""];\n	""57"" -> ""42""[label=""cfg_next""];\n	""58"" -> ""9""[label=""cfg_next""];\n	""59"" -> ""41""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""19""[label=""cfg_next""];\n	""61"" -> ""40""[label=""cfg_next""];\n	""62"" -> ""39""[label=""cfg_next""];\n	""63"" -> ""36""[label=""cfg_next""];\n	""64"" -> ""28""[label=""cfg_next""];\n	""65"" -> ""23""[label=""cfg_next""];\n	""66"" -> ""3""[label=""cfg_next""];\n	""67"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""58""[label=""cfg_next""];\n	""9"" -> ""44""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.testChild(),Method,* Test a child node.\n     * @return whether test passes.,"private boolean testChild() {\n    return JDOMNodePointer.testNode(parent, child, nodeTest);\n}",boolean testChild(),"digraph cfg_testChild {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>""];\n	""4"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.ri.model.jdom.JDOMNodePointer: boolean testNode(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.Object,org.apache.commons.jxpath.ri.compiler.NodeTest)>($stack3, $stack2, $stack1)""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator.<init>(NodePointer,NodeTest,boolean,NodePointer)",Constructor,* Create a new JDOMNodeIterator.\n     * @param parent pointer\n     * @param nodeTest test\n     * @param reverse whether to iterate in reverse\n     * @param startWith starting pointer,"public JDOMNodeIterator(final NodePointer parent, final NodeTest nodeTest, final boolean reverse, final NodePointer startWith) {\n    this.parent = parent;\n    if (startWith != null) {\n        this.child = startWith.getNode();\n    }\n    // TBD: optimize me for different node tests\n    final Object node = parent.getNode();\n    if (node instanceof Document) {\n        this.children = ((Document) node).getContent();\n    } else if (node instanceof Element) {\n        this.children = ((Element) node).getContent();\n    } else {\n        this.children = Collections.EMPTY_LIST;\n    }\n    this.nodeTest = nodeTest;\n    this.reverse = reverse;\n}","void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)","digraph cfg_init {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<org.jdom.Element: java.util.List getContent()>()""];\n	""2"" [label=""$stack11 = (org.jdom.Document) node""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.jdom.Document: java.util.List getContent()>()""];\n	""4"" [label=""$stack13 = virtualinvoke startWith.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""5"" [label=""$stack6 = node instanceof org.jdom.Document""];\n	""6"" [label=""$stack7 = node instanceof org.jdom.Element""];\n	""7"" [label=""$stack8 = <java.util.Collections: java.util.List EMPTY_LIST>""];\n	""8"" [label=""$stack9 = (org.jdom.Element) node""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack6 == 0""];\n	""12"" [label=""if $stack7 == 0""];\n	""13"" [label=""if startWith == null""];\n	""14"" [label=""node = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""15"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""16"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""17"" [label=""return""];\n	""18"" [label=""reverse := @parameter2: boolean""];\n	""19"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""20"" [label=""startWith := @parameter3: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator""];\n	""22"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: boolean reverse> = reverse""];\n	""23"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int index> = 0""];\n	""24"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: int position> = 0""];\n	""25"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.lang.Object child> = $stack13""];\n	""26"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children> = $stack10""];\n	""27"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children> = $stack12""];\n	""28"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: java.util.List children> = $stack8""];\n	""29"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""30"" [label=""this.<org.apache.commons.jxpath.ri.model.jdom.JDOMNodeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""29""[label=""cfg_goto""];\n	""11"" -> ""2""[label=""cfg_false""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""12"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""8""[label=""cfg_false""];\n	""13"" -> ""14""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""18""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_next""];\n	""23"" -> ""30""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""14""[label=""cfg_next""];\n	""26"" -> ""10""[label=""cfg_next""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""27""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""28""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""29""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.model.NodePointerFactory.getOrder(),Abstract Method,* The factory order number determines its position between other factories.\n     * @return int order,int getOrder();,int getOrder(),digraph cfg_getOrder {\n}\n,default
"org.apache.commons.jxpath.ri.model.NodePointerFactory.createNodePointer(QName,Object,Locale)",Abstract Method,"* Create a NodePointer for the supplied object.  The node will represent\n     * the ""root"" object for a path.\n     *\n     * @param name String node name\n     * @param object child object\n     * @param locale Locale\n     * @return  null if this factory does not recognize objects of the supplied\n     * type.","NodePointer createNodePointer(QName name, Object object, Locale locale);","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)",digraph cfg_createNodePointer {\n}\n,default
"org.apache.commons.jxpath.ri.model.NodePointerFactory.createNodePointer(NodePointer,QName,Object)",Abstract Method,* Create a NodePointer for the supplied child object.\n     *\n     * @param parent parent node\n     * @param name String node name\n     * @param object child object\n     * @return null if this factory does not recognize objects of the supplied\n     * type.,"NodePointer createNodePointer(NodePointer parent, QName name, Object object);","org.apache.commons.jxpath.ri.model.NodePointer createNodePointer(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName,java.lang.Object)",digraph cfg_createNodePointer {\n}\n,default
org.apache.commons.jxpath.ri.QName.getPrefix(),Method,* Gets the prefix of this QName.\n     * @return String,public String getPrefix() {\n    return prefix;\n},java.lang.String getPrefix(),"digraph cfg_getPrefix {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.QName: java.lang.String prefix>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.QName""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.QName.getName(),Method,* Gets the local name.\n     * @return String,public String getName() {\n    return name;\n},java.lang.String getName(),"digraph cfg_getName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.QName: java.lang.String name>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.QName""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.QName.toString(),Method,No Comment,@Override\npublic String toString() {\n    return qualifiedName;\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.QName: java.lang.String qualifiedName>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.QName""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.QName.hashCode(),Method,No Comment,@Override\npublic int hashCode() {\n    return name.hashCode();\n},int hashCode(),"digraph cfg_hashCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.QName: java.lang.String name>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.String: int hashCode()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.QName""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.QName.equals(Object),Method,No Comment,@Override\npublic boolean equals(final Object object) {\n    if (this == object) {\n        return true;\n    }\n    if (!(object instanceof QName)) {\n        return false;\n    }\n    return qualifiedName.equals(((QName) object).qualifiedName);\n},boolean equals(java.lang.Object),"digraph cfg_equals {\n	""1"" [label=""$stack2 = object instanceof org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""$stack3 = (org.apache.commons.jxpath.ri.QName) object""];\n	""3"" [label=""$stack4 = $stack3.<org.apache.commons.jxpath.ri.QName: java.lang.String qualifiedName>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.QName: java.lang.String qualifiedName>""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack4)""];\n	""6"" [label=""if $stack2 != 0""];\n	""7"" [label=""if this != object""];\n	""8"" [label=""object := @parameter0: java.lang.Object""];\n	""9"" [label=""return $stack6""];\n	""10"" [label=""return 0""];\n	""11"" [label=""return 1""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.QName""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_true""];\n	""7"" -> ""11""[label=""cfg_false""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.QName.<init>(String),Constructor,* Create a new QName.\n     * @param qualifiedName value,"public QName(final String qualifiedName) {\n    this.qualifiedName = qualifiedName;\n    final int index = qualifiedName.indexOf(':');\n    prefix = index < 0 ? null : qualifiedName.substring(0, index);\n    name = index < 0 ? qualifiedName : qualifiedName.substring(index + 1);\n}",void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""$stack3 = null""];\n	""2"" [label=""$stack3 = virtualinvoke qualifiedName.<java.lang.String: java.lang.String substring(int,int)>(0, index)""];\n	""3"" [label=""$stack4 = index + 1""];\n	""4"" [label=""$stack5 = qualifiedName""];\n	""5"" [label=""$stack5 = virtualinvoke qualifiedName.<java.lang.String: java.lang.String substring(int)>($stack4)""];\n	""6"" [label=""goto""];\n	""7"" [label=""goto""];\n	""8"" [label=""if index >= 0""];\n	""9"" [label=""if index >= 0""];\n	""10"" [label=""index = virtualinvoke qualifiedName.<java.lang.String: int indexOf(int)>(58)""];\n	""11"" [label=""qualifiedName := @parameter0: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.QName""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.QName: java.lang.String name> = $stack5""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.QName: java.lang.String prefix> = $stack3""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.QName: java.lang.String qualifiedName> = qualifiedName""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_goto""];\n	""7"" -> ""15""[label=""cfg_goto""];\n	""8"" -> ""1""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
"org.apache.commons.jxpath.ri.QName.<init>(String,String)",Constructor,* Create a new QName.\n     * @param prefix ns\n     * @param localName String,"public QName(final String prefix, final String localName) {\n    this.prefix = prefix;\n    this.name = localName;\n    this.qualifiedName = prefix == null ? localName : prefix + ':' + localName;\n}","void <init>(java.lang.String,java.lang.String)","digraph cfg_init {\n	""1"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix)""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(localName)""];\n	""5"" [label=""$stack7 = localName""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""goto""];\n	""8"" [label=""if prefix != null""];\n	""9"" [label=""localName := @parameter1: java.lang.String""];\n	""10"" [label=""prefix := @parameter0: java.lang.String""];\n	""11"" [label=""return""];\n	""12"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""13"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.QName""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.QName: java.lang.String name> = localName""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.QName: java.lang.String prefix> = prefix""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.QName: java.lang.String qualifiedName> = $stack7""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_goto""];\n	""8"" -> ""1""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.InfoSetUtil.stringValue(Object),Method,* Converts the supplied object to String.\n     * @param object to convert\n     * @return String value,"public static String stringValue(final Object object) {\n    if (object instanceof String) {\n        return (String) object;\n    }\n    if (object instanceof Number) {\n        final double d = ((Number) object).doubleValue();\n        final long l = ((Number) object).longValue();\n        return d == l ? String.valueOf(l) : String.valueOf(d);\n    }\n    if (object instanceof Boolean) {\n        return ((Boolean) object).booleanValue() ? ""true"" : ""false"";\n    }\n    if (object == null) {\n        return """";\n    }\n    if (object instanceof NodePointer) {\n        return stringValue(((NodePointer) object).getValue());\n    }\n    if (object instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) object;\n        final Pointer ptr = ctx.getSingleNodePointer();\n        return ptr == null ? """" : stringValue(ptr);\n    }\n    return String.valueOf(object);\n}",java.lang.String stringValue(java.lang.Object),"digraph cfg_stringValue {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(object)""];\n	""2"" [label=""$stack11 = \""\""""];\n	""3"" [label=""$stack11 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>(ptr)""];\n	""4"" [label=""$stack12 = (org.apache.commons.jxpath.ri.model.NodePointer) object""];\n	""5"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""6"" [label=""$stack14 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack13)""];\n	""7"" [label=""$stack15 = (java.lang.Boolean) object""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.Boolean: boolean booleanValue()>()""];\n	""9"" [label=""$stack17 = \""false\""""];\n	""10"" [label=""$stack17 = \""true\""""];\n	""11"" [label=""$stack18 = (java.lang.Number) object""];\n	""12"" [label=""$stack19 = (java.lang.Number) object""];\n	""13"" [label=""$stack20 = (double) l""];\n	""14"" [label=""$stack21 = d cmpl $stack20""];\n	""15"" [label=""$stack22 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d)""];\n	""16"" [label=""$stack22 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l)""];\n	""17"" [label=""$stack23 = (java.lang.String) object""];\n	""18"" [label=""$stack5 = object instanceof java.lang.String""];\n	""19"" [label=""$stack6 = object instanceof java.lang.Number""];\n	""20"" [label=""$stack7 = object instanceof java.lang.Boolean""];\n	""21"" [label=""$stack8 = object instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""22"" [label=""$stack9 = object instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""23"" [label=""d = (org.apache.commons.jxpath.ri.EvalContext) object""];\n	""24"" [label=""d = virtualinvoke $stack18.<java.lang.Number: double doubleValue()>()""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""if $stack16 == 0""];\n	""29"" [label=""if $stack21 != 0""];\n	""30"" [label=""if $stack5 == 0""];\n	""31"" [label=""if $stack6 == 0""];\n	""32"" [label=""if $stack7 == 0""];\n	""33"" [label=""if $stack8 == 0""];\n	""34"" [label=""if $stack9 == 0""];\n	""35"" [label=""if object != null""];\n	""36"" [label=""if ptr != null""];\n	""37"" [label=""l = virtualinvoke $stack19.<java.lang.Number: long longValue()>()""];\n	""38"" [label=""object := @parameter0: java.lang.Object""];\n	""39"" [label=""ptr = virtualinvoke d.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""40"" [label=""return \""\""""];\n	""41"" [label=""return $stack10""];\n	""42"" [label=""return $stack11""];\n	""43"" [label=""return $stack14""];\n	""44"" [label=""return $stack17""];\n	""45"" [label=""return $stack22""];\n	""46"" [label=""return $stack23""];\n	""1"" -> ""41""[label=""cfg_next""];\n	""10"" -> ""26""[label=""cfg_next""];\n	""11"" -> ""24""[label=""cfg_next""];\n	""12"" -> ""37""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""29""[label=""cfg_next""];\n	""15"" -> ""45""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""46""[label=""cfg_next""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""20"" -> ""32""[label=""cfg_next""];\n	""21"" -> ""33""[label=""cfg_next""];\n	""22"" -> ""34""[label=""cfg_next""];\n	""23"" -> ""39""[label=""cfg_next""];\n	""24"" -> ""12""[label=""cfg_next""];\n	""25"" -> ""45""[label=""cfg_goto""];\n	""26"" -> ""44""[label=""cfg_goto""];\n	""27"" -> ""42""[label=""cfg_goto""];\n	""28"" -> ""10""[label=""cfg_false""];\n	""28"" -> ""9""[label=""cfg_true""];\n	""29"" -> ""15""[label=""cfg_true""];\n	""29"" -> ""16""[label=""cfg_false""];\n	""3"" -> ""42""[label=""cfg_next""];\n	""30"" -> ""17""[label=""cfg_false""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""31"" -> ""11""[label=""cfg_false""];\n	""31"" -> ""20""[label=""cfg_true""];\n	""32"" -> ""35""[label=""cfg_true""];\n	""32"" -> ""7""[label=""cfg_false""];\n	""33"" -> ""22""[label=""cfg_true""];\n	""33"" -> ""4""[label=""cfg_false""];\n	""34"" -> ""1""[label=""cfg_true""];\n	""34"" -> ""23""[label=""cfg_false""];\n	""35"" -> ""21""[label=""cfg_true""];\n	""35"" -> ""40""[label=""cfg_false""];\n	""36"" -> ""2""[label=""cfg_false""];\n	""36"" -> ""3""[label=""cfg_true""];\n	""37"" -> ""13""[label=""cfg_next""];\n	""38"" -> ""18""[label=""cfg_next""];\n	""39"" -> ""36""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""43""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""44""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.InfoSetUtil.number(Object),Method,* Converts the supplied object to Number.\n     * @param object to convert\n     * @return Number result,public static Number number(final Object object) {\n    if (object instanceof Number) {\n        return (Number) object;\n    }\n    if (object instanceof Boolean) {\n        return ((Boolean) object).booleanValue() ? ONE : ZERO;\n    }\n    if (object instanceof String) {\n        try {\n            return Double.valueOf((String) object);\n        } catch (final NumberFormatException ex) {\n            return NOT_A_NUMBER;\n        }\n    }\n    if (object instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) object;\n        final Pointer ptr = ctx.getSingleNodePointer();\n        return ptr == null ? NOT_A_NUMBER : number(ptr);\n    }\n    if (object instanceof NodePointer) {\n        return number(((NodePointer) object).getValue());\n    }\n    return number(stringValue(object));\n},java.lang.Number number(java.lang.Object),"digraph cfg_number {\n	""1"" [label=""$stack10 = (org.apache.commons.jxpath.ri.model.NodePointer) object""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""3"" [label=""$stack12 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Number number(java.lang.Object)>($stack11)""];\n	""4"" [label=""$stack13 = <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Double NOT_A_NUMBER>""];\n	""5"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Number number(java.lang.Object)>(ptr)""];\n	""6"" [label=""$stack14 = (java.lang.String) object""];\n	""7"" [label=""$stack15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($stack14)""];\n	""8"" [label=""$stack16 = (java.lang.Boolean) object""];\n	""9"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.Boolean: boolean booleanValue()>()""];\n	""10"" [label=""$stack18 = <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Double ONE>""];\n	""11"" [label=""$stack18 = <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Double ZERO>""];\n	""12"" [label=""$stack19 = (java.lang.Number) object""];\n	""13"" [label=""$stack20 := @caughtexception""];\n	""14"" [label=""$stack21 = <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Double NOT_A_NUMBER>""];\n	""15"" [label=""$stack3 = object instanceof java.lang.Number""];\n	""16"" [label=""$stack4 = object instanceof java.lang.Boolean""];\n	""17"" [label=""$stack5 = object instanceof java.lang.String""];\n	""18"" [label=""$stack6 = object instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""$stack7 = object instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""20"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>(object)""];\n	""21"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Number number(java.lang.Object)>($stack8)""];\n	""22"" [label=""ex = $stack20""];\n	""23"" [label=""ex = (org.apache.commons.jxpath.ri.EvalContext) object""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack17 == 0""];\n	""27"" [label=""if $stack3 == 0""];\n	""28"" [label=""if $stack4 == 0""];\n	""29"" [label=""if $stack5 == 0""];\n	""30"" [label=""if $stack6 == 0""];\n	""31"" [label=""if $stack7 == 0""];\n	""32"" [label=""if ptr != null""];\n	""33"" [label=""object := @parameter0: java.lang.Object""];\n	""34"" [label=""ptr = virtualinvoke ex.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""35"" [label=""return $stack12""];\n	""36"" [label=""return $stack13""];\n	""37"" [label=""return $stack15""];\n	""38"" [label=""return $stack18""];\n	""39"" [label=""return $stack19""];\n	""40"" [label=""return $stack21""];\n	""41"" [label=""return $stack9""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""24""[label=""cfg_next""];\n	""11"" -> ""38""[label=""cfg_next""];\n	""12"" -> ""39""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""40""[label=""cfg_next""];\n	""15"" -> ""27""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_next""];\n	""17"" -> ""29""[label=""cfg_next""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""41""[label=""cfg_next""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""34""[label=""cfg_next""];\n	""24"" -> ""38""[label=""cfg_goto""];\n	""25"" -> ""36""[label=""cfg_goto""];\n	""26"" -> ""10""[label=""cfg_false""];\n	""26"" -> ""11""[label=""cfg_true""];\n	""27"" -> ""12""[label=""cfg_false""];\n	""27"" -> ""16""[label=""cfg_true""];\n	""28"" -> ""17""[label=""cfg_true""];\n	""28"" -> ""8""[label=""cfg_false""];\n	""29"" -> ""18""[label=""cfg_true""];\n	""29"" -> ""6""[label=""cfg_false""];\n	""3"" -> ""35""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""30"" -> ""23""[label=""cfg_false""];\n	""31"" -> ""1""[label=""cfg_false""];\n	""31"" -> ""20""[label=""cfg_true""];\n	""32"" -> ""4""[label=""cfg_false""];\n	""32"" -> ""5""[label=""cfg_true""];\n	""33"" -> ""15""[label=""cfg_next""];\n	""34"" -> ""32""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""36""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_except""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_except""];\n	""7"" -> ""37""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""26""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.InfoSetUtil.doubleValue(Object),Method,* Converts the supplied object to double.\n     * @param object to convert\n     * @return double,"public static double doubleValue(final Object object) {\n    if (object instanceof Number) {\n        return ((Number) object).doubleValue();\n    }\n    if (object instanceof Boolean) {\n        return ((Boolean) object).booleanValue() ? 0.0 : 1.0;\n    }\n    if (object instanceof String) {\n        if (object.equals("""")) {\n            return 0.0;\n        }\n        try {\n            return Double.parseDouble((String) object);\n        } catch (final NumberFormatException ex) {\n            return Double.NaN;\n        }\n    }\n    if (object instanceof NodePointer) {\n        return doubleValue(((NodePointer) object).getValue());\n    }\n    if (object instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) object;\n        final Pointer ptr = ctx.getSingleNodePointer();\n        return ptr == null ? Double.NaN : doubleValue(ptr);\n    }\n    return doubleValue(stringValue(object));\n}",double doubleValue(java.lang.Object),"digraph cfg_doubleValue {\n	""1"" [label=""$stack10 = #NaN""];\n	""2"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(ptr)""];\n	""3"" [label=""$stack11 = (org.apache.commons.jxpath.ri.model.NodePointer) object""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""5"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack12)""];\n	""6"" [label=""$stack14 = virtualinvoke object.<java.lang.Object: boolean equals(java.lang.Object)>(\""\"")""];\n	""7"" [label=""$stack15 = (java.lang.String) object""];\n	""8"" [label=""$stack16 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($stack15)""];\n	""9"" [label=""$stack17 = (java.lang.Boolean) object""];\n	""10"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.Boolean: boolean booleanValue()>()""];\n	""11"" [label=""$stack19 = 0.0""];\n	""12"" [label=""$stack19 = 1.0""];\n	""13"" [label=""$stack20 = (java.lang.Number) object""];\n	""14"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.Number: double doubleValue()>()""];\n	""15"" [label=""$stack22 := @caughtexception""];\n	""16"" [label=""$stack3 = object instanceof java.lang.Number""];\n	""17"" [label=""$stack4 = object instanceof java.lang.Boolean""];\n	""18"" [label=""$stack5 = object instanceof java.lang.String""];\n	""19"" [label=""$stack6 = object instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""20"" [label=""$stack7 = object instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""21"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>(object)""];\n	""22"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack8)""];\n	""23"" [label=""ex = $stack22""];\n	""24"" [label=""ex = (org.apache.commons.jxpath.ri.EvalContext) object""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""if $stack14 == 0""];\n	""28"" [label=""if $stack18 == 0""];\n	""29"" [label=""if $stack3 == 0""];\n	""30"" [label=""if $stack4 == 0""];\n	""31"" [label=""if $stack5 == 0""];\n	""32"" [label=""if $stack6 == 0""];\n	""33"" [label=""if $stack7 == 0""];\n	""34"" [label=""if ptr != null""];\n	""35"" [label=""object := @parameter0: java.lang.Object""];\n	""36"" [label=""ptr = virtualinvoke ex.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""37"" [label=""return #NaN""];\n	""38"" [label=""return $stack10""];\n	""39"" [label=""return $stack13""];\n	""40"" [label=""return $stack16""];\n	""41"" [label=""return $stack19""];\n	""42"" [label=""return $stack21""];\n	""43"" [label=""return $stack9""];\n	""44"" [label=""return 0.0""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""42""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_next""];\n	""16"" -> ""29""[label=""cfg_next""];\n	""17"" -> ""30""[label=""cfg_next""];\n	""18"" -> ""31""[label=""cfg_next""];\n	""19"" -> ""32""[label=""cfg_next""];\n	""2"" -> ""38""[label=""cfg_next""];\n	""20"" -> ""33""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""43""[label=""cfg_next""];\n	""23"" -> ""37""[label=""cfg_next""];\n	""24"" -> ""36""[label=""cfg_next""];\n	""25"" -> ""41""[label=""cfg_goto""];\n	""26"" -> ""38""[label=""cfg_goto""];\n	""27"" -> ""44""[label=""cfg_false""];\n	""27"" -> ""7""[label=""cfg_true""];\n	""28"" -> ""11""[label=""cfg_false""];\n	""28"" -> ""12""[label=""cfg_true""];\n	""29"" -> ""13""[label=""cfg_false""];\n	""29"" -> ""17""[label=""cfg_true""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""18""[label=""cfg_true""];\n	""30"" -> ""9""[label=""cfg_false""];\n	""31"" -> ""19""[label=""cfg_true""];\n	""31"" -> ""6""[label=""cfg_false""];\n	""32"" -> ""20""[label=""cfg_true""];\n	""32"" -> ""3""[label=""cfg_false""];\n	""33"" -> ""21""[label=""cfg_true""];\n	""33"" -> ""24""[label=""cfg_false""];\n	""34"" -> ""1""[label=""cfg_false""];\n	""34"" -> ""2""[label=""cfg_true""];\n	""35"" -> ""16""[label=""cfg_next""];\n	""36"" -> ""34""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""39""[label=""cfg_next""];\n	""6"" -> ""27""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_except""];\n	""8"" -> ""40""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.InfoSetUtil.booleanValue(Object),Method,* Converts the supplied object to boolean.\n     * @param object to convert\n     * @return boolean,public static boolean booleanValue(final Object object) {\n    if (object instanceof Number) {\n        final double value = ((Number) object).doubleValue();\n        final int negZero = -0;\n        return value != 0 && value != negZero && !Double.isNaN(value);\n    }\n    if (object instanceof Boolean) {\n        return ((Boolean) object).booleanValue();\n    }\n    if (object instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) object;\n        final Pointer ptr = ctx.getSingleNodePointer();\n        return ptr != null && booleanValue(ptr);\n    }\n    if (object instanceof String) {\n        return ((String) object).length() != 0;\n    }\n    if (object instanceof NodePointer) {\n        NodePointer pointer = (NodePointer) object;\n        if (pointer instanceof VariablePointer) {\n            return booleanValue(pointer.getNode());\n        }\n        pointer = pointer.getValuePointer();\n        return pointer.isActual();\n    }\n    return object != null;\n},boolean booleanValue(java.lang.Object),"digraph cfg_booleanValue {\n	""1"" [label=""$stack10 = value instanceof org.apache.commons.jxpath.ri.model.VariablePointer""];\n	""2"" [label=""$stack11 = virtualinvoke value.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""3"" [label=""$stack12 = virtualinvoke value.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>()""];\n	""4"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>($stack12)""];\n	""5"" [label=""$stack14 = (java.lang.String) object""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.String: int length()>()""];\n	""7"" [label=""$stack16 = 0""];\n	""8"" [label=""$stack16 = 1""];\n	""9"" [label=""$stack17 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>(ptr)""];\n	""10"" [label=""$stack18 = 0""];\n	""11"" [label=""$stack18 = 1""];\n	""12"" [label=""$stack19 = (java.lang.Boolean) object""];\n	""13"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.Boolean: boolean booleanValue()>()""];\n	""14"" [label=""$stack21 = (java.lang.Number) object""];\n	""15"" [label=""$stack22 = value cmpl 0.0""];\n	""16"" [label=""$stack23 = value cmpl 0.0""];\n	""17"" [label=""$stack24 = staticinvoke <java.lang.Double: boolean isNaN(double)>(value)""];\n	""18"" [label=""$stack25 = 0""];\n	""19"" [label=""$stack25 = 1""];\n	""20"" [label=""$stack4 = object instanceof java.lang.Number""];\n	""21"" [label=""$stack5 = object instanceof java.lang.Boolean""];\n	""22"" [label=""$stack6 = object instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""23"" [label=""$stack7 = object instanceof java.lang.String""];\n	""24"" [label=""$stack8 = object instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""25"" [label=""$stack9 = 0""];\n	""26"" [label=""$stack9 = 1""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""if $stack10 == 0""];\n	""32"" [label=""if $stack15 == 0""];\n	""33"" [label=""if $stack17 == 0""];\n	""34"" [label=""if $stack22 == 0""];\n	""35"" [label=""if $stack23 == 0""];\n	""36"" [label=""if $stack24 != 0""];\n	""37"" [label=""if $stack4 == 0""];\n	""38"" [label=""if $stack5 == 0""];\n	""39"" [label=""if $stack6 == 0""];\n	""40"" [label=""if $stack7 == 0""];\n	""41"" [label=""if $stack8 == 0""];\n	""42"" [label=""if object == null""];\n	""43"" [label=""if ptr == null""];\n	""44"" [label=""negZero = 0""];\n	""45"" [label=""object := @parameter0: java.lang.Object""];\n	""46"" [label=""ptr = virtualinvoke value.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""47"" [label=""return $stack11""];\n	""48"" [label=""return $stack13""];\n	""49"" [label=""return $stack16""];\n	""50"" [label=""return $stack18""];\n	""51"" [label=""return $stack20""];\n	""52"" [label=""return $stack25""];\n	""53"" [label=""return $stack9""];\n	""54"" [label=""value = (org.apache.commons.jxpath.ri.EvalContext) object""];\n	""55"" [label=""value = (org.apache.commons.jxpath.ri.model.NodePointer) object""];\n	""56"" [label=""value = virtualinvoke $stack21.<java.lang.Number: double doubleValue()>()""];\n	""57"" [label=""value = virtualinvoke value.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""1"" -> ""31""[label=""cfg_next""];\n	""10"" -> ""50""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""51""[label=""cfg_next""];\n	""14"" -> ""56""[label=""cfg_next""];\n	""15"" -> ""34""[label=""cfg_next""];\n	""16"" -> ""35""[label=""cfg_next""];\n	""17"" -> ""36""[label=""cfg_next""];\n	""18"" -> ""52""[label=""cfg_next""];\n	""19"" -> ""27""[label=""cfg_next""];\n	""2"" -> ""47""[label=""cfg_next""];\n	""20"" -> ""37""[label=""cfg_next""];\n	""21"" -> ""38""[label=""cfg_next""];\n	""22"" -> ""39""[label=""cfg_next""];\n	""23"" -> ""40""[label=""cfg_next""];\n	""24"" -> ""41""[label=""cfg_next""];\n	""25"" -> ""53""[label=""cfg_next""];\n	""26"" -> ""30""[label=""cfg_next""];\n	""27"" -> ""52""[label=""cfg_goto""];\n	""28"" -> ""50""[label=""cfg_goto""];\n	""29"" -> ""49""[label=""cfg_goto""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""53""[label=""cfg_goto""];\n	""31"" -> ""3""[label=""cfg_false""];\n	""31"" -> ""57""[label=""cfg_true""];\n	""32"" -> ""7""[label=""cfg_true""];\n	""32"" -> ""8""[label=""cfg_false""];\n	""33"" -> ""10""[label=""cfg_true""];\n	""33"" -> ""11""[label=""cfg_false""];\n	""34"" -> ""16""[label=""cfg_false""];\n	""34"" -> ""18""[label=""cfg_true""];\n	""35"" -> ""17""[label=""cfg_false""];\n	""35"" -> ""18""[label=""cfg_true""];\n	""36"" -> ""18""[label=""cfg_true""];\n	""36"" -> ""19""[label=""cfg_false""];\n	""37"" -> ""14""[label=""cfg_false""];\n	""37"" -> ""21""[label=""cfg_true""];\n	""38"" -> ""12""[label=""cfg_false""];\n	""38"" -> ""22""[label=""cfg_true""];\n	""39"" -> ""23""[label=""cfg_true""];\n	""39"" -> ""54""[label=""cfg_false""];\n	""4"" -> ""48""[label=""cfg_next""];\n	""40"" -> ""24""[label=""cfg_true""];\n	""40"" -> ""5""[label=""cfg_false""];\n	""41"" -> ""42""[label=""cfg_true""];\n	""41"" -> ""55""[label=""cfg_false""];\n	""42"" -> ""25""[label=""cfg_true""];\n	""42"" -> ""26""[label=""cfg_false""];\n	""43"" -> ""10""[label=""cfg_true""];\n	""43"" -> ""9""[label=""cfg_false""];\n	""44"" -> ""15""[label=""cfg_next""];\n	""45"" -> ""20""[label=""cfg_next""];\n	""46"" -> ""43""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""54"" -> ""46""[label=""cfg_next""];\n	""55"" -> ""1""[label=""cfg_next""];\n	""56"" -> ""44""[label=""cfg_next""];\n	""57"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""32""[label=""cfg_next""];\n	""7"" -> ""49""[label=""cfg_next""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.NamespaceResolver.getPrefix(NodePointer,String)",Method,* Find the namespace prefix for the specified namespace URI and NodePointer.\n     * @param pointer location\n     * @param namespaceURI to check\n     * @return prefix if found\n     * @since JXPath 1.3,"protected static String getPrefix(final NodePointer pointer, final String namespaceURI) {\n    NodePointer currentPointer = pointer;\n    while (currentPointer != null) {\n        final NodeIterator ni = currentPointer.namespaceIterator();\n        for (int position = 1; ni != null && ni.setPosition(position); position++) {\n            final NodePointer nsPointer = ni.getNodePointer();\n            final String uri = nsPointer.getNamespaceURI();\n            if (uri.equals(namespaceURI)) {\n                final String prefix = nsPointer.getName().getName();\n                if (!"""".equals(prefix)) {\n                    return prefix;\n                }\n            }\n        }\n        currentPointer = currentPointer.getParent();\n    }\n    return null;\n}","java.lang.String getPrefix(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)","digraph cfg_getPrefix {\n	""1"" [label=""$stack10 = virtualinvoke nsPointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""2"" [label=""$stack11 = \""\""""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(prefix)""];\n	""4"" [label=""$stack8 = interfaceinvoke ni.<org.apache.commons.jxpath.ri.model.NodeIterator: boolean setPosition(int)>(position)""];\n	""5"" [label=""$stack9 = virtualinvoke uri.<java.lang.String: boolean equals(java.lang.Object)>(namespaceURI)""];\n	""6"" [label=""currentPointer = pointer""];\n	""7"" [label=""currentPointer = virtualinvoke currentPointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getParent()>()""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack12 != 0""];\n	""11"" [label=""if $stack8 == 0""];\n	""12"" [label=""if $stack9 == 0""];\n	""13"" [label=""if currentPointer == null""];\n	""14"" [label=""if ni == null""];\n	""15"" [label=""namespaceURI := @parameter1: java.lang.String""];\n	""16"" [label=""ni = virtualinvoke currentPointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodeIterator namespaceIterator()>()""];\n	""17"" [label=""nsPointer = interfaceinvoke ni.<org.apache.commons.jxpath.ri.model.NodeIterator: org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()>()""];\n	""18"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""19"" [label=""position = 1""];\n	""20"" [label=""position = position + 1""];\n	""21"" [label=""prefix = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""22"" [label=""return null""];\n	""23"" [label=""return prefix""];\n	""24"" [label=""uri = virtualinvoke nsPointer.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI()>()""];\n	""1"" -> ""21""[label=""cfg_next""];\n	""10"" -> ""20""[label=""cfg_true""];\n	""10"" -> ""23""[label=""cfg_false""];\n	""11"" -> ""17""[label=""cfg_false""];\n	""11"" -> ""7""[label=""cfg_true""];\n	""12"" -> ""1""[label=""cfg_false""];\n	""12"" -> ""20""[label=""cfg_true""];\n	""13"" -> ""16""[label=""cfg_false""];\n	""13"" -> ""22""[label=""cfg_true""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""6""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""17"" -> ""24""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_next""];\n	""19"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""8""[label=""cfg_next""];\n	""21"" -> ""2""[label=""cfg_next""];\n	""24"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_goto""];\n	""9"" -> ""13""[label=""cfg_goto""];\n}\n","protected , static "
"org.apache.commons.jxpath.ri.NamespaceResolver.registerNamespace(String,String)",Method,* Registers a namespace prefix.\n     *\n     * @param prefix A namespace prefix\n     * @param namespaceURI A URI for that prefix,"public synchronized void registerNamespace(final String prefix, final String namespaceURI) {\n    if (isSealed()) {\n        throw new IllegalStateException(""Cannot register namespaces on a sealed NamespaceResolver"");\n    }\n    namespaceMap.put(prefix, namespaceURI);\n    reverseMap.put(namespaceURI, prefix);\n}","void registerNamespace(java.lang.String,java.lang.String)","digraph cfg_registerNamespace {\n	""1"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.NamespaceResolver: boolean isSealed()>()""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.util.HashMap namespaceMap>""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.util.HashMap reverseMap>""];\n	""4"" [label=""$stack6 = new java.lang.IllegalStateException""];\n	""5"" [label=""if $stack3 == 0""];\n	""6"" [label=""namespaceURI := @parameter1: java.lang.String""];\n	""7"" [label=""prefix := @parameter0: java.lang.String""];\n	""8"" [label=""return""];\n	""9"" [label=""specialinvoke $stack6.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\""Cannot register namespaces on a sealed NamespaceResolver\"")""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""11"" [label=""throw $stack6""];\n	""12"" [label=""virtualinvoke $stack4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(prefix, namespaceURI)""];\n	""13"" [label=""virtualinvoke $stack5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(namespaceURI, prefix)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.NamespaceResolver.setNamespaceContextPointer(NodePointer),Method,* Register a namespace for the expression context.\n     * @param pointer the Pointer to set.,public void setNamespaceContextPointer(final NodePointer pointer) {\n    this.pointer = pointer;\n},void setNamespaceContextPointer(org.apache.commons.jxpath.ri.model.NodePointer),"digraph cfg_setNamespaceContextPointer {\n	""1"" [label=""pointer := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.model.NodePointer pointer> = pointer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.NamespaceResolver.getNamespaceContextPointer(),Method,* Gets the namespace context pointer.\n     * @return Pointer,public Pointer getNamespaceContextPointer() {\n    if (pointer == null && parent != null) {\n        return parent.getNamespaceContextPointer();\n    }\n    return pointer;\n},org.apache.commons.jxpath.Pointer getNamespaceContextPointer(),"digraph cfg_getNamespaceContextPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.Pointer getNamespaceContextPointer()>()""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""if $stack3 == null""];\n	""8"" [label=""return $stack2""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.NamespaceResolver.getNamespaceURI(String),Method,"* Given a prefix, returns a registered namespace URI. If the requested\n     * prefix was not defined explicitly using the registerNamespace method,\n     * JXPathContext will then check the context node to see if the prefix is\n     * defined there. See\n     * {@link #setNamespaceContextPointer(NodePointer) setNamespaceContextPointer}.\n     *\n     * @param prefix The namespace prefix to look up\n     * @return namespace URI or null if the prefix is undefined.",public synchronized String getNamespaceURI(final String prefix) {\n    final String uri = getExternallyRegisteredNamespaceURI(prefix);\n    return uri == null && pointer != null ? pointer.getNamespaceURI(prefix) : uri;\n},java.lang.String getNamespaceURI(java.lang.String),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""3"" [label=""$stack5 = uri""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack3 == null""];\n	""7"" [label=""if uri != null""];\n	""8"" [label=""prefix := @parameter0: java.lang.String""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""11"" [label=""uri = virtualinvoke this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getExternallyRegisteredNamespaceURI(java.lang.String)>(prefix)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""11""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.NamespaceResolver.getExternallyRegisteredNamespaceURI(String),Method,"* Given a prefix, returns an externally registered namespace URI.\n     *\n     * @param prefix The namespace prefix to look up\n     * @return namespace URI or null if the prefix is undefined.\n     * @since JXPath 1.3",protected synchronized String getExternallyRegisteredNamespaceURI(final String prefix) {\n    final String uri = (String) namespaceMap.get(prefix);\n    return uri == null && parent != null ? parent.getExternallyRegisteredNamespaceURI(prefix) : uri;\n},java.lang.String getExternallyRegisteredNamespaceURI(java.lang.String),"digraph cfg_getExternallyRegisteredNamespaceURI {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.util.HashMap namespaceMap>""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(prefix)""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""5"" [label=""$stack7 = uri""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getExternallyRegisteredNamespaceURI(java.lang.String)>(prefix)""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack5 == null""];\n	""9"" [label=""if uri != null""];\n	""10"" [label=""prefix := @parameter0: java.lang.String""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""13"" [label=""uri = (java.lang.String) $stack4""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_true""];\n}\n","protected , synchronized "
org.apache.commons.jxpath.ri.NamespaceResolver.getPrefix(String),Method,* Gets the prefix associated with the specifed namespace URI.\n     * @param namespaceURI the ns URI to check.\n     * @return String prefix,"public synchronized String getPrefix(final String namespaceURI) {\n    final String prefix = getExternallyRegisteredPrefix(namespaceURI);\n    return prefix == null && pointer != null ? getPrefix(pointer, namespaceURI) : prefix;\n}",java.lang.String getPrefix(java.lang.String),"digraph cfg_getPrefix {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""2"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.model.NodePointer pointer>""];\n	""3"" [label=""$stack5 = prefix""];\n	""4"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getPrefix(org.apache.commons.jxpath.ri.model.NodePointer,java.lang.String)>($stack4, namespaceURI)""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack3 == null""];\n	""7"" [label=""if prefix != null""];\n	""8"" [label=""namespaceURI := @parameter0: java.lang.String""];\n	""9"" [label=""prefix = virtualinvoke this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getExternallyRegisteredPrefix(java.lang.String)>(namespaceURI)""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.NamespaceResolver.getExternallyRegisteredPrefix(String),Method,* Gets the nearest prefix found that matches an externally-registered namespace.\n     * @param namespaceURI the ns URI to check.\n     * @return String prefix if found.\n     * @since JXPath 1.3,protected synchronized String getExternallyRegisteredPrefix(final String namespaceURI) {\n    final String prefix = (String) reverseMap.get(namespaceURI);\n    return prefix == null && parent != null ? parent.getExternallyRegisteredPrefix(namespaceURI) : prefix;\n},java.lang.String getExternallyRegisteredPrefix(java.lang.String),"digraph cfg_getExternallyRegisteredPrefix {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.util.HashMap reverseMap>""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(namespaceURI)""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""5"" [label=""$stack7 = prefix""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getExternallyRegisteredPrefix(java.lang.String)>(namespaceURI)""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack5 == null""];\n	""9"" [label=""if prefix != null""];\n	""10"" [label=""namespaceURI := @parameter0: java.lang.String""];\n	""11"" [label=""prefix = (java.lang.String) $stack4""];\n	""12"" [label=""return $stack7""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_true""];\n}\n","protected , synchronized "
org.apache.commons.jxpath.ri.NamespaceResolver.isSealed(),Method,* Learn whether this NamespaceResolver has been sealed.\n     * @return boolean,public boolean isSealed() {\n    return sealed;\n},boolean isSealed(),"digraph cfg_isSealed {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: boolean sealed>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.NamespaceResolver.seal(),Method,* Seal this {@link NamespaceResolver}.,public void seal() {\n    sealed = true;\n    if (parent != null) {\n        parent.seal();\n    }\n},void seal(),"digraph cfg_seal {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent>""];\n	""3"" [label=""if $stack1 == null""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.NamespaceResolver: boolean sealed> = 1""];\n	""7"" [label=""virtualinvoke $stack2.<org.apache.commons.jxpath.ri.NamespaceResolver: void seal()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_false""];\n	""3"" -> ""4""[label=""cfg_true""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.NamespaceResolver.clone(),Method,No Comment,"@Override\npublic Object clone() {\n    try {\n        final NamespaceResolver result = (NamespaceResolver) super.clone();\n        result.sealed = false;\n        return result;\n    } catch (final CloneNotSupportedException e) {\n        // Of course, it's supported.\n        e.printStackTrace();\n        return null;\n    }\n}",java.lang.Object clone(),"digraph cfg_clone {\n	""1"" [label=""$stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>()""];\n	""2"" [label=""$stack3 = result""];\n	""3"" [label=""$stack4 := @caughtexception""];\n	""4"" [label=""result = $stack4""];\n	""5"" [label=""result = (org.apache.commons.jxpath.ri.NamespaceResolver) $stack2""];\n	""6"" [label=""result.<org.apache.commons.jxpath.ri.NamespaceResolver: boolean sealed> = 0""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""return null""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""10"" [label=""virtualinvoke result.<java.lang.CloneNotSupportedException: void printStackTrace()>()""];\n	""1"" -> ""3""[label=""cfg_except""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.NamespaceResolver.<init>(),Constructor,* Create a new NamespaceResolver.,public NamespaceResolver() {\n    this(null);\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.NamespaceResolver: void <init>(org.apache.commons.jxpath.ri.NamespaceResolver)>(null)""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.NamespaceResolver.<init>(NamespaceResolver),Constructor,* Create a new NamespaceResolver.\n     * @param parent NamespaceResolver,public NamespaceResolver(final NamespaceResolver parent) {\n    this.parent = parent;\n},void <init>(org.apache.commons.jxpath.ri.NamespaceResolver),"digraph cfg_init {\n	""1"" [label=""$stack2 = new java.util.HashMap""];\n	""2"" [label=""$stack3 = new java.util.HashMap""];\n	""3"" [label=""parent := @parameter0: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke $stack2.<java.util.HashMap: void <init>()>()""];\n	""6"" [label=""specialinvoke $stack3.<java.util.HashMap: void <init>()>()""];\n	""7"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.util.HashMap namespaceMap> = $stack2""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.NamespaceResolver: java.util.HashMap reverseMap> = $stack3""];\n	""11"" [label=""this.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.ri.NamespaceResolver parent> = parent""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""!="";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""!=\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationNotEqual.\n     * @param arg1 left operand\n     * @param arg2 right operand,"public CoreOperationNotEqual(final Expression arg1, final Expression arg2) {\n    super(arg1, arg2, true);\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""2"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression,boolean)>(arg1, arg2, 1)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    final double l = InfoSetUtil.doubleValue(args[0].computeValue(context));\n    final double r = InfoSetUtil.doubleValue(args[1].computeValue(context));\n    return Double.valueOf(l - r);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = $stack9[1]""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack12 = l - r""];\n	""4"" [label=""$stack13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack12)""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""6"" [label=""$stack7 = $stack6[0]""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""10"" [label=""l = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack8)""];\n	""11"" [label=""r = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack11)""];\n	""12"" [label=""return $stack13""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return ADD_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 4""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return false;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""-"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""-\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationSubtract.\n     * @param arg1 minuend\n     * @param arg2 subtrahend,"public CoreOperationSubtract(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    for (final Expression arg : args) {\n        if (InfoSetUtil.booleanValue(arg.computeValue(context))) {\n            return Boolean.TRUE;\n        }\n    }\n    return Boolean.FALSE;\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""2"" [label=""$stack7 = virtualinvoke arg.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>($stack7)""];\n	""4"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""5"" [label=""arg = l2[l4]""];\n	""6"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack8 == 0""];\n	""9"" [label=""if l4 >= l3""];\n	""10"" [label=""l2 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationOr: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""11"" [label=""l3 = lengthof l2""];\n	""12"" [label=""l4 = 0""];\n	""13"" [label=""l4 = l4 + 1""];\n	""14"" [label=""return $stack6""];\n	""15"" [label=""return $stack9""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationOr""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return OR_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationOr""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return true;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationOr""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""or"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""or\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationOr""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationOr.<init>(Expression[]),Constructor,* Create a new CoreOperationOr.\n     * @param args or'd Expression components,public CoreOperationOr(final Expression[] args) {\n    super(args);\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_init {\n	""1"" [label=""args := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationOr""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExpressionPath.getExpression(),Method,* Gets the expression.\n     * @return Expression,public Expression getExpression() {\n    return expression;\n},org.apache.commons.jxpath.ri.compiler.Expression getExpression(),"digraph cfg_getExpression {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExpressionPath.getPredicates(),Method,* Predicates are the expressions in brackets that may follow\n     * the root expression of the path.\n     * @return Expression[],public Expression[] getPredicates() {\n    return predicates;\n},org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates(),"digraph cfg_getPredicates {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExpressionPath.computeContextDependent(),Method,* Returns true if the root expression or any of the\n     * predicates or the path steps are context dependent.\n     * @return boolean,@Override\npublic boolean computeContextDependent() {\n    if (expression.isContextDependent()) {\n        return true;\n    }\n    if (predicates != null) {\n        for (final Expression predicate : predicates) {\n            if (predicate.isContextDependent()) {\n                return true;\n            }\n        }\n    }\n    return super.computeContextDependent();\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.Expression: boolean isContextDependent()>()""];\n	""3"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""4"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: boolean computeContextDependent()>()""];\n	""5"" [label=""$stack9 = virtualinvoke predicate.<org.apache.commons.jxpath.ri.compiler.Expression: boolean isContextDependent()>()""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack6 == 0""];\n	""8"" [label=""if $stack7 == null""];\n	""9"" [label=""if $stack9 == 0""];\n	""10"" [label=""if l3 >= l2""];\n	""11"" [label=""l1 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""12"" [label=""l2 = lengthof l1""];\n	""13"" [label=""l3 = 0""];\n	""14"" [label=""l3 = l3 + 1""];\n	""15"" [label=""predicate = l1[l3]""];\n	""16"" [label=""return $stack8""];\n	""17"" [label=""return 1""];\n	""18"" [label=""return 1""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_false""];\n	""10"" -> ""4""[label=""cfg_true""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""17""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""11""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""18""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExpressionPath.isSimpleExpressionPath(),Method,"* Recognized paths formatted as {@code $x[3]/foo[2]}.  The\n     * evaluation of such ""simple"" paths is optimized and streamlined.\n     * @return boolean",public synchronized boolean isSimpleExpressionPath() {\n    if (!basicKnown) {\n        basicKnown = true;\n        basic = isSimplePath() && areBasicPredicates(getPredicates());\n    }\n    return basic;\n},boolean isSimpleExpressionPath(),"digraph cfg_isSimpleExpressionPath {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean basicKnown>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean basic>""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean isSimplePath()>()""];\n	""4"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""5"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean areBasicPredicates(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack4)""];\n	""6"" [label=""$stack6 = 0""];\n	""7"" [label=""$stack6 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack1 != 0""];\n	""10"" [label=""if $stack3 == 0""];\n	""11"" [label=""if $stack5 == 0""];\n	""12"" [label=""return $stack2""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean basic> = $stack6""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean basicKnown> = 1""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_goto""];\n	""9"" -> ""15""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.compiler.ExpressionPath.toString(),Method,No Comment,"@Override\npublic String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (expression instanceof CoreOperation || expression instanceof ExpressionPath || expression instanceof LocationPath) {\n        buffer.append('(');\n        buffer.append(expression);\n        buffer.append(')');\n    } else {\n        buffer.append(expression);\n    }\n    if (predicates != null) {\n        for (final Expression predicate : predicates) {\n            buffer.append('[');\n            buffer.append(predicate);\n            buffer.append(']');\n        }\n    }\n    final Step[] steps = getSteps();\n    if (steps != null) {\n        for (final Step step : steps) {\n            buffer.append(""/"");\n            buffer.append(step);\n        }\n    }\n    return buffer.toString();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""3"" [label=""$stack12 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""5"" [label=""$stack14 = $stack13 instanceof org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""7"" [label=""$stack16 = $stack15 instanceof org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""9"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""11"" [label=""$stack9 = $stack8 instanceof org.apache.commons.jxpath.ri.compiler.CoreOperation""];\n	""12"" [label=""buffer = $stack7""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack11 == null""];\n	""17"" [label=""if $stack14 != 0""];\n	""18"" [label=""if $stack16 == 0""];\n	""19"" [label=""if $stack9 != 0""];\n	""20"" [label=""if l4 >= l3""];\n	""21"" [label=""if predicate >= l4""];\n	""22"" [label=""if steps == null""];\n	""23"" [label=""l3 = lengthof steps""];\n	""24"" [label=""l3 = steps""];\n	""25"" [label=""l4 = 0""];\n	""26"" [label=""l4 = l4 + 1""];\n	""27"" [label=""l4 = lengthof l3""];\n	""28"" [label=""predicate = 0""];\n	""29"" [label=""predicate = predicate + 1""];\n	""30"" [label=""predicate = steps[l4]""];\n	""31"" [label=""return $stack12""];\n	""32"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""33"" [label=""step = l3[predicate]""];\n	""34"" [label=""steps = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""35"" [label=""steps = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Step[] getSteps()>()""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""37"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)""];\n	""38"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)""];\n	""39"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""40"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""41"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10)""];\n	""42"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17)""];\n	""43"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(predicate)""];\n	""44"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(step)""];\n	""45"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/\"")""];\n	""1"" -> ""41""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_goto""];\n	""14"" -> ""20""[label=""cfg_goto""];\n	""15"" -> ""21""[label=""cfg_goto""];\n	""16"" -> ""34""[label=""cfg_false""];\n	""16"" -> ""35""[label=""cfg_true""];\n	""17"" -> ""37""[label=""cfg_true""];\n	""17"" -> ""6""[label=""cfg_false""];\n	""18"" -> ""37""[label=""cfg_false""];\n	""18"" -> ""8""[label=""cfg_true""];\n	""19"" -> ""37""[label=""cfg_true""];\n	""19"" -> ""4""[label=""cfg_false""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_false""];\n	""20"" -> ""35""[label=""cfg_true""];\n	""21"" -> ""3""[label=""cfg_true""];\n	""21"" -> ""33""[label=""cfg_false""];\n	""22"" -> ""24""[label=""cfg_false""];\n	""22"" -> ""3""[label=""cfg_true""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""27""[label=""cfg_next""];\n	""25"" -> ""20""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""21""[label=""cfg_next""];\n	""29"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""31""[label=""cfg_next""];\n	""30"" -> ""39""[label=""cfg_next""];\n	""32"" -> ""12""[label=""cfg_next""];\n	""33"" -> ""45""[label=""cfg_next""];\n	""34"" -> ""23""[label=""cfg_next""];\n	""35"" -> ""22""[label=""cfg_next""];\n	""36"" -> ""9""[label=""cfg_next""];\n	""37"" -> ""1""[label=""cfg_next""];\n	""38"" -> ""13""[label=""cfg_next""];\n	""39"" -> ""43""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""26""[label=""cfg_next""];\n	""41"" -> ""38""[label=""cfg_next""];\n	""42"" -> ""2""[label=""cfg_next""];\n	""43"" -> ""40""[label=""cfg_next""];\n	""44"" -> ""29""[label=""cfg_next""];\n	""45"" -> ""44""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""42""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExpressionPath.compute(EvalContext),Method,No Comment,"@Override\npublic Object compute(final EvalContext context) {\n    return expressionPath(context, false);\n}",java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_compute {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: java.lang.Object expressionPath(org.apache.commons.jxpath.ri.EvalContext,boolean)>(context, 0)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExpressionPath.computeValue(EvalContext),Method,No Comment,"@Override\npublic Object computeValue(final EvalContext context) {\n    return expressionPath(context, true);\n}",java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: java.lang.Object expressionPath(org.apache.commons.jxpath.ri.EvalContext,boolean)>(context, 1)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.ExpressionPath.expressionPath(EvalContext,boolean)",Method,* Walks an expression path (a path that starts with an expression)\n     * @param evalContext base context\n     * @param firstMatch whether to return the first match found\n     * @return Object found,"protected Object expressionPath(final EvalContext evalContext, final boolean firstMatch) {\n    final Object value = expression.compute(evalContext);\n    EvalContext context;\n    if (value instanceof InitialContext) {\n        // This is an optimization. We can avoid iterating through a\n        // collection if the context bean is in fact one.\n        context = (InitialContext) value;\n    } else if (value instanceof EvalContext) {\n        // UnionContext will collect all values from the ""value"" context\n        // and treat the whole thing as a big collection.\n        context = new UnionContext(evalContext, new EvalContext[] { (EvalContext) value });\n    } else {\n        context = evalContext.getRootContext().getConstantContext(value);\n    }\n    if (firstMatch && isSimpleExpressionPath() && !(context instanceof NodeSetContext)) {\n        final EvalContext ctx = context;\n        final NodePointer ptr = (NodePointer) ctx.getSingleNodePointer();\n        if (ptr != null && (ptr.getIndex() == NodePointer.WHOLE_COLLECTION || predicates == null || predicates.length == 0)) {\n            return SimplePathInterpreter.interpretSimpleExpressionPath(evalContext, ptr, predicates, getSteps());\n        }\n    }\n    if (predicates != null) {\n        for (int j = 0; j < predicates.length; j++) {\n            if (j != 0) {\n                context = new UnionContext(context, new EvalContext[] { context });\n            }\n            context = new PredicateContext(context, predicates[j]);\n        }\n    }\n    return firstMatch ? (Object) getSingleNodePointerForSteps(context) : evalSteps(context);\n}","java.lang.Object expressionPath(org.apache.commons.jxpath.ri.EvalContext,boolean)","digraph cfg_expressionPath {\n	""1"" [label=""$stack10 = virtualinvoke evalContext.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.Pointer getSingleNodePointerForSteps(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.EvalContext evalSteps(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack13 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""6"" [label=""$stack14 = lengthof $stack13""];\n	""7"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""8"" [label=""$stack16 = $stack15[ctx]""];\n	""9"" [label=""$stack17 = new org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""10"" [label=""$stack18 = newarray (org.apache.commons.jxpath.ri.EvalContext)[1]""];\n	""11"" [label=""$stack18[0] = context""];\n	""12"" [label=""$stack19 = new org.apache.commons.jxpath.ri.axes.UnionContext""];\n	""13"" [label=""$stack20 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean isSimpleExpressionPath()>()""];\n	""14"" [label=""$stack21 = context instanceof org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""15"" [label=""$stack22 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""16"" [label=""$stack23 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: int getIndex()>()""];\n	""17"" [label=""$stack24 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""18"" [label=""$stack25 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Step[] getSteps()>()""];\n	""19"" [label=""$stack26 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer interpretSimpleExpressionPath(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Expression[],org.apache.commons.jxpath.ri.compiler.Step[])>(evalContext, ptr, $stack24, $stack25)""];\n	""20"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""21"" [label=""$stack28 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""22"" [label=""$stack29 = lengthof $stack28""];\n	""23"" [label=""$stack30 = newarray (org.apache.commons.jxpath.ri.EvalContext)[1]""];\n	""24"" [label=""$stack30[0] = $stack31""];\n	""25"" [label=""$stack31 = (org.apache.commons.jxpath.ri.EvalContext) value""];\n	""26"" [label=""$stack32 = new org.apache.commons.jxpath.ri.axes.UnionContext""];\n	""27"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression>""];\n	""28"" [label=""$stack8 = value instanceof org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""29"" [label=""$stack9 = value instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""30"" [label=""context = $stack17""];\n	""31"" [label=""context = $stack19""];\n	""32"" [label=""context = $stack32""];\n	""33"" [label=""context = (org.apache.commons.jxpath.ri.axes.InitialContext) value""];\n	""34"" [label=""context = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.EvalContext getConstantContext(java.lang.Object)>(value)""];\n	""35"" [label=""ctx = 0""];\n	""36"" [label=""ctx = context""];\n	""37"" [label=""ctx = ctx + 1""];\n	""38"" [label=""evalContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""39"" [label=""firstMatch := @parameter1: boolean""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""goto""];\n	""43"" [label=""goto""];\n	""44"" [label=""if $stack11 == null""];\n	""45"" [label=""if $stack20 == 0""];\n	""46"" [label=""if $stack21 != 0""];\n	""47"" [label=""if $stack23 == -2147483648""];\n	""48"" [label=""if $stack27 == null""];\n	""49"" [label=""if $stack29 != 0""];\n	""50"" [label=""if $stack8 == 0""];\n	""51"" [label=""if $stack9 == 0""];\n	""52"" [label=""if ctx == 0""];\n	""53"" [label=""if ctx >= $stack14""];\n	""54"" [label=""if firstMatch == 0""];\n	""55"" [label=""if firstMatch == 0""];\n	""56"" [label=""if ptr == null""];\n	""57"" [label=""ptr = (org.apache.commons.jxpath.ri.model.NodePointer) $stack22""];\n	""58"" [label=""return $stack12""];\n	""59"" [label=""return $stack26""];\n	""60"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.ri.axes.PredicateContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, $stack16)""];\n	""61"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.ri.axes.UnionContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.EvalContext[])>(context, $stack18)""];\n	""62"" [label=""specialinvoke $stack32.<org.apache.commons.jxpath.ri.axes.UnionContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.EvalContext[])>(evalContext, $stack30)""];\n	""63"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""64"" [label=""value = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(evalContext)""];\n	""1"" -> ""34""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""61""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""45""[label=""cfg_next""];\n	""14"" -> ""46""[label=""cfg_next""];\n	""15"" -> ""57""[label=""cfg_next""];\n	""16"" -> ""47""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""59""[label=""cfg_next""];\n	""2"" -> ""44""[label=""cfg_next""];\n	""20"" -> ""48""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""49""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""62""[label=""cfg_next""];\n	""25"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""23""[label=""cfg_next""];\n	""27"" -> ""64""[label=""cfg_next""];\n	""28"" -> ""50""[label=""cfg_next""];\n	""29"" -> ""51""[label=""cfg_next""];\n	""3"" -> ""43""[label=""cfg_next""];\n	""30"" -> ""37""[label=""cfg_next""];\n	""31"" -> ""9""[label=""cfg_next""];\n	""32"" -> ""41""[label=""cfg_next""];\n	""33"" -> ""40""[label=""cfg_next""];\n	""34"" -> ""54""[label=""cfg_next""];\n	""35"" -> ""5""[label=""cfg_next""];\n	""36"" -> ""15""[label=""cfg_next""];\n	""37"" -> ""42""[label=""cfg_next""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""39"" -> ""27""[label=""cfg_next""];\n	""4"" -> ""58""[label=""cfg_next""];\n	""40"" -> ""54""[label=""cfg_goto""];\n	""41"" -> ""54""[label=""cfg_goto""];\n	""42"" -> ""5""[label=""cfg_goto""];\n	""43"" -> ""58""[label=""cfg_goto""];\n	""44"" -> ""35""[label=""cfg_false""];\n	""44"" -> ""55""[label=""cfg_true""];\n	""45"" -> ""14""[label=""cfg_false""];\n	""45"" -> ""2""[label=""cfg_true""];\n	""46"" -> ""2""[label=""cfg_true""];\n	""46"" -> ""36""[label=""cfg_false""];\n	""47"" -> ""17""[label=""cfg_true""];\n	""47"" -> ""20""[label=""cfg_false""];\n	""48"" -> ""17""[label=""cfg_true""];\n	""48"" -> ""21""[label=""cfg_false""];\n	""49"" -> ""17""[label=""cfg_false""];\n	""49"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""29""[label=""cfg_true""];\n	""50"" -> ""33""[label=""cfg_false""];\n	""51"" -> ""1""[label=""cfg_true""];\n	""51"" -> ""26""[label=""cfg_false""];\n	""52"" -> ""12""[label=""cfg_false""];\n	""52"" -> ""9""[label=""cfg_true""];\n	""53"" -> ""52""[label=""cfg_false""];\n	""53"" -> ""55""[label=""cfg_true""];\n	""54"" -> ""13""[label=""cfg_false""];\n	""54"" -> ""2""[label=""cfg_true""];\n	""55"" -> ""3""[label=""cfg_false""];\n	""55"" -> ""4""[label=""cfg_true""];\n	""56"" -> ""16""[label=""cfg_false""];\n	""56"" -> ""2""[label=""cfg_true""];\n	""57"" -> ""56""[label=""cfg_next""];\n	""6"" -> ""53""[label=""cfg_next""];\n	""60"" -> ""30""[label=""cfg_next""];\n	""61"" -> ""31""[label=""cfg_next""];\n	""62"" -> ""32""[label=""cfg_next""];\n	""63"" -> ""38""[label=""cfg_next""];\n	""64"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""60""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.ExpressionPath.<init>(Expression,Expression[],Step[])",Constructor,* Create a new ExpressionPath.\n     * @param expression Expression\n     * @param predicates to execute\n     * @param steps navigation,"public ExpressionPath(final Expression expression, final Expression[] predicates, final Step[] steps) {\n    super(steps);\n    this.expression = expression;\n    this.predicates = predicates;\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression[],org.apache.commons.jxpath.ri.compiler.Step[])","digraph cfg_init {\n	""1"" [label=""expression := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""2"" [label=""predicates := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: void <init>(org.apache.commons.jxpath.ri.compiler.Step[])>(steps)""];\n	""5"" [label=""steps := @parameter2: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: boolean basicKnown> = 0""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression expression> = expression""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: org.apache.commons.jxpath.ri.compiler.Expression[] predicates> = predicates""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.LocationPath.isAbsolute(),Method,* Learn whether this LocationPath is absolute.\n     * @return boolean,public boolean isAbsolute() {\n    return absolute;\n},boolean isAbsolute(),"digraph cfg_isAbsolute {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.LocationPath: boolean absolute>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.LocationPath.computeContextDependent(),Method,No Comment,@Override\npublic boolean computeContextDependent() {\n    return !absolute || super.computeContextDependent();\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.LocationPath: boolean absolute>""];\n	""2"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: boolean computeContextDependent()>()""];\n	""3"" [label=""$stack3 = 0""];\n	""4"" [label=""$stack3 = 1""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 == 0""];\n	""7"" [label=""if $stack2 == 0""];\n	""8"" [label=""return $stack3""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.LocationPath.toString(),Method,No Comment,@Override\npublic String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    final Step[] steps = getSteps();\n    if (steps != null) {\n        for (int i = 0; i < steps.length; i++) {\n            if (i > 0 || absolute) {\n                buffer.append('/');\n            }\n            buffer.append(steps[i]);\n        }\n    }\n    return buffer.toString();\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack5 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""3"" [label=""$stack6 = lengthof steps""];\n	""4"" [label=""$stack7 = steps[i]""];\n	""5"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.compiler.LocationPath: boolean absolute>""];\n	""6"" [label=""buffer = $stack4""];\n	""7"" [label=""goto""];\n	""8"" [label=""i = 0""];\n	""9"" [label=""i = i + 1""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""if i > 0""];\n	""12"" [label=""if i >= $stack6""];\n	""13"" [label=""if steps == null""];\n	""14"" [label=""return $stack5""];\n	""15"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""16"" [label=""steps = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.LocationPath: org.apache.commons.jxpath.ri.compiler.Step[] getSteps()>()""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47)""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7)""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_false""];\n	""10"" -> ""4""[label=""cfg_true""];\n	""11"" -> ""18""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_false""];\n	""12"" -> ""11""[label=""cfg_false""];\n	""12"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""8""[label=""cfg_false""];\n	""15"" -> ""6""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.LocationPath.compute(EvalContext),Method,No Comment,@Override\npublic Object compute(final EvalContext context) {\n    // Create a chain of contexts\n    EvalContext rootContext;\n    if (isAbsolute()) {\n        rootContext = context.getRootContext().getAbsoluteRootContext();\n    } else {\n        rootContext = new InitialContext(context);\n    }\n    return evalSteps(rootContext);\n},java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_compute {\n	""1"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.LocationPath: boolean isAbsolute()>()""];\n	""2"" [label=""$stack4 = new org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""3"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.LocationPath: org.apache.commons.jxpath.ri.EvalContext evalSteps(org.apache.commons.jxpath.ri.EvalContext)>(rootContext)""];\n	""4"" [label=""$stack6 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""return $stack5""];\n	""9"" [label=""rootContext = $stack4""];\n	""10"" [label=""rootContext = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.EvalContext getAbsoluteRootContext()>()""];\n	""11"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.axes.InitialContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.LocationPath.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    // Create a chain of contexts\n    EvalContext rootContext;\n    if (isAbsolute()) {\n        rootContext = context.getRootContext().getAbsoluteRootContext();\n    } else {\n        rootContext = new InitialContext(context);\n    }\n    return getSingleNodePointerForSteps(rootContext);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.LocationPath: boolean isAbsolute()>()""];\n	""2"" [label=""$stack4 = new org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""3"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.LocationPath: org.apache.commons.jxpath.Pointer getSingleNodePointerForSteps(org.apache.commons.jxpath.ri.EvalContext)>(rootContext)""];\n	""4"" [label=""$stack6 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""return $stack5""];\n	""9"" [label=""rootContext = $stack4""];\n	""10"" [label=""rootContext = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.EvalContext getAbsoluteRootContext()>()""];\n	""11"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.axes.InitialContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.LocationPath.<init>(boolean,Step[])",Constructor,* Create a new LocationPath.\n     * @param absolute whether this is an absolute path\n     * @param steps to evaluate,"public LocationPath(final boolean absolute, final Step[] steps) {\n    super(steps);\n    this.absolute = absolute;\n}","void <init>(boolean,org.apache.commons.jxpath.ri.compiler.Step[])","digraph cfg_init {\n	""1"" [label=""absolute := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: void <init>(org.apache.commons.jxpath.ri.compiler.Step[])>(steps)""];\n	""4"" [label=""steps := @parameter1: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.compiler.LocationPath: boolean absolute> = absolute""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan.evaluateCompare(int),Method,No Comment,@Override\nprotected boolean evaluateCompare(final int compare) {\n    return compare > 0;\n},boolean evaluateCompare(int),"digraph cfg_evaluateCompare {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = 1""];\n	""3"" [label=""compare := @parameter0: int""];\n	""4"" [label=""goto""];\n	""5"" [label=""if compare <= 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return "">"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \"">\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationGreaterThan.\n     * @param arg1 left operand\n     * @param arg2 right operand,"public CoreOperationGreaterThan(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    for (final Expression arg : args) {\n        if (!InfoSetUtil.booleanValue(arg.computeValue(context))) {\n            return Boolean.FALSE;\n        }\n    }\n    return Boolean.TRUE;\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""2"" [label=""$stack7 = virtualinvoke arg.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>($stack7)""];\n	""4"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""5"" [label=""arg = l2[l4]""];\n	""6"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack8 != 0""];\n	""9"" [label=""if l4 >= l3""];\n	""10"" [label=""l2 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationAnd: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""11"" [label=""l3 = lengthof l2""];\n	""12"" [label=""l4 = 0""];\n	""13"" [label=""l4 = l4 + 1""];\n	""14"" [label=""return $stack6""];\n	""15"" [label=""return $stack9""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAnd""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return AND_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAnd""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return true;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAnd""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""and"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""and\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAnd""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationAnd.<init>(Expression[]),Constructor,* Create a new CoreOperationAnd.\n     * @param args to combine,public CoreOperationAnd(final Expression[] args) {\n    super(args);\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_init {\n	""1"" [label=""args := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAnd""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationEqual.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""="";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""=\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationEqual""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationEqual.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationEqual\n     * @param arg1 first comparison Expression\n     * @param arg2 second comparison Expression,"public CoreOperationEqual(final Expression arg1, final Expression arg2) {\n    super(arg1, arg2);\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""2"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>(arg1, arg2)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationEqual""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NameAttributeTest.getNameTestExpression(),Method,* Gets the name test expression.\n     * @return Expression,public Expression getNameTestExpression() {\n    return args[1];\n},org.apache.commons.jxpath.ri.compiler.Expression getNameTestExpression(),"digraph cfg_getNameTestExpression {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.NameAttributeTest: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack2 = $stack1[1]""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NameAttributeTest.computeContextDependent(),Method,No Comment,@Override\npublic boolean computeContextDependent() {\n    return true;\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.NameAttributeTest.<init>(Expression,Expression)",Constructor,* Create a new NameAttributeTest.\n     * @param namePath Expression\n     * @param nameValue Expression,"public NameAttributeTest(final Expression namePath, final Expression nameValue) {\n    super(namePath, nameValue);\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""namePath := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""2"" [label=""nameValue := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationEqual: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>(namePath, nameValue)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Operation.getArguments(),Method,* Gets the arguments.\n     * @return Expression[],public Expression[] getArguments() {\n    return args;\n},org.apache.commons.jxpath.ri.compiler.Expression[] getArguments(),"digraph cfg_getArguments {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Operation: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Operation""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Operation.computeContextDependent(),Method,No Comment,@Override\npublic boolean computeContextDependent() {\n    if (args != null) {\n        for (final Expression arg : args) {\n            if (arg.isContextDependent()) {\n                return true;\n            }\n        }\n    }\n    return false;\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.Operation: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack6 = virtualinvoke arg.<org.apache.commons.jxpath.ri.compiler.Expression: boolean isContextDependent()>()""];\n	""3"" [label=""arg = l1[l3]""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack5 == null""];\n	""6"" [label=""if $stack6 == 0""];\n	""7"" [label=""if l3 >= l2""];\n	""8"" [label=""l1 = this.<org.apache.commons.jxpath.ri.compiler.Operation: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""l2 = lengthof l1""];\n	""10"" [label=""l3 = 0""];\n	""11"" [label=""l3 = l3 + 1""];\n	""12"" [label=""return 0""];\n	""13"" [label=""return 1""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Operation""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""12""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_true""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Operation.<init>(Expression[]),Constructor,* Create a new Operation.\n     * @param args Expression[],public Operation(final Expression[] args) {\n    this.args = args;\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_init {\n	""1"" [label=""args := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Operation""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Operation: org.apache.commons.jxpath.ri.compiler.Expression[] args> = args""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual.evaluateCompare(int),Method,No Comment,@Override\nprotected boolean evaluateCompare(final int compare) {\n    return compare >= 0;\n},boolean evaluateCompare(int),"digraph cfg_evaluateCompare {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = 1""];\n	""3"" [label=""compare := @parameter0: int""];\n	""4"" [label=""goto""];\n	""5"" [label=""if compare < 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return "">="";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \"">=\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationGreaterThanOrEqual.\n     * @param arg1 operand 1\n     * @param arg2 operand 2,"public CoreOperationGreaterThanOrEqual(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationMod.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    final long l = (long) InfoSetUtil.doubleValue(args[0].computeValue(context));\n    final long r = (long) InfoSetUtil.doubleValue(args[1].computeValue(context));\n    return Double.valueOf(l % r);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationMod: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack11 = $stack10[1]""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack12)""];\n	""5"" [label=""$stack14 = l % r""];\n	""6"" [label=""$stack15 = (double) $stack14""];\n	""7"" [label=""$stack16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack15)""];\n	""8"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationMod: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""$stack7 = $stack6[0]""];\n	""10"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""11"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack8)""];\n	""12"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""13"" [label=""l = (long) $stack9""];\n	""14"" [label=""r = (long) $stack13""];\n	""15"" [label=""return $stack16""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMod""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationMod.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return MULTIPLY_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 5""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMod""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationMod.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return false;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMod""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationMod.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""mod"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""mod\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMod""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationMod.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationMod.\n     * @param arg1 dividend\n     * @param arg2 divisor,"public CoreOperationMod(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMod""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Constant.compute(EvalContext),Method,No Comment,@Override\npublic Object compute(final EvalContext context) {\n    return value;\n},java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_compute {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.Constant: java.lang.Object value>""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Constant""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Constant.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    return value;\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.Constant: java.lang.Object value>""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Constant""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Constant.isContextDependent(),Method,* Returns false\n     * @return false,@Override\npublic boolean isContextDependent() {\n    return false;\n},boolean isContextDependent(),"digraph cfg_isContextDependent {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Constant""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Constant.computeContextDependent(),Method,* Returns false\n     * @return false,@Override\npublic boolean computeContextDependent() {\n    return false;\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Constant""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Constant.toString(),Method,No Comment,"@Override\npublic String toString() {\n    if (value instanceof Number) {\n        return InfoSetUtil.stringValue(value);\n    }\n    return ""'"" + value + ""'"";\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Constant: java.lang.Object value>""];\n	""2"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack9)""];\n	""3"" [label=""$stack2 = $stack1 instanceof java.lang.Number""];\n	""4"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.compiler.Constant: java.lang.Object value>""];\n	""6"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""7"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack4)""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""9"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.compiler.Constant: java.lang.Object value>""];\n	""11"" [label=""if $stack2 == 0""];\n	""12"" [label=""return $stack10""];\n	""13"" [label=""return $stack8""];\n	""14"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Constant""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_false""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Constant.<init>(Number),Constructor,* Create a new Constant.\n     * @param number constant,public Constant(final Number number) {\n    this.value = number;\n},void <init>(java.lang.Number),"digraph cfg_init {\n	""1"" [label=""number := @parameter0: java.lang.Number""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Constant""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Constant: java.lang.Object value> = number""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Constant.<init>(String),Constructor,* Create a new Constant.\n     * @param string constant,public Constant(final String string) {\n    this.value = string;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: void <init>()>()""];\n	""3"" [label=""string := @parameter0: java.lang.String""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Constant""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Constant: java.lang.Object value> = string""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression.isContextDependent(),Method,* Returns true if this expression should be re-evaluated\n     * each time the current position in the context changes.\n     * @return boolean,public synchronized boolean isContextDependent() {\n    if (!contextDependencyKnown) {\n        contextDependent = computeContextDependent();\n        contextDependencyKnown = true;\n    }\n    return contextDependent;\n},boolean isContextDependent(),"digraph cfg_isContextDependent {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Expression: boolean contextDependencyKnown>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.Expression: boolean contextDependent>""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: boolean computeContextDependent()>()""];\n	""4"" [label=""if $stack1 != 0""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Expression: boolean contextDependencyKnown> = 1""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Expression: boolean contextDependent> = $stack3""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.compiler.Expression.computeContextDependent(),Abstract Method,* Implemented by subclasses and result is cached by isContextDependent()\n     * @return calculated context-dependentness as boolean,public abstract boolean computeContextDependent();,boolean computeContextDependent(),digraph cfg_computeContextDependent {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.compiler.Expression.computeValue(EvalContext),Abstract Method,"* Evaluates the expression. If the result is a node set, returns\n     * the first element of the node set.\n     * @param context evaluation context\n     * @return Object",public abstract Object computeValue(EvalContext context);,java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),digraph cfg_computeValue {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.compiler.Expression.compute(EvalContext),Abstract Method,"* Evaluates the expression. If the result is a node set, returns\n     * the first element of the node set.\n     * @param context evaluation context\n     * @return Object",public abstract Object compute(EvalContext context);,java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),digraph cfg_compute {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.compiler.Expression.iterate(EvalContext),Method,* Iterate over the values from the specified context.\n     * @param context evaluation context\n     * @return value Iterator,public Iterator iterate(final EvalContext context) {\n    final Object result = compute(context);\n    if (result instanceof EvalContext) {\n        return new ValueIterator((EvalContext) result);\n    }\n    if (result instanceof NodeSet) {\n        return new ValueIterator(((NodeSet) result).getPointers().iterator());\n    }\n    return ValueUtils.iterate(result);\n},java.util.Iterator iterate(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_iterate {\n	""1"" [label=""$stack10 = (org.apache.commons.jxpath.ri.EvalContext) result""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator""];\n	""3"" [label=""$stack3 = result instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""4"" [label=""$stack4 = result instanceof org.apache.commons.jxpath.NodeSet""];\n	""5"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.util.Iterator iterate(java.lang.Object)>(result)""];\n	""6"" [label=""$stack6 = (org.apache.commons.jxpath.NodeSet) result""];\n	""7"" [label=""$stack7 = interfaceinvoke $stack6.<org.apache.commons.jxpath.NodeSet: java.util.List getPointers()>()""];\n	""8"" [label=""$stack8 = interfaceinvoke $stack7.<java.util.List: java.util.Iterator iterator()>()""];\n	""9"" [label=""$stack9 = new org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""11"" [label=""if $stack3 == 0""];\n	""12"" [label=""if $stack4 == 0""];\n	""13"" [label=""result = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""14"" [label=""return $stack11""];\n	""15"" [label=""return $stack5""];\n	""16"" [label=""return $stack9""];\n	""17"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator: void <init>(java.util.Iterator)>($stack10)""];\n	""18"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator: void <init>(java.util.Iterator)>($stack8)""];\n	""19"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_false""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression.iteratePointers(EvalContext),Method,* Iterate over the pointers from the specified context.\n     * @param context evaluation context\n     * @return pointer Iterator,"public Iterator iteratePointers(final EvalContext context) {\n    final Object result = compute(context);\n    if (result == null) {\n        return Collections.EMPTY_LIST.iterator();\n    }\n    if (result instanceof EvalContext) {\n        return (EvalContext) result;\n    }\n    if (result instanceof NodeSet) {\n        return new PointerIterator(((NodeSet) result).getPointers().iterator(), new QName(null, ""value""), context.getRootContext().getCurrentNodePointer().getLocale());\n    }\n    return new PointerIterator(ValueUtils.iterate(result), new QName(null, ""value""), context.getRootContext().getCurrentNodePointer().getLocale());\n}",java.util.Iterator iteratePointers(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_iteratePointers {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.NodeSet) result""];\n	""3"" [label=""$stack12 = interfaceinvoke $stack11.<org.apache.commons.jxpath.NodeSet: java.util.List getPointers()>()""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.ri.QName""];\n	""5"" [label=""$stack14 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale getLocale()>()""];\n	""8"" [label=""$stack17 = interfaceinvoke $stack12.<java.util.List: java.util.Iterator iterator()>()""];\n	""9"" [label=""$stack18 = new org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator""];\n	""10"" [label=""$stack19 = (org.apache.commons.jxpath.ri.EvalContext) result""];\n	""11"" [label=""$stack20 = <java.util.Collections: java.util.List EMPTY_LIST>""];\n	""12"" [label=""$stack21 = interfaceinvoke $stack20.<java.util.List: java.util.Iterator iterator()>()""];\n	""13"" [label=""$stack3 = result instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""14"" [label=""$stack4 = result instanceof org.apache.commons.jxpath.NodeSet""];\n	""15"" [label=""$stack5 = new org.apache.commons.jxpath.ri.QName""];\n	""16"" [label=""$stack6 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""17"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""18"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale getLocale()>()""];\n	""19"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.util.Iterator iterate(java.lang.Object)>(result)""];\n	""20"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""21"" [label=""if $stack3 == 0""];\n	""22"" [label=""if $stack4 == 0""];\n	""23"" [label=""if result != null""];\n	""24"" [label=""result = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""25"" [label=""return $stack10""];\n	""26"" [label=""return $stack18""];\n	""27"" [label=""return $stack19""];\n	""28"" [label=""return $stack21""];\n	""29"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: void <init>(java.util.Iterator,org.apache.commons.jxpath.ri.QName,java.util.Locale)>($stack9, $stack5, $stack8)""];\n	""30"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(null, \""value\"")""];\n	""31"" [label=""specialinvoke $stack18.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: void <init>(java.util.Iterator,org.apache.commons.jxpath.ri.QName,java.util.Locale)>($stack17, $stack13, $stack16)""];\n	""32"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(null, \""value\"")""];\n	""33"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""28""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""22""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_next""];\n	""19"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""24""[label=""cfg_next""];\n	""21"" -> ""10""[label=""cfg_false""];\n	""21"" -> ""14""[label=""cfg_true""];\n	""22"" -> ""1""[label=""cfg_true""];\n	""22"" -> ""9""[label=""cfg_false""];\n	""23"" -> ""11""[label=""cfg_false""];\n	""23"" -> ""13""[label=""cfg_true""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""29"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""30"" -> ""5""[label=""cfg_next""];\n	""31"" -> ""26""[label=""cfg_next""];\n	""32"" -> ""16""[label=""cfg_next""];\n	""33"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""30""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""31""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator.hasNext(),Method,No Comment,@Override\npublic boolean hasNext() {\n    return iterator.hasNext();\n},boolean hasNext(),"digraph cfg_hasNext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: java.util.Iterator iterator>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<java.util.Iterator: boolean hasNext()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator.next(),Method,No Comment,"@Override\npublic Object next() {\n    final Object o = iterator.next();\n    return o instanceof Pointer ? o : NodePointer.newNodePointer(qname, o, locale);\n}",java.lang.Object next(),"digraph cfg_next {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: java.util.Iterator iterator>""];\n	""2"" [label=""$stack3 = o instanceof org.apache.commons.jxpath.Pointer""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: java.util.Locale locale>""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: org.apache.commons.jxpath.ri.QName qname>""];\n	""5"" [label=""$stack6 = o""];\n	""6"" [label=""$stack6 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer newNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>($stack5, o, $stack4)""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack3 == 0""];\n	""9"" [label=""o = interfaceinvoke $stack2.<java.util.Iterator: java.lang.Object next()>()""];\n	""10"" [label=""return $stack6""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator.remove(),Method,* Unsupported.,@Override\npublic void remove() {\n    throw new UnsupportedOperationException();\n},void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack1 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator""];\n	""4"" [label=""throw $stack1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator.<init>(Iterator,QName,Locale)",Constructor,* Create a new PointerIterator\n         * @param it underlying Iterator\n         * @param qname name\n         * @param locale Locale\n         * @deprecated Use the method that takes a NamespaceManager,"@Deprecated\npublic PointerIterator(final Iterator it, final QName qname, final Locale locale) {\n    this.iterator = it;\n    this.qname = qname;\n    this.locale = locale;\n}","void <init>(java.util.Iterator,org.apache.commons.jxpath.ri.QName,java.util.Locale)","digraph cfg_init {\n	""1"" [label=""it := @parameter0: java.util.Iterator""];\n	""2"" [label=""locale := @parameter2: java.util.Locale""];\n	""3"" [label=""qname := @parameter1: org.apache.commons.jxpath.ri.QName""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: java.util.Iterator iterator> = it""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: java.util.Locale locale> = locale""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Expression$PointerIterator: org.apache.commons.jxpath.ri.QName qname> = qname""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator.hasNext(),Method,No Comment,@Override\npublic boolean hasNext() {\n    return iterator.hasNext();\n},boolean hasNext(),"digraph cfg_hasNext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator: java.util.Iterator iterator>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<java.util.Iterator: boolean hasNext()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator.next(),Method,No Comment,@Override\npublic Object next() {\n    final Object o = iterator.next();\n    return o instanceof Pointer ? ((Pointer) o).getValue() : o;\n},java.lang.Object next(),"digraph cfg_next {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator: java.util.Iterator iterator>""];\n	""2"" [label=""$stack3 = o instanceof org.apache.commons.jxpath.Pointer""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.Pointer) o""];\n	""4"" [label=""$stack5 = interfaceinvoke $stack4.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""5"" [label=""$stack5 = o""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""o = interfaceinvoke $stack2.<java.util.Iterator: java.lang.Object next()>()""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""5""[label=""cfg_true""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator.remove(),Method,* Unsupported.,@Override\npublic void remove() {\n    throw new UnsupportedOperationException();\n},void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack1 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator""];\n	""4"" [label=""throw $stack1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator.<init>(Iterator),Constructor,"* Create a new ValueIterator.\n         * @param it underlying Iterator, may contain pointers",public ValueIterator(final Iterator it) {\n    this.iterator = it;\n},void <init>(java.util.Iterator),"digraph cfg_init {\n	""1"" [label=""it := @parameter0: java.util.Iterator""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Expression$ValueIterator: java.util.Iterator iterator> = it""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual.evaluateCompare(int),Method,No Comment,@Override\nprotected boolean evaluateCompare(final int compare) {\n    return compare <= 0;\n},boolean evaluateCompare(int),"digraph cfg_evaluateCompare {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = 1""];\n	""3"" [label=""compare := @parameter0: int""];\n	""4"" [label=""goto""];\n	""5"" [label=""if compare > 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""<="";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""<=\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationLessThanOrEqual.\n     * @param arg1 left Expression\n     * @param arg2 right Expression,"public CoreOperationLessThanOrEqual(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    final double l = InfoSetUtil.doubleValue(args[0].computeValue(context));\n    final double r = InfoSetUtil.doubleValue(args[1].computeValue(context));\n    return Double.valueOf(l * r);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = $stack9[1]""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack12 = l * r""];\n	""4"" [label=""$stack13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack12)""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""6"" [label=""$stack7 = $stack6[0]""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""10"" [label=""l = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack8)""];\n	""11"" [label=""r = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack11)""];\n	""12"" [label=""return $stack13""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return MULTIPLY_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 5""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return true;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""*"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""*\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationMultiply.\n     * @param arg1 factor 1\n     * @param arg2 factor 2,"public CoreOperationMultiply(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan.evaluateCompare(int),Method,No Comment,@Override\nprotected boolean evaluateCompare(final int compare) {\n    return compare < 0;\n},boolean evaluateCompare(int),"digraph cfg_evaluateCompare {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = 1""];\n	""3"" [label=""compare := @parameter0: int""];\n	""4"" [label=""goto""];\n	""5"" [label=""if compare >= 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""<"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""<\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationLessThan.\n     * @param arg1 left Expression\n     * @param arg2 right Expression,"public CoreOperationLessThan(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.number(String),Method,No Comment,@Override\npublic Object number(final String value) {\n    return new Constant(Double.valueOf(value));\n},java.lang.Object number(java.lang.String),"digraph cfg_number {\n	""1"" [label=""$stack2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(value)""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.Constant""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.Constant: void <init>(java.lang.Number)>($stack2)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""6"" [label=""value := @parameter0: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.literal(String),Method,No Comment,@Override\npublic Object literal(final String value) {\n    return new Constant(value);\n},java.lang.Object literal(java.lang.String),"digraph cfg_literal {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.compiler.Constant""];\n	""2"" [label=""return $stack2""];\n	""3"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.compiler.Constant: void <init>(java.lang.String)>(value)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""5"" [label=""value := @parameter0: java.lang.String""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.qname(String,String)",Method,No Comment,"@Override\npublic Object qname(final String prefix, final String name) {\n    return new QName(prefix, name);\n}","java.lang.Object qname(java.lang.String,java.lang.String)","digraph cfg_qname {\n	""1"" [label=""$stack3 = new org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""name := @parameter1: java.lang.String""];\n	""3"" [label=""prefix := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(prefix, name)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.sum(Object[]),Method,No Comment,@Override\npublic Object sum(final Object[] arguments) {\n    return new CoreOperationAdd(toExpressionArray(arguments));\n},java.lang.Object sum(java.lang.Object[]),"digraph cfg_sum {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(arguments)""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.CoreOperationAdd""];\n	""3"" [label=""arguments := @parameter0: java.lang.Object[]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.CoreOperationAdd: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.minus(Object,Object)",Method,No Comment,"@Override\npublic Object minus(final Object left, final Object right) {\n    return new CoreOperationSubtract((Expression) left, (Expression) right);\n}","java.lang.Object minus(java.lang.Object,java.lang.Object)","digraph cfg_minus {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationSubtract: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.multiply(Object,Object)",Method,No Comment,"@Override\npublic Object multiply(final Object left, final Object right) {\n    return new CoreOperationMultiply((Expression) left, (Expression) right);\n}","java.lang.Object multiply(java.lang.Object,java.lang.Object)","digraph cfg_multiply {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationMultiply: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.divide(Object,Object)",Method,No Comment,"@Override\npublic Object divide(final Object left, final Object right) {\n    return new CoreOperationDivide((Expression) left, (Expression) right);\n}","java.lang.Object divide(java.lang.Object,java.lang.Object)","digraph cfg_divide {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationDivide""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationDivide: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.mod(Object,Object)",Method,No Comment,"@Override\npublic Object mod(final Object left, final Object right) {\n    return new CoreOperationMod((Expression) left, (Expression) right);\n}","java.lang.Object mod(java.lang.Object,java.lang.Object)","digraph cfg_mod {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationMod""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationMod: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.lessThan(Object,Object)",Method,No Comment,"@Override\npublic Object lessThan(final Object left, final Object right) {\n    return new CoreOperationLessThan((Expression) left, (Expression) right);\n}","java.lang.Object lessThan(java.lang.Object,java.lang.Object)","digraph cfg_lessThan {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.lessThanOrEqual(Object,Object)",Method,No Comment,"@Override\npublic Object lessThanOrEqual(final Object left, final Object right) {\n    return new CoreOperationLessThanOrEqual((Expression) left, (Expression) right);\n}","java.lang.Object lessThanOrEqual(java.lang.Object,java.lang.Object)","digraph cfg_lessThanOrEqual {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationLessThanOrEqual: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.greaterThan(Object,Object)",Method,No Comment,"@Override\npublic Object greaterThan(final Object left, final Object right) {\n    return new CoreOperationGreaterThan((Expression) left, (Expression) right);\n}","java.lang.Object greaterThan(java.lang.Object,java.lang.Object)","digraph cfg_greaterThan {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThan: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.greaterThanOrEqual(Object,Object)",Method,No Comment,"@Override\npublic Object greaterThanOrEqual(final Object left, final Object right) {\n    return new CoreOperationGreaterThanOrEqual((Expression) left, (Expression) right);\n}","java.lang.Object greaterThanOrEqual(java.lang.Object,java.lang.Object)","digraph cfg_greaterThanOrEqual {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.equal(Object,Object)",Method,No Comment,"@Override\npublic Object equal(final Object left, final Object right) {\n    return isNameAttributeTest((Expression) left) ? new NameAttributeTest((Expression) left, (Expression) right) : new CoreOperationEqual((Expression) left, (Expression) right);\n}","java.lang.Object equal(java.lang.Object,java.lang.Object)","digraph cfg_equal {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""2"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: boolean isNameAttributeTest(org.apache.commons.jxpath.ri.compiler.Expression)>($stack3)""];\n	""3"" [label=""$stack5 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""4"" [label=""$stack6 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""5"" [label=""$stack7 = new org.apache.commons.jxpath.ri.compiler.CoreOperationEqual""];\n	""6"" [label=""$stack7 = new org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""7"" [label=""$stack8 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""8"" [label=""$stack9 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack4 == 0""];\n	""11"" [label=""left := @parameter0: java.lang.Object""];\n	""12"" [label=""return $stack7""];\n	""13"" [label=""right := @parameter1: java.lang.Object""];\n	""14"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.CoreOperationEqual: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack6, $stack5)""];\n	""15"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.NameAttributeTest: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack9, $stack8)""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_true""];\n	""10"" -> ""6""[label=""cfg_false""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_goto""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.notEqual(Object,Object)",Method,No Comment,"@Override\npublic Object notEqual(final Object left, final Object right) {\n    return new CoreOperationNotEqual((Expression) left, (Expression) right);\n}","java.lang.Object notEqual(java.lang.Object,java.lang.Object)","digraph cfg_notEqual {\n	""1"" [label=""$stack3 = (org.apache.commons.jxpath.ri.compiler.Expression) right""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.Expression) left""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual""];\n	""4"" [label=""left := @parameter0: java.lang.Object""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""right := @parameter1: java.lang.Object""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.CoreOperationNotEqual: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.minus(Object),Method,No Comment,@Override\npublic Object minus(final Object argument) {\n    return new CoreOperationNegate((Expression) argument);\n},java.lang.Object minus(java.lang.Object),"digraph cfg_minus {\n	""1"" [label=""$stack2 = (org.apache.commons.jxpath.ri.compiler.Expression) argument""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.CoreOperationNegate""];\n	""3"" [label=""argument := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.CoreOperationNegate: void <init>(org.apache.commons.jxpath.ri.compiler.Expression)>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.variableReference(Object),Method,No Comment,@Override\npublic Object variableReference(final Object qName) {\n    return new VariableReference((QName) qName);\n},java.lang.Object variableReference(java.lang.Object),"digraph cfg_variableReference {\n	""1"" [label=""$stack2 = (org.apache.commons.jxpath.ri.QName) qName""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""3"" [label=""qName := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.VariableReference: void <init>(org.apache.commons.jxpath.ri.QName)>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.function(int,Object[])",Method,No Comment,"@Override\npublic Object function(final int code, final Object[] args) {\n    return new CoreFunction(code, toExpressionArray(args));\n}","java.lang.Object function(int,java.lang.Object[])","digraph cfg_function {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(args)""];\n	""2"" [label=""$stack4 = new org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""3"" [label=""args := @parameter1: java.lang.Object[]""];\n	""4"" [label=""code := @parameter0: int""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void <init>(int,org.apache.commons.jxpath.ri.compiler.Expression[])>(code, $stack3)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.function(Object,Object[])",Method,No Comment,"@Override\npublic Object function(final Object name, final Object[] args) {\n    return new ExtensionFunction((QName) name, toExpressionArray(args));\n}","java.lang.Object function(java.lang.Object,java.lang.Object[])","digraph cfg_function {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(args)""];\n	""2"" [label=""$stack4 = (org.apache.commons.jxpath.ri.QName) name""];\n	""3"" [label=""$stack5 = new org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""4"" [label=""args := @parameter1: java.lang.Object[]""];\n	""5"" [label=""name := @parameter0: java.lang.Object""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""specialinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: void <init>(org.apache.commons.jxpath.ri.QName,org.apache.commons.jxpath.ri.compiler.Expression[])>($stack4, $stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.and(Object[]),Method,No Comment,@Override\npublic Object and(final Object[] arguments) {\n    return new CoreOperationAnd(toExpressionArray(arguments));\n},java.lang.Object and(java.lang.Object[]),"digraph cfg_and {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(arguments)""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.CoreOperationAnd""];\n	""3"" [label=""arguments := @parameter0: java.lang.Object[]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.CoreOperationAnd: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.or(Object[]),Method,No Comment,@Override\npublic Object or(final Object[] arguments) {\n    return new CoreOperationOr(toExpressionArray(arguments));\n},java.lang.Object or(java.lang.Object[]),"digraph cfg_or {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(arguments)""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.CoreOperationOr""];\n	""3"" [label=""arguments := @parameter0: java.lang.Object[]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.CoreOperationOr: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.union(Object[]),Method,No Comment,@Override\npublic Object union(final Object[] arguments) {\n    return new CoreOperationUnion(toExpressionArray(arguments));\n},java.lang.Object union(java.lang.Object[]),"digraph cfg_union {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(arguments)""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.CoreOperationUnion""];\n	""3"" [label=""arguments := @parameter0: java.lang.Object[]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.CoreOperationUnion: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.locationPath(boolean,Object[])",Method,No Comment,"@Override\npublic Object locationPath(final boolean absolute, final Object[] steps) {\n    return new LocationPath(absolute, toStepArray(steps));\n}","java.lang.Object locationPath(boolean,java.lang.Object[])","digraph cfg_locationPath {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Step[] toStepArray(java.lang.Object[])>(steps)""];\n	""2"" [label=""$stack4 = new org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""3"" [label=""absolute := @parameter0: boolean""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.LocationPath: void <init>(boolean,org.apache.commons.jxpath.ri.compiler.Step[])>(absolute, $stack3)""];\n	""6"" [label=""steps := @parameter1: java.lang.Object[]""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.expressionPath(Object,Object[],Object[])",Method,No Comment,"@Override\npublic Object expressionPath(final Object expression, final Object[] predicates, final Object[] steps) {\n    return new ExpressionPath((Expression) expression, toExpressionArray(predicates), toStepArray(steps));\n}","java.lang.Object expressionPath(java.lang.Object,java.lang.Object[],java.lang.Object[])","digraph cfg_expressionPath {\n	""1"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Step[] toStepArray(java.lang.Object[])>(steps)""];\n	""2"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(predicates)""];\n	""3"" [label=""$stack6 = (org.apache.commons.jxpath.ri.compiler.Expression) expression""];\n	""4"" [label=""$stack7 = new org.apache.commons.jxpath.ri.compiler.ExpressionPath""];\n	""5"" [label=""expression := @parameter0: java.lang.Object""];\n	""6"" [label=""predicates := @parameter1: java.lang.Object[]""];\n	""7"" [label=""return $stack7""];\n	""8"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.ExpressionPath: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression[],org.apache.commons.jxpath.ri.compiler.Step[])>($stack6, $stack5, $stack4)""];\n	""9"" [label=""steps := @parameter2: java.lang.Object[]""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.nodeNameTest(Object),Method,No Comment,@Override\npublic Object nodeNameTest(final Object qname) {\n    return new NodeNameTest((QName) qname);\n},java.lang.Object nodeNameTest(java.lang.Object),"digraph cfg_nodeNameTest {\n	""1"" [label=""$stack2 = (org.apache.commons.jxpath.ri.QName) qname""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""3"" [label=""qname := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: void <init>(org.apache.commons.jxpath.ri.QName)>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.nodeTypeTest(int),Method,No Comment,@Override\npublic Object nodeTypeTest(final int nodeType) {\n    return new NodeTypeTest(nodeType);\n},java.lang.Object nodeTypeTest(int),"digraph cfg_nodeTypeTest {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""2"" [label=""nodeType := @parameter0: int""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: void <init>(int)>(nodeType)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.processingInstructionTest(String),Method,No Comment,@Override\npublic Object processingInstructionTest(final String instruction) {\n    return new ProcessingInstructionTest(instruction);\n},java.lang.Object processingInstructionTest(java.lang.String),"digraph cfg_processingInstructionTest {\n	""1"" [label=""$stack2 = new org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest""];\n	""2"" [label=""instruction := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest: void <init>(java.lang.String)>(instruction)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.TreeCompiler.step(int,Object,Object[])",Method,No Comment,"@Override\npublic Object step(final int axis, final Object nodeTest, final Object[] predicates) {\n    return new Step(axis, (NodeTest) nodeTest, toExpressionArray(predicates));\n}","java.lang.Object step(int,java.lang.Object,java.lang.Object[])","digraph cfg_step {\n	""1"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[])>(predicates)""];\n	""2"" [label=""$stack5 = (org.apache.commons.jxpath.ri.compiler.NodeTest) nodeTest""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.ri.compiler.Step""];\n	""4"" [label=""axis := @parameter0: int""];\n	""5"" [label=""nodeTest := @parameter1: java.lang.Object""];\n	""6"" [label=""predicates := @parameter2: java.lang.Object[]""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.Step: void <init>(int,org.apache.commons.jxpath.ri.compiler.NodeTest,org.apache.commons.jxpath.ri.compiler.Expression[])>(axis, $stack5, $stack4)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.toExpressionArray(Object[]),Method,* Gets an Object[] as an Expression[].\n     * @param array Object[]\n     * @return Expression[],private Expression[] toExpressionArray(final Object[] array) {\n    Expression[] expArray = null;\n    if (array != null) {\n        expArray = new Expression[array.length];\n        for (int i = 0; i < expArray.length; i++) {\n            expArray[i] = (Expression) array[i];\n        }\n    }\n    return expArray;\n},org.apache.commons.jxpath.ri.compiler.Expression[] toExpressionArray(java.lang.Object[]),"digraph cfg_toExpressionArray {\n	""1"" [label=""$stack4 = lengthof array""];\n	""2"" [label=""$stack5 = lengthof expArray""];\n	""3"" [label=""$stack6 = array[i]""];\n	""4"" [label=""$stack7 = (org.apache.commons.jxpath.ri.compiler.Expression) $stack6""];\n	""5"" [label=""array := @parameter0: java.lang.Object[]""];\n	""6"" [label=""expArray = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[$stack4]""];\n	""7"" [label=""expArray = null""];\n	""8"" [label=""expArray[i] = $stack7""];\n	""9"" [label=""goto""];\n	""10"" [label=""i = 0""];\n	""11"" [label=""i = i + 1""];\n	""12"" [label=""if array == null""];\n	""13"" [label=""if i >= $stack5""];\n	""14"" [label=""return expArray""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_false""];\n	""12"" -> ""14""[label=""cfg_true""];\n	""13"" -> ""14""[label=""cfg_true""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_goto""];\n}\n",private 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.toStepArray(Object[]),Method,* Gets an Object[] as a Step[].\n     * @param array Object[]\n     * @return Step[],private Step[] toStepArray(final Object[] array) {\n    Step[] stepArray = null;\n    if (array != null) {\n        stepArray = new Step[array.length];\n        for (int i = 0; i < stepArray.length; i++) {\n            stepArray[i] = (Step) array[i];\n        }\n    }\n    return stepArray;\n},org.apache.commons.jxpath.ri.compiler.Step[] toStepArray(java.lang.Object[]),"digraph cfg_toStepArray {\n	""1"" [label=""$stack4 = lengthof array""];\n	""2"" [label=""$stack5 = lengthof stepArray""];\n	""3"" [label=""$stack6 = array[i]""];\n	""4"" [label=""$stack7 = (org.apache.commons.jxpath.ri.compiler.Step) $stack6""];\n	""5"" [label=""array := @parameter0: java.lang.Object[]""];\n	""6"" [label=""goto""];\n	""7"" [label=""i = 0""];\n	""8"" [label=""i = i + 1""];\n	""9"" [label=""if array == null""];\n	""10"" [label=""if i >= $stack5""];\n	""11"" [label=""return stepArray""];\n	""12"" [label=""stepArray = newarray (org.apache.commons.jxpath.ri.compiler.Step)[$stack4]""];\n	""13"" [label=""stepArray = null""];\n	""14"" [label=""stepArray[i] = $stack7""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_false""];\n	""9"" -> ""11""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.compiler.TreeCompiler.isNameAttributeTest(Expression),Method,* Learn whether arg is a name attribute test.\n     * @param arg Expression to test\n     * @return boolean,private boolean isNameAttributeTest(final Expression arg) {\n    if (!(arg instanceof LocationPath)) {\n        return false;\n    }\n    final Step[] steps = ((LocationPath) arg).getSteps();\n    if (steps.length != 1) {\n        return false;\n    }\n    if (steps[0].getAxis() != AXIS_ATTRIBUTE) {\n        return false;\n    }\n    final NodeTest test = steps[0].getNodeTest();\n    if (!(test instanceof NodeNameTest)) {\n        return false;\n    }\n    if (!((NodeNameTest) test).getNodeName().equals(QNAME_NAME)) {\n        return false;\n    }\n    return true;\n},boolean isNameAttributeTest(org.apache.commons.jxpath.ri.compiler.Expression),"digraph cfg_isNameAttributeTest {\n	""1"" [label=""$stack10 = test instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) test""];\n	""3"" [label=""$stack12 = <org.apache.commons.jxpath.ri.compiler.TreeCompiler: org.apache.commons.jxpath.ri.QName QNAME_NAME>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.QName: boolean equals(java.lang.Object)>($stack12)""];\n	""6"" [label=""$stack4 = arg instanceof org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""7"" [label=""$stack5 = (org.apache.commons.jxpath.ri.compiler.LocationPath) arg""];\n	""8"" [label=""$stack6 = lengthof steps""];\n	""9"" [label=""$stack7 = steps[0]""];\n	""10"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""11"" [label=""$stack9 = steps[0]""];\n	""12"" [label=""arg := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""13"" [label=""if $stack10 != 0""];\n	""14"" [label=""if $stack14 != 0""];\n	""15"" [label=""if $stack4 != 0""];\n	""16"" [label=""if $stack6 == 1""];\n	""17"" [label=""if $stack8 == 5""];\n	""18"" [label=""return 0""];\n	""19"" [label=""return 0""];\n	""20"" [label=""return 0""];\n	""21"" [label=""return 0""];\n	""22"" [label=""return 0""];\n	""23"" [label=""return 1""];\n	""24"" [label=""steps = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.LocationPath: org.apache.commons.jxpath.ri.compiler.Step[] getSteps()>()""];\n	""25"" [label=""test = virtualinvoke $stack9.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.TreeCompiler""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""21""[label=""cfg_false""];\n	""14"" -> ""22""[label=""cfg_false""];\n	""14"" -> ""23""[label=""cfg_true""];\n	""15"" -> ""18""[label=""cfg_false""];\n	""15"" -> ""7""[label=""cfg_true""];\n	""16"" -> ""19""[label=""cfg_false""];\n	""16"" -> ""9""[label=""cfg_true""];\n	""17"" -> ""11""[label=""cfg_true""];\n	""17"" -> ""20""[label=""cfg_false""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""24"" -> ""8""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_next""];\n	""26"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""24""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.compiler.Step.getAxis(),Method,* Gets the axis code.\n     * @return int,public int getAxis() {\n    return axis;\n},int getAxis(),"digraph cfg_getAxis {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Step: int axis>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Step""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Step.getNodeTest(),Method,* Gets the step test.\n     * @return NodeTest,public NodeTest getNodeTest() {\n    return nodeTest;\n},org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest(),"digraph cfg_getNodeTest {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Step""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Step.getPredicates(),Method,* Gets the predicates.\n     * @return Expression[],public Expression[] getPredicates() {\n    return predicates;\n},org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates(),"digraph cfg_getPredicates {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Step""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Step.isContextDependent(),Method,* Learn whether this step contains any predicate that is context dependent.\n     * @return boolean,public boolean isContextDependent() {\n    if (predicates != null) {\n        for (final Expression predicate : predicates) {\n            if (predicate.isContextDependent()) {\n                return true;\n            }\n        }\n    }\n    return false;\n},boolean isContextDependent(),"digraph cfg_isContextDependent {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""2"" [label=""$stack6 = virtualinvoke predicate.<org.apache.commons.jxpath.ri.compiler.Expression: boolean isContextDependent()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack5 == null""];\n	""5"" [label=""if $stack6 == 0""];\n	""6"" [label=""if l3 >= l2""];\n	""7"" [label=""l1 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""8"" [label=""l2 = lengthof l1""];\n	""9"" [label=""l3 = 0""];\n	""10"" [label=""l3 = l3 + 1""];\n	""11"" [label=""predicate = l1[l3]""];\n	""12"" [label=""return 0""];\n	""13"" [label=""return 1""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Step""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""12""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_false""];\n	""6"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Step.toString(),Method,No Comment,"@Override\npublic String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    final int axis = getAxis();\n    if (axis == Compiler.AXIS_CHILD) {\n        buffer.append(nodeTest);\n    } else if (axis == Compiler.AXIS_ATTRIBUTE) {\n        buffer.append('@');\n        buffer.append(nodeTest);\n    } else if (axis == Compiler.AXIS_SELF && nodeTest instanceof NodeTypeTest && ((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE) {\n        buffer.append(""."");\n    } else if (axis == Compiler.AXIS_PARENT && nodeTest instanceof NodeTypeTest && ((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE) {\n        buffer.append("".."");\n    } else if (axis == Compiler.AXIS_DESCENDANT_OR_SELF && nodeTest instanceof NodeTypeTest && ((NodeTypeTest) nodeTest).getNodeType() == Compiler.NODE_TYPE_NODE && (predicates == null || predicates.length == 0)) {\n        buffer.append("""");\n    } else {\n        buffer.append(axisToString(axis));\n        buffer.append(""::"");\n        buffer.append(nodeTest);\n    }\n    final Expression[] predicates = getPredicates();\n    if (predicates != null) {\n        for (final Expression predicate : predicates) {\n            buffer.append('[');\n            buffer.append(predicate);\n            buffer.append(']');\n        }\n    }\n    return buffer.toString();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""2"" [label=""$stack11 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""4"" [label=""$stack13 = $stack12 instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""6"" [label=""$stack15 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) $stack14""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""9"" [label=""$stack18 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] predicates>""];\n	""10"" [label=""$stack19 = lengthof $stack18""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""12"" [label=""$stack21 = $stack20 instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""14"" [label=""$stack23 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) $stack22""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""16"" [label=""$stack25 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""17"" [label=""$stack26 = $stack25 instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""18"" [label=""$stack27 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""19"" [label=""$stack28 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) $stack27""];\n	""20"" [label=""$stack29 = virtualinvoke $stack28.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""21"" [label=""$stack30 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""22"" [label=""$stack31 = this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest>""];\n	""23"" [label=""$stack8 = new java.lang.StringBuilder""];\n	""24"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.compiler.Step: java.lang.String axisToString(int)>(axis)""];\n	""25"" [label=""axis = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""26"" [label=""buffer = $stack8""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""if $stack13 == 0""];\n	""34"" [label=""if $stack16 != 1""];\n	""35"" [label=""if $stack17 == null""];\n	""36"" [label=""if $stack19 != 0""];\n	""37"" [label=""if $stack21 == 0""];\n	""38"" [label=""if $stack24 != 1""];\n	""39"" [label=""if $stack26 == 0""];\n	""40"" [label=""if $stack29 != 1""];\n	""41"" [label=""if axis != 1""];\n	""42"" [label=""if axis != 13""];\n	""43"" [label=""if axis != 2""];\n	""44"" [label=""if axis != 3""];\n	""45"" [label=""if axis != 5""];\n	""46"" [label=""if l6 >= l5""];\n	""47"" [label=""if predicates == null""];\n	""48"" [label=""l4 = predicates""];\n	""49"" [label=""l5 = lengthof l4""];\n	""50"" [label=""l6 = 0""];\n	""51"" [label=""l6 = l6 + 1""];\n	""52"" [label=""predicate = l4[l6]""];\n	""53"" [label=""predicates = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""54"" [label=""return $stack11""];\n	""55"" [label=""specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>()""];\n	""56"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Step""];\n	""57"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64)""];\n	""58"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""59"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""60"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10)""];\n	""61"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30)""];\n	""62"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack31)""];\n	""63"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(predicate)""];\n	""64"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\"")""];\n	""65"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"".\"")""];\n	""66"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""..\"")""];\n	""67"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""::\"")""];\n	""68"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""1"" -> ""60""[label=""cfg_next""];\n	""10"" -> ""36""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""37""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""38""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""39""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""54""[label=""cfg_next""];\n	""20"" -> ""40""[label=""cfg_next""];\n	""21"" -> ""61""[label=""cfg_next""];\n	""22"" -> ""62""[label=""cfg_next""];\n	""23"" -> ""55""[label=""cfg_next""];\n	""24"" -> ""68""[label=""cfg_next""];\n	""25"" -> ""43""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""53""[label=""cfg_goto""];\n	""28"" -> ""53""[label=""cfg_goto""];\n	""29"" -> ""53""[label=""cfg_goto""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""53""[label=""cfg_goto""];\n	""31"" -> ""53""[label=""cfg_goto""];\n	""32"" -> ""46""[label=""cfg_goto""];\n	""33"" -> ""24""[label=""cfg_true""];\n	""33"" -> ""5""[label=""cfg_false""];\n	""34"" -> ""24""[label=""cfg_true""];\n	""34"" -> ""8""[label=""cfg_false""];\n	""35"" -> ""64""[label=""cfg_true""];\n	""35"" -> ""9""[label=""cfg_false""];\n	""36"" -> ""24""[label=""cfg_true""];\n	""36"" -> ""64""[label=""cfg_false""];\n	""37"" -> ""13""[label=""cfg_false""];\n	""37"" -> ""42""[label=""cfg_true""];\n	""38"" -> ""42""[label=""cfg_true""];\n	""38"" -> ""66""[label=""cfg_false""];\n	""39"" -> ""18""[label=""cfg_false""];\n	""39"" -> ""44""[label=""cfg_true""];\n	""4"" -> ""33""[label=""cfg_next""];\n	""40"" -> ""44""[label=""cfg_true""];\n	""40"" -> ""65""[label=""cfg_false""];\n	""41"" -> ""16""[label=""cfg_false""];\n	""41"" -> ""44""[label=""cfg_true""];\n	""42"" -> ""24""[label=""cfg_true""];\n	""42"" -> ""3""[label=""cfg_false""];\n	""43"" -> ""22""[label=""cfg_false""];\n	""43"" -> ""45""[label=""cfg_true""];\n	""44"" -> ""11""[label=""cfg_false""];\n	""44"" -> ""42""[label=""cfg_true""];\n	""45"" -> ""41""[label=""cfg_true""];\n	""45"" -> ""57""[label=""cfg_false""];\n	""46"" -> ""2""[label=""cfg_true""];\n	""46"" -> ""52""[label=""cfg_false""];\n	""47"" -> ""2""[label=""cfg_true""];\n	""47"" -> ""48""[label=""cfg_false""];\n	""48"" -> ""49""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""46""[label=""cfg_next""];\n	""51"" -> ""32""[label=""cfg_next""];\n	""52"" -> ""58""[label=""cfg_next""];\n	""53"" -> ""47""[label=""cfg_next""];\n	""55"" -> ""26""[label=""cfg_next""];\n	""56"" -> ""23""[label=""cfg_next""];\n	""57"" -> ""21""[label=""cfg_next""];\n	""58"" -> ""63""[label=""cfg_next""];\n	""59"" -> ""51""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""53""[label=""cfg_next""];\n	""61"" -> ""28""[label=""cfg_next""];\n	""62"" -> ""27""[label=""cfg_next""];\n	""63"" -> ""59""[label=""cfg_next""];\n	""64"" -> ""31""[label=""cfg_next""];\n	""65"" -> ""29""[label=""cfg_next""];\n	""66"" -> ""30""[label=""cfg_next""];\n	""67"" -> ""1""[label=""cfg_next""];\n	""68"" -> ""67""[label=""cfg_next""];\n	""7"" -> ""34""[label=""cfg_next""];\n	""8"" -> ""35""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Step.axisToString(int),Method,"* Decode an axis code to its name.\n     * @param axis int code\n     * @return String name.\n     * @see Compiler\n     * @see ""http://www.w3.org/TR/xpath#axes""","public static String axisToString(final int axis) {\n    switch(axis) {\n        case Compiler.AXIS_SELF:\n            return ""self"";\n        case Compiler.AXIS_CHILD:\n            return ""child"";\n        case Compiler.AXIS_PARENT:\n            return ""parent"";\n        case Compiler.AXIS_ANCESTOR:\n            return ""ancestor"";\n        case Compiler.AXIS_ATTRIBUTE:\n            return ""attribute"";\n        case Compiler.AXIS_NAMESPACE:\n            return ""namespace"";\n        case Compiler.AXIS_PRECEDING:\n            return ""preceding"";\n        case Compiler.AXIS_FOLLOWING:\n            return ""following"";\n        case Compiler.AXIS_DESCENDANT:\n            return ""descendant"";\n        case Compiler.AXIS_ANCESTOR_OR_SELF:\n            return ""ancestor-or-self"";\n        case Compiler.AXIS_FOLLOWING_SIBLING:\n            return ""following-sibling"";\n        case Compiler.AXIS_PRECEDING_SIBLING:\n            return ""preceding-sibling"";\n        case Compiler.AXIS_DESCENDANT_OR_SELF:\n            return ""descendant-or-self"";\n        default:\n            return ""UNKNOWN"";\n    }\n}",java.lang.String axisToString(int),"digraph cfg_axisToString {\n	""1"" [label=""axis := @parameter0: int""];\n	""2"" [label=""return \""UNKNOWN\""""];\n	""3"" [label=""return \""ancestor\""""];\n	""4"" [label=""return \""ancestor-or-self\""""];\n	""5"" [label=""return \""attribute\""""];\n	""6"" [label=""return \""child\""""];\n	""7"" [label=""return \""descendant\""""];\n	""8"" [label=""return \""descendant-or-self\""""];\n	""9"" [label=""return \""following\""""];\n	""10"" [label=""return \""following-sibling\""""];\n	""11"" [label=""return \""namespace\""""];\n	""12"" [label=""return \""parent\""""];\n	""13"" [label=""return \""preceding\""""];\n	""14"" [label=""return \""preceding-sibling\""""];\n	""15"" [label=""return \""self\""""];\n	""16"" [label=""switch(axis) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     default:  \}""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_switch""];\n	""16"" -> ""11""[label=""cfg_switch""];\n	""16"" -> ""12""[label=""cfg_switch""];\n	""16"" -> ""13""[label=""cfg_switch""];\n	""16"" -> ""14""[label=""cfg_switch""];\n	""16"" -> ""15""[label=""cfg_switch""];\n	""16"" -> ""2""[label=""cfg_switch""];\n	""16"" -> ""3""[label=""cfg_switch""];\n	""16"" -> ""4""[label=""cfg_switch""];\n	""16"" -> ""5""[label=""cfg_switch""];\n	""16"" -> ""6""[label=""cfg_switch""];\n	""16"" -> ""7""[label=""cfg_switch""];\n	""16"" -> ""8""[label=""cfg_switch""];\n	""16"" -> ""9""[label=""cfg_switch""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.compiler.Step.<init>(int,NodeTest,Expression[])",Constructor,* Create a new Step.\n     * @param axis axis code\n     * @param nodeTest step test\n     * @param predicates predicate expressions,"protected Step(final int axis, final NodeTest nodeTest, final Expression[] predicates) {\n    this.axis = axis;\n    this.nodeTest = nodeTest;\n    this.predicates = predicates;\n}","void <init>(int,org.apache.commons.jxpath.ri.compiler.NodeTest,org.apache.commons.jxpath.ri.compiler.Expression[])","digraph cfg_init {\n	""1"" [label=""axis := @parameter0: int""];\n	""2"" [label=""nodeTest := @parameter1: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""3"" [label=""predicates := @parameter2: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Step""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Step: int axis> = axis""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] predicates> = predicates""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest nodeTest> = nodeTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.computeValue(EvalContext),Method,No Comment,"@Override\npublic Object computeValue(final EvalContext context) {\n    final EvalContext[] argCtxs = new EvalContext[args.length];\n    for (int i = 0; i < args.length; i++) {\n        final Object value = args[i].compute(context);\n        if (value instanceof EvalContext) {\n            argCtxs[i] = (EvalContext) value;\n        } else {\n            argCtxs[i] = context.getRootContext().getConstantContext(value);\n        }\n    }\n    return new UnionContext(context.getRootContext(), argCtxs);\n}",java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.axes.UnionContext""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationUnion: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""3"" [label=""$stack12 = $stack11[i]""];\n	""4"" [label=""$stack13 = value instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""5"" [label=""$stack14 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.EvalContext getConstantContext(java.lang.Object)>(value)""];\n	""7"" [label=""$stack16 = (org.apache.commons.jxpath.ri.EvalContext) value""];\n	""8"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationUnion: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""$stack6 = lengthof $stack5""];\n	""10"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationUnion: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""11"" [label=""$stack8 = lengthof $stack7""];\n	""12"" [label=""$stack9 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""13"" [label=""argCtxs = newarray (org.apache.commons.jxpath.ri.EvalContext)[$stack6]""];\n	""14"" [label=""argCtxs[i] = $stack15""];\n	""15"" [label=""argCtxs[i] = $stack16""];\n	""16"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""i = 0""];\n	""20"" [label=""i = i + 1""];\n	""21"" [label=""if $stack13 == 0""];\n	""22"" [label=""if i >= $stack8""];\n	""23"" [label=""return $stack10""];\n	""24"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.axes.UnionContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.EvalContext[])>($stack9, argCtxs)""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationUnion""];\n	""26"" [label=""value = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""22""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""8""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_goto""];\n	""18"" -> ""10""[label=""cfg_goto""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""5""[label=""cfg_true""];\n	""21"" -> ""7""[label=""cfg_false""];\n	""22"" -> ""1""[label=""cfg_true""];\n	""22"" -> ""2""[label=""cfg_false""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""16""[label=""cfg_next""];\n	""26"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return UNION_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 7""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationUnion""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return true;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationUnion""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""|"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""|\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationUnion""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationUnion.<init>(Expression[]),Constructor,* Create a new CoreOperationUnion.\n     * @param args Expression[],public CoreOperationUnion(final Expression[] args) {\n    super(args);\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_init {\n	""1"" [label=""args := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationUnion""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.computeValue(EvalContext),Method,No Comment,"@Override\npublic Object computeValue(final EvalContext context) {\n    return equal(context, args[0], args[1]) ? Boolean.TRUE : Boolean.FALSE;\n}",java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""3"" [label=""$stack4 = $stack3[1]""];\n	""4"" [label=""$stack5 = $stack2[0]""];\n	""5"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean equal(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)>(context, $stack5, $stack4)""];\n	""6"" [label=""$stack7 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""7"" [label=""$stack7 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack6 == 0""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return COMPARE_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 2""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return true;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.equal(EvalContext,Expression,Expression)",Method,* Compares two values.\n     * @param context evaluation context\n     * @param left operand\n     * @param right operand\n     * @return whether left = right in XPath terms,"protected boolean equal(final EvalContext context, final Expression left, final Expression right) {\n    Object l = left.compute(context);\n    Object r = right.compute(context);\n    if (l instanceof InitialContext) {\n        ((EvalContext) l).reset();\n    }\n    if (l instanceof SelfContext) {\n        l = ((EvalContext) l).getSingleNodePointer();\n    }\n    if (r instanceof InitialContext) {\n        ((EvalContext) r).reset();\n    }\n    if (r instanceof SelfContext) {\n        r = ((EvalContext) r).getSingleNodePointer();\n    }\n    if (l instanceof Collection) {\n        l = ((Collection) l).iterator();\n    }\n    if (r instanceof Collection) {\n        r = ((Collection) r).iterator();\n    }\n    if (l instanceof Iterator && r instanceof Iterator) {\n        return findMatch((Iterator) l, (Iterator) r);\n    }\n    if (l instanceof Iterator) {\n        return contains((Iterator) l, r);\n    }\n    if (r instanceof Iterator) {\n        return contains((Iterator) r, l);\n    }\n    return equal(l, r);\n}","boolean equal(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_equal {\n	""1"" [label=""$stack10 = l instanceof java.util.Collection""];\n	""2"" [label=""$stack11 = r instanceof java.util.Collection""];\n	""3"" [label=""$stack12 = l instanceof java.util.Iterator""];\n	""4"" [label=""$stack13 = l instanceof java.util.Iterator""];\n	""5"" [label=""$stack14 = r instanceof java.util.Iterator""];\n	""6"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean equal(java.lang.Object,java.lang.Object)>(l, r)""];\n	""7"" [label=""$stack16 = (java.util.Iterator) r""];\n	""8"" [label=""$stack17 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean contains(java.util.Iterator,java.lang.Object)>($stack16, l)""];\n	""9"" [label=""$stack18 = (java.util.Iterator) l""];\n	""10"" [label=""$stack19 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean contains(java.util.Iterator,java.lang.Object)>($stack18, r)""];\n	""11"" [label=""$stack20 = r instanceof java.util.Iterator""];\n	""12"" [label=""$stack21 = (java.util.Iterator) r""];\n	""13"" [label=""$stack22 = (java.util.Iterator) l""];\n	""14"" [label=""$stack23 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean findMatch(java.util.Iterator,java.util.Iterator)>($stack22, $stack21)""];\n	""15"" [label=""$stack24 = (java.util.Collection) r""];\n	""16"" [label=""$stack25 = (java.util.Collection) l""];\n	""17"" [label=""$stack26 = (org.apache.commons.jxpath.ri.EvalContext) r""];\n	""18"" [label=""$stack27 = (org.apache.commons.jxpath.ri.EvalContext) r""];\n	""19"" [label=""$stack28 = (org.apache.commons.jxpath.ri.EvalContext) l""];\n	""20"" [label=""$stack29 = (org.apache.commons.jxpath.ri.EvalContext) l""];\n	""21"" [label=""$stack6 = l instanceof org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""22"" [label=""$stack7 = l instanceof org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""23"" [label=""$stack8 = r instanceof org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""24"" [label=""$stack9 = r instanceof org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""25"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""26"" [label=""if $stack10 == 0""];\n	""27"" [label=""if $stack11 == 0""];\n	""28"" [label=""if $stack12 == 0""];\n	""29"" [label=""if $stack13 == 0""];\n	""30"" [label=""if $stack14 == 0""];\n	""31"" [label=""if $stack20 == 0""];\n	""32"" [label=""if $stack6 == 0""];\n	""33"" [label=""if $stack7 == 0""];\n	""34"" [label=""if $stack8 == 0""];\n	""35"" [label=""if $stack9 == 0""];\n	""36"" [label=""l = interfaceinvoke $stack25.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""37"" [label=""l = virtualinvoke $stack28.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""38"" [label=""l = virtualinvoke left.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""39"" [label=""left := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""40"" [label=""r = interfaceinvoke $stack24.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""41"" [label=""r = virtualinvoke $stack26.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""42"" [label=""r = virtualinvoke right.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""43"" [label=""return $stack15""];\n	""44"" [label=""return $stack17""];\n	""45"" [label=""return $stack19""];\n	""46"" [label=""return $stack23""];\n	""47"" [label=""right := @parameter2: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""48"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""49"" [label=""virtualinvoke $stack27.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""50"" [label=""virtualinvoke $stack29.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""45""[label=""cfg_next""];\n	""11"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""46""[label=""cfg_next""];\n	""15"" -> ""40""[label=""cfg_next""];\n	""16"" -> ""36""[label=""cfg_next""];\n	""17"" -> ""41""[label=""cfg_next""];\n	""18"" -> ""49""[label=""cfg_next""];\n	""19"" -> ""37""[label=""cfg_next""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""20"" -> ""50""[label=""cfg_next""];\n	""21"" -> ""32""[label=""cfg_next""];\n	""22"" -> ""33""[label=""cfg_next""];\n	""23"" -> ""34""[label=""cfg_next""];\n	""24"" -> ""35""[label=""cfg_next""];\n	""25"" -> ""39""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_false""];\n	""26"" -> ""2""[label=""cfg_true""];\n	""27"" -> ""15""[label=""cfg_false""];\n	""27"" -> ""3""[label=""cfg_true""];\n	""28"" -> ""11""[label=""cfg_false""];\n	""28"" -> ""4""[label=""cfg_true""];\n	""29"" -> ""5""[label=""cfg_true""];\n	""29"" -> ""9""[label=""cfg_false""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""6""[label=""cfg_true""];\n	""30"" -> ""7""[label=""cfg_false""];\n	""31"" -> ""13""[label=""cfg_false""];\n	""31"" -> ""4""[label=""cfg_true""];\n	""32"" -> ""20""[label=""cfg_false""];\n	""32"" -> ""22""[label=""cfg_true""];\n	""33"" -> ""19""[label=""cfg_false""];\n	""33"" -> ""23""[label=""cfg_true""];\n	""34"" -> ""18""[label=""cfg_false""];\n	""34"" -> ""24""[label=""cfg_true""];\n	""35"" -> ""1""[label=""cfg_true""];\n	""35"" -> ""17""[label=""cfg_false""];\n	""36"" -> ""2""[label=""cfg_next""];\n	""37"" -> ""23""[label=""cfg_next""];\n	""38"" -> ""42""[label=""cfg_next""];\n	""39"" -> ""47""[label=""cfg_next""];\n	""4"" -> ""29""[label=""cfg_next""];\n	""40"" -> ""3""[label=""cfg_next""];\n	""41"" -> ""1""[label=""cfg_next""];\n	""42"" -> ""21""[label=""cfg_next""];\n	""47"" -> ""38""[label=""cfg_next""];\n	""48"" -> ""25""[label=""cfg_next""];\n	""49"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""30""[label=""cfg_next""];\n	""50"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""43""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""44""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.contains(Iterator,Object)",Method,* Learn whether it contains value.\n     * @param it Iterator to check\n     * @param value for which to look\n     * @return whether value was found,"protected boolean contains(final Iterator it, final Object value) {\n    while (it.hasNext()) {\n        final Object element = it.next();\n        if (equal(element, value)) {\n            return true;\n        }\n    }\n    return false;\n}","boolean contains(java.util.Iterator,java.lang.Object)","digraph cfg_contains {\n	""1"" [label=""$stack4 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""2"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean equal(java.lang.Object,java.lang.Object)>(element, value)""];\n	""3"" [label=""element = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack4 == 0""];\n	""6"" [label=""if $stack5 == 0""];\n	""7"" [label=""it := @parameter0: java.util.Iterator""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""11"" [label=""value := @parameter1: java.lang.Object""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n	""7"" -> ""11""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.findMatch(Iterator,Iterator)",Method,* Learn whether lit intersects rit.\n     * @param lit left Iterator\n     * @param rit right Iterator\n     * @return boolean,"protected boolean findMatch(final Iterator lit, final Iterator rit) {\n    final HashSet left = new HashSet();\n    while (lit.hasNext()) {\n        left.add(lit.next());\n    }\n    while (rit.hasNext()) {\n        if (contains(left.iterator(), rit.next())) {\n            return true;\n        }\n    }\n    return false;\n}","boolean findMatch(java.util.Iterator,java.util.Iterator)","digraph cfg_findMatch {\n	""1"" [label=""$stack10 = interfaceinvoke lit.<java.util.Iterator: java.lang.Object next()>()""];\n	""2"" [label=""$stack4 = new java.util.HashSet""];\n	""3"" [label=""$stack5 = interfaceinvoke lit.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack6 = interfaceinvoke rit.<java.util.Iterator: boolean hasNext()>()""];\n	""5"" [label=""$stack7 = interfaceinvoke rit.<java.util.Iterator: java.lang.Object next()>()""];\n	""6"" [label=""$stack8 = virtualinvoke left.<java.util.HashSet: java.util.Iterator iterator()>()""];\n	""7"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean contains(java.util.Iterator,java.lang.Object)>($stack8, $stack7)""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack5 == 0""];\n	""10"" [label=""if $stack6 == 0""];\n	""11"" [label=""if $stack9 == 0""];\n	""12"" [label=""left = $stack4""];\n	""13"" [label=""lit := @parameter0: java.util.Iterator""];\n	""14"" [label=""return 0""];\n	""15"" [label=""return 1""];\n	""16"" [label=""rit := @parameter1: java.util.Iterator""];\n	""17"" [label=""specialinvoke $stack4.<java.util.HashSet: void <init>()>()""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""19"" [label=""virtualinvoke left.<java.util.HashSet: boolean add(java.lang.Object)>($stack10)""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_true""];\n	""10"" -> ""6""[label=""cfg_false""];\n	""11"" -> ""15""[label=""cfg_false""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_goto""];\n	""9"" -> ""1""[label=""cfg_false""];\n	""9"" -> ""4""[label=""cfg_true""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.equal(Object,Object)",Method,* Learn whether l equals r in XPath terms.\n     * @param l left operand\n     * @param r right operand\n     * @return whether l = r,"protected boolean equal(Object l, Object r) {\n    if (l instanceof Pointer) {\n        l = ((Pointer) l).getValue();\n    }\n    if (r instanceof Pointer) {\n        r = ((Pointer) r).getValue();\n    }\n    boolean result;\n    if (l instanceof Boolean || r instanceof Boolean) {\n        result = l == r || InfoSetUtil.booleanValue(l) == InfoSetUtil.booleanValue(r);\n    } else if (l instanceof Number || r instanceof Number) {\n        //if either side is NaN, no comparison returns true:\n        final double ld = InfoSetUtil.doubleValue(l);\n        if (Double.isNaN(ld)) {\n            return false;\n        }\n        final double rd = InfoSetUtil.doubleValue(r);\n        if (Double.isNaN(rd)) {\n            return false;\n        }\n        result = ld == rd;\n    } else {\n        if (l instanceof String || r instanceof String) {\n            l = InfoSetUtil.stringValue(l);\n            r = InfoSetUtil.stringValue(r);\n        }\n        result = l == r || l != null && l.equals(r);\n    }\n    return result ^ invert;\n}","boolean equal(java.lang.Object,java.lang.Object)","digraph cfg_equal {\n	""1"" [label=""$stack10 = l instanceof java.lang.Boolean""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean invert>""];\n	""3"" [label=""$stack12 = result ^ $stack11""];\n	""4"" [label=""$stack13 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>(r)""];\n	""5"" [label=""$stack14 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>(l)""];\n	""6"" [label=""$stack15 = r instanceof java.lang.Boolean""];\n	""7"" [label=""$stack16 = l instanceof java.lang.Number""];\n	""8"" [label=""$stack17 = staticinvoke <java.lang.Double: boolean isNaN(double)>(ld)""];\n	""9"" [label=""$stack18 = staticinvoke <java.lang.Double: boolean isNaN(double)>(rd)""];\n	""10"" [label=""$stack19 = ld cmpl rd""];\n	""11"" [label=""$stack20 = r instanceof java.lang.Number""];\n	""12"" [label=""$stack21 = l instanceof java.lang.String""];\n	""13"" [label=""$stack22 = virtualinvoke l.<java.lang.Object: boolean equals(java.lang.Object)>(r)""];\n	""14"" [label=""$stack23 = r instanceof java.lang.String""];\n	""15"" [label=""$stack24 = (org.apache.commons.jxpath.Pointer) r""];\n	""16"" [label=""$stack25 = (org.apache.commons.jxpath.Pointer) l""];\n	""17"" [label=""$stack8 = l instanceof org.apache.commons.jxpath.Pointer""];\n	""18"" [label=""$stack9 = r instanceof org.apache.commons.jxpath.Pointer""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""if $stack10 != 0""];\n	""25"" [label=""if $stack14 != $stack13""];\n	""26"" [label=""if $stack15 == 0""];\n	""27"" [label=""if $stack16 != 0""];\n	""28"" [label=""if $stack17 == 0""];\n	""29"" [label=""if $stack18 == 0""];\n	""30"" [label=""if $stack19 != 0""];\n	""31"" [label=""if $stack20 == 0""];\n	""32"" [label=""if $stack21 != 0""];\n	""33"" [label=""if $stack22 == 0""];\n	""34"" [label=""if $stack23 == 0""];\n	""35"" [label=""if $stack8 == 0""];\n	""36"" [label=""if $stack9 == 0""];\n	""37"" [label=""if l == null""];\n	""38"" [label=""if l == r""];\n	""39"" [label=""if l == r""];\n	""40"" [label=""l := @parameter0: java.lang.Object""];\n	""41"" [label=""l = interfaceinvoke $stack25.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""42"" [label=""l = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>(l)""];\n	""43"" [label=""ld = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(l)""];\n	""44"" [label=""r := @parameter1: java.lang.Object""];\n	""45"" [label=""r = interfaceinvoke $stack24.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""46"" [label=""r = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>(r)""];\n	""47"" [label=""rd = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(r)""];\n	""48"" [label=""result = 0""];\n	""49"" [label=""result = 0""];\n	""50"" [label=""result = 0""];\n	""51"" [label=""result = 1""];\n	""52"" [label=""result = 1""];\n	""53"" [label=""result = 1""];\n	""54"" [label=""return $stack12""];\n	""55"" [label=""return 0""];\n	""56"" [label=""return 0""];\n	""57"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""30""[label=""cfg_next""];\n	""11"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""32""[label=""cfg_next""];\n	""13"" -> ""33""[label=""cfg_next""];\n	""14"" -> ""34""[label=""cfg_next""];\n	""15"" -> ""45""[label=""cfg_next""];\n	""16"" -> ""41""[label=""cfg_next""];\n	""17"" -> ""35""[label=""cfg_next""];\n	""18"" -> ""36""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_goto""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_goto""];\n	""21"" -> ""22""[label=""cfg_goto""];\n	""22"" -> ""2""[label=""cfg_goto""];\n	""23"" -> ""2""[label=""cfg_goto""];\n	""24"" -> ""38""[label=""cfg_true""];\n	""24"" -> ""6""[label=""cfg_false""];\n	""25"" -> ""48""[label=""cfg_true""];\n	""25"" -> ""51""[label=""cfg_false""];\n	""26"" -> ""38""[label=""cfg_false""];\n	""26"" -> ""7""[label=""cfg_true""];\n	""27"" -> ""11""[label=""cfg_false""];\n	""27"" -> ""43""[label=""cfg_true""];\n	""28"" -> ""47""[label=""cfg_true""];\n	""28"" -> ""55""[label=""cfg_false""];\n	""29"" -> ""10""[label=""cfg_true""];\n	""29"" -> ""56""[label=""cfg_false""];\n	""3"" -> ""54""[label=""cfg_next""];\n	""30"" -> ""49""[label=""cfg_true""];\n	""30"" -> ""52""[label=""cfg_false""];\n	""31"" -> ""12""[label=""cfg_true""];\n	""31"" -> ""43""[label=""cfg_false""];\n	""32"" -> ""14""[label=""cfg_false""];\n	""32"" -> ""42""[label=""cfg_true""];\n	""33"" -> ""50""[label=""cfg_true""];\n	""33"" -> ""53""[label=""cfg_false""];\n	""34"" -> ""39""[label=""cfg_true""];\n	""34"" -> ""42""[label=""cfg_false""];\n	""35"" -> ""16""[label=""cfg_false""];\n	""35"" -> ""18""[label=""cfg_true""];\n	""36"" -> ""1""[label=""cfg_true""];\n	""36"" -> ""15""[label=""cfg_false""];\n	""37"" -> ""13""[label=""cfg_false""];\n	""37"" -> ""50""[label=""cfg_true""];\n	""38"" -> ""5""[label=""cfg_false""];\n	""38"" -> ""51""[label=""cfg_true""];\n	""39"" -> ""37""[label=""cfg_false""];\n	""39"" -> ""53""[label=""cfg_true""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""40"" -> ""44""[label=""cfg_next""];\n	""41"" -> ""18""[label=""cfg_next""];\n	""42"" -> ""46""[label=""cfg_next""];\n	""43"" -> ""8""[label=""cfg_next""];\n	""44"" -> ""17""[label=""cfg_next""];\n	""45"" -> ""1""[label=""cfg_next""];\n	""46"" -> ""39""[label=""cfg_next""];\n	""47"" -> ""9""[label=""cfg_next""];\n	""48"" -> ""20""[label=""cfg_next""];\n	""49"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""50"" -> ""2""[label=""cfg_next""];\n	""51"" -> ""19""[label=""cfg_next""];\n	""52"" -> ""21""[label=""cfg_next""];\n	""53"" -> ""23""[label=""cfg_next""];\n	""57"" -> ""40""[label=""cfg_next""];\n	""6"" -> ""26""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_next""];\n	""8"" -> ""28""[label=""cfg_next""];\n	""9"" -> ""29""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationCompare.\n     * @param arg1 left operand\n     * @param arg2 right operand,"public CoreOperationCompare(final Expression arg1, final Expression arg2) {\n    this(arg1, arg2, false);\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""2"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression,boolean)>(arg1, arg2, 0)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationCompare.<init>(Expression,Expression,boolean)",Constructor,* Create a new CoreOperationCompare.\n     * @param arg1 left operand\n     * @param arg2 right operand\n     * @param invert whether to invert (not) the comparison,"protected CoreOperationCompare(final Expression arg1, final Expression arg2, final boolean invert) {\n    super(new Expression[] { arg1, arg2 });\n    this.invert = invert;\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression,boolean)","digraph cfg_init {\n	""1"" [label=""$stack4 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack4[0] = arg1""];\n	""3"" [label=""$stack4[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""invert := @parameter2: boolean""];\n	""7"" [label=""return""];\n	""8"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack4)""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationCompare""];\n	""10"" [label=""this.<org.apache.commons.jxpath.ri.compiler.CoreOperationCompare: boolean invert> = invert""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    final double l = InfoSetUtil.doubleValue(args[0].computeValue(context));\n    final double r = InfoSetUtil.doubleValue(args[1].computeValue(context));\n    return Double.valueOf(l / r);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = $stack9[1]""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack12 = l / r""];\n	""4"" [label=""$stack13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack12)""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationDivide: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""6"" [label=""$stack7 = $stack6[0]""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""8"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationDivide: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""10"" [label=""l = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack8)""];\n	""11"" [label=""r = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack11)""];\n	""12"" [label=""return $stack13""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationDivide""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return MULTIPLY_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 5""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationDivide""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return false;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationDivide""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""div"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""div\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationDivide""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperationDivide.<init>(Expression,Expression)",Constructor,* Create a new CoreOperationDivide.\n     * @param arg1 dividend\n     * @param arg2 divisor,"public CoreOperationDivide(final Expression arg1, final Expression arg2) {\n    super(new Expression[] { arg1, arg2 });\n}","void <init>(org.apache.commons.jxpath.ri.compiler.Expression,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_init {\n	""1"" [label=""$stack3 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[2]""];\n	""2"" [label=""$stack3[0] = arg1""];\n	""3"" [label=""$stack3[1] = arg2""];\n	""4"" [label=""arg1 := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""5"" [label=""arg2 := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationDivide""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.computeValue(EvalContext),Method,No Comment,"@Override\npublic final Object computeValue(final EvalContext context) {\n    return compute(args[0].compute(context), args[1].compute(context)) ? Boolean.TRUE : Boolean.FALSE;\n}",java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack3 = $stack2[0]""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""4"" [label=""$stack5 = $stack4[1]""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""6"" [label=""$stack7 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""7"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean compute(java.lang.Object,java.lang.Object)>($stack7, $stack6)""];\n	""8"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""9"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack8 == 0""];\n	""13"" [label=""return $stack9""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_goto""];\n	""12"" -> ""8""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","public , final "
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.getPrecedence(),Method,No Comment,@Override\nprotected final int getPrecedence() {\n    return RELATIONAL_EXPR_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 3""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n","protected , final "
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.isSymmetric(),Method,No Comment,@Override\nprotected final boolean isSymmetric() {\n    return false;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n","protected , final "
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.evaluateCompare(int),Abstract Method,* Template method for subclasses to evaluate the result of a comparison.\n     * @param compare result of comparison to evaluate\n     * @return ultimate operation success/failure,protected abstract boolean evaluateCompare(int compare);,boolean evaluateCompare(int),digraph cfg_evaluateCompare {\n}\n,"protected , abstract "
"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.compute(Object,Object)",Method,* Compare left to right.\n     * @param left left operand\n     * @param right right operand\n     * @return operation success/failure,"private boolean compute(Object left, Object right) {\n    left = reduce(left);\n    right = reduce(right);\n    if (left instanceof InitialContext) {\n        ((InitialContext) left).reset();\n    }\n    if (right instanceof InitialContext) {\n        ((InitialContext) right).reset();\n    }\n    if (left instanceof Iterator && right instanceof Iterator) {\n        return findMatch((Iterator) left, (Iterator) right);\n    }\n    if (left instanceof Iterator) {\n        return containsMatch((Iterator) left, right);\n    }\n    if (right instanceof Iterator) {\n        return containsMatch(left, (Iterator) right);\n    }\n    final double ld = InfoSetUtil.doubleValue(left);\n    if (Double.isNaN(ld)) {\n        return false;\n    }\n    final double rd = InfoSetUtil.doubleValue(right);\n    if (Double.isNaN(rd)) {\n        return false;\n    }\n    return evaluateCompare(ld == rd ? 0 : ld < rd ? -1 : 1);\n}","boolean compute(java.lang.Object,java.lang.Object)","digraph cfg_compute {\n	""1"" [label=""$stack10 = left instanceof java.util.Iterator""];\n	""2"" [label=""$stack11 = right instanceof java.util.Iterator""];\n	""3"" [label=""$stack12 = staticinvoke <java.lang.Double: boolean isNaN(double)>(ld)""];\n	""4"" [label=""$stack13 = staticinvoke <java.lang.Double: boolean isNaN(double)>(rd)""];\n	""5"" [label=""$stack14 = ld cmpl rd""];\n	""6"" [label=""$stack15 = ld cmpg rd""];\n	""7"" [label=""$stack16 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean evaluateCompare(int)>($stack17)""];\n	""8"" [label=""$stack17 = -1""];\n	""9"" [label=""$stack17 = 0""];\n	""10"" [label=""$stack17 = 1""];\n	""11"" [label=""$stack18 = (java.util.Iterator) right""];\n	""12"" [label=""$stack19 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean containsMatch(java.lang.Object,java.util.Iterator)>(left, $stack18)""];\n	""13"" [label=""$stack20 = (java.util.Iterator) left""];\n	""14"" [label=""$stack21 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean containsMatch(java.util.Iterator,java.lang.Object)>($stack20, right)""];\n	""15"" [label=""$stack22 = right instanceof java.util.Iterator""];\n	""16"" [label=""$stack23 = (java.util.Iterator) right""];\n	""17"" [label=""$stack24 = (java.util.Iterator) left""];\n	""18"" [label=""$stack25 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean findMatch(java.util.Iterator,java.util.Iterator)>($stack24, $stack23)""];\n	""19"" [label=""$stack26 = (org.apache.commons.jxpath.ri.axes.InitialContext) right""];\n	""20"" [label=""$stack27 = (org.apache.commons.jxpath.ri.axes.InitialContext) left""];\n	""21"" [label=""$stack7 = left instanceof org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""22"" [label=""$stack8 = right instanceof org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""23"" [label=""$stack9 = left instanceof java.util.Iterator""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack10 == 0""];\n	""27"" [label=""if $stack11 == 0""];\n	""28"" [label=""if $stack12 == 0""];\n	""29"" [label=""if $stack13 == 0""];\n	""30"" [label=""if $stack14 != 0""];\n	""31"" [label=""if $stack15 >= 0""];\n	""32"" [label=""if $stack22 == 0""];\n	""33"" [label=""if $stack7 == 0""];\n	""34"" [label=""if $stack8 == 0""];\n	""35"" [label=""if $stack9 == 0""];\n	""36"" [label=""ld = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(left)""];\n	""37"" [label=""left := @parameter0: java.lang.Object""];\n	""38"" [label=""left = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: java.lang.Object reduce(java.lang.Object)>(left)""];\n	""39"" [label=""rd = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(right)""];\n	""40"" [label=""return $stack16""];\n	""41"" [label=""return $stack19""];\n	""42"" [label=""return $stack21""];\n	""43"" [label=""return $stack25""];\n	""44"" [label=""return 0""];\n	""45"" [label=""return 0""];\n	""46"" [label=""right := @parameter1: java.lang.Object""];\n	""47"" [label=""right = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: java.lang.Object reduce(java.lang.Object)>(right)""];\n	""48"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""49"" [label=""virtualinvoke $stack26.<org.apache.commons.jxpath.ri.axes.InitialContext: void reset()>()""];\n	""50"" [label=""virtualinvoke $stack27.<org.apache.commons.jxpath.ri.axes.InitialContext: void reset()>()""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""42""[label=""cfg_next""];\n	""15"" -> ""32""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""43""[label=""cfg_next""];\n	""19"" -> ""49""[label=""cfg_next""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""20"" -> ""50""[label=""cfg_next""];\n	""21"" -> ""33""[label=""cfg_next""];\n	""22"" -> ""34""[label=""cfg_next""];\n	""23"" -> ""35""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_goto""];\n	""25"" -> ""7""[label=""cfg_goto""];\n	""26"" -> ""13""[label=""cfg_false""];\n	""26"" -> ""2""[label=""cfg_true""];\n	""27"" -> ""11""[label=""cfg_false""];\n	""27"" -> ""36""[label=""cfg_true""];\n	""28"" -> ""39""[label=""cfg_true""];\n	""28"" -> ""44""[label=""cfg_false""];\n	""29"" -> ""45""[label=""cfg_false""];\n	""29"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""6""[label=""cfg_true""];\n	""30"" -> ""9""[label=""cfg_false""];\n	""31"" -> ""10""[label=""cfg_true""];\n	""31"" -> ""8""[label=""cfg_false""];\n	""32"" -> ""1""[label=""cfg_true""];\n	""32"" -> ""17""[label=""cfg_false""];\n	""33"" -> ""20""[label=""cfg_false""];\n	""33"" -> ""22""[label=""cfg_true""];\n	""34"" -> ""19""[label=""cfg_false""];\n	""34"" -> ""23""[label=""cfg_true""];\n	""35"" -> ""1""[label=""cfg_true""];\n	""35"" -> ""15""[label=""cfg_false""];\n	""36"" -> ""3""[label=""cfg_next""];\n	""37"" -> ""46""[label=""cfg_next""];\n	""38"" -> ""47""[label=""cfg_next""];\n	""39"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""29""[label=""cfg_next""];\n	""46"" -> ""38""[label=""cfg_next""];\n	""47"" -> ""21""[label=""cfg_next""];\n	""48"" -> ""37""[label=""cfg_next""];\n	""49"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""30""[label=""cfg_next""];\n	""50"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""31""[label=""cfg_next""];\n	""7"" -> ""40""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.reduce(Object),Method,* Reduce an operand for comparison.\n     * @param o Object to reduce\n     * @return reduced operand,private Object reduce(Object o) {\n    if (o instanceof SelfContext) {\n        o = ((EvalContext) o).getSingleNodePointer();\n    }\n    if (o instanceof Collection) {\n        o = ((Collection) o).iterator();\n    }\n    return o;\n},java.lang.Object reduce(java.lang.Object),"digraph cfg_reduce {\n	""1"" [label=""$stack2 = o instanceof org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""2"" [label=""$stack3 = o instanceof java.util.Collection""];\n	""3"" [label=""$stack4 = (java.util.Collection) o""];\n	""4"" [label=""$stack5 = (org.apache.commons.jxpath.ri.EvalContext) o""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""o := @parameter0: java.lang.Object""];\n	""8"" [label=""o = interfaceinvoke $stack4.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""9"" [label=""o = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""10"" [label=""return o""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.containsMatch(Iterator,Object)",Method,* Learn whether any element returned from an Iterator matches a given value.\n     * @param it Iterator\n     * @param value to look for\n     * @return whether a match was found,"private boolean containsMatch(final Iterator it, final Object value) {\n    while (it.hasNext()) {\n        final Object element = it.next();\n        if (compute(element, value)) {\n            return true;\n        }\n    }\n    return false;\n}","boolean containsMatch(java.util.Iterator,java.lang.Object)","digraph cfg_containsMatch {\n	""1"" [label=""$stack4 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""2"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean compute(java.lang.Object,java.lang.Object)>(element, value)""];\n	""3"" [label=""element = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack4 == 0""];\n	""6"" [label=""if $stack5 == 0""];\n	""7"" [label=""it := @parameter0: java.util.Iterator""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""11"" [label=""value := @parameter1: java.lang.Object""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n	""7"" -> ""11""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.containsMatch(Object,Iterator)",Method,* Learn whether any element returned from an Iterator matches a given value.\n     * @param it Iterator\n     * @param value to look for\n     * @return whether a match was found,"private boolean containsMatch(final Object value, final Iterator it) {\n    while (it.hasNext()) {\n        final Object element = it.next();\n        if (compute(value, element)) {\n            return true;\n        }\n    }\n    return false;\n}","boolean containsMatch(java.lang.Object,java.util.Iterator)","digraph cfg_containsMatch {\n	""1"" [label=""$stack4 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""2"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean compute(java.lang.Object,java.lang.Object)>(value, element)""];\n	""3"" [label=""element = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack4 == 0""];\n	""6"" [label=""if $stack5 == 0""];\n	""7"" [label=""it := @parameter1: java.util.Iterator""];\n	""8"" [label=""return 0""];\n	""9"" [label=""return 1""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""11"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_goto""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.findMatch(Iterator,Iterator)",Method,* Learn whether there is an intersection between two Iterators.\n     * @param lit left Iterator\n     * @param rit right Iterator\n     * @return whether a match was found,"private boolean findMatch(final Iterator lit, final Iterator rit) {\n    final HashSet left = new HashSet();\n    while (lit.hasNext()) {\n        left.add(lit.next());\n    }\n    while (rit.hasNext()) {\n        if (containsMatch(left.iterator(), rit.next())) {\n            return true;\n        }\n    }\n    return false;\n}","boolean findMatch(java.util.Iterator,java.util.Iterator)","digraph cfg_findMatch {\n	""1"" [label=""$stack10 = interfaceinvoke lit.<java.util.Iterator: java.lang.Object next()>()""];\n	""2"" [label=""$stack4 = new java.util.HashSet""];\n	""3"" [label=""$stack5 = interfaceinvoke lit.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack6 = interfaceinvoke rit.<java.util.Iterator: boolean hasNext()>()""];\n	""5"" [label=""$stack7 = interfaceinvoke rit.<java.util.Iterator: java.lang.Object next()>()""];\n	""6"" [label=""$stack8 = virtualinvoke left.<java.util.HashSet: java.util.Iterator iterator()>()""];\n	""7"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression: boolean containsMatch(java.util.Iterator,java.lang.Object)>($stack8, $stack7)""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack5 == 0""];\n	""10"" [label=""if $stack6 == 0""];\n	""11"" [label=""if $stack9 == 0""];\n	""12"" [label=""left = $stack4""];\n	""13"" [label=""lit := @parameter0: java.util.Iterator""];\n	""14"" [label=""return 0""];\n	""15"" [label=""return 1""];\n	""16"" [label=""rit := @parameter1: java.util.Iterator""];\n	""17"" [label=""specialinvoke $stack4.<java.util.HashSet: void <init>()>()""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""19"" [label=""virtualinvoke left.<java.util.HashSet: boolean add(java.lang.Object)>($stack10)""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_true""];\n	""10"" -> ""6""[label=""cfg_false""];\n	""11"" -> ""15""[label=""cfg_false""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_goto""];\n	""9"" -> ""1""[label=""cfg_false""];\n	""9"" -> ""4""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression.<init>(Expression[]),Constructor,* Create a new CoreOperationRelationalExpression.\n     * @param args arguments,protected CoreOperationRelationalExpression(final Expression[] args) {\n    super(args);\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_init {\n	""1"" [label=""args := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationRelationalExpression""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest.getTarget(),Method,* Gets the target.\n     * @return String,public String getTarget() {\n    return target;\n},java.lang.String getTarget(),"digraph cfg_getTarget {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest: java.lang.String target>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest.toString(),Method,No Comment,"@Override\npublic String toString() {\n    return ""processing-instruction('"" + target + ""')"";\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest: java.lang.String target>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""processing-instruction(\'\"")""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2)""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\')\"")""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest.<init>(String),Constructor,* Create a new ProcessingInstructionTest.\n     * @param target string,public ProcessingInstructionTest(final String target) {\n    this.target = target;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.NodeTest: void <init>()>()""];\n	""3"" [label=""target := @parameter0: java.lang.String""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest: java.lang.String target> = target""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.getFunctionName(),Method,* Gets the function name\n     * @return QName,public QName getFunctionName() {\n    return functionName;\n},org.apache.commons.jxpath.ri.QName getFunctionName(),"digraph cfg_getFunctionName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.QName functionName>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.computeContextDependent(),Method,"* An extension function gets the current context, therefore it MAY be\n     * context dependent.\n     * @return true",@Override\npublic boolean computeContextDependent() {\n    return true;\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.toString(),Method,No Comment,"@Override\npublic String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(functionName);\n    buffer.append('(');\n    final Expression[] args = getArguments();\n    if (args != null) {\n        for (int i = 0; i < args.length; i++) {\n            if (i > 0) {\n                buffer.append("", "");\n            }\n            buffer.append(args[i]);\n        }\n    }\n    buffer.append(')');\n    return buffer.toString();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.QName functionName>""];\n	""3"" [label=""$stack6 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack7 = lengthof args""];\n	""5"" [label=""$stack8 = args[i]""];\n	""6"" [label=""args = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.compiler.Expression[] getArguments()>()""];\n	""7"" [label=""buffer = $stack4""];\n	""8"" [label=""goto""];\n	""9"" [label=""i = 0""];\n	""10"" [label=""i = i + 1""];\n	""11"" [label=""if args == null""];\n	""12"" [label=""if i <= 0""];\n	""13"" [label=""if i >= $stack7""];\n	""14"" [label=""return $stack6""];\n	""15"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""17"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack5)""];\n	""20"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8)""];\n	""21"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", \"")""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_true""];\n	""11"" -> ""9""[label=""cfg_false""];\n	""12"" -> ""21""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""12""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""6""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_next""];\n	""21"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_goto""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.compute(EvalContext),Method,No Comment,@Override\npublic Object compute(final EvalContext context) {\n    return computeValue(context);\n},java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_compute {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.computeValue(EvalContext),Method,No Comment,"@Override\npublic Object computeValue(final EvalContext context) {\n    Object[] parameters = null;\n    if (args != null) {\n        parameters = new Object[args.length];\n        for (int i = 0; i < args.length; i++) {\n            parameters[i] = convert(args[i].compute(context));\n        }\n    }\n    final Function function = context.getRootContext().getFunction(functionName, parameters);\n    if (function == null) {\n        throw new JXPathFunctionNotFoundException(""No such function: "" + functionName + Arrays.asList(parameters));\n    }\n    final Object result = function.invoke(context, parameters);\n    return result instanceof NodeSet ? new NodeSetContext(context, (NodeSet) result) : result;\n}",java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""2"" [label=""$stack10 = result""];\n	""3"" [label=""$stack11 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.QName functionName>""];\n	""5"" [label=""$stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No such function: \"")""];\n	""6"" [label=""$stack14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(parameters)""];\n	""7"" [label=""$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12)""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14)""];\n	""9"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack18 = new org.apache.commons.jxpath.JXPathFunctionNotFoundException""];\n	""11"" [label=""$stack19 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""12"" [label=""$stack20 = lengthof $stack19""];\n	""13"" [label=""$stack21 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""14"" [label=""$stack22 = lengthof $stack21""];\n	""15"" [label=""$stack23 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""16"" [label=""$stack24 = $stack23[i]""];\n	""17"" [label=""$stack25 = virtualinvoke $stack24.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""18"" [label=""$stack26 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: java.lang.Object convert(java.lang.Object)>($stack25)""];\n	""19"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""20"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.QName functionName>""];\n	""21"" [label=""$stack7 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""22"" [label=""$stack8 = result instanceof org.apache.commons.jxpath.NodeSet""];\n	""23"" [label=""$stack9 = (org.apache.commons.jxpath.NodeSet) result""];\n	""24"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""i = 0""];\n	""28"" [label=""i = i + 1""];\n	""29"" [label=""i = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.Function getFunction(org.apache.commons.jxpath.ri.QName,java.lang.Object[])>($stack6, parameters)""];\n	""30"" [label=""if $stack5 == null""];\n	""31"" [label=""if $stack8 == 0""];\n	""32"" [label=""if i != null""];\n	""33"" [label=""if i >= $stack22""];\n	""34"" [label=""parameters = newarray (java.lang.Object)[$stack20]""];\n	""35"" [label=""parameters = null""];\n	""36"" [label=""parameters[i] = $stack26""];\n	""37"" [label=""result = interfaceinvoke i.<org.apache.commons.jxpath.Function: java.lang.Object invoke(org.apache.commons.jxpath.ExpressionContext,java.lang.Object[])>(context, parameters)""];\n	""38"" [label=""return $stack10""];\n	""39"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.axes.NodeSetContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.NodeSet)>(context, $stack9)""];\n	""40"" [label=""specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>()""];\n	""41"" [label=""specialinvoke $stack18.<org.apache.commons.jxpath.JXPathFunctionNotFoundException: void <init>(java.lang.String)>($stack17)""];\n	""42"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""43"" [label=""throw $stack18""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""34""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""33""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""36""[label=""cfg_next""];\n	""19"" -> ""30""[label=""cfg_next""];\n	""2"" -> ""38""[label=""cfg_next""];\n	""20"" -> ""29""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""31""[label=""cfg_next""];\n	""23"" -> ""39""[label=""cfg_next""];\n	""24"" -> ""35""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_goto""];\n	""26"" -> ""38""[label=""cfg_goto""];\n	""27"" -> ""13""[label=""cfg_next""];\n	""28"" -> ""25""[label=""cfg_next""];\n	""29"" -> ""32""[label=""cfg_next""];\n	""3"" -> ""40""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_false""];\n	""30"" -> ""21""[label=""cfg_true""];\n	""31"" -> ""1""[label=""cfg_false""];\n	""31"" -> ""2""[label=""cfg_true""];\n	""32"" -> ""10""[label=""cfg_false""];\n	""32"" -> ""37""[label=""cfg_true""];\n	""33"" -> ""15""[label=""cfg_false""];\n	""33"" -> ""21""[label=""cfg_true""];\n	""34"" -> ""27""[label=""cfg_next""];\n	""35"" -> ""19""[label=""cfg_next""];\n	""36"" -> ""28""[label=""cfg_next""];\n	""37"" -> ""22""[label=""cfg_next""];\n	""39"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""40"" -> ""5""[label=""cfg_next""];\n	""41"" -> ""43""[label=""cfg_next""];\n	""42"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""41""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.ExtensionFunction.convert(Object),Method,* Convert any incoming context to a value.\n     * @param object Object to convert\n     * @return context value or {@code object} unscathed.,private Object convert(final Object object) {\n    return object instanceof EvalContext ? ((EvalContext) object).getValue() : object;\n},java.lang.Object convert(java.lang.Object),"digraph cfg_convert {\n	""1"" [label=""$stack2 = object instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""2"" [label=""$stack3 = (org.apache.commons.jxpath.ri.EvalContext) object""];\n	""3"" [label=""$stack4 = object""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object getValue()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack2 == 0""];\n	""7"" [label=""object := @parameter0: java.lang.Object""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.compiler.ExtensionFunction.<init>(QName,Expression[])",Constructor,* Create a new ExtensionFunction.\n     * @param functionName name of the function\n     * @param args Expression[] of function args,"public ExtensionFunction(final QName functionName, final Expression[] args) {\n    super(args);\n    this.functionName = functionName;\n}","void <init>(org.apache.commons.jxpath.ri.QName,org.apache.commons.jxpath.ri.compiler.Expression[])","digraph cfg_init {\n	""1"" [label=""args := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""functionName := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Operation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.ExtensionFunction""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.compiler.ExtensionFunction: org.apache.commons.jxpath.ri.QName functionName> = functionName""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeTypeTest.getNodeType(),Method,* Gets the nodeType.\n     * @return int,public int getNodeType() {\n    return nodeType;\n},int getNodeType(),"digraph cfg_getNodeType {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int nodeType>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeTypeTest.toString(),Method,No Comment,"@Override\npublic String toString() {\n    return nodeTypeToString(nodeType) + ""()"";\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int nodeType>""];\n	""3"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.compiler.NodeTypeTest: java.lang.String nodeTypeToString(int)>($stack2)""];\n	""4"" [label=""$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3)""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""()\"")""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeTypeTest.nodeTypeToString(int),Method,* Render the given node type as a String.\n     * @param code int\n     * @return String,"public static String nodeTypeToString(final int code) {\n    switch(code) {\n        case Compiler.NODE_TYPE_NODE:\n            return ""node"";\n        case Compiler.NODE_TYPE_TEXT:\n            return ""text"";\n        case Compiler.NODE_TYPE_COMMENT:\n            return ""comment"";\n        case Compiler.NODE_TYPE_PI:\n            return ""processing-instruction"";\n        default:\n            return ""UNKNOWN"";\n    }\n}",java.lang.String nodeTypeToString(int),"digraph cfg_nodeTypeToString {\n	""1"" [label=""code := @parameter0: int""];\n	""2"" [label=""return \""UNKNOWN\""""];\n	""3"" [label=""return \""comment\""""];\n	""4"" [label=""return \""node\""""];\n	""5"" [label=""return \""processing-instruction\""""];\n	""6"" [label=""return \""text\""""];\n	""7"" [label=""switch(code) \{     case 1:     case 2:     case 3:     case 4:     default:  \}""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_switch""];\n	""7"" -> ""3""[label=""cfg_switch""];\n	""7"" -> ""4""[label=""cfg_switch""];\n	""7"" -> ""5""[label=""cfg_switch""];\n	""7"" -> ""6""[label=""cfg_switch""];\n}\n","public , static "
org.apache.commons.jxpath.ri.compiler.NodeTypeTest.<init>(int),Constructor,* Create a new NodeTypeTest.\n     * @param nodeType to match,public NodeTypeTest(final int nodeType) {\n    this.nodeType = nodeType;\n},void <init>(int),"digraph cfg_init {\n	""1"" [label=""nodeType := @parameter0: int""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.NodeTest: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int nodeType> = nodeType""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperation.compute(EvalContext),Method,No Comment,@Override\npublic Object compute(final EvalContext context) {\n    return computeValue(context);\n},java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_compute {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperation""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperation.computeValue(EvalContext),Abstract Method,No Comment,@Override\npublic abstract Object computeValue(EvalContext context);,java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),digraph cfg_computeValue {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.compiler.CoreOperation.getSymbol(),Abstract Method,"* Returns the XPath symbol for this operation, e.g. ""+"", ""div"", etc.\n     * @return String symbol",public abstract String getSymbol();,java.lang.String getSymbol(),digraph cfg_getSymbol {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.compiler.CoreOperation.isSymmetric(),Abstract Method,"* Returns true if the operation is not sensitive to the order of arguments,\n     * e.g. ""="", ""and"" etc, and false if it is, e.g. ""&lt;="", ""div"".\n     * @return boolean",protected abstract boolean isSymmetric();,boolean isSymmetric(),digraph cfg_isSymmetric {\n}\n,"protected , abstract "
org.apache.commons.jxpath.ri.compiler.CoreOperation.getPrecedence(),Abstract Method,* Computes the precedence of the operation.\n     * @return int precedence,protected abstract int getPrecedence();,int getPrecedence(),digraph cfg_getPrecedence {\n}\n,"protected , abstract "
org.apache.commons.jxpath.ri.compiler.CoreOperation.toString(),Method,No Comment,"@Override\npublic String toString() {\n    if (args.length == 1) {\n        return getSymbol() + parenthesize(args[0], false);\n    }\n    final StringBuilder buffer = new StringBuilder();\n    for (int i = 0; i < args.length; i++) {\n        if (i > 0) {\n            buffer.append(' ');\n            buffer.append(getSymbol());\n            buffer.append(' ');\n        }\n        buffer.append(parenthesize(args[i], i == 0));\n    }\n    return buffer.toString();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack10 = $stack9[i]""];\n	""2"" [label=""$stack11 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: java.lang.String parenthesize(org.apache.commons.jxpath.ri.compiler.Expression,boolean)>($stack10, $stack12)""];\n	""3"" [label=""$stack12 = 0""];\n	""4"" [label=""$stack12 = 1""];\n	""5"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: java.lang.String getSymbol()>()""];\n	""6"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: java.lang.String getSymbol()>()""];\n	""8"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""$stack17 = $stack16[0]""];\n	""10"" [label=""$stack18 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: java.lang.String parenthesize(org.apache.commons.jxpath.ri.compiler.Expression,boolean)>($stack17, 0)""];\n	""11"" [label=""$stack19 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15)""];\n	""12"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18)""];\n	""13"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""14"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""15"" [label=""$stack4 = lengthof $stack3""];\n	""16"" [label=""$stack5 = new java.lang.StringBuilder""];\n	""17"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""18"" [label=""$stack7 = lengthof $stack6""];\n	""19"" [label=""$stack8 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""20"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""21"" [label=""buffer = $stack5""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""i = 0""];\n	""25"" [label=""i = i + 1""];\n	""26"" [label=""if $stack4 != 1""];\n	""27"" [label=""if i != 0""];\n	""28"" [label=""if i <= 0""];\n	""29"" [label=""if i >= $stack7""];\n	""30"" [label=""return $stack21""];\n	""31"" [label=""return $stack8""];\n	""32"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>()""];\n	""34"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperation""];\n	""35"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)""];\n	""36"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)""];\n	""37"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""38"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""30""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""26""[label=""cfg_next""];\n	""16"" -> ""33""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""37""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_next""];\n	""22"" -> ""2""[label=""cfg_goto""];\n	""23"" -> ""17""[label=""cfg_goto""];\n	""24"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_true""];\n	""26"" -> ""6""[label=""cfg_false""];\n	""27"" -> ""3""[label=""cfg_true""];\n	""27"" -> ""4""[label=""cfg_false""];\n	""28"" -> ""20""[label=""cfg_true""];\n	""28"" -> ""35""[label=""cfg_false""];\n	""29"" -> ""19""[label=""cfg_true""];\n	""29"" -> ""28""[label=""cfg_false""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""32"" -> ""7""[label=""cfg_next""];\n	""33"" -> ""21""[label=""cfg_next""];\n	""34"" -> ""14""[label=""cfg_next""];\n	""35"" -> ""5""[label=""cfg_next""];\n	""36"" -> ""20""[label=""cfg_next""];\n	""37"" -> ""25""[label=""cfg_next""];\n	""38"" -> ""36""[label=""cfg_next""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""38""[label=""cfg_next""];\n	""6"" -> ""32""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.CoreOperation.parenthesize(Expression,boolean)",Method,* Wrap an expression in parens if necessary.\n     * @param expression other Expression\n     * @param left whether {@code expression} is left of this one.\n     * @return String,"private String parenthesize(final Expression expression, final boolean left) {\n    final String s = expression.toString();\n    if (!(expression instanceof CoreOperation)) {\n        return s;\n    }\n    final int compared = getPrecedence() - ((CoreOperation) expression).getPrecedence();\n    if (compared < 0) {\n        return s;\n    }\n    if (compared == 0 && (isSymmetric() || left)) {\n        return s;\n    }\n    return '(' + s + ')';\n}","java.lang.String parenthesize(org.apache.commons.jxpath.ri.compiler.Expression,boolean)","digraph cfg_parenthesize {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: boolean isSymmetric()>()""];\n	""6"" [label=""$stack5 = expression instanceof org.apache.commons.jxpath.ri.compiler.CoreOperation""];\n	""7"" [label=""$stack6 = (org.apache.commons.jxpath.ri.compiler.CoreOperation) expression""];\n	""8"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: int getPrecedence()>()""];\n	""9"" [label=""$stack8 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.CoreOperation: int getPrecedence()>()""];\n	""10"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""11"" [label=""compared = $stack7 - $stack8""];\n	""12"" [label=""expression := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""13"" [label=""if $stack14 != 0""];\n	""14"" [label=""if $stack5 != 0""];\n	""15"" [label=""if compared != 0""];\n	""16"" [label=""if compared >= 0""];\n	""17"" [label=""if left == 0""];\n	""18"" [label=""left := @parameter1: boolean""];\n	""19"" [label=""return $stack13""];\n	""20"" [label=""return s""];\n	""21"" [label=""return s""];\n	""22"" [label=""return s""];\n	""23"" [label=""s = virtualinvoke expression.<java.lang.Object: java.lang.String toString()>()""];\n	""24"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperation""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""24""[label=""cfg_next""];\n	""11"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_false""];\n	""13"" -> ""22""[label=""cfg_true""];\n	""14"" -> ""20""[label=""cfg_false""];\n	""14"" -> ""8""[label=""cfg_true""];\n	""15"" -> ""10""[label=""cfg_true""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""15""[label=""cfg_true""];\n	""16"" -> ""21""[label=""cfg_false""];\n	""17"" -> ""10""[label=""cfg_true""];\n	""17"" -> ""22""[label=""cfg_false""];\n	""18"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""23"" -> ""6""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""25"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.compiler.CoreOperation.<init>(Expression[]),Constructor,* Create a new CoreOperation.\n     * @param args Expression[],public CoreOperation(final Expression[] args) {\n    super(args);\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_init {\n	""1"" [label=""args := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Operation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperation""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    double s = 0.0;\n    for (final Expression arg : args) {\n        s += InfoSetUtil.doubleValue(arg.computeValue(context));\n    }\n    return Double.valueOf(s);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack9)""];\n	""2"" [label=""$stack8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(s)""];\n	""3"" [label=""$stack9 = virtualinvoke arg.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""arg = l4[l6]""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""6"" [label=""goto""];\n	""7"" [label=""if l6 >= l5""];\n	""8"" [label=""l4 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationAdd: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""9"" [label=""l5 = lengthof l4""];\n	""10"" [label=""l6 = 0""];\n	""11"" [label=""l6 = l6 + 1""];\n	""12"" [label=""return $stack8""];\n	""13"" [label=""s = 0.0""];\n	""14"" [label=""s = s + $stack10""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAdd""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return ADD_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 4""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAdd""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return true;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAdd""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""+"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""+\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAdd""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationAdd.<init>(Expression[]),Constructor,* Create a new CoreOperationAdd.\n     * @param args Expression arguments to add together.,public CoreOperationAdd(final Expression[] args) {\n    super(args);\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_init {\n	""1"" [label=""args := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationAdd""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationNegate.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    final double a = InfoSetUtil.doubleValue(args[0].computeValue(context));\n    return Double.valueOf(-a);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.compiler.CoreOperationNegate: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack5 = $stack4[0]""];\n	""3"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack7 = neg a""];\n	""5"" [label=""$stack8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack7)""];\n	""6"" [label=""a = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack6)""];\n	""7"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""return $stack8""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationNegate""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationNegate.getPrecedence(),Method,No Comment,@Override\nprotected int getPrecedence() {\n    return NEGATE_PRECEDENCE;\n},int getPrecedence(),"digraph cfg_getPrecedence {\n	""1"" [label=""return 6""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationNegate""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationNegate.isSymmetric(),Method,No Comment,@Override\nprotected boolean isSymmetric() {\n    return false;\n},boolean isSymmetric(),"digraph cfg_isSymmetric {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationNegate""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreOperationNegate.getSymbol(),Method,No Comment,"@Override\npublic String getSymbol() {\n    return ""-"";\n}",java.lang.String getSymbol(),"digraph cfg_getSymbol {\n	""1"" [label=""return \""-\""""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationNegate""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreOperationNegate.<init>(Expression),Constructor,* Create a new CoreOperationNegate.\n     * @param arg the Expression to negate,public CoreOperationNegate(final Expression arg) {\n    super(new Expression[] { arg });\n},void <init>(org.apache.commons.jxpath.ri.compiler.Expression),"digraph cfg_init {\n	""1"" [label=""$stack2 = newarray (org.apache.commons.jxpath.ri.compiler.Expression)[1]""];\n	""2"" [label=""$stack2[0] = arg""];\n	""3"" [label=""arg := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreOperation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack2)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreOperationNegate""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.VariableReference.getVariableName(),Method,* Gets the variable name.\n     * @return QName,public QName getVariableName() {\n    return varName;\n},org.apache.commons.jxpath.ri.QName getVariableName(),"digraph cfg_getVariableName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.VariableReference: org.apache.commons.jxpath.ri.QName varName>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.VariableReference.toString(),Method,No Comment,"@Override\npublic String toString() {\n    return ""$"" + varName;\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.VariableReference: org.apache.commons.jxpath.ri.QName varName>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""$\"")""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack2)""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>()""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.VariableReference.isContextDependent(),Method,No Comment,@Override\npublic boolean isContextDependent() {\n    return false;\n},boolean isContextDependent(),"digraph cfg_isContextDependent {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.VariableReference.computeContextDependent(),Method,No Comment,@Override\npublic boolean computeContextDependent() {\n    return false;\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.VariableReference.compute(EvalContext),Method,No Comment,@Override\npublic Object compute(final EvalContext context) {\n    return computeValue(context);\n},java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_compute {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.VariableReference: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.VariableReference.computeValue(EvalContext),Method,* Returns the value of the variable.\n     * @param context EvalContext against which to compute the variable's value.\n     * @return Object,@Override\npublic Object computeValue(final EvalContext context) {\n    return context.getRootContext().getVariableContext(varName);\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.VariableReference: org.apache.commons.jxpath.ri.QName varName>""];\n	""2"" [label=""$stack3 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.ri.EvalContext getVariableContext(org.apache.commons.jxpath.ri.QName)>($stack2)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.VariableReference.<init>(QName),Constructor,* Create a new VariableReference.\n     * @param varName variable name,public VariableReference(final QName varName) {\n    this.varName = varName;\n},void <init>(org.apache.commons.jxpath.ri.QName),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.VariableReference""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.compiler.VariableReference: org.apache.commons.jxpath.ri.QName varName> = varName""];\n	""5"" [label=""varName := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Path.getSteps(),Method,* Gets the steps.\n     * @return Step[],public Step[] getSteps() {\n    return steps;\n},org.apache.commons.jxpath.ri.compiler.Step[] getSteps(),"digraph cfg_getSteps {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Path.computeContextDependent(),Method,No Comment,@Override\npublic boolean computeContextDependent() {\n    if (steps != null) {\n        for (final Step step : steps) {\n            if (step.isContextDependent()) {\n                return true;\n            }\n        }\n    }\n    return false;\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""2"" [label=""$stack6 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: boolean isContextDependent()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if $stack5 == null""];\n	""5"" [label=""if $stack6 == 0""];\n	""6"" [label=""if l3 >= l2""];\n	""7"" [label=""l1 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""8"" [label=""l2 = lengthof l1""];\n	""9"" [label=""l3 = 0""];\n	""10"" [label=""l3 = l3 + 1""];\n	""11"" [label=""return 0""];\n	""12"" [label=""return 1""];\n	""13"" [label=""step = l1[l3]""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""11""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""12""[label=""cfg_false""];\n	""6"" -> ""11""[label=""cfg_true""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.Path.isSimplePath(),Method,"* Recognizes paths formatted as {@code foo/bar[3]/baz[@name = 'biz']}.\n     * The evaluation of such ""simple"" paths is optimized and\n     * streamlined.\n     * @return {@code true} if this path is simple",public synchronized boolean isSimplePath() {\n    if (!basicKnown) {\n        basicKnown = true;\n        basic = true;\n        final Step[] steps = getSteps();\n        for (final Step step : steps) {\n            if (!isSimpleStep(step)) {\n                basic = false;\n                break;\n            }\n        }\n    }\n    return basic;\n},boolean isSimplePath(),"digraph cfg_isSimplePath {\n	""1"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.Path: boolean basicKnown>""];\n	""2"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.compiler.Path: boolean basic>""];\n	""3"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: boolean isSimpleStep(org.apache.commons.jxpath.ri.compiler.Step)>(step)""];\n	""4"" [label=""goto""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack6 != 0""];\n	""7"" [label=""if $stack8 != 0""];\n	""8"" [label=""if l4 >= l3""];\n	""9"" [label=""l2 = steps""];\n	""10"" [label=""l3 = lengthof l2""];\n	""11"" [label=""l4 = 0""];\n	""12"" [label=""l4 = l4 + 1""];\n	""13"" [label=""return $stack7""];\n	""14"" [label=""step = l2[l4]""];\n	""15"" [label=""steps = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] getSteps()>()""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""17"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Path: boolean basic> = 0""];\n	""18"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Path: boolean basic> = 1""];\n	""19"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Path: boolean basicKnown> = 1""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""4""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_goto""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""19""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""17""[label=""cfg_false""];\n	""8"" -> ""14""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.ri.compiler.Path.isSimpleStep(Step),Method,"* A Step is ""simple"" if it takes one of these forms: ""."", ""/foo"",\n     * ""@bar"", ""/foo[3]"". If there are predicates, they should be\n     * context independent for the step to still be considered simple.\n     * @param step the step to check\n     * @return boolean",protected boolean isSimpleStep(final Step step) {\n    if (step.getAxis() == Compiler.AXIS_SELF) {\n        final NodeTest nodeTest = step.getNodeTest();\n        if (!(nodeTest instanceof NodeTypeTest)) {\n            return false;\n        }\n        final int nodeType = ((NodeTypeTest) nodeTest).getNodeType();\n        if (nodeType != Compiler.NODE_TYPE_NODE) {\n            return false;\n        }\n        return areBasicPredicates(step.getPredicates());\n    }\n    if (step.getAxis() == Compiler.AXIS_CHILD || step.getAxis() == Compiler.AXIS_ATTRIBUTE) {\n        final NodeTest nodeTest = step.getNodeTest();\n        if (!(nodeTest instanceof NodeNameTest)) {\n            return false;\n        }\n        if (((NodeNameTest) nodeTest).isWildcard()) {\n            return false;\n        }\n        return areBasicPredicates(step.getPredicates());\n    }\n    return false;\n},boolean isSimpleStep(org.apache.commons.jxpath.ri.compiler.Step),"digraph cfg_isSimpleStep {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: boolean areBasicPredicates(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack9)""];\n	""2"" [label=""$stack11 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""3"" [label=""$stack12 = nodeTest instanceof org.apache.commons.jxpath.ri.compiler.NodeTypeTest""];\n	""4"" [label=""$stack13 = (org.apache.commons.jxpath.ri.compiler.NodeTypeTest) nodeTest""];\n	""5"" [label=""$stack14 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""6"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: boolean areBasicPredicates(org.apache.commons.jxpath.ri.compiler.Expression[])>($stack14)""];\n	""7"" [label=""$stack4 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""8"" [label=""$stack5 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""9"" [label=""$stack6 = nodeTest instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""10"" [label=""$stack7 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) nodeTest""];\n	""11"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: boolean isWildcard()>()""];\n	""12"" [label=""$stack9 = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""13"" [label=""if $stack11 != 5""];\n	""14"" [label=""if $stack12 != 0""];\n	""15"" [label=""if $stack4 != 1""];\n	""16"" [label=""if $stack5 == 2""];\n	""17"" [label=""if $stack6 != 0""];\n	""18"" [label=""if $stack8 == 0""];\n	""19"" [label=""if nodeType == 1""];\n	""20"" [label=""nodeTest = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""21"" [label=""nodeTest = virtualinvoke step.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""22"" [label=""nodeType = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.compiler.NodeTypeTest: int getNodeType()>()""];\n	""23"" [label=""return $stack10""];\n	""24"" [label=""return $stack15""];\n	""25"" [label=""return 0""];\n	""26"" [label=""return 0""];\n	""27"" [label=""return 0""];\n	""28"" [label=""return 0""];\n	""29"" [label=""return 0""];\n	""30"" [label=""step := @parameter0: org.apache.commons.jxpath.ri.compiler.Step""];\n	""31"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_false""];\n	""13"" -> ""27""[label=""cfg_true""];\n	""14"" -> ""25""[label=""cfg_false""];\n	""14"" -> ""4""[label=""cfg_true""];\n	""15"" -> ""20""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""16"" -> ""2""[label=""cfg_false""];\n	""16"" -> ""21""[label=""cfg_true""];\n	""17"" -> ""10""[label=""cfg_true""];\n	""17"" -> ""28""[label=""cfg_false""];\n	""18"" -> ""12""[label=""cfg_true""];\n	""18"" -> ""29""[label=""cfg_false""];\n	""19"" -> ""26""[label=""cfg_false""];\n	""19"" -> ""5""[label=""cfg_true""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""22"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""30"" -> ""7""[label=""cfg_next""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.Path.areBasicPredicates(Expression[]),Method,"* Learn whether the elements of the specified array are ""basic"" predicates.\n     * @param predicates the Expression[] to check\n     * @return boolean",protected boolean areBasicPredicates(final Expression[] predicates) {\n    if (predicates != null && predicates.length != 0) {\n        boolean firstIndex = true;\n        for (final Expression predicate : predicates) {\n            if (predicate instanceof NameAttributeTest) {\n                if (((NameAttributeTest) predicate).getNameTestExpression().isContextDependent()) {\n                    return false;\n                }\n            } else if (predicate.isContextDependent()) {\n                return false;\n            } else {\n                if (!firstIndex) {\n                    return false;\n                }\n                firstIndex = false;\n            }\n        }\n    }\n    return true;\n},boolean areBasicPredicates(org.apache.commons.jxpath.ri.compiler.Expression[]),"digraph cfg_areBasicPredicates {\n	""1"" [label=""$stack10 = (org.apache.commons.jxpath.ri.compiler.NameAttributeTest) predicate""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.NameAttributeTest: org.apache.commons.jxpath.ri.compiler.Expression getNameTestExpression()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.Expression: boolean isContextDependent()>()""];\n	""4"" [label=""$stack7 = lengthof predicates""];\n	""5"" [label=""$stack8 = predicate instanceof org.apache.commons.jxpath.ri.compiler.NameAttributeTest""];\n	""6"" [label=""$stack9 = virtualinvoke predicate.<org.apache.commons.jxpath.ri.compiler.Expression: boolean isContextDependent()>()""];\n	""7"" [label=""firstIndex = 0""];\n	""8"" [label=""firstIndex = 1""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack12 == 0""];\n	""11"" [label=""if $stack7 == 0""];\n	""12"" [label=""if $stack8 == 0""];\n	""13"" [label=""if $stack9 == 0""];\n	""14"" [label=""if firstIndex != 0""];\n	""15"" [label=""if l5 >= l4""];\n	""16"" [label=""if predicates == null""];\n	""17"" [label=""l3 = predicates""];\n	""18"" [label=""l4 = lengthof l3""];\n	""19"" [label=""l5 = 0""];\n	""20"" [label=""l5 = l5 + 1""];\n	""21"" [label=""predicate = l3[l5]""];\n	""22"" [label=""predicates := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""23"" [label=""return 0""];\n	""24"" [label=""return 0""];\n	""25"" [label=""return 0""];\n	""26"" [label=""return 1""];\n	""27"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""20""[label=""cfg_true""];\n	""10"" -> ""23""[label=""cfg_false""];\n	""11"" -> ""26""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_true""];\n	""13"" -> ""14""[label=""cfg_true""];\n	""13"" -> ""24""[label=""cfg_false""];\n	""14"" -> ""25""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""21""[label=""cfg_false""];\n	""15"" -> ""26""[label=""cfg_true""];\n	""16"" -> ""26""[label=""cfg_true""];\n	""16"" -> ""4""[label=""cfg_false""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""5""[label=""cfg_next""];\n	""22"" -> ""16""[label=""cfg_next""];\n	""27"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_goto""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.Path.getSingleNodePointerForSteps(EvalContext),Method,"* Given a root context, walks a path therefrom and finds the\n     * pointer to the first element matching the path.\n     * @param context evaluation context\n     * @return Pointer","protected Pointer getSingleNodePointerForSteps(final EvalContext context) {\n    if (steps.length == 0) {\n        return context.getSingleNodePointer();\n    }\n    if (isSimplePath()) {\n        final NodePointer ptr = (NodePointer) context.getSingleNodePointer();\n        return SimplePathInterpreter.interpretSimpleLocationPath(context, ptr, steps);\n    }\n    return searchForPath(context);\n}",org.apache.commons.jxpath.Pointer getSingleNodePointerForSteps(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_getSingleNodePointerForSteps {\n	""1"" [label=""$stack10 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""3"" [label=""$stack4 = lengthof $stack3""];\n	""4"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: boolean isSimplePath()>()""];\n	""5"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.Pointer searchForPath(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""6"" [label=""$stack7 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""7"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""8"" [label=""$stack9 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer interpretSimpleLocationPath(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[])>(context, ptr, $stack8)""];\n	""9"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""10"" [label=""if $stack4 != 0""];\n	""11"" [label=""if $stack5 == 0""];\n	""12"" [label=""ptr = (org.apache.commons.jxpath.ri.model.NodePointer) $stack7""];\n	""13"" [label=""return $stack10""];\n	""14"" [label=""return $stack6""];\n	""15"" [label=""return $stack9""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""4""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.Path.searchForPath(EvalContext),Method,"* The idea here is to return a NullPointer rather than null if that's at\n     * all possible. Take for example this path: ""//map/key"". Let's say, ""map""\n     * is an existing node, but ""key"" is not there. We will create a\n     * NullPointer that can be used to set/create the ""key"" property.\n     * <p>\n     * However, a path like ""//key"" would still produce null, because we have\n     * no way of knowing where ""key"" would be if it existed.\n     * </p>\n     * <p>\n     * To accomplish this, we first try the path itself. If it does not find\n     * anything, we chop off last step of the path, as long as it is a simple\n     * one like child:: or attribute:: and try to evaluate the truncated path.\n     * If it finds exactly one node - create a NullPointer and return. If it\n     * fails, chop off another step and repeat. If it finds more than one\n     * location - return null.\n     * </p>\n     * @param context evaluation context\n     * @return Pointer","protected Pointer searchForPath(final EvalContext context) {\n    EvalContext ctx = buildContextChain(context, steps.length, true);\n    final Pointer pointer = ctx.getSingleNodePointer();\n    if (pointer != null) {\n        return pointer;\n    }\n    for (int i = steps.length; --i > 0; ) {\n        if (!isSimpleStep(steps[i])) {\n            return null;\n        }\n        ctx = buildContextChain(context, i, true);\n        if (ctx.hasNext()) {\n            final Pointer partial = (Pointer) ctx.next();\n            if (ctx.hasNext()) {\n                // If we find another location - the search is\n                // ambiguous, so we report failure\n                return null;\n            }\n            if (partial instanceof NodePointer) {\n                return SimplePathInterpreter.createNullPointer(context, (NodePointer) partial, steps, i);\n            }\n        }\n    }\n    return null;\n}",org.apache.commons.jxpath.Pointer searchForPath(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_searchForPath {\n	""1"" [label=""$stack10 = $stack9[i]""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: boolean isSimpleStep(org.apache.commons.jxpath.ri.compiler.Step)>($stack10)""];\n	""3"" [label=""$stack12 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""4"" [label=""$stack13 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""5"" [label=""$stack14 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""6"" [label=""$stack15 = partial instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""7"" [label=""$stack16 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""8"" [label=""$stack17 = (org.apache.commons.jxpath.ri.model.NodePointer) partial""];\n	""9"" [label=""$stack18 = staticinvoke <org.apache.commons.jxpath.ri.axes.SimplePathInterpreter: org.apache.commons.jxpath.ri.model.NodePointer createNullPointer(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.Step[],int)>(context, $stack17, $stack16, i)""];\n	""10"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""11"" [label=""$stack7 = lengthof $stack6""];\n	""12"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""13"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""14"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""15"" [label=""ctx = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.EvalContext buildContextChain(org.apache.commons.jxpath.ri.EvalContext,int,boolean)>(context, $stack7, 1)""];\n	""16"" [label=""ctx = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.EvalContext buildContextChain(org.apache.commons.jxpath.ri.EvalContext,int,boolean)>(context, i, 1)""];\n	""17"" [label=""goto""];\n	""18"" [label=""i = i + -1""];\n	""19"" [label=""i = lengthof $stack8""];\n	""20"" [label=""if $stack11 != 0""];\n	""21"" [label=""if $stack12 == 0""];\n	""22"" [label=""if $stack14 == 0""];\n	""23"" [label=""if $stack15 == 0""];\n	""24"" [label=""if i <= 0""];\n	""25"" [label=""if pointer == null""];\n	""26"" [label=""partial = (org.apache.commons.jxpath.Pointer) $stack13""];\n	""27"" [label=""pointer = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""28"" [label=""return $stack18""];\n	""29"" [label=""return null""];\n	""30"" [label=""return null""];\n	""31"" [label=""return null""];\n	""32"" [label=""return pointer""];\n	""33"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""27""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_goto""];\n	""18"" -> ""24""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_true""];\n	""20"" -> ""30""[label=""cfg_false""];\n	""21"" -> ""18""[label=""cfg_true""];\n	""21"" -> ""4""[label=""cfg_false""];\n	""22"" -> ""31""[label=""cfg_false""];\n	""22"" -> ""6""[label=""cfg_true""];\n	""23"" -> ""17""[label=""cfg_true""];\n	""23"" -> ""8""[label=""cfg_false""];\n	""24"" -> ""13""[label=""cfg_false""];\n	""24"" -> ""29""[label=""cfg_true""];\n	""25"" -> ""12""[label=""cfg_true""];\n	""25"" -> ""32""[label=""cfg_false""];\n	""26"" -> ""5""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""33"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""26""[label=""cfg_next""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""28""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.Path.evalSteps(EvalContext),Method,"* Given a root context, walks a path therefrom and builds a context\n     * that contains all nodes matching the path.\n     * @param context evaluation context\n     * @return EvaluationContext","protected EvalContext evalSteps(final EvalContext context) {\n    return buildContextChain(context, steps.length, false);\n}",org.apache.commons.jxpath.ri.EvalContext evalSteps(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_evalSteps {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""2"" [label=""$stack3 = lengthof $stack2""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.EvalContext buildContextChain(org.apache.commons.jxpath.ri.EvalContext,int,boolean)>(context, $stack3, 0)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.Path.buildContextChain(EvalContext,int,boolean)",Method,* Build a context from a chain of contexts.\n     * @param context evaluation context\n     * @param stepCount number of steps to descend\n     * @param createInitialContext whether to create the initial context\n     * @return created context,"protected EvalContext buildContextChain(EvalContext context, final int stepCount, final boolean createInitialContext) {\n    if (createInitialContext) {\n        context = new InitialContext(context);\n    }\n    if (steps.length == 0) {\n        return context;\n    }\n    for (int i = 0; i < stepCount; i++) {\n        context = createContextForStep(context, steps[i].getAxis(), steps[i].getNodeTest());\n        final Expression[] predicates = steps[i].getPredicates();\n        if (predicates != null) {\n            for (int j = 0; j < predicates.length; j++) {\n                if (j != 0) {\n                    context = new UnionContext(context, new EvalContext[] { context });\n                }\n                context = new PredicateContext(context, predicates[j]);\n            }\n        }\n    }\n    return context;\n}","org.apache.commons.jxpath.ri.EvalContext buildContextChain(org.apache.commons.jxpath.ri.EvalContext,int,boolean)","digraph cfg_buildContextChain {\n	""1"" [label=""$stack10 = $stack9[i]""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""3"" [label=""$stack12 = $stack11[i]""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.NodeTest getNodeTest()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.Step: int getAxis()>()""];\n	""6"" [label=""$stack15 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""7"" [label=""$stack16 = $stack15[i]""];\n	""8"" [label=""$stack17 = lengthof predicates""];\n	""9"" [label=""$stack18 = predicates[j]""];\n	""10"" [label=""$stack19 = new org.apache.commons.jxpath.ri.axes.PredicateContext""];\n	""11"" [label=""$stack20 = newarray (org.apache.commons.jxpath.ri.EvalContext)[1]""];\n	""12"" [label=""$stack20[0] = context""];\n	""13"" [label=""$stack21 = new org.apache.commons.jxpath.ri.axes.UnionContext""];\n	""14"" [label=""$stack22 = new org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""15"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""16"" [label=""$stack8 = lengthof $stack7""];\n	""17"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps>""];\n	""18"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""context = $stack19""];\n	""20"" [label=""context = $stack21""];\n	""21"" [label=""context = $stack22""];\n	""22"" [label=""context = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.EvalContext createContextForStep(org.apache.commons.jxpath.ri.EvalContext,int,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, $stack14, $stack13)""];\n	""23"" [label=""createInitialContext := @parameter2: boolean""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""i = 0""];\n	""27"" [label=""i = i + 1""];\n	""28"" [label=""if $stack8 != 0""];\n	""29"" [label=""if createInitialContext == 0""];\n	""30"" [label=""if i >= stepCount""];\n	""31"" [label=""if j == 0""];\n	""32"" [label=""if j >= $stack17""];\n	""33"" [label=""if predicates == null""];\n	""34"" [label=""j = 0""];\n	""35"" [label=""j = j + 1""];\n	""36"" [label=""predicates = virtualinvoke $stack16.<org.apache.commons.jxpath.ri.compiler.Step: org.apache.commons.jxpath.ri.compiler.Expression[] getPredicates()>()""];\n	""37"" [label=""return context""];\n	""38"" [label=""return context""];\n	""39"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.ri.axes.PredicateContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.Expression)>(context, $stack18)""];\n	""40"" [label=""specialinvoke $stack21.<org.apache.commons.jxpath.ri.axes.UnionContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.EvalContext[])>(context, $stack20)""];\n	""41"" [label=""specialinvoke $stack22.<org.apache.commons.jxpath.ri.axes.InitialContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""42"" [label=""stepCount := @parameter1: int""];\n	""43"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""40""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""41""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""28""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""42""[label=""cfg_next""];\n	""19"" -> ""35""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_next""];\n	""21"" -> ""15""[label=""cfg_next""];\n	""22"" -> ""6""[label=""cfg_next""];\n	""23"" -> ""29""[label=""cfg_next""];\n	""24"" -> ""8""[label=""cfg_goto""];\n	""25"" -> ""30""[label=""cfg_goto""];\n	""26"" -> ""30""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_next""];\n	""28"" -> ""26""[label=""cfg_true""];\n	""28"" -> ""37""[label=""cfg_false""];\n	""29"" -> ""14""[label=""cfg_false""];\n	""29"" -> ""15""[label=""cfg_true""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""17""[label=""cfg_false""];\n	""30"" -> ""38""[label=""cfg_true""];\n	""31"" -> ""10""[label=""cfg_true""];\n	""31"" -> ""13""[label=""cfg_false""];\n	""32"" -> ""27""[label=""cfg_true""];\n	""32"" -> ""31""[label=""cfg_false""];\n	""33"" -> ""27""[label=""cfg_true""];\n	""33"" -> ""34""[label=""cfg_false""];\n	""34"" -> ""8""[label=""cfg_next""];\n	""35"" -> ""24""[label=""cfg_next""];\n	""36"" -> ""33""[label=""cfg_next""];\n	""39"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""40"" -> ""20""[label=""cfg_next""];\n	""41"" -> ""21""[label=""cfg_next""];\n	""42"" -> ""23""[label=""cfg_next""];\n	""43"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""36""[label=""cfg_next""];\n	""8"" -> ""32""[label=""cfg_next""];\n	""9"" -> ""39""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.compiler.Path.createContextForStep(EvalContext,int,NodeTest)",Method,* Different axes are serviced by different contexts. This method\n     * allocates the right context for the supplied step.\n     * @param context evaluation context\n     * @param axis code\n     * @param nodeTest node test\n     * @return EvalContext,"protected EvalContext createContextForStep(final EvalContext context, final int axis, NodeTest nodeTest) {\n    if (nodeTest instanceof NodeNameTest) {\n        final QName qname = ((NodeNameTest) nodeTest).getNodeName();\n        final String prefix = qname.getPrefix();\n        if (prefix != null) {\n            final String namespaceURI = context.getJXPathContext().getNamespaceURI(prefix);\n            nodeTest = new NodeNameTest(qname, namespaceURI);\n        }\n    }\n    switch(axis) {\n        case Compiler.AXIS_ANCESTOR:\n            return new AncestorContext(context, false, nodeTest);\n        case Compiler.AXIS_ANCESTOR_OR_SELF:\n            return new AncestorContext(context, true, nodeTest);\n        case Compiler.AXIS_ATTRIBUTE:\n            return new AttributeContext(context, nodeTest);\n        case Compiler.AXIS_CHILD:\n            return new ChildContext(context, nodeTest, false, false);\n        case Compiler.AXIS_DESCENDANT:\n            return new DescendantContext(context, false, nodeTest);\n        case Compiler.AXIS_DESCENDANT_OR_SELF:\n            return new DescendantContext(context, true, nodeTest);\n        case Compiler.AXIS_FOLLOWING:\n            return new PrecedingOrFollowingContext(context, nodeTest, false);\n        case Compiler.AXIS_FOLLOWING_SIBLING:\n            return new ChildContext(context, nodeTest, true, false);\n        case Compiler.AXIS_NAMESPACE:\n            return new NamespaceContext(context, nodeTest);\n        case Compiler.AXIS_PARENT:\n            return new ParentContext(context, nodeTest);\n        case Compiler.AXIS_PRECEDING:\n            return new PrecedingOrFollowingContext(context, nodeTest, true);\n        case Compiler.AXIS_PRECEDING_SIBLING:\n            return new ChildContext(context, nodeTest, true, true);\n        case Compiler.AXIS_SELF:\n            return new SelfContext(context, nodeTest);\n        default:\n            // Never happens\n            return null;\n    }\n}","org.apache.commons.jxpath.ri.EvalContext createContextForStep(org.apache.commons.jxpath.ri.EvalContext,int,org.apache.commons.jxpath.ri.compiler.NodeTest)","digraph cfg_createContextForStep {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""5"" [label=""$stack14 = new org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.ri.axes.NamespaceContext""];\n	""7"" [label=""$stack16 = new org.apache.commons.jxpath.ri.axes.AttributeContext""];\n	""8"" [label=""$stack17 = new org.apache.commons.jxpath.ri.axes.AncestorContext""];\n	""9"" [label=""$stack18 = new org.apache.commons.jxpath.ri.axes.ParentContext""];\n	""10"" [label=""$stack19 = new org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""11"" [label=""$stack20 = new org.apache.commons.jxpath.ri.axes.SelfContext""];\n	""12"" [label=""$stack21 = (org.apache.commons.jxpath.ri.compiler.NodeNameTest) nodeTest""];\n	""13"" [label=""$stack22 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.JXPathContext getJXPathContext()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""15"" [label=""$stack7 = nodeTest instanceof org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""16"" [label=""$stack8 = new org.apache.commons.jxpath.ri.axes.DescendantContext""];\n	""17"" [label=""$stack9 = new org.apache.commons.jxpath.ri.axes.ChildContext""];\n	""18"" [label=""axis := @parameter1: int""];\n	""19"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""20"" [label=""if $stack7 == 0""];\n	""21"" [label=""if prefix == null""];\n	""22"" [label=""namespaceURI = virtualinvoke $stack22.<org.apache.commons.jxpath.JXPathContext: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""23"" [label=""nodeTest := @parameter2: org.apache.commons.jxpath.ri.compiler.NodeTest""];\n	""24"" [label=""nodeTest = $stack23""];\n	""25"" [label=""prefix = virtualinvoke qname.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""26"" [label=""qname = virtualinvoke $stack21.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName getNodeName()>()""];\n	""27"" [label=""return $stack10""];\n	""28"" [label=""return $stack11""];\n	""29"" [label=""return $stack12""];\n	""30"" [label=""return $stack13""];\n	""31"" [label=""return $stack14""];\n	""32"" [label=""return $stack15""];\n	""33"" [label=""return $stack16""];\n	""34"" [label=""return $stack17""];\n	""35"" [label=""return $stack18""];\n	""36"" [label=""return $stack19""];\n	""37"" [label=""return $stack20""];\n	""38"" [label=""return $stack8""];\n	""39"" [label=""return $stack9""];\n	""40"" [label=""return null""];\n	""41"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.ri.axes.ChildContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,boolean)>(context, nodeTest, 1, 0)""];\n	""42"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.axes.AncestorContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,boolean,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, 1, nodeTest)""];\n	""43"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.axes.DescendantContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,boolean,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, 0, nodeTest)""];\n	""44"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean)>(context, nodeTest, 0)""];\n	""45"" [label=""specialinvoke $stack14.<org.apache.commons.jxpath.ri.axes.PrecedingOrFollowingContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean)>(context, nodeTest, 1)""];\n	""46"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.ri.axes.NamespaceContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, nodeTest)""];\n	""47"" [label=""specialinvoke $stack16.<org.apache.commons.jxpath.ri.axes.AttributeContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, nodeTest)""];\n	""48"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.ri.axes.AncestorContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,boolean,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, 0, nodeTest)""];\n	""49"" [label=""specialinvoke $stack18.<org.apache.commons.jxpath.ri.axes.ParentContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, nodeTest)""];\n	""50"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.ri.axes.ChildContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,boolean)>(context, nodeTest, 0, 0)""];\n	""51"" [label=""specialinvoke $stack20.<org.apache.commons.jxpath.ri.axes.SelfContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, nodeTest)""];\n	""52"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: void <init>(org.apache.commons.jxpath.ri.QName,java.lang.String)>(qname, namespaceURI)""];\n	""53"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.ri.axes.DescendantContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,boolean,org.apache.commons.jxpath.ri.compiler.NodeTest)>(context, 1, nodeTest)""];\n	""54"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.ri.axes.ChildContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,boolean)>(context, nodeTest, 1, 1)""];\n	""55"" [label=""switch(axis) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     default:  \}""];\n	""56"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""1"" -> ""41""[label=""cfg_next""];\n	""10"" -> ""50""[label=""cfg_next""];\n	""11"" -> ""51""[label=""cfg_next""];\n	""12"" -> ""26""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""52""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""53""[label=""cfg_next""];\n	""17"" -> ""54""[label=""cfg_next""];\n	""18"" -> ""23""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""42""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_false""];\n	""20"" -> ""55""[label=""cfg_true""];\n	""21"" -> ""13""[label=""cfg_false""];\n	""21"" -> ""55""[label=""cfg_true""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""15""[label=""cfg_next""];\n	""24"" -> ""55""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""43""[label=""cfg_next""];\n	""4"" -> ""44""[label=""cfg_next""];\n	""41"" -> ""27""[label=""cfg_next""];\n	""42"" -> ""28""[label=""cfg_next""];\n	""43"" -> ""29""[label=""cfg_next""];\n	""44"" -> ""30""[label=""cfg_next""];\n	""45"" -> ""31""[label=""cfg_next""];\n	""46"" -> ""32""[label=""cfg_next""];\n	""47"" -> ""33""[label=""cfg_next""];\n	""48"" -> ""34""[label=""cfg_next""];\n	""49"" -> ""35""[label=""cfg_next""];\n	""5"" -> ""45""[label=""cfg_next""];\n	""50"" -> ""36""[label=""cfg_next""];\n	""51"" -> ""37""[label=""cfg_next""];\n	""52"" -> ""24""[label=""cfg_next""];\n	""53"" -> ""38""[label=""cfg_next""];\n	""54"" -> ""39""[label=""cfg_next""];\n	""55"" -> ""1""[label=""cfg_switch""];\n	""55"" -> ""10""[label=""cfg_switch""];\n	""55"" -> ""11""[label=""cfg_switch""];\n	""55"" -> ""16""[label=""cfg_switch""];\n	""55"" -> ""17""[label=""cfg_switch""];\n	""55"" -> ""2""[label=""cfg_switch""];\n	""55"" -> ""3""[label=""cfg_switch""];\n	""55"" -> ""4""[label=""cfg_switch""];\n	""55"" -> ""40""[label=""cfg_switch""];\n	""55"" -> ""5""[label=""cfg_switch""];\n	""55"" -> ""6""[label=""cfg_switch""];\n	""55"" -> ""7""[label=""cfg_switch""];\n	""55"" -> ""8""[label=""cfg_switch""];\n	""55"" -> ""9""[label=""cfg_switch""];\n	""56"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""46""[label=""cfg_next""];\n	""7"" -> ""47""[label=""cfg_next""];\n	""8"" -> ""48""[label=""cfg_next""];\n	""9"" -> ""49""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.Path.<init>(Step[]),Constructor,* Create a new Path.\n     * @param steps that compose the Path,public Path(final Step[] steps) {\n    this.steps = steps;\n},void <init>(org.apache.commons.jxpath.ri.compiler.Step[]),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Expression: void <init>()>()""];\n	""3"" [label=""steps := @parameter0: org.apache.commons.jxpath.ri.compiler.Step[]""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.Path""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Path: boolean basicKnown> = 0""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.compiler.Path: org.apache.commons.jxpath.ri.compiler.Step[] steps> = steps""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeNameTest.getNodeName(),Method,* Gets the node name.\n     * @return QName,public QName getNodeName() {\n    return qname;\n},org.apache.commons.jxpath.ri.QName getNodeName(),"digraph cfg_getNodeName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName qname>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeNameTest.getNamespaceURI(),Method,* Gets the ns URI.\n     * @return String,public String getNamespaceURI() {\n    return namespaceURI;\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: java.lang.String namespaceURI>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeNameTest.isWildcard(),Method,"* Learn whether this is a wildcard test.\n     * @return {@code true} if the node name is ""*"".","public boolean isWildcard() {\n    return qname.getName().equals(""*"");\n}",boolean isWildcard(),"digraph cfg_isWildcard {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName qname>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>(\""*\"")""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeNameTest.toString(),Method,No Comment,@Override\npublic String toString() {\n    return qname.toString();\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName qname>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.NodeNameTest.<init>(QName),Constructor,* Create a new NodeNameTest.\n     * @param qname name to match,public NodeNameTest(final QName qname) {\n    this.qname = qname;\n},void <init>(org.apache.commons.jxpath.ri.QName),"digraph cfg_init {\n	""1"" [label=""qname := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.NodeTest: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName qname> = qname""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.compiler.NodeNameTest.<init>(QName,String)",Constructor,* Create a new NodeNameTest.\n     * @param qname name to match\n     * @param namespaceURI uri to match,"public NodeNameTest(final QName qname, final String namespaceURI) {\n    this.qname = qname;\n    this.namespaceURI = namespaceURI;\n}","void <init>(org.apache.commons.jxpath.ri.QName,java.lang.String)","digraph cfg_init {\n	""1"" [label=""namespaceURI := @parameter1: java.lang.String""];\n	""2"" [label=""qname := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.NodeTest: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.NodeNameTest""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: java.lang.String namespaceURI> = namespaceURI""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.compiler.NodeNameTest: org.apache.commons.jxpath.ri.QName qname> = qname""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.getFunctionCode(),Method,* Gets the function code.\n     * @return int function code,public int getFunctionCode() {\n    return functionCode;\n},int getFunctionCode(),"digraph cfg_getFunctionCode {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int functionCode>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.getFunctionName(),Method,* Gets the name of this function.\n     * @return String function name,"protected String getFunctionName() {\n    switch(functionCode) {\n        case Compiler.FUNCTION_LAST:\n            return ""last"";\n        case Compiler.FUNCTION_POSITION:\n            return ""position"";\n        case Compiler.FUNCTION_COUNT:\n            return ""count"";\n        case Compiler.FUNCTION_ID:\n            return ""id"";\n        case Compiler.FUNCTION_LOCAL_NAME:\n            return ""local-name"";\n        case Compiler.FUNCTION_NAMESPACE_URI:\n            return ""namespace-uri"";\n        case Compiler.FUNCTION_NAME:\n            return ""name"";\n        case Compiler.FUNCTION_STRING:\n            return ""string"";\n        case Compiler.FUNCTION_CONCAT:\n            return ""concat"";\n        case Compiler.FUNCTION_STARTS_WITH:\n            return ""starts-with"";\n        case Compiler.FUNCTION_ENDS_WITH:\n            return ""ends-with"";\n        case Compiler.FUNCTION_CONTAINS:\n            return ""contains"";\n        case Compiler.FUNCTION_SUBSTRING_BEFORE:\n            return ""substring-before"";\n        case Compiler.FUNCTION_SUBSTRING_AFTER:\n            return ""substring-after"";\n        case Compiler.FUNCTION_SUBSTRING:\n            return ""substring"";\n        case Compiler.FUNCTION_STRING_LENGTH:\n            return ""string-length"";\n        case Compiler.FUNCTION_NORMALIZE_SPACE:\n            return ""normalize-space"";\n        case Compiler.FUNCTION_TRANSLATE:\n            return ""translate"";\n        case Compiler.FUNCTION_BOOLEAN:\n            return ""boolean"";\n        case Compiler.FUNCTION_NOT:\n            return ""not"";\n        case Compiler.FUNCTION_TRUE:\n            return ""true"";\n        case Compiler.FUNCTION_FALSE:\n            return ""false"";\n        case Compiler.FUNCTION_LANG:\n            return ""lang"";\n        case Compiler.FUNCTION_NUMBER:\n            return ""number"";\n        case Compiler.FUNCTION_SUM:\n            return ""sum"";\n        case Compiler.FUNCTION_FLOOR:\n            return ""floor"";\n        case Compiler.FUNCTION_CEILING:\n            return ""ceiling"";\n        case Compiler.FUNCTION_ROUND:\n            return ""round"";\n        case Compiler.FUNCTION_KEY:\n            return ""key"";\n        case Compiler.FUNCTION_FORMAT_NUMBER:\n            return ""format-number"";\n        default:\n            return ""unknownFunction"" + functionCode + ""()"";\n    }\n}",java.lang.String getFunctionName(),"digraph cfg_getFunctionName {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int functionCode>""];\n	""2"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int functionCode>""];\n	""4"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""unknownFunction\"")""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3)""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""()\"")""];\n	""7"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""return \""boolean\""""];\n	""9"" [label=""return \""ceiling\""""];\n	""10"" [label=""return \""concat\""""];\n	""11"" [label=""return \""contains\""""];\n	""12"" [label=""return \""count\""""];\n	""13"" [label=""return \""ends-with\""""];\n	""14"" [label=""return \""false\""""];\n	""15"" [label=""return \""floor\""""];\n	""16"" [label=""return \""format-number\""""];\n	""17"" [label=""return \""id\""""];\n	""18"" [label=""return \""key\""""];\n	""19"" [label=""return \""lang\""""];\n	""20"" [label=""return \""last\""""];\n	""21"" [label=""return \""local-name\""""];\n	""22"" [label=""return \""name\""""];\n	""23"" [label=""return \""namespace-uri\""""];\n	""24"" [label=""return \""normalize-space\""""];\n	""25"" [label=""return \""not\""""];\n	""26"" [label=""return \""number\""""];\n	""27"" [label=""return \""position\""""];\n	""28"" [label=""return \""round\""""];\n	""29"" [label=""return \""starts-with\""""];\n	""30"" [label=""return \""string\""""];\n	""31"" [label=""return \""string-length\""""];\n	""32"" [label=""return \""substring\""""];\n	""33"" [label=""return \""substring-after\""""];\n	""34"" [label=""return \""substring-before\""""];\n	""35"" [label=""return \""sum\""""];\n	""36"" [label=""return \""translate\""""];\n	""37"" [label=""return \""true\""""];\n	""38"" [label=""return $stack7""];\n	""39"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""40"" [label=""switch($stack1) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     case 21:     case 22:     case 23:     case 24:     case 25:     case 26:     case 27:     case 28:     case 29:     case 30:     case 31:     default:  \}""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""40""[label=""cfg_next""];\n	""2"" -> ""39""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""39"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""10""[label=""cfg_switch""];\n	""40"" -> ""11""[label=""cfg_switch""];\n	""40"" -> ""12""[label=""cfg_switch""];\n	""40"" -> ""13""[label=""cfg_switch""];\n	""40"" -> ""14""[label=""cfg_switch""];\n	""40"" -> ""15""[label=""cfg_switch""];\n	""40"" -> ""16""[label=""cfg_switch""];\n	""40"" -> ""17""[label=""cfg_switch""];\n	""40"" -> ""18""[label=""cfg_switch""];\n	""40"" -> ""19""[label=""cfg_switch""];\n	""40"" -> ""2""[label=""cfg_switch""];\n	""40"" -> ""20""[label=""cfg_switch""];\n	""40"" -> ""21""[label=""cfg_switch""];\n	""40"" -> ""22""[label=""cfg_switch""];\n	""40"" -> ""23""[label=""cfg_switch""];\n	""40"" -> ""24""[label=""cfg_switch""];\n	""40"" -> ""25""[label=""cfg_switch""];\n	""40"" -> ""26""[label=""cfg_switch""];\n	""40"" -> ""27""[label=""cfg_switch""];\n	""40"" -> ""28""[label=""cfg_switch""];\n	""40"" -> ""29""[label=""cfg_switch""];\n	""40"" -> ""30""[label=""cfg_switch""];\n	""40"" -> ""31""[label=""cfg_switch""];\n	""40"" -> ""32""[label=""cfg_switch""];\n	""40"" -> ""33""[label=""cfg_switch""];\n	""40"" -> ""34""[label=""cfg_switch""];\n	""40"" -> ""35""[label=""cfg_switch""];\n	""40"" -> ""36""[label=""cfg_switch""];\n	""40"" -> ""37""[label=""cfg_switch""];\n	""40"" -> ""8""[label=""cfg_switch""];\n	""40"" -> ""9""[label=""cfg_switch""];\n	""41"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""38""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.getArg1(),Method,* Convenience method to return the first argument.\n     * @return Expression,public Expression getArg1() {\n    return args[0];\n},org.apache.commons.jxpath.ri.compiler.Expression getArg1(),"digraph cfg_getArg1 {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack2 = $stack1[0]""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.getArg2(),Method,* Convenience method to return the second argument.\n     * @return Expression,public Expression getArg2() {\n    return args[1];\n},org.apache.commons.jxpath.ri.compiler.Expression getArg2(),"digraph cfg_getArg2 {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack2 = $stack1[1]""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.getArg3(),Method,* Convenience method to return the third argument.\n     * @return Expression,public Expression getArg3() {\n    return args[2];\n},org.apache.commons.jxpath.ri.compiler.Expression getArg3(),"digraph cfg_getArg3 {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack2 = $stack1[2]""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.getArgumentCount(),Method,* Gets the number of argument Expressions.\n     * @return int count,public int getArgumentCount() {\n    if (args == null) {\n        return 0;\n    }\n    return args.length;\n},int getArgumentCount(),"digraph cfg_getArgumentCount {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""3"" [label=""$stack3 = lengthof $stack2""];\n	""4"" [label=""if $stack1 != null""];\n	""5"" [label=""return $stack3""];\n	""6"" [label=""return 0""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.computeContextDependent(),Method,"* Returns true if any argument is context dependent or if\n     * the function is last(), position(), boolean(), local-name(),\n     * name(), string(), lang(), number().\n     * @return boolean",@Override\npublic boolean computeContextDependent() {\n    if (super.computeContextDependent()) {\n        return true;\n    }\n    switch(functionCode) {\n        case Compiler.FUNCTION_LAST:\n        case Compiler.FUNCTION_POSITION:\n            return true;\n        case Compiler.FUNCTION_BOOLEAN:\n        case Compiler.FUNCTION_LOCAL_NAME:\n        case Compiler.FUNCTION_NAME:\n        case Compiler.FUNCTION_NAMESPACE_URI:\n        case Compiler.FUNCTION_STRING:\n        case Compiler.FUNCTION_LANG:\n        case Compiler.FUNCTION_NUMBER:\n            return args == null || args.length == 0;\n        case Compiler.FUNCTION_FORMAT_NUMBER:\n            return args != null && args.length == 2;\n        case Compiler.FUNCTION_COUNT:\n        case Compiler.FUNCTION_ID:\n        case Compiler.FUNCTION_CONCAT:\n        case Compiler.FUNCTION_STARTS_WITH:\n        case Compiler.FUNCTION_ENDS_WITH:\n        case Compiler.FUNCTION_CONTAINS:\n        case Compiler.FUNCTION_SUBSTRING_BEFORE:\n        case Compiler.FUNCTION_SUBSTRING_AFTER:\n        case Compiler.FUNCTION_SUBSTRING:\n        case Compiler.FUNCTION_STRING_LENGTH:\n        case Compiler.FUNCTION_NORMALIZE_SPACE:\n        case Compiler.FUNCTION_TRANSLATE:\n        case Compiler.FUNCTION_NOT:\n        case Compiler.FUNCTION_TRUE:\n        case Compiler.FUNCTION_FALSE:\n        case Compiler.FUNCTION_SUM:\n        case Compiler.FUNCTION_FLOOR:\n        case Compiler.FUNCTION_CEILING:\n        case Compiler.FUNCTION_ROUND:\n        default:\n            return false;\n    }\n},boolean computeContextDependent(),"digraph cfg_computeContextDependent {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Operation: boolean computeContextDependent()>()""];\n	""2"" [label=""$stack10 = 0""];\n	""3"" [label=""$stack10 = 1""];\n	""4"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int functionCode>""];\n	""5"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""6"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""7"" [label=""$stack5 = lengthof $stack4""];\n	""8"" [label=""$stack6 = 0""];\n	""9"" [label=""$stack6 = 1""];\n	""10"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""11"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] args>""];\n	""12"" [label=""$stack9 = lengthof $stack8""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack1 == 0""];\n	""16"" [label=""if $stack3 == null""];\n	""17"" [label=""if $stack5 != 2""];\n	""18"" [label=""if $stack7 == null""];\n	""19"" [label=""if $stack9 != 0""];\n	""20"" [label=""return $stack10""];\n	""21"" [label=""return $stack6""];\n	""22"" [label=""return 0""];\n	""23"" [label=""return 1""];\n	""24"" [label=""return 1""];\n	""25"" [label=""switch($stack2) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     case 21:     case 22:     case 23:     case 24:     case 25:     case 26:     case 27:     case 28:     case 29:     case 30:     case 31:     default:  \}""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_goto""];\n	""14"" -> ""21""[label=""cfg_goto""];\n	""15"" -> ""23""[label=""cfg_false""];\n	""15"" -> ""4""[label=""cfg_true""];\n	""16"" -> ""6""[label=""cfg_false""];\n	""16"" -> ""8""[label=""cfg_true""];\n	""17"" -> ""8""[label=""cfg_true""];\n	""17"" -> ""9""[label=""cfg_false""];\n	""18"" -> ""11""[label=""cfg_false""];\n	""18"" -> ""3""[label=""cfg_true""];\n	""19"" -> ""2""[label=""cfg_true""];\n	""19"" -> ""3""[label=""cfg_false""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""25"" -> ""10""[label=""cfg_switch""];\n	""25"" -> ""22""[label=""cfg_switch""];\n	""25"" -> ""24""[label=""cfg_switch""];\n	""25"" -> ""5""[label=""cfg_switch""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.toString(),Method,No Comment,"@Override\npublic String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getFunctionName());\n    buffer.append('(');\n    final Expression[] args = getArguments();\n    if (args != null) {\n        for (int i = 0; i < args.length; i++) {\n            if (i > 0) {\n                buffer.append("", "");\n            }\n            buffer.append(args[i]);\n        }\n    }\n    buffer.append(')');\n    return buffer.toString();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.String getFunctionName()>()""];\n	""3"" [label=""$stack6 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack7 = lengthof args""];\n	""5"" [label=""$stack8 = args[i]""];\n	""6"" [label=""args = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] getArguments()>()""];\n	""7"" [label=""buffer = $stack4""];\n	""8"" [label=""goto""];\n	""9"" [label=""i = 0""];\n	""10"" [label=""i = i + 1""];\n	""11"" [label=""if args == null""];\n	""12"" [label=""if i <= 0""];\n	""13"" [label=""if i >= $stack7""];\n	""14"" [label=""return $stack6""];\n	""15"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""17"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)""];\n	""18"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)""];\n	""19"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8)""];\n	""20"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", \"")""];\n	""21"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_true""];\n	""11"" -> ""9""[label=""cfg_false""];\n	""12"" -> ""20""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""12""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""6""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""21""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_goto""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.compute(EvalContext),Method,No Comment,@Override\npublic Object compute(final EvalContext context) {\n    return computeValue(context);\n},java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_compute {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.computeValue(EvalContext),Method,No Comment,@Override\npublic Object computeValue(final EvalContext context) {\n    switch(functionCode) {\n        case Compiler.FUNCTION_LAST:\n            return functionLast(context);\n        case Compiler.FUNCTION_POSITION:\n            return functionPosition(context);\n        case Compiler.FUNCTION_COUNT:\n            return functionCount(context);\n        case Compiler.FUNCTION_LANG:\n            return functionLang(context);\n        case Compiler.FUNCTION_ID:\n            return functionID(context);\n        case Compiler.FUNCTION_LOCAL_NAME:\n            return functionLocalName(context);\n        case Compiler.FUNCTION_NAMESPACE_URI:\n            return functionNamespaceURI(context);\n        case Compiler.FUNCTION_NAME:\n            return functionName(context);\n        case Compiler.FUNCTION_STRING:\n            return functionString(context);\n        case Compiler.FUNCTION_CONCAT:\n            return functionConcat(context);\n        case Compiler.FUNCTION_STARTS_WITH:\n            return functionStartsWith(context);\n        case Compiler.FUNCTION_ENDS_WITH:\n            return functionEndsWith(context);\n        case Compiler.FUNCTION_CONTAINS:\n            return functionContains(context);\n        case Compiler.FUNCTION_SUBSTRING_BEFORE:\n            return functionSubstringBefore(context);\n        case Compiler.FUNCTION_SUBSTRING_AFTER:\n            return functionSubstringAfter(context);\n        case Compiler.FUNCTION_SUBSTRING:\n            return functionSubstring(context);\n        case Compiler.FUNCTION_STRING_LENGTH:\n            return functionStringLength(context);\n        case Compiler.FUNCTION_NORMALIZE_SPACE:\n            return functionNormalizeSpace(context);\n        case Compiler.FUNCTION_TRANSLATE:\n            return functionTranslate(context);\n        case Compiler.FUNCTION_BOOLEAN:\n            return functionBoolean(context);\n        case Compiler.FUNCTION_NOT:\n            return functionNot(context);\n        case Compiler.FUNCTION_TRUE:\n            return functionTrue(context);\n        case Compiler.FUNCTION_FALSE:\n            return functionFalse(context);\n        case Compiler.FUNCTION_NULL:\n            return functionNull(context);\n        case Compiler.FUNCTION_NUMBER:\n            return functionNumber(context);\n        case Compiler.FUNCTION_SUM:\n            return functionSum(context);\n        case Compiler.FUNCTION_FLOOR:\n            return functionFloor(context);\n        case Compiler.FUNCTION_CEILING:\n            return functionCeiling(context);\n        case Compiler.FUNCTION_ROUND:\n            return functionRound(context);\n        case Compiler.FUNCTION_KEY:\n            return functionKey(context);\n        case Compiler.FUNCTION_FORMAT_NUMBER:\n            return functionFormatNumber(context);\n        default:\n            return null;\n    }\n},java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_computeValue {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionSum(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionNumber(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionLang(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionFalse(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionTrue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""6"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionNot(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""7"" [label=""$stack16 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionBoolean(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""8"" [label=""$stack17 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionTranslate(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""9"" [label=""$stack18 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionNormalizeSpace(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""10"" [label=""$stack19 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionStringLength(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""11"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int functionCode>""];\n	""12"" [label=""$stack20 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionSubstring(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""13"" [label=""$stack21 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionSubstringAfter(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""14"" [label=""$stack22 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionSubstringBefore(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""15"" [label=""$stack23 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionContains(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""16"" [label=""$stack24 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionStartsWith(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""17"" [label=""$stack25 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionConcat(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""18"" [label=""$stack26 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionString(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""19"" [label=""$stack27 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionName(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""20"" [label=""$stack28 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionNamespaceURI(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""21"" [label=""$stack29 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionLocalName(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""22"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionEndsWith(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""23"" [label=""$stack30 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionID(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""24"" [label=""$stack31 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionCount(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""25"" [label=""$stack32 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionPosition(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""26"" [label=""$stack33 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionLast(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""27"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionFormatNumber(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""28"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionKey(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""29"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionNull(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""30"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionRound(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""31"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionCeiling(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""32"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Object functionFloor(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""33"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""34"" [label=""return $stack10""];\n	""35"" [label=""return $stack11""];\n	""36"" [label=""return $stack12""];\n	""37"" [label=""return $stack13""];\n	""38"" [label=""return $stack14""];\n	""39"" [label=""return $stack15""];\n	""40"" [label=""return $stack16""];\n	""41"" [label=""return $stack17""];\n	""42"" [label=""return $stack18""];\n	""43"" [label=""return $stack19""];\n	""44"" [label=""return $stack20""];\n	""45"" [label=""return $stack21""];\n	""46"" [label=""return $stack22""];\n	""47"" [label=""return $stack23""];\n	""48"" [label=""return $stack24""];\n	""49"" [label=""return $stack25""];\n	""50"" [label=""return $stack26""];\n	""51"" [label=""return $stack27""];\n	""52"" [label=""return $stack28""];\n	""53"" [label=""return $stack29""];\n	""54"" [label=""return $stack3""];\n	""55"" [label=""return $stack30""];\n	""56"" [label=""return $stack31""];\n	""57"" [label=""return $stack32""];\n	""58"" [label=""return $stack33""];\n	""59"" [label=""return $stack4""];\n	""60"" [label=""return $stack5""];\n	""61"" [label=""return $stack6""];\n	""62"" [label=""return $stack7""];\n	""63"" [label=""return $stack8""];\n	""64"" [label=""return $stack9""];\n	""65"" [label=""return null""];\n	""66"" [label=""switch($stack2) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     case 13:     case 14:     case 15:     case 16:     case 17:     case 18:     case 19:     case 20:     case 21:     case 22:     case 23:     case 24:     case 25:     case 26:     case 27:     case 28:     case 29:     case 30:     case 31:     default:  \}""];\n	""67"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""34""[label=""cfg_next""];\n	""10"" -> ""43""[label=""cfg_next""];\n	""11"" -> ""66""[label=""cfg_next""];\n	""12"" -> ""44""[label=""cfg_next""];\n	""13"" -> ""45""[label=""cfg_next""];\n	""14"" -> ""46""[label=""cfg_next""];\n	""15"" -> ""47""[label=""cfg_next""];\n	""16"" -> ""48""[label=""cfg_next""];\n	""17"" -> ""49""[label=""cfg_next""];\n	""18"" -> ""50""[label=""cfg_next""];\n	""19"" -> ""51""[label=""cfg_next""];\n	""2"" -> ""35""[label=""cfg_next""];\n	""20"" -> ""52""[label=""cfg_next""];\n	""21"" -> ""53""[label=""cfg_next""];\n	""22"" -> ""54""[label=""cfg_next""];\n	""23"" -> ""55""[label=""cfg_next""];\n	""24"" -> ""56""[label=""cfg_next""];\n	""25"" -> ""57""[label=""cfg_next""];\n	""26"" -> ""58""[label=""cfg_next""];\n	""27"" -> ""59""[label=""cfg_next""];\n	""28"" -> ""60""[label=""cfg_next""];\n	""29"" -> ""61""[label=""cfg_next""];\n	""3"" -> ""36""[label=""cfg_next""];\n	""30"" -> ""62""[label=""cfg_next""];\n	""31"" -> ""63""[label=""cfg_next""];\n	""32"" -> ""64""[label=""cfg_next""];\n	""33"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""37""[label=""cfg_next""];\n	""5"" -> ""38""[label=""cfg_next""];\n	""6"" -> ""39""[label=""cfg_next""];\n	""66"" -> ""1""[label=""cfg_switch""];\n	""66"" -> ""10""[label=""cfg_switch""];\n	""66"" -> ""12""[label=""cfg_switch""];\n	""66"" -> ""13""[label=""cfg_switch""];\n	""66"" -> ""14""[label=""cfg_switch""];\n	""66"" -> ""15""[label=""cfg_switch""];\n	""66"" -> ""16""[label=""cfg_switch""];\n	""66"" -> ""17""[label=""cfg_switch""];\n	""66"" -> ""18""[label=""cfg_switch""];\n	""66"" -> ""19""[label=""cfg_switch""];\n	""66"" -> ""2""[label=""cfg_switch""];\n	""66"" -> ""20""[label=""cfg_switch""];\n	""66"" -> ""21""[label=""cfg_switch""];\n	""66"" -> ""22""[label=""cfg_switch""];\n	""66"" -> ""23""[label=""cfg_switch""];\n	""66"" -> ""24""[label=""cfg_switch""];\n	""66"" -> ""25""[label=""cfg_switch""];\n	""66"" -> ""26""[label=""cfg_switch""];\n	""66"" -> ""27""[label=""cfg_switch""];\n	""66"" -> ""28""[label=""cfg_switch""];\n	""66"" -> ""29""[label=""cfg_switch""];\n	""66"" -> ""3""[label=""cfg_switch""];\n	""66"" -> ""30""[label=""cfg_switch""];\n	""66"" -> ""31""[label=""cfg_switch""];\n	""66"" -> ""32""[label=""cfg_switch""];\n	""66"" -> ""4""[label=""cfg_switch""];\n	""66"" -> ""5""[label=""cfg_switch""];\n	""66"" -> ""6""[label=""cfg_switch""];\n	""66"" -> ""65""[label=""cfg_switch""];\n	""66"" -> ""7""[label=""cfg_switch""];\n	""66"" -> ""8""[label=""cfg_switch""];\n	""66"" -> ""9""[label=""cfg_switch""];\n	""67"" -> ""33""[label=""cfg_next""];\n	""7"" -> ""40""[label=""cfg_next""];\n	""8"" -> ""41""[label=""cfg_next""];\n	""9"" -> ""42""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLast(EvalContext),Method,* last() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionLast(final EvalContext context) {\n    assertArgCount(0);\n    // Move the position to the beginning and iterate through\n    // the context to count nodes.\n    final int old = context.getCurrentPosition();\n    context.reset();\n    int count = 0;\n    while (context.nextNode()) {\n        count++;\n    }\n    // Restore the current position.\n    if (old != 0) {\n        context.setPosition(old);\n    }\n    return Double.valueOf(count);\n},java.lang.Object functionLast(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionLast {\n	""1"" [label=""$stack4 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""2"" [label=""$stack5 = (double) count""];\n	""3"" [label=""$stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack5)""];\n	""4"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""5"" [label=""count = 0""];\n	""6"" [label=""count = count + 1""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if old == 0""];\n	""10"" [label=""old = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: int getCurrentPosition()>()""];\n	""11"" [label=""return $stack6""];\n	""12"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(0)""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""14"" [label=""virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>(old)""];\n	""15"" [label=""virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_goto""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n	""9"" -> ""14""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionPosition(EvalContext),Method,* position() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionPosition(final EvalContext context) {\n    assertArgCount(0);\n    return Integer.valueOf(context.getCurrentPosition());\n},java.lang.Object functionPosition(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionPosition {\n	""1"" [label=""$stack2 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: int getCurrentPosition()>()""];\n	""2"" [label=""$stack3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack2)""];\n	""3"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(0)""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionCount(EvalContext),Method,* count() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionCount(final EvalContext context) {\n    assertArgCount(1);\n    final Expression arg1 = getArg1();\n    int count = 0;\n    Object value = arg1.compute(context);\n    if (value instanceof NodePointer) {\n        value = ((NodePointer) value).getValue();\n    }\n    if (value instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) value;\n        while (ctx.hasNext()) {\n            ctx.next();\n            count++;\n        }\n    } else if (value instanceof Collection) {\n        count = ((Collection) value).size();\n    } else if (value == null) {\n        count = 0;\n    } else {\n        count = 1;\n    }\n    return Double.valueOf(count);\n},java.lang.Object functionCount(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionCount {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack9)""];\n	""2"" [label=""$stack11 = (java.util.Collection) value""];\n	""3"" [label=""$stack12 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""4"" [label=""$stack13 = (org.apache.commons.jxpath.ri.model.NodePointer) value""];\n	""5"" [label=""$stack6 = value instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""6"" [label=""$stack7 = value instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""$stack8 = value instanceof java.util.Collection""];\n	""8"" [label=""$stack9 = (double) count""];\n	""9"" [label=""arg1 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""11"" [label=""count = 0""];\n	""12"" [label=""count = 0""];\n	""13"" [label=""count = 1""];\n	""14"" [label=""count = count + 1""];\n	""15"" [label=""count = interfaceinvoke $stack11.<java.util.Collection: int size()>()""];\n	""16"" [label=""ctx = (org.apache.commons.jxpath.ri.EvalContext) value""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""if $stack12 == 0""];\n	""22"" [label=""if $stack6 == 0""];\n	""23"" [label=""if $stack7 == 0""];\n	""24"" [label=""if $stack8 == 0""];\n	""25"" [label=""if value != null""];\n	""26"" [label=""return $stack10""];\n	""27"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""28"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""29"" [label=""value = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""30"" [label=""value = virtualinvoke arg1.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""31"" [label=""virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_next""];\n	""11"" -> ""30""[label=""cfg_next""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_next""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""8""[label=""cfg_goto""];\n	""18"" -> ""3""[label=""cfg_goto""];\n	""19"" -> ""8""[label=""cfg_goto""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""20"" -> ""8""[label=""cfg_goto""];\n	""21"" -> ""17""[label=""cfg_true""];\n	""21"" -> ""31""[label=""cfg_false""];\n	""22"" -> ""4""[label=""cfg_false""];\n	""22"" -> ""6""[label=""cfg_true""];\n	""23"" -> ""16""[label=""cfg_false""];\n	""23"" -> ""7""[label=""cfg_true""];\n	""24"" -> ""2""[label=""cfg_false""];\n	""24"" -> ""25""[label=""cfg_true""];\n	""25"" -> ""12""[label=""cfg_false""];\n	""25"" -> ""13""[label=""cfg_true""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""28"" -> ""10""[label=""cfg_next""];\n	""29"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""30"" -> ""5""[label=""cfg_next""];\n	""31"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""29""[label=""cfg_next""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""24""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLang(EvalContext),Method,* lang() implementation.\n     * @param context evaluation context\n     * @return Boolean,protected Object functionLang(final EvalContext context) {\n    assertArgCount(1);\n    final String lang = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final NodePointer pointer = (NodePointer) context.getSingleNodePointer();\n    if (pointer == null) {\n        return Boolean.FALSE;\n    }\n    return pointer.isLanguage(lang) ? Boolean.TRUE : Boolean.FALSE;\n},java.lang.Object functionLang(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionLang {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack6 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""4"" [label=""$stack7 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isLanguage(java.lang.String)>(lang)""];\n	""5"" [label=""$stack8 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""6"" [label=""$stack8 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""7"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack7 == 0""];\n	""11"" [label=""if pointer != null""];\n	""12"" [label=""lang = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack5)""];\n	""13"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack6""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""return $stack9""];\n	""16"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_true""];\n	""10"" -> ""6""[label=""cfg_false""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_goto""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionID(EvalContext),Method,* id() implementation.\n     * @param context evaluation context\n     * @return Pointer,"protected Object functionID(final EvalContext context) {\n    assertArgCount(1);\n    final String id = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final JXPathContext jxpathContext = context.getJXPathContext();\n    final NodePointer pointer = (NodePointer) jxpathContext.getContextPointer();\n    return pointer.getPointerByID(jxpathContext, id);\n}",java.lang.Object functionID(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionID {\n	""1"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack7 = virtualinvoke jxpathContext.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Pointer getContextPointer()>()""];\n	""4"" [label=""$stack8 = virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.Pointer getPointerByID(org.apache.commons.jxpath.JXPathContext,java.lang.String)>(jxpathContext, id)""];\n	""5"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""6"" [label=""id = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack6)""];\n	""7"" [label=""jxpathContext = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.JXPathContext getJXPathContext()>()""];\n	""8"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack7""];\n	""9"" [label=""return $stack8""];\n	""10"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionKey(EvalContext),Method,* key() implementation.\n     * @param context evaluation context\n     * @return various Object,"protected Object functionKey(final EvalContext context) {\n    assertArgCount(2);\n    final String key = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    Object value = getArg2().compute(context);\n    EvalContext ec = null;\n    if (value instanceof EvalContext) {\n        ec = (EvalContext) value;\n        if (ec.hasNext()) {\n            value = ((NodePointer) ec.next()).getValue();\n        } else {\n            // empty context -> empty results\n            return new NodeSetContext(context, new BasicNodeSet());\n        }\n    }\n    final JXPathContext jxpathContext = context.getJXPathContext();\n    NodeSet nodeSet = jxpathContext.getNodeSetByKey(key, value);\n    if (ec != null && ec.hasNext()) {\n        final BasicNodeSet accum = new BasicNodeSet();\n        accum.add(nodeSet);\n        while (ec.hasNext()) {\n            value = ((NodePointer) ec.next()).getValue();\n            accum.add(jxpathContext.getNodeSetByKey(key, value));\n        }\n        nodeSet = accum;\n    }\n    return new NodeSetContext(context, nodeSet);\n}",java.lang.Object functionKey(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionKey {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""2"" [label=""$stack11 = value instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""4"" [label=""$stack13 = virtualinvoke ec.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""5"" [label=""$stack14 = new org.apache.commons.jxpath.BasicNodeSet""];\n	""6"" [label=""$stack15 = virtualinvoke ec.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""7"" [label=""$stack16 = virtualinvoke ec.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""8"" [label=""$stack17 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack16""];\n	""9"" [label=""$stack18 = virtualinvoke jxpathContext.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.NodeSet getNodeSetByKey(java.lang.String,java.lang.Object)>(key, value)""];\n	""10"" [label=""$stack19 = virtualinvoke ec.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""11"" [label=""$stack20 = new org.apache.commons.jxpath.BasicNodeSet""];\n	""12"" [label=""$stack21 = new org.apache.commons.jxpath.ri.axes.NodeSetContext""];\n	""13"" [label=""$stack22 = virtualinvoke ec.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""14"" [label=""$stack23 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack22""];\n	""15"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""16"" [label=""$stack9 = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""17"" [label=""accum = $stack14""];\n	""18"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""ec = (org.apache.commons.jxpath.ri.EvalContext) value""];\n	""20"" [label=""ec = null""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack11 == 0""];\n	""24"" [label=""if $stack13 == 0""];\n	""25"" [label=""if $stack15 == 0""];\n	""26"" [label=""if $stack19 == 0""];\n	""27"" [label=""if ec == null""];\n	""28"" [label=""jxpathContext = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.JXPathContext getJXPathContext()>()""];\n	""29"" [label=""key = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack9)""];\n	""30"" [label=""nodeSet = accum""];\n	""31"" [label=""nodeSet = virtualinvoke jxpathContext.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.NodeSet getNodeSetByKey(java.lang.String,java.lang.Object)>(key, value)""];\n	""32"" [label=""return $stack12""];\n	""33"" [label=""return $stack21""];\n	""34"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.ri.axes.NodeSetContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.NodeSet)>(context, nodeSet)""];\n	""35"" [label=""specialinvoke $stack14.<org.apache.commons.jxpath.BasicNodeSet: void <init>()>()""];\n	""36"" [label=""specialinvoke $stack20.<org.apache.commons.jxpath.BasicNodeSet: void <init>()>()""];\n	""37"" [label=""specialinvoke $stack21.<org.apache.commons.jxpath.ri.axes.NodeSetContext: void <init>(org.apache.commons.jxpath.ri.EvalContext,org.apache.commons.jxpath.NodeSet)>(context, $stack20)""];\n	""38"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(2)""];\n	""39"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""40"" [label=""value = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""41"" [label=""value = virtualinvoke $stack17.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""42"" [label=""value = virtualinvoke $stack23.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""43"" [label=""virtualinvoke accum.<org.apache.commons.jxpath.BasicNodeSet: void add(org.apache.commons.jxpath.NodeSet)>($stack18)""];\n	""44"" [label=""virtualinvoke accum.<org.apache.commons.jxpath.BasicNodeSet: void add(org.apache.commons.jxpath.NodeSet)>(nodeSet)""];\n	""1"" -> ""40""[label=""cfg_next""];\n	""10"" -> ""26""[label=""cfg_next""];\n	""11"" -> ""36""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""42""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""29""[label=""cfg_next""];\n	""17"" -> ""44""[label=""cfg_next""];\n	""18"" -> ""38""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_next""];\n	""21"" -> ""28""[label=""cfg_goto""];\n	""22"" -> ""6""[label=""cfg_goto""];\n	""23"" -> ""19""[label=""cfg_false""];\n	""23"" -> ""28""[label=""cfg_true""];\n	""24"" -> ""3""[label=""cfg_true""];\n	""24"" -> ""5""[label=""cfg_false""];\n	""25"" -> ""30""[label=""cfg_true""];\n	""25"" -> ""7""[label=""cfg_false""];\n	""26"" -> ""12""[label=""cfg_true""];\n	""26"" -> ""13""[label=""cfg_false""];\n	""27"" -> ""3""[label=""cfg_true""];\n	""27"" -> ""4""[label=""cfg_false""];\n	""28"" -> ""31""[label=""cfg_next""];\n	""29"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""34""[label=""cfg_next""];\n	""30"" -> ""3""[label=""cfg_next""];\n	""31"" -> ""27""[label=""cfg_next""];\n	""34"" -> ""32""[label=""cfg_next""];\n	""35"" -> ""17""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""33""[label=""cfg_next""];\n	""38"" -> ""15""[label=""cfg_next""];\n	""39"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_next""];\n	""40"" -> ""20""[label=""cfg_next""];\n	""41"" -> ""9""[label=""cfg_next""];\n	""42"" -> ""21""[label=""cfg_next""];\n	""43"" -> ""22""[label=""cfg_next""];\n	""44"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""35""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""41""[label=""cfg_next""];\n	""9"" -> ""43""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNamespaceURI(EvalContext),Method,* namespace-uri() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionNamespaceURI(final EvalContext context) {\n    if (getArgumentCount() == 0) {\n        final NodePointer ptr = context.getCurrentNodePointer();\n        final String str = ptr.getNamespaceURI();\n        return str == null ? """" : str;\n    }\n    assertArgCount(1);\n    final Object set = getArg1().compute(context);\n    if (set instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) set;\n        if (ctx.hasNext()) {\n            final NodePointer ptr = (NodePointer) ctx.next();\n            final String str = ptr.getNamespaceURI();\n            return str == null ? """" : str;\n        }\n    }\n    return """";\n}",java.lang.Object functionNamespaceURI(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionNamespaceURI {\n	""1"" [label=""$stack10 = virtualinvoke str.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""2"" [label=""$stack11 = \""\""""];\n	""3"" [label=""$stack11 = str_1""];\n	""4"" [label=""$stack12 = \""\""""];\n	""5"" [label=""$stack12 = str""];\n	""6"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""7"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""8"" [label=""$stack8 = ptr instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""$stack9 = virtualinvoke str.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack6 != 0""];\n	""14"" [label=""if $stack8 == 0""];\n	""15"" [label=""if $stack9 == 0""];\n	""16"" [label=""if str != null""];\n	""17"" [label=""if str_1 != null""];\n	""18"" [label=""ptr = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""19"" [label=""ptr = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""20"" [label=""ptr_1 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack10""];\n	""21"" [label=""return \""\""""];\n	""22"" [label=""return $stack11""];\n	""23"" [label=""return $stack12""];\n	""24"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""25"" [label=""str = (org.apache.commons.jxpath.ri.EvalContext) ptr""];\n	""26"" [label=""str = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI()>()""];\n	""27"" [label=""str_1 = virtualinvoke ptr_1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String getNamespaceURI()>()""];\n	""28"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_goto""];\n	""12"" -> ""22""[label=""cfg_goto""];\n	""13"" -> ""19""[label=""cfg_false""];\n	""13"" -> ""24""[label=""cfg_true""];\n	""14"" -> ""21""[label=""cfg_true""];\n	""14"" -> ""25""[label=""cfg_false""];\n	""15"" -> ""1""[label=""cfg_false""];\n	""15"" -> ""21""[label=""cfg_true""];\n	""16"" -> ""4""[label=""cfg_false""];\n	""16"" -> ""5""[label=""cfg_true""];\n	""17"" -> ""2""[label=""cfg_false""];\n	""17"" -> ""3""[label=""cfg_true""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""26""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""27""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""9""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_next""];\n	""27"" -> ""17""[label=""cfg_next""];\n	""28"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionLocalName(EvalContext),Method,* local-name() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionLocalName(final EvalContext context) {\n    if (getArgumentCount() == 0) {\n        final NodePointer ptr = context.getCurrentNodePointer();\n        return ptr.getName().getName();\n    }\n    assertArgCount(1);\n    final Object set = getArg1().compute(context);\n    if (set instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) set;\n        if (ctx.hasNext()) {\n            final NodePointer ptr = (NodePointer) ctx.next();\n            return ptr.getName().getName();\n        }\n    }\n    return """";\n}",java.lang.Object functionLocalName(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionLocalName {\n	""1"" [label=""$stack10 = virtualinvoke ptr_1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""3"" [label=""$stack12 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""5"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""6"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""7"" [label=""$stack7 = ptr instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""$stack8 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""9"" [label=""$stack9 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""11"" [label=""ctx = (org.apache.commons.jxpath.ri.EvalContext) ptr""];\n	""12"" [label=""if $stack5 != 0""];\n	""13"" [label=""if $stack7 == 0""];\n	""14"" [label=""if $stack8 == 0""];\n	""15"" [label=""ptr = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""16"" [label=""ptr = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""17"" [label=""ptr_1 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack9""];\n	""18"" [label=""return \""\""""];\n	""19"" [label=""return $stack11""];\n	""20"" [label=""return $stack13""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""12"" -> ""21""[label=""cfg_true""];\n	""13"" -> ""11""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""6""[label=""cfg_next""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionName(EvalContext),Method,* name() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionName(final EvalContext context) {\n    if (getArgumentCount() == 0) {\n        final NodePointer ptr = context.getCurrentNodePointer();\n        return ptr.getName().toString();\n    }\n    assertArgCount(1);\n    final Object set = getArg1().compute(context);\n    if (set instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) set;\n        if (ctx.hasNext()) {\n            final NodePointer ptr = (NodePointer) ctx.next();\n            return ptr.getName().toString();\n        }\n    }\n    return """";\n}",java.lang.Object functionName(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionName {\n	""1"" [label=""$stack10 = virtualinvoke ptr_1.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""3"" [label=""$stack12 = virtualinvoke ptr.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.QName getName()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""5"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""6"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""7"" [label=""$stack7 = ptr instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""$stack8 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""9"" [label=""$stack9 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""10"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""11"" [label=""ctx = (org.apache.commons.jxpath.ri.EvalContext) ptr""];\n	""12"" [label=""if $stack5 != 0""];\n	""13"" [label=""if $stack7 == 0""];\n	""14"" [label=""if $stack8 == 0""];\n	""15"" [label=""ptr = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""16"" [label=""ptr = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""17"" [label=""ptr_1 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack9""];\n	""18"" [label=""return \""\""""];\n	""19"" [label=""return $stack11""];\n	""20"" [label=""return $stack13""];\n	""21"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""12"" -> ""21""[label=""cfg_true""];\n	""13"" -> ""11""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""6""[label=""cfg_next""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionString(EvalContext),Method,* string() implementation.\n     * @param context evaluation context\n     * @return String,protected Object functionString(final EvalContext context) {\n    if (getArgumentCount() == 0) {\n        return InfoSetUtil.stringValue(context.getCurrentNodePointer());\n    }\n    assertArgCount(1);\n    return InfoSetUtil.stringValue(getArg1().computeValue(context));\n},java.lang.Object functionString(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionString {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack4)""];\n	""5"" [label=""$stack6 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""6"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack6)""];\n	""7"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""if $stack2 != 0""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionConcat(EvalContext),Method,* concat() implementation.\n     * @param context evaluation context\n     * @return String,protected Object functionConcat(final EvalContext context) {\n    if (getArgumentCount() < 2) {\n        assertArgCount(2);\n    }\n    final StringBuilder buffer = new StringBuilder();\n    final Expression[] args = getArguments();\n    for (final Expression arg : args) {\n        buffer.append(InfoSetUtil.stringValue(arg.compute(context)));\n    }\n    return buffer.toString();\n},java.lang.Object functionConcat(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionConcat {\n	""1"" [label=""$stack10 = virtualinvoke buffer.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = virtualinvoke arg.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack12 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack11)""];\n	""4"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""5"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""6"" [label=""arg = l4[l6]""];\n	""7"" [label=""args = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression[] getArguments()>()""];\n	""8"" [label=""buffer = $stack9""];\n	""9"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack8 >= 2""];\n	""12"" [label=""if l6 >= l5""];\n	""13"" [label=""l4 = args""];\n	""14"" [label=""l5 = lengthof l4""];\n	""15"" [label=""l6 = 0""];\n	""16"" [label=""l6 = l6 + 1""];\n	""17"" [label=""return $stack10""];\n	""18"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""19"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(2)""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""21"" [label=""virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12)""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_goto""];\n	""11"" -> ""19""[label=""cfg_false""];\n	""11"" -> ""5""[label=""cfg_true""];\n	""12"" -> ""1""[label=""cfg_true""];\n	""12"" -> ""6""[label=""cfg_false""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionStartsWith(EvalContext),Method,* starts-with() implementation.\n     * @param context evaluation context\n     * @return Boolean,protected Object functionStartsWith(final EvalContext context) {\n    assertArgCount(2);\n    final String s1 = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final String s2 = InfoSetUtil.stringValue(getArg2().computeValue(context));\n    return s1.startsWith(s2) ? Boolean.TRUE : Boolean.FALSE;\n},java.lang.Object functionStartsWith(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionStartsWith {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack8 = virtualinvoke s1.<java.lang.String: boolean startsWith(java.lang.String)>(s2)""];\n	""6"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""7"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""return $stack9""];\n	""12"" [label=""s1 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack5)""];\n	""13"" [label=""s2 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack7)""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(2)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_goto""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionEndsWith(EvalContext),Method,* ends-with() implementation.\n     * @param context evaluation context\n     * @return Boolean\n     * @since 1.4,protected Object functionEndsWith(final EvalContext context) {\n    assertArgCount(2);\n    final String s1 = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final String s2 = InfoSetUtil.stringValue(getArg2().computeValue(context));\n    return s1.endsWith(s2) ? Boolean.TRUE : Boolean.FALSE;\n},java.lang.Object functionEndsWith(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionEndsWith {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack8 = virtualinvoke s1.<java.lang.String: boolean endsWith(java.lang.String)>(s2)""];\n	""6"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""7"" [label=""$stack9 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""return $stack9""];\n	""12"" [label=""s1 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack5)""];\n	""13"" [label=""s2 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack7)""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(2)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_goto""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionContains(EvalContext),Method,* contains() implementation.\n     * @param context evaluation context\n     * @return Boolean,protected Object functionContains(final EvalContext context) {\n    assertArgCount(2);\n    final String s1 = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final String s2 = InfoSetUtil.stringValue(getArg2().computeValue(context));\n    return Boolean.valueOf(s1.contains(s2));\n},java.lang.Object functionContains(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionContains {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack8 = virtualinvoke s1.<java.lang.String: boolean contains(java.lang.CharSequence)>(s2)""];\n	""6"" [label=""$stack9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack8)""];\n	""7"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""return $stack9""];\n	""9"" [label=""s1 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack5)""];\n	""10"" [label=""s2 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack7)""];\n	""11"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(2)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstringBefore(EvalContext),Method,* substring-before() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionSubstringBefore(final EvalContext context) {\n    assertArgCount(2);\n    final String s1 = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final String s2 = InfoSetUtil.stringValue(getArg2().computeValue(context));\n    final int index = s1.indexOf(s2);\n    if (index == -1) {\n        return """";\n    }\n    return s1.substring(0, index);\n}",java.lang.Object functionSubstringBefore(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionSubstringBefore {\n	""1"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""4"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack9 = virtualinvoke s1.<java.lang.String: java.lang.String substring(int,int)>(0, index)""];\n	""6"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""if index != -1""];\n	""8"" [label=""index = virtualinvoke s1.<java.lang.String: int indexOf(java.lang.String)>(s2)""];\n	""9"" [label=""return \""\""""];\n	""10"" [label=""return $stack9""];\n	""11"" [label=""s1 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack6)""];\n	""12"" [label=""s2 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack8)""];\n	""13"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(2)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_true""];\n	""7"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""7""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstringAfter(EvalContext),Method,* substring-after() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionSubstringAfter(final EvalContext context) {\n    assertArgCount(2);\n    final String s1 = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final String s2 = InfoSetUtil.stringValue(getArg2().computeValue(context));\n    final int index = s1.indexOf(s2);\n    if (index == -1) {\n        return """";\n    }\n    return s1.substring(index + s2.length());\n}",java.lang.Object functionSubstringAfter(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionSubstringAfter {\n	""1"" [label=""$stack10 = index + $stack9""];\n	""2"" [label=""$stack11 = virtualinvoke s1.<java.lang.String: java.lang.String substring(int)>($stack10)""];\n	""3"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""6"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""7"" [label=""$stack9 = virtualinvoke s2.<java.lang.String: int length()>()""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""if index != -1""];\n	""10"" [label=""index = virtualinvoke s1.<java.lang.String: int indexOf(java.lang.String)>(s2)""];\n	""11"" [label=""return \""\""""];\n	""12"" [label=""return $stack11""];\n	""13"" [label=""s1 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack6)""];\n	""14"" [label=""s2 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack8)""];\n	""15"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(2)""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""16"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_false""];\n	""9"" -> ""7""[label=""cfg_true""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSubstring(EvalContext),Method,* substring() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionSubstring(final EvalContext context) {\n    final int minArgs = 2;\n    final int maxArgs = 3;\n    assertArgRange(minArgs, maxArgs);\n    final int ac = getArgumentCount();\n    final String s1 = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    double from = InfoSetUtil.doubleValue(getArg2().computeValue(context));\n    if (Double.isNaN(from)) {\n        return """";\n    }\n    from = Math.round(from);\n    if (from > s1.length() + 1) {\n        return """";\n    }\n    if (ac == 2) {\n        if (from < 1) {\n            from = 1;\n        }\n        return s1.substring((int) from - 1);\n    }\n    double length = InfoSetUtil.doubleValue(getArg3().computeValue(context));\n    length = Math.round(length);\n    if (length < 0) {\n        return """";\n    }\n    final double to = from + length;\n    if (to < 1) {\n        return """";\n    }\n    if (to > s1.length() + 1) {\n        if (from < 1) {\n            from = 1;\n        }\n        return s1.substring((int) from - 1);\n    }\n    if (from < 1) {\n        from = 1;\n    }\n    return s1.substring((int) from - 1, (int) (to - 1));\n}",java.lang.Object functionSubstring(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionSubstring {\n	""1"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""4"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack16 = staticinvoke <java.lang.Double: boolean isNaN(double)>(from)""];\n	""6"" [label=""$stack17 = staticinvoke <java.lang.Math: long round(double)>(from)""];\n	""7"" [label=""$stack18 = virtualinvoke s1.<java.lang.String: int length()>()""];\n	""8"" [label=""$stack19 = $stack18 + 1""];\n	""9"" [label=""$stack20 = (double) $stack19""];\n	""10"" [label=""$stack21 = from cmpl $stack20""];\n	""11"" [label=""$stack22 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg3()>()""];\n	""12"" [label=""$stack23 = virtualinvoke $stack22.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""13"" [label=""$stack24 = staticinvoke <java.lang.Math: long round(double)>(length)""];\n	""14"" [label=""$stack25 = length cmpg 0.0""];\n	""15"" [label=""$stack26 = to cmpg 1.0""];\n	""16"" [label=""$stack27 = virtualinvoke s1.<java.lang.String: int length()>()""];\n	""17"" [label=""$stack28 = $stack27 + 1""];\n	""18"" [label=""$stack29 = (double) $stack28""];\n	""19"" [label=""$stack30 = to cmpl $stack29""];\n	""20"" [label=""$stack31 = from cmpg 1.0""];\n	""21"" [label=""$stack32 = (int) from""];\n	""22"" [label=""$stack33 = to - 1.0""];\n	""23"" [label=""$stack34 = (int) $stack33""];\n	""24"" [label=""$stack35 = $stack32 - 1""];\n	""25"" [label=""$stack36 = virtualinvoke s1.<java.lang.String: java.lang.String substring(int,int)>($stack35, $stack34)""];\n	""26"" [label=""$stack37 = from cmpg 1.0""];\n	""27"" [label=""$stack38 = (int) from""];\n	""28"" [label=""$stack39 = $stack38 - 1""];\n	""29"" [label=""$stack40 = virtualinvoke s1.<java.lang.String: java.lang.String substring(int)>($stack39)""];\n	""30"" [label=""$stack41 = from cmpg 1.0""];\n	""31"" [label=""$stack42 = (int) from""];\n	""32"" [label=""$stack43 = $stack42 - 1""];\n	""33"" [label=""$stack44 = virtualinvoke s1.<java.lang.String: java.lang.String substring(int)>($stack43)""];\n	""34"" [label=""ac = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""35"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""36"" [label=""from = (double) $stack17""];\n	""37"" [label=""from = 1.0""];\n	""38"" [label=""from = 1.0""];\n	""39"" [label=""from = 1.0""];\n	""40"" [label=""from = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack15)""];\n	""41"" [label=""if $stack16 == 0""];\n	""42"" [label=""if $stack21 <= 0""];\n	""43"" [label=""if $stack25 >= 0""];\n	""44"" [label=""if $stack26 >= 0""];\n	""45"" [label=""if $stack30 <= 0""];\n	""46"" [label=""if $stack31 >= 0""];\n	""47"" [label=""if $stack37 >= 0""];\n	""48"" [label=""if $stack41 >= 0""];\n	""49"" [label=""if ac != 2""];\n	""50"" [label=""length = (double) $stack24""];\n	""51"" [label=""length = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack23)""];\n	""52"" [label=""maxArgs = 3""];\n	""53"" [label=""minArgs = 2""];\n	""54"" [label=""return \""\""""];\n	""55"" [label=""return \""\""""];\n	""56"" [label=""return \""\""""];\n	""57"" [label=""return \""\""""];\n	""58"" [label=""return $stack36""];\n	""59"" [label=""return $stack40""];\n	""60"" [label=""return $stack44""];\n	""61"" [label=""s1 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack13)""];\n	""62"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgRange(int,int)>(2, 3)""];\n	""63"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""64"" [label=""to = from + length""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""42""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""51""[label=""cfg_next""];\n	""13"" -> ""50""[label=""cfg_next""];\n	""14"" -> ""43""[label=""cfg_next""];\n	""15"" -> ""44""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""45""[label=""cfg_next""];\n	""2"" -> ""61""[label=""cfg_next""];\n	""20"" -> ""46""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""22""[label=""cfg_next""];\n	""25"" -> ""58""[label=""cfg_next""];\n	""26"" -> ""47""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""59""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""48""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""60""[label=""cfg_next""];\n	""34"" -> ""1""[label=""cfg_next""];\n	""35"" -> ""53""[label=""cfg_next""];\n	""36"" -> ""7""[label=""cfg_next""];\n	""37"" -> ""31""[label=""cfg_next""];\n	""38"" -> ""27""[label=""cfg_next""];\n	""39"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""40""[label=""cfg_next""];\n	""40"" -> ""5""[label=""cfg_next""];\n	""41"" -> ""54""[label=""cfg_false""];\n	""41"" -> ""6""[label=""cfg_true""];\n	""42"" -> ""49""[label=""cfg_true""];\n	""42"" -> ""55""[label=""cfg_false""];\n	""43"" -> ""56""[label=""cfg_false""];\n	""43"" -> ""64""[label=""cfg_true""];\n	""44"" -> ""16""[label=""cfg_true""];\n	""44"" -> ""57""[label=""cfg_false""];\n	""45"" -> ""20""[label=""cfg_true""];\n	""45"" -> ""26""[label=""cfg_false""];\n	""46"" -> ""21""[label=""cfg_true""];\n	""46"" -> ""39""[label=""cfg_false""];\n	""47"" -> ""27""[label=""cfg_true""];\n	""47"" -> ""38""[label=""cfg_false""];\n	""48"" -> ""31""[label=""cfg_true""];\n	""48"" -> ""37""[label=""cfg_false""];\n	""49"" -> ""11""[label=""cfg_true""];\n	""49"" -> ""30""[label=""cfg_false""];\n	""5"" -> ""41""[label=""cfg_next""];\n	""50"" -> ""14""[label=""cfg_next""];\n	""51"" -> ""13""[label=""cfg_next""];\n	""52"" -> ""62""[label=""cfg_next""];\n	""53"" -> ""52""[label=""cfg_next""];\n	""6"" -> ""36""[label=""cfg_next""];\n	""61"" -> ""3""[label=""cfg_next""];\n	""62"" -> ""34""[label=""cfg_next""];\n	""63"" -> ""35""[label=""cfg_next""];\n	""64"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionStringLength(EvalContext),Method,* string-length() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionStringLength(final EvalContext context) {\n    String s;\n    if (getArgumentCount() == 0) {\n        s = InfoSetUtil.stringValue(context.getCurrentNodePointer());\n    } else {\n        assertArgCount(1);\n        s = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    }\n    return Double.valueOf(s.length());\n},java.lang.Object functionStringLength(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionStringLength {\n	""1"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack6 = virtualinvoke s.<java.lang.String: int length()>()""];\n	""5"" [label=""$stack7 = (double) $stack6""];\n	""6"" [label=""$stack8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack7)""];\n	""7"" [label=""$stack9 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack3 != 0""];\n	""11"" [label=""return $stack8""];\n	""12"" [label=""s = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack5)""];\n	""13"" [label=""s = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack9)""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_goto""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNormalizeSpace(EvalContext),Method,* normalize-space() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionNormalizeSpace(final EvalContext context) {\n    assertArgCount(1);\n    final String s = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final char[] chars = s.toCharArray();\n    int out = 0;\n    int phase = 0;\n    for (int in = 0; in < chars.length; in++) {\n        switch(chars[in]) {\n            case ' ':\n            case '\t':\n            case '\r':\n            case '\n':\n                if (phase == 1) {\n                    // non-space\n                    phase = 2;\n                    chars[out++] = ' ';\n                }\n                break;\n            default:\n                chars[out++] = chars[in];\n                phase = 1;\n        }\n    }\n    if (phase == 2) {\n        // trailing-space\n        out--;\n    }\n    return new String(chars, 0, out);\n}",java.lang.Object functionNormalizeSpace(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionNormalizeSpace {\n	""1"" [label=""$stack10 = new java.lang.String""];\n	""2"" [label=""$stack11 = chars[in]""];\n	""3"" [label=""$stack12 = out""];\n	""4"" [label=""$stack13 = out""];\n	""5"" [label=""$stack14 = chars[in]""];\n	""6"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""8"" [label=""$stack9 = lengthof chars""];\n	""9"" [label=""chars = virtualinvoke s.<java.lang.String: char[] toCharArray()>()""];\n	""10"" [label=""chars[$stack12] = 32""];\n	""11"" [label=""chars[$stack13] = $stack14""];\n	""12"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""if in >= $stack9""];\n	""16"" [label=""if phase != 1""];\n	""17"" [label=""if phase != 2""];\n	""18"" [label=""in = 0""];\n	""19"" [label=""in = in + 1""];\n	""20"" [label=""out = 0""];\n	""21"" [label=""out = out + -1""];\n	""22"" [label=""out = out + 1""];\n	""23"" [label=""out = out + 1""];\n	""24"" [label=""phase = 0""];\n	""25"" [label=""phase = 1""];\n	""26"" [label=""phase = 2""];\n	""27"" [label=""return $stack10""];\n	""28"" [label=""s = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack8)""];\n	""29"" [label=""specialinvoke $stack10.<java.lang.String: void <init>(char[],int,int)>(chars, 0, out)""];\n	""30"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""31"" [label=""switch($stack11) \{     case 9:     case 10:     case 13:     case 32:     default:  \}""];\n	""32"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""29""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""30""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_goto""];\n	""14"" -> ""8""[label=""cfg_goto""];\n	""15"" -> ""17""[label=""cfg_true""];\n	""15"" -> ""2""[label=""cfg_false""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""16"" -> ""26""[label=""cfg_false""];\n	""17"" -> ""1""[label=""cfg_true""];\n	""17"" -> ""21""[label=""cfg_false""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""24""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""24"" -> ""18""[label=""cfg_next""];\n	""25"" -> ""19""[label=""cfg_next""];\n	""26"" -> ""3""[label=""cfg_next""];\n	""28"" -> ""9""[label=""cfg_next""];\n	""29"" -> ""27""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""30"" -> ""6""[label=""cfg_next""];\n	""31"" -> ""16""[label=""cfg_switch""];\n	""31"" -> ""4""[label=""cfg_switch""];\n	""32"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""28""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionTranslate(EvalContext),Method,* translate() implementation.\n     * @param context evaluation context\n     * @return String,"protected Object functionTranslate(final EvalContext context) {\n    final int argCount = 3;\n    assertArgCount(argCount);\n    final String s1 = InfoSetUtil.stringValue(getArg1().computeValue(context));\n    final String s2 = InfoSetUtil.stringValue(getArg2().computeValue(context));\n    final String s3 = InfoSetUtil.stringValue(getArg3().computeValue(context));\n    final char[] chars = s1.toCharArray();\n    int out = 0;\n    for (int in = 0; in < chars.length; in++) {\n        final char c = chars[in];\n        final int inx = s2.indexOf(c);\n        if (inx != -1) {\n            if (inx < s3.length()) {\n                chars[out++] = s3.charAt(inx);\n            }\n        } else {\n            chars[out++] = c;\n        }\n    }\n    return new String(chars, 0, out);\n}",java.lang.Object functionTranslate(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionTranslate {\n	""1"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack13 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""4"" [label=""$stack14 = virtualinvoke $stack13.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack15 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg3()>()""];\n	""6"" [label=""$stack16 = virtualinvoke $stack15.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""7"" [label=""$stack17 = lengthof chars""];\n	""8"" [label=""$stack18 = new java.lang.String""];\n	""9"" [label=""$stack19 = out""];\n	""10"" [label=""$stack20 = virtualinvoke s3.<java.lang.String: int length()>()""];\n	""11"" [label=""$stack21 = out""];\n	""12"" [label=""$stack22 = virtualinvoke s3.<java.lang.String: char charAt(int)>(inx)""];\n	""13"" [label=""argCount = 3""];\n	""14"" [label=""c = chars[in]""];\n	""15"" [label=""chars = virtualinvoke s1.<java.lang.String: char[] toCharArray()>()""];\n	""16"" [label=""chars[$stack19] = c""];\n	""17"" [label=""chars[$stack21] = $stack22""];\n	""18"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""if in >= $stack17""];\n	""22"" [label=""if inx == -1""];\n	""23"" [label=""if inx >= $stack20""];\n	""24"" [label=""in = 0""];\n	""25"" [label=""in = in + 1""];\n	""26"" [label=""inx = virtualinvoke s2.<java.lang.String: int indexOf(int)>(c)""];\n	""27"" [label=""out = 0""];\n	""28"" [label=""out = out + 1""];\n	""29"" [label=""out = out + 1""];\n	""30"" [label=""return $stack18""];\n	""31"" [label=""s1 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack12)""];\n	""32"" [label=""s2 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack14)""];\n	""33"" [label=""s3 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack16)""];\n	""34"" [label=""specialinvoke $stack18.<java.lang.String: void <init>(char[],int,int)>(chars, 0, out)""];\n	""35"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(3)""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""35""[label=""cfg_next""];\n	""14"" -> ""26""[label=""cfg_next""];\n	""15"" -> ""27""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""25""[label=""cfg_goto""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""7""[label=""cfg_goto""];\n	""21"" -> ""14""[label=""cfg_false""];\n	""21"" -> ""8""[label=""cfg_true""];\n	""22"" -> ""10""[label=""cfg_false""];\n	""22"" -> ""9""[label=""cfg_true""];\n	""23"" -> ""11""[label=""cfg_false""];\n	""23"" -> ""25""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""20""[label=""cfg_next""];\n	""26"" -> ""22""[label=""cfg_next""];\n	""27"" -> ""24""[label=""cfg_next""];\n	""28"" -> ""12""[label=""cfg_next""];\n	""29"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""31"" -> ""3""[label=""cfg_next""];\n	""32"" -> ""5""[label=""cfg_next""];\n	""33"" -> ""15""[label=""cfg_next""];\n	""34"" -> ""30""[label=""cfg_next""];\n	""35"" -> ""1""[label=""cfg_next""];\n	""36"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""32""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""33""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""34""[label=""cfg_next""];\n	""9"" -> ""29""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionBoolean(EvalContext),Method,* boolean() implementation.\n     * @param context evaluation context\n     * @return Boolean,protected Object functionBoolean(final EvalContext context) {\n    assertArgCount(1);\n    return InfoSetUtil.booleanValue(getArg1().computeValue(context)) ? Boolean.TRUE : Boolean.FALSE;\n},java.lang.Object functionBoolean(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionBoolean {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>($stack3)""];\n	""4"" [label=""$stack5 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""5"" [label=""$stack5 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""6"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNot(EvalContext),Method,* not() implementation.\n     * @param context evaluation context\n     * @return Boolean,protected Object functionNot(final EvalContext context) {\n    assertArgCount(1);\n    return InfoSetUtil.booleanValue(getArg1().computeValue(context)) ? Boolean.FALSE : Boolean.TRUE;\n},java.lang.Object functionNot(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionNot {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: boolean booleanValue(java.lang.Object)>($stack3)""];\n	""4"" [label=""$stack5 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""5"" [label=""$stack5 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""6"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionTrue(EvalContext),Method,* true() implementation.\n     * @param context evaluation context\n     * @return Boolean.TRUE,protected Object functionTrue(final EvalContext context) {\n    assertArgCount(0);\n    return Boolean.TRUE;\n},java.lang.Object functionTrue(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionTrue {\n	""1"" [label=""$stack2 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(0)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFalse(EvalContext),Method,* false() implementation.\n     * @param context evaluation context\n     * @return Boolean.FALSE,protected Object functionFalse(final EvalContext context) {\n    assertArgCount(0);\n    return Boolean.FALSE;\n},java.lang.Object functionFalse(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionFalse {\n	""1"" [label=""$stack2 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""2"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(0)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNull(EvalContext),Method,* null() implementation.\n     * @param context evaluation context\n     * @return null,protected Object functionNull(final EvalContext context) {\n    assertArgCount(0);\n    return null;\n},java.lang.Object functionNull(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionNull {\n	""1"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""2"" [label=""return null""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(0)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionNumber(EvalContext),Method,* number() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionNumber(final EvalContext context) {\n    if (getArgumentCount() == 0) {\n        return InfoSetUtil.number(context.getCurrentNodePointer());\n    }\n    assertArgCount(1);\n    return InfoSetUtil.number(getArg1().computeValue(context));\n},java.lang.Object functionNumber(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionNumber {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Number number(java.lang.Object)>($stack4)""];\n	""5"" [label=""$stack6 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""6"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.Number number(java.lang.Object)>($stack6)""];\n	""7"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""if $stack2 != 0""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionSum(EvalContext),Method,* sum() implementation.\n     * @param context evaluation context\n     * @return Number,"protected Object functionSum(final EvalContext context) {\n    assertArgCount(1);\n    final Object v = getArg1().compute(context);\n    if (v == null) {\n        return ZERO;\n    }\n    if (v instanceof EvalContext) {\n        double sum = 0.0;\n        final EvalContext ctx = (EvalContext) v;\n        while (ctx.hasNext()) {\n            final NodePointer ptr = (NodePointer) ctx.next();\n            sum += InfoSetUtil.doubleValue(ptr);\n        }\n        return Double.valueOf(sum);\n    }\n    throw new JXPathException(""Invalid argument type for 'sum': "" + v.getClass().getName());\n}",java.lang.Object functionSum(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionSum {\n	""1"" [label=""$stack10 = virtualinvoke v.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getName()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Invalid argument type for \'sum\': \"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""$stack16 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: boolean hasNext()>()""];\n	""8"" [label=""$stack17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(sum)""];\n	""9"" [label=""$stack18 = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: java.lang.Object next()>()""];\n	""10"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>(ptr)""];\n	""11"" [label=""$stack20 = <org.apache.commons.jxpath.ri.compiler.CoreFunction: java.lang.Double ZERO>""];\n	""12"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""13"" [label=""$stack8 = v instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""14"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""15"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""16"" [label=""ctx = (org.apache.commons.jxpath.ri.EvalContext) v""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack16 == 0""];\n	""19"" [label=""if $stack8 == 0""];\n	""20"" [label=""if v != null""];\n	""21"" [label=""ptr = (org.apache.commons.jxpath.ri.model.NodePointer) $stack18""];\n	""22"" [label=""return $stack17""];\n	""23"" [label=""return $stack20""];\n	""24"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack14)""];\n	""25"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""26"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""27"" [label=""sum = 0.0""];\n	""28"" [label=""sum = sum + $stack19""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""30"" [label=""throw $stack15""];\n	""31"" [label=""v = virtualinvoke $stack7.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object compute(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""31""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""26""[label=""cfg_next""];\n	""16"" -> ""7""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_goto""];\n	""18"" -> ""8""[label=""cfg_true""];\n	""18"" -> ""9""[label=""cfg_false""];\n	""19"" -> ""27""[label=""cfg_false""];\n	""19"" -> ""6""[label=""cfg_true""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_false""];\n	""20"" -> ""13""[label=""cfg_true""];\n	""21"" -> ""10""[label=""cfg_next""];\n	""24"" -> ""30""[label=""cfg_next""];\n	""25"" -> ""3""[label=""cfg_next""];\n	""26"" -> ""12""[label=""cfg_next""];\n	""27"" -> ""16""[label=""cfg_next""];\n	""28"" -> ""17""[label=""cfg_next""];\n	""29"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""31"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""22""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFloor(EvalContext),Method,* floor() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionFloor(final EvalContext context) {\n    assertArgCount(1);\n    final double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    if (Double.isNaN(v) || Double.isInfinite(v)) {\n        return Double.valueOf(v);\n    }\n    return Double.valueOf(Math.floor(v));\n},java.lang.Object functionFloor(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionFloor {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack9)""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v)""];\n	""5"" [label=""$stack7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v)""];\n	""6"" [label=""$stack8 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(v)""];\n	""7"" [label=""$stack9 = staticinvoke <java.lang.Math: double floor(double)>(v)""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""if $stack6 != 0""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""return $stack10""];\n	""12"" [label=""return $stack7""];\n	""13"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""15"" [label=""v = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack5)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""10"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionCeiling(EvalContext),Method,* ceiling() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionCeiling(final EvalContext context) {\n    assertArgCount(1);\n    final double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    if (Double.isNaN(v) || Double.isInfinite(v)) {\n        return Double.valueOf(v);\n    }\n    return Double.valueOf(Math.ceil(v));\n},java.lang.Object functionCeiling(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionCeiling {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack9)""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""4"" [label=""$stack6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v)""];\n	""5"" [label=""$stack7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v)""];\n	""6"" [label=""$stack8 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(v)""];\n	""7"" [label=""$stack9 = staticinvoke <java.lang.Math: double ceil(double)>(v)""];\n	""8"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""if $stack6 != 0""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""return $stack10""];\n	""12"" [label=""return $stack7""];\n	""13"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""15"" [label=""v = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack5)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""10"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionRound(EvalContext),Method,* round() implementation.\n     * @param context evaluation context\n     * @return Number,protected Object functionRound(final EvalContext context) {\n    assertArgCount(1);\n    final double v = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    if (Double.isNaN(v) || Double.isInfinite(v)) {\n        return Double.valueOf(v);\n    }\n    return Double.valueOf(Math.round(v));\n},java.lang.Object functionRound(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionRound {\n	""1"" [label=""$stack10 = (double) $stack9""];\n	""2"" [label=""$stack11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack10)""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack6 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v)""];\n	""6"" [label=""$stack7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v)""];\n	""7"" [label=""$stack8 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(v)""];\n	""8"" [label=""$stack9 = staticinvoke <java.lang.Math: long round(double)>(v)""];\n	""9"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""10"" [label=""if $stack6 != 0""];\n	""11"" [label=""if $stack8 == 0""];\n	""12"" [label=""return $stack11""];\n	""13"" [label=""return $stack7""];\n	""14"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgCount(int)>(1)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""16"" [label=""v = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack5)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""11"" -> ""6""[label=""cfg_false""];\n	""11"" -> ""8""[label=""cfg_true""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.compiler.CoreFunction.functionFormatNumber(EvalContext),Method,* format-number() implementation.\n     * @param context evaluation context\n     * @return String,"private Object functionFormatNumber(final EvalContext context) {\n    final int minArgs = 2;\n    final int maxArgs = 3;\n    assertArgRange(minArgs, maxArgs);\n    final double number = InfoSetUtil.doubleValue(getArg1().computeValue(context));\n    final String pattern = InfoSetUtil.stringValue(getArg2().computeValue(context));\n    DecimalFormatSymbols symbols;\n    if (getArgumentCount() == maxArgs) {\n        final String symbolsName = InfoSetUtil.stringValue(getArg3().computeValue(context));\n        symbols = context.getJXPathContext().getDecimalFormatSymbols(symbolsName);\n    } else {\n        final NodePointer pointer = context.getCurrentNodePointer();\n        Locale locale;\n        if (pointer != null) {\n            locale = pointer.getLocale();\n        } else {\n            locale = context.getJXPathContext().getLocale();\n        }\n        symbols = new DecimalFormatSymbols(locale);\n    }\n    final DecimalFormat format = (DecimalFormat) NumberFormat.getInstance();\n    format.setDecimalFormatSymbols(symbols);\n    format.applyLocalizedPattern(pattern);\n    return format.format(number);\n}",java.lang.Object functionFormatNumber(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_functionFormatNumber {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg1()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg2()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""5"" [label=""$stack14 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""6"" [label=""$stack15 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.JXPathContext getJXPathContext()>()""];\n	""7"" [label=""$stack16 = new java.text.DecimalFormatSymbols""];\n	""8"" [label=""$stack17 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getInstance()>()""];\n	""9"" [label=""$stack18 = virtualinvoke symbolsName.<java.text.DecimalFormat: java.lang.String format(double)>(number)""];\n	""10"" [label=""$stack19 = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: org.apache.commons.jxpath.ri.compiler.Expression getArg3()>()""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>(context)""];\n	""12"" [label=""$stack21 = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.JXPathContext getJXPathContext()>()""];\n	""13"" [label=""context := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack14 != 3""];\n	""17"" [label=""if symbolsName == null""];\n	""18"" [label=""locale = virtualinvoke $stack15.<org.apache.commons.jxpath.JXPathContext: java.util.Locale getLocale()>()""];\n	""19"" [label=""locale = virtualinvoke symbolsName.<org.apache.commons.jxpath.ri.model.NodePointer: java.util.Locale getLocale()>()""];\n	""20"" [label=""maxArgs = 3""];\n	""21"" [label=""minArgs = 2""];\n	""22"" [label=""number = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: double doubleValue(java.lang.Object)>($stack11)""];\n	""23"" [label=""pattern = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack13)""];\n	""24"" [label=""return $stack18""];\n	""25"" [label=""specialinvoke $stack16.<java.text.DecimalFormatSymbols: void <init>(java.util.Locale)>(locale)""];\n	""26"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgRange(int,int)>(2, 3)""];\n	""27"" [label=""symbols = $stack16""];\n	""28"" [label=""symbols = virtualinvoke $stack21.<org.apache.commons.jxpath.JXPathContext: java.text.DecimalFormatSymbols getDecimalFormatSymbols(java.lang.String)>(symbolsName)""];\n	""29"" [label=""symbolsName = (java.text.DecimalFormat) $stack17""];\n	""30"" [label=""symbolsName = staticinvoke <org.apache.commons.jxpath.ri.InfoSetUtil: java.lang.String stringValue(java.lang.Object)>($stack20)""];\n	""31"" [label=""symbolsName = virtualinvoke context.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""32"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""33"" [label=""virtualinvoke symbolsName.<java.text.DecimalFormat: void applyLocalizedPattern(java.lang.String)>(pattern)""];\n	""34"" [label=""virtualinvoke symbolsName.<java.text.DecimalFormat: void setDecimalFormatSymbols(java.text.DecimalFormatSymbols)>(symbols)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""30""[label=""cfg_next""];\n	""12"" -> ""28""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_goto""];\n	""15"" -> ""7""[label=""cfg_goto""];\n	""16"" -> ""10""[label=""cfg_false""];\n	""16"" -> ""31""[label=""cfg_true""];\n	""17"" -> ""19""[label=""cfg_false""];\n	""17"" -> ""6""[label=""cfg_true""];\n	""18"" -> ""7""[label=""cfg_next""];\n	""19"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""3""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""25"" -> ""27""[label=""cfg_next""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""27"" -> ""8""[label=""cfg_next""];\n	""28"" -> ""14""[label=""cfg_next""];\n	""29"" -> ""34""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""12""[label=""cfg_next""];\n	""31"" -> ""17""[label=""cfg_next""];\n	""32"" -> ""13""[label=""cfg_next""];\n	""33"" -> ""9""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""25""[label=""cfg_next""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.compiler.CoreFunction.assertArgCount(int),Method,* Assert {@code count} args.\n     * @param count int,"private void assertArgCount(final int count) {\n    assertArgRange(count, count);\n}",void assertArgCount(int),"digraph cfg_assertArgCount {\n	""1"" [label=""count := @parameter0: int""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: void assertArgRange(int,int)>(count, count)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.compiler.CoreFunction.assertArgRange(int,int)",Method,* Assert at least {@code min}/at most {@code max} args.\n     * @param min int\n     * @param max int,"private void assertArgRange(final int min, final int max) {\n    final int ct = getArgumentCount();\n    if (ct < min || ct > max) {\n        throw new JXPathInvalidSyntaxException(""Incorrect number of arguments: "" + this);\n    }\n}","void assertArgRange(int,int)","digraph cfg_assertArgRange {\n	""1"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Incorrect number of arguments: \"")""];\n	""3"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this)""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack8 = new org.apache.commons.jxpath.JXPathInvalidSyntaxException""];\n	""6"" [label=""ct = virtualinvoke this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int getArgumentCount()>()""];\n	""7"" [label=""if ct < min""];\n	""8"" [label=""if ct <= max""];\n	""9"" [label=""max := @parameter1: int""];\n	""10"" [label=""min := @parameter0: int""];\n	""11"" [label=""return""];\n	""12"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""13"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.JXPathInvalidSyntaxException: void <init>(java.lang.String)>($stack7)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""15"" [label=""throw $stack8""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_true""];\n	""7"" -> ""8""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",private 
"org.apache.commons.jxpath.ri.compiler.CoreFunction.<init>(int,Expression[])",Constructor,* Create a new CoreFunction.\n     * @param functionCode int function code\n     * @param args argument Expressions,"public CoreFunction(final int functionCode, final Expression[] args) {\n    super(args);\n    this.functionCode = functionCode;\n}","void <init>(int,org.apache.commons.jxpath.ri.compiler.Expression[])","digraph cfg_init {\n	""1"" [label=""args := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression[]""];\n	""2"" [label=""functionCode := @parameter0: int""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.compiler.Operation: void <init>(org.apache.commons.jxpath.ri.compiler.Expression[])>(args)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.compiler.CoreFunction""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.compiler.CoreFunction: int functionCode> = functionCode""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createNodeFactoryArray(),Method,* Create the default node factory array.,"private static synchronized void createNodeFactoryArray() {\n    if (nodeFactoryArray == null) {\n        nodeFactoryArray = (NodePointerFactory[]) nodeFactories.toArray(new NodePointerFactory[nodeFactories.size()]);\n        Arrays.sort(nodeFactoryArray, (a, b) -> {\n            final int orderA = ((NodePointerFactory) a).getOrder();\n            final int orderB = ((NodePointerFactory) b).getOrder();\n            return orderA - orderB;\n        });\n    }\n}",void createNodeFactoryArray(),"digraph cfg_createNodeFactoryArray {\n	""1"" [label=""$stack0 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] nodeFactoryArray>""];\n	""2"" [label=""$stack1 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Vector nodeFactories>""];\n	""3"" [label=""$stack2 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Vector nodeFactories>""];\n	""4"" [label=""$stack3 = virtualinvoke $stack1.<java.util.Vector: int size()>()""];\n	""5"" [label=""$stack4 = newarray (org.apache.commons.jxpath.ri.model.NodePointerFactory)[$stack3]""];\n	""6"" [label=""$stack5 = virtualinvoke $stack2.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>($stack4)""];\n	""7"" [label=""$stack6 = (org.apache.commons.jxpath.ri.model.NodePointerFactory[]) $stack5""];\n	""8"" [label=""$stack7 = (org.apache.commons.jxpath.ri.model.NodePointerFactory[]) $stack6""];\n	""9"" [label=""$stack8 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] nodeFactoryArray>""];\n	""10"" [label=""$stack9 = dynamicinvoke \""compare\"" <java.util.Comparator ()>() <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: int __METHODTYPE__(java.lang.Object,java.lang.Object), methodhandle: \""REF_INVOKE_STATIC\"" <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: int lambda$createNodeFactoryArray$0(org.apache.commons.jxpath.ri.model.NodePointerFactory,org.apache.commons.jxpath.ri.model.NodePointerFactory)>, methodtype: int __METHODTYPE__(org.apache.commons.jxpath.ri.model.NodePointerFactory,org.apache.commons.jxpath.ri.model.NodePointerFactory))""];\n	""11"" [label=""<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] nodeFactoryArray> = $stack7""];\n	""12"" [label=""if $stack0 != null""];\n	""13"" [label=""return""];\n	""14"" [label=""staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($stack8, $stack9)""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_true""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static , synchronized "
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.addNodePointerFactory(NodePointerFactory),Method,* Call this with a custom NodePointerFactory to add support for\n     * additional types of objects.  Make sure the factory returns\n     * a name that puts it in the right position on the list of factories.\n     * @param factory NodePointerFactory to add,public static void addNodePointerFactory(final NodePointerFactory factory) {\n    synchronized (nodeFactories) {\n        nodeFactories.add(factory);\n        nodeFactoryArray = null;\n    }\n},void addNodePointerFactory(org.apache.commons.jxpath.ri.model.NodePointerFactory),"digraph cfg_addNodePointerFactory {\n	""1"" [label=""$stack3 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Vector nodeFactories>""];\n	""2"" [label=""$stack4 := @caughtexception""];\n	""3"" [label=""<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] nodeFactoryArray> = null""];\n	""4"" [label=""entermonitor l1""];\n	""5"" [label=""exitmonitor l1""];\n	""6"" [label=""exitmonitor l1""];\n	""7"" [label=""factory := @parameter0: org.apache.commons.jxpath.ri.model.NodePointerFactory""];\n	""8"" [label=""goto""];\n	""9"" [label=""l1 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Vector nodeFactories>""];\n	""10"" [label=""l2 = $stack4""];\n	""11"" [label=""return""];\n	""12"" [label=""throw l2""];\n	""13"" [label=""virtualinvoke $stack3.<java.util.Vector: boolean add(java.lang.Object)>(factory)""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""10"" -> ""2""[label=""cfg_except""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""2""[label=""cfg_except""];\n	""3"" -> ""2""[label=""cfg_except""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_except""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_except""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_goto""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.removeNodePointerFactory(NodePointerFactory),Method,* Removes support for additional types of objects.\n     *\n     * @param factory NodePointerFactory to remove\n     * @return true if this implementation contained the specified element\n     * @since 1.4.0,public static boolean removeNodePointerFactory(final NodePointerFactory factory) {\n    synchronized (nodeFactories) {\n        final boolean remove = nodeFactories.remove(factory);\n        nodeFactoryArray = null;\n        return remove;\n    }\n},boolean removeNodePointerFactory(org.apache.commons.jxpath.ri.model.NodePointerFactory),"digraph cfg_removeNodePointerFactory {\n	""1"" [label=""$stack4 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Vector nodeFactories>""];\n	""2"" [label=""$stack5 = remove""];\n	""3"" [label=""$stack6 := @caughtexception""];\n	""4"" [label=""<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] nodeFactoryArray> = null""];\n	""5"" [label=""entermonitor l1""];\n	""6"" [label=""exitmonitor l1""];\n	""7"" [label=""exitmonitor l1""];\n	""8"" [label=""factory := @parameter0: org.apache.commons.jxpath.ri.model.NodePointerFactory""];\n	""9"" [label=""l1 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Vector nodeFactories>""];\n	""10"" [label=""l3 = $stack6""];\n	""11"" [label=""remove = virtualinvoke $stack4.<java.util.Vector: boolean remove(java.lang.Object)>(factory)""];\n	""12"" [label=""return $stack5""];\n	""13"" [label=""throw l3""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""1"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getNodePointerFactories(),Method,* Gets the registered NodePointerFactories.\n     * @return NodePointerFactory[],public static NodePointerFactory[] getNodePointerFactories() {\n    return nodeFactoryArray;\n},org.apache.commons.jxpath.ri.model.NodePointerFactory[] getNodePointerFactories(),"digraph cfg_getNodePointerFactories {\n	""1"" [label=""$stack0 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointerFactory[] nodeFactoryArray>""];\n	""2"" [label=""return $stack0""];\n	""1"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getCompiler(),Method,* Returns a static instance of TreeCompiler.\n     *\n     * Override this to return an alternate compiler.\n     * @return Compiler,protected Compiler getCompiler() {\n    return COMPILER;\n},org.apache.commons.jxpath.ri.Compiler getCompiler(),"digraph cfg_getCompiler {\n	""1"" [label=""$stack1 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.Compiler COMPILER>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.compilePath(String),Method,No Comment,"@Override\nprotected CompiledExpression compilePath(final String xpath) {\n    return new JXPathCompiledExpression(xpath, compileExpression(xpath));\n}",org.apache.commons.jxpath.CompiledExpression compilePath(java.lang.String),"digraph cfg_compilePath {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.ri.JXPathCompiledExpression""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.JXPathCompiledExpression: void <init>(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack2)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""6"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.compileExpression(String),Method,* Compile the given expression.\n     * @param xpath to compile\n     * @return Expression,"private Expression compileExpression(final String xpath) {\n    Expression expr;\n    synchronized (compiled) {\n        if (USE_SOFT_CACHE) {\n            expr = null;\n            final SoftReference ref = (SoftReference) compiled.get(xpath);\n            if (ref != null) {\n                expr = (Expression) ref.get();\n            }\n        } else {\n            expr = (Expression) compiled.get(xpath);\n        }\n    }\n    if (expr != null) {\n        return expr;\n    }\n    expr = (Expression) Parser.parseExpression(xpath, getCompiler());\n    synchronized (compiled) {\n        if (USE_SOFT_CACHE) {\n            if (cleanupCount++ >= CLEANUP_THRESHOLD) {\n                final Iterator it = compiled.entrySet().iterator();\n                while (it.hasNext()) {\n                    final Entry me = (Entry) it.next();\n                    if (((SoftReference) me.getValue()).get() == null) {\n                        it.remove();\n                    }\n                }\n                cleanupCount = 0;\n            }\n            compiled.put(xpath, new SoftReference(expr));\n        } else {\n            compiled.put(xpath, expr);\n        }\n    }\n    return expr;\n}",org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String),"digraph cfg_compileExpression {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.ri.Parser: java.lang.Object parseExpression(java.lang.String,org.apache.commons.jxpath.ri.Compiler)>(xpath, $stack9)""];\n	""2"" [label=""$stack11 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: int cleanupCount>""];\n	""3"" [label=""$stack12 = $stack11 + 1""];\n	""4"" [label=""$stack13 = new java.lang.ref.SoftReference""];\n	""5"" [label=""$stack14 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Map compiled>""];\n	""6"" [label=""$stack15 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Map compiled>""];\n	""7"" [label=""$stack16 = interfaceinvoke $stack15.<java.util.Map: java.util.Set entrySet()>()""];\n	""8"" [label=""$stack17 = interfaceinvoke ref.<java.util.Iterator: boolean hasNext()>()""];\n	""9"" [label=""$stack18 = interfaceinvoke ref.<java.util.Iterator: java.lang.Object next()>()""];\n	""10"" [label=""$stack19 = interfaceinvoke me.<java.util.Map$Entry: java.lang.Object getValue()>()""];\n	""11"" [label=""$stack20 = (java.lang.ref.SoftReference) $stack19""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.ref.SoftReference: java.lang.Object get()>()""];\n	""13"" [label=""$stack22 = virtualinvoke ref.<java.lang.ref.SoftReference: java.lang.Object get()>()""];\n	""14"" [label=""$stack23 := @caughtexception""];\n	""15"" [label=""$stack24 := @caughtexception""];\n	""16"" [label=""$stack7 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Map compiled>""];\n	""17"" [label=""$stack8 = interfaceinvoke $stack7.<java.util.Map: java.lang.Object get(java.lang.Object)>(xpath)""];\n	""18"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.Compiler getCompiler()>()""];\n	""19"" [label=""<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: int cleanupCount> = $stack12""];\n	""20"" [label=""<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: int cleanupCount> = 0""];\n	""21"" [label=""entermonitor l3""];\n	""22"" [label=""entermonitor l3""];\n	""23"" [label=""exitmonitor l3""];\n	""24"" [label=""exitmonitor l3""];\n	""25"" [label=""exitmonitor l3""];\n	""26"" [label=""expr = (org.apache.commons.jxpath.ri.compiler.Expression) $stack10""];\n	""27"" [label=""expr = (org.apache.commons.jxpath.ri.compiler.Expression) $stack22""];\n	""28"" [label=""expr = null""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""if $stack11 < 500""];\n	""33"" [label=""if $stack17 == 0""];\n	""34"" [label=""if $stack21 != null""];\n	""35"" [label=""if expr == null""];\n	""36"" [label=""if ref == null""];\n	""37"" [label=""interfaceinvoke $stack14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(xpath, $stack13)""];\n	""38"" [label=""interfaceinvoke ref.<java.util.Iterator: void remove()>()""];\n	""39"" [label=""l3 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Map compiled>""];\n	""40"" [label=""l3 = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Map compiled>""];\n	""41"" [label=""l6 = $stack23""];\n	""42"" [label=""me = $stack24""];\n	""43"" [label=""me = (java.util.Map$Entry) $stack18""];\n	""44"" [label=""ref = (java.lang.ref.SoftReference) $stack8""];\n	""45"" [label=""ref = interfaceinvoke $stack16.<java.util.Set: java.util.Iterator iterator()>()""];\n	""46"" [label=""return expr""];\n	""47"" [label=""return expr""];\n	""48"" [label=""specialinvoke $stack13.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(expr)""];\n	""49"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""50"" [label=""throw l6""];\n	""51"" [label=""throw me""];\n	""52"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_except""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_except""];\n	""12"" -> ""14""[label=""cfg_except""];\n	""12"" -> ""34""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_except""];\n	""13"" -> ""27""[label=""cfg_next""];\n	""14"" -> ""14""[label=""cfg_except""];\n	""14"" -> ""41""[label=""cfg_next""];\n	""15"" -> ""15""[label=""cfg_except""];\n	""15"" -> ""42""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_except""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_except""];\n	""17"" -> ""44""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""14""[label=""cfg_except""];\n	""19"" -> ""32""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""14""[label=""cfg_except""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""21"" -> ""28""[label=""cfg_next""];\n	""22"" -> ""2""[label=""cfg_next""];\n	""23"" -> ""15""[label=""cfg_except""];\n	""23"" -> ""29""[label=""cfg_next""];\n	""24"" -> ""14""[label=""cfg_except""];\n	""24"" -> ""15""[label=""cfg_except""];\n	""24"" -> ""50""[label=""cfg_next""];\n	""24"" -> ""51""[label=""cfg_next""];\n	""25"" -> ""14""[label=""cfg_except""];\n	""25"" -> ""31""[label=""cfg_next""];\n	""26"" -> ""40""[label=""cfg_next""];\n	""27"" -> ""15""[label=""cfg_except""];\n	""27"" -> ""23""[label=""cfg_next""];\n	""28"" -> ""15""[label=""cfg_except""];\n	""28"" -> ""16""[label=""cfg_next""];\n	""29"" -> ""35""[label=""cfg_goto""];\n	""3"" -> ""14""[label=""cfg_except""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""30"" -> ""14""[label=""cfg_except""];\n	""30"" -> ""8""[label=""cfg_goto""];\n	""31"" -> ""47""[label=""cfg_goto""];\n	""32"" -> ""14""[label=""cfg_except""];\n	""32"" -> ""5""[label=""cfg_true""];\n	""32"" -> ""6""[label=""cfg_false""];\n	""33"" -> ""14""[label=""cfg_except""];\n	""33"" -> ""20""[label=""cfg_true""];\n	""33"" -> ""9""[label=""cfg_false""];\n	""34"" -> ""14""[label=""cfg_except""];\n	""34"" -> ""30""[label=""cfg_true""];\n	""34"" -> ""38""[label=""cfg_false""];\n	""35"" -> ""18""[label=""cfg_true""];\n	""35"" -> ""46""[label=""cfg_false""];\n	""36"" -> ""13""[label=""cfg_false""];\n	""36"" -> ""15""[label=""cfg_except""];\n	""36"" -> ""23""[label=""cfg_true""];\n	""37"" -> ""14""[label=""cfg_except""];\n	""37"" -> ""25""[label=""cfg_next""];\n	""38"" -> ""14""[label=""cfg_except""];\n	""38"" -> ""30""[label=""cfg_next""];\n	""39"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_except""];\n	""4"" -> ""48""[label=""cfg_next""];\n	""40"" -> ""22""[label=""cfg_next""];\n	""41"" -> ""14""[label=""cfg_except""];\n	""41"" -> ""24""[label=""cfg_next""];\n	""42"" -> ""15""[label=""cfg_except""];\n	""42"" -> ""24""[label=""cfg_next""];\n	""43"" -> ""10""[label=""cfg_next""];\n	""43"" -> ""14""[label=""cfg_except""];\n	""44"" -> ""15""[label=""cfg_except""];\n	""44"" -> ""36""[label=""cfg_next""];\n	""45"" -> ""14""[label=""cfg_except""];\n	""45"" -> ""8""[label=""cfg_next""];\n	""48"" -> ""14""[label=""cfg_except""];\n	""48"" -> ""37""[label=""cfg_next""];\n	""49"" -> ""52""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""52"" -> ""39""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_except""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_except""];\n	""7"" -> ""45""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_except""];\n	""8"" -> ""33""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_except""];\n	""9"" -> ""43""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(String),Method,* Traverses the xpath and returns the resulting object. Primitive\n     * types are wrapped into objects.\n     * @param xpath expression\n     * @return Object found,"@Override\npublic Object getValue(final String xpath) {\n    final Expression expression = compileExpression(xpath);\n    // TODO: (work in progress) - trying to integrate with Xalan\n    //        Object ctxNode = getNativeContextNode(expression);\n    //        if (ctxNode != null) {\n    //            System.err.println(""WILL USE XALAN: "" + xpath);\n    //            CachedXPathAPI api = new CachedXPathAPI();\n    //            try {\n    //                if (expression instanceof Path) {\n    //                    Node node = api.selectSingleNode((Node)ctxNode, xpath);\n    //                    System.err.println(""NODE: "" + node);\n    //                    if (node == null) {\n    //                        return null;\n    //                    }\n    //                    return new DOMNodePointer(node, null).getValue();\n    //                }\n    //                else {\n    //                    XObject object = api.eval((Node)ctxNode, xpath);\n    //                    switch (object.getType()) {\n    //                    case XObject.CLASS_STRING: return object.str();\n    //                    case XObject.CLASS_NUMBER: return new Double(object.num());\n    //                    case XObject.CLASS_BOOLEAN: return new Boolean(object.bool());\n    //                    default:\n    //                        System.err.println(""OTHER TYPE: "" + object.getTypeString());\n    //                    }\n    //                }\n    //            }\n    //            catch (TransformerException e) {\n    //                // TODO Auto-generated catch block\n    //                e.printStackTrace();\n    //            }\n    //            return\n    //        }\n    return getValue(xpath, expression);\n}",java.lang.Object getValue(java.lang.String),"digraph cfg_getValue {\n	""1"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.lang.Object getValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, expression)""];\n	""2"" [label=""expression = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""5"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(String,Expression)",Method,* Gets the value indicated.\n     * @param xpath String\n     * @param expr Expression\n     * @return Object,"public Object getValue(final String xpath, final Expression expr) {\n    Object result = expr.computeValue(getEvalContext());\n    if (result == null) {\n        if (expr instanceof Path && !isLenient()) {\n            throw new JXPathNotFoundException(""No value for xpath: "" + xpath);\n        }\n        return null;\n    }\n    if (result instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) result;\n        result = ctx.getSingleNodePointer();\n        if (!isLenient() && result == null) {\n            throw new JXPathNotFoundException(""No value for xpath: "" + xpath);\n        }\n    }\n    if (result instanceof NodePointer) {\n        result = ((NodePointer) result).getValuePointer();\n        if (!isLenient()) {\n            NodePointer.verify((NodePointer) result);\n        }\n        result = ((NodePointer) result).getValue();\n    }\n    return result;\n}","java.lang.Object getValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_getValue {\n	""1"" [label=""$stack10 = (org.apache.commons.jxpath.ri.model.NodePointer) result""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.ri.model.NodePointer) result""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: boolean isLenient()>()""];\n	""4"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No value for xpath: \"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack17 = new org.apache.commons.jxpath.JXPathNotFoundException""];\n	""9"" [label=""$stack18 = expr instanceof org.apache.commons.jxpath.ri.compiler.Path""];\n	""10"" [label=""$stack19 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: boolean isLenient()>()""];\n	""11"" [label=""$stack20 = new java.lang.StringBuilder""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No value for xpath: \"")""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""14"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""15"" [label=""$stack24 = new org.apache.commons.jxpath.JXPathNotFoundException""];\n	""16"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getEvalContext()>()""];\n	""17"" [label=""$stack6 = result instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""18"" [label=""$stack7 = result instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""19"" [label=""$stack8 = (org.apache.commons.jxpath.ri.model.NodePointer) result""];\n	""20"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: boolean isLenient()>()""];\n	""21"" [label=""ctx = (org.apache.commons.jxpath.ri.EvalContext) result""];\n	""22"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""23"" [label=""if $stack12 != 0""];\n	""24"" [label=""if $stack18 == 0""];\n	""25"" [label=""if $stack19 != 0""];\n	""26"" [label=""if $stack6 == 0""];\n	""27"" [label=""if $stack7 == 0""];\n	""28"" [label=""if $stack9 != 0""];\n	""29"" [label=""if result != null""];\n	""30"" [label=""if result != null""];\n	""31"" [label=""result = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getValue()>()""];\n	""32"" [label=""result = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer getValuePointer()>()""];\n	""33"" [label=""result = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""34"" [label=""result = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>($stack5)""];\n	""35"" [label=""return null""];\n	""36"" [label=""return result""];\n	""37"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""38"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.JXPathNotFoundException: void <init>(java.lang.String)>($stack16)""];\n	""39"" [label=""specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>()""];\n	""40"" [label=""specialinvoke $stack24.<org.apache.commons.jxpath.JXPathNotFoundException: void <init>(java.lang.String)>($stack23)""];\n	""41"" [label=""staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer verify(org.apache.commons.jxpath.ri.model.NodePointer)>($stack11)""];\n	""42"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""43"" [label=""throw $stack17""];\n	""44"" [label=""throw $stack24""];\n	""45"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""31""[label=""cfg_next""];\n	""10"" -> ""25""[label=""cfg_next""];\n	""11"" -> ""39""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""40""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""34""[label=""cfg_next""];\n	""17"" -> ""26""[label=""cfg_next""];\n	""18"" -> ""27""[label=""cfg_next""];\n	""19"" -> ""32""[label=""cfg_next""];\n	""2"" -> ""41""[label=""cfg_next""];\n	""20"" -> ""28""[label=""cfg_next""];\n	""21"" -> ""33""[label=""cfg_next""];\n	""22"" -> ""16""[label=""cfg_next""];\n	""23"" -> ""18""[label=""cfg_true""];\n	""23"" -> ""30""[label=""cfg_false""];\n	""24"" -> ""10""[label=""cfg_false""];\n	""24"" -> ""35""[label=""cfg_true""];\n	""25"" -> ""15""[label=""cfg_false""];\n	""25"" -> ""35""[label=""cfg_true""];\n	""26"" -> ""18""[label=""cfg_true""];\n	""26"" -> ""21""[label=""cfg_false""];\n	""27"" -> ""19""[label=""cfg_false""];\n	""27"" -> ""36""[label=""cfg_true""];\n	""28"" -> ""1""[label=""cfg_true""];\n	""28"" -> ""2""[label=""cfg_false""];\n	""29"" -> ""17""[label=""cfg_true""];\n	""29"" -> ""9""[label=""cfg_false""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""30"" -> ""18""[label=""cfg_true""];\n	""30"" -> ""8""[label=""cfg_false""];\n	""31"" -> ""36""[label=""cfg_next""];\n	""32"" -> ""20""[label=""cfg_next""];\n	""33"" -> ""3""[label=""cfg_next""];\n	""34"" -> ""29""[label=""cfg_next""];\n	""37"" -> ""5""[label=""cfg_next""];\n	""38"" -> ""43""[label=""cfg_next""];\n	""39"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""37""[label=""cfg_next""];\n	""40"" -> ""44""[label=""cfg_next""];\n	""41"" -> ""1""[label=""cfg_next""];\n	""42"" -> ""45""[label=""cfg_next""];\n	""45"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""38""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(String,Class)",Method,"* Calls getValue(xpath), converts the result to the required type\n     * and returns the result of the conversion.\n     * @param xpath expression\n     * @param requiredType Class\n     * @return Object","@Override\npublic Object getValue(final String xpath, final Class requiredType) {\n    final Expression expr = compileExpression(xpath);\n    return getValue(xpath, expr, requiredType);\n}","java.lang.Object getValue(java.lang.String,java.lang.Class)","digraph cfg_getValue {\n	""1"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.lang.Object getValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Class)>(xpath, expr, requiredType)""];\n	""2"" [label=""expr = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""3"" [label=""requiredType := @parameter1: java.lang.Class""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""6"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getValue(String,Expression,Class)",Method,* Gets the value indicated.\n     * @param xpath expression\n     * @param expr compiled Expression\n     * @param requiredType Class\n     * @return Object,"public Object getValue(final String xpath, final Expression expr, final Class requiredType) {\n    Object value = getValue(xpath, expr);\n    if (value != null && requiredType != null) {\n        if (!TypeUtils.canConvert(value, requiredType)) {\n            throw new JXPathTypeConversionException(""Invalid expression type. '"" + xpath + ""' returns "" + value.getClass().getName() + "". It cannot be converted to "" + requiredType.getName());\n        }\n        value = TypeUtils.convert(value, requiredType);\n    }\n    return value;\n}","java.lang.Object getValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Class)","digraph cfg_getValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.Class: java.lang.String getName()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\' returns \"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)""];\n	""4"" [label=""$stack13 = virtualinvoke requiredType.<java.lang.Class: java.lang.String getName()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"". It cannot be converted to \"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack17 = new org.apache.commons.jxpath.JXPathTypeConversionException""];\n	""9"" [label=""$stack5 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: boolean canConvert(java.lang.Object,java.lang.Class)>(value, requiredType)""];\n	""10"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""11"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Invalid expression type. \'\"")""];\n	""12"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""13"" [label=""$stack9 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""14"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""15"" [label=""if $stack5 != 0""];\n	""16"" [label=""if requiredType == null""];\n	""17"" [label=""if value == null""];\n	""18"" [label=""requiredType := @parameter2: java.lang.Class""];\n	""19"" [label=""return value""];\n	""20"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.JXPathTypeConversionException: void <init>(java.lang.String)>($stack16)""];\n	""21"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""23"" [label=""throw $stack17""];\n	""24"" [label=""value = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>(value, requiredType)""];\n	""25"" [label=""value = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.lang.Object getValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, expr)""];\n	""26"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_true""];\n	""15"" -> ""8""[label=""cfg_false""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""16"" -> ""9""[label=""cfg_false""];\n	""17"" -> ""16""[label=""cfg_false""];\n	""17"" -> ""19""[label=""cfg_true""];\n	""18"" -> ""25""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""26""[label=""cfg_next""];\n	""24"" -> ""19""[label=""cfg_next""];\n	""25"" -> ""17""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.iterate(String),Method,"* Traverses the xpath and returns a Iterator of all results found\n     * for the path. If the xpath matches no properties\n     * in the graph, the Iterator will not be null.\n     * @param xpath expression\n     * @return Iterator","@Override\npublic Iterator iterate(final String xpath) {\n    return iterate(xpath, compileExpression(xpath));\n}",java.util.Iterator iterate(java.lang.String),"digraph cfg_iterate {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Iterator iterate(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack2)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""5"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.iterate(String,Expression)",Method,"* Traverses the xpath and returns a Iterator of all results found\n     * for the path. If the xpath matches no properties\n     * in the graph, the Iterator will not be null.\n     * @param xpath expression\n     * @param expr compiled Expression\n     * @return Iterator","public Iterator iterate(final String xpath, final Expression expr) {\n    return expr.iterate(getEvalContext());\n}","java.util.Iterator iterate(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_iterate {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getEvalContext()>()""];\n	""2"" [label=""$stack4 = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.util.Iterator iterate(org.apache.commons.jxpath.ri.EvalContext)>($stack3)""];\n	""3"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""6"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getPointer(String),Method,No Comment,"@Override\npublic Pointer getPointer(final String xpath) {\n    return getPointer(xpath, compileExpression(xpath));\n}",org.apache.commons.jxpath.Pointer getPointer(java.lang.String),"digraph cfg_getPointer {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer getPointer(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack2)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""5"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getPointer(String,Expression)",Method,* Gets a pointer to the specified path/expression.\n     * @param xpath String\n     * @param expr compiled Expression\n     * @return Pointer,"public Pointer getPointer(final String xpath, final Expression expr) {\n    Object result = expr.computeValue(getEvalContext());\n    if (result instanceof EvalContext) {\n        result = ((EvalContext) result).getSingleNodePointer();\n    }\n    if (result instanceof Pointer) {\n        if (!isLenient() && !((NodePointer) result).isActual()) {\n            throw new JXPathNotFoundException(""No pointer for xpath: "" + xpath);\n        }\n        return (Pointer) result;\n    }\n    return NodePointer.newNodePointer(null, result, getLocale());\n}","org.apache.commons.jxpath.Pointer getPointer(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_getPointer {\n	""1"" [label=""$stack10 = (org.apache.commons.jxpath.Pointer) result""];\n	""2"" [label=""$stack11 = (org.apache.commons.jxpath.ri.model.NodePointer) result""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<org.apache.commons.jxpath.ri.model.NodePointer: boolean isActual()>()""];\n	""4"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No pointer for xpath: \"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack17 = new org.apache.commons.jxpath.JXPathNotFoundException""];\n	""9"" [label=""$stack18 = (org.apache.commons.jxpath.ri.EvalContext) result""];\n	""10"" [label=""$stack4 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getEvalContext()>()""];\n	""11"" [label=""$stack5 = result instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""12"" [label=""$stack6 = result instanceof org.apache.commons.jxpath.Pointer""];\n	""13"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Locale getLocale()>()""];\n	""14"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer newNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>(null, result, $stack7)""];\n	""15"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: boolean isLenient()>()""];\n	""16"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""17"" [label=""if $stack12 != 0""];\n	""18"" [label=""if $stack5 == 0""];\n	""19"" [label=""if $stack6 == 0""];\n	""20"" [label=""if $stack9 != 0""];\n	""21"" [label=""result = virtualinvoke $stack18.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""22"" [label=""result = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>($stack4)""];\n	""23"" [label=""return $stack10""];\n	""24"" [label=""return $stack8""];\n	""25"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""26"" [label=""specialinvoke $stack17.<org.apache.commons.jxpath.JXPathNotFoundException: void <init>(java.lang.String)>($stack16)""];\n	""27"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""28"" [label=""throw $stack17""];\n	""29"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_true""];\n	""17"" -> ""8""[label=""cfg_false""];\n	""18"" -> ""12""[label=""cfg_true""];\n	""18"" -> ""9""[label=""cfg_false""];\n	""19"" -> ""13""[label=""cfg_true""];\n	""19"" -> ""15""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_true""];\n	""20"" -> ""2""[label=""cfg_false""];\n	""21"" -> ""12""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_next""];\n	""25"" -> ""5""[label=""cfg_next""];\n	""26"" -> ""28""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""26""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setValue(String,Object)",Method,No Comment,"@Override\npublic void setValue(final String xpath, final Object value) {\n    setValue(xpath, compileExpression(xpath), value);\n}","void setValue(java.lang.String,java.lang.Object)","digraph cfg_setValue {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""4"" [label=""value := @parameter1: java.lang.Object""];\n	""5"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void setValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object)>(xpath, $stack3, value)""];\n	""6"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setValue(String,Expression,Object)",Method,* Sets the value of xpath to value.\n     * @param xpath path\n     * @param expr compiled Expression\n     * @param value Object,"public void setValue(final String xpath, final Expression expr, final Object value) {\n    try {\n        setValue(xpath, expr, value, false);\n    } catch (final Throwable ex) {\n        throw new JXPathException(""Exception trying to set value with xpath "" + xpath, ex);\n    }\n}","void setValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object)","digraph cfg_setValue {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.JXPathException""];\n	""2"" [label=""$stack5 := @caughtexception""];\n	""3"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Exception trying to set value with xpath \"")""];\n	""5"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""6"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""ex = $stack5""];\n	""8"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""9"" [label=""goto""];\n	""10"" [label=""return""];\n	""11"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack9, ex)""];\n	""12"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""13"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer setValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object,boolean)>(xpath, expr, value, 0)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""15"" [label=""throw $stack10""];\n	""16"" [label=""value := @parameter2: java.lang.Object""];\n	""17"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPath(String),Method,No Comment,"@Override\npublic Pointer createPath(final String xpath) {\n    return createPath(xpath, compileExpression(xpath));\n}",org.apache.commons.jxpath.Pointer createPath(java.lang.String),"digraph cfg_createPath {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer createPath(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack2)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""5"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPath(String,Expression)",Method,* Create the given path.\n     * @param xpath String\n     * @param expr compiled Expression\n     * @return resulting Pointer,"public Pointer createPath(final String xpath, final Expression expr) {\n    try {\n        final Object result = expr.computeValue(getEvalContext());\n        Pointer pointer;\n        if (result instanceof Pointer) {\n            pointer = (Pointer) result;\n        } else if (result instanceof EvalContext) {\n            final EvalContext ctx = (EvalContext) result;\n            pointer = ctx.getSingleNodePointer();\n        } else {\n            checkSimplePath(expr);\n            // This should never happen\n            throw new JXPathException(""Cannot create path:"" + xpath);\n        }\n        return ((NodePointer) pointer).createPath(this);\n    } catch (final Throwable ex) {\n        throw new JXPathException(""Exception trying to create xpath "" + xpath, ex);\n    }\n}","org.apache.commons.jxpath.Pointer createPath(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_createPath {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create path:\"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.JXPathException""];\n	""5"" [label=""$stack14 = (org.apache.commons.jxpath.ri.model.NodePointer) pointer""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext)>(this)""];\n	""7"" [label=""$stack16 := @caughtexception""];\n	""8"" [label=""$stack17 = new java.lang.StringBuilder""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Exception trying to create xpath \"")""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack21 = new org.apache.commons.jxpath.JXPathException""];\n	""13"" [label=""$stack6 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getEvalContext()>()""];\n	""14"" [label=""$stack7 = result instanceof org.apache.commons.jxpath.Pointer""];\n	""15"" [label=""$stack8 = result instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""16"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""17"" [label=""ctx = (org.apache.commons.jxpath.ri.EvalContext) result""];\n	""18"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""if $stack7 == 0""];\n	""22"" [label=""if $stack8 == 0""];\n	""23"" [label=""pointer = (org.apache.commons.jxpath.Pointer) result""];\n	""24"" [label=""pointer = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""25"" [label=""result = $stack16""];\n	""26"" [label=""result = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>($stack6)""];\n	""27"" [label=""return $stack15""];\n	""28"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack12)""];\n	""29"" [label=""specialinvoke $stack17.<java.lang.StringBuilder: void <init>()>()""];\n	""30"" [label=""specialinvoke $stack21.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack20, result)""];\n	""31"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""32"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void checkSimplePath(org.apache.commons.jxpath.ri.compiler.Expression)>(expr)""];\n	""33"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""34"" [label=""throw $stack13""];\n	""35"" [label=""throw $stack21""];\n	""36"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""1"" -> ""7""[label=""cfg_except""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""30""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""26""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_except""];\n	""14"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_except""];\n	""15"" -> ""22""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_except""];\n	""16"" -> ""31""[label=""cfg_next""];\n	""16"" -> ""7""[label=""cfg_except""];\n	""17"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_except""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_goto""];\n	""19"" -> ""7""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_except""];\n	""20"" -> ""5""[label=""cfg_goto""];\n	""20"" -> ""7""[label=""cfg_except""];\n	""21"" -> ""15""[label=""cfg_true""];\n	""21"" -> ""23""[label=""cfg_false""];\n	""21"" -> ""7""[label=""cfg_except""];\n	""22"" -> ""17""[label=""cfg_false""];\n	""22"" -> ""32""[label=""cfg_true""];\n	""22"" -> ""7""[label=""cfg_except""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""23"" -> ""7""[label=""cfg_except""];\n	""24"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_except""];\n	""25"" -> ""12""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_next""];\n	""26"" -> ""7""[label=""cfg_except""];\n	""28"" -> ""34""[label=""cfg_next""];\n	""28"" -> ""7""[label=""cfg_except""];\n	""29"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_except""];\n	""30"" -> ""35""[label=""cfg_next""];\n	""31"" -> ""1""[label=""cfg_next""];\n	""31"" -> ""7""[label=""cfg_except""];\n	""32"" -> ""4""[label=""cfg_next""];\n	""32"" -> ""7""[label=""cfg_except""];\n	""33"" -> ""36""[label=""cfg_next""];\n	""34"" -> ""7""[label=""cfg_except""];\n	""36"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_except""];\n	""6"" -> ""27""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_except""];\n	""7"" -> ""25""[label=""cfg_next""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(String,Object)",Method,No Comment,"@Override\npublic Pointer createPathAndSetValue(final String xpath, final Object value) {\n    return createPathAndSetValue(xpath, compileExpression(xpath), value);\n}","org.apache.commons.jxpath.Pointer createPathAndSetValue(java.lang.String,java.lang.Object)","digraph cfg_createPathAndSetValue {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer createPathAndSetValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object)>(xpath, $stack3, value)""];\n	""3"" [label=""return $stack4""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""5"" [label=""value := @parameter1: java.lang.Object""];\n	""6"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.createPathAndSetValue(String,Expression,Object)",Method,* Create the given path setting its value to value.\n     * @param xpath String\n     * @param expr compiled Expression\n     * @param value Object\n     * @return resulting Pointer,"public Pointer createPathAndSetValue(final String xpath, final Expression expr, final Object value) {\n    try {\n        return setValue(xpath, expr, value, true);\n    } catch (final Throwable ex) {\n        throw new JXPathException(""Exception trying to create xpath "" + xpath, ex);\n    }\n}","org.apache.commons.jxpath.Pointer createPathAndSetValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object)","digraph cfg_createPathAndSetValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.JXPathException""];\n	""3"" [label=""$stack5 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer setValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object,boolean)>(xpath, expr, value, 1)""];\n	""4"" [label=""$stack6 := @caughtexception""];\n	""5"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Exception trying to create xpath \"")""];\n	""7"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""8"" [label=""ex = $stack6""];\n	""9"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack10, ex)""];\n	""12"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""13"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""14"" [label=""throw $stack11""];\n	""15"" [label=""value := @parameter2: java.lang.Object""];\n	""16"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_except""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setValue(String,Expression,Object,boolean)",Method,* Sets the specified value.\n     * @param xpath path\n     * @param expr compiled Expression\n     * @param value destination value\n     * @param create whether to create missing node(s)\n     * @return Pointer created,"private Pointer setValue(final String xpath, final Expression expr, final Object value, final boolean create) {\n    final Object result = expr.computeValue(getEvalContext());\n    Pointer pointer;\n    if (result instanceof Pointer) {\n        pointer = (Pointer) result;\n    } else if (result instanceof EvalContext) {\n        final EvalContext ctx = (EvalContext) result;\n        pointer = ctx.getSingleNodePointer();\n    } else {\n        if (create) {\n            checkSimplePath(expr);\n        }\n        // This should never happen\n        throw new JXPathException(""Cannot set value for xpath: "" + xpath);\n    }\n    if (create) {\n        pointer = ((NodePointer) pointer).createPath(this, value);\n    } else {\n        pointer.setValue(value);\n    }\n    return pointer;\n}","org.apache.commons.jxpath.Pointer setValue(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression,java.lang.Object,boolean)","digraph cfg_setValue {\n	""1"" [label=""$stack10 = result instanceof org.apache.commons.jxpath.ri.EvalContext""];\n	""2"" [label=""$stack11 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot set value for xpath: \"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""$stack16 = (org.apache.commons.jxpath.ri.model.NodePointer) pointer""];\n	""8"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getEvalContext()>()""];\n	""9"" [label=""$stack9 = result instanceof org.apache.commons.jxpath.Pointer""];\n	""10"" [label=""create := @parameter3: boolean""];\n	""11"" [label=""ctx = (org.apache.commons.jxpath.ri.EvalContext) result""];\n	""12"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack10 == 0""];\n	""17"" [label=""if $stack9 == 0""];\n	""18"" [label=""if create == 0""];\n	""19"" [label=""if create == 0""];\n	""20"" [label=""interfaceinvoke pointer.<org.apache.commons.jxpath.Pointer: void setValue(java.lang.Object)>(value)""];\n	""21"" [label=""pointer = (org.apache.commons.jxpath.Pointer) result""];\n	""22"" [label=""pointer = virtualinvoke $stack16.<org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer createPath(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(this, value)""];\n	""23"" [label=""pointer = virtualinvoke ctx.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getSingleNodePointer()>()""];\n	""24"" [label=""result = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.lang.Object computeValue(org.apache.commons.jxpath.ri.EvalContext)>($stack8)""];\n	""25"" [label=""return pointer""];\n	""26"" [label=""specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>()""];\n	""27"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack14)""];\n	""28"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void checkSimplePath(org.apache.commons.jxpath.ri.compiler.Expression)>(expr)""];\n	""29"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""30"" [label=""throw $stack15""];\n	""31"" [label=""value := @parameter2: java.lang.Object""];\n	""32"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""31""[label=""cfg_next""];\n	""13"" -> ""18""[label=""cfg_goto""];\n	""14"" -> ""18""[label=""cfg_goto""];\n	""15"" -> ""25""[label=""cfg_goto""];\n	""16"" -> ""11""[label=""cfg_false""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""17"" -> ""1""[label=""cfg_true""];\n	""17"" -> ""21""[label=""cfg_false""];\n	""18"" -> ""20""[label=""cfg_true""];\n	""18"" -> ""7""[label=""cfg_false""];\n	""19"" -> ""28""[label=""cfg_false""];\n	""19"" -> ""6""[label=""cfg_true""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""25""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""22"" -> ""15""[label=""cfg_next""];\n	""23"" -> ""14""[label=""cfg_next""];\n	""24"" -> ""9""[label=""cfg_next""];\n	""26"" -> ""3""[label=""cfg_next""];\n	""27"" -> ""30""[label=""cfg_next""];\n	""28"" -> ""6""[label=""cfg_next""];\n	""29"" -> ""32""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""31"" -> ""10""[label=""cfg_next""];\n	""32"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""27""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""22""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.checkSimplePath(Expression),Method,* Checks if the path follows the JXPath restrictions on the type\n     * of path that can be passed to create... methods.\n     * @param expr Expression to check,"private void checkSimplePath(final Expression expr) {\n    if (!(expr instanceof LocationPath) || !((LocationPath) expr).isSimplePath()) {\n        throw new JXPathInvalidSyntaxException(""JXPath can only create a path if it uses exclusively "" + ""the child:: and attribute:: axes and has "" + ""no context-dependent predicates"");\n    }\n}",void checkSimplePath(org.apache.commons.jxpath.ri.compiler.Expression),"digraph cfg_checkSimplePath {\n	""1"" [label=""$stack2 = expr instanceof org.apache.commons.jxpath.ri.compiler.LocationPath""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.JXPathInvalidSyntaxException""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.compiler.LocationPath) expr""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.compiler.LocationPath: boolean isSimplePath()>()""];\n	""5"" [label=""expr := @parameter0: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""6"" [label=""if $stack2 == 0""];\n	""7"" [label=""if $stack5 != 0""];\n	""8"" [label=""return""];\n	""9"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.JXPathInvalidSyntaxException: void <init>(java.lang.String)>(\""JXPath can only create a path if it uses exclusively the child:: and attribute:: axes and has no context-dependent predicates\"")""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""11"" [label=""throw $stack3""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.iteratePointers(String),Method,"* Traverses the xpath and returns an Iterator of Pointers.\n     * A Pointer provides easy access to a property.\n     * If the xpath matches no properties\n     * in the graph, the Iterator be empty, but not null.\n     * @param xpath expression\n     * @return Iterator","@Override\npublic Iterator iteratePointers(final String xpath) {\n    return iteratePointers(xpath, compileExpression(xpath));\n}",java.util.Iterator iteratePointers(java.lang.String),"digraph cfg_iteratePointers {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Iterator iteratePointers(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack2)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""5"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.iteratePointers(String,Expression)",Method,"* Traverses the xpath and returns an Iterator of Pointers.\n     * A Pointer provides easy access to a property.\n     * If the xpath matches no properties\n     * in the graph, the Iterator be empty, but not null.\n     * @param xpath expression\n     * @param expr compiled Expression\n     * @return Iterator","public Iterator iteratePointers(final String xpath, final Expression expr) {\n    return expr.iteratePointers(getEvalContext());\n}","java.util.Iterator iteratePointers(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_iteratePointers {\n	""1"" [label=""$stack3 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getEvalContext()>()""];\n	""2"" [label=""$stack4 = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.util.Iterator iteratePointers(org.apache.commons.jxpath.ri.EvalContext)>($stack3)""];\n	""3"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""6"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.removePath(String),Method,No Comment,"@Override\npublic void removePath(final String xpath) {\n    removePath(xpath, compileExpression(xpath));\n}",void removePath(java.lang.String),"digraph cfg_removePath {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""4"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void removePath(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack2)""];\n	""5"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.removePath(String,Expression)",Method,* Remove the specified path.\n     * @param xpath expression\n     * @param expr compiled Expression,"public void removePath(final String xpath, final Expression expr) {\n    try {\n        final NodePointer pointer = (NodePointer) getPointer(xpath, expr);\n        if (pointer != null) {\n            pointer.remove();\n        }\n    } catch (final Throwable ex) {\n        throw new JXPathException(""Exception trying to remove xpath "" + xpath, ex);\n    }\n}","void removePath(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_removePath {\n	""1"" [label=""$stack10 = new org.apache.commons.jxpath.JXPathException""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer getPointer(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, expr)""];\n	""3"" [label=""$stack5 := @caughtexception""];\n	""4"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Exception trying to remove xpath \"")""];\n	""6"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""7"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""9"" [label=""goto""];\n	""10"" [label=""if pointer == null""];\n	""11"" [label=""pointer = $stack5""];\n	""12"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack4""];\n	""13"" [label=""return""];\n	""14"" [label=""specialinvoke $stack10.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack9, pointer)""];\n	""15"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""17"" [label=""throw $stack10""];\n	""18"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: void remove()>()""];\n	""19"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""9""[label=""cfg_true""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_except""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_except""];\n	""18"" -> ""9""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.removeAll(String),Method,No Comment,"@Override\npublic void removeAll(final String xpath) {\n    removeAll(xpath, compileExpression(xpath));\n}",void removeAll(java.lang.String),"digraph cfg_removeAll {\n	""1"" [label=""$stack2 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.compiler.Expression compileExpression(java.lang.String)>(xpath)""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""4"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void removeAll(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)>(xpath, $stack2)""];\n	""5"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.removeAll(String,Expression)",Method,* Remove all matching nodes.\n     * @param xpath expression\n     * @param expr compiled Expression,"public void removeAll(final String xpath, final Expression expr) {\n    try {\n        final ArrayList list = new ArrayList();\n        Iterator it = expr.iteratePointers(getEvalContext());\n        while (it.hasNext()) {\n            list.add(it.next());\n        }\n        Collections.sort(list, ReverseComparator.INSTANCE);\n        it = list.iterator();\n        if (it.hasNext()) {\n            final NodePointer pointer = (NodePointer) it.next();\n            pointer.remove();\n            while (it.hasNext()) {\n                removePath(((NodePointer) it.next()).asPath());\n            }\n        }\n    } catch (final Throwable ex) {\n        throw new JXPathException(""Exception trying to remove all for xpath "" + xpath, ex);\n    }\n}","void removeAll(java.lang.String,org.apache.commons.jxpath.ri.compiler.Expression)","digraph cfg_removeAll {\n	""1"" [label=""$stack10 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""3"" [label=""$stack12 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack13 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""$stack14 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack13""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.String asPath()>()""];\n	""7"" [label=""$stack16 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""8"" [label=""$stack17 := @caughtexception""];\n	""9"" [label=""$stack18 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Exception trying to remove all for xpath \"")""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xpath)""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""13"" [label=""$stack22 = new org.apache.commons.jxpath.JXPathException""];\n	""14"" [label=""$stack6 = new java.util.ArrayList""];\n	""15"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.EvalContext getEvalContext()>()""];\n	""16"" [label=""$stack8 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""17"" [label=""$stack9 = <org.apache.commons.jxpath.util.ReverseComparator: java.util.Comparator INSTANCE>""];\n	""18"" [label=""expr := @parameter1: org.apache.commons.jxpath.ri.compiler.Expression""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack10 == 0""];\n	""23"" [label=""if $stack12 == 0""];\n	""24"" [label=""if $stack8 == 0""];\n	""25"" [label=""it = virtualinvoke expr.<org.apache.commons.jxpath.ri.compiler.Expression: java.util.Iterator iteratePointers(org.apache.commons.jxpath.ri.EvalContext)>($stack7)""];\n	""26"" [label=""it = virtualinvoke list.<java.util.ArrayList: java.util.Iterator iterator()>()""];\n	""27"" [label=""list = $stack17""];\n	""28"" [label=""list = $stack6""];\n	""29"" [label=""pointer = (org.apache.commons.jxpath.ri.model.NodePointer) $stack11""];\n	""30"" [label=""return""];\n	""31"" [label=""specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>()""];\n	""32"" [label=""specialinvoke $stack22.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack21, list)""];\n	""33"" [label=""specialinvoke $stack6.<java.util.ArrayList: void <init>()>()""];\n	""34"" [label=""staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(list, $stack9)""];\n	""35"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""36"" [label=""throw $stack22""];\n	""37"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>($stack16)""];\n	""38"" [label=""virtualinvoke pointer.<org.apache.commons.jxpath.ri.model.NodePointer: void remove()>()""];\n	""39"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void removePath(java.lang.String)>($stack15)""];\n	""40"" [label=""xpath := @parameter0: java.lang.String""];\n	""1"" -> ""22""[label=""cfg_next""];\n	""1"" -> ""8""[label=""cfg_except""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""32""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""33""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_except""];\n	""15"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""8""[label=""cfg_except""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""8""[label=""cfg_except""];\n	""17"" -> ""34""[label=""cfg_next""];\n	""17"" -> ""8""[label=""cfg_except""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""19"" -> ""16""[label=""cfg_goto""];\n	""19"" -> ""8""[label=""cfg_except""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_except""];\n	""20"" -> ""30""[label=""cfg_goto""];\n	""21"" -> ""3""[label=""cfg_goto""];\n	""21"" -> ""8""[label=""cfg_except""];\n	""22"" -> ""2""[label=""cfg_false""];\n	""22"" -> ""20""[label=""cfg_true""];\n	""22"" -> ""8""[label=""cfg_except""];\n	""23"" -> ""20""[label=""cfg_true""];\n	""23"" -> ""4""[label=""cfg_false""];\n	""23"" -> ""8""[label=""cfg_except""];\n	""24"" -> ""17""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_false""];\n	""24"" -> ""8""[label=""cfg_except""];\n	""25"" -> ""16""[label=""cfg_next""];\n	""25"" -> ""8""[label=""cfg_except""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""26"" -> ""8""[label=""cfg_except""];\n	""27"" -> ""13""[label=""cfg_next""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""28"" -> ""8""[label=""cfg_except""];\n	""29"" -> ""38""[label=""cfg_next""];\n	""29"" -> ""8""[label=""cfg_except""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_except""];\n	""31"" -> ""10""[label=""cfg_next""];\n	""32"" -> ""36""[label=""cfg_next""];\n	""33"" -> ""28""[label=""cfg_next""];\n	""33"" -> ""8""[label=""cfg_except""];\n	""34"" -> ""26""[label=""cfg_next""];\n	""34"" -> ""8""[label=""cfg_except""];\n	""35"" -> ""40""[label=""cfg_next""];\n	""37"" -> ""19""[label=""cfg_next""];\n	""37"" -> ""8""[label=""cfg_except""];\n	""38"" -> ""3""[label=""cfg_next""];\n	""38"" -> ""8""[label=""cfg_except""];\n	""39"" -> ""21""[label=""cfg_next""];\n	""39"" -> ""8""[label=""cfg_except""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_except""];\n	""40"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_except""];\n	""6"" -> ""39""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_except""];\n	""7"" -> ""37""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_except""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""31""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getRelativeContext(Pointer),Method,No Comment,"@Override\npublic JXPathContext getRelativeContext(final Pointer pointer) {\n    final Object contextBean = pointer.getNode();\n    if (contextBean == null) {\n        throw new JXPathException(""Cannot create a relative context for a non-existent node: "" + pointer);\n    }\n    return new JXPathContextReferenceImpl(this, contextBean, pointer);\n}",org.apache.commons.jxpath.JXPathContext getRelativeContext(org.apache.commons.jxpath.Pointer),"digraph cfg_getRelativeContext {\n	""1"" [label=""$stack3 = new org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""2"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot create a relative context for a non-existent node: \"")""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(pointer)""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack8 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""contextBean = interfaceinvoke pointer.<org.apache.commons.jxpath.Pointer: java.lang.Object getNode()>()""];\n	""8"" [label=""if contextBean != null""];\n	""9"" [label=""pointer := @parameter0: org.apache.commons.jxpath.Pointer""];\n	""10"" [label=""return $stack3""];\n	""11"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void <init>(org.apache.commons.jxpath.JXPathContext,java.lang.Object,org.apache.commons.jxpath.Pointer)>(this, contextBean, pointer)""];\n	""12"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""13"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>($stack7)""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""15"" [label=""throw $stack8""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getContextPointer(),Method,No Comment,@Override\npublic Pointer getContextPointer() {\n    return contextPointer;\n},org.apache.commons.jxpath.Pointer getContextPointer(),"digraph cfg_getContextPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer contextPointer>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getAbsoluteRootPointer(),Method,* Gets absolute root pointer.\n     * @return NodePointer,private NodePointer getAbsoluteRootPointer() {\n    return (NodePointer) rootPointer;\n},org.apache.commons.jxpath.ri.model.NodePointer getAbsoluteRootPointer(),"digraph cfg_getAbsoluteRootPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer rootPointer>""];\n	""2"" [label=""$stack2 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack1""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getEvalContext(),Method,* Gets the evaluation context.\n     * @return EvalContext,"private EvalContext getEvalContext() {\n    return new InitialContext(new RootContext(this, (NodePointer) getContextPointer()));\n}",org.apache.commons.jxpath.ri.EvalContext getEvalContext(),"digraph cfg_getEvalContext {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer getContextPointer()>()""];\n	""2"" [label=""$stack2 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack1""];\n	""3"" [label=""$stack3 = new org.apache.commons.jxpath.ri.axes.RootContext""];\n	""4"" [label=""$stack4 = new org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.axes.RootContext: void <init>(org.apache.commons.jxpath.ri.JXPathContextReferenceImpl,org.apache.commons.jxpath.ri.model.NodePointer)>(this, $stack2)""];\n	""7"" [label=""specialinvoke $stack4.<org.apache.commons.jxpath.ri.axes.InitialContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>($stack3)""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",private 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getAbsoluteRootContext(),Method,* Gets the absolute root context.\n     * @return EvalContext,"public EvalContext getAbsoluteRootContext() {\n    return new InitialContext(new RootContext(this, getAbsoluteRootPointer()));\n}",org.apache.commons.jxpath.ri.EvalContext getAbsoluteRootContext(),"digraph cfg_getAbsoluteRootContext {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.model.NodePointer getAbsoluteRootPointer()>()""];\n	""2"" [label=""$stack2 = new org.apache.commons.jxpath.ri.axes.RootContext""];\n	""3"" [label=""$stack3 = new org.apache.commons.jxpath.ri.axes.InitialContext""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack2.<org.apache.commons.jxpath.ri.axes.RootContext: void <init>(org.apache.commons.jxpath.ri.JXPathContextReferenceImpl,org.apache.commons.jxpath.ri.model.NodePointer)>(this, $stack1)""];\n	""6"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.ri.axes.InitialContext: void <init>(org.apache.commons.jxpath.ri.EvalContext)>($stack2)""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getVariablePointer(QName),Method,* Gets a VariablePointer for the given variable name.\n     * @param name variable name\n     * @return NodePointer,"public NodePointer getVariablePointer(final QName name) {\n    return NodePointer.newNodePointer(name, VariablePointerFactory.contextWrapper(this), getLocale());\n}",org.apache.commons.jxpath.ri.model.NodePointer getVariablePointer(org.apache.commons.jxpath.ri.QName),"digraph cfg_getVariablePointer {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Locale getLocale()>()""];\n	""2"" [label=""$stack3 = staticinvoke <org.apache.commons.jxpath.ri.model.VariablePointerFactory: org.apache.commons.jxpath.ri.model.VariablePointerFactory$VariableContextWrapper contextWrapper(org.apache.commons.jxpath.JXPathContext)>(this)""];\n	""3"" [label=""$stack4 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer newNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>(name, $stack3, $stack2)""];\n	""4"" [label=""name := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getFunction(QName,Object[])",Method,* Gets the named Function.\n     * @param functionName name\n     * @param parameters function args\n     * @return Function,"public Function getFunction(final QName functionName, final Object[] parameters) {\n    final String namespace = functionName.getPrefix();\n    final String name = functionName.getName();\n    JXPathContext funcCtx = this;\n    Function func;\n    Functions funcs;\n    while (funcCtx != null) {\n        funcs = funcCtx.getFunctions();\n        if (funcs != null) {\n            func = funcs.getFunction(namespace, name, parameters);\n            if (func != null) {\n                return func;\n            }\n        }\n        funcCtx = funcCtx.getParentContext();\n    }\n    throw new JXPathFunctionNotFoundException(""Undefined function: "" + functionName.toString());\n}","org.apache.commons.jxpath.Function getFunction(org.apache.commons.jxpath.ri.QName,java.lang.Object[])","digraph cfg_getFunction {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Undefined function: \"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = new org.apache.commons.jxpath.JXPathFunctionNotFoundException""];\n	""5"" [label=""$stack8 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack9 = virtualinvoke functionName.<org.apache.commons.jxpath.ri.QName: java.lang.String toString()>()""];\n	""7"" [label=""func = interfaceinvoke funcs.<org.apache.commons.jxpath.Functions: org.apache.commons.jxpath.Function getFunction(java.lang.String,java.lang.String,java.lang.Object[])>(namespace, name, parameters)""];\n	""8"" [label=""funcCtx = this""];\n	""9"" [label=""funcCtx = virtualinvoke funcCtx.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.JXPathContext getParentContext()>()""];\n	""10"" [label=""funcs = virtualinvoke funcCtx.<org.apache.commons.jxpath.JXPathContext: org.apache.commons.jxpath.Functions getFunctions()>()""];\n	""11"" [label=""functionName := @parameter0: org.apache.commons.jxpath.ri.QName""];\n	""12"" [label=""goto""];\n	""13"" [label=""if func == null""];\n	""14"" [label=""if funcCtx == null""];\n	""15"" [label=""if funcs == null""];\n	""16"" [label=""name = virtualinvoke functionName.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>()""];\n	""17"" [label=""namespace = virtualinvoke functionName.<org.apache.commons.jxpath.ri.QName: java.lang.String getPrefix()>()""];\n	""18"" [label=""parameters := @parameter1: java.lang.Object[]""];\n	""19"" [label=""return func""];\n	""20"" [label=""specialinvoke $stack13.<org.apache.commons.jxpath.JXPathFunctionNotFoundException: void <init>(java.lang.String)>($stack12)""];\n	""21"" [label=""specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>()""];\n	""22"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""23"" [label=""throw $stack13""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_goto""];\n	""13"" -> ""19""[label=""cfg_false""];\n	""13"" -> ""9""[label=""cfg_true""];\n	""14"" -> ""10""[label=""cfg_false""];\n	""14"" -> ""4""[label=""cfg_true""];\n	""15"" -> ""7""[label=""cfg_false""];\n	""15"" -> ""9""[label=""cfg_true""];\n	""16"" -> ""8""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.registerNamespace(String,String)",Method,No Comment,"@Override\npublic void registerNamespace(final String prefix, final String namespaceURI) {\n    if (namespaceResolver.isSealed()) {\n        namespaceResolver = (NamespaceResolver) namespaceResolver.clone();\n    }\n    namespaceResolver.registerNamespace(prefix, namespaceURI);\n}","void registerNamespace(java.lang.String,java.lang.String)","digraph cfg_registerNamespace {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.NamespaceResolver: boolean isSealed()>()""];\n	""3"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""4"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.Object clone()>()""];\n	""6"" [label=""$stack8 = (org.apache.commons.jxpath.ri.NamespaceResolver) $stack7""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""namespaceURI := @parameter1: java.lang.String""];\n	""9"" [label=""prefix := @parameter0: java.lang.String""];\n	""10"" [label=""return""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver> = $stack8""];\n	""13"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.NamespaceResolver: void registerNamespace(java.lang.String,java.lang.String)>(prefix, namespaceURI)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getNamespaceURI(String),Method,No Comment,@Override\npublic String getNamespaceURI(final String prefix) {\n    return namespaceResolver.getNamespaceURI(prefix);\n},java.lang.String getNamespaceURI(java.lang.String),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getNamespaceURI(java.lang.String)>(prefix)""];\n	""3"" [label=""prefix := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getPrefix(String),Method,* {@inheritDoc}\n     * @see org.apache.commons.jxpath.JXPathContext#getPrefix(java.lang.String),@Override\npublic String getPrefix(final String namespaceURI) {\n    return namespaceResolver.getPrefix(namespaceURI);\n},java.lang.String getPrefix(java.lang.String),"digraph cfg_getPrefix {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.String getPrefix(java.lang.String)>(namespaceURI)""];\n	""3"" [label=""namespaceURI := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setNamespaceContextPointer(Pointer),Method,No Comment,@Override\npublic void setNamespaceContextPointer(final Pointer pointer) {\n    if (namespaceResolver.isSealed()) {\n        namespaceResolver = (NamespaceResolver) namespaceResolver.clone();\n    }\n    namespaceResolver.setNamespaceContextPointer((NodePointer) pointer);\n},void setNamespaceContextPointer(org.apache.commons.jxpath.Pointer),"digraph cfg_setNamespaceContextPointer {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.NamespaceResolver: boolean isSealed()>()""];\n	""3"" [label=""$stack4 = (org.apache.commons.jxpath.ri.model.NodePointer) pointer""];\n	""4"" [label=""$stack5 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""5"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.NamespaceResolver: java.lang.Object clone()>()""];\n	""7"" [label=""$stack8 = (org.apache.commons.jxpath.ri.NamespaceResolver) $stack7""];\n	""8"" [label=""if $stack3 == 0""];\n	""9"" [label=""pointer := @parameter0: org.apache.commons.jxpath.Pointer""];\n	""10"" [label=""return""];\n	""11"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""12"" [label=""this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver> = $stack8""];\n	""13"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.NamespaceResolver: void setNamespaceContextPointer(org.apache.commons.jxpath.ri.model.NodePointer)>($stack4)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getNamespaceContextPointer(),Method,No Comment,@Override\npublic Pointer getNamespaceContextPointer() {\n    return namespaceResolver.getNamespaceContextPointer();\n},org.apache.commons.jxpath.Pointer getNamespaceContextPointer(),"digraph cfg_getNamespaceContextPointer {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.NamespaceResolver: org.apache.commons.jxpath.Pointer getNamespaceContextPointer()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.getNamespaceResolver(),Method,* Gets the namespace resolver.\n     * @return NamespaceResolver,public NamespaceResolver getNamespaceResolver() {\n    namespaceResolver.seal();\n    return namespaceResolver;\n},org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver(),"digraph cfg_getNamespaceResolver {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""5"" [label=""virtualinvoke $stack1.<org.apache.commons.jxpath.ri.NamespaceResolver: void seal()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.setExceptionHandler(ExceptionHandler),Method,* {@inheritDoc},@Override\npublic void setExceptionHandler(final ExceptionHandler exceptionHandler) {\n    if (rootPointer instanceof NodePointer) {\n        ((NodePointer) rootPointer).setExceptionHandler(exceptionHandler);\n    }\n},void setExceptionHandler(org.apache.commons.jxpath.ExceptionHandler),"digraph cfg_setExceptionHandler {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer rootPointer>""];\n	""2"" [label=""$stack3 = $stack2 instanceof org.apache.commons.jxpath.ri.model.NodePointer""];\n	""3"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer rootPointer>""];\n	""4"" [label=""$stack5 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack4""];\n	""5"" [label=""exceptionHandler := @parameter0: org.apache.commons.jxpath.ExceptionHandler""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""return""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""9"" [label=""virtualinvoke $stack5.<org.apache.commons.jxpath.ri.model.NodePointer: void setExceptionHandler(org.apache.commons.jxpath.ExceptionHandler)>(exceptionHandler)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.allocateConditionally(String,String)",Method,"* Checks if existenceCheckClass exists on the class path. If so, allocates\n     * an instance of the specified class, otherwise returns null.\n     * @param className to instantiate\n     * @param existenceCheckClassName guard class\n     * @return className instance","public static Object allocateConditionally(final String className, final String existenceCheckClassName) {\n    try {\n        try {\n            ClassLoaderUtil.getClass(existenceCheckClassName, true);\n        } catch (final ClassNotFoundException ex) {\n            return null;\n        }\n        final Class cls = ClassLoaderUtil.getClass(className, true);\n        return cls.getConstructor().newInstance();\n    } catch (final Exception ex) {\n        throw new JXPathException(""Cannot allocate "" + className, ex);\n    }\n}","java.lang.Object allocateConditionally(java.lang.String,java.lang.String)","digraph cfg_allocateConditionally {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.JXPathException""];\n	""4"" [label=""$stack13 := @caughtexception""];\n	""5"" [label=""$stack3 = newarray (java.lang.Class)[0]""];\n	""6"" [label=""$stack4 = newarray (java.lang.Object)[0]""];\n	""7"" [label=""$stack5 = virtualinvoke ex.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack3)""];\n	""8"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack4)""];\n	""9"" [label=""$stack7 := @caughtexception""];\n	""10"" [label=""$stack8 = new java.lang.StringBuilder""];\n	""11"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot allocate \"")""];\n	""12"" [label=""className := @parameter0: java.lang.String""];\n	""13"" [label=""ex = $stack13""];\n	""14"" [label=""ex = $stack7""];\n	""15"" [label=""ex = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.String,boolean)>(className, 1)""];\n	""16"" [label=""existenceCheckClassName := @parameter1: java.lang.String""];\n	""17"" [label=""goto""];\n	""18"" [label=""return $stack6""];\n	""19"" [label=""return null""];\n	""20"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack11, ex)""];\n	""21"" [label=""specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>()""];\n	""22"" [label=""staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.String,boolean)>(existenceCheckClassName, 1)""];\n	""23"" [label=""throw $stack12""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_except""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_except""];\n	""16"" -> ""22""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_goto""];\n	""17"" -> ""9""[label=""cfg_except""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_next""];\n	""22"" -> ""4""[label=""cfg_except""];\n	""22"" -> ""9""[label=""cfg_except""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_except""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_except""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_except""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_except""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_except""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.<init>(JXPathContext,Object)",Constructor,* Create a new JXPathContextReferenceImpl.\n     * @param parentContext parent context\n     * @param contextBean Object,"protected JXPathContextReferenceImpl(final JXPathContext parentContext, final Object contextBean) {\n    this(parentContext, contextBean, null);\n}","void <init>(org.apache.commons.jxpath.JXPathContext,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""contextBean := @parameter1: java.lang.Object""];\n	""2"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void <init>(org.apache.commons.jxpath.JXPathContext,java.lang.Object,org.apache.commons.jxpath.Pointer)>(parentContext, contextBean, null)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"org.apache.commons.jxpath.ri.JXPathContextReferenceImpl.<init>(JXPathContext,Object,Pointer)",Constructor,* Create a new JXPathContextReferenceImpl.\n     * @param parentContext parent context\n     * @param contextBean Object\n     * @param contextPointer context pointer,"public JXPathContextReferenceImpl(final JXPathContext parentContext, final Object contextBean, final Pointer contextPointer) {\n    super(parentContext, contextBean);\n    synchronized (nodeFactories) {\n        createNodeFactoryArray();\n    }\n    if (contextPointer != null) {\n        this.contextPointer = contextPointer;\n        this.rootPointer = NodePointer.newNodePointer(new QName(null, ""root""), contextPointer.getRootNode(), getLocale());\n    } else {\n        this.contextPointer = NodePointer.newNodePointer(new QName(null, ""root""), contextBean, getLocale());\n        this.rootPointer = this.contextPointer;\n    }\n    NamespaceResolver parentNR = null;\n    if (parentContext instanceof JXPathContextReferenceImpl) {\n        parentNR = ((JXPathContextReferenceImpl) parentContext).getNamespaceResolver();\n    }\n    namespaceResolver = new NamespaceResolver(parentNR);\n    namespaceResolver.setNamespaceContextPointer((NodePointer) this.contextPointer);\n}","void <init>(org.apache.commons.jxpath.JXPathContext,java.lang.Object,org.apache.commons.jxpath.Pointer)","digraph cfg_init {\n	""1"" [label=""$stack10 = parentContext instanceof org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.ri.NamespaceResolver""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer contextPointer>""];\n	""4"" [label=""$stack13 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack12""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver>""];\n	""6"" [label=""$stack15 = (org.apache.commons.jxpath.ri.JXPathContextReferenceImpl) parentContext""];\n	""7"" [label=""$stack16 = new org.apache.commons.jxpath.ri.QName""];\n	""8"" [label=""$stack17 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Locale getLocale()>()""];\n	""9"" [label=""$stack18 = interfaceinvoke contextPointer.<org.apache.commons.jxpath.Pointer: java.lang.Object getRootNode()>()""];\n	""10"" [label=""$stack19 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer newNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>($stack16, $stack18, $stack17)""];\n	""11"" [label=""$stack20 := @caughtexception""];\n	""12"" [label=""$stack6 = new org.apache.commons.jxpath.ri.QName""];\n	""13"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Locale getLocale()>()""];\n	""14"" [label=""$stack8 = staticinvoke <org.apache.commons.jxpath.ri.model.NodePointer: org.apache.commons.jxpath.ri.model.NodePointer newNodePointer(org.apache.commons.jxpath.ri.QName,java.lang.Object,java.util.Locale)>($stack6, contextBean, $stack7)""];\n	""15"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer contextPointer>""];\n	""16"" [label=""contextBean := @parameter1: java.lang.Object""];\n	""17"" [label=""contextPointer := @parameter2: org.apache.commons.jxpath.Pointer""];\n	""18"" [label=""entermonitor parentNR""];\n	""19"" [label=""exitmonitor parentNR""];\n	""20"" [label=""exitmonitor parentNR""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack10 == 0""];\n	""24"" [label=""if contextPointer == null""];\n	""25"" [label=""l5 = $stack20""];\n	""26"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.JXPathContext""];\n	""27"" [label=""parentNR = <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: java.util.Vector nodeFactories>""];\n	""28"" [label=""parentNR = null""];\n	""29"" [label=""parentNR = virtualinvoke $stack15.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver getNamespaceResolver()>()""];\n	""30"" [label=""return""];\n	""31"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.ri.NamespaceResolver: void <init>(org.apache.commons.jxpath.ri.NamespaceResolver)>(parentNR)""];\n	""32"" [label=""specialinvoke $stack16.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(null, \""root\"")""];\n	""33"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(null, \""root\"")""];\n	""34"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathContext: void <init>(org.apache.commons.jxpath.JXPathContext,java.lang.Object)>(parentContext, contextBean)""];\n	""35"" [label=""staticinvoke <org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: void createNodeFactoryArray()>()""];\n	""36"" [label=""this := @this: org.apache.commons.jxpath.ri.JXPathContextReferenceImpl""];\n	""37"" [label=""this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer contextPointer> = $stack8""];\n	""38"" [label=""this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer contextPointer> = contextPointer""];\n	""39"" [label=""this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer rootPointer> = $stack19""];\n	""40"" [label=""this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.Pointer rootPointer> = $stack9""];\n	""41"" [label=""this.<org.apache.commons.jxpath.ri.JXPathContextReferenceImpl: org.apache.commons.jxpath.ri.NamespaceResolver namespaceResolver> = $stack11""];\n	""42"" [label=""throw l5""];\n	""43"" [label=""virtualinvoke $stack14.<org.apache.commons.jxpath.ri.NamespaceResolver: void setNamespaceContextPointer(org.apache.commons.jxpath.ri.model.NodePointer)>($stack13)""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""39""[label=""cfg_next""];\n	""11"" -> ""11""[label=""cfg_except""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""33""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""37""[label=""cfg_next""];\n	""15"" -> ""40""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""34""[label=""cfg_next""];\n	""18"" -> ""35""[label=""cfg_next""];\n	""19"" -> ""11""[label=""cfg_except""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_except""];\n	""20"" -> ""42""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_goto""];\n	""22"" -> ""28""[label=""cfg_goto""];\n	""23"" -> ""2""[label=""cfg_true""];\n	""23"" -> ""6""[label=""cfg_false""];\n	""24"" -> ""12""[label=""cfg_true""];\n	""24"" -> ""38""[label=""cfg_false""];\n	""25"" -> ""11""[label=""cfg_except""];\n	""25"" -> ""20""[label=""cfg_next""];\n	""26"" -> ""16""[label=""cfg_next""];\n	""27"" -> ""18""[label=""cfg_next""];\n	""28"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""31"" -> ""41""[label=""cfg_next""];\n	""32"" -> ""9""[label=""cfg_next""];\n	""33"" -> ""13""[label=""cfg_next""];\n	""34"" -> ""27""[label=""cfg_next""];\n	""35"" -> ""11""[label=""cfg_except""];\n	""35"" -> ""19""[label=""cfg_next""];\n	""36"" -> ""26""[label=""cfg_next""];\n	""37"" -> ""15""[label=""cfg_next""];\n	""38"" -> ""7""[label=""cfg_next""];\n	""39"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""43""[label=""cfg_next""];\n	""40"" -> ""28""[label=""cfg_next""];\n	""41"" -> ""5""[label=""cfg_next""];\n	""43"" -> ""30""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""29""[label=""cfg_next""];\n	""7"" -> ""32""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getContextNodePointer(),Method,No Comment,@Override\npublic Pointer getContextNodePointer() {\n    return getCurrentNodePointer();\n},org.apache.commons.jxpath.Pointer getContextNodePointer(),"digraph cfg_getContextNodePointer {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getJXPathContext(),Method,No Comment,@Override\npublic JXPathContext getJXPathContext() {\n    return getRootContext().getJXPathContext();\n},org.apache.commons.jxpath.JXPathContext getJXPathContext(),"digraph cfg_getJXPathContext {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<org.apache.commons.jxpath.ri.axes.RootContext: org.apache.commons.jxpath.JXPathContext getJXPathContext()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getPosition(),Method,No Comment,@Override\npublic int getPosition() {\n    return position;\n},int getPosition(),"digraph cfg_getPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getDocumentOrder(),Method,"* Determines the document order for this context.\n     *\n     * @return 1 ascending order, -1 descending order,\n     *  0 - does not require ordering",public int getDocumentOrder() {\n    return parentContext != null && parentContext.isChildOrderingRequired() ? 1 : 0;\n},int getDocumentOrder(),"digraph cfg_getDocumentOrder {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.EvalContext: boolean isChildOrderingRequired()>()""];\n	""4"" [label=""$stack4 = 0""];\n	""5"" [label=""$stack4 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack1 == null""];\n	""8"" [label=""if $stack3 == 0""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.isChildOrderingRequired(),Method,"* Even if this context has the natural ordering and therefore does\n     * not require collecting and sorting all nodes prior to returning them,\n     * such operation may be required for any child context.\n     * @return boolean","public boolean isChildOrderingRequired() {\n    // Default behavior: if this context needs to be ordered,\n    // the children need to be ordered too\n    return getDocumentOrder() != 0;\n}",boolean isChildOrderingRequired(),"digraph cfg_isChildOrderingRequired {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: int getDocumentOrder()>()""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == 0""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.hasNext(),Method,* Returns true if there are mode nodes matching the context's constraints.\n     * @return boolean,@Override\npublic boolean hasNext() {\n    if (pointerIterator != null) {\n        return pointerIterator.hasNext();\n    }\n    if (getDocumentOrder() != 0) {\n        return constructIterator();\n    }\n    if (!done && !hasPerformedIteratorStep) {\n        performIteratorStep();\n    }\n    return !done;\n},boolean hasNext(),"digraph cfg_hasNext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: java.util.Iterator pointerIterator>""];\n	""2"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: int getDocumentOrder()>()""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.EvalContext: boolean done>""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.EvalContext: boolean done>""];\n	""5"" [label=""$stack5 = 0""];\n	""6"" [label=""$stack5 = 1""];\n	""7"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.EvalContext: boolean hasPerformedIteratorStep>""];\n	""8"" [label=""$stack7 = specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean constructIterator()>()""];\n	""9"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.EvalContext: java.util.Iterator pointerIterator>""];\n	""10"" [label=""$stack9 = interfaceinvoke $stack8.<java.util.Iterator: boolean hasNext()>()""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack1 == null""];\n	""13"" [label=""if $stack2 == 0""];\n	""14"" [label=""if $stack3 != 0""];\n	""15"" [label=""if $stack4 != 0""];\n	""16"" [label=""if $stack6 != 0""];\n	""17"" [label=""return $stack5""];\n	""18"" [label=""return $stack7""];\n	""19"" [label=""return $stack9""];\n	""20"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void performIteratorStep()>()""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_goto""];\n	""12"" -> ""2""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""13"" -> ""3""[label=""cfg_true""];\n	""13"" -> ""8""[label=""cfg_false""];\n	""14"" -> ""4""[label=""cfg_true""];\n	""14"" -> ""7""[label=""cfg_false""];\n	""15"" -> ""5""[label=""cfg_true""];\n	""15"" -> ""6""[label=""cfg_false""];\n	""16"" -> ""20""[label=""cfg_false""];\n	""16"" -> ""4""[label=""cfg_true""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""4""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.next(),Method,* Returns the next node pointer in the context\n     * @return Object,@Override\npublic Object next() {\n    if (pointerIterator != null) {\n        return pointerIterator.next();\n    }\n    if (getDocumentOrder() != 0) {\n        if (!constructIterator()) {\n            throw new NoSuchElementException();\n        }\n        return pointerIterator.next();\n    }\n    if (!done && !hasPerformedIteratorStep) {\n        performIteratorStep();\n    }\n    if (done) {\n        throw new NoSuchElementException();\n    }\n    hasPerformedIteratorStep = false;\n    return getCurrentNodePointer();\n},java.lang.Object next(),"digraph cfg_next {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: java.util.Iterator pointerIterator>""];\n	""2"" [label=""$stack10 = interfaceinvoke $stack9.<java.util.Iterator: java.lang.Object next()>()""];\n	""3"" [label=""$stack11 = new java.util.NoSuchElementException""];\n	""4"" [label=""$stack12 = this.<org.apache.commons.jxpath.ri.EvalContext: java.util.Iterator pointerIterator>""];\n	""5"" [label=""$stack13 = interfaceinvoke $stack12.<java.util.Iterator: java.lang.Object next()>()""];\n	""6"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: int getDocumentOrder()>()""];\n	""7"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.EvalContext: boolean done>""];\n	""8"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.EvalContext: boolean done>""];\n	""9"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""10"" [label=""$stack6 = new java.util.NoSuchElementException""];\n	""11"" [label=""$stack7 = this.<org.apache.commons.jxpath.ri.EvalContext: boolean hasPerformedIteratorStep>""];\n	""12"" [label=""$stack8 = specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean constructIterator()>()""];\n	""13"" [label=""$stack9 = this.<org.apache.commons.jxpath.ri.EvalContext: java.util.Iterator pointerIterator>""];\n	""14"" [label=""if $stack1 == null""];\n	""15"" [label=""if $stack2 == 0""];\n	""16"" [label=""if $stack3 != 0""];\n	""17"" [label=""if $stack4 == 0""];\n	""18"" [label=""if $stack7 != 0""];\n	""19"" [label=""if $stack8 != 0""];\n	""20"" [label=""return $stack10""];\n	""21"" [label=""return $stack13""];\n	""22"" [label=""return $stack5""];\n	""23"" [label=""specialinvoke $stack11.<java.util.NoSuchElementException: void <init>()>()""];\n	""24"" [label=""specialinvoke $stack6.<java.util.NoSuchElementException: void <init>()>()""];\n	""25"" [label=""specialinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void performIteratorStep()>()""];\n	""26"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""27"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean hasPerformedIteratorStep> = 0""];\n	""28"" [label=""throw $stack11""];\n	""29"" [label=""throw $stack6""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""24""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""15"" -> ""12""[label=""cfg_false""];\n	""15"" -> ""7""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_false""];\n	""16"" -> ""8""[label=""cfg_true""];\n	""17"" -> ""10""[label=""cfg_false""];\n	""17"" -> ""27""[label=""cfg_true""];\n	""18"" -> ""25""[label=""cfg_false""];\n	""18"" -> ""8""[label=""cfg_true""];\n	""19"" -> ""13""[label=""cfg_true""];\n	""19"" -> ""3""[label=""cfg_false""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""23"" -> ""28""[label=""cfg_next""];\n	""24"" -> ""29""[label=""cfg_next""];\n	""25"" -> ""8""[label=""cfg_next""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""27"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.performIteratorStep(),Method,* Moves the iterator forward by one position,private void performIteratorStep() {\n    done = true;\n    if (position != 0 && nextNode()) {\n        done = false;\n    } else {\n        while (nextSet()) {\n            if (nextNode()) {\n                done = false;\n                break;\n            }\n        }\n    }\n    hasPerformedIteratorStep = true;\n},void performIteratorStep(),"digraph cfg_performIteratorStep {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: int position>""];\n	""2"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""4"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack1 == 0""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""if $stack3 == 0""];\n	""10"" [label=""if $stack4 == 0""];\n	""11"" [label=""return""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""13"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean done> = 0""];\n	""14"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean done> = 0""];\n	""15"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean done> = 1""];\n	""16"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean hasPerformedIteratorStep> = 1""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_goto""];\n	""6"" -> ""16""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""16""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""14""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.EvalContext.remove(),Method,* Operation is not supported\n     * @throws UnsupportedOperationException Always thrown.,"@Override\npublic void remove() {\n    throw new UnsupportedOperationException(""JXPath iterators cannot remove nodes"");\n}",void remove(),"digraph cfg_remove {\n	""1"" [label=""$stack1 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\""JXPath iterators cannot remove nodes\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""4"" [label=""throw $stack1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.constructIterator(),Method,* Constructs an iterator.\n     * @return whether the Iterator was constructed,private boolean constructIterator() {\n    final HashSet<Pointer> set = new HashSet<>();\n    final ArrayList<Pointer> list = new ArrayList<>();\n    while (nextSet()) {\n        while (nextNode()) {\n            final NodePointer pointer = getCurrentNodePointer();\n            if (!set.contains(pointer)) {\n                set.add(pointer);\n                list.add(pointer);\n            }\n        }\n    }\n    if (list.isEmpty()) {\n        return false;\n    }\n    sortPointers(list);\n    pointerIterator = list.iterator();\n    return true;\n},boolean constructIterator(),"digraph cfg_constructIterator {\n	""1"" [label=""$stack10 = virtualinvoke set.<java.util.HashSet: boolean contains(java.lang.Object)>(pointer)""];\n	""2"" [label=""$stack4 = new java.util.HashSet""];\n	""3"" [label=""$stack5 = new java.util.ArrayList""];\n	""4"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""5"" [label=""$stack7 = virtualinvoke list.<java.util.ArrayList: boolean isEmpty()>()""];\n	""6"" [label=""$stack8 = virtualinvoke list.<java.util.ArrayList: java.util.Iterator iterator()>()""];\n	""7"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack10 != 0""];\n	""10"" [label=""if $stack6 == 0""];\n	""11"" [label=""if $stack7 == 0""];\n	""12"" [label=""if $stack9 == 0""];\n	""13"" [label=""list = $stack5""];\n	""14"" [label=""pointer = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""15"" [label=""return 0""];\n	""16"" [label=""return 1""];\n	""17"" [label=""set = $stack4""];\n	""18"" [label=""specialinvoke $stack4.<java.util.HashSet: void <init>()>()""];\n	""19"" [label=""specialinvoke $stack5.<java.util.ArrayList: void <init>()>()""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""21"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: java.util.Iterator pointerIterator> = $stack8""];\n	""22"" [label=""virtualinvoke list.<java.util.ArrayList: boolean add(java.lang.Object)>(pointer)""];\n	""23"" [label=""virtualinvoke set.<java.util.HashSet: boolean add(java.lang.Object)>(pointer)""];\n	""24"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void sortPointers(java.util.List)>(list)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_true""];\n	""10"" -> ""7""[label=""cfg_false""];\n	""11"" -> ""15""[label=""cfg_false""];\n	""11"" -> ""24""[label=""cfg_true""];\n	""12"" -> ""14""[label=""cfg_false""];\n	""12"" -> ""4""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""22"" -> ""8""[label=""cfg_next""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_goto""];\n	""9"" -> ""23""[label=""cfg_false""];\n	""9"" -> ""8""[label=""cfg_true""];\n}\n",private 
org.apache.commons.jxpath.ri.EvalContext.sortPointers(List),Method,* Sort a list of pointers based on document order.\n     * @param l the list to sort.,"protected void sortPointers(final List l) {\n    switch(getDocumentOrder()) {\n        case 1:\n            Collections.sort(l);\n            break;\n        case -1:\n            Collections.sort(l, ReverseComparator.INSTANCE);\n            break;\n        default:\n            break;\n    }\n}",void sortPointers(java.util.List),"digraph cfg_sortPointers {\n	""1"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: int getDocumentOrder()>()""];\n	""2"" [label=""$stack3 = <org.apache.commons.jxpath.util.ReverseComparator: java.util.Comparator INSTANCE>""];\n	""3"" [label=""goto""];\n	""4"" [label=""goto""];\n	""5"" [label=""l := @parameter0: java.util.List""];\n	""6"" [label=""return""];\n	""7"" [label=""staticinvoke <java.util.Collections: void sort(java.util.List)>(l)""];\n	""8"" [label=""staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(l, $stack3)""];\n	""9"" [label=""switch($stack2) \{     case -1:     case 1:     default:  \}""];\n	""10"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_goto""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_switch""];\n	""9"" -> ""6""[label=""cfg_switch""];\n	""9"" -> ""7""[label=""cfg_switch""];\n}\n",protected 
org.apache.commons.jxpath.ri.EvalContext.getContextNodeList(),Method,* Returns the list of all Pointers in this context for the current\n     * position of the parent context.\n     * @return List,@Override\npublic List getContextNodeList() {\n    final int pos = position;\n    if (pos != 0) {\n        reset();\n    }\n    final List<Pointer> list = new ArrayList<>();\n    while (nextNode()) {\n        list.add(getCurrentNodePointer());\n    }\n    if (pos != 0) {\n        setPosition(pos);\n    } else {\n        reset();\n    }\n    return list;\n},java.util.List getContextNodeList(),"digraph cfg_getContextNodeList {\n	""1"" [label=""$stack3 = new java.util.ArrayList""];\n	""2"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""3"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""4"" [label=""goto""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 == 0""];\n	""7"" [label=""if pos == 0""];\n	""8"" [label=""if pos == 0""];\n	""9"" [label=""interfaceinvoke list.<java.util.List: boolean add(java.lang.Object)>($stack5)""];\n	""10"" [label=""list = $stack3""];\n	""11"" [label=""pos = this.<org.apache.commons.jxpath.ri.EvalContext: int position>""];\n	""12"" [label=""return list""];\n	""13"" [label=""specialinvoke $stack3.<java.util.ArrayList: void <init>()>()""];\n	""14"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""15"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean setPosition(int)>(pos)""];\n	""16"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""17"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_goto""];\n	""5"" -> ""12""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""8""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_true""];\n	""7"" -> ""16""[label=""cfg_false""];\n	""8"" -> ""15""[label=""cfg_false""];\n	""8"" -> ""17""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getNodeSet(),Method,"* Returns the list of all Pointers in this context for all positions\n     * of the parent contexts.  If there was an ongoing iteration over\n     * this context, the method should not be called.\n     * @return NodeSet","public NodeSet getNodeSet() {\n    if (position != 0) {\n        throw new JXPathException(""Simultaneous operations: "" + ""should not request pointer list while "" + ""iterating over an EvalContext"");\n    }\n    final BasicNodeSet set = new BasicNodeSet();\n    while (nextSet()) {\n        while (nextNode()) {\n            set.add((Pointer) getCurrentNodePointer().clone());\n        }\n    }\n    return set;\n}",org.apache.commons.jxpath.NodeSet getNodeSet(),"digraph cfg_getNodeSet {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.EvalContext: int position>""];\n	""2"" [label=""$stack3 = new org.apache.commons.jxpath.BasicNodeSet""];\n	""3"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""4"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""5"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object clone()>()""];\n	""7"" [label=""$stack8 = (org.apache.commons.jxpath.Pointer) $stack7""];\n	""8"" [label=""$stack9 = new org.apache.commons.jxpath.JXPathException""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack2 == 0""];\n	""11"" [label=""if $stack4 == 0""];\n	""12"" [label=""if $stack5 == 0""];\n	""13"" [label=""return set""];\n	""14"" [label=""set = $stack3""];\n	""15"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.BasicNodeSet: void <init>()>()""];\n	""16"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""Simultaneous operations: should not request pointer list while iterating over an EvalContext\"")""];\n	""17"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""18"" [label=""throw $stack9""];\n	""19"" [label=""virtualinvoke set.<org.apache.commons.jxpath.BasicNodeSet: void add(org.apache.commons.jxpath.Pointer)>($stack8)""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""10"" -> ""8""[label=""cfg_false""];\n	""11"" -> ""13""[label=""cfg_true""];\n	""11"" -> ""4""[label=""cfg_false""];\n	""12"" -> ""3""[label=""cfg_true""];\n	""12"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""19"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_goto""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getValue(),Method,"* Typically returns the NodeSet by calling getNodeSet(),\n     * but will be overridden for contexts that more naturally produce\n     * individual values, e.g. VariableContext\n     * @return Object",public Object getValue() {\n    return getNodeSet();\n},java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.NodeSet getNodeSet()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.toString(),Method,No Comment,"@Override\npublic String toString() {\n    final Pointer ptr = getContextNodePointer();\n    return ptr == null ? ""Empty expression context"" : ""Expression context ["" + getPosition() + ""] "" + ptr.asPath();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: int getPosition()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Expression context [\"")""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3)""];\n	""5"" [label=""$stack6 = interfaceinvoke ptr.<org.apache.commons.jxpath.Pointer: java.lang.String asPath()>()""];\n	""6"" [label=""$stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""] \"")""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6)""];\n	""8"" [label=""$stack9 = \""Empty expression context\""""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""goto""];\n	""11"" [label=""if ptr != null""];\n	""12"" [label=""ptr = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.Pointer getContextNodePointer()>()""];\n	""13"" [label=""return $stack9""];\n	""14"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_goto""];\n	""11"" -> ""1""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getRootContext(),Method,"* Returns the root context of the path, which provides easy\n     * access to variables and functions.\n     * @return RootContext",public RootContext getRootContext() {\n    if (rootContext == null) {\n        rootContext = parentContext.getRootContext();\n    }\n    return rootContext;\n},org.apache.commons.jxpath.ri.axes.RootContext getRootContext(),"digraph cfg_getRootContext {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext rootContext>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext rootContext>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext getRootContext()>()""];\n	""5"" [label=""if $stack1 != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.axes.RootContext rootContext> = $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.reset(),Method,"* Sets current position = 0, which is the pre-iteration state.",public void reset() {\n    position = 0;\n},void reset(),"digraph cfg_reset {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""3"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: int position> = 0""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getCurrentPosition(),Method,* Gets the current position.\n     * @return int position.,public int getCurrentPosition() {\n    return position;\n},int getCurrentPosition(),"digraph cfg_getCurrentPosition {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: int position>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getSingleNodePointer(),Method,* Returns the first encountered Pointer that matches the current\n     * context's criteria.\n     * @return Pointer,public Pointer getSingleNodePointer() {\n    reset();\n    while (nextSet()) {\n        if (nextNode()) {\n            return getCurrentNodePointer();\n        }\n    }\n    return null;\n},org.apache.commons.jxpath.Pointer getSingleNodePointer(),"digraph cfg_getSingleNodePointer {\n	""1"" [label=""$stack1 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""2"" [label=""$stack2 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer()>()""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""return null""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""9"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.getCurrentNodePointer(),Abstract Method,* Returns the current context node. Undefined before the beginning\n     * of the iteration.\n     * @return NodePoiner,public abstract NodePointer getCurrentNodePointer();,org.apache.commons.jxpath.ri.model.NodePointer getCurrentNodePointer(),digraph cfg_getCurrentNodePointer {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.EvalContext.nextSet(),Method,* Returns true if there is another sets of objects to interate over.\n     * Resets the current position and node.\n     * @return boolean,"public boolean nextSet() {\n    // Restart iteration within the set\n    reset();\n    // Most of the time you have one set per parent node\n    // First time this method is called, we should look for\n    // the first parent set that contains at least one node.\n    if (!startedSetIteration) {\n        startedSetIteration = true;\n        while (parentContext.nextSet()) {\n            if (parentContext.nextNode()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // In subsequent calls, we see if the parent context\n    // has any nodes left in the current set\n    if (parentContext.nextNode()) {\n        return true;\n    }\n    // If not, we look for the next set that contains\n    // at least one node\n    while (parentContext.nextSet()) {\n        if (parentContext.nextNode()) {\n            return true;\n        }\n    }\n    return false;\n}",boolean nextSet(),"digraph cfg_nextSet {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.ri.EvalContext: boolean startedSetIteration>""];\n	""2"" [label=""$stack10 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""4"" [label=""$stack2 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""5"" [label=""$stack3 = virtualinvoke $stack2.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""6"" [label=""$stack4 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""7"" [label=""$stack5 = virtualinvoke $stack4.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""8"" [label=""$stack6 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""9"" [label=""$stack7 = virtualinvoke $stack6.<org.apache.commons.jxpath.ri.EvalContext: boolean nextNode()>()""];\n	""10"" [label=""$stack8 = this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext>""];\n	""11"" [label=""$stack9 = virtualinvoke $stack8.<org.apache.commons.jxpath.ri.EvalContext: boolean nextSet()>()""];\n	""12"" [label=""if $stack1 != 0""];\n	""13"" [label=""if $stack11 == 0""];\n	""14"" [label=""if $stack3 == 0""];\n	""15"" [label=""if $stack5 == 0""];\n	""16"" [label=""if $stack7 == 0""];\n	""17"" [label=""if $stack9 == 0""];\n	""18"" [label=""return 0""];\n	""19"" [label=""return 0""];\n	""20"" [label=""return 1""];\n	""21"" [label=""return 1""];\n	""22"" [label=""return 1""];\n	""23"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""24"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean startedSetIteration> = 1""];\n	""25"" [label=""virtualinvoke this.<org.apache.commons.jxpath.ri.EvalContext: void reset()>()""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_false""];\n	""12"" -> ""4""[label=""cfg_true""];\n	""13"" -> ""10""[label=""cfg_true""];\n	""13"" -> ""20""[label=""cfg_false""];\n	""14"" -> ""21""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""15"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""8""[label=""cfg_false""];\n	""16"" -> ""22""[label=""cfg_false""];\n	""16"" -> ""6""[label=""cfg_true""];\n	""17"" -> ""18""[label=""cfg_true""];\n	""17"" -> ""2""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""10""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.nextNode(),Abstract Method,* Returns true if there is another object in the current set.\n     * Switches the current position and node to the next object.\n     * @return boolean,public abstract boolean nextNode();,boolean nextNode(),digraph cfg_nextNode {\n}\n,"public , abstract "
org.apache.commons.jxpath.ri.EvalContext.setPosition(int),Method,* Moves the current position to the specified index. Used with integer\n     * predicates to quickly get to the n'th element of the node set.\n     * Returns false if the position is out of the node set range.\n     * You can call it with 0 as the position argument to restart the iteration.\n     * @param position to set\n     * @return boolean,public boolean setPosition(final int position) {\n    this.position = position;\n    return true;\n},boolean setPosition(int),"digraph cfg_setPosition {\n	""1"" [label=""position := @parameter0: int""];\n	""2"" [label=""return 1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""4"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: int position> = position""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.ri.EvalContext.<init>(EvalContext),Constructor,* Create a new EvalContext.\n     * @param parentContext parent context,public EvalContext(final EvalContext parentContext) {\n    this.parentContext = parentContext;\n},void <init>(org.apache.commons.jxpath.ri.EvalContext),"digraph cfg_init {\n	""1"" [label=""parentContext := @parameter0: org.apache.commons.jxpath.ri.EvalContext""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.ri.EvalContext""];\n	""5"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean done> = 0""];\n	""6"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean hasPerformedIteratorStep> = 0""];\n	""7"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: boolean startedSetIteration> = 0""];\n	""8"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: int position> = 0""];\n	""9"" [label=""this.<org.apache.commons.jxpath.ri.EvalContext: org.apache.commons.jxpath.ri.EvalContext parentContext> = parentContext""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.Container.getValue(),Abstract Method,* Returns the contained value.\n     * @return Object value,Object getValue();,java.lang.Object getValue(),digraph cfg_getValue {\n}\n,default
org.apache.commons.jxpath.Container.setValue(Object),Abstract Method,* Modifies the value contained by this container.  May throw\n     * UnsupportedOperationException.\n     * @param value Object value to set.,void setValue(Object value);,void setValue(java.lang.Object),digraph cfg_setValue {\n}\n,default
org.apache.commons.jxpath.xml.DOMParser.parseXML(InputStream),Method,No Comment,"@Override\npublic Object parseXML(final InputStream stream) {\n    try {\n        final DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n        factory.setValidating(isValidating());\n        factory.setNamespaceAware(isNamespaceAware());\n        factory.setIgnoringElementContentWhitespace(isIgnoringElementContentWhitespace());\n        factory.setExpandEntityReferences(isExpandEntityReferences());\n        factory.setIgnoringComments(isIgnoringComments());\n        factory.setCoalescing(isCoalescing());\n        return factory.newDocumentBuilder().parse(stream);\n    } catch (final Exception ex) {\n        throw new JXPathException(""DOM parser error"", ex);\n    }\n}",java.lang.Object parseXML(java.io.InputStream),"digraph cfg_parseXML {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(stream)""];\n	""2"" [label=""$stack11 := @caughtexception""];\n	""3"" [label=""$stack12 = new org.apache.commons.jxpath.JXPathException""];\n	""4"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.xml.DOMParser: boolean isValidating()>()""];\n	""5"" [label=""$stack4 = virtualinvoke this.<org.apache.commons.jxpath.xml.DOMParser: boolean isNamespaceAware()>()""];\n	""6"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.xml.DOMParser: boolean isIgnoringElementContentWhitespace()>()""];\n	""7"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.xml.DOMParser: boolean isExpandEntityReferences()>()""];\n	""8"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.xml.DOMParser: boolean isIgnoringComments()>()""];\n	""9"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.xml.DOMParser: boolean isCoalescing()>()""];\n	""10"" [label=""$stack9 = virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>()""];\n	""11"" [label=""factory = $stack11""];\n	""12"" [label=""factory = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>()""];\n	""13"" [label=""return $stack10""];\n	""14"" [label=""specialinvoke $stack12.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>(\""DOM parser error\"", factory)""];\n	""15"" [label=""stream := @parameter0: java.io.InputStream""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.xml.DOMParser""];\n	""17"" [label=""throw $stack12""];\n	""18"" [label=""virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: void setCoalescing(boolean)>($stack8)""];\n	""19"" [label=""virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: void setExpandEntityReferences(boolean)>($stack6)""];\n	""20"" [label=""virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)>($stack7)""];\n	""21"" [label=""virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringElementContentWhitespace(boolean)>($stack5)""];\n	""22"" [label=""virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>($stack4)""];\n	""23"" [label=""virtualinvoke factory.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>($stack3)""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_except""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""2""[label=""cfg_except""];\n	""19"" -> ""2""[label=""cfg_except""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_except""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""2""[label=""cfg_except""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""22"" -> ""2""[label=""cfg_except""];\n	""22"" -> ""6""[label=""cfg_next""];\n	""23"" -> ""2""[label=""cfg_except""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_except""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_except""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_except""];\n	""6"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_except""];\n	""8"" -> ""2""[label=""cfg_except""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_except""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.setValidating(boolean),Method,* Sets whether the underlying parser should be validating.\n     * @param validating flag\n     * @see javax.xml.parsers.DocumentBuilderFactory#setValidating(boolean),public void setValidating(final boolean validating) {\n    this.validating = validating;\n},void setValidating(boolean),"digraph cfg_setValidating {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""3"" [label=""this.<org.apache.commons.jxpath.xml.XMLParser2: boolean validating> = validating""];\n	""4"" [label=""validating := @parameter0: boolean""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.isValidating(),Method,* Learn whether the underlying parser is validating.\n     * @return boolean\n     * @see javax.xml.parsers.DocumentBuilderFactory#isValidating(),public boolean isValidating() {\n    return validating;\n},boolean isValidating(),"digraph cfg_isValidating {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.xml.XMLParser2: boolean validating>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.isNamespaceAware(),Method,* Learn whether the underlying parser is ns-aware.\n     * @return boolean\n     * @see javax.xml.parsers.DocumentBuilderFactory#isNamespaceAware(),public boolean isNamespaceAware() {\n    return namespaceAware;\n},boolean isNamespaceAware(),"digraph cfg_isNamespaceAware {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.xml.XMLParser2: boolean namespaceAware>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.setNamespaceAware(boolean),Method,* Sets whether the underlying parser is ns-aware.\n     * @param namespaceAware flag\n     * @see javax.xml.parsers.DocumentBuilderFactory#setNamespaceAware(boolean),public void setNamespaceAware(final boolean namespaceAware) {\n    this.namespaceAware = namespaceAware;\n},void setNamespaceAware(boolean),"digraph cfg_setNamespaceAware {\n	""1"" [label=""namespaceAware := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""4"" [label=""this.<org.apache.commons.jxpath.xml.XMLParser2: boolean namespaceAware> = namespaceAware""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.setIgnoringElementContentWhitespace(boolean),Method,* Sets whether the underlying parser is ignoring whitespace.\n     * @param whitespace flag\n     * @see javax.xml.parsers.DocumentBuilderFactory#setIgnoringElementContentWhitespace(boolean),public void setIgnoringElementContentWhitespace(final boolean whitespace) {\n    this.whitespace = whitespace;\n},void setIgnoringElementContentWhitespace(boolean),"digraph cfg_setIgnoringElementContentWhitespace {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""3"" [label=""this.<org.apache.commons.jxpath.xml.XMLParser2: boolean whitespace> = whitespace""];\n	""4"" [label=""whitespace := @parameter0: boolean""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.isIgnoringElementContentWhitespace(),Method,* Learn whether the underlying parser is ignoring whitespace.\n     * @return boolean\n     * @see javax.xml.parsers.DocumentBuilderFactory#isIgnoringElementContentWhitespace(),public boolean isIgnoringElementContentWhitespace() {\n    return whitespace;\n},boolean isIgnoringElementContentWhitespace(),"digraph cfg_isIgnoringElementContentWhitespace {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.xml.XMLParser2: boolean whitespace>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.isExpandEntityReferences(),Method,* Learn whether the underlying parser expands entity references.\n     * @return boolean\n     * @see javax.xml.parsers.DocumentBuilderFactory#isExpandEntityReferences(),public boolean isExpandEntityReferences() {\n    return expandEntityRef;\n},boolean isExpandEntityReferences(),"digraph cfg_isExpandEntityReferences {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.xml.XMLParser2: boolean expandEntityRef>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.setExpandEntityReferences(boolean),Method,* Sets whether the underlying parser expands entity references.\n     * @param expandEntityRef flag\n     * @see javax.xml.parsers.DocumentBuilderFactory#setExpandEntityReferences(boolean),public void setExpandEntityReferences(final boolean expandEntityRef) {\n    this.expandEntityRef = expandEntityRef;\n},void setExpandEntityReferences(boolean),"digraph cfg_setExpandEntityReferences {\n	""1"" [label=""expandEntityRef := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""4"" [label=""this.<org.apache.commons.jxpath.xml.XMLParser2: boolean expandEntityRef> = expandEntityRef""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.isIgnoringComments(),Method,* Learn whether the underlying parser ignores comments.\n     * @return boolean\n     * @see javax.xml.parsers.DocumentBuilderFactory#isIgnoringComments(),public boolean isIgnoringComments() {\n    return ignoreComments;\n},boolean isIgnoringComments(),"digraph cfg_isIgnoringComments {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.xml.XMLParser2: boolean ignoreComments>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.setIgnoringComments(boolean),Method,* Sets whether the underlying parser ignores comments.\n     * @param ignoreComments flag\n     * @see javax.xml.parsers.DocumentBuilderFactory#setIgnoringComments(boolean),public void setIgnoringComments(final boolean ignoreComments) {\n    this.ignoreComments = ignoreComments;\n},void setIgnoringComments(boolean),"digraph cfg_setIgnoringComments {\n	""1"" [label=""ignoreComments := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""4"" [label=""this.<org.apache.commons.jxpath.xml.XMLParser2: boolean ignoreComments> = ignoreComments""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.isCoalescing(),Method,* Learn whether the underlying parser is coalescing.\n     * @return boolean\n     * @see javax.xml.parsers.DocumentBuilderFactory#isCoalescing(),public boolean isCoalescing() {\n    return coalescing;\n},boolean isCoalescing(),"digraph cfg_isCoalescing {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.xml.XMLParser2: boolean coalescing>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.setCoalescing(boolean),Method,* Sets whether the underlying parser is coalescing.\n     * @param coalescing flag\n     * @see javax.xml.parsers.DocumentBuilderFactory#setCoalescing(boolean),public void setCoalescing(final boolean coalescing) {\n    this.coalescing = coalescing;\n},void setCoalescing(boolean),"digraph cfg_setCoalescing {\n	""1"" [label=""coalescing := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.XMLParser2""];\n	""4"" [label=""this.<org.apache.commons.jxpath.xml.XMLParser2: boolean coalescing> = coalescing""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser2.parseXML(InputStream),Abstract Method,No Comment,@Override\npublic abstract Object parseXML(InputStream stream);,java.lang.Object parseXML(java.io.InputStream),digraph cfg_parseXML {\n}\n,"public , abstract "
org.apache.commons.jxpath.xml.JDOMParser.parseXML(InputStream),Method,No Comment,"@Override\npublic Object parseXML(final InputStream stream) {\n    if (!isNamespaceAware()) {\n        throw new JXPathException(""JDOM parser configuration error. JDOM "" + ""does not support the namespaceAware=false setting."");\n    }\n    try {\n        final SAXBuilder builder = new SAXBuilder();\n        builder.setExpandEntities(isExpandEntityReferences());\n        builder.setIgnoringElementContentWhitespace(isIgnoringElementContentWhitespace());\n        builder.setValidation(isValidating());\n        return builder.build(stream);\n    } catch (final Exception ex) {\n        throw new JXPathException(""JDOM parser error"", ex);\n    }\n}",java.lang.Object parseXML(java.io.InputStream),"digraph cfg_parseXML {\n	""1"" [label=""$stack10 := @caughtexception""];\n	""2"" [label=""$stack11 = new org.apache.commons.jxpath.JXPathException""];\n	""3"" [label=""$stack3 = virtualinvoke this.<org.apache.commons.jxpath.xml.JDOMParser: boolean isNamespaceAware()>()""];\n	""4"" [label=""$stack4 = new org.jdom.input.SAXBuilder""];\n	""5"" [label=""$stack5 = virtualinvoke this.<org.apache.commons.jxpath.xml.JDOMParser: boolean isExpandEntityReferences()>()""];\n	""6"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.xml.JDOMParser: boolean isIgnoringElementContentWhitespace()>()""];\n	""7"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.xml.JDOMParser: boolean isValidating()>()""];\n	""8"" [label=""$stack8 = virtualinvoke builder.<org.jdom.input.SAXBuilder: org.jdom.Document build(java.io.InputStream)>(stream)""];\n	""9"" [label=""$stack9 = new org.apache.commons.jxpath.JXPathException""];\n	""10"" [label=""builder = $stack10""];\n	""11"" [label=""builder = $stack4""];\n	""12"" [label=""if $stack3 != 0""];\n	""13"" [label=""return $stack8""];\n	""14"" [label=""specialinvoke $stack11.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>(\""JDOM parser error\"", builder)""];\n	""15"" [label=""specialinvoke $stack4.<org.jdom.input.SAXBuilder: void <init>()>()""];\n	""16"" [label=""specialinvoke $stack9.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""JDOM parser configuration error. JDOM does not support the namespaceAware=false setting.\"")""];\n	""17"" [label=""stream := @parameter0: java.io.InputStream""];\n	""18"" [label=""this := @this: org.apache.commons.jxpath.xml.JDOMParser""];\n	""19"" [label=""throw $stack11""];\n	""20"" [label=""throw $stack9""];\n	""21"" [label=""virtualinvoke builder.<org.jdom.input.SAXBuilder: void setExpandEntities(boolean)>($stack5)""];\n	""22"" [label=""virtualinvoke builder.<org.jdom.input.SAXBuilder: void setIgnoringElementContentWhitespace(boolean)>($stack6)""];\n	""23"" [label=""virtualinvoke builder.<org.jdom.input.SAXBuilder: void setValidation(boolean)>($stack7)""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_except""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_true""];\n	""12"" -> ""9""[label=""cfg_false""];\n	""14"" -> ""19""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_except""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""20""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_except""];\n	""21"" -> ""6""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_except""];\n	""22"" -> ""7""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_except""];\n	""23"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_except""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_except""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_except""];\n	""6"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_except""];\n	""7"" -> ""23""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_except""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.xml.DocumentContainer.registerXMLParser(String,XMLParser)",Method,"* Add an XML parser.  Parsers for the models ""DOM"" and ""JDOM"" are\n     * pre-registered.\n     * @param model model name\n     * @param parser parser","public static void registerXMLParser(final String model, final XMLParser parser) {\n    parsers.put(model, parser);\n}","void registerXMLParser(java.lang.String,org.apache.commons.jxpath.xml.XMLParser)","digraph cfg_registerXMLParser {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.xml.DocumentContainer: java.util.HashMap parsers>""];\n	""2"" [label=""model := @parameter0: java.lang.String""];\n	""3"" [label=""parser := @parameter1: org.apache.commons.jxpath.xml.XMLParser""];\n	""4"" [label=""return""];\n	""5"" [label=""virtualinvoke $stack2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(model, parser)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.xml.DocumentContainer.registerXMLParser(String,String)",Method,"* Add a class of a custom XML parser.\n     * Parsers for the models ""DOM"" and ""JDOM"" are pre-registered.\n     * @param model model name\n     * @param parserClassName parser class name","public static void registerXMLParser(final String model, final String parserClassName) {\n    parserClasses.put(model, parserClassName);\n}","void registerXMLParser(java.lang.String,java.lang.String)","digraph cfg_registerXMLParser {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.xml.DocumentContainer: java.util.HashMap parserClasses>""];\n	""2"" [label=""model := @parameter0: java.lang.String""];\n	""3"" [label=""parserClassName := @parameter1: java.lang.String""];\n	""4"" [label=""return""];\n	""5"" [label=""virtualinvoke $stack2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(model, parserClassName)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.xml.DocumentContainer.getValue(),Method,"* Reads XML, caches it internally and returns the Document.\n     * @return Object","@Override\npublic Object getValue() {\n    if (document == null) {\n        try {\n            InputStream stream = null;\n            try {\n                if (xmlURL != null) {\n                    stream = xmlURL.openStream();\n                }\n                document = parseXML(stream);\n            } finally {\n                if (stream != null) {\n                    stream.close();\n                }\n            }\n        } catch (final IOException ex) {\n            throw new JXPathException(""Cannot read XML from: "" + xmlURL.toString(), ex);\n        }\n    }\n    return document;\n}",java.lang.Object getValue(),"digraph cfg_getValue {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.xml.DocumentContainer: java.net.URL xmlURL>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.net.URL: java.lang.String toString()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot read XML from: \"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack15 = new org.apache.commons.jxpath.JXPathException""];\n	""7"" [label=""$stack16 := @caughtexception""];\n	""8"" [label=""$stack3 = this.<org.apache.commons.jxpath.xml.DocumentContainer: java.lang.Object document>""];\n	""9"" [label=""$stack4 = this.<org.apache.commons.jxpath.xml.DocumentContainer: java.lang.Object document>""];\n	""10"" [label=""$stack5 = this.<org.apache.commons.jxpath.xml.DocumentContainer: java.net.URL xmlURL>""];\n	""11"" [label=""$stack6 = virtualinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: java.lang.Object parseXML(java.io.InputStream)>(stream)""];\n	""12"" [label=""$stack7 = this.<org.apache.commons.jxpath.xml.DocumentContainer: java.net.URL xmlURL>""];\n	""13"" [label=""$stack8 := @caughtexception""];\n	""14"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""if $stack3 != null""];\n	""18"" [label=""if $stack5 == null""];\n	""19"" [label=""if stream == null""];\n	""20"" [label=""if stream == null""];\n	""21"" [label=""l2 = $stack16""];\n	""22"" [label=""return $stack4""];\n	""23"" [label=""specialinvoke $stack15.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack14, stream)""];\n	""24"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""stream = $stack8""];\n	""26"" [label=""stream = null""];\n	""27"" [label=""stream = virtualinvoke $stack7.<java.net.URL: java.io.InputStream openStream()>()""];\n	""28"" [label=""this := @this: org.apache.commons.jxpath.xml.DocumentContainer""];\n	""29"" [label=""this.<org.apache.commons.jxpath.xml.DocumentContainer: java.lang.Object document> = $stack6""];\n	""30"" [label=""throw $stack15""];\n	""31"" [label=""throw l2""];\n	""32"" [label=""virtualinvoke stream.<java.io.InputStream: void close()>()""];\n	""33"" [label=""virtualinvoke stream.<java.io.InputStream: void close()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_except""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_except""];\n	""11"" -> ""13""[label=""cfg_except""];\n	""11"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_except""];\n	""12"" -> ""13""[label=""cfg_except""];\n	""12"" -> ""27""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_except""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_goto""];\n	""16"" -> ""13""[label=""cfg_except""];\n	""16"" -> ""15""[label=""cfg_goto""];\n	""17"" -> ""26""[label=""cfg_false""];\n	""17"" -> ""9""[label=""cfg_true""];\n	""18"" -> ""11""[label=""cfg_true""];\n	""18"" -> ""12""[label=""cfg_false""];\n	""18"" -> ""13""[label=""cfg_except""];\n	""18"" -> ""7""[label=""cfg_except""];\n	""19"" -> ""13""[label=""cfg_except""];\n	""19"" -> ""15""[label=""cfg_true""];\n	""19"" -> ""32""[label=""cfg_false""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_except""];\n	""20"" -> ""31""[label=""cfg_true""];\n	""20"" -> ""33""[label=""cfg_false""];\n	""21"" -> ""13""[label=""cfg_except""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""23"" -> ""30""[label=""cfg_next""];\n	""24"" -> ""3""[label=""cfg_next""];\n	""25"" -> ""6""[label=""cfg_next""];\n	""26"" -> ""10""[label=""cfg_next""];\n	""26"" -> ""13""[label=""cfg_except""];\n	""27"" -> ""11""[label=""cfg_next""];\n	""27"" -> ""13""[label=""cfg_except""];\n	""27"" -> ""7""[label=""cfg_except""];\n	""28"" -> ""8""[label=""cfg_next""];\n	""29"" -> ""13""[label=""cfg_except""];\n	""29"" -> ""19""[label=""cfg_next""];\n	""29"" -> ""7""[label=""cfg_except""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""31"" -> ""13""[label=""cfg_except""];\n	""32"" -> ""13""[label=""cfg_except""];\n	""32"" -> ""16""[label=""cfg_next""];\n	""33"" -> ""13""[label=""cfg_except""];\n	""33"" -> ""31""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_except""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.DocumentContainer.parseXML(InputStream),Method,* Parses XML using the parser for the specified model.\n     * @param stream InputStream\n     * @return Object,@Override\npublic Object parseXML(final InputStream stream) {\n    final XMLParser parser = getParser(model);\n    if (parser instanceof XMLParser2) {\n        final XMLParser2 parser2 = (XMLParser2) parser;\n        parser2.setValidating(isValidating());\n        parser2.setNamespaceAware(isNamespaceAware());\n        parser2.setIgnoringElementContentWhitespace(isIgnoringElementContentWhitespace());\n        parser2.setExpandEntityReferences(isExpandEntityReferences());\n        parser2.setIgnoringComments(isIgnoringComments());\n        parser2.setCoalescing(isCoalescing());\n    }\n    return parser.parseXML(stream);\n},java.lang.Object parseXML(java.io.InputStream),"digraph cfg_parseXML {\n	""1"" [label=""$stack10 = virtualinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: boolean isExpandEntityReferences()>()""];\n	""2"" [label=""$stack11 = virtualinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: boolean isIgnoringComments()>()""];\n	""3"" [label=""$stack12 = virtualinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: boolean isCoalescing()>()""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.xml.DocumentContainer: java.lang.String model>""];\n	""5"" [label=""$stack5 = parser instanceof org.apache.commons.jxpath.xml.XMLParser2""];\n	""6"" [label=""$stack6 = interfaceinvoke parser.<org.apache.commons.jxpath.xml.XMLParser: java.lang.Object parseXML(java.io.InputStream)>(stream)""];\n	""7"" [label=""$stack7 = virtualinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: boolean isValidating()>()""];\n	""8"" [label=""$stack8 = virtualinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: boolean isNamespaceAware()>()""];\n	""9"" [label=""$stack9 = virtualinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: boolean isIgnoringElementContentWhitespace()>()""];\n	""10"" [label=""if $stack5 == 0""];\n	""11"" [label=""parser = staticinvoke <org.apache.commons.jxpath.xml.DocumentContainer: org.apache.commons.jxpath.xml.XMLParser getParser(java.lang.String)>($stack4)""];\n	""12"" [label=""parser2 = (org.apache.commons.jxpath.xml.XMLParser2) parser""];\n	""13"" [label=""return $stack6""];\n	""14"" [label=""stream := @parameter0: java.io.InputStream""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.xml.DocumentContainer""];\n	""16"" [label=""virtualinvoke parser2.<org.apache.commons.jxpath.xml.XMLParser2: void setCoalescing(boolean)>($stack12)""];\n	""17"" [label=""virtualinvoke parser2.<org.apache.commons.jxpath.xml.XMLParser2: void setExpandEntityReferences(boolean)>($stack10)""];\n	""18"" [label=""virtualinvoke parser2.<org.apache.commons.jxpath.xml.XMLParser2: void setIgnoringComments(boolean)>($stack11)""];\n	""19"" [label=""virtualinvoke parser2.<org.apache.commons.jxpath.xml.XMLParser2: void setIgnoringElementContentWhitespace(boolean)>($stack9)""];\n	""20"" [label=""virtualinvoke parser2.<org.apache.commons.jxpath.xml.XMLParser2: void setNamespaceAware(boolean)>($stack8)""];\n	""21"" [label=""virtualinvoke parser2.<org.apache.commons.jxpath.xml.XMLParser2: void setValidating(boolean)>($stack7)""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""17"" -> ""2""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""19""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.DocumentContainer.setValue(Object),Method,* Throws an UnsupportedOperationException.\n     * @param value value (not) to set,@Override\npublic void setValue(final Object value) {\n    throw new UnsupportedOperationException();\n},void setValue(java.lang.Object),"digraph cfg_setValue {\n	""1"" [label=""$stack2 = new java.lang.UnsupportedOperationException""];\n	""2"" [label=""specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.DocumentContainer""];\n	""4"" [label=""throw $stack2""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.DocumentContainer.getParser(String),Method,* Maps a model type to a parser.\n     * @param model input model type\n     * @return XMLParser,"private static XMLParser getParser(final String model) {\n    return (XMLParser) parsers.computeIfAbsent(model, k -> {\n        final String className = (String) parserClasses.get(model);\n        if (className == null) {\n            throw new JXPathException(""Unsupported XML model: "" + model);\n        }\n        try {\n            final Class clazz = ClassLoaderUtil.getClass(className, true);\n            return (XMLParser) clazz.getConstructor().newInstance();\n        } catch (final Exception ex) {\n            throw new JXPathException(""Cannot allocate XMLParser: "" + className, ex);\n        }\n    });\n}",org.apache.commons.jxpath.xml.XMLParser getParser(java.lang.String),"digraph cfg_getParser {\n	""1"" [label=""$stack1 = <org.apache.commons.jxpath.xml.DocumentContainer: java.util.HashMap parsers>""];\n	""2"" [label=""$stack2 = dynamicinvoke \""apply\"" <java.util.function.Function (java.lang.String)>(model) <java.lang.invoke.LambdaMetafactory: java.lang.invoke.CallSite metafactory(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.invoke.MethodType,java.lang.invoke.MethodHandle,java.lang.invoke.MethodType)>(methodtype: java.lang.Object __METHODTYPE__(java.lang.Object), methodhandle: \""REF_INVOKE_STATIC\"" <org.apache.commons.jxpath.xml.DocumentContainer: java.lang.Object lambda$getParser$0(java.lang.String,java.lang.Object)>, methodtype: java.lang.Object __METHODTYPE__(java.lang.Object))""];\n	""3"" [label=""$stack3 = virtualinvoke $stack1.<java.util.HashMap: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(model, $stack2)""];\n	""4"" [label=""$stack4 = (org.apache.commons.jxpath.xml.XMLParser) $stack3""];\n	""5"" [label=""model := @parameter0: java.lang.String""];\n	""6"" [label=""return $stack4""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.xml.DocumentContainer.<init>(URL),Constructor,* Use this constructor if the desired model is DOM.\n     *\n     * @param xmlURL is a URL for an XML file.\n     * Use getClass().getResource(resourceName) to load XML from a\n     * resource file.,"public DocumentContainer(final URL xmlURL) {\n    this(xmlURL, MODEL_DOM);\n}",void <init>(java.net.URL),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.apache.commons.jxpath.xml.DocumentContainer: void <init>(java.net.URL,java.lang.String)>(xmlURL, \""DOM\"")""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.xml.DocumentContainer""];\n	""4"" [label=""xmlURL := @parameter0: java.net.URL""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.xml.DocumentContainer.<init>(URL,String)",Constructor,* Constructs a new DocumentContainer.\n     * @param xmlURL is a URL for an XML file. Use getClass().getResource\n     *               (resourceName) to load XML from a resource file.\n     *\n     * @param model is one of the MODEL_* constants defined in this class. It\n     *              determines which parser should be used to load the XML.,"public DocumentContainer(final URL xmlURL, final String model) {\n    this.xmlURL = xmlURL;\n    if (xmlURL == null) {\n        throw new JXPathException(""XML URL is null"");\n    }\n    this.model = model;\n}","void <init>(java.net.URL,java.lang.String)","digraph cfg_init {\n	""1"" [label=""$stack3 = new org.apache.commons.jxpath.JXPathException""];\n	""2"" [label=""if xmlURL != null""];\n	""3"" [label=""model := @parameter1: java.lang.String""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(\""XML URL is null\"")""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.xml.XMLParser2: void <init>()>()""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.xml.DocumentContainer""];\n	""8"" [label=""this.<org.apache.commons.jxpath.xml.DocumentContainer: java.lang.String model> = model""];\n	""9"" [label=""this.<org.apache.commons.jxpath.xml.DocumentContainer: java.net.URL xmlURL> = xmlURL""];\n	""10"" [label=""throw $stack3""];\n	""11"" [label=""xmlURL := @parameter0: java.net.URL""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_false""];\n	""2"" -> ""8""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.xml.XMLParser.parseXML(InputStream),Abstract Method,"* Reads the supplied XML file and returns the resulting model,\n     * which is not necessarily DOM.\n     * @param stream InputStream\n     * @return Object",Object parseXML(InputStream stream);,java.lang.Object parseXML(java.io.InputStream),digraph cfg_parseXML {\n}\n,default
org.apache.commons.jxpath.NodeSet.getNodes(),Abstract Method,* Returns a list of nodes.\n     * @return List,List getNodes();,java.util.List getNodes(),digraph cfg_getNodes {\n}\n,default
org.apache.commons.jxpath.NodeSet.getPointers(),Abstract Method,* Returns a list of pointers for all nodes in the set.\n     * @return List,List getPointers();,java.util.List getPointers(),digraph cfg_getPointers {\n}\n,default
org.apache.commons.jxpath.NodeSet.getValues(),Abstract Method,* Returns a list of values of all contained pointers.\n     * @return List,List getValues();,java.util.List getValues(),digraph cfg_getValues {\n}\n,default
org.apache.commons.jxpath.JXPathFunctionNotFoundException.<init>(String),Constructor,* Create a new JXPathFunctionNotFoundException.\n     * @param message exception message,public JXPathFunctionNotFoundException(final String message) {\n    super(message);\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""message := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(message)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathFunctionNotFoundException""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.FunctionLibrary.addFunctions(Functions),Method,* Add functions to the library\n     * @param functions to add,public void addFunctions(final Functions functions) {\n    allFunctions.add(functions);\n    synchronized (this) {\n        byNamespace = null;\n    }\n},void addFunctions(org.apache.commons.jxpath.Functions),"digraph cfg_addFunctions {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.List allFunctions>""];\n	""2"" [label=""$stack5 := @caughtexception""];\n	""3"" [label=""entermonitor l2""];\n	""4"" [label=""exitmonitor l2""];\n	""5"" [label=""exitmonitor l2""];\n	""6"" [label=""functions := @parameter0: org.apache.commons.jxpath.Functions""];\n	""7"" [label=""goto""];\n	""8"" [label=""interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>(functions)""];\n	""9"" [label=""l2 = this""];\n	""10"" [label=""l3 = $stack5""];\n	""11"" [label=""return""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.FunctionLibrary""];\n	""13"" [label=""this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace> = null""];\n	""14"" [label=""throw l3""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_except""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""2""[label=""cfg_except""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_except""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_except""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.FunctionLibrary.removeFunctions(Functions),Method,* Remove functions from the library.\n     * @param functions to remove,public void removeFunctions(final Functions functions) {\n    allFunctions.remove(functions);\n    synchronized (this) {\n        byNamespace = null;\n    }\n},void removeFunctions(org.apache.commons.jxpath.Functions),"digraph cfg_removeFunctions {\n	""1"" [label=""$stack4 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.List allFunctions>""];\n	""2"" [label=""$stack5 := @caughtexception""];\n	""3"" [label=""entermonitor l2""];\n	""4"" [label=""exitmonitor l2""];\n	""5"" [label=""exitmonitor l2""];\n	""6"" [label=""functions := @parameter0: org.apache.commons.jxpath.Functions""];\n	""7"" [label=""goto""];\n	""8"" [label=""interfaceinvoke $stack4.<java.util.List: boolean remove(java.lang.Object)>(functions)""];\n	""9"" [label=""l2 = this""];\n	""10"" [label=""l3 = $stack5""];\n	""11"" [label=""return""];\n	""12"" [label=""this := @this: org.apache.commons.jxpath.FunctionLibrary""];\n	""13"" [label=""this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace> = null""];\n	""14"" [label=""throw l3""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_except""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""2""[label=""cfg_except""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_except""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_except""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.FunctionLibrary.getUsedNamespaces(),Method,* Returns a set containing all namespaces used by the aggregated\n     * Functions.\n     * @return Set,@Override\npublic Set getUsedNamespaces() {\n    return functionCache().keySet();\n},java.util.Set getUsedNamespaces(),"digraph cfg_getUsedNamespaces {\n	""1"" [label=""$stack1 = specialinvoke this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map functionCache()>()""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<java.util.Map: java.util.Set keySet()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.FunctionLibrary""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.FunctionLibrary.getFunction(String,String,Object[])",Method,"* Returns a Function, if any, for the specified namespace,\n     * name and parameter types.\n     * @param namespace function namespace\n     * @param name function name\n     * @param parameters parameters\n     * @return Function found","@Override\npublic Function getFunction(final String namespace, final String name, final Object[] parameters) {\n    final Object candidates = functionCache().get(namespace);\n    if (candidates instanceof Functions) {\n        return ((Functions) candidates).getFunction(namespace, name, parameters);\n    }\n    if (candidates instanceof List) {\n        final List list = (List) candidates;\n        final int count = list.size();\n        for (int i = 0; i < count; i++) {\n            final Function function = ((Functions) list.get(i)).getFunction(namespace, name, parameters);\n            if (function != null) {\n                return function;\n            }\n        }\n    }\n    return null;\n}","org.apache.commons.jxpath.Function getFunction(java.lang.String,java.lang.String,java.lang.Object[])","digraph cfg_getFunction {\n	""1"" [label=""$stack10 = candidates instanceof org.apache.commons.jxpath.Functions""];\n	""2"" [label=""$stack11 = candidates instanceof java.util.List""];\n	""3"" [label=""$stack12 = interfaceinvoke list.<java.util.List: java.lang.Object get(int)>(i)""];\n	""4"" [label=""$stack13 = (org.apache.commons.jxpath.Functions) $stack12""];\n	""5"" [label=""$stack14 = (org.apache.commons.jxpath.Functions) candidates""];\n	""6"" [label=""$stack15 = interfaceinvoke $stack14.<org.apache.commons.jxpath.Functions: org.apache.commons.jxpath.Function getFunction(java.lang.String,java.lang.String,java.lang.Object[])>(namespace, name, parameters)""];\n	""7"" [label=""$stack9 = specialinvoke this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map functionCache()>()""];\n	""8"" [label=""candidates = interfaceinvoke $stack9.<java.util.Map: java.lang.Object get(java.lang.Object)>(namespace)""];\n	""9"" [label=""count = interfaceinvoke list.<java.util.List: int size()>()""];\n	""10"" [label=""function = interfaceinvoke $stack13.<org.apache.commons.jxpath.Functions: org.apache.commons.jxpath.Function getFunction(java.lang.String,java.lang.String,java.lang.Object[])>(namespace, name, parameters)""];\n	""11"" [label=""goto""];\n	""12"" [label=""i = 0""];\n	""13"" [label=""i = i + 1""];\n	""14"" [label=""if $stack10 == 0""];\n	""15"" [label=""if $stack11 == 0""];\n	""16"" [label=""if function == null""];\n	""17"" [label=""if i >= count""];\n	""18"" [label=""list = (java.util.List) candidates""];\n	""19"" [label=""name := @parameter1: java.lang.String""];\n	""20"" [label=""namespace := @parameter0: java.lang.String""];\n	""21"" [label=""parameters := @parameter2: java.lang.Object[]""];\n	""22"" [label=""return $stack15""];\n	""23"" [label=""return function""];\n	""24"" [label=""return null""];\n	""25"" [label=""this := @this: org.apache.commons.jxpath.FunctionLibrary""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_goto""];\n	""12"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_true""];\n	""14"" -> ""5""[label=""cfg_false""];\n	""15"" -> ""18""[label=""cfg_false""];\n	""15"" -> ""24""[label=""cfg_true""];\n	""16"" -> ""13""[label=""cfg_true""];\n	""16"" -> ""23""[label=""cfg_false""];\n	""17"" -> ""24""[label=""cfg_true""];\n	""17"" -> ""3""[label=""cfg_false""];\n	""18"" -> ""9""[label=""cfg_next""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.FunctionLibrary.functionCache(),Method,* Prepare the cache.\n     * @return cache map keyed by namespace,"private synchronized Map functionCache() {\n    if (byNamespace == null) {\n        byNamespace = new HashMap();\n        final int count = allFunctions.size();\n        for (int i = 0; i < count; i++) {\n            final Functions funcs = (Functions) allFunctions.get(i);\n            final Set namespaces = funcs.getUsedNamespaces();\n            for (final Iterator it = namespaces.iterator(); it.hasNext(); ) {\n                final String ns = (String) it.next();\n                final Object candidates = byNamespace.get(ns);\n                if (candidates == null) {\n                    byNamespace.put(ns, funcs);\n                } else if (candidates instanceof Functions) {\n                    final List lst = new ArrayList();\n                    lst.add(candidates);\n                    lst.add(funcs);\n                    byNamespace.put(ns, lst);\n                } else {\n                    ((List) candidates).add(funcs);\n                }\n            }\n        }\n    }\n    return byNamespace;\n}",java.util.Map functionCache(),"digraph cfg_functionCache {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace>""];\n	""2"" [label=""$stack11 = new java.util.HashMap""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.List allFunctions>""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.List allFunctions>""];\n	""5"" [label=""$stack14 = interfaceinvoke $stack13.<java.util.List: java.lang.Object get(int)>(i)""];\n	""6"" [label=""$stack15 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""7"" [label=""$stack16 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""8"" [label=""$stack17 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace>""];\n	""9"" [label=""$stack18 = candidates instanceof org.apache.commons.jxpath.Functions""];\n	""10"" [label=""$stack19 = (java.util.List) candidates""];\n	""11"" [label=""$stack20 = new java.util.ArrayList""];\n	""12"" [label=""$stack21 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace>""];\n	""13"" [label=""$stack22 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace>""];\n	""14"" [label=""$stack9 = this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace>""];\n	""15"" [label=""candidates = interfaceinvoke $stack17.<java.util.Map: java.lang.Object get(java.lang.Object)>(ns)""];\n	""16"" [label=""count = interfaceinvoke $stack12.<java.util.List: int size()>()""];\n	""17"" [label=""funcs = (org.apache.commons.jxpath.Functions) $stack14""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""i = 0""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""if $stack15 == 0""];\n	""25"" [label=""if $stack18 == 0""];\n	""26"" [label=""if $stack9 != null""];\n	""27"" [label=""if candidates != null""];\n	""28"" [label=""if i >= count""];\n	""29"" [label=""interfaceinvoke $stack19.<java.util.List: boolean add(java.lang.Object)>(funcs)""];\n	""30"" [label=""interfaceinvoke $stack21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(ns, lst)""];\n	""31"" [label=""interfaceinvoke $stack22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(ns, funcs)""];\n	""32"" [label=""interfaceinvoke lst.<java.util.List: boolean add(java.lang.Object)>(candidates)""];\n	""33"" [label=""interfaceinvoke lst.<java.util.List: boolean add(java.lang.Object)>(funcs)""];\n	""34"" [label=""it = interfaceinvoke namespaces.<java.util.Set: java.util.Iterator iterator()>()""];\n	""35"" [label=""lst = $stack20""];\n	""36"" [label=""namespaces = interfaceinvoke funcs.<org.apache.commons.jxpath.Functions: java.util.Set getUsedNamespaces()>()""];\n	""37"" [label=""ns = (java.lang.String) $stack16""];\n	""38"" [label=""return $stack10""];\n	""39"" [label=""specialinvoke $stack11.<java.util.HashMap: void <init>()>()""];\n	""40"" [label=""specialinvoke $stack20.<java.util.ArrayList: void <init>()>()""];\n	""41"" [label=""this := @this: org.apache.commons.jxpath.FunctionLibrary""];\n	""42"" [label=""this.<org.apache.commons.jxpath.FunctionLibrary: java.util.Map byNamespace> = $stack11""];\n	""1"" -> ""38""[label=""cfg_next""];\n	""10"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""30""[label=""cfg_next""];\n	""13"" -> ""31""[label=""cfg_next""];\n	""14"" -> ""26""[label=""cfg_next""];\n	""15"" -> ""27""[label=""cfg_next""];\n	""16"" -> ""22""[label=""cfg_next""];\n	""17"" -> ""36""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_goto""];\n	""19"" -> ""6""[label=""cfg_goto""];\n	""2"" -> ""39""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_goto""];\n	""21"" -> ""28""[label=""cfg_goto""];\n	""22"" -> ""28""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_false""];\n	""25"" -> ""10""[label=""cfg_true""];\n	""25"" -> ""11""[label=""cfg_false""];\n	""26"" -> ""1""[label=""cfg_true""];\n	""26"" -> ""2""[label=""cfg_false""];\n	""27"" -> ""13""[label=""cfg_false""];\n	""27"" -> ""9""[label=""cfg_true""];\n	""28"" -> ""1""[label=""cfg_true""];\n	""28"" -> ""4""[label=""cfg_false""];\n	""29"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""30"" -> ""20""[label=""cfg_next""];\n	""31"" -> ""18""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""12""[label=""cfg_next""];\n	""34"" -> ""6""[label=""cfg_next""];\n	""35"" -> ""32""[label=""cfg_next""];\n	""36"" -> ""34""[label=""cfg_next""];\n	""37"" -> ""8""[label=""cfg_next""];\n	""39"" -> ""42""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""35""[label=""cfg_next""];\n	""41"" -> ""14""[label=""cfg_next""];\n	""42"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""37""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_next""];\n}\n","private , synchronized "
"org.apache.commons.jxpath.ExtendedKeyManager.getNodeSetByKey(JXPathContext,String,Object)",Abstract Method,* Find a NodeSet by key/value.\n     * @param context base\n     * @param key String\n     * @param value Object\n     * @return NodeSet found,"NodeSet getNodeSetByKey(JXPathContext context, String key, Object value);","org.apache.commons.jxpath.NodeSet getNodeSetByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.Object)",digraph cfg_getNodeSetByKey {\n}\n,default
"org.apache.commons.jxpath.KeyManager.getPointerByKey(JXPathContext,String,String)",Abstract Method,* Find a node by key/value.\n     *\n     * @param context to search\n     * @param keyName String\n     * @param keyValue String\n     * @return Pointer,"Pointer getPointerByKey(JXPathContext context, String keyName, String keyValue);","org.apache.commons.jxpath.Pointer getPointerByKey(org.apache.commons.jxpath.JXPathContext,java.lang.String,java.lang.String)",digraph cfg_getPointerByKey {\n}\n,default
org.apache.commons.jxpath.JXPathBeanInfo.isAtomic(),Abstract Method,"* Returns true if objects of this class are treated as atomic\n     * objects which have no properties of their own.\n     * For example, {@link String} and {@link Number} are atomic.\n     * @return boolean",boolean isAtomic();,boolean isAtomic(),digraph cfg_isAtomic {\n}\n,default
org.apache.commons.jxpath.JXPathBeanInfo.isDynamic(),Abstract Method,"* Returns true if the objects of this class have dynamic properties\n     * (e.g. java.util.Map). If this method returns true, {@link #getPropertyDescriptors}\n     * should return null and {@link #getDynamicPropertyHandlerClass} should return\n     * a valid class name.  An object cannot have both static and dynamic\n     * properties at the same time.\n     * @return boolean",boolean isDynamic();,boolean isDynamic(),digraph cfg_isDynamic {\n}\n,default
org.apache.commons.jxpath.JXPathBeanInfo.getPropertyDescriptors(),Abstract Method,* Returns a list of property descriptors for the beans described by this\n     * bean info object.  Returns null for atomic beans.\n     * @return PropertyDescriptor[],PropertyDescriptor[] getPropertyDescriptors();,java.beans.PropertyDescriptor[] getPropertyDescriptors(),digraph cfg_getPropertyDescriptors {\n}\n,default
org.apache.commons.jxpath.JXPathBeanInfo.getPropertyDescriptor(String),Abstract Method,* Returns a PropertyDescriptor for the specified name or null if there\n     * is no such property.\n     * @param propertyName property name\n     * @return PropertyDescriptor,PropertyDescriptor getPropertyDescriptor(String propertyName);,java.beans.PropertyDescriptor getPropertyDescriptor(java.lang.String),digraph cfg_getPropertyDescriptor {\n}\n,default
org.apache.commons.jxpath.JXPathBeanInfo.getDynamicPropertyHandlerClass(),Abstract Method,"* For dynamic objects, returns the class implementing\n     * the {@link DynamicPropertyHandler} interface. That class can\n     * be used to access dynamic properties.\n     * @return Class",Class getDynamicPropertyHandlerClass();,java.lang.Class getDynamicPropertyHandlerClass(),digraph cfg_getDynamicPropertyHandlerClass {\n}\n,default
org.apache.commons.jxpath.JXPathContextFactoryConfigurationError.getMessage(),Method,* Gets the message (if any) for this error . If there is no\n     * message for the exception and there is an encapsulated\n     * exception then the message of that exception will be returned.\n     *\n     * @return The error message.,@Override\npublic String getMessage() {\n    final String message = super.getMessage();\n    if (message == null && exception != null) {\n        return exception.getMessage();\n    }\n    return message;\n},java.lang.String getMessage(),"digraph cfg_getMessage {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: java.lang.Exception exception>""];\n	""2"" [label=""$stack3 = this.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: java.lang.Exception exception>""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""4"" [label=""if $stack2 == null""];\n	""5"" [label=""if message != null""];\n	""6"" [label=""message = specialinvoke this.<java.lang.Error: java.lang.String getMessage()>()""];\n	""7"" [label=""return $stack4""];\n	""8"" [label=""return message""];\n	""9"" [label=""this := @this: org.apache.commons.jxpath.JXPathContextFactoryConfigurationError""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""8""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContextFactoryConfigurationError.getException(),Method,"* Gets the actual exception (if any) that caused this exception to\n     * be raised.\n     *\n     * @return The encapsulated exception, or null if there is none.",public Exception getException() {\n    return exception;\n},java.lang.Exception getException(),"digraph cfg_getException {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: java.lang.Exception exception>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContextFactoryConfigurationError""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContextFactoryConfigurationError.<init>(),Constructor,* Create a new {@code JXPathContextFactoryConfigurationError} with no\n     * detail mesage.,public JXPathContextFactoryConfigurationError() {\n    this.exception = null;\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Error: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContextFactoryConfigurationError""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: java.lang.Exception exception> = null""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContextFactoryConfigurationError.<init>(String),Constructor,* Create a new {@code JXPathContextFactoryConfigurationError} with\n     * the {@code String } specified as an error message.\n     *\n     * @param msg The error message for the exception.,public JXPathContextFactoryConfigurationError(final String msg) {\n    super(msg);\n    this.exception = null;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""msg := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Error: void <init>(java.lang.String)>(msg)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathContextFactoryConfigurationError""];\n	""5"" [label=""this.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: java.lang.Exception exception> = null""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContextFactoryConfigurationError.<init>(Exception),Constructor,* Create a new {@code JXPathContextFactoryConfigurationError} with a\n     * given {@code Exception} base cause of the error.\n     *\n     * @param e The exception to be encapsulated in a\n     * JXPathContextFactoryConfigurationError.,public JXPathContextFactoryConfigurationError(final Exception e) {\n    super(e.toString());\n    this.exception = e;\n},void <init>(java.lang.Exception),"digraph cfg_init {\n	""1"" [label=""$stack2 = virtualinvoke e.<java.lang.Exception: java.lang.String toString()>()""];\n	""2"" [label=""e := @parameter0: java.lang.Exception""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Error: void <init>(java.lang.String)>($stack2)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathContextFactoryConfigurationError""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: java.lang.Exception exception> = e""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathContextFactoryConfigurationError.<init>(Exception,String)",Constructor,* Create a new {@code JXPathContextFactoryConfigurationError} with the\n     * given {@code Exception} base cause and detail message.\n     *\n     * @param e The exception to be encapsulated in a\n     * JXPathContextFactoryConfigurationError\n     * @param msg The detail message.,"public JXPathContextFactoryConfigurationError(final Exception e, final String msg) {\n    super(msg);\n    this.exception = e;\n}","void <init>(java.lang.Exception,java.lang.String)","digraph cfg_init {\n	""1"" [label=""e := @parameter0: java.lang.Exception""];\n	""2"" [label=""msg := @parameter1: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Error: void <init>(java.lang.String)>(msg)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathContextFactoryConfigurationError""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: java.lang.Exception exception> = e""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathAbstractFactoryException.<init>(String),Constructor,* Create a new JXPathAbstractFactoryException.\n     * @param message exception message,public JXPathAbstractFactoryException(final String message) {\n    super(message);\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""message := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(message)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathAbstractFactoryException""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.functions.MethodFunction.invoke(ExpressionContext,Object[])",Method,No Comment,"@Override\npublic Object invoke(final ExpressionContext context, Object[] parameters) {\n    try {\n        Object target;\n        Object[] args;\n        if (Modifier.isStatic(method.getModifiers())) {\n            target = null;\n            if (parameters == null) {\n                parameters = EMPTY_ARRAY;\n            }\n            int pi = 0;\n            final Class[] types = method.getParameterTypes();\n            if (types.length >= 1 && ExpressionContext.class.isAssignableFrom(types[0])) {\n                pi = 1;\n            }\n            args = new Object[parameters.length + pi];\n            if (pi == 1) {\n                args[0] = context;\n            }\n            for (int i = 0; i < parameters.length; i++) {\n                args[i + pi] = TypeUtils.convert(parameters[i], types[i + pi]);\n            }\n        } else {\n            int pi = 0;\n            final Class[] types = method.getParameterTypes();\n            if (types.length >= 1 && ExpressionContext.class.isAssignableFrom(types[0])) {\n                pi = 1;\n            }\n            target = TypeUtils.convert(parameters[0], method.getDeclaringClass());\n            args = new Object[parameters.length - 1 + pi];\n            if (pi == 1) {\n                args[0] = context;\n            }\n            for (int i = 1; i < parameters.length; i++) {\n                args[pi + i - 1] = TypeUtils.convert(parameters[i], types[i + pi - 1]);\n            }\n        }\n        return method.invoke(target, args);\n    } catch (Throwable ex) {\n        if (ex instanceof InvocationTargetException) {\n            ex = ((InvocationTargetException) ex).getTargetException();\n        }\n        throw new JXPathInvalidAccessException(""Cannot invoke "" + method, ex);\n    }\n}","java.lang.Object invoke(org.apache.commons.jxpath.ExpressionContext,java.lang.Object[])","digraph cfg_invoke {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($stack9)""];\n	""2"" [label=""$stack11 = this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method>""];\n	""3"" [label=""$stack12 = lengthof types""];\n	""4"" [label=""$stack13 = this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method>""];\n	""5"" [label=""$stack14 = parameters[0]""];\n	""6"" [label=""$stack15 = virtualinvoke $stack13.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>()""];\n	""7"" [label=""$stack16 = lengthof parameters""];\n	""8"" [label=""$stack17 = $stack16 - 1""];\n	""9"" [label=""$stack18 = $stack17 + pi""];\n	""10"" [label=""$stack19 = lengthof parameters""];\n	""11"" [label=""$stack20 = this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method>""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(target, args)""];\n	""13"" [label=""$stack22 = pi + i""];\n	""14"" [label=""$stack23 = i + pi""];\n	""15"" [label=""$stack24 = $stack23 - 1""];\n	""16"" [label=""$stack25 = types[$stack24]""];\n	""17"" [label=""$stack26 = parameters[i]""];\n	""18"" [label=""$stack27 = $stack22 - 1""];\n	""19"" [label=""$stack28 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack26, $stack25)""];\n	""20"" [label=""$stack29 = types[0]""];\n	""21"" [label=""$stack30 = class \""Lorg/apache/commons/jxpath/ExpressionContext;\""""];\n	""22"" [label=""$stack31 = virtualinvoke $stack30.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack29)""];\n	""23"" [label=""$stack32 = this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method>""];\n	""24"" [label=""$stack33 = lengthof types""];\n	""25"" [label=""$stack34 = lengthof parameters""];\n	""26"" [label=""$stack35 = $stack34 + pi""];\n	""27"" [label=""$stack36 = lengthof parameters""];\n	""28"" [label=""$stack37 = i + pi""];\n	""29"" [label=""$stack38 = types[$stack37]""];\n	""30"" [label=""$stack39 = parameters[i]""];\n	""31"" [label=""$stack40 = i + pi""];\n	""32"" [label=""$stack41 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack39, $stack38)""];\n	""33"" [label=""$stack42 = types[0]""];\n	""34"" [label=""$stack43 = class \""Lorg/apache/commons/jxpath/ExpressionContext;\""""];\n	""35"" [label=""$stack44 = virtualinvoke $stack43.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack42)""];\n	""36"" [label=""$stack45 := @caughtexception""];\n	""37"" [label=""$stack46 = target instanceof java.lang.reflect.InvocationTargetException""];\n	""38"" [label=""$stack47 = new java.lang.StringBuilder""];\n	""39"" [label=""$stack48 = this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method>""];\n	""40"" [label=""$stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot invoke \"")""];\n	""41"" [label=""$stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack48)""];\n	""42"" [label=""$stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""43"" [label=""$stack52 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""44"" [label=""$stack53 = (java.lang.reflect.InvocationTargetException) target""];\n	""45"" [label=""$stack8 = this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method>""];\n	""46"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.reflect.Method: int getModifiers()>()""];\n	""47"" [label=""args = newarray (java.lang.Object)[$stack18]""];\n	""48"" [label=""args = newarray (java.lang.Object)[$stack35]""];\n	""49"" [label=""args[$stack27] = $stack28""];\n	""50"" [label=""args[$stack40] = $stack41""];\n	""51"" [label=""args[0] = context""];\n	""52"" [label=""args[0] = context""];\n	""53"" [label=""context := @parameter0: org.apache.commons.jxpath.ExpressionContext""];\n	""54"" [label=""goto""];\n	""55"" [label=""goto""];\n	""56"" [label=""goto""];\n	""57"" [label=""i = 0""];\n	""58"" [label=""i = 1""];\n	""59"" [label=""i = i + 1""];\n	""60"" [label=""i = i + 1""];\n	""61"" [label=""if $stack10 == 0""];\n	""62"" [label=""if $stack12 < 1""];\n	""63"" [label=""if $stack31 == 0""];\n	""64"" [label=""if $stack33 < 1""];\n	""65"" [label=""if $stack44 == 0""];\n	""66"" [label=""if $stack46 == 0""];\n	""67"" [label=""if i >= $stack19""];\n	""68"" [label=""if i >= $stack36""];\n	""69"" [label=""if parameters != null""];\n	""70"" [label=""if pi != 1""];\n	""71"" [label=""if pi != 1""];\n	""72"" [label=""parameters := @parameter1: java.lang.Object[]""];\n	""73"" [label=""parameters = <org.apache.commons.jxpath.functions.MethodFunction: java.lang.Object[] EMPTY_ARRAY>""];\n	""74"" [label=""pi = 0""];\n	""75"" [label=""pi = 0""];\n	""76"" [label=""pi = 1""];\n	""77"" [label=""pi = 1""];\n	""78"" [label=""return $stack21""];\n	""79"" [label=""specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>()""];\n	""80"" [label=""specialinvoke $stack52.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String,java.lang.Throwable)>($stack51, target)""];\n	""81"" [label=""target = $stack45""];\n	""82"" [label=""target = null""];\n	""83"" [label=""target = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack14, $stack15)""];\n	""84"" [label=""target = virtualinvoke $stack53.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()""];\n	""85"" [label=""this := @this: org.apache.commons.jxpath.functions.MethodFunction""];\n	""86"" [label=""throw $stack52""];\n	""87"" [label=""types = virtualinvoke $stack11.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>()""];\n	""88"" [label=""types = virtualinvoke $stack32.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>()""];\n	""1"" -> ""36""[label=""cfg_except""];\n	""1"" -> ""61""[label=""cfg_next""];\n	""10"" -> ""36""[label=""cfg_except""];\n	""10"" -> ""67""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""36""[label=""cfg_except""];\n	""12"" -> ""36""[label=""cfg_except""];\n	""12"" -> ""78""[label=""cfg_next""];\n	""13"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""36""[label=""cfg_except""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""36""[label=""cfg_except""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""36""[label=""cfg_except""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""36""[label=""cfg_except""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""36""[label=""cfg_except""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""18"" -> ""36""[label=""cfg_except""];\n	""19"" -> ""36""[label=""cfg_except""];\n	""19"" -> ""49""[label=""cfg_next""];\n	""2"" -> ""36""[label=""cfg_except""];\n	""2"" -> ""87""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""36""[label=""cfg_except""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""21"" -> ""36""[label=""cfg_except""];\n	""22"" -> ""36""[label=""cfg_except""];\n	""22"" -> ""63""[label=""cfg_next""];\n	""23"" -> ""36""[label=""cfg_except""];\n	""23"" -> ""88""[label=""cfg_next""];\n	""24"" -> ""36""[label=""cfg_except""];\n	""24"" -> ""64""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""36""[label=""cfg_except""];\n	""26"" -> ""36""[label=""cfg_except""];\n	""26"" -> ""48""[label=""cfg_next""];\n	""27"" -> ""36""[label=""cfg_except""];\n	""27"" -> ""68""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""36""[label=""cfg_except""];\n	""29"" -> ""32""[label=""cfg_next""];\n	""29"" -> ""36""[label=""cfg_except""];\n	""3"" -> ""36""[label=""cfg_except""];\n	""3"" -> ""62""[label=""cfg_next""];\n	""30"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""36""[label=""cfg_except""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""31"" -> ""36""[label=""cfg_except""];\n	""32"" -> ""36""[label=""cfg_except""];\n	""32"" -> ""50""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""33"" -> ""36""[label=""cfg_except""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""34"" -> ""36""[label=""cfg_except""];\n	""35"" -> ""36""[label=""cfg_except""];\n	""35"" -> ""65""[label=""cfg_next""];\n	""36"" -> ""81""[label=""cfg_next""];\n	""37"" -> ""66""[label=""cfg_next""];\n	""38"" -> ""79""[label=""cfg_next""];\n	""39"" -> ""41""[label=""cfg_next""];\n	""4"" -> ""36""[label=""cfg_except""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""40"" -> ""39""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""80""[label=""cfg_next""];\n	""43"" -> ""38""[label=""cfg_next""];\n	""44"" -> ""84""[label=""cfg_next""];\n	""45"" -> ""36""[label=""cfg_except""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""46"" -> ""1""[label=""cfg_next""];\n	""46"" -> ""36""[label=""cfg_except""];\n	""47"" -> ""36""[label=""cfg_except""];\n	""47"" -> ""71""[label=""cfg_next""];\n	""48"" -> ""36""[label=""cfg_except""];\n	""48"" -> ""70""[label=""cfg_next""];\n	""49"" -> ""36""[label=""cfg_except""];\n	""49"" -> ""60""[label=""cfg_next""];\n	""5"" -> ""36""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""50"" -> ""36""[label=""cfg_except""];\n	""50"" -> ""59""[label=""cfg_next""];\n	""51"" -> ""36""[label=""cfg_except""];\n	""51"" -> ""57""[label=""cfg_next""];\n	""52"" -> ""36""[label=""cfg_except""];\n	""52"" -> ""58""[label=""cfg_next""];\n	""53"" -> ""72""[label=""cfg_next""];\n	""54"" -> ""11""[label=""cfg_goto""];\n	""54"" -> ""36""[label=""cfg_except""];\n	""55"" -> ""27""[label=""cfg_goto""];\n	""55"" -> ""36""[label=""cfg_except""];\n	""56"" -> ""10""[label=""cfg_goto""];\n	""56"" -> ""36""[label=""cfg_except""];\n	""57"" -> ""27""[label=""cfg_next""];\n	""57"" -> ""36""[label=""cfg_except""];\n	""58"" -> ""10""[label=""cfg_next""];\n	""58"" -> ""36""[label=""cfg_except""];\n	""59"" -> ""36""[label=""cfg_except""];\n	""59"" -> ""55""[label=""cfg_next""];\n	""6"" -> ""36""[label=""cfg_except""];\n	""6"" -> ""83""[label=""cfg_next""];\n	""60"" -> ""36""[label=""cfg_except""];\n	""60"" -> ""56""[label=""cfg_next""];\n	""61"" -> ""36""[label=""cfg_except""];\n	""61"" -> ""74""[label=""cfg_true""];\n	""61"" -> ""82""[label=""cfg_false""];\n	""62"" -> ""21""[label=""cfg_false""];\n	""62"" -> ""36""[label=""cfg_except""];\n	""62"" -> ""5""[label=""cfg_true""];\n	""63"" -> ""36""[label=""cfg_except""];\n	""63"" -> ""5""[label=""cfg_true""];\n	""63"" -> ""77""[label=""cfg_false""];\n	""64"" -> ""25""[label=""cfg_true""];\n	""64"" -> ""34""[label=""cfg_false""];\n	""64"" -> ""36""[label=""cfg_except""];\n	""65"" -> ""25""[label=""cfg_true""];\n	""65"" -> ""36""[label=""cfg_except""];\n	""65"" -> ""76""[label=""cfg_false""];\n	""66"" -> ""43""[label=""cfg_true""];\n	""66"" -> ""44""[label=""cfg_false""];\n	""67"" -> ""11""[label=""cfg_true""];\n	""67"" -> ""13""[label=""cfg_false""];\n	""67"" -> ""36""[label=""cfg_except""];\n	""68"" -> ""31""[label=""cfg_false""];\n	""68"" -> ""36""[label=""cfg_except""];\n	""68"" -> ""54""[label=""cfg_true""];\n	""69"" -> ""36""[label=""cfg_except""];\n	""69"" -> ""73""[label=""cfg_false""];\n	""69"" -> ""75""[label=""cfg_true""];\n	""7"" -> ""36""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""36""[label=""cfg_except""];\n	""70"" -> ""51""[label=""cfg_false""];\n	""70"" -> ""57""[label=""cfg_true""];\n	""71"" -> ""36""[label=""cfg_except""];\n	""71"" -> ""52""[label=""cfg_false""];\n	""71"" -> ""58""[label=""cfg_true""];\n	""72"" -> ""45""[label=""cfg_next""];\n	""73"" -> ""36""[label=""cfg_except""];\n	""73"" -> ""75""[label=""cfg_next""];\n	""74"" -> ""2""[label=""cfg_next""];\n	""74"" -> ""36""[label=""cfg_except""];\n	""75"" -> ""23""[label=""cfg_next""];\n	""75"" -> ""36""[label=""cfg_except""];\n	""76"" -> ""25""[label=""cfg_next""];\n	""76"" -> ""36""[label=""cfg_except""];\n	""77"" -> ""36""[label=""cfg_except""];\n	""77"" -> ""5""[label=""cfg_next""];\n	""79"" -> ""40""[label=""cfg_next""];\n	""8"" -> ""36""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""80"" -> ""86""[label=""cfg_next""];\n	""81"" -> ""37""[label=""cfg_next""];\n	""82"" -> ""36""[label=""cfg_except""];\n	""82"" -> ""69""[label=""cfg_next""];\n	""83"" -> ""36""[label=""cfg_except""];\n	""83"" -> ""7""[label=""cfg_next""];\n	""84"" -> ""43""[label=""cfg_next""];\n	""85"" -> ""53""[label=""cfg_next""];\n	""87"" -> ""3""[label=""cfg_next""];\n	""87"" -> ""36""[label=""cfg_except""];\n	""88"" -> ""24""[label=""cfg_next""];\n	""88"" -> ""36""[label=""cfg_except""];\n	""9"" -> ""36""[label=""cfg_except""];\n	""9"" -> ""47""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.functions.MethodFunction.toString(),Method,No Comment,@Override\npublic String toString() {\n    return method.toString();\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.reflect.Method: java.lang.String toString()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.functions.MethodFunction""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.functions.MethodFunction.<init>(Method),Constructor,* Create a new MethodFunction.\n     * @param method implementing Method,public MethodFunction(final Method method) {\n    this.method = ValueUtils.getAccessibleMethod(method);\n},void <init>(java.lang.reflect.Method),"digraph cfg_init {\n	""1"" [label=""$stack2 = staticinvoke <org.apache.commons.jxpath.util.ValueUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method)>(method)""];\n	""2"" [label=""method := @parameter0: java.lang.reflect.Method""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.functions.MethodFunction""];\n	""6"" [label=""this.<org.apache.commons.jxpath.functions.MethodFunction: java.lang.reflect.Method method> = $stack2""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.functions.ConstructorFunction.invoke(ExpressionContext,Object[])",Method,* Converts parameters to suitable types and invokes the constructor.\n     * @param context evaluation context\n     * @param parameters constructor args\n     * @return new instance,"@Override\npublic Object invoke(final ExpressionContext context, Object[] parameters) {\n    try {\n        Object[] args;\n        if (parameters == null) {\n            parameters = EMPTY_ARRAY;\n        }\n        int pi = 0;\n        final Class[] types = constructor.getParameterTypes();\n        if (types.length > 0 && ExpressionContext.class.isAssignableFrom(types[0])) {\n            pi = 1;\n        }\n        args = new Object[parameters.length + pi];\n        if (pi == 1) {\n            args[0] = context;\n        }\n        for (int i = 0; i < parameters.length; i++) {\n            args[i + pi] = TypeUtils.convert(parameters[i], types[i + pi]);\n        }\n        return constructor.newInstance(args);\n    } catch (Throwable ex) {\n        if (ex instanceof InvocationTargetException) {\n            ex = ((InvocationTargetException) ex).getTargetException();\n        }\n        throw new JXPathInvalidAccessException(""Cannot invoke constructor "" + constructor, ex);\n    }\n}","java.lang.Object invoke(org.apache.commons.jxpath.ExpressionContext,java.lang.Object[])","digraph cfg_invoke {\n	""1"" [label=""$stack10 = $stack9 + pi""];\n	""2"" [label=""$stack11 = lengthof parameters""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.functions.ConstructorFunction: java.lang.reflect.Constructor constructor>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(args)""];\n	""5"" [label=""$stack14 = i + pi""];\n	""6"" [label=""$stack15 = types[$stack14]""];\n	""7"" [label=""$stack16 = parameters[i]""];\n	""8"" [label=""$stack17 = i + pi""];\n	""9"" [label=""$stack18 = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack16, $stack15)""];\n	""10"" [label=""$stack19 = types[0]""];\n	""11"" [label=""$stack20 = class \""Lorg/apache/commons/jxpath/ExpressionContext;\""""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack19)""];\n	""13"" [label=""$stack22 := @caughtexception""];\n	""14"" [label=""$stack23 = args instanceof java.lang.reflect.InvocationTargetException""];\n	""15"" [label=""$stack24 = new java.lang.StringBuilder""];\n	""16"" [label=""$stack25 = this.<org.apache.commons.jxpath.functions.ConstructorFunction: java.lang.reflect.Constructor constructor>""];\n	""17"" [label=""$stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot invoke constructor \"")""];\n	""18"" [label=""$stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack25)""];\n	""19"" [label=""$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""20"" [label=""$stack29 = new org.apache.commons.jxpath.JXPathInvalidAccessException""];\n	""21"" [label=""$stack30 = (java.lang.reflect.InvocationTargetException) args""];\n	""22"" [label=""$stack7 = this.<org.apache.commons.jxpath.functions.ConstructorFunction: java.lang.reflect.Constructor constructor>""];\n	""23"" [label=""$stack8 = lengthof types""];\n	""24"" [label=""$stack9 = lengthof parameters""];\n	""25"" [label=""args = $stack22""];\n	""26"" [label=""args = newarray (java.lang.Object)[$stack10]""];\n	""27"" [label=""args = virtualinvoke $stack30.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>()""];\n	""28"" [label=""args[$stack17] = $stack18""];\n	""29"" [label=""args[0] = context""];\n	""30"" [label=""context := @parameter0: org.apache.commons.jxpath.ExpressionContext""];\n	""31"" [label=""goto""];\n	""32"" [label=""i = 0""];\n	""33"" [label=""i = i + 1""];\n	""34"" [label=""if $stack21 == 0""];\n	""35"" [label=""if $stack23 == 0""];\n	""36"" [label=""if $stack8 <= 0""];\n	""37"" [label=""if i >= $stack11""];\n	""38"" [label=""if parameters != null""];\n	""39"" [label=""if pi != 1""];\n	""40"" [label=""parameters := @parameter1: java.lang.Object[]""];\n	""41"" [label=""parameters = <org.apache.commons.jxpath.functions.ConstructorFunction: java.lang.Object[] EMPTY_ARRAY>""];\n	""42"" [label=""pi = 0""];\n	""43"" [label=""pi = 1""];\n	""44"" [label=""return $stack13""];\n	""45"" [label=""specialinvoke $stack24.<java.lang.StringBuilder: void <init>()>()""];\n	""46"" [label=""specialinvoke $stack29.<org.apache.commons.jxpath.JXPathInvalidAccessException: void <init>(java.lang.String,java.lang.Throwable)>($stack28, args)""];\n	""47"" [label=""this := @this: org.apache.commons.jxpath.functions.ConstructorFunction""];\n	""48"" [label=""throw $stack29""];\n	""49"" [label=""types = virtualinvoke $stack7.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()""];\n	""1"" -> ""13""[label=""cfg_except""];\n	""1"" -> ""26""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_except""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_except""];\n	""12"" -> ""13""[label=""cfg_except""];\n	""12"" -> ""34""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""35""[label=""cfg_next""];\n	""15"" -> ""45""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""46""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_except""];\n	""2"" -> ""37""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""27""[label=""cfg_next""];\n	""22"" -> ""13""[label=""cfg_except""];\n	""22"" -> ""49""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_except""];\n	""23"" -> ""36""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""13""[label=""cfg_except""];\n	""25"" -> ""14""[label=""cfg_next""];\n	""26"" -> ""13""[label=""cfg_except""];\n	""26"" -> ""39""[label=""cfg_next""];\n	""27"" -> ""20""[label=""cfg_next""];\n	""28"" -> ""13""[label=""cfg_except""];\n	""28"" -> ""33""[label=""cfg_next""];\n	""29"" -> ""13""[label=""cfg_except""];\n	""29"" -> ""32""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""40""[label=""cfg_next""];\n	""31"" -> ""13""[label=""cfg_except""];\n	""31"" -> ""2""[label=""cfg_goto""];\n	""32"" -> ""13""[label=""cfg_except""];\n	""32"" -> ""2""[label=""cfg_next""];\n	""33"" -> ""13""[label=""cfg_except""];\n	""33"" -> ""31""[label=""cfg_next""];\n	""34"" -> ""13""[label=""cfg_except""];\n	""34"" -> ""24""[label=""cfg_true""];\n	""34"" -> ""43""[label=""cfg_false""];\n	""35"" -> ""20""[label=""cfg_true""];\n	""35"" -> ""21""[label=""cfg_false""];\n	""36"" -> ""11""[label=""cfg_false""];\n	""36"" -> ""13""[label=""cfg_except""];\n	""36"" -> ""24""[label=""cfg_true""];\n	""37"" -> ""13""[label=""cfg_except""];\n	""37"" -> ""3""[label=""cfg_true""];\n	""37"" -> ""8""[label=""cfg_false""];\n	""38"" -> ""13""[label=""cfg_except""];\n	""38"" -> ""41""[label=""cfg_false""];\n	""38"" -> ""42""[label=""cfg_true""];\n	""39"" -> ""13""[label=""cfg_except""];\n	""39"" -> ""29""[label=""cfg_false""];\n	""39"" -> ""32""[label=""cfg_true""];\n	""4"" -> ""13""[label=""cfg_except""];\n	""4"" -> ""44""[label=""cfg_next""];\n	""40"" -> ""38""[label=""cfg_next""];\n	""41"" -> ""13""[label=""cfg_except""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""13""[label=""cfg_except""];\n	""42"" -> ""22""[label=""cfg_next""];\n	""43"" -> ""13""[label=""cfg_except""];\n	""43"" -> ""24""[label=""cfg_next""];\n	""45"" -> ""17""[label=""cfg_next""];\n	""46"" -> ""48""[label=""cfg_next""];\n	""47"" -> ""30""[label=""cfg_next""];\n	""49"" -> ""13""[label=""cfg_except""];\n	""49"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_except""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_except""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_except""];\n	""9"" -> ""28""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.functions.ConstructorFunction.<init>(Constructor),Constructor,* Create a new ConstructorFunction.\n     * @param constructor the constructor to call.,public ConstructorFunction(final Constructor constructor) {\n    this.constructor = constructor;\n},void <init>(java.lang.reflect.Constructor),"digraph cfg_init {\n	""1"" [label=""constructor := @parameter0: java.lang.reflect.Constructor""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.functions.ConstructorFunction""];\n	""5"" [label=""this.<org.apache.commons.jxpath.functions.ConstructorFunction: java.lang.reflect.Constructor constructor> = constructor""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.MapDynamicPropertyHandler.getPropertyNames(Object),Method,No Comment,@Override\npublic String[] getPropertyNames(final Object object) {\n    final Map map = (Map) object;\n    final Set set = map.keySet();\n    final String[] names = new String[set.size()];\n    final Iterator it = set.iterator();\n    for (int i = 0; i < names.length; i++) {\n        names[i] = String.valueOf(it.next());\n    }\n    return names;\n},java.lang.String[] getPropertyNames(java.lang.Object),"digraph cfg_getPropertyNames {\n	""1"" [label=""$stack10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($stack9)""];\n	""2"" [label=""$stack7 = interfaceinvoke set.<java.util.Set: int size()>()""];\n	""3"" [label=""$stack8 = lengthof names""];\n	""4"" [label=""$stack9 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""i = 0""];\n	""7"" [label=""i = i + 1""];\n	""8"" [label=""if i >= $stack8""];\n	""9"" [label=""it = interfaceinvoke set.<java.util.Set: java.util.Iterator iterator()>()""];\n	""10"" [label=""map = (java.util.Map) object""];\n	""11"" [label=""names = newarray (java.lang.String)[$stack7]""];\n	""12"" [label=""names[i] = $stack10""];\n	""13"" [label=""object := @parameter0: java.lang.Object""];\n	""14"" [label=""return names""];\n	""15"" [label=""set = interfaceinvoke map.<java.util.Map: java.util.Set keySet()>()""];\n	""16"" [label=""this := @this: org.apache.commons.jxpath.MapDynamicPropertyHandler""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_goto""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.MapDynamicPropertyHandler.getProperty(Object,String)",Method,No Comment,"@Override\npublic Object getProperty(final Object object, final String propertyName) {\n    return ((Map) object).get(propertyName);\n}","java.lang.Object getProperty(java.lang.Object,java.lang.String)","digraph cfg_getProperty {\n	""1"" [label=""$stack3 = (java.util.Map) object""];\n	""2"" [label=""$stack4 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>(propertyName)""];\n	""3"" [label=""object := @parameter0: java.lang.Object""];\n	""4"" [label=""propertyName := @parameter1: java.lang.String""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.MapDynamicPropertyHandler""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.MapDynamicPropertyHandler.setProperty(Object,String,Object)",Method,No Comment,"@Override\npublic void setProperty(final Object object, final String propertyName, final Object value) {\n    ((Map) object).put(propertyName, value);\n}","void setProperty(java.lang.Object,java.lang.String,java.lang.Object)","digraph cfg_setProperty {\n	""1"" [label=""$stack4 = (java.util.Map) object""];\n	""2"" [label=""interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(propertyName, value)""];\n	""3"" [label=""object := @parameter0: java.lang.Object""];\n	""4"" [label=""propertyName := @parameter1: java.lang.String""];\n	""5"" [label=""return""];\n	""6"" [label=""this := @this: org.apache.commons.jxpath.MapDynamicPropertyHandler""];\n	""7"" [label=""value := @parameter2: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.PackageFunctions.getUsedNamespaces(),Method,* Returns the namespace specified in the constructor\n     * @return (singleton) namespace Set,@Override\npublic Set getUsedNamespaces() {\n    return Collections.singleton(namespace);\n},java.util.Set getUsedNamespaces(),"digraph cfg_getUsedNamespaces {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.PackageFunctions: java.lang.String namespace>""];\n	""2"" [label=""$stack2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.PackageFunctions""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.PackageFunctions.getFunction(String,String,Object[])",Method,"* Returns a {@link Function}, if found, for the specified namespace,\n     * name and parameter types.\n     *\n     * @param  namespace - if it is not the same as specified in the\n     * construction, this method returns null\n     * @param name - name of the method, which can one these forms:\n     * <ul>\n     * <li><strong>methodname</strong>, if invoking a method on an object passed as the\n     * first parameter</li>\n     * <li><strong>Classname.new</strong>, if looking for a constructor</li>\n     * <li><strong>subpackage.subpackage.Classname.new</strong>, if looking for a\n     * constructor in a subpackage</li>\n     * <li><strong>Classname.methodname</strong>, if looking for a static method</li>\n     * <li><strong>subpackage.subpackage.Classname.methodname</strong>, if looking for a\n     * static method of a class in a subpackage</li>\n     * </ul>\n     * @param parameters Object[] of parameters\n     * @return a MethodFunction, a ConstructorFunction or null if no function\n     * is found","@Override\npublic Function getFunction(final String namespace, final String name, Object[] parameters) {\n    if (!Objects.equals(this.namespace, namespace)) {\n        return null;\n    }\n    if (parameters == null) {\n        parameters = EMPTY_ARRAY;\n    }\n    if (parameters.length >= 1) {\n        Object target = TypeUtils.convert(parameters[0], Object.class);\n        if (target != null) {\n            Method method = MethodLookupUtils.lookupMethod(target.getClass(), name, parameters);\n            if (method != null) {\n                return new MethodFunction(method);\n            }\n            if (target instanceof NodeSet) {\n                target = ((NodeSet) target).getPointers();\n            }\n            method = MethodLookupUtils.lookupMethod(target.getClass(), name, parameters);\n            if (method != null) {\n                return new MethodFunction(method);\n            }\n            if (target instanceof Collection) {\n                final Iterator iter = ((Collection) target).iterator();\n                if (iter.hasNext()) {\n                    target = iter.next();\n                    if (target instanceof Pointer) {\n                        target = ((Pointer) target).getValue();\n                    }\n                } else {\n                    target = null;\n                }\n            }\n        }\n        if (target != null) {\n            final Method method = MethodLookupUtils.lookupMethod(target.getClass(), name, parameters);\n            if (method != null) {\n                return new MethodFunction(method);\n            }\n        }\n    }\n    final String fullName = classPrefix + name;\n    final int inx = fullName.lastIndexOf('.');\n    if (inx == -1) {\n        return null;\n    }\n    final String className = fullName.substring(0, inx);\n    final String methodName = fullName.substring(inx + 1);\n    Class functionClass;\n    try {\n        functionClass = ClassLoaderUtil.getClass(className, true);\n    } catch (final ClassNotFoundException ex) {\n        throw new JXPathException(""Cannot invoke extension function "" + (namespace != null ? namespace + "":"" + name : name), ex);\n    }\n    if (methodName.equals(""new"")) {\n        final Constructor constructor = MethodLookupUtils.lookupConstructor(functionClass, parameters);\n        if (constructor != null) {\n            return new ConstructorFunction(constructor);\n        }\n    } else {\n        final Method method = MethodLookupUtils.lookupStaticMethod(functionClass, methodName, parameters);\n        if (method != null) {\n            return new MethodFunction(method);\n        }\n    }\n    return null;\n}","org.apache.commons.jxpath.Function getFunction(java.lang.String,java.lang.String,java.lang.Object[])","digraph cfg_getFunction {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.PackageFunctions: java.lang.String namespace>""];\n	""2"" [label=""$stack11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack10, namespace)""];\n	""3"" [label=""$stack12 = lengthof parameters""];\n	""4"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack14 = this.<org.apache.commons.jxpath.PackageFunctions: java.lang.String classPrefix>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name)""];\n	""8"" [label=""$stack17 = method + 1""];\n	""9"" [label=""$stack18 = virtualinvoke methodName.<java.lang.String: boolean equals(java.lang.Object)>(\""new\"")""];\n	""10"" [label=""$stack19 = new org.apache.commons.jxpath.functions.MethodFunction""];\n	""11"" [label=""$stack20 = new org.apache.commons.jxpath.functions.ConstructorFunction""];\n	""12"" [label=""$stack21 = parameters[0]""];\n	""13"" [label=""$stack22 = virtualinvoke target.<java.lang.Object: java.lang.Class getClass()>()""];\n	""14"" [label=""$stack23 = new org.apache.commons.jxpath.functions.MethodFunction""];\n	""15"" [label=""$stack24 = virtualinvoke target.<java.lang.Object: java.lang.Class getClass()>()""];\n	""16"" [label=""$stack25 = target instanceof org.apache.commons.jxpath.NodeSet""];\n	""17"" [label=""$stack26 = virtualinvoke target.<java.lang.Object: java.lang.Class getClass()>()""];\n	""18"" [label=""$stack27 = target instanceof java.util.Collection""];\n	""19"" [label=""$stack28 = (java.util.Collection) target""];\n	""20"" [label=""$stack29 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>()""];\n	""21"" [label=""$stack30 = target instanceof org.apache.commons.jxpath.Pointer""];\n	""22"" [label=""$stack31 = (org.apache.commons.jxpath.Pointer) target""];\n	""23"" [label=""$stack32 = new org.apache.commons.jxpath.functions.MethodFunction""];\n	""24"" [label=""$stack33 = (org.apache.commons.jxpath.NodeSet) target""];\n	""25"" [label=""$stack34 = new org.apache.commons.jxpath.functions.MethodFunction""];\n	""26"" [label=""$stack35 := @caughtexception""];\n	""27"" [label=""$stack36 = new java.lang.StringBuilder""];\n	""28"" [label=""$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Cannot invoke extension function \"")""];\n	""29"" [label=""$stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack45)""];\n	""30"" [label=""$stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""31"" [label=""$stack40 = new org.apache.commons.jxpath.JXPathException""];\n	""32"" [label=""$stack41 = new java.lang.StringBuilder""];\n	""33"" [label=""$stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(namespace)""];\n	""34"" [label=""$stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"":\"")""];\n	""35"" [label=""$stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name)""];\n	""36"" [label=""$stack45 = name""];\n	""37"" [label=""$stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""38"" [label=""ex = $stack35""];\n	""39"" [label=""ex = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Constructor lookupConstructor(java.lang.Class,java.lang.Object[])>(functionClass, parameters)""];\n	""40"" [label=""ex = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Method lookupStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[])>(functionClass, methodName, parameters)""];\n	""41"" [label=""functionClass = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.String,boolean)>(iter, 1)""];\n	""42"" [label=""goto""];\n	""43"" [label=""goto""];\n	""44"" [label=""goto""];\n	""45"" [label=""goto""];\n	""46"" [label=""if $stack11 != 0""];\n	""47"" [label=""if $stack12 < 1""];\n	""48"" [label=""if $stack18 == 0""];\n	""49"" [label=""if $stack25 == 0""];\n	""50"" [label=""if $stack27 == 0""];\n	""51"" [label=""if $stack29 == 0""];\n	""52"" [label=""if $stack30 == 0""];\n	""53"" [label=""if ex == null""];\n	""54"" [label=""if ex == null""];\n	""55"" [label=""if method != -1""];\n	""56"" [label=""if method == null""];\n	""57"" [label=""if method == null""];\n	""58"" [label=""if method == null""];\n	""59"" [label=""if namespace == null""];\n	""60"" [label=""if parameters != null""];\n	""61"" [label=""if target == null""];\n	""62"" [label=""if target == null""];\n	""63"" [label=""iter = interfaceinvoke $stack28.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""64"" [label=""iter = virtualinvoke target.<java.lang.String: java.lang.String substring(int,int)>(0, method)""];\n	""65"" [label=""method = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Method lookupMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($stack22, name, parameters)""];\n	""66"" [label=""method = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Method lookupMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($stack24, name, parameters)""];\n	""67"" [label=""method = staticinvoke <org.apache.commons.jxpath.util.MethodLookupUtils: java.lang.reflect.Method lookupMethod(java.lang.Class,java.lang.String,java.lang.Object[])>($stack26, name, parameters)""];\n	""68"" [label=""method = virtualinvoke target.<java.lang.String: int lastIndexOf(int)>(46)""];\n	""69"" [label=""methodName = virtualinvoke target.<java.lang.String: java.lang.String substring(int)>($stack17)""];\n	""70"" [label=""name := @parameter1: java.lang.String""];\n	""71"" [label=""namespace := @parameter0: java.lang.String""];\n	""72"" [label=""parameters := @parameter2: java.lang.Object[]""];\n	""73"" [label=""parameters = <org.apache.commons.jxpath.PackageFunctions: java.lang.Object[] EMPTY_ARRAY>""];\n	""74"" [label=""return $stack19""];\n	""75"" [label=""return $stack20""];\n	""76"" [label=""return $stack23""];\n	""77"" [label=""return $stack32""];\n	""78"" [label=""return $stack34""];\n	""79"" [label=""return null""];\n	""80"" [label=""return null""];\n	""81"" [label=""return null""];\n	""82"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>()""];\n	""83"" [label=""specialinvoke $stack19.<org.apache.commons.jxpath.functions.MethodFunction: void <init>(java.lang.reflect.Method)>(ex)""];\n	""84"" [label=""specialinvoke $stack20.<org.apache.commons.jxpath.functions.ConstructorFunction: void <init>(java.lang.reflect.Constructor)>(ex)""];\n	""85"" [label=""specialinvoke $stack23.<org.apache.commons.jxpath.functions.MethodFunction: void <init>(java.lang.reflect.Method)>(method)""];\n	""86"" [label=""specialinvoke $stack32.<org.apache.commons.jxpath.functions.MethodFunction: void <init>(java.lang.reflect.Method)>(method)""];\n	""87"" [label=""specialinvoke $stack34.<org.apache.commons.jxpath.functions.MethodFunction: void <init>(java.lang.reflect.Method)>(method)""];\n	""88"" [label=""specialinvoke $stack36.<java.lang.StringBuilder: void <init>()>()""];\n	""89"" [label=""specialinvoke $stack40.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String,java.lang.Throwable)>($stack39, ex)""];\n	""90"" [label=""specialinvoke $stack41.<java.lang.StringBuilder: void <init>()>()""];\n	""91"" [label=""target = interfaceinvoke $stack31.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""92"" [label=""target = interfaceinvoke $stack33.<org.apache.commons.jxpath.NodeSet: java.util.List getPointers()>()""];\n	""93"" [label=""target = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>()""];\n	""94"" [label=""target = null""];\n	""95"" [label=""target = staticinvoke <org.apache.commons.jxpath.util.TypeUtils: java.lang.Object convert(java.lang.Object,java.lang.Class)>($stack21, class \""Ljava/lang/Object;\"")""];\n	""96"" [label=""target = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""97"" [label=""this := @this: org.apache.commons.jxpath.PackageFunctions""];\n	""98"" [label=""throw $stack40""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""83""[label=""cfg_next""];\n	""11"" -> ""84""[label=""cfg_next""];\n	""12"" -> ""95""[label=""cfg_next""];\n	""13"" -> ""65""[label=""cfg_next""];\n	""14"" -> ""85""[label=""cfg_next""];\n	""15"" -> ""66""[label=""cfg_next""];\n	""16"" -> ""49""[label=""cfg_next""];\n	""17"" -> ""67""[label=""cfg_next""];\n	""18"" -> ""50""[label=""cfg_next""];\n	""19"" -> ""63""[label=""cfg_next""];\n	""2"" -> ""46""[label=""cfg_next""];\n	""20"" -> ""51""[label=""cfg_next""];\n	""21"" -> ""52""[label=""cfg_next""];\n	""22"" -> ""91""[label=""cfg_next""];\n	""23"" -> ""86""[label=""cfg_next""];\n	""24"" -> ""92""[label=""cfg_next""];\n	""25"" -> ""87""[label=""cfg_next""];\n	""26"" -> ""38""[label=""cfg_next""];\n	""27"" -> ""88""[label=""cfg_next""];\n	""28"" -> ""59""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""47""[label=""cfg_next""];\n	""30"" -> ""89""[label=""cfg_next""];\n	""31"" -> ""27""[label=""cfg_next""];\n	""32"" -> ""90""[label=""cfg_next""];\n	""33"" -> ""34""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""37""[label=""cfg_next""];\n	""36"" -> ""29""[label=""cfg_next""];\n	""37"" -> ""44""[label=""cfg_next""];\n	""38"" -> ""31""[label=""cfg_next""];\n	""39"" -> ""53""[label=""cfg_next""];\n	""4"" -> ""82""[label=""cfg_next""];\n	""40"" -> ""54""[label=""cfg_next""];\n	""41"" -> ""26""[label=""cfg_except""];\n	""41"" -> ""43""[label=""cfg_next""];\n	""42"" -> ""62""[label=""cfg_goto""];\n	""43"" -> ""9""[label=""cfg_goto""];\n	""44"" -> ""29""[label=""cfg_goto""];\n	""45"" -> ""81""[label=""cfg_goto""];\n	""46"" -> ""60""[label=""cfg_true""];\n	""46"" -> ""79""[label=""cfg_false""];\n	""47"" -> ""12""[label=""cfg_false""];\n	""47"" -> ""4""[label=""cfg_true""];\n	""48"" -> ""39""[label=""cfg_false""];\n	""48"" -> ""40""[label=""cfg_true""];\n	""49"" -> ""17""[label=""cfg_true""];\n	""49"" -> ""24""[label=""cfg_false""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""19""[label=""cfg_false""];\n	""50"" -> ""62""[label=""cfg_true""];\n	""51"" -> ""93""[label=""cfg_false""];\n	""51"" -> ""94""[label=""cfg_true""];\n	""52"" -> ""22""[label=""cfg_false""];\n	""52"" -> ""62""[label=""cfg_true""];\n	""53"" -> ""11""[label=""cfg_false""];\n	""53"" -> ""45""[label=""cfg_true""];\n	""54"" -> ""10""[label=""cfg_false""];\n	""54"" -> ""81""[label=""cfg_true""];\n	""55"" -> ""64""[label=""cfg_true""];\n	""55"" -> ""80""[label=""cfg_false""];\n	""56"" -> ""16""[label=""cfg_true""];\n	""56"" -> ""25""[label=""cfg_false""];\n	""57"" -> ""18""[label=""cfg_true""];\n	""57"" -> ""23""[label=""cfg_false""];\n	""58"" -> ""14""[label=""cfg_false""];\n	""58"" -> ""4""[label=""cfg_true""];\n	""59"" -> ""32""[label=""cfg_false""];\n	""59"" -> ""36""[label=""cfg_true""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""60"" -> ""3""[label=""cfg_true""];\n	""60"" -> ""73""[label=""cfg_false""];\n	""61"" -> ""15""[label=""cfg_false""];\n	""61"" -> ""62""[label=""cfg_true""];\n	""62"" -> ""13""[label=""cfg_false""];\n	""62"" -> ""4""[label=""cfg_true""];\n	""63"" -> ""20""[label=""cfg_next""];\n	""64"" -> ""8""[label=""cfg_next""];\n	""65"" -> ""58""[label=""cfg_next""];\n	""66"" -> ""56""[label=""cfg_next""];\n	""67"" -> ""57""[label=""cfg_next""];\n	""68"" -> ""55""[label=""cfg_next""];\n	""69"" -> ""41""[label=""cfg_next""];\n	""7"" -> ""96""[label=""cfg_next""];\n	""70"" -> ""72""[label=""cfg_next""];\n	""71"" -> ""70""[label=""cfg_next""];\n	""72"" -> ""1""[label=""cfg_next""];\n	""73"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""69""[label=""cfg_next""];\n	""82"" -> ""5""[label=""cfg_next""];\n	""83"" -> ""74""[label=""cfg_next""];\n	""84"" -> ""75""[label=""cfg_next""];\n	""85"" -> ""76""[label=""cfg_next""];\n	""86"" -> ""77""[label=""cfg_next""];\n	""87"" -> ""78""[label=""cfg_next""];\n	""88"" -> ""28""[label=""cfg_next""];\n	""89"" -> ""98""[label=""cfg_next""];\n	""9"" -> ""48""[label=""cfg_next""];\n	""90"" -> ""33""[label=""cfg_next""];\n	""91"" -> ""42""[label=""cfg_next""];\n	""92"" -> ""17""[label=""cfg_next""];\n	""93"" -> ""21""[label=""cfg_next""];\n	""94"" -> ""62""[label=""cfg_next""];\n	""95"" -> ""61""[label=""cfg_next""];\n	""96"" -> ""68""[label=""cfg_next""];\n	""97"" -> ""71""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.PackageFunctions.<init>(String,String)",Constructor,* Create a new PackageFunctions.\n     * @param classPrefix class prefix\n     * @param namespace namespace String,"public PackageFunctions(final String classPrefix, final String namespace) {\n    this.classPrefix = classPrefix;\n    this.namespace = namespace;\n}","void <init>(java.lang.String,java.lang.String)","digraph cfg_init {\n	""1"" [label=""classPrefix := @parameter0: java.lang.String""];\n	""2"" [label=""namespace := @parameter1: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.PackageFunctions""];\n	""6"" [label=""this.<org.apache.commons.jxpath.PackageFunctions: java.lang.String classPrefix> = classPrefix""];\n	""7"" [label=""this.<org.apache.commons.jxpath.PackageFunctions: java.lang.String namespace> = namespace""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.CompiledExpression.getValue(JXPathContext),Abstract Method,* Evaluates the xpath and returns the resulting object. Primitive\n     * types are wrapped into objects.\n     * @param context to evaluate\n     * @return Object,Object getValue(JXPathContext context);,java.lang.Object getValue(org.apache.commons.jxpath.JXPathContext),digraph cfg_getValue {\n}\n,default
"org.apache.commons.jxpath.CompiledExpression.getValue(JXPathContext,Class)",Abstract Method,"* Evaluates the xpath, converts the result to the specified class and\n     * returns the resulting object.\n     * @param context to evaluate\n     * @param requiredType return type\n     * @return Object","Object getValue(JXPathContext context, Class requiredType);","java.lang.Object getValue(org.apache.commons.jxpath.JXPathContext,java.lang.Class)",digraph cfg_getValue {\n}\n,default
"org.apache.commons.jxpath.CompiledExpression.setValue(JXPathContext,Object)",Abstract Method,"* Modifies the value of the property described by the supplied xpath.\n     * Will throw an exception if one of the following conditions occurs:\n     * <ul>\n     * <li>The xpath does not in fact describe an existing property\n     * <li>The property is not writable (no public, non-static set method)\n     * </ul>\n     * @param context base\n     * @param value to set","void setValue(JXPathContext context, Object value);","void setValue(org.apache.commons.jxpath.JXPathContext,java.lang.Object)",digraph cfg_setValue {\n}\n,default
org.apache.commons.jxpath.CompiledExpression.createPath(JXPathContext),Abstract Method,"* Creates intermediate elements of\n     * the path by invoking an {@link AbstractFactory}, which should first be\n     * installed on the context by calling {@link JXPathContext#setFactory}.\n     * @param context base\n     * @return Pointer created",Pointer createPath(JXPathContext context);,org.apache.commons.jxpath.Pointer createPath(org.apache.commons.jxpath.JXPathContext),digraph cfg_createPath {\n}\n,default
"org.apache.commons.jxpath.CompiledExpression.createPathAndSetValue(JXPathContext,Object)",Abstract Method,"* The same as setValue, except it creates intermediate elements of\n     * the path by invoking an {@link AbstractFactory}, which should first be\n     * installed on the context by calling {@link JXPathContext#setFactory}.\n     * <p>\n     * Will throw an exception if one of the following conditions occurs:\n     * <ul>\n     * <li>Elements of the xpath aleady exist, by the path does not in\n     *  fact describe an existing property\n     * <li>The AbstractFactory fails to create an instance for an intermediate\n     * element.\n     * <li>The property is not writable (no public, non-static set method)\n     * </ul>\n     * @param context base\n     * @param value to set\n     * @return Pointer created","Pointer createPathAndSetValue(JXPathContext context, Object value);","org.apache.commons.jxpath.Pointer createPathAndSetValue(org.apache.commons.jxpath.JXPathContext,java.lang.Object)",digraph cfg_createPathAndSetValue {\n}\n,default
org.apache.commons.jxpath.CompiledExpression.iterate(JXPathContext),Abstract Method,"* Traverses the xpath and returns a Iterator of all results found\n     * for the path. If the xpath matches no properties\n     * in the graph, the Iterator will not be null.\n     * @param context base\n     * @return Iterator",Iterator iterate(JXPathContext context);,java.util.Iterator iterate(org.apache.commons.jxpath.JXPathContext),digraph cfg_iterate {\n}\n,default
"org.apache.commons.jxpath.CompiledExpression.getPointer(JXPathContext,String)",Abstract Method,"* Traverses the xpath and returns a Pointer.\n     * A Pointer provides easy access to a property.\n     * If the xpath matches no properties\n     * in the graph, the pointer will be null.\n     * @param context base\n     * @param xpath string\n     * @return Pointer found","Pointer getPointer(JXPathContext context, String xpath);","org.apache.commons.jxpath.Pointer getPointer(org.apache.commons.jxpath.JXPathContext,java.lang.String)",digraph cfg_getPointer {\n}\n,default
org.apache.commons.jxpath.CompiledExpression.iteratePointers(JXPathContext),Abstract Method,"* Traverses the xpath and returns an Iterator of Pointers.\n     * A Pointer provides easy access to a property.\n     * If the xpath matches no properties\n     * in the graph, the Iterator be empty, but not null.\n     * @param context to iterate\n     * @return Iterator",Iterator iteratePointers(JXPathContext context);,java.util.Iterator iteratePointers(org.apache.commons.jxpath.JXPathContext),digraph cfg_iteratePointers {\n}\n,default
org.apache.commons.jxpath.CompiledExpression.removePath(JXPathContext),Abstract Method,* Remove the graph element described by this expression.\n     * @param context base,void removePath(JXPathContext context);,void removePath(org.apache.commons.jxpath.JXPathContext),digraph cfg_removePath {\n}\n,default
org.apache.commons.jxpath.CompiledExpression.removeAll(JXPathContext),Abstract Method,* Remove all graph elements described by this expression.\n     * @param context base,void removeAll(JXPathContext context);,void removeAll(org.apache.commons.jxpath.JXPathContext),digraph cfg_removeAll {\n}\n,default
org.apache.commons.jxpath.JXPathNotFoundException.<init>(String),Constructor,* Create a new JXPathNotFoundException.\n     * @param message exception detail,public JXPathNotFoundException(final String message) {\n    super(message);\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""message := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<org.apache.commons.jxpath.JXPathException: void <init>(java.lang.String)>(message)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathNotFoundException""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathException.getMessage(),Method,* Gets the message (if any) for this error . If there is no\n     * message for the exception and there is an encapsulated\n     * exception then the message of that exception will be returned.\n     *\n     * @return The error message.,"@Override\npublic String getMessage() {\n    final String message = super.getMessage();\n    if (exception == null) {\n        return message;\n    }\n    final StringBuilder buf = new StringBuilder();\n    if (message != null) {\n        buf.append(message).append(""; "");\n    }\n    final String eMsg = exception.getMessage();\n    buf.append(eMsg == null ? exception.getClass().getName() : eMsg);\n    return buf.toString();\n}",java.lang.String getMessage(),"digraph cfg_getMessage {\n	""1"" [label=""$stack10 = eMsg""];\n	""2"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.Class: java.lang.String getName()>()""];\n	""3"" [label=""$stack11 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message)""];\n	""4"" [label=""$stack4 = this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception>""];\n	""5"" [label=""$stack5 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack6 = this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception>""];\n	""7"" [label=""$stack7 = virtualinvoke buf.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack8 = this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception>""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.Object: java.lang.Class getClass()>()""];\n	""10"" [label=""buf = $stack5""];\n	""11"" [label=""eMsg = virtualinvoke $stack6.<java.lang.Throwable: java.lang.String getMessage()>()""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack4 != null""];\n	""14"" [label=""if eMsg != null""];\n	""15"" [label=""if message == null""];\n	""16"" [label=""message = specialinvoke this.<java.lang.RuntimeException: java.lang.String getMessage()>()""];\n	""17"" [label=""return $stack7""];\n	""18"" [label=""return message""];\n	""19"" [label=""specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>()""];\n	""20"" [label=""this := @this: org.apache.commons.jxpath.JXPathException""];\n	""21"" [label=""virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""; \"")""];\n	""22"" [label=""virtualinvoke buf.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10)""];\n	""1"" -> ""22""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_goto""];\n	""13"" -> ""18""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""1""[label=""cfg_true""];\n	""14"" -> ""8""[label=""cfg_false""];\n	""15"" -> ""3""[label=""cfg_false""];\n	""15"" -> ""6""[label=""cfg_true""];\n	""16"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""6""[label=""cfg_next""];\n	""22"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathException.getException(),Method,"* Gets the actual exception (if any) that caused this exception to\n     * be raised.\n     *\n     * @return The encapsulated exception, or null if there is none.",public Throwable getException() {\n    return exception;\n},java.lang.Throwable getException(),"digraph cfg_getException {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathException""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathException.getCause(),Method,"* Same as {@link #getException() getException()}\n     * @return The encapsulated exception, or null if there is none.",@Override\npublic Throwable getCause() {\n    return exception;\n},java.lang.Throwable getCause(),"digraph cfg_getCause {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathException""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathException.<init>(),Constructor,No Comment,public JXPathException() {\n    this.exception = null;\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.RuntimeException: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathException""];\n	""4"" [label=""this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception> = null""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathException.<init>(String),Constructor,* Create a new {@code JXPathException} with\n     * the {@code String } specified as an error message.\n     *\n     * @param msg The error message for the exception.,public JXPathException(final String msg) {\n    super(msg);\n    this.exception = null;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""msg := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg)""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.JXPathException""];\n	""5"" [label=""this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception> = null""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathException.<init>(Throwable),Constructor,* Create a new {@code JXPathException} with a\n     * given {@code Throwable} base cause of the error.\n     *\n     * @param e The exception to be encapsulated in a\n     * JXPathException.,public JXPathException(final Throwable e) {\n    super(e.toString());\n    this.exception = e;\n},void <init>(java.lang.Throwable),"digraph cfg_init {\n	""1"" [label=""$stack2 = virtualinvoke e.<java.lang.Throwable: java.lang.String toString()>()""];\n	""2"" [label=""e := @parameter0: java.lang.Throwable""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack2)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathException""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception> = e""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.JXPathException.<init>(String,Throwable)",Constructor,* Create a new {@code JXPathException} with the\n     * given {@code Exception} base cause and detail message.\n     *\n     * @param msg The detail message.\n     * @param e The exception to be encapsulated in a JXPathException,"public JXPathException(final String msg, final Throwable e) {\n    super(msg);\n    this.exception = e;\n}","void <init>(java.lang.String,java.lang.Throwable)","digraph cfg_init {\n	""1"" [label=""e := @parameter1: java.lang.Throwable""];\n	""2"" [label=""msg := @parameter0: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg)""];\n	""5"" [label=""this := @this: org.apache.commons.jxpath.JXPathException""];\n	""6"" [label=""this.<org.apache.commons.jxpath.JXPathException: java.lang.Throwable exception> = e""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.JXPathContextFactory.newInstance(),Method,"* Obtain a new instance of a {@code JXPathContextFactory}.\n     * This static method creates a new factory instance.\n     * This method uses the following ordered lookup procedure to determine\n     * the {@code JXPathContextFactory} implementation class to load:\n     * <ul>\n     * <li>\n     * Use  the {@code org.apache.commons.jxpath.JXPathContextFactory}\n     * system property.\n     * </li>\n     * <li>\n     * Alternatively, use the JAVA_HOME (the parent directory where jdk is\n     * installed)/lib/jxpath.properties for a property file that contains the\n     * name of the implementation class keyed on\n     * {@code org.apache.commons.jxpath.JXPathContextFactory}.\n     * </li>\n     * <li>\n     * Use the Services API (as detailed in the JAR specification), if\n     * available, to determine the class name. The Services API will look\n     * for a class name in the file\n     * {@code META- INF/services/<i>org.apache.commons.jxpath.\n     * JXPathContextFactory</i>} in jars available to the runtime.\n     * </li>\n     * <li>\n     * Platform default {@code JXPathContextFactory} instance.\n     * </li>\n     * </ul>\n     *\n     * Once an application has obtained a reference to a\n     * {@code JXPathContextFactory} it can use the factory to\n     * obtain JXPathContext instances.\n     *\n     * @return JXPathContextFactory\n     * @throws JXPathContextFactoryConfigurationError if the implementation\n     *            is not available or cannot be instantiated.","public static JXPathContextFactory newInstance() {\n    JXPathContextFactory factoryImpl;\n    try {\n        final Class clazz = ClassLoaderUtil.getClass(FACTORY_IMPL_NAME, true);\n        factoryImpl = (JXPathContextFactory) clazz.getConstructor().newInstance();\n    } catch (final ReflectiveOperationException ie) {\n        throw new JXPathContextFactoryConfigurationError(ie);\n    }\n    return factoryImpl;\n}",org.apache.commons.jxpath.JXPathContextFactory newInstance(),"digraph cfg_newInstance {\n	""1"" [label=""$stack2 = <org.apache.commons.jxpath.JXPathContextFactory: java.lang.String FACTORY_IMPL_NAME>""];\n	""2"" [label=""$stack3 = newarray (java.lang.Class)[0]""];\n	""3"" [label=""$stack4 = newarray (java.lang.Object)[0]""];\n	""4"" [label=""$stack5 = virtualinvoke clazz.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack3)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack4)""];\n	""6"" [label=""$stack7 := @caughtexception""];\n	""7"" [label=""$stack8 = new org.apache.commons.jxpath.JXPathContextFactoryConfigurationError""];\n	""8"" [label=""clazz = $stack7""];\n	""9"" [label=""clazz = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.String,boolean)>($stack2, 1)""];\n	""10"" [label=""factoryImpl = (org.apache.commons.jxpath.JXPathContextFactory) $stack6""];\n	""11"" [label=""goto""];\n	""12"" [label=""return factoryImpl""];\n	""13"" [label=""specialinvoke $stack8.<org.apache.commons.jxpath.JXPathContextFactoryConfigurationError: void <init>(java.lang.Exception)>(clazz)""];\n	""14"" [label=""throw $stack8""];\n	""1"" -> ""6""[label=""cfg_except""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_except""];\n	""11"" -> ""12""[label=""cfg_goto""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_except""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_except""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_except""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_except""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_except""];\n}\n","public , static "
"org.apache.commons.jxpath.JXPathContextFactory.newContext(JXPathContext,Object)",Abstract Method,No Comment,"public abstract JXPathContext newContext(JXPathContext parentContext, Object contextBean);","org.apache.commons.jxpath.JXPathContext newContext(org.apache.commons.jxpath.JXPathContext,java.lang.Object)",digraph cfg_newContext {\n}\n,"public , abstract "
"org.apache.commons.jxpath.JXPathContextFactory.findFactory(String,String)",Method,"* Private implementation method - will find the implementation\n     * class in the specified order.\n     * @param property    Property name\n     * @param defaultFactory Default implementation, if nothing else is found\n     * @return class name of the JXPathContextFactory","private static String findFactory(final String property, final String defaultFactory) {\n    // Use the factory ID system property first\n    try {\n        final String systemProp = System.getProperty(property);\n        if (systemProp != null) {\n            if (debug) {\n                System.err.println(""JXPath: found system property"" + systemProp);\n            }\n            return systemProp;\n        }\n    } catch (final SecurityException ignore) {\n        // NOPMD\n        // Ignore\n    }\n    // try to read from $java.home/lib/xml.properties\n    try {\n        final String javah = System.getProperty(""java.home"");\n        final String configFile = javah + File.separator + ""lib"" + File.separator + ""jxpath.properties"";\n        final File f = new File(configFile);\n        if (f.exists()) {\n            final Properties props = new Properties();\n            final FileInputStream fis = new FileInputStream(f);\n            try {\n                props.load(fis);\n            } finally {\n                if (fis != null) {\n                    try {\n                        fis.close();\n                    } catch (final IOException ignore) {\n                        // NOPMD\n                        //swallow\n                    }\n                }\n            }\n            final String factory = props.getProperty(property);\n            if (factory != null) {\n                if (debug) {\n                    System.err.println(""JXPath: found java.home property "" + factory);\n                }\n                return factory;\n            }\n        }\n    } catch (final IOException ex) {\n        if (debug) {\n            ex.printStackTrace();\n        }\n    }\n    final String serviceId = ""META-INF/services/"" + property;\n    // try to find services in CLASSPATH\n    try {\n        final ClassLoader cl = JXPathContextFactory.class.getClassLoader();\n        InputStream is;\n        if (cl == null) {\n            is = ClassLoader.getSystemResourceAsStream(serviceId);\n        } else {\n            is = cl.getResourceAsStream(serviceId);\n        }\n        if (is != null) {\n            if (debug) {\n                System.err.println(""JXPath: found  "" + serviceId);\n            }\n            final BufferedReader rd = new BufferedReader(new InputStreamReader(is, ""UTF-8""));\n            String factory = null;\n            try {\n                factory = rd.readLine();\n            } finally {\n                try {\n                    rd.close();\n                } catch (final IOException ignore) {\n                    // NOPMD\n                    // Ignore\n                }\n            }\n            if (factory != null && !"""".equals(factory)) {\n                if (debug) {\n                    System.err.println(""JXPath: loaded from services: "" + factory);\n                }\n                return factory;\n            }\n        }\n    } catch (final Exception ex) {\n        if (debug) {\n            ex.printStackTrace();\n        }\n    }\n    return defaultFactory;\n}","java.lang.String findFactory(java.lang.String,java.lang.String)","digraph cfg_findFactory {\n	""1"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack13 = <java.io.File: java.lang.String separator>""];\n	""3"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(systemProp)""];\n	""4"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""5"" [label=""$stack16 = <java.io.File: java.lang.String separator>""];\n	""6"" [label=""$stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""lib\"")""];\n	""7"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16)""];\n	""8"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""jxpath.properties\"")""];\n	""9"" [label=""$stack20 = new java.io.File""];\n	""10"" [label=""$stack21 = virtualinvoke f.<java.io.File: boolean exists()>()""];\n	""11"" [label=""$stack22 = new java.lang.StringBuilder""];\n	""12"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""META-INF/services/\"")""];\n	""13"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(property)""];\n	""14"" [label=""$stack25 = class \""Lorg/apache/commons/jxpath/JXPathContextFactory;\""""];\n	""15"" [label=""$stack26 = <org.apache.commons.jxpath.JXPathContextFactory: boolean debug>""];\n	""16"" [label=""$stack27 = new java.io.InputStreamReader""];\n	""17"" [label=""$stack28 = new java.io.BufferedReader""];\n	""18"" [label=""$stack29 = \""\""""];\n	""19"" [label=""$stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>(fis)""];\n	""20"" [label=""$stack31 = <org.apache.commons.jxpath.JXPathContextFactory: boolean debug>""];\n	""21"" [label=""$stack32 = fis""];\n	""22"" [label=""$stack33 = new java.lang.StringBuilder""];\n	""23"" [label=""$stack34 = <java.lang.System: java.io.PrintStream err>""];\n	""24"" [label=""$stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""JXPath: loaded from services: \"")""];\n	""25"" [label=""$stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fis)""];\n	""26"" [label=""$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""27"" [label=""$stack38 = new java.lang.StringBuilder""];\n	""28"" [label=""$stack39 = <java.lang.System: java.io.PrintStream err>""];\n	""29"" [label=""$stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""JXPath: found  \"")""];\n	""30"" [label=""$stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(systemProp)""];\n	""31"" [label=""$stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""32"" [label=""$stack43 = new java.util.Properties""];\n	""33"" [label=""$stack44 = new java.io.FileInputStream""];\n	""34"" [label=""$stack45 = <org.apache.commons.jxpath.JXPathContextFactory: boolean debug>""];\n	""35"" [label=""$stack46 = factory""];\n	""36"" [label=""$stack47 = new java.lang.StringBuilder""];\n	""37"" [label=""$stack48 = <java.lang.System: java.io.PrintStream err>""];\n	""38"" [label=""$stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""JXPath: found java.home property \"")""];\n	""39"" [label=""$stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(factory)""];\n	""40"" [label=""$stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""41"" [label=""$stack52 = <org.apache.commons.jxpath.JXPathContextFactory: boolean debug>""];\n	""42"" [label=""$stack53 = systemProp""];\n	""43"" [label=""$stack54 = new java.lang.StringBuilder""];\n	""44"" [label=""$stack55 = <java.lang.System: java.io.PrintStream err>""];\n	""45"" [label=""$stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""JXPath: found system property\"")""];\n	""46"" [label=""$stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(systemProp)""];\n	""47"" [label=""$stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""48"" [label=""$stack59 := @caughtexception""];\n	""49"" [label=""$stack60 = <org.apache.commons.jxpath.JXPathContextFactory: boolean debug>""];\n	""50"" [label=""$stack61 := @caughtexception""];\n	""51"" [label=""$stack62 := @caughtexception""];\n	""52"" [label=""$stack63 := @caughtexception""];\n	""53"" [label=""$stack64 := @caughtexception""];\n	""54"" [label=""$stack65 = <org.apache.commons.jxpath.JXPathContextFactory: boolean debug>""];\n	""55"" [label=""$stack66 := @caughtexception""];\n	""56"" [label=""$stack67 := @caughtexception""];\n	""57"" [label=""$stack68 := @caughtexception""];\n	""58"" [label=""$stack69 := @caughtexception""];\n	""59"" [label=""configFile = $stack59""];\n	""60"" [label=""configFile = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""61"" [label=""configFile = virtualinvoke $stack25.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()""];\n	""62"" [label=""defaultFactory := @parameter1: java.lang.String""];\n	""63"" [label=""f = $stack20""];\n	""64"" [label=""f = staticinvoke <java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>(systemProp)""];\n	""65"" [label=""f = virtualinvoke configFile.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(systemProp)""];\n	""66"" [label=""factory = $stack63""];\n	""67"" [label=""factory = $stack68""];\n	""68"" [label=""factory = virtualinvoke props.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(property)""];\n	""69"" [label=""fis = $stack44""];\n	""70"" [label=""fis = null""];\n	""71"" [label=""fis = virtualinvoke props.<java.io.BufferedReader: java.lang.String readLine()>()""];\n	""72"" [label=""goto""];\n	""73"" [label=""goto""];\n	""74"" [label=""goto""];\n	""75"" [label=""goto""];\n	""76"" [label=""goto""];\n	""77"" [label=""goto""];\n	""78"" [label=""goto""];\n	""79"" [label=""goto""];\n	""80"" [label=""goto""];\n	""81"" [label=""goto""];\n	""82"" [label=""if $stack21 == 0""];\n	""83"" [label=""if $stack26 == 0""];\n	""84"" [label=""if $stack30 != 0""];\n	""85"" [label=""if $stack31 == 0""];\n	""86"" [label=""if $stack45 == 0""];\n	""87"" [label=""if $stack52 == 0""];\n	""88"" [label=""if $stack60 == 0""];\n	""89"" [label=""if $stack65 == 0""];\n	""90"" [label=""if configFile != null""];\n	""91"" [label=""if f == null""];\n	""92"" [label=""if factory == null""];\n	""93"" [label=""if fis == null""];\n	""94"" [label=""if fis == null""];\n	""95"" [label=""if fis == null""];\n	""96"" [label=""if systemProp == null""];\n	""97"" [label=""l10 = $stack62""];\n	""98"" [label=""l11 = $stack61""];\n	""99"" [label=""l8 = $stack67""];\n	""100"" [label=""l9 = $stack66""];\n	""101"" [label=""property := @parameter0: java.lang.String""];\n	""102"" [label=""props = $stack28""];\n	""103"" [label=""props = $stack43""];\n	""104"" [label=""return $stack32""];\n	""105"" [label=""return $stack46""];\n	""106"" [label=""return $stack53""];\n	""107"" [label=""return defaultFactory""];\n	""108"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()""];\n	""109"" [label=""specialinvoke $stack20.<java.io.File: void <init>(java.lang.String)>(configFile)""];\n	""110"" [label=""specialinvoke $stack22.<java.lang.StringBuilder: void <init>()>()""];\n	""111"" [label=""specialinvoke $stack27.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(f, \""UTF-8\"")""];\n	""112"" [label=""specialinvoke $stack28.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack27)""];\n	""113"" [label=""specialinvoke $stack33.<java.lang.StringBuilder: void <init>()>()""];\n	""114"" [label=""specialinvoke $stack38.<java.lang.StringBuilder: void <init>()>()""];\n	""115"" [label=""specialinvoke $stack43.<java.util.Properties: void <init>()>()""];\n	""116"" [label=""specialinvoke $stack44.<java.io.FileInputStream: void <init>(java.io.File)>(f)""];\n	""117"" [label=""specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>()""];\n	""118"" [label=""specialinvoke $stack54.<java.lang.StringBuilder: void <init>()>()""];\n	""119"" [label=""systemProp = $stack64""];\n	""120"" [label=""systemProp = $stack69""];\n	""121"" [label=""systemProp = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\""java.home\"")""];\n	""122"" [label=""systemProp = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(property)""];\n	""123"" [label=""systemProp = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""124"" [label=""throw l10""];\n	""125"" [label=""throw l8""];\n	""126"" [label=""virtualinvoke $stack34.<java.io.PrintStream: void println(java.lang.String)>($stack37)""];\n	""127"" [label=""virtualinvoke $stack39.<java.io.PrintStream: void println(java.lang.String)>($stack42)""];\n	""128"" [label=""virtualinvoke $stack48.<java.io.PrintStream: void println(java.lang.String)>($stack51)""];\n	""129"" [label=""virtualinvoke $stack55.<java.io.PrintStream: void println(java.lang.String)>($stack58)""];\n	""130"" [label=""virtualinvoke configFile.<java.lang.Exception: void printStackTrace()>()""];\n	""131"" [label=""virtualinvoke fis.<java.io.FileInputStream: void close()>()""];\n	""132"" [label=""virtualinvoke fis.<java.io.FileInputStream: void close()>()""];\n	""133"" [label=""virtualinvoke props.<java.io.BufferedReader: void close()>()""];\n	""134"" [label=""virtualinvoke props.<java.io.BufferedReader: void close()>()""];\n	""135"" [label=""virtualinvoke props.<java.util.Properties: void load(java.io.InputStream)>(fis)""];\n	""136"" [label=""virtualinvoke systemProp.<java.io.IOException: void printStackTrace()>()""];\n	""1"" -> ""108""[label=""cfg_next""];\n	""1"" -> ""53""[label=""cfg_except""];\n	""10"" -> ""53""[label=""cfg_except""];\n	""10"" -> ""82""[label=""cfg_next""];\n	""100"" -> ""125""[label=""cfg_next""];\n	""100"" -> ""53""[label=""cfg_except""];\n	""101"" -> ""62""[label=""cfg_next""];\n	""102"" -> ""48""[label=""cfg_except""];\n	""102"" -> ""70""[label=""cfg_next""];\n	""103"" -> ""33""[label=""cfg_next""];\n	""103"" -> ""53""[label=""cfg_except""];\n	""108"" -> ""3""[label=""cfg_next""];\n	""108"" -> ""53""[label=""cfg_except""];\n	""109"" -> ""53""[label=""cfg_except""];\n	""109"" -> ""63""[label=""cfg_next""];\n	""11"" -> ""110""[label=""cfg_next""];\n	""110"" -> ""12""[label=""cfg_next""];\n	""111"" -> ""112""[label=""cfg_next""];\n	""111"" -> ""48""[label=""cfg_except""];\n	""112"" -> ""102""[label=""cfg_next""];\n	""112"" -> ""48""[label=""cfg_except""];\n	""113"" -> ""24""[label=""cfg_next""];\n	""113"" -> ""48""[label=""cfg_except""];\n	""114"" -> ""29""[label=""cfg_next""];\n	""114"" -> ""48""[label=""cfg_except""];\n	""115"" -> ""103""[label=""cfg_next""];\n	""115"" -> ""53""[label=""cfg_except""];\n	""116"" -> ""53""[label=""cfg_except""];\n	""116"" -> ""69""[label=""cfg_next""];\n	""117"" -> ""38""[label=""cfg_next""];\n	""117"" -> ""53""[label=""cfg_except""];\n	""118"" -> ""45""[label=""cfg_next""];\n	""118"" -> ""58""[label=""cfg_except""];\n	""119"" -> ""54""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""120"" -> ""121""[label=""cfg_next""];\n	""121"" -> ""1""[label=""cfg_next""];\n	""121"" -> ""53""[label=""cfg_except""];\n	""122"" -> ""58""[label=""cfg_except""];\n	""122"" -> ""96""[label=""cfg_next""];\n	""123"" -> ""14""[label=""cfg_next""];\n	""124"" -> ""48""[label=""cfg_except""];\n	""125"" -> ""53""[label=""cfg_except""];\n	""126"" -> ""21""[label=""cfg_next""];\n	""126"" -> ""48""[label=""cfg_except""];\n	""127"" -> ""17""[label=""cfg_next""];\n	""127"" -> ""48""[label=""cfg_except""];\n	""128"" -> ""35""[label=""cfg_next""];\n	""128"" -> ""53""[label=""cfg_except""];\n	""129"" -> ""42""[label=""cfg_next""];\n	""129"" -> ""58""[label=""cfg_except""];\n	""13"" -> ""123""[label=""cfg_next""];\n	""130"" -> ""107""[label=""cfg_next""];\n	""131"" -> ""57""[label=""cfg_except""];\n	""131"" -> ""74""[label=""cfg_next""];\n	""132"" -> ""55""[label=""cfg_except""];\n	""132"" -> ""81""[label=""cfg_next""];\n	""133"" -> ""48""[label=""cfg_except""];\n	""133"" -> ""52""[label=""cfg_except""];\n	""133"" -> ""77""[label=""cfg_next""];\n	""134"" -> ""48""[label=""cfg_except""];\n	""134"" -> ""50""[label=""cfg_except""];\n	""134"" -> ""79""[label=""cfg_next""];\n	""135"" -> ""53""[label=""cfg_except""];\n	""135"" -> ""56""[label=""cfg_except""];\n	""135"" -> ""93""[label=""cfg_next""];\n	""136"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""48""[label=""cfg_except""];\n	""14"" -> ""61""[label=""cfg_next""];\n	""15"" -> ""48""[label=""cfg_except""];\n	""15"" -> ""83""[label=""cfg_next""];\n	""16"" -> ""111""[label=""cfg_next""];\n	""16"" -> ""48""[label=""cfg_except""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""17"" -> ""48""[label=""cfg_except""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""48""[label=""cfg_except""];\n	""19"" -> ""48""[label=""cfg_except""];\n	""19"" -> ""84""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""53""[label=""cfg_except""];\n	""20"" -> ""48""[label=""cfg_except""];\n	""20"" -> ""85""[label=""cfg_next""];\n	""21"" -> ""104""[label=""cfg_next""];\n	""21"" -> ""48""[label=""cfg_except""];\n	""22"" -> ""113""[label=""cfg_next""];\n	""22"" -> ""48""[label=""cfg_except""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""23"" -> ""48""[label=""cfg_except""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""24"" -> ""48""[label=""cfg_except""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""48""[label=""cfg_except""];\n	""26"" -> ""126""[label=""cfg_next""];\n	""26"" -> ""48""[label=""cfg_except""];\n	""27"" -> ""114""[label=""cfg_next""];\n	""27"" -> ""48""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""28"" -> ""48""[label=""cfg_except""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""29"" -> ""48""[label=""cfg_except""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""53""[label=""cfg_except""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""30"" -> ""48""[label=""cfg_except""];\n	""31"" -> ""127""[label=""cfg_next""];\n	""31"" -> ""48""[label=""cfg_except""];\n	""32"" -> ""115""[label=""cfg_next""];\n	""32"" -> ""53""[label=""cfg_except""];\n	""33"" -> ""116""[label=""cfg_next""];\n	""33"" -> ""53""[label=""cfg_except""];\n	""34"" -> ""53""[label=""cfg_except""];\n	""34"" -> ""86""[label=""cfg_next""];\n	""35"" -> ""105""[label=""cfg_next""];\n	""35"" -> ""53""[label=""cfg_except""];\n	""36"" -> ""117""[label=""cfg_next""];\n	""36"" -> ""53""[label=""cfg_except""];\n	""37"" -> ""36""[label=""cfg_next""];\n	""37"" -> ""53""[label=""cfg_except""];\n	""38"" -> ""39""[label=""cfg_next""];\n	""38"" -> ""53""[label=""cfg_except""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""39"" -> ""53""[label=""cfg_except""];\n	""4"" -> ""53""[label=""cfg_except""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""40"" -> ""128""[label=""cfg_next""];\n	""40"" -> ""53""[label=""cfg_except""];\n	""41"" -> ""58""[label=""cfg_except""];\n	""41"" -> ""87""[label=""cfg_next""];\n	""42"" -> ""106""[label=""cfg_next""];\n	""42"" -> ""58""[label=""cfg_except""];\n	""43"" -> ""118""[label=""cfg_next""];\n	""43"" -> ""58""[label=""cfg_except""];\n	""44"" -> ""43""[label=""cfg_next""];\n	""44"" -> ""58""[label=""cfg_except""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""45"" -> ""58""[label=""cfg_except""];\n	""46"" -> ""47""[label=""cfg_next""];\n	""46"" -> ""58""[label=""cfg_except""];\n	""47"" -> ""129""[label=""cfg_next""];\n	""47"" -> ""58""[label=""cfg_except""];\n	""48"" -> ""59""[label=""cfg_next""];\n	""49"" -> ""88""[label=""cfg_next""];\n	""5"" -> ""53""[label=""cfg_except""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""50"" -> ""48""[label=""cfg_except""];\n	""50"" -> ""98""[label=""cfg_next""];\n	""51"" -> ""48""[label=""cfg_except""];\n	""51"" -> ""51""[label=""cfg_except""];\n	""51"" -> ""97""[label=""cfg_next""];\n	""52"" -> ""48""[label=""cfg_except""];\n	""52"" -> ""66""[label=""cfg_next""];\n	""53"" -> ""119""[label=""cfg_next""];\n	""54"" -> ""89""[label=""cfg_next""];\n	""55"" -> ""100""[label=""cfg_next""];\n	""55"" -> ""53""[label=""cfg_except""];\n	""56"" -> ""53""[label=""cfg_except""];\n	""56"" -> ""56""[label=""cfg_except""];\n	""56"" -> ""99""[label=""cfg_next""];\n	""57"" -> ""53""[label=""cfg_except""];\n	""57"" -> ""67""[label=""cfg_next""];\n	""58"" -> ""120""[label=""cfg_next""];\n	""59"" -> ""49""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""53""[label=""cfg_except""];\n	""60"" -> ""53""[label=""cfg_except""];\n	""60"" -> ""9""[label=""cfg_next""];\n	""61"" -> ""48""[label=""cfg_except""];\n	""61"" -> ""90""[label=""cfg_next""];\n	""62"" -> ""122""[label=""cfg_next""];\n	""63"" -> ""10""[label=""cfg_next""];\n	""63"" -> ""53""[label=""cfg_except""];\n	""64"" -> ""48""[label=""cfg_except""];\n	""64"" -> ""75""[label=""cfg_next""];\n	""65"" -> ""48""[label=""cfg_except""];\n	""65"" -> ""91""[label=""cfg_next""];\n	""66"" -> ""48""[label=""cfg_except""];\n	""66"" -> ""78""[label=""cfg_next""];\n	""67"" -> ""53""[label=""cfg_except""];\n	""67"" -> ""80""[label=""cfg_next""];\n	""68"" -> ""53""[label=""cfg_except""];\n	""68"" -> ""92""[label=""cfg_next""];\n	""69"" -> ""135""[label=""cfg_next""];\n	""69"" -> ""53""[label=""cfg_except""];\n	""7"" -> ""53""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""48""[label=""cfg_except""];\n	""70"" -> ""71""[label=""cfg_next""];\n	""71"" -> ""133""[label=""cfg_next""];\n	""71"" -> ""48""[label=""cfg_except""];\n	""71"" -> ""51""[label=""cfg_except""];\n	""72"" -> ""121""[label=""cfg_goto""];\n	""73"" -> ""11""[label=""cfg_goto""];\n	""74"" -> ""53""[label=""cfg_except""];\n	""74"" -> ""68""[label=""cfg_goto""];\n	""75"" -> ""48""[label=""cfg_except""];\n	""75"" -> ""91""[label=""cfg_goto""];\n	""76"" -> ""107""[label=""cfg_goto""];\n	""77"" -> ""48""[label=""cfg_except""];\n	""77"" -> ""94""[label=""cfg_goto""];\n	""78"" -> ""48""[label=""cfg_except""];\n	""78"" -> ""94""[label=""cfg_goto""];\n	""79"" -> ""124""[label=""cfg_goto""];\n	""79"" -> ""48""[label=""cfg_except""];\n	""8"" -> ""53""[label=""cfg_except""];\n	""8"" -> ""60""[label=""cfg_next""];\n	""80"" -> ""53""[label=""cfg_except""];\n	""80"" -> ""68""[label=""cfg_goto""];\n	""81"" -> ""125""[label=""cfg_goto""];\n	""81"" -> ""53""[label=""cfg_except""];\n	""82"" -> ""32""[label=""cfg_false""];\n	""82"" -> ""53""[label=""cfg_except""];\n	""82"" -> ""73""[label=""cfg_true""];\n	""83"" -> ""17""[label=""cfg_true""];\n	""83"" -> ""28""[label=""cfg_false""];\n	""83"" -> ""48""[label=""cfg_except""];\n	""84"" -> ""20""[label=""cfg_false""];\n	""84"" -> ""48""[label=""cfg_except""];\n	""84"" -> ""76""[label=""cfg_true""];\n	""85"" -> ""21""[label=""cfg_true""];\n	""85"" -> ""23""[label=""cfg_false""];\n	""85"" -> ""48""[label=""cfg_except""];\n	""86"" -> ""35""[label=""cfg_true""];\n	""86"" -> ""37""[label=""cfg_false""];\n	""86"" -> ""53""[label=""cfg_except""];\n	""87"" -> ""42""[label=""cfg_true""];\n	""87"" -> ""44""[label=""cfg_false""];\n	""87"" -> ""58""[label=""cfg_except""];\n	""88"" -> ""107""[label=""cfg_true""];\n	""88"" -> ""130""[label=""cfg_false""];\n	""89"" -> ""11""[label=""cfg_true""];\n	""89"" -> ""136""[label=""cfg_false""];\n	""9"" -> ""109""[label=""cfg_next""];\n	""9"" -> ""53""[label=""cfg_except""];\n	""90"" -> ""48""[label=""cfg_except""];\n	""90"" -> ""64""[label=""cfg_false""];\n	""90"" -> ""65""[label=""cfg_true""];\n	""91"" -> ""15""[label=""cfg_false""];\n	""91"" -> ""48""[label=""cfg_except""];\n	""91"" -> ""76""[label=""cfg_true""];\n	""92"" -> ""34""[label=""cfg_false""];\n	""92"" -> ""53""[label=""cfg_except""];\n	""92"" -> ""73""[label=""cfg_true""];\n	""93"" -> ""131""[label=""cfg_false""];\n	""93"" -> ""53""[label=""cfg_except""];\n	""93"" -> ""68""[label=""cfg_true""];\n	""94"" -> ""18""[label=""cfg_false""];\n	""94"" -> ""48""[label=""cfg_except""];\n	""94"" -> ""76""[label=""cfg_true""];\n	""95"" -> ""125""[label=""cfg_true""];\n	""95"" -> ""132""[label=""cfg_false""];\n	""95"" -> ""53""[label=""cfg_except""];\n	""96"" -> ""41""[label=""cfg_false""];\n	""96"" -> ""58""[label=""cfg_except""];\n	""96"" -> ""72""[label=""cfg_true""];\n	""97"" -> ""134""[label=""cfg_next""];\n	""97"" -> ""48""[label=""cfg_except""];\n	""97"" -> ""51""[label=""cfg_except""];\n	""98"" -> ""124""[label=""cfg_next""];\n	""98"" -> ""48""[label=""cfg_except""];\n	""99"" -> ""53""[label=""cfg_except""];\n	""99"" -> ""56""[label=""cfg_except""];\n	""99"" -> ""95""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.JXPathContextFactory.<init>(),Constructor,* Create a new JXPathContextFactory.,protected JXPathContextFactory() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.JXPathContextFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",protected 
org.apache.commons.jxpath.BasicNodeSet.add(Pointer),Method,* Add a pointer to this NodeSet.\n     * @param pointer to add,public void add(final Pointer pointer) {\n    if (pointers.add(pointer)) {\n        clearCacheLists();\n    }\n},void add(org.apache.commons.jxpath.Pointer),"digraph cfg_add {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(pointer)""];\n	""3"" [label=""if $stack3 == 0""];\n	""4"" [label=""pointer := @parameter0: org.apache.commons.jxpath.Pointer""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.BasicNodeSet: void clearCacheLists()>()""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.BasicNodeSet.add(NodeSet),Method,* Add the specified NodeSet to this NodeSet.\n     * @param nodeSet to add,public void add(final NodeSet nodeSet) {\n    if (pointers.addAll(nodeSet.getPointers())) {\n        clearCacheLists();\n    }\n},void add(org.apache.commons.jxpath.NodeSet),"digraph cfg_add {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""2"" [label=""$stack3 = interfaceinvoke nodeSet.<org.apache.commons.jxpath.NodeSet: java.util.List getPointers()>()""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack2.<java.util.List: boolean addAll(java.util.Collection)>($stack3)""];\n	""4"" [label=""if $stack4 == 0""];\n	""5"" [label=""nodeSet := @parameter0: org.apache.commons.jxpath.NodeSet""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<org.apache.commons.jxpath.BasicNodeSet: void clearCacheLists()>()""];\n	""8"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_true""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.BasicNodeSet.remove(Pointer),Method,* Remove a pointer from this NodeSet.\n     * @param pointer to remove,public void remove(final Pointer pointer) {\n    if (pointers.remove(pointer)) {\n        clearCacheLists();\n    }\n},void remove(org.apache.commons.jxpath.Pointer),"digraph cfg_remove {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(pointer)""];\n	""3"" [label=""if $stack3 == 0""];\n	""4"" [label=""pointer := @parameter0: org.apache.commons.jxpath.Pointer""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<org.apache.commons.jxpath.BasicNodeSet: void clearCacheLists()>()""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""3"" -> ""6""[label=""cfg_false""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.BasicNodeSet.getPointers(),Method,No Comment,@Override\npublic synchronized List getPointers() {\n    if (readOnlyPointers == null) {\n        readOnlyPointers = Collections.unmodifiableList(pointers);\n    }\n    return readOnlyPointers;\n},java.util.List getPointers(),"digraph cfg_getPointers {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List readOnlyPointers>""];\n	""2"" [label=""$stack2 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List readOnlyPointers>""];\n	""3"" [label=""$stack3 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""4"" [label=""$stack4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack3)""];\n	""5"" [label=""if $stack1 != null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""8"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List readOnlyPointers> = $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.BasicNodeSet.getNodes(),Method,No Comment,@Override\npublic synchronized List getNodes() {\n    if (nodes == null) {\n        nodes = new ArrayList();\n        for (int i = 0; i < pointers.size(); i++) {\n            final Pointer pointer = (Pointer) pointers.get(i);\n            nodes.add(pointer.getNode());\n        }\n        nodes = Collections.unmodifiableList(nodes);\n    }\n    return nodes;\n},java.util.List getNodes(),"digraph cfg_getNodes {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""2"" [label=""$stack11 = interfaceinvoke $stack10.<java.util.List: java.lang.Object get(int)>(i)""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List nodes>""];\n	""4"" [label=""$stack13 = interfaceinvoke pointer.<org.apache.commons.jxpath.Pointer: java.lang.Object getNode()>()""];\n	""5"" [label=""$stack3 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List nodes>""];\n	""6"" [label=""$stack4 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List nodes>""];\n	""7"" [label=""$stack5 = new java.util.ArrayList""];\n	""8"" [label=""$stack6 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""9"" [label=""$stack7 = interfaceinvoke $stack6.<java.util.List: int size()>()""];\n	""10"" [label=""$stack8 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List nodes>""];\n	""11"" [label=""$stack9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack8)""];\n	""12"" [label=""goto""];\n	""13"" [label=""i = 0""];\n	""14"" [label=""i = i + 1""];\n	""15"" [label=""if $stack3 != null""];\n	""16"" [label=""if i >= $stack7""];\n	""17"" [label=""interfaceinvoke $stack12.<java.util.List: boolean add(java.lang.Object)>($stack13)""];\n	""18"" [label=""pointer = (org.apache.commons.jxpath.Pointer) $stack11""];\n	""19"" [label=""return $stack4""];\n	""20"" [label=""specialinvoke $stack5.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""22"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List nodes> = $stack5""];\n	""23"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List nodes> = $stack9""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_goto""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_true""];\n	""15"" -> ""7""[label=""cfg_false""];\n	""16"" -> ""1""[label=""cfg_false""];\n	""16"" -> ""10""[label=""cfg_true""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""5""[label=""cfg_next""];\n	""22"" -> ""13""[label=""cfg_next""];\n	""23"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.BasicNodeSet.getValues(),Method,No Comment,@Override\npublic synchronized List getValues() {\n    if (values == null) {\n        values = new ArrayList();\n        for (int i = 0; i < pointers.size(); i++) {\n            final Pointer pointer = (Pointer) pointers.get(i);\n            values.add(pointer.getValue());\n        }\n        values = Collections.unmodifiableList(values);\n    }\n    return values;\n},java.util.List getValues(),"digraph cfg_getValues {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""2"" [label=""$stack11 = interfaceinvoke $stack10.<java.util.List: java.lang.Object get(int)>(i)""];\n	""3"" [label=""$stack12 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List values>""];\n	""4"" [label=""$stack13 = interfaceinvoke pointer.<org.apache.commons.jxpath.Pointer: java.lang.Object getValue()>()""];\n	""5"" [label=""$stack3 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List values>""];\n	""6"" [label=""$stack4 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List values>""];\n	""7"" [label=""$stack5 = new java.util.ArrayList""];\n	""8"" [label=""$stack6 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""9"" [label=""$stack7 = interfaceinvoke $stack6.<java.util.List: int size()>()""];\n	""10"" [label=""$stack8 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List values>""];\n	""11"" [label=""$stack9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack8)""];\n	""12"" [label=""goto""];\n	""13"" [label=""i = 0""];\n	""14"" [label=""i = i + 1""];\n	""15"" [label=""if $stack3 != null""];\n	""16"" [label=""if i >= $stack7""];\n	""17"" [label=""interfaceinvoke $stack12.<java.util.List: boolean add(java.lang.Object)>($stack13)""];\n	""18"" [label=""pointer = (org.apache.commons.jxpath.Pointer) $stack11""];\n	""19"" [label=""return $stack4""];\n	""20"" [label=""specialinvoke $stack5.<java.util.ArrayList: void <init>()>()""];\n	""21"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""22"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List values> = $stack5""];\n	""23"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List values> = $stack9""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""23""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_goto""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_true""];\n	""15"" -> ""7""[label=""cfg_false""];\n	""16"" -> ""1""[label=""cfg_false""];\n	""16"" -> ""10""[label=""cfg_true""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""5""[label=""cfg_next""];\n	""22"" -> ""13""[label=""cfg_next""];\n	""23"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n","public , synchronized "
org.apache.commons.jxpath.BasicNodeSet.toString(),Method,No Comment,@Override\npublic String toString() {\n    return pointers.toString();\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List pointers>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.lang.Object: java.lang.String toString()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.BasicNodeSet.clearCacheLists(),Method,* Clear cache list members.,private synchronized void clearCacheLists() {\n    readOnlyPointers = null;\n    nodes = null;\n    values = null;\n},void clearCacheLists(),"digraph cfg_clearCacheLists {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: org.apache.commons.jxpath.BasicNodeSet""];\n	""3"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List nodes> = null""];\n	""4"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List readOnlyPointers> = null""];\n	""5"" [label=""this.<org.apache.commons.jxpath.BasicNodeSet: java.util.List values> = null""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n","private , synchronized "
"org.apache.commons.jxpath.Function.invoke(ExpressionContext,Object[])",Abstract Method,* Computes the value of the function. Each implementation of Function\n     * is responsible for conversion of supplied parameters to the required\n     * argument types.\n     *\n     * @param context can be used to acquire the context in which the\n     *    function is being evaluted.\n     * @param parameters function arguments\n     * @return Object result,"Object invoke(ExpressionContext context, Object[] parameters);","java.lang.Object invoke(org.apache.commons.jxpath.ExpressionContext,java.lang.Object[])",digraph cfg_invoke {\n}\n,default
org.apache.commons.jxpath.JXPathIntrospector.registerAtomicClass(Class),Method,* Automatically creates and registers a JXPathBeanInfo object\n     * for the specified class. That object returns true to isAtomic().\n     * @param beanClass to register,"public static void registerAtomicClass(final Class beanClass) {\n    synchronized (byClass) {\n        byClass.put(beanClass, new JXPathBasicBeanInfo(beanClass, true));\n    }\n}",void registerAtomicClass(java.lang.Class),"digraph cfg_registerAtomicClass {\n	""1"" [label=""$stack3 = new org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""2"" [label=""$stack4 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""3"" [label=""$stack5 := @caughtexception""];\n	""4"" [label=""beanClass := @parameter0: java.lang.Class""];\n	""5"" [label=""entermonitor l1""];\n	""6"" [label=""exitmonitor l1""];\n	""7"" [label=""exitmonitor l1""];\n	""8"" [label=""goto""];\n	""9"" [label=""interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(beanClass, $stack3)""];\n	""10"" [label=""l1 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""11"" [label=""l2 = $stack5""];\n	""12"" [label=""return""];\n	""13"" [label=""specialinvoke $stack3.<org.apache.commons.jxpath.JXPathBasicBeanInfo: void <init>(java.lang.Class,boolean)>(beanClass, 1)""];\n	""14"" [label=""throw l2""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""1"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_except""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""12""[label=""cfg_goto""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n","public , static "
"org.apache.commons.jxpath.JXPathIntrospector.registerDynamicClass(Class,Class)",Method,* Automatically creates and registers a {@link JXPathBeanInfo} object\n     * for the specified class. That object returns true to\n     * {@link JXPathBeanInfo#isDynamic()}.\n     *\n     * @param beanClass to register\n     * @param dynamicPropertyHandlerClass to handle beanClass,"public static void registerDynamicClass(final Class beanClass, final Class dynamicPropertyHandlerClass) {\n    final JXPathBasicBeanInfo bi = new JXPathBasicBeanInfo(beanClass, dynamicPropertyHandlerClass);\n    if (beanClass.isInterface()) {\n        synchronized (byInterface) {\n            byInterface.put(beanClass, bi);\n        }\n    } else {\n        synchronized (byClass) {\n            byClass.put(beanClass, bi);\n        }\n    }\n}","void registerDynamicClass(java.lang.Class,java.lang.Class)","digraph cfg_registerDynamicClass {\n	""1"" [label=""$stack10 := @caughtexception""];\n	""2"" [label=""$stack11 := @caughtexception""];\n	""3"" [label=""$stack6 = new org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""4"" [label=""$stack7 = virtualinvoke beanClass.<java.lang.Class: boolean isInterface()>()""];\n	""5"" [label=""$stack8 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""6"" [label=""$stack9 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byInterface>""];\n	""7"" [label=""beanClass := @parameter0: java.lang.Class""];\n	""8"" [label=""bi = $stack6""];\n	""9"" [label=""dynamicPropertyHandlerClass := @parameter1: java.lang.Class""];\n	""10"" [label=""entermonitor l3""];\n	""11"" [label=""entermonitor l3""];\n	""12"" [label=""exitmonitor l3""];\n	""13"" [label=""exitmonitor l3""];\n	""14"" [label=""exitmonitor l3""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack7 == 0""];\n	""19"" [label=""interfaceinvoke $stack8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(beanClass, bi)""];\n	""20"" [label=""interfaceinvoke $stack9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(beanClass, bi)""];\n	""21"" [label=""l3 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""22"" [label=""l3 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byInterface>""];\n	""23"" [label=""l4 = $stack11""];\n	""24"" [label=""l5 = $stack10""];\n	""25"" [label=""return""];\n	""26"" [label=""specialinvoke $stack6.<org.apache.commons.jxpath.JXPathBasicBeanInfo: void <init>(java.lang.Class,java.lang.Class)>(beanClass, dynamicPropertyHandlerClass)""];\n	""27"" [label=""throw l4""];\n	""28"" [label=""throw l5""];\n	""1"" -> ""1""[label=""cfg_except""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""1""[label=""cfg_except""];\n	""13"" -> ""2""[label=""cfg_except""];\n	""13"" -> ""27""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_except""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_goto""];\n	""16"" -> ""25""[label=""cfg_goto""];\n	""17"" -> ""25""[label=""cfg_goto""];\n	""18"" -> ""21""[label=""cfg_true""];\n	""18"" -> ""22""[label=""cfg_false""];\n	""19"" -> ""1""[label=""cfg_except""];\n	""19"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""2""[label=""cfg_except""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_except""];\n	""21"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_next""];\n	""23"" -> ""2""[label=""cfg_except""];\n	""24"" -> ""1""[label=""cfg_except""];\n	""24"" -> ""13""[label=""cfg_next""];\n	""26"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_except""];\n	""5"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_except""];\n	""6"" -> ""20""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.JXPathIntrospector.getBeanInfo(Class),Method,"* Creates and registers a JXPathBeanInfo object for the supplied class. If\n     * the class has already been registered, returns the registered\n     * JXPathBeanInfo object.\n     * <p>\n     * The process of creation of JXPathBeanInfo is as follows:\n     * <ul>\n     * <li>If class named {@code <beanClass>XBeanInfo} exists,\n     *     an instance of that class is allocated.\n     * <li>Otherwise, an instance of {@link JXPathBasicBeanInfo\n     *     JXPathBasicBeanInfo}  is allocated.\n     * </ul>\n     * @param beanClass whose info to get\n     * @return JXPathBeanInfo","public static JXPathBeanInfo getBeanInfo(final Class beanClass) {\n    JXPathBeanInfo beanInfo = (JXPathBeanInfo) byClass.get(beanClass);\n    if (beanInfo == null) {\n        beanInfo = findDynamicBeanInfo(beanClass);\n        if (beanInfo == null) {\n            beanInfo = findInformant(beanClass);\n            if (beanInfo == null) {\n                beanInfo = new JXPathBasicBeanInfo(beanClass);\n            }\n        }\n        synchronized (byClass) {\n            byClass.put(beanClass, beanInfo);\n        }\n    }\n    return beanInfo;\n}",org.apache.commons.jxpath.JXPathBeanInfo getBeanInfo(java.lang.Class),"digraph cfg_getBeanInfo {\n	""1"" [label=""$stack4 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""2"" [label=""$stack5 = interfaceinvoke $stack4.<java.util.Map: java.lang.Object get(java.lang.Object)>(beanClass)""];\n	""3"" [label=""$stack6 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""4"" [label=""$stack7 = new org.apache.commons.jxpath.JXPathBasicBeanInfo""];\n	""5"" [label=""$stack8 := @caughtexception""];\n	""6"" [label=""beanClass := @parameter0: java.lang.Class""];\n	""7"" [label=""beanInfo = $stack7""];\n	""8"" [label=""beanInfo = (org.apache.commons.jxpath.JXPathBeanInfo) $stack5""];\n	""9"" [label=""beanInfo = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo findDynamicBeanInfo(java.lang.Class)>(beanClass)""];\n	""10"" [label=""beanInfo = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo findInformant(java.lang.Class)>(beanClass)""];\n	""11"" [label=""entermonitor l2""];\n	""12"" [label=""exitmonitor l2""];\n	""13"" [label=""exitmonitor l2""];\n	""14"" [label=""goto""];\n	""15"" [label=""if beanInfo != null""];\n	""16"" [label=""if beanInfo != null""];\n	""17"" [label=""if beanInfo != null""];\n	""18"" [label=""interfaceinvoke $stack6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(beanClass, beanInfo)""];\n	""19"" [label=""l2 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""20"" [label=""l3 = $stack8""];\n	""21"" [label=""return beanInfo""];\n	""22"" [label=""specialinvoke $stack7.<org.apache.commons.jxpath.JXPathBasicBeanInfo: void <init>(java.lang.Class)>(beanClass)""];\n	""23"" [label=""throw l3""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_except""];\n	""13"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_except""];\n	""14"" -> ""21""[label=""cfg_goto""];\n	""15"" -> ""21""[label=""cfg_true""];\n	""15"" -> ""9""[label=""cfg_false""];\n	""16"" -> ""10""[label=""cfg_false""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""17"" -> ""19""[label=""cfg_true""];\n	""17"" -> ""4""[label=""cfg_false""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""5""[label=""cfg_except""];\n	""19"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_except""];\n	""22"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_except""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""5""[label=""cfg_except""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n","public , static "
org.apache.commons.jxpath.JXPathIntrospector.findDynamicBeanInfo(Class),Method,* Find a dynamic bean info if available for any superclasses or\n     * interfaces.\n     * @param beanClass to search for\n     * @return JXPathBeanInfo,private static JXPathBeanInfo findDynamicBeanInfo(final Class beanClass) {\n    JXPathBeanInfo beanInfo;\n    if (beanClass.isInterface()) {\n        beanInfo = (JXPathBeanInfo) byInterface.get(beanClass);\n        if (beanInfo != null && beanInfo.isDynamic()) {\n            return beanInfo;\n        }\n    }\n    final Class[] interfaces = beanClass.getInterfaces();\n    if (interfaces != null) {\n        for (final Class element : interfaces) {\n            beanInfo = findDynamicBeanInfo(element);\n            if (beanInfo != null && beanInfo.isDynamic()) {\n                return beanInfo;\n            }\n        }\n    }\n    final Class sup = beanClass.getSuperclass();\n    if (sup != null) {\n        beanInfo = (JXPathBeanInfo) byClass.get(sup);\n        if (beanInfo != null && beanInfo.isDynamic()) {\n            return beanInfo;\n        }\n        return findDynamicBeanInfo(sup);\n    }\n    return null;\n},org.apache.commons.jxpath.JXPathBeanInfo findDynamicBeanInfo(java.lang.Class),"digraph cfg_findDynamicBeanInfo {\n	""1"" [label=""$stack10 = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo findDynamicBeanInfo(java.lang.Class)>(sup)""];\n	""2"" [label=""$stack11 = interfaceinvoke beanInfo.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isDynamic()>()""];\n	""3"" [label=""$stack12 = interfaceinvoke beanInfo.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isDynamic()>()""];\n	""4"" [label=""$stack13 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byInterface>""];\n	""5"" [label=""$stack14 = interfaceinvoke $stack13.<java.util.Map: java.lang.Object get(java.lang.Object)>(beanClass)""];\n	""6"" [label=""$stack15 = interfaceinvoke beanInfo.<org.apache.commons.jxpath.JXPathBeanInfo: boolean isDynamic()>()""];\n	""7"" [label=""$stack7 = virtualinvoke beanClass.<java.lang.Class: boolean isInterface()>()""];\n	""8"" [label=""$stack8 = <org.apache.commons.jxpath.JXPathIntrospector: java.util.Map byClass>""];\n	""9"" [label=""$stack9 = interfaceinvoke $stack8.<java.util.Map: java.lang.Object get(java.lang.Object)>(sup)""];\n	""10"" [label=""beanClass := @parameter0: java.lang.Class""];\n	""11"" [label=""beanInfo = (org.apache.commons.jxpath.JXPathBeanInfo) $stack14""];\n	""12"" [label=""beanInfo = (org.apache.commons.jxpath.JXPathBeanInfo) $stack9""];\n	""13"" [label=""beanInfo = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: org.apache.commons.jxpath.JXPathBeanInfo findDynamicBeanInfo(java.lang.Class)>(element)""];\n	""14"" [label=""element = sup[l5]""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack11 == 0""];\n	""17"" [label=""if $stack12 == 0""];\n	""18"" [label=""if $stack15 == 0""];\n	""19"" [label=""if $stack7 == 0""];\n	""20"" [label=""if beanInfo == null""];\n	""21"" [label=""if beanInfo == null""];\n	""22"" [label=""if beanInfo == null""];\n	""23"" [label=""if interfaces == null""];\n	""24"" [label=""if l5 >= l4""];\n	""25"" [label=""if sup == null""];\n	""26"" [label=""interfaces = virtualinvoke beanClass.<java.lang.Class: java.lang.Class[] getInterfaces()>()""];\n	""27"" [label=""l4 = lengthof sup""];\n	""28"" [label=""l5 = 0""];\n	""29"" [label=""l5 = l5 + 1""];\n	""30"" [label=""return $stack10""];\n	""31"" [label=""return beanInfo""];\n	""32"" [label=""return beanInfo""];\n	""33"" [label=""return beanInfo""];\n	""34"" [label=""return null""];\n	""35"" [label=""sup = interfaces""];\n	""36"" [label=""sup = virtualinvoke beanClass.<java.lang.Class: java.lang.Class getSuperclass()>()""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""21""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_goto""];\n	""16"" -> ""1""[label=""cfg_true""];\n	""16"" -> ""33""[label=""cfg_false""];\n	""17"" -> ""29""[label=""cfg_true""];\n	""17"" -> ""32""[label=""cfg_false""];\n	""18"" -> ""26""[label=""cfg_true""];\n	""18"" -> ""31""[label=""cfg_false""];\n	""19"" -> ""26""[label=""cfg_true""];\n	""19"" -> ""4""[label=""cfg_false""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""26""[label=""cfg_true""];\n	""20"" -> ""6""[label=""cfg_false""];\n	""21"" -> ""29""[label=""cfg_true""];\n	""21"" -> ""3""[label=""cfg_false""];\n	""22"" -> ""1""[label=""cfg_true""];\n	""22"" -> ""2""[label=""cfg_false""];\n	""23"" -> ""35""[label=""cfg_false""];\n	""23"" -> ""36""[label=""cfg_true""];\n	""24"" -> ""14""[label=""cfg_false""];\n	""24"" -> ""36""[label=""cfg_true""];\n	""25"" -> ""34""[label=""cfg_true""];\n	""25"" -> ""8""[label=""cfg_false""];\n	""26"" -> ""23""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""24""[label=""cfg_next""];\n	""29"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""35"" -> ""27""[label=""cfg_next""];\n	""36"" -> ""25""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.JXPathIntrospector.findInformant(Class),Method,"* find a JXPathBeanInfo instance for the specified class.\n     * Similar to javax.beans property handler discovery; search for a\n     * class with ""XBeanInfo"" appended to beanClass.name, then check\n     * whether beanClass implements JXPathBeanInfo for itself.\n     * Invokes the default constructor for any class it finds.\n     * @param beanClass for which to look for an info provider\n     * @return JXPathBeanInfo instance or null if none found","private static synchronized JXPathBeanInfo findInformant(final Class beanClass) {\n    final String name = beanClass.getName() + ""XBeanInfo"";\n    try {\n        return (JXPathBeanInfo) instantiate(beanClass, name);\n    } catch (final Exception ignore) {\n        // NOPMD\n        // Just drop through\n    }\n    // Now try checking if the bean is its own JXPathBeanInfo.\n    try {\n        if (JXPathBeanInfo.class.isAssignableFrom(beanClass)) {\n            return (JXPathBeanInfo) beanClass.getConstructor().newInstance();\n        }\n    } catch (final Exception ignore) {\n        // NOPMD\n        // Just drop through\n    }\n    return null;\n}",org.apache.commons.jxpath.JXPathBeanInfo findInformant(java.lang.Class),"digraph cfg_findInformant {\n	""1"" [label=""$stack10 := @caughtexception""];\n	""2"" [label=""$stack11 = class \""Lorg/apache/commons/jxpath/JXPathBeanInfo;\""""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(beanClass)""];\n	""4"" [label=""$stack13 = newarray (java.lang.Class)[0]""];\n	""5"" [label=""$stack14 = newarray (java.lang.Object)[0]""];\n	""6"" [label=""$stack15 = virtualinvoke beanClass.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack13)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack14)""];\n	""8"" [label=""$stack17 = (org.apache.commons.jxpath.JXPathBeanInfo) $stack16""];\n	""9"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack4 = virtualinvoke beanClass.<java.lang.Class: java.lang.String getName()>()""];\n	""11"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""12"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""XBeanInfo\"")""];\n	""13"" [label=""$stack7 = staticinvoke <org.apache.commons.jxpath.JXPathIntrospector: java.lang.Object instantiate(java.lang.Class,java.lang.String)>(beanClass, name)""];\n	""14"" [label=""$stack8 = (org.apache.commons.jxpath.JXPathBeanInfo) $stack7""];\n	""15"" [label=""$stack9 := @caughtexception""];\n	""16"" [label=""beanClass := @parameter0: java.lang.Class""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack12 == 0""];\n	""19"" [label=""l2 = $stack10""];\n	""20"" [label=""l2 = $stack9""];\n	""21"" [label=""name = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""22"" [label=""return $stack17""];\n	""23"" [label=""return $stack8""];\n	""24"" [label=""return null""];\n	""25"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""21""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_except""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_except""];\n	""14"" -> ""23""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""17"" -> ""24""[label=""cfg_goto""];\n	""18"" -> ""15""[label=""cfg_except""];\n	""18"" -> ""17""[label=""cfg_true""];\n	""18"" -> ""4""[label=""cfg_false""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""24""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""25"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_except""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_except""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_except""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_except""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_except""];\n	""8"" -> ""22""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_next""];\n}\n","private , static , synchronized "
"org.apache.commons.jxpath.JXPathIntrospector.instantiate(Class,String)",Method,"* Try to create an instance of a named class.\n     * First try the classloader of ""sibling"", then try the system\n     * classloader.\n     * @param sibling Class\n     * @param className to instantiate\n     * @return new Object\n     * @throws Exception if instantiation fails","private static Object instantiate(final Class sibling, final String className) throws Exception {\n    // First check with sibling's classloader (if any).\n    final ClassLoader cl = sibling.getClassLoader();\n    if (cl != null) {\n        try {\n            final Class cls = cl.loadClass(className);\n            return cls.getConstructor().newInstance();\n        } catch (final Exception ex) {\n            //NOPMD\n            // Just drop through and use the ClassLoaderUtil.\n        }\n    }\n    // Now try the ClassLoaderUtil.\n    final Class cls = ClassLoaderUtil.getClass(className);\n    return cls.newInstance();\n}","java.lang.Object instantiate(java.lang.Class,java.lang.String)","digraph cfg_instantiate {\n	""1"" [label=""$stack4 = virtualinvoke cls.<java.lang.Class: java.lang.Object newInstance()>()""];\n	""2"" [label=""$stack5 = newarray (java.lang.Class)[0]""];\n	""3"" [label=""$stack6 = newarray (java.lang.Object)[0]""];\n	""4"" [label=""$stack7 = virtualinvoke cls.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack5)""];\n	""5"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack6)""];\n	""6"" [label=""$stack9 := @caughtexception""];\n	""7"" [label=""cl = virtualinvoke sibling.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()""];\n	""8"" [label=""className := @parameter1: java.lang.String""];\n	""9"" [label=""cls = $stack9""];\n	""10"" [label=""cls = staticinvoke <org.apache.commons.jxpath.util.ClassLoaderUtil: java.lang.Class getClass(java.lang.String)>(className)""];\n	""11"" [label=""cls = virtualinvoke cl.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(className)""];\n	""12"" [label=""if cl == null""];\n	""13"" [label=""return $stack4""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""sibling := @parameter0: java.lang.Class""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_except""];\n	""12"" -> ""10""[label=""cfg_true""];\n	""12"" -> ""11""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_except""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_except""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_except""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_except""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , static "
org.apache.commons.jxpath.BasicVariables.isDeclaredVariable(String),Method,"* Returns true if the variable has been defined, even if the\n     * value of the variable is null.\n     *\n     * @param varName is a variable name without the ""$"" sign\n     * @return true if the variable is declared",@Override\npublic boolean isDeclaredVariable(final String varName) {\n    return vars.containsKey(varName);\n},boolean isDeclaredVariable(java.lang.String),"digraph cfg_isDeclaredVariable {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.BasicVariables: java.util.HashMap vars>""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(varName)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.BasicVariables""];\n	""5"" [label=""varName := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.BasicVariables.getVariable(String),Method,"* Returns the value of the variable if it is defined,\n     * otherwise, throws IllegalArgumentException\n     *\n     * @param varName is a variable name without the ""$"" sign\n     * @return the value of the variable","@Override\npublic Object getVariable(final String varName) {\n    // Note that a variable may be defined with a null value\n    if (vars.containsKey(varName)) {\n        return vars.get(varName);\n    }\n    throw new IllegalArgumentException(""No such variable: '"" + varName + ""'"");\n}",java.lang.Object getVariable(java.lang.String),"digraph cfg_getVariable {\n	""1"" [label=""$stack10 = this.<org.apache.commons.jxpath.BasicVariables: java.util.HashMap vars>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(varName)""];\n	""3"" [label=""$stack2 = this.<org.apache.commons.jxpath.BasicVariables: java.util.HashMap vars>""];\n	""4"" [label=""$stack3 = virtualinvoke $stack2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(varName)""];\n	""5"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""6"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""No such variable: \'\"")""];\n	""7"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varName)""];\n	""8"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\'\"")""];\n	""9"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""$stack9 = new java.lang.IllegalArgumentException""];\n	""11"" [label=""if $stack3 == 0""];\n	""12"" [label=""return $stack11""];\n	""13"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""14"" [label=""specialinvoke $stack9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack8)""];\n	""15"" [label=""this := @this: org.apache.commons.jxpath.BasicVariables""];\n	""16"" [label=""throw $stack9""];\n	""17"" [label=""varName := @parameter0: java.lang.String""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""10""[label=""cfg_true""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
"org.apache.commons.jxpath.BasicVariables.declareVariable(String,Object)",Method,"* Defines a new variable with the specified value or modifies\n     * the value of an existing variable.\n     *\n     * @param varName is a variable name without the ""$"" sign\n     * @param value is the new value for the variable, which can be null","@Override\npublic void declareVariable(final String varName, final Object value) {\n    vars.put(varName, value);\n}","void declareVariable(java.lang.String,java.lang.Object)","digraph cfg_declareVariable {\n	""1"" [label=""$stack3 = this.<org.apache.commons.jxpath.BasicVariables: java.util.HashMap vars>""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.BasicVariables""];\n	""4"" [label=""value := @parameter1: java.lang.Object""];\n	""5"" [label=""varName := @parameter0: java.lang.String""];\n	""6"" [label=""virtualinvoke $stack3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varName, value)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.BasicVariables.undeclareVariable(String),Method,"* Removes an existing variable. May throw UnsupportedOperationException.\n     *\n     * @param varName is a variable name without the ""$"" sign",@Override\npublic void undeclareVariable(final String varName) {\n    vars.remove(varName);\n},void undeclareVariable(java.lang.String),"digraph cfg_undeclareVariable {\n	""1"" [label=""$stack2 = this.<org.apache.commons.jxpath.BasicVariables: java.util.HashMap vars>""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: org.apache.commons.jxpath.BasicVariables""];\n	""4"" [label=""varName := @parameter0: java.lang.String""];\n	""5"" [label=""virtualinvoke $stack2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(varName)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
org.apache.commons.jxpath.BasicVariables.toString(),Method,No Comment,@Override\npublic String toString() {\n    return vars.toString();\n},java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<org.apache.commons.jxpath.BasicVariables: java.util.HashMap vars>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<java.util.HashMap: java.lang.String toString()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: org.apache.commons.jxpath.BasicVariables""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
