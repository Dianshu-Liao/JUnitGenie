FEN:ID,:LABEL,Comment,Source Code,Signature,Modifiers
com.fasterxml.jackson.databind.DeserializationConfig.serialVersionUID,Field,since 2.9,private static final long serialVersionUID = 2;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.DeserializationConfig.DESER_FEATURE_DEFAULTS,Field,since 2.10.1,private final static int DESER_FEATURE_DEFAULTS = collectFeatureDefaults(DeserializationFeature.class);,int DESER_FEATURE_DEFAULTS,"private , final , static "
com.fasterxml.jackson.databind.DeserializationConfig._problemHandlers,Field,* Linked list that contains all registered problem handlers.\n     * Implementation as front-added linked list allows for sharing\n     * of the list (tail) without copying the list.,protected final LinkedNode<DeserializationProblemHandler> _problemHandlers;,com.fasterxml.jackson.databind.util.LinkedNode _problemHandlers,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._nodeFactory,Field,* Factory used for constructing {@link com.fasterxml.jackson.databind.JsonNode} instances.,protected final JsonNodeFactory _nodeFactory;,com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._coercionConfigs,Field,* @since 2.12,protected final CoercionConfigs _coercionConfigs;,com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._ctorDetector,Field,* @since 2.12,protected final ConstructorDetector _ctorDetector;,com.fasterxml.jackson.databind.cfg.ConstructorDetector _ctorDetector,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._deserFeatures,Field,* Set of {@link DeserializationFeature}s enabled.,protected final int _deserFeatures;,int _deserFeatures,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._parserFeatures,Field,* States of {@link com.fasterxml.jackson.core.JsonParser.Feature}s to enable/disable.,protected final int _parserFeatures;,int _parserFeatures,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._parserFeaturesToChange,Field,* Bitflag of {@link com.fasterxml.jackson.core.JsonParser.Feature}s to enable/disable,protected final int _parserFeaturesToChange;,int _parserFeaturesToChange,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._formatReadFeatures,Field,* States of {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable.\n     *\n     * @since 2.7,protected final int _formatReadFeatures;,int _formatReadFeatures,"protected , final "
com.fasterxml.jackson.databind.DeserializationConfig._formatReadFeaturesToChange,Field,* Bitflag of {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable\n     *\n     * @since 2.7,protected final int _formatReadFeaturesToChange;,int _formatReadFeaturesToChange,"protected , final "
com.fasterxml.jackson.databind.DatabindException.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 3L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.LOWER_CAMEL_CASE,Field,"* Naming convention used in Java, where words other than first are capitalized\n     * and no separator is used between words. Since this is the native Java naming convention,\n     * naming strategy will not do any transformation between names in data (JSON) and\n     * POJOS.\n     *<p>\n     * Example external property names would be ""numberValue"", ""namingStrategy"", ""theDefiniteProof"".",public static final PropertyNamingStrategy LOWER_CAMEL_CASE = LowerCamelCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.UPPER_CAMEL_CASE,Field,"* Naming convention used in languages like Pascal, where all words are capitalized\n     * and no separator is used between words.\n     * See {@link UpperCamelCaseStrategy} for details.\n     *<p>\n     * Example external property names would be ""NumberValue"", ""NamingStrategy"", ""TheDefiniteProof"".",public static final PropertyNamingStrategy UPPER_CAMEL_CASE = UpperCamelCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.SNAKE_CASE,Field,"* Naming convention used in languages like C, where words are in lower-case\n     * letters, separated by underscores.\n     * See {@link SnakeCaseStrategy} for details.\n     *<p>\n     * Example external property names would be ""number_value"", ""naming_strategy"", ""the_definite_proof"".",public static final PropertyNamingStrategy SNAKE_CASE = SnakeCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.UPPER_SNAKE_CASE,Field,"* Naming convention in which the words are in upper-case letters, separated by underscores.\n     * See {@link UpperSnakeCaseStrategy} for details.\n     * @since 2.13\n     * <p>",public static final PropertyNamingStrategy UPPER_SNAKE_CASE = UpperSnakeCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_SNAKE_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.LOWER_CASE,Field,"* Naming convention in which all words of the logical name are in lower case, and\n     * no separator is used between words.\n     * See {@link LowerCaseStrategy} for details.\n     *<p>\n     * Example external property names would be ""numbervalue"", ""namingstrategy"", ""thedefiniteproof"".",public static final PropertyNamingStrategy LOWER_CASE = LowerCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.KEBAB_CASE,Field,"* Naming convention used in languages like Lisp, where words are in lower-case\n     * letters, separated by hyphens.\n     * See {@link KebabCaseStrategy} for details.\n     *<p>\n     * Example external property names would be ""number-value"", ""naming-strategy"", ""the-definite-proof"".",public static final PropertyNamingStrategy KEBAB_CASE = KebabCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies.LOWER_DOT_CASE,Field,"* Naming convention widely used as configuration properties name, where words are in\n     * lower-case letters, separated by dots.\n     * See {@link LowerDotCaseStrategy} for details.\n     *<p>\n     * Example external property names would be ""number.value"", ""naming.strategy"", ""the.definite.proof"".",public static final PropertyNamingStrategy LOWER_DOT_CASE = LowerDotCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_DOT_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$NamingBase.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy.INSTANCE,Field,* @since 2.14,public final static PropertyNamingStrategies.SnakeCaseStrategy INSTANCE = new PropertyNamingStrategies.SnakeCaseStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategies$SnakeCaseStrategy INSTANCE,"public , final , static "
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy.INSTANCE,Field,* @since 2.14,public final static PropertyNamingStrategies.UpperSnakeCaseStrategy INSTANCE = new PropertyNamingStrategies.UpperSnakeCaseStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperSnakeCaseStrategy INSTANCE,"public , final , static "
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy.INSTANCE,Field,* @since 2.14,public final static PropertyNamingStrategies.LowerCamelCaseStrategy INSTANCE = new PropertyNamingStrategies.LowerCamelCaseStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCamelCaseStrategy INSTANCE,"public , final , static "
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy.INSTANCE,Field,* @since 2.14,public final static PropertyNamingStrategies.UpperCamelCaseStrategy INSTANCE = new PropertyNamingStrategies.UpperCamelCaseStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategies$UpperCamelCaseStrategy INSTANCE,"public , final , static "
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy.INSTANCE,Field,* @since 2.14,public final static PropertyNamingStrategies.LowerCaseStrategy INSTANCE = new PropertyNamingStrategies.LowerCaseStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerCaseStrategy INSTANCE,"public , final , static "
com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy.INSTANCE,Field,* @since 2.14,public final static PropertyNamingStrategies.KebabCaseStrategy INSTANCE = new PropertyNamingStrategies.KebabCaseStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategies$KebabCaseStrategy INSTANCE,"public , final , static "
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy.INSTANCE,Field,* @since 2.14,public final static PropertyNamingStrategies.LowerDotCaseStrategy INSTANCE = new PropertyNamingStrategies.LowerDotCaseStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategies$LowerDotCaseStrategy INSTANCE,"public , final , static "
com.fasterxml.jackson.databind.JavaType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.JavaType._class,Field,"* This is the nominal type-erased Class that would be close to the\n     * type represented (but not exactly type, due to type erasure: type\n     * instance may have more information on this).\n     * May be an interface or abstract class, so instantiation\n     * may not be possible.",protected final Class<?> _class;,java.lang.Class _class,"protected , final "
com.fasterxml.jackson.databind.JavaType._hash,Field,No Comment,protected final int _hash;,int _hash,"protected , final "
com.fasterxml.jackson.databind.JavaType._valueHandler,Field,"* Optional handler (codec) that can be attached to indicate\n     * what to use for handling (serializing, deserializing) values of\n     * this specific type.\n     *<p>\n     * Note: untyped (i.e. caller has to cast) because it is used for\n     * different kinds of handlers, with unrelated types.",protected final Object _valueHandler;,java.lang.Object _valueHandler,"protected , final "
com.fasterxml.jackson.databind.JavaType._typeHandler,Field,"* Optional handler that can be attached to indicate how to handle\n     * additional type metadata associated with this type.\n     *<p>\n     * Note: untyped (i.e. caller has to cast) because it is used for\n     * different kinds of handlers, with unrelated types.",protected final Object _typeHandler;,java.lang.Object _typeHandler,"protected , final "
com.fasterxml.jackson.databind.JavaType._asStatic,Field,* Whether entities defined with this type should be handled using\n     * static typing (as opposed to dynamic runtime type) or not.\n     *\n     * @since 2.2,protected final boolean _asStatic;,boolean _asStatic,"protected , final "
com.fasterxml.jackson.databind.util.TokenBuffer.DEFAULT_GENERATOR_FEATURES,Field,No Comment,protected final static int DEFAULT_GENERATOR_FEATURES = JsonGenerator.Feature.collectDefaults();,int DEFAULT_GENERATOR_FEATURES,"protected , final , static "
com.fasterxml.jackson.databind.util.TokenBuffer._objectCodec,Field,"* Object codec to use for stream-based object\n     * conversion through parser/generator interfaces. If null,\n     * such methods cannot be used.",protected ObjectCodec _objectCodec;,com.fasterxml.jackson.core.ObjectCodec _objectCodec,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._parentContext,Field,"* Parse context from ""parent"" parser (one from which content to buffer is read,\n     * if specified). Used, if available, when reading content, to present full\n     * context as if content was read from the original parser: this is useful\n     * in error reporting and sometimes processing as well.",protected JsonStreamContext _parentContext;,com.fasterxml.jackson.core.JsonStreamContext _parentContext,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._generatorFeatures,Field,* Bit flag composed of bits that indicate which\n     * {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s\n     * are enabled.\n     *<p>\n     * NOTE: most features have no effect on this class,protected int _generatorFeatures;,int _generatorFeatures,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._streamReadConstraints,Field,* @since 2.15,protected StreamReadConstraints _streamReadConstraints = StreamReadConstraints.defaults();,com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._closed,Field,No Comment,protected boolean _closed;,boolean _closed,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._hasNativeTypeIds,Field,* @since 2.3,protected boolean _hasNativeTypeIds;,boolean _hasNativeTypeIds,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._hasNativeObjectIds,Field,* @since 2.3,protected boolean _hasNativeObjectIds;,boolean _hasNativeObjectIds,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._mayHaveNativeIds,Field,* @since 2.3,protected boolean _mayHaveNativeIds;,boolean _mayHaveNativeIds,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._forceBigDecimal,Field,"* Flag set during construction, if use of {@link BigDecimal} is to be forced\n     * on all floating-point values.\n     *\n     * @since 2.7",protected boolean _forceBigDecimal;,boolean _forceBigDecimal,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._first,Field,"* First segment, for contents this buffer has",protected Segment _first;,com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._last,Field,"* Last segment of this buffer, one that is used\n     * for appending more tokens",protected Segment _last;,com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._appendAt,Field,"* Offset within last segment,",protected int _appendAt;,int _appendAt,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._typeId,Field,"* If native type ids supported, this is the id for following\n     * value (or first token of one) to be written.",protected Object _typeId;,java.lang.Object _typeId,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._objectId,Field,"* If native object ids supported, this is the id for following\n     * value (or first token of one) to be written.",protected Object _objectId;,java.lang.Object _objectId,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._hasNativeId,Field,* Do we currently have a native type or object id buffered?,protected boolean _hasNativeId = false;,boolean _hasNativeId,protected 
com.fasterxml.jackson.databind.util.TokenBuffer._writeContext,Field,No Comment,protected JsonWriteContext _writeContext;,com.fasterxml.jackson.core.json.JsonWriteContext _writeContext,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._codec,Field,No Comment,protected ObjectCodec _codec;,com.fasterxml.jackson.core.ObjectCodec _codec,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._hasNativeTypeIds,Field,* @since 2.3,protected final boolean _hasNativeTypeIds;,boolean _hasNativeTypeIds,"protected , final "
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._hasNativeObjectIds,Field,* @since 2.3,protected final boolean _hasNativeObjectIds;,boolean _hasNativeObjectIds,"protected , final "
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._hasNativeIds,Field,No Comment,protected final boolean _hasNativeIds;,boolean _hasNativeIds,"protected , final "
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._segment,Field,* Currently active segment,protected Segment _segment;,com.fasterxml.jackson.databind.util.TokenBuffer$Segment _segment,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._segmentPtr,Field,* Pointer to current token within current segment,protected int _segmentPtr;,int _segmentPtr,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._parsingContext,Field,"* Information about parser context, context in which\n         * the next token is to be parsed (root, array, object).",protected TokenBufferReadContext _parsingContext;,com.fasterxml.jackson.databind.util.TokenBufferReadContext _parsingContext,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._closed,Field,No Comment,protected boolean _closed;,boolean _closed,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._byteBuilder,Field,No Comment,protected transient ByteArrayBuilder _byteBuilder;,com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder,"protected , transient "
com.fasterxml.jackson.databind.util.TokenBuffer$Parser._location,Field,No Comment,protected JsonLocation _location = null;,com.fasterxml.jackson.core.JsonLocation _location,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Segment.TOKENS_PER_SEGMENT,Field,No Comment,public final static int TOKENS_PER_SEGMENT = 16;,int TOKENS_PER_SEGMENT,"public , final , static "
com.fasterxml.jackson.databind.util.TokenBuffer$Segment.TOKEN_TYPES_BY_INDEX,Field,* Static array used for fast conversion between token markers and\n         * matching {@link JsonToken} instances,private final static JsonToken[] TOKEN_TYPES_BY_INDEX;,com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX,"private , final , static "
com.fasterxml.jackson.databind.util.TokenBuffer$Segment._next,Field,No Comment,protected Segment _next;,com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Segment._tokenTypes,Field,"* Bit field used to store types of buffered tokens; 4 bits per token.\n         * Value 0 is reserved for ""not in use""",protected long _tokenTypes;,long _tokenTypes,protected 
com.fasterxml.jackson.databind.util.TokenBuffer$Segment._tokens,Field,No Comment,protected final Object[] _tokens = new Object[TOKENS_PER_SEGMENT];,java.lang.Object[] _tokens,"protected , final "
com.fasterxml.jackson.databind.util.TokenBuffer$Segment._nativeIds,Field,"* Lazily constructed Map for storing native type and object ids, if any","protected TreeMap<Integer, Object> _nativeIds;",java.util.TreeMap _nativeIds,protected 
com.fasterxml.jackson.databind.util.TokenBufferReadContext._parent,Field,No Comment,protected final JsonStreamContext _parent;,com.fasterxml.jackson.core.JsonStreamContext _parent,"protected , final "
com.fasterxml.jackson.databind.util.TokenBufferReadContext._startLocation,Field,No Comment,protected final JsonLocation _startLocation;,com.fasterxml.jackson.core.JsonLocation _startLocation,"protected , final "
com.fasterxml.jackson.databind.util.TokenBufferReadContext._currentName,Field,No Comment,protected String _currentName;,java.lang.String _currentName,protected 
com.fasterxml.jackson.databind.util.TokenBufferReadContext._currentValue,Field,No Comment,protected Object _currentValue;,java.lang.Object _currentValue,protected 
com.fasterxml.jackson.databind.util.CompactStringObjectMap.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.CompactStringObjectMap.EMPTY,Field,* Shared instance that can be used when there are no contents to Map.,"private final static CompactStringObjectMap EMPTY = new CompactStringObjectMap(1, 0, new Object[4]);",com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY,"private , final , static "
com.fasterxml.jackson.databind.util.CompactStringObjectMap._hashMask,Field,No Comment,"private final int _hashMask, _spillCount;",int _hashMask,"private , final "
com.fasterxml.jackson.databind.util.CompactStringObjectMap._spillCount,Field,No Comment,"private final int _hashMask, _spillCount;",int _spillCount,"private , final "
com.fasterxml.jackson.databind.util.CompactStringObjectMap._hashArea,Field,No Comment,private final Object[] _hashArea;,java.lang.Object[] _hashArea,"private , final "
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition._annotationIntrospector,Field,No Comment,protected final AnnotationIntrospector _annotationIntrospector;,com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector,"protected , final "
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition._member,Field,"* Member that defines logical property. Assumption is that it\n     * should be a 'simple' accessor; meaning a zero-argument getter,\n     * single-argument setter or constructor parameter.\n     *<p>\n     * NOTE: for ""virtual"" properties, this is null.",protected final AnnotatedMember _member;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _member,"protected , final "
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition._metadata,Field,* @since 2.5,protected final PropertyMetadata _metadata;,com.fasterxml.jackson.databind.PropertyMetadata _metadata,"protected , final "
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition._fullName,Field,* @since 2.5,protected final PropertyName _fullName;,com.fasterxml.jackson.databind.PropertyName _fullName,"protected , final "
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition._inclusion,Field,* @since 2.5,protected final JsonInclude.Value _inclusion;,com.fasterxml.jackson.annotation.JsonInclude$Value _inclusion,"protected , final "
com.fasterxml.jackson.databind.util.LinkedNode.value,Field,No Comment,private final T value;,java.lang.Object value,"private , final "
com.fasterxml.jackson.databind.util.LinkedNode.next,Field,No Comment,private LinkedNode<T> next;,com.fasterxml.jackson.databind.util.LinkedNode next,private 
com.fasterxml.jackson.databind.util.EnumValues.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.EnumValues._enumClass,Field,No Comment,private final Class<Enum<?>> _enumClass;,java.lang.Class _enumClass,"private , final "
com.fasterxml.jackson.databind.util.EnumValues._values,Field,No Comment,private final Enum<?>[] _values;,java.lang.Enum[] _values,"private , final "
com.fasterxml.jackson.databind.util.EnumValues._textual,Field,No Comment,private final SerializableString[] _textual;,com.fasterxml.jackson.core.SerializableString[] _textual,"private , final "
com.fasterxml.jackson.databind.util.EnumValues._asMap,Field,No Comment,"private transient EnumMap<?, SerializableString> _asMap;",java.util.EnumMap _asMap,"private , transient "
com.fasterxml.jackson.databind.util.ISO8601Utils.DEF_8601_LEN,Field,No Comment,"protected final static int DEF_8601_LEN = ""yyyy-MM-ddThh:mm:ss.SSS+00:00"".length();",int DEF_8601_LEN,"protected , final , static "
com.fasterxml.jackson.databind.util.ISO8601Utils.TIMEZONE_Z,Field,* Timezone we use for 'Z' in ISO-8601 date/time values: since 2.7\n     * {@link #TIMEZONE_UTC}; with earlier versions up to 2.7 was {@link #TIMEZONE_GMT}.,"private static final TimeZone TIMEZONE_Z = TimeZone.getTimeZone(""UTC"");",java.util.TimeZone TIMEZONE_Z,"private , static , final "
com.fasterxml.jackson.databind.util.ViewMatcher.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.ViewMatcher.EMPTY,Field,No Comment,protected final static ViewMatcher EMPTY = new ViewMatcher();,com.fasterxml.jackson.databind.util.ViewMatcher EMPTY,"protected , final , static "
com.fasterxml.jackson.databind.util.ViewMatcher$Single.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.ViewMatcher$Single._view,Field,No Comment,private final Class<?> _view;,java.lang.Class _view,"private , final "
com.fasterxml.jackson.databind.util.ViewMatcher$Multi.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.ViewMatcher$Multi._views,Field,No Comment,private final Class<?>[] _views;,java.lang.Class[] _views,"private , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.NCPU,Field,The number of CPUs,static final int NCPU = Runtime.getRuntime().availableProcessors();,int NCPU,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.MAXIMUM_CAPACITY,Field,The maximum capacity of the map.,static final long MAXIMUM_CAPACITY = Long.MAX_VALUE - Integer.MAX_VALUE;,long MAXIMUM_CAPACITY,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.NUMBER_OF_READ_BUFFERS,Field,"* The number of read buffers to use.\n     * The max of 4 was introduced due to <a href=""https://github.com/FasterXML/jackson-databind/issues/3665"">databind#3665</a>.","static final int NUMBER_OF_READ_BUFFERS = Math.min(4, ceilingNextPowerOfTwo(NCPU));",int NUMBER_OF_READ_BUFFERS,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.READ_BUFFERS_MASK,Field,Mask value for indexing into the read buffers.,static final int READ_BUFFERS_MASK = NUMBER_OF_READ_BUFFERS - 1;,int READ_BUFFERS_MASK,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.READ_BUFFER_THRESHOLD,Field,"* The number of pending read operations before attempting to drain.\n     * The threshold of 4 was introduced due to <a href=""https://github.com/FasterXML/jackson-databind/issues/3665"">databind#3665</a>.",static final int READ_BUFFER_THRESHOLD = 4;,int READ_BUFFER_THRESHOLD,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.READ_BUFFER_DRAIN_THRESHOLD,Field,The maximum number of read operations to perform per amortized drain.,static final int READ_BUFFER_DRAIN_THRESHOLD = 2 * READ_BUFFER_THRESHOLD;,int READ_BUFFER_DRAIN_THRESHOLD,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.READ_BUFFER_SIZE,Field,The maximum number of pending reads per buffer.,static final int READ_BUFFER_SIZE = 2 * READ_BUFFER_DRAIN_THRESHOLD;,int READ_BUFFER_SIZE,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.READ_BUFFER_INDEX_MASK,Field,Mask value for indexing into the read buffer.,static final int READ_BUFFER_INDEX_MASK = READ_BUFFER_SIZE - 1;,int READ_BUFFER_INDEX_MASK,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.WRITE_BUFFER_DRAIN_THRESHOLD,Field,The maximum number of write operations to perform per amortized drain.,static final int WRITE_BUFFER_DRAIN_THRESHOLD = 16;,int WRITE_BUFFER_DRAIN_THRESHOLD,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.data,Field,The backing data store holding the key-value associations,"final ConcurrentMap<K, Node<K, V>> data;",java.util.concurrent.ConcurrentMap data,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.concurrencyLevel,Field,No Comment,final int concurrencyLevel;,int concurrencyLevel,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.readBufferReadCount,Field,"@GuardedBy(""evictionLock"")",final long[] readBufferReadCount;,long[] readBufferReadCount,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.evictionDeque,Field,"@GuardedBy(""evictionLock"")","final LinkedDeque<Node<K, V>> evictionDeque;",com.fasterxml.jackson.databind.util.internal.LinkedDeque evictionDeque,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.weightedSize,Field,"@GuardedBy(""evictionLock"") // must write under lock",final AtomicLong weightedSize;,java.util.concurrent.atomic.AtomicLong weightedSize,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.capacity,Field,"@GuardedBy(""evictionLock"") // must write under lock",final AtomicLong capacity;,java.util.concurrent.atomic.AtomicLong capacity,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.evictionLock,Field,No Comment,final Lock evictionLock;,java.util.concurrent.locks.Lock evictionLock,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.writeBuffer,Field,No Comment,final Queue<Runnable> writeBuffer;,java.util.Queue writeBuffer,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.readBufferWriteCount,Field,No Comment,final AtomicLongArray readBufferWriteCount;,java.util.concurrent.atomic.AtomicLongArray readBufferWriteCount,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.readBufferDrainAtWriteCount,Field,No Comment,final AtomicLongArray readBufferDrainAtWriteCount;,java.util.concurrent.atomic.AtomicLongArray readBufferDrainAtWriteCount,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.readBuffers,Field,No Comment,"final AtomicReferenceArray<Node<K, V>> readBuffers;",java.util.concurrent.atomic.AtomicReferenceArray readBuffers,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.drainStatus,Field,No Comment,final AtomicReference<DrainStatus> drainStatus;,java.util.concurrent.atomic.AtomicReference drainStatus,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.keySet,Field,No Comment,transient Set<K> keySet;,java.util.Set keySet,transient 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.values,Field,No Comment,transient Collection<V> values;,java.util.Collection values,transient 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.entrySet,Field,No Comment,"transient Set<Entry<K, V>> entrySet;",java.util.Set entrySet,transient 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap.serialVersionUID,Field,No Comment,static final long serialVersionUID = 1;,long serialVersionUID,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$AddTask.node,Field,No Comment,"final Node<K, V> node;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$AddTask.weight,Field,No Comment,final int weight;,int weight,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$RemovalTask.node,Field,No Comment,"final Node<K, V> node;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask.weightDifference,Field,No Comment,final int weightDifference;,int weightDifference,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$UpdateTask.node,Field,No Comment,"final Node<K, V> node;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node node,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue.weight,Field,No Comment,final int weight;,int weight,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue.value,Field,No Comment,final V value;,java.lang.Object value,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node.key,Field,No Comment,final K key;,java.lang.Object key,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node.prev,Field,"@GuardedBy(""evictionLock"")","Node<K, V> prev;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node prev,default
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node.next,Field,"@GuardedBy(""evictionLock"")","Node<K, V> next;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node next,default
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet.map,Field,No Comment,"final PrivateMaxEntriesMap<K, V> map = PrivateMaxEntriesMap.this;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator.iterator,Field,No Comment,final Iterator<K> iterator = data.keySet().iterator();,java.util.Iterator iterator,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator.current,Field,No Comment,K current;,java.lang.Object current,default
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$ValueIterator.iterator,Field,No Comment,"final Iterator<Node<K, V>> iterator = data.values().iterator();",java.util.Iterator iterator,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$ValueIterator.current,Field,No Comment,"Node<K, V> current;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node current,default
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntrySet.map,Field,No Comment,"final PrivateMaxEntriesMap<K, V> map = PrivateMaxEntriesMap.this;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntryIterator.iterator,Field,No Comment,"final Iterator<Node<K, V>> iterator = data.values().iterator();",java.util.Iterator iterator,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$EntryIterator.current,Field,No Comment,"Node<K, V> current;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node current,default
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WriteThroughEntry.serialVersionUID,Field,No Comment,static final long serialVersionUID = 1;,long serialVersionUID,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$SerializationProxy.concurrencyLevel,Field,No Comment,final int concurrencyLevel;,int concurrencyLevel,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$SerializationProxy.data,Field,No Comment,"final Map<K, V> data;",java.util.Map data,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$SerializationProxy.capacity,Field,No Comment,final long capacity;,long capacity,final 
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$SerializationProxy.serialVersionUID,Field,No Comment,static final long serialVersionUID = 1;,long serialVersionUID,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder.DEFAULT_CONCURRENCY_LEVEL,Field,No Comment,static final int DEFAULT_CONCURRENCY_LEVEL = 16;,int DEFAULT_CONCURRENCY_LEVEL,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder.DEFAULT_INITIAL_CAPACITY,Field,No Comment,static final int DEFAULT_INITIAL_CAPACITY = 16;,int DEFAULT_INITIAL_CAPACITY,"static , final "
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder.concurrencyLevel,Field,No Comment,int concurrencyLevel;,int concurrencyLevel,default
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder.initialCapacity,Field,No Comment,int initialCapacity;,int initialCapacity,default
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder.capacity,Field,No Comment,long capacity;,long capacity,default
com.fasterxml.jackson.databind.util.internal.LinkedDeque.first,Field,* Pointer to first node.\n     * Invariant: (first == null && last == null) ||\n     *            (first.prev == null),E first;,com.fasterxml.jackson.databind.util.internal.Linked first,default
com.fasterxml.jackson.databind.util.internal.LinkedDeque.last,Field,* Pointer to last node.\n     * Invariant: (first == null && last == null) ||\n     *            (last.next == null),E last;,com.fasterxml.jackson.databind.util.internal.Linked last,default
com.fasterxml.jackson.databind.util.internal.LinkedDeque$AbstractLinkedIterator.cursor,Field,No Comment,E cursor;,com.fasterxml.jackson.databind.util.internal.Linked cursor,default
com.fasterxml.jackson.databind.util.ArrayBuilders._booleanBuilder,Field,No Comment,private BooleanBuilder _booleanBuilder = null;,com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder _booleanBuilder,private 
com.fasterxml.jackson.databind.util.ArrayBuilders._byteBuilder,Field,No Comment,private ByteBuilder _byteBuilder = null;,com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder _byteBuilder,private 
com.fasterxml.jackson.databind.util.ArrayBuilders._shortBuilder,Field,No Comment,private ShortBuilder _shortBuilder = null;,com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder _shortBuilder,private 
com.fasterxml.jackson.databind.util.ArrayBuilders._intBuilder,Field,No Comment,private IntBuilder _intBuilder = null;,com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder _intBuilder,private 
com.fasterxml.jackson.databind.util.ArrayBuilders._longBuilder,Field,No Comment,private LongBuilder _longBuilder = null;,com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder _longBuilder,private 
com.fasterxml.jackson.databind.util.ArrayBuilders._floatBuilder,Field,No Comment,private FloatBuilder _floatBuilder = null;,com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder _floatBuilder,private 
com.fasterxml.jackson.databind.util.ArrayBuilders._doubleBuilder,Field,No Comment,private DoubleBuilder _doubleBuilder = null;,com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder _doubleBuilder,private 
com.fasterxml.jackson.databind.util.JSONWrappedObject._prefix,Field,* Literal String to output before serialized value.\n     * Will not be quoted when serializing value.,protected final String _prefix;,java.lang.String _prefix,"protected , final "
com.fasterxml.jackson.databind.util.JSONWrappedObject._suffix,Field,* Literal String to output after serialized value.\n     * Will not be quoted when serializing value.,protected final String _suffix;,java.lang.String _suffix,"protected , final "
com.fasterxml.jackson.databind.util.JSONWrappedObject._value,Field,* Value to be serialized as JSONP padded; can be null.,protected final Object _value;,java.lang.Object _value,"protected , final "
com.fasterxml.jackson.databind.util.JSONWrappedObject._serializationType,Field,"* Optional static type to use for serialization; if null, runtime\n     * type is used. Can be used to specify declared type which defines\n     * serializer to use, as well as aspects of extra type information\n     * to include (if any).",protected final JavaType _serializationType;,com.fasterxml.jackson.databind.JavaType _serializationType,"protected , final "
com.fasterxml.jackson.databind.util.ArrayIterator._a,Field,No Comment,private final T[] _a;,java.lang.Object[] _a,"private , final "
com.fasterxml.jackson.databind.util.ArrayIterator._index,Field,No Comment,private int _index;,int _index,private 
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker._toIgnore,Field,No Comment,private final Set<String> _toIgnore;,java.util.Set _toIgnore,"private , final "
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker._toInclude,Field,No Comment,private final Set<String> _toInclude;,java.util.Set _toInclude,"private , final "
com.fasterxml.jackson.databind.util.ObjectBuffer.SMALL_CHUNK,Field,* Also: let's expand by doubling up until 64k chunks (which is 16k entries for\n     * 32-bit machines),private final static int SMALL_CHUNK = (1 << 14);,int SMALL_CHUNK,"private , final , static "
com.fasterxml.jackson.databind.util.ObjectBuffer.MAX_CHUNK,Field,"* Let's limit maximum size of chunks we use; helps avoid excessive allocation\n     * overhead for huge data sets.\n     * For now, let's limit to quarter million entries, 1 meg chunks for 32-bit\n     * machines.",private final static int MAX_CHUNK = (1 << 18);,int MAX_CHUNK,"private , final , static "
com.fasterxml.jackson.databind.util.ObjectBuffer._head,Field,No Comment,private LinkedNode<Object[]> _head;,com.fasterxml.jackson.databind.util.LinkedNode _head,private 
com.fasterxml.jackson.databind.util.ObjectBuffer._tail,Field,No Comment,private LinkedNode<Object[]> _tail;,com.fasterxml.jackson.databind.util.LinkedNode _tail,private 
com.fasterxml.jackson.databind.util.ObjectBuffer._size,Field,"* Number of total buffered entries in this buffer, counting all instances\n     * within linked list formed by following {@link #_head}.",private int _size;,int _size,private 
com.fasterxml.jackson.databind.util.ObjectBuffer._freeBuffer,Field,"* Reusable Object array, stored here after buffer has been released having\n     * been used previously.",private Object[] _freeBuffer;,java.lang.Object[] _freeBuffer,private 
com.fasterxml.jackson.databind.util.JSONPObject._function,Field,* JSONP function name to use for serialization,protected final String _function;,java.lang.String _function,"protected , final "
com.fasterxml.jackson.databind.util.JSONPObject._value,Field,* Value to be serialized as JSONP padded; can be null.,protected final Object _value;,java.lang.Object _value,"protected , final "
com.fasterxml.jackson.databind.util.JSONPObject._serializationType,Field,"* Optional static type to use for serialization; if null, runtime\n     * type is used. Can be used to specify declared type which defines\n     * serializer to use, as well as aspects of extra type information\n     * to include (if any).",protected final JavaType _serializationType;,com.fasterxml.jackson.databind.JavaType _serializationType,"protected , final "
com.fasterxml.jackson.databind.util.RootNameLookup.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.RootNameLookup._rootNames,Field,"* For efficient operation, let's try to minimize number of times we\n     * need to introspect root element name to use.","protected transient LRUMap<ClassKey, PropertyName> _rootNames;",com.fasterxml.jackson.databind.util.LRUMap _rootNames,"protected , transient "
com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN_STR,Field,"24-Jun-2017, tatu: Finally rewrote deserialization to use basic Regex\n     *   instead of SimpleDateFormat; partly for better concurrency, partly\n     *   for easier enforcing of specific rules. Heavy lifting done by Calendar,\n     *   anyway.","protected final static String PATTERN_PLAIN_STR = ""\\d\\d\\d\\d[-]\\d\\d[-]\\d\\d"";",java.lang.String PATTERN_PLAIN_STR,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_PLAIN,Field,No Comment,protected final static Pattern PATTERN_PLAIN = Pattern.compile(PATTERN_PLAIN_STR);,java.util.regex.Pattern PATTERN_PLAIN,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.PATTERN_ISO8601,Field,No Comment,protected final static Pattern PATTERN_ISO8601;,java.util.regex.Pattern PATTERN_ISO8601,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_ISO8601,Field,"* Defines a commonly used date format that conforms\n     * to ISO-8601 date formatting standard, when it includes basic undecorated\n     * timezone definition.","public final static String DATE_FORMAT_STR_ISO8601 = ""yyyy-MM-dd'T'HH:mm:ss.SSSX"";",java.lang.String DATE_FORMAT_STR_ISO8601,"public , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_PLAIN,Field,"* ISO-8601 with just the Date part, no time: needed for error messages","protected final static String DATE_FORMAT_STR_PLAIN = ""yyyy-MM-dd"";",java.lang.String DATE_FORMAT_STR_PLAIN,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_STR_RFC1123,Field,* This constant defines the date format specified by\n     * RFC 1123 / RFC 822. Used for parsing via `SimpleDateFormat` as well as\n     * error messages.,"protected final static String DATE_FORMAT_STR_RFC1123 = ""EEE, dd MMM yyyy HH:mm:ss zzz"";",java.lang.String DATE_FORMAT_STR_RFC1123,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.ALL_FORMATS,Field,* For error messages we'll also need a list of all formats.,"protected final static String[] ALL_FORMATS = new String[] { DATE_FORMAT_STR_ISO8601, // ISO-8601 but no timezone\n""yyyy-MM-dd'T'HH:mm:ss.SSS"", DATE_FORMAT_STR_RFC1123, DATE_FORMAT_STR_PLAIN };",java.lang.String[] ALL_FORMATS,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_TIMEZONE,Field,"* By default we use UTC for everything, with Jackson 2.7 and later\n     * (2.6 and earlier relied on GMT)",protected final static TimeZone DEFAULT_TIMEZONE;,java.util.TimeZone DEFAULT_TIMEZONE,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.DEFAULT_LOCALE,Field,No Comment,protected final static Locale DEFAULT_LOCALE = Locale.US;,java.util.Locale DEFAULT_LOCALE,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.DATE_FORMAT_RFC1123,Field,No Comment,protected final static DateFormat DATE_FORMAT_RFC1123;,java.text.DateFormat DATE_FORMAT_RFC1123,"protected , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.instance,Field,"* A singleton instance can be used for cloning purposes, as a blueprint of sorts.",public final static StdDateFormat instance = new StdDateFormat();,com.fasterxml.jackson.databind.util.StdDateFormat instance,"public , final , static "
com.fasterxml.jackson.databind.util.StdDateFormat.CALENDAR,Field,"* Blueprint ""Calendar"" instance for use during formatting. Cannot be used as is,\n     * due to thread-safety issues, but can be used for constructing actual instances\n     * more cheaply by cloning.\n     *\n     * @since 2.9.1","protected static final Calendar CALENDAR = new GregorianCalendar(DEFAULT_TIMEZONE, DEFAULT_LOCALE);",java.util.Calendar CALENDAR,"protected , static , final "
com.fasterxml.jackson.databind.util.StdDateFormat._timezone,Field,"* Caller may want to explicitly override timezone to use; if so,\n     * we will have non-null value here.",protected transient TimeZone _timezone;,java.util.TimeZone _timezone,"protected , transient "
com.fasterxml.jackson.databind.util.StdDateFormat._locale,Field,No Comment,protected final Locale _locale;,java.util.Locale _locale,"protected , final "
com.fasterxml.jackson.databind.util.StdDateFormat._lenient,Field,"* Explicit override for leniency, if specified.\n     *<p>\n     * Cannot be `final` because {@link #setLenient(boolean)} returns\n     * `void`.\n     *\n     * @since 2.7",protected Boolean _lenient;,java.lang.Boolean _lenient,protected 
com.fasterxml.jackson.databind.util.StdDateFormat._calendar,Field,* Lazily instantiated calendar used by this instance for serialization ({@link #format(Date)}).\n     *\n     * @since 2.9.1,private transient Calendar _calendar;,java.util.Calendar _calendar,"private , transient "
com.fasterxml.jackson.databind.util.StdDateFormat._formatRFC1123,Field,No Comment,private transient DateFormat _formatRFC1123;,java.text.DateFormat _formatRFC1123,"private , transient "
com.fasterxml.jackson.databind.util.StdDateFormat._tzSerializedWithColon,Field,* Whether the TZ offset must be formatted with a colon between hours and minutes ({@code HH:mm} format)\n     *<p>\n     * Defaults to {@code true} since 2.11: earlier versions defaulted to {@code false}\n     * for backwards compatibility reasons\n     *\n     * @since 2.9.1,private boolean _tzSerializedWithColon = true;,boolean _tzSerializedWithColon,private 
com.fasterxml.jackson.databind.util.ISO8601DateFormat.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream._b,Field,No Comment,protected final ByteBuffer _b;,java.nio.ByteBuffer _b,"protected , final "
com.fasterxml.jackson.databind.util.TypeKey._hashCode,Field,No Comment,protected int _hashCode;,int _hashCode,protected 
com.fasterxml.jackson.databind.util.TypeKey._class,Field,No Comment,protected Class<?> _class;,java.lang.Class _class,protected 
com.fasterxml.jackson.databind.util.TypeKey._type,Field,No Comment,protected JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,protected 
com.fasterxml.jackson.databind.util.TypeKey._isTyped,Field,"* Indicator of whether serializer stored has a type serializer\n     * wrapper around it or not; if not, it is ""untyped"" serializer;\n     * if it has, it is ""typed""",protected boolean _isTyped;,boolean _isTyped,protected 
com.fasterxml.jackson.databind.util.ByteBufferBackedOutputStream._b,Field,No Comment,protected final ByteBuffer _b;,java.nio.ByteBuffer _b,"protected , final "
com.fasterxml.jackson.databind.util.ClassUtil.CLS_OBJECT,Field,No Comment,private final static Class<?> CLS_OBJECT = Object.class;,java.lang.Class CLS_OBJECT,"private , final , static "
com.fasterxml.jackson.databind.util.ClassUtil.NO_ANNOTATIONS,Field,No Comment,private final static Annotation[] NO_ANNOTATIONS = new Annotation[0];,java.lang.annotation.Annotation[] NO_ANNOTATIONS,"private , final , static "
com.fasterxml.jackson.databind.util.ClassUtil.NO_CTORS,Field,No Comment,private final static Ctor[] NO_CTORS = new Ctor[0];,com.fasterxml.jackson.databind.util.ClassUtil$Ctor[] NO_CTORS,"private , final , static "
com.fasterxml.jackson.databind.util.ClassUtil.EMPTY_ITERATOR,Field,No Comment,private final static Iterator<Object> EMPTY_ITERATOR = Collections.emptyIterator();,java.util.Iterator EMPTY_ITERATOR,"private , final , static "
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator.instance,Field,No Comment,final static EnumTypeLocator instance = new EnumTypeLocator();,com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator instance,"final , static "
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator.enumSetTypeField,Field,No Comment,private final Field enumSetTypeField;,java.lang.reflect.Field enumSetTypeField,"private , final "
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator.enumMapTypeField,Field,No Comment,private final Field enumMapTypeField;,java.lang.reflect.Field enumMapTypeField,"private , final "
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator.failForEnumSet,Field,No Comment,private final String failForEnumSet;,java.lang.String failForEnumSet,"private , final "
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator.failForEnumMap,Field,No Comment,private final String failForEnumMap;,java.lang.String failForEnumMap,"private , final "
com.fasterxml.jackson.databind.util.ClassUtil$Ctor._ctor,Field,No Comment,public final Constructor<?> _ctor;,java.lang.reflect.Constructor _ctor,"public , final "
com.fasterxml.jackson.databind.util.ClassUtil$Ctor._annotations,Field,No Comment,private transient Annotation[] _annotations;,java.lang.annotation.Annotation[] _annotations,"private , transient "
com.fasterxml.jackson.databind.util.ClassUtil$Ctor._paramAnnotations,Field,No Comment,private transient Annotation[][] _paramAnnotations;,java.lang.annotation.Annotation[][] _paramAnnotations,"private , transient "
com.fasterxml.jackson.databind.util.ClassUtil$Ctor._paramCount,Field,No Comment,private int _paramCount = -1;,int _paramCount,private 
com.fasterxml.jackson.databind.util.NameTransformer.NOP,Field,"* Singleton ""no-operation"" transformer which simply returns given\n     * name as is. Used commonly as placeholder or marker.",public final static NameTransformer NOP = new NopTransformer();,com.fasterxml.jackson.databind.util.NameTransformer NOP,"public , final , static "
com.fasterxml.jackson.databind.util.NameTransformer$NopTransformer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.NameTransformer$Chained.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.NameTransformer$Chained._t1,Field,No Comment,"protected final NameTransformer _t1, _t2;",com.fasterxml.jackson.databind.util.NameTransformer _t1,"protected , final "
com.fasterxml.jackson.databind.util.NameTransformer$Chained._t2,Field,No Comment,"protected final NameTransformer _t1, _t2;",com.fasterxml.jackson.databind.util.NameTransformer _t2,"protected , final "
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.INITIAL_CHUNK_SIZE,Field,* Let's start with small chunks; typical usage is for small arrays anyway.,final static int INITIAL_CHUNK_SIZE = 12;,int INITIAL_CHUNK_SIZE,"final , static "
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.SMALL_CHUNK_SIZE,Field,* Also: let's expand by doubling up until 64k chunks (which is 16k entries for\n     * 32-bit machines),final static int SMALL_CHUNK_SIZE = (1 << 14);,int SMALL_CHUNK_SIZE,"final , static "
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder.MAX_CHUNK_SIZE,Field,"* Let's limit maximum size of chunks we use; helps avoid excessive allocation\n     * overhead for huge data sets.\n     * For now, let's limit to quarter million entries, 1 meg chunks for 32-bit\n     * machines.",final static int MAX_CHUNK_SIZE = (1 << 18);,int MAX_CHUNK_SIZE,"final , static "
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder._freeBuffer,Field,No Comment,protected T _freeBuffer;,java.lang.Object _freeBuffer,protected 
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder._bufferHead,Field,No Comment,protected Node<T> _bufferHead;,com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead,protected 
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder._bufferTail,Field,No Comment,protected Node<T> _bufferTail;,com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail,protected 
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder._bufferedEntryCount,Field,"* Number of total buffered entries in this buffer, counting all instances\n     * within linked list formed by following {@link #_bufferHead}.",protected int _bufferedEntryCount;,int _bufferedEntryCount,protected 
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node._data,Field,* Data stored in this node.,final T _data;,java.lang.Object _data,final 
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node._dataLength,Field,* Number entries in the (untyped) array. Offset is assumed to be 0.,final int _dataLength;,int _dataLength,final 
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node._next,Field,No Comment,Node<T> _next;,com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next,default
com.fasterxml.jackson.databind.util.NativeImageUtil.RUNNING_IN_SVM,Field,No Comment,"private static final boolean RUNNING_IN_SVM = System.getProperty(""org.graalvm.nativeimage.imagecode"") != null;",boolean RUNNING_IN_SVM,"private , static , final "
com.fasterxml.jackson.databind.util.LRUMap.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.LRUMap._initialEntries,Field,No Comment,protected final int _initialEntries;,int _initialEntries,"protected , final "
com.fasterxml.jackson.databind.util.LRUMap._maxEntries,Field,No Comment,protected final int _maxEntries;,int _maxEntries,"protected , final "
com.fasterxml.jackson.databind.util.LRUMap._map,Field,No Comment,"protected final transient PrivateMaxEntriesMap<K, V> _map;",com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap _map,"protected , final , transient "
com.fasterxml.jackson.databind.util.EnumResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.util.EnumResolver._enumClass,Field,No Comment,protected final Class<Enum<?>> _enumClass;,java.lang.Class _enumClass,"protected , final "
com.fasterxml.jackson.databind.util.EnumResolver._enums,Field,No Comment,protected final Enum<?>[] _enums;,java.lang.Enum[] _enums,"protected , final "
com.fasterxml.jackson.databind.util.EnumResolver._enumsById,Field,No Comment,"protected final HashMap<String, Enum<?>> _enumsById;",java.util.HashMap _enumsById,"protected , final "
com.fasterxml.jackson.databind.util.EnumResolver._defaultValue,Field,No Comment,protected final Enum<?> _defaultValue;,java.lang.Enum _defaultValue,"protected , final "
com.fasterxml.jackson.databind.util.EnumResolver._isIgnoreCase,Field,* Marker for case-insensitive handling\n     *\n     * @since 2.12,protected final boolean _isIgnoreCase;,boolean _isIgnoreCase,"protected , final "
com.fasterxml.jackson.databind.util.EnumResolver._isFromIntValue,Field,* Marker for case where value may come from {@code @JsonValue} annotated\n     * accessor and is expected/likely to come from actual integral number\n     * value (and not String).\n     *<p>\n     * Special case is needed since this specifically means that {@code Enum.index()}\n     * should NOT be used or default to.\n     *\n     * @since 2.13,protected final boolean _isFromIntValue;,boolean _isFromIntValue,"protected , final "
com.fasterxml.jackson.databind.util.RawValue._value,Field,"* Contents to serialize. Untyped because there are multiple types that are\n     * supported: {@link java.lang.String}, {@link JsonSerializable}, {@link SerializableString}.",protected Object _value;,java.lang.Object _value,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata.annotated,Field,No Comment,public final A annotated;,com.fasterxml.jackson.databind.introspect.Annotated annotated,"public , final "
com.fasterxml.jackson.databind.introspect.AnnotatedAndMetadata.metadata,Field,No Comment,public final M metadata;,java.lang.Object metadata,"public , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClass.NO_CREATORS,Field,No Comment,"private final static Creators NO_CREATORS = new Creators(null, Collections.<AnnotatedConstructor>emptyList(), Collections.<AnnotatedMethod>emptyList());",com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators NO_CREATORS,"private , final , static "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._type,Field,* @since 2.7,final protected JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._class,Field,"* Class for which annotations apply, and that owns other\n     * components (constructors, methods)",final protected Class<?> _class;,java.lang.Class _class,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._bindings,Field,* Type bindings to use for members of {@link #_class}.\n     *\n     * @since 2.7,final protected TypeBindings _bindings;,com.fasterxml.jackson.databind.type.TypeBindings _bindings,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._superTypes,Field,* Ordered set of super classes and interfaces of the\n     * class itself: included in order of precedence,final protected List<JavaType> _superTypes;,java.util.List _superTypes,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._annotationIntrospector,Field,* Filter used to determine which annotations to gather; used\n     * to optimize things so that unnecessary annotations are\n     * ignored.,final protected AnnotationIntrospector _annotationIntrospector;,com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._typeFactory,Field,* @since 2.7,final protected TypeFactory _typeFactory;,com.fasterxml.jackson.databind.type.TypeFactory _typeFactory,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._mixInResolver,Field,"* Object that knows mapping of mix-in classes (ones that contain\n     * annotations to add) with their target classes (ones that\n     * get these additional annotations ""mixed in"").",final protected MixInResolver _mixInResolver;,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._primaryMixIn,Field,* Primary mix-in class; one to use for the annotated class\n     * itself. Can be null.,final protected Class<?> _primaryMixIn;,java.lang.Class _primaryMixIn,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._collectAnnotations,Field,* Flag that indicates whether (fulll) annotation resolution should\n     * occur: starting with 2.11 is disabled for JDK container types.\n     *\n     * @since 2.11,final protected boolean _collectAnnotations;,boolean _collectAnnotations,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._classAnnotations,Field,"* Combined list of Jackson annotations that the class has,\n     * including inheritable ones from super classes and interfaces",final protected Annotations _classAnnotations;,com.fasterxml.jackson.databind.util.Annotations _classAnnotations,"final , protected "
com.fasterxml.jackson.databind.introspect.AnnotatedClass._creators,Field,* @since 2.9,protected Creators _creators;,com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators _creators,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedClass._memberMethods,Field,"* Member methods of interest; for now ones with 0 or 1 arguments\n     * (just optimization, since others won't be used now)",protected AnnotatedMethodMap _memberMethods;,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedClass._fields,Field,"* Member fields of interest: ones that are either public,\n     * or have at least one annotation.",protected List<AnnotatedField> _fields;,java.util.List _fields,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedClass._nonStaticInnerClass,Field,* Lazily determined property to see if this is a non-static inner\n     * class.\n     *\n     * @since 2.8.7,protected transient Boolean _nonStaticInnerClass;,java.lang.Boolean _nonStaticInnerClass,"protected , transient "
com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators.defaultConstructor,Field,"* Default constructor of the annotated class, if it has one.",public final AnnotatedConstructor defaultConstructor;,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor defaultConstructor,"public , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators.constructors,Field,"* Single argument constructors the class has, if any.",public final List<AnnotatedConstructor> constructors;,java.util.List constructors,"public , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators.creatorMethods,Field,* Single argument static methods that might be usable\n         * as factory methods,public final List<AnnotatedMethod> creatorMethods;,java.util.List creatorMethods,"public , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector.NO_ANNOTATIONS,Field,No Comment,protected final static Annotations NO_ANNOTATIONS = new NoAnnotations();,com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS,"protected , final , static "
com.fasterxml.jackson.databind.introspect.AnnotationCollector._data,Field,* Optional data to carry along,protected final Object _data;,java.lang.Object _data,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector.instance,Field,No Comment,public final static EmptyCollector instance = new EmptyCollector(null);,com.fasterxml.jackson.databind.introspect.AnnotationCollector$EmptyCollector instance,"public , final , static "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector._type,Field,No Comment,private Class<?> _type;,java.lang.Class _type,private 
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneCollector._value,Field,No Comment,private Annotation _value;,java.lang.annotation.Annotation _value,private 
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NCollector._annotations,Field,No Comment,"protected final HashMap<Class<?>, Annotation> _annotations;",java.util.HashMap _annotations,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$NoAnnotations.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation._type,Field,No Comment,private final Class<?> _type;,java.lang.Class _type,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$OneAnnotation._value,Field,No Comment,private final Annotation _value;,java.lang.annotation.Annotation _value,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations._type1,Field,No Comment,"private final Class<?> _type1, _type2;",java.lang.Class _type1,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations._type2,Field,No Comment,"private final Class<?> _type1, _type2;",java.lang.Class _type2,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations._value1,Field,No Comment,"private final Annotation _value1, _value2;",java.lang.annotation.Annotation _value1,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotationCollector$TwoAnnotations._value2,Field,No Comment,"private final Annotation _value1, _value2;",java.lang.annotation.Annotation _value2,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMethod.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMethod._method,Field,No Comment,final protected transient Method _method;,java.lang.reflect.Method _method,"final , protected , transient "
com.fasterxml.jackson.databind.introspect.AnnotatedMethod._paramClasses,Field,No Comment,protected Class<?>[] _paramClasses;,java.lang.Class[] _paramClasses,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedMethod._serialization,Field,* Field that is used to make JDK serialization work with this\n     * object.\n     *\n     * @since 2.1,protected Serialization _serialization;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization.clazz,Field,No Comment,protected Class<?> clazz;,java.lang.Class clazz,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization.name,Field,No Comment,protected String name;,java.lang.String name,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization.args,Field,No Comment,protected Class<?>[] args;,java.lang.Class[] args,protected 
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair._primary,Field,No Comment,"protected final AnnotationIntrospector _primary, _secondary;",com.fasterxml.jackson.databind.AnnotationIntrospector _primary,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair._secondary,Field,No Comment,"protected final AnnotationIntrospector _primary, _secondary;",com.fasterxml.jackson.databind.AnnotationIntrospector _secondary,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams._paramAnnotations,Field,* Annotations associated with parameters of the annotated\n     * entity (method or constructor parameters),protected final AnnotationMap[] _paramAnnotations;,com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations,"protected , final "
com.fasterxml.jackson.databind.introspect.PotentialCreators.propertiesBased,Field,"* Property-based Creator found, if any",public PotentialCreator propertiesBased;,com.fasterxml.jackson.databind.introspect.PotentialCreator propertiesBased,public 
com.fasterxml.jackson.databind.introspect.PotentialCreators.explicitDelegating,Field,No Comment,private List<PotentialCreator> explicitDelegating;,java.util.List explicitDelegating,private 
com.fasterxml.jackson.databind.introspect.PotentialCreators.implicitDelegatingConstructors,Field,No Comment,private List<PotentialCreator> implicitDelegatingConstructors;,java.util.List implicitDelegatingConstructors,private 
com.fasterxml.jackson.databind.introspect.PotentialCreators.implicitDelegatingFactories,Field,No Comment,private List<PotentialCreator> implicitDelegatingFactories;,java.util.List implicitDelegatingFactories,private 
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor._constructor,Field,No Comment,protected final Constructor<?> _constructor;,java.lang.reflect.Constructor _constructor,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor._serialization,Field,* Field that is used to make JDK serialization work with this\n     * object.\n     *\n     * @since 2.1,protected Serialization _serialization;,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization _serialization,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization.clazz,Field,No Comment,protected Class<?> clazz;,java.lang.Class clazz,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization.args,Field,No Comment,protected Class<?>[] args;,java.lang.Class[] args,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedParameter.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedParameter._owner,Field,"* Member (method, constructor) that this parameter belongs to",protected final AnnotatedWithParams _owner;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _owner,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotatedParameter._type,Field,"* JDK type of the parameter, possibly contains generic type information",protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotatedParameter._index,Field,* Index of the parameter within argument list,protected final int _index;,int _index,"protected , final "
com.fasterxml.jackson.databind.introspect.MemberKey.NO_CLASSES,Field,No Comment,final static Class<?>[] NO_CLASSES = new Class<?>[0];,java.lang.Class[] NO_CLASSES,"final , static "
com.fasterxml.jackson.databind.introspect.MemberKey._name,Field,No Comment,final String _name;,java.lang.String _name,final 
com.fasterxml.jackson.databind.introspect.MemberKey._argTypes,Field,No Comment,final Class<?>[] _argTypes;,java.lang.Class[] _argTypes,final 
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._config,Field,No Comment,protected final MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._forClass,Field,No Comment,protected final AnnotatedClass _forClass;,com.fasterxml.jackson.databind.introspect.AnnotatedClass _forClass,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._baseNameValidator,Field,* Optional validator for checking that base name,protected final BaseNameValidator _baseNameValidator;,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._stdBeanNaming,Field,No Comment,protected final boolean _stdBeanNaming;,boolean _stdBeanNaming,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._isGettersNonBoolean,Field,No Comment,protected final boolean _isGettersNonBoolean;,boolean _isGettersNonBoolean,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._getterPrefix,Field,No Comment,protected final String _getterPrefix;,java.lang.String _getterPrefix,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._isGetterPrefix,Field,* @since 2.14,protected final String _isGetterPrefix;,java.lang.String _isGetterPrefix,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy._mutatorPrefix,Field,"* Prefix used by auto-detected mutators (""setters""): usually ""set"",\n     * but differs for builder objects (""with"" by default).",protected final String _mutatorPrefix;,java.lang.String _mutatorPrefix,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider._setterPrefix,Field,No Comment,protected final String _setterPrefix;,java.lang.String _setterPrefix,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider._withPrefix,Field,No Comment,protected final String _withPrefix;,java.lang.String _withPrefix,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider._getterPrefix,Field,No Comment,protected final String _getterPrefix;,java.lang.String _getterPrefix,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider._isGetterPrefix,Field,No Comment,protected final String _isGetterPrefix;,java.lang.String _isGetterPrefix,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider._baseNameValidator,Field,No Comment,protected final BaseNameValidator _baseNameValidator;,com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$BaseNameValidator _baseNameValidator,"protected , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator._allowLowerCaseFirstChar,Field,No Comment,private final boolean _allowLowerCaseFirstChar;,boolean _allowLowerCaseFirstChar,"private , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$FirstCharBasedValidator._allowNonLetterFirstChar,Field,No Comment,private final boolean _allowNonLetterFirstChar;,boolean _allowNonLetterFirstChar,"private , final "
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$RecordNaming._fieldNames,Field,* Names of actual Record fields from definition; auto-detected.,protected final Set<String> _fieldNames;,java.util.Set _fieldNames,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector._mixInResolver,Field,No Comment,private final MixInResolver _mixInResolver;,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector._collectAnnotations,Field,* @since 2.11,private final boolean _collectAnnotations;,boolean _collectAnnotations,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder.typeContext,Field,No Comment,public TypeResolutionContext typeContext;,com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext,public 
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder.method,Field,"Method left empty for ""floating"" mix-in, filled in as need be",public Method method;,java.lang.reflect.Method method,public 
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder.annotations,Field,No Comment,public AnnotationCollector annotations;,com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations,public 
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition.EMPTY_INCLUDE,Field,No Comment,protected final static JsonInclude.Value EMPTY_INCLUDE = JsonInclude.Value.empty();,com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE,"protected , final , static "
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._overrides,Field,* External resolver that gets called before looking at any locally defined\n     * mix-in target classes.,protected final ClassIntrospector.MixInResolver _overrides;,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _overrides,"protected , final "
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver._localMixIns,Field,* Simple mix-in targets defined locally.,"protected Map<ClassKey, Class<?>> _localMixIns;",java.util.Map _localMixIns,protected 
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase._metadata,Field,* Additional information about property\n     *\n     * @since 2.3,protected final PropertyMetadata _metadata;,com.fasterxml.jackson.databind.PropertyMetadata _metadata,"protected , final "
com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase._aliases,Field,* @since 2.9,protected transient List<PropertyName> _aliases;,java.util.List _aliases,"protected , transient "
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector.instance,Field,"* Static immutable and shareable instance that can be used as\n     * ""null"" introspector: one that never finds any annotation\n     * information.",public final static NopAnnotationIntrospector instance = new NopAnnotationIntrospector() {\n\n    private static final long serialVersionUID = 1L;\n\n    @Override\n    public Version version() {\n        return com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION;\n    }\n};,com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector instance,"public , final , static "
com.fasterxml.jackson.databind.introspect.AnnotatedMember.serialVersionUID,Field,since 2.5,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMember._typeContext,Field,"* Context object needed for resolving generic type associated with this\n     * member (method parameter or return value, or field type).\n     *\n     * @since 2.7",protected final transient TypeResolutionContext _typeContext;,com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext,"protected , final , transient "
com.fasterxml.jackson.databind.introspect.AnnotatedMember._annotations,Field,no need to persist,protected final transient AnnotationMap _annotations;,com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations,"protected , final , transient "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.NO_ANNOTATIONS,Field,No Comment,private final static Annotations NO_ANNOTATIONS = AnnotationCollector.emptyAnnotations();,com.fasterxml.jackson.databind.util.Annotations NO_ANNOTATIONS,"private , final , static "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.CLS_OBJECT,Field,No Comment,private final static Class<?> CLS_OBJECT = Object.class;,java.lang.Class CLS_OBJECT,"private , final , static "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.CLS_ENUM,Field,No Comment,private final static Class<?> CLS_ENUM = Enum.class;,java.lang.Class CLS_ENUM,"private , final , static "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.CLS_LIST,Field,No Comment,private final static Class<?> CLS_LIST = List.class;,java.lang.Class CLS_LIST,"private , final , static "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver.CLS_MAP,Field,No Comment,private final static Class<?> CLS_MAP = Map.class;,java.lang.Class CLS_MAP,"private , final , static "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._config,Field,No Comment,private final MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._intr,Field,No Comment,private final AnnotationIntrospector _intr;,com.fasterxml.jackson.databind.AnnotationIntrospector _intr,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._mixInResolver,Field,No Comment,private final MixInResolver _mixInResolver;,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._bindings,Field,No Comment,private final TypeBindings _bindings;,com.fasterxml.jackson.databind.type.TypeBindings _bindings,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._type,Field,No Comment,private final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._class,Field,No Comment,private final Class<?> _class;,java.lang.Class _class,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._primaryMixin,Field,No Comment,private final Class<?> _primaryMixin;,java.lang.Class _primaryMixin,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver._collectAnnotations,Field,* @since 2.11,private final boolean _collectAnnotations;,boolean _collectAnnotations,"private , final "
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember._declaringClass,Field,No Comment,protected final Class<?> _declaringClass;,java.lang.Class _declaringClass,"protected , final "
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember._type,Field,* @since 2.8 with this signature; had <code>_rawType</code> earlier,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.introspect.VirtualAnnotatedMember._name,Field,No Comment,protected final String _name;,java.lang.String _name,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotationMap._annotations,Field,No Comment,"protected HashMap<Class<?>, Annotation> _annotations;",java.util.HashMap _annotations,protected 
com.fasterxml.jackson.databind.introspect.BasicBeanDescription.NO_VIEWS,Field,since 2.9,private final static Class<?>[] NO_VIEWS = new Class<?>[0];,java.lang.Class[] NO_VIEWS,"private , final , static "
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._propCollector,Field,* We will hold a reference to the collector in cases where\n     * information is lazily accessed and constructed; properties\n     * are only accessed when they are actually needed.,final protected POJOPropertiesCollector _propCollector;,com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector _propCollector,"final , protected "
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._config,Field,No Comment,final protected MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"final , protected "
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._annotationIntrospector,Field,No Comment,final protected AnnotationIntrospector _annotationIntrospector;,com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector,"final , protected "
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._classInfo,Field,* Information collected about the class introspected.,final protected AnnotatedClass _classInfo;,com.fasterxml.jackson.databind.introspect.AnnotatedClass _classInfo,"final , protected "
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._defaultViews,Field,* @since 2.9,protected Class<?>[] _defaultViews;,java.lang.Class[] _defaultViews,protected 
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._defaultViewsResolved,Field,* @since 2.9,protected boolean _defaultViewsResolved;,boolean _defaultViewsResolved,protected 
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._properties,Field,* Properties collected for the POJO; initialized as needed.,protected List<BeanPropertyDefinition> _properties;,java.util.List _properties,protected 
com.fasterxml.jackson.databind.introspect.BasicBeanDescription._objectIdInfo,Field,"* Details of Object Id to include, if any",protected ObjectIdInfo _objectIdInfo;,com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo,protected 
com.fasterxml.jackson.databind.introspect.ObjectIdInfo._propertyName,Field,No Comment,protected final PropertyName _propertyName;,com.fasterxml.jackson.databind.PropertyName _propertyName,"protected , final "
com.fasterxml.jackson.databind.introspect.ObjectIdInfo._generator,Field,No Comment,protected final Class<? extends ObjectIdGenerator<?>> _generator;,java.lang.Class _generator,"protected , final "
com.fasterxml.jackson.databind.introspect.ObjectIdInfo._resolver,Field,No Comment,protected final Class<? extends ObjectIdResolver> _resolver;,java.lang.Class _resolver,"protected , final "
com.fasterxml.jackson.databind.introspect.ObjectIdInfo._scope,Field,No Comment,protected final Class<?> _scope;,java.lang.Class _scope,"protected , final "
com.fasterxml.jackson.databind.introspect.ObjectIdInfo._alwaysAsId,Field,No Comment,protected final boolean _alwaysAsId;,boolean _alwaysAsId,"protected , final "
com.fasterxml.jackson.databind.introspect.ObjectIdInfo.EMPTY,Field,* @since 2.8.9,"private final static ObjectIdInfo EMPTY = new ObjectIdInfo(PropertyName.NO_NAME, Object.class, null, false, null);",com.fasterxml.jackson.databind.introspect.ObjectIdInfo EMPTY,"private , final , static "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder.NOT_REFEFERENCE_PROP,Field,* Marker value used to denote that no reference-property information found for\n     * this property\n     *\n     * @since 2.9,"private final static AnnotationIntrospector.ReferenceProperty NOT_REFEFERENCE_PROP = AnnotationIntrospector.ReferenceProperty.managed("""");",com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty NOT_REFEFERENCE_PROP,"private , final , static "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._forSerialization,Field,* Whether property is being composed for serialization\n     * (true) or deserialization (false),protected final boolean _forSerialization;,boolean _forSerialization,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._config,Field,No Comment,protected final MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._annotationIntrospector,Field,No Comment,protected final AnnotationIntrospector _annotationIntrospector;,com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._name,Field,* External name of logical property; may change with\n     * renaming (by new instance being constructed using\n     * a new name),protected final PropertyName _name;,com.fasterxml.jackson.databind.PropertyName _name,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._internalName,Field,"* Original internal name, derived from accessor, of this\n     * property. Will not be changed by renaming.",protected final PropertyName _internalName;,com.fasterxml.jackson.databind.PropertyName _internalName,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._fields,Field,No Comment,protected Linked<AnnotatedField> _fields;,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _fields,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._ctorParameters,Field,No Comment,protected Linked<AnnotatedParameter> _ctorParameters;,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _ctorParameters,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._getters,Field,No Comment,protected Linked<AnnotatedMethod> _getters;,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _getters,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._setters,Field,No Comment,protected Linked<AnnotatedMethod> _setters;,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _setters,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._metadata,Field,No Comment,protected transient PropertyMetadata _metadata;,com.fasterxml.jackson.databind.PropertyMetadata _metadata,"protected , transient "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder._referenceInfo,Field,* Lazily accessed information about this property iff it is a forward or\n     * back reference.\n     *\n     * @since 2.9,protected transient AnnotationIntrospector.ReferenceProperty _referenceInfo;,com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty _referenceInfo,"protected , transient "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$MemberIterator.next,Field,No Comment,private Linked<T> next;,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next,private 
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked.value,Field,No Comment,public final T value;,java.lang.Object value,"public , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked.next,Field,No Comment,public final Linked<T> next;,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next,"public , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked.name,Field,No Comment,public final PropertyName name;,com.fasterxml.jackson.databind.PropertyName name,"public , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked.isNameExplicit,Field,No Comment,public final boolean isNameExplicit;,boolean isNameExplicit,"public , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked.isVisible,Field,No Comment,public final boolean isVisible;,boolean isVisible,"public , final "
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked.isMarkedIgnored,Field,No Comment,public final boolean isMarkedIgnored;,boolean isMarkedIgnored,"public , final "
com.fasterxml.jackson.databind.introspect.CollectorBase.NO_ANNOTATION_MAPS,Field,No Comment,protected final static AnnotationMap[] NO_ANNOTATION_MAPS = new AnnotationMap[0];,com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS,"protected , final , static "
com.fasterxml.jackson.databind.introspect.CollectorBase.NO_ANNOTATIONS,Field,No Comment,protected final static Annotation[] NO_ANNOTATIONS = new Annotation[0];,java.lang.annotation.Annotation[] NO_ANNOTATIONS,"protected , final , static "
com.fasterxml.jackson.databind.introspect.CollectorBase._intr,Field,No Comment,protected final AnnotationIntrospector _intr;,com.fasterxml.jackson.databind.AnnotationIntrospector _intr,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap._methods,Field,No Comment,"protected Map<MemberKey, AnnotatedMethod> _methods;",java.util.Map _methods,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._config,Field,* Configuration settings,protected final MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._accessorNaming,Field,"* Handler used for name-mangling of getter, mutator (setter/with) methods\n     *\n     * @since 2.12",protected final AccessorNamingStrategy _accessorNaming;,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy _accessorNaming,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._forSerialization,Field,"* True if introspection is done for serialization (giving\n     * precedence for serialization annotations), or not (false, deserialization)",protected final boolean _forSerialization;,boolean _forSerialization,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._type,Field,* Type of POJO for which properties are being collected.,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._classDef,Field,"* Low-level introspected class information (methods, fields etc)",protected final AnnotatedClass _classDef;,com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._visibilityChecker,Field,No Comment,protected final VisibilityChecker<?> _visibilityChecker;,com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._annotationIntrospector,Field,No Comment,protected final AnnotationIntrospector _annotationIntrospector;,com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._useAnnotations,Field,* @since 2.9,protected final boolean _useAnnotations;,boolean _useAnnotations,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._isRecordType,Field,* @since 2.15,protected final boolean _isRecordType;,boolean _isRecordType,"protected , final "
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._collected,Field,* State flag we keep to indicate whether actual property information\n     * has been collected or not.,protected boolean _collected;,boolean _collected,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._properties,Field,"* Set of logical property information collected so far.\n     *<p>\n     * Since 2.6, this has been constructed (more) lazily, to defer\n     * throwing of exceptions for potential conflicts in cases where\n     * this may not be an actual problem.","protected LinkedHashMap<String, POJOPropertyBuilder> _properties;",java.util.LinkedHashMap _properties,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._creatorProperties,Field,No Comment,protected List<POJOPropertyBuilder> _creatorProperties;,java.util.List _creatorProperties,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._potentialCreators,Field,* @since 2.18,protected PotentialCreators _potentialCreators;,com.fasterxml.jackson.databind.introspect.PotentialCreators _potentialCreators,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._fieldRenameMappings,Field,"* A set of ""field renamings"" that have been discovered, indicating\n     * intended renaming of other accessors: key is the implicit original\n     * name and value intended name to use instead.\n     *<p>\n     * Note that these renamings are applied earlier than ""regular"" (explicit)\n     * renamings and affect implicit name: their effect may be changed by\n     * further renaming based on explicit indicators.\n     * The main use case is to effectively relink accessors based on fields\n     * discovered, and used to sort of correct otherwise missing linkage between\n     * fields and other accessors.\n     *\n     * @since 2.11","protected Map<PropertyName, PropertyName> _fieldRenameMappings;",java.util.Map _fieldRenameMappings,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._anyGetters,Field,No Comment,protected LinkedList<AnnotatedMember> _anyGetters;,java.util.LinkedList _anyGetters,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._anyGetterField,Field,* @since 2.12,protected LinkedList<AnnotatedMember> _anyGetterField;,java.util.LinkedList _anyGetterField,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._anySetters,Field,No Comment,protected LinkedList<AnnotatedMethod> _anySetters;,java.util.LinkedList _anySetters,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._anySetterField,Field,No Comment,protected LinkedList<AnnotatedMember> _anySetterField;,java.util.LinkedList _anySetterField,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._jsonKeyAccessors,Field,"* Accessors (field or ""getter"" method annotated with\n     * {@link com.fasterxml.jackson.annotation.JsonKey}\n     *\n     * @since 2.12",protected LinkedList<AnnotatedMember> _jsonKeyAccessors;,java.util.LinkedList _jsonKeyAccessors,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._jsonValueAccessors,Field,"* Accessors (field or ""getter"" method) annotated with\n     * {@link com.fasterxml.jackson.annotation.JsonValue}",protected LinkedList<AnnotatedMember> _jsonValueAccessors;,java.util.LinkedList _jsonValueAccessors,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._ignoredPropertyNames,Field,* Lazily collected list of properties that can be implicitly\n     * ignored during serialization; only updated when collecting\n     * information for deserialization purposes,protected HashSet<String> _ignoredPropertyNames;,java.util.HashSet _ignoredPropertyNames,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._injectables,Field,* Lazily collected list of members that were annotated to\n     * indicate that they represent mutators for deserializer\n     * value injection.,"protected LinkedHashMap<Object, AnnotatedMember> _injectables;",java.util.LinkedHashMap _injectables,protected 
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector._formatOverrides,Field,* Lazily accessed information about POJO format overrides\n     *\n     * @since 2.17,protected JsonFormat.Value _formatOverrides;,com.fasterxml.jackson.annotation.JsonFormat$Value _formatOverrides,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector._typeFactory,Field,No Comment,private final TypeFactory _typeFactory;,com.fasterxml.jackson.databind.type.TypeFactory _typeFactory,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector._mixInResolver,Field,No Comment,private final MixInResolver _mixInResolver;,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector._collectAnnotations,Field,* @since 2.11,private final boolean _collectAnnotations;,boolean _collectAnnotations,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder.typeContext,Field,No Comment,public final TypeResolutionContext typeContext;,com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext,"public , final "
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder.field,Field,No Comment,public final Field field;,java.lang.reflect.Field field,"public , final "
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder.annotations,Field,No Comment,public AnnotationCollector annotations;,com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations,public 
com.fasterxml.jackson.databind.introspect.AnnotatedField.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedField._field,Field,* Actual {@link Field} used for access.\n     *<p>\n     * Transient since it cannot be persisted directly using\n     * JDK serialization,protected final transient Field _field;,java.lang.reflect.Field _field,"protected , final , transient "
com.fasterxml.jackson.databind.introspect.AnnotatedField._serialization,Field,* Temporary field required for JDK serialization support,protected Serialization _serialization;,com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization.clazz,Field,No Comment,protected Class<?> clazz;,java.lang.Class clazz,protected 
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization.name,Field,No Comment,protected String name;,java.lang.String name,protected 
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic._typeFactory,Field,No Comment,private final TypeFactory _typeFactory;,com.fasterxml.jackson.databind.type.TypeFactory _typeFactory,"private , final "
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic._bindings,Field,No Comment,private final TypeBindings _bindings;,com.fasterxml.jackson.databind.type.TypeBindings _bindings,"private , final "
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Empty._typeFactory,Field,No Comment,private final TypeFactory _typeFactory;,com.fasterxml.jackson.databind.type.TypeFactory _typeFactory,"private , final "
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Base.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.PotentialCreator.NO_NAMES,Field,No Comment,private static final PropertyName[] NO_NAMES = new PropertyName[0];,com.fasterxml.jackson.databind.PropertyName[] NO_NAMES,"private , static , final "
com.fasterxml.jackson.databind.introspect.PotentialCreator._creator,Field,No Comment,private final AnnotatedWithParams _creator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _creator,"private , final "
com.fasterxml.jackson.databind.introspect.PotentialCreator._isAnnotated,Field,No Comment,private final boolean _isAnnotated;,boolean _isAnnotated,"private , final "
com.fasterxml.jackson.databind.introspect.PotentialCreator._creatorMode,Field,"* Declared Mode of the creator, if explicitly annotated; {@code null} otherwise",private JsonCreator.Mode _creatorMode;,com.fasterxml.jackson.annotation.JsonCreator$Mode _creatorMode,private 
com.fasterxml.jackson.databind.introspect.PotentialCreator._implicitParamNames,Field,No Comment,private PropertyName[] _implicitParamNames;,com.fasterxml.jackson.databind.PropertyName[] _implicitParamNames,private 
com.fasterxml.jackson.databind.introspect.PotentialCreator._explicitParamNames,Field,No Comment,private PropertyName[] _explicitParamNames;,com.fasterxml.jackson.databind.PropertyName[] _explicitParamNames,private 
com.fasterxml.jackson.databind.introspect.PotentialCreator.propertyDefs,Field,* Parameter definitions if (and only if) this represents a\n     * Property-based Creator.,private List<BeanPropertyDefinition> propertyDefs;,java.util.List propertyDefs,private 
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.ANNOTATIONS_TO_INFER_SER,Field,No Comment,"@SuppressWarnings(""unchecked"")\nprivate final static Class<? extends Annotation>[] ANNOTATIONS_TO_INFER_SER = (Class<? extends Annotation>[]) new Class<?>[] { JsonSerialize.class, JsonView.class, JsonFormat.class, JsonTypeInfo.class, JsonRawValue.class, JsonUnwrapped.class, JsonBackReference.class, JsonManagedReference.class };",java.lang.Class[] ANNOTATIONS_TO_INFER_SER,"private , final , static "
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector.ANNOTATIONS_TO_INFER_DESER,Field,No Comment,"@SuppressWarnings(""unchecked"")\nprivate final static Class<? extends Annotation>[] ANNOTATIONS_TO_INFER_DESER = (Class<? extends Annotation>[]) new Class<?>[] { JsonDeserialize.class, JsonView.class, JsonFormat.class, JsonTypeInfo.class, JsonUnwrapped.class, JsonBackReference.class, JsonManagedReference.class, // since 2.9\nJsonMerge.class };",java.lang.Class[] ANNOTATIONS_TO_INFER_DESER,"private , final , static "
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._java7Helper,Field,here we do not really need any handling; but for extra-safety use try-catch,private static final Java7Support _java7Helper;,com.fasterxml.jackson.databind.ext.Java7Support _java7Helper,"private , static , final "
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._annotationsInside,Field,"* Since introspection of annotation types is a performance issue in some\n     * use cases (rare, but do exist), let's try a simple cache to reduce\n     * need for actual meta-annotation introspection.\n     *<p>\n     * Non-final only because it needs to be re-created after deserialization.\n     *<p>\n     * Starting with 2.15 key is {@link String} (before that was {@link Class})\n     * to avoid unintentional retention of third-party annotation class types.\n     *\n     * @since 2.7","protected transient LRUMap<String, Boolean> _annotationsInside = new LRUMap<String, Boolean>(48, 48);",com.fasterxml.jackson.databind.util.LRUMap _annotationsInside,"protected , transient "
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector._cfgConstructorPropertiesImpliesCreator,Field,* See {@link #setConstructorPropertiesImpliesCreator(boolean)} for\n     * explanation.\n     *<p>\n     * Defaults to true.\n     *\n     * @since 2.7.4,protected boolean _cfgConstructorPropertiesImpliesCreator = true;,boolean _cfgConstructorPropertiesImpliesCreator,protected 
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.CLS_OBJECT,Field,No Comment,private final static Class<?> CLS_OBJECT = Object.class;,java.lang.Class CLS_OBJECT,"private , final , static "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.CLS_STRING,Field,No Comment,private final static Class<?> CLS_STRING = String.class;,java.lang.Class CLS_STRING,"private , final , static "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.CLS_JSON_NODE,Field,No Comment,private final static Class<?> CLS_JSON_NODE = JsonNode.class;,java.lang.Class CLS_JSON_NODE,"private , final , static "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.STRING_DESC,Field,"We keep a small set of pre-constructed descriptions to use for\n     * common non-structured values, such as Numbers and Strings.\n     * This is strictly performance optimization to reduce what is\n     * usually one-time cost, but seems useful for some cases considering\n     * simplicity.\n     *\n     * @since 2.4",protected final static BasicBeanDescription STRING_DESC;,com.fasterxml.jackson.databind.introspect.BasicBeanDescription STRING_DESC,"protected , final , static "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.BOOLEAN_DESC,Field,No Comment,protected final static BasicBeanDescription BOOLEAN_DESC;,com.fasterxml.jackson.databind.introspect.BasicBeanDescription BOOLEAN_DESC,"protected , final , static "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.INT_DESC,Field,No Comment,protected final static BasicBeanDescription INT_DESC;,com.fasterxml.jackson.databind.introspect.BasicBeanDescription INT_DESC,"protected , final , static "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.LONG_DESC,Field,No Comment,protected final static BasicBeanDescription LONG_DESC;,com.fasterxml.jackson.databind.introspect.BasicBeanDescription LONG_DESC,"protected , final , static "
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector.OBJECT_DESC,Field,No Comment,protected final static BasicBeanDescription OBJECT_DESC;,com.fasterxml.jackson.databind.introspect.BasicBeanDescription OBJECT_DESC,"protected , final , static "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std.DEFAULT,Field,"* This is the canonical base instance, configured with default\n         * visibility values","protected final static Std DEFAULT = new Std(// getter\nVisibility.PUBLIC_ONLY, // is-getter\nVisibility.PUBLIC_ONLY, // setter\nVisibility.ANY, // creator -- legacy, to support single-arg ctors\nVisibility.ANY, // field\nVisibility.PUBLIC_ONLY);",com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std DEFAULT,"protected , final , static "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std.ALL_PUBLIC,Field,* Alternate base settings used for JDK types: public visibility\n         * required for everything\n         *\n         * @since 2.13,"protected final static Std ALL_PUBLIC = new Std(// getter\nVisibility.PUBLIC_ONLY, // is-getter\nVisibility.PUBLIC_ONLY, // setter\nVisibility.PUBLIC_ONLY, // creator (single-arg ctors)\nVisibility.PUBLIC_ONLY, // field\nVisibility.PUBLIC_ONLY);",com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std ALL_PUBLIC,"protected , final , static "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std._getterMinLevel,Field,No Comment,protected final Visibility _getterMinLevel;,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterMinLevel,"protected , final "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std._isGetterMinLevel,Field,No Comment,protected final Visibility _isGetterMinLevel;,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterMinLevel,"protected , final "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std._setterMinLevel,Field,No Comment,protected final Visibility _setterMinLevel;,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterMinLevel,"protected , final "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std._creatorMinLevel,Field,No Comment,protected final Visibility _creatorMinLevel;,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorMinLevel,"protected , final "
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std._fieldMinLevel,Field,No Comment,protected final Visibility _fieldMinLevel;,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldMinLevel,"protected , final "
com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector._typeContext,Field,No Comment,private final TypeResolutionContext _typeContext;,com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector._collectAnnotations,Field,* @since 2.11,private final boolean _collectAnnotations;,boolean _collectAnnotations,"private , final "
com.fasterxml.jackson.databind.introspect.AnnotatedCreatorCollector._defaultConstructor,Field,No Comment,private AnnotatedConstructor _defaultConstructor;,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor,private 
com.fasterxml.jackson.databind.DeserializationContext.serialVersionUID,Field,2.6,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.DeserializationContext._cache,Field,* Object that handle details of {@link JsonDeserializer} caching.,protected final DeserializerCache _cache;,com.fasterxml.jackson.databind.deser.DeserializerCache _cache,"protected , final "
com.fasterxml.jackson.databind.DeserializationContext._factory,Field,"* Read-only factory instance; exposed to let\n     * owners (<code>ObjectMapper</code>, <code>ObjectReader</code>)\n     * access it.",protected final DeserializerFactory _factory;,com.fasterxml.jackson.databind.deser.DeserializerFactory _factory,"protected , final "
com.fasterxml.jackson.databind.DeserializationContext._config,Field,* Generic deserialization processing configuration,protected final DeserializationConfig _config;,com.fasterxml.jackson.databind.DeserializationConfig _config,"protected , final "
com.fasterxml.jackson.databind.DeserializationContext._featureFlags,Field,* Bitmap of {@link DeserializationFeature}s that are enabled,protected final int _featureFlags;,int _featureFlags,"protected , final "
com.fasterxml.jackson.databind.DeserializationContext._readCapabilities,Field,* Capabilities of the input format.\n     *\n     * @since 2.12,protected final JacksonFeatureSet<StreamReadCapability> _readCapabilities;,com.fasterxml.jackson.core.util.JacksonFeatureSet _readCapabilities,"protected , final "
com.fasterxml.jackson.databind.DeserializationContext._view,Field,"* Currently active view, if any.",protected final Class<?> _view;,java.lang.Class _view,"protected , final "
com.fasterxml.jackson.databind.DeserializationContext._parser,Field,* Currently active parser used for deserialization.\n     * May be different from the outermost parser\n     * when content is buffered.,protected transient JsonParser _parser;,com.fasterxml.jackson.core.JsonParser _parser,"protected , transient "
com.fasterxml.jackson.databind.DeserializationContext._injectableValues,Field,* Object used for resolving references to injectable\n     * values.,protected final InjectableValues _injectableValues;,com.fasterxml.jackson.databind.InjectableValues _injectableValues,"protected , final "
com.fasterxml.jackson.databind.DeserializationContext._arrayBuilders,Field,No Comment,protected transient ArrayBuilders _arrayBuilders;,com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders,"protected , transient "
com.fasterxml.jackson.databind.DeserializationContext._objectBuffer,Field,No Comment,protected transient ObjectBuffer _objectBuffer;,com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer,"protected , transient "
com.fasterxml.jackson.databind.DeserializationContext._dateFormat,Field,No Comment,protected transient DateFormat _dateFormat;,java.text.DateFormat _dateFormat,"protected , transient "
com.fasterxml.jackson.databind.DeserializationContext._attributes,Field,* Lazily-constructed holder for per-call attributes.\n     *\n     * @since 2.3,protected transient ContextAttributes _attributes;,com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes,"protected , transient "
com.fasterxml.jackson.databind.DeserializationContext._currentType,Field,"* Type of {@link JsonDeserializer} (or, more specifically,\n     *   {@link ContextualDeserializer}) that is being\n     *   contextualized currently.\n     *\n     * @since 2.5",protected LinkedNode<JavaType> _currentType;,com.fasterxml.jackson.databind.util.LinkedNode _currentType,protected 
com.fasterxml.jackson.databind.BeanDescription._type,Field,"* Bean type information, including raw class and possible\n     * generics information",protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate._intr,Field,No Comment,protected final AnnotationIntrospector _intr;,com.fasterxml.jackson.databind.AnnotationIntrospector _intr,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate._creator,Field,No Comment,protected final AnnotatedWithParams _creator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _creator,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate._paramCount,Field,No Comment,protected final int _paramCount;,int _paramCount,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate._params,Field,No Comment,protected final Param[] _params;,com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param[] _params,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param.annotated,Field,No Comment,public final AnnotatedParameter annotated;,com.fasterxml.jackson.databind.introspect.AnnotatedParameter annotated,"public , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param.propDef,Field,No Comment,public final BeanPropertyDefinition propDef;,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition propDef,"public , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCandidate$Param.injection,Field,No Comment,public final JacksonInject.Value injection;,com.fasterxml.jackson.annotation.JacksonInject$Value injection,"public , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._parser,Field,No Comment,protected final JsonParser _parser;,com.fasterxml.jackson.core.JsonParser _parser,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._context,Field,No Comment,protected final DeserializationContext _context;,com.fasterxml.jackson.databind.DeserializationContext _context,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._objectIdReader,Field,No Comment,protected final ObjectIdReader _objectIdReader;,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._creatorParameters,Field,* Buffer used for storing creator parameters for constructing\n     * instance.,protected final Object[] _creatorParameters;,java.lang.Object[] _creatorParameters,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._paramsNeeded,Field,* Number of creator parameters for which we have not yet received\n     * values.,protected int _paramsNeeded;,int _paramsNeeded,protected 
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._paramsSeen,Field,* Bitflag used to track parameters found from incoming data\n     * when number of parameters is\n     * less than 32 (fits in int).,protected int _paramsSeen;,int _paramsSeen,protected 
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._paramsSeenBig,Field,* Bitflag used to track parameters found from incoming data\n     * when number of parameters is\n     * 32 or higher.,protected final BitSet _paramsSeenBig;,java.util.BitSet _paramsSeenBig,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._buffered,Field,"* If we get non-creator parameters before or between\n     * creator parameters, those need to be buffered. Buffer\n     * is just a simple linked list",protected PropertyValue _buffered;,com.fasterxml.jackson.databind.deser.impl.PropertyValue _buffered,protected 
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._idValue,Field,"* In case there is an Object Id property to handle, this is the value\n     * we have for it.",protected Object _idValue;,java.lang.Object _idValue,protected 
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._anyParamSetter,Field,"* ""Any setter"" property bound to a Creator parameter (via {@code @JsonAnySetter})\n     *\n     * @since 2.18",protected final SettableAnyProperty _anyParamSetter;,com.fasterxml.jackson.databind.deser.SettableAnyProperty _anyParamSetter,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer._anyParamBuffered,Field,"* If ""Any-setter-via-Creator"" exists, we will need to buffer values to feed it,\n     * separate from regular, non-creator properties (see {@code _buffered}).\n     *\n     * @since 2.18",protected PropertyValue _anyParamBuffered;,com.fasterxml.jackson.databind.deser.impl.PropertyValue _anyParamBuffered,protected 
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$JDKValueInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator.INSTANCE,Field,No Comment,static final ArrayListInstantiator INSTANCE = new ArrayListInstantiator();,com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ArrayListInstantiator INSTANCE,"static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedListInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashSetInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashSetInstantiator.INSTANCE,Field,No Comment,static final HashSetInstantiator INSTANCE = new HashSetInstantiator();,com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashSetInstantiator INSTANCE,"static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$TreeSetInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ConcurrentHashMapInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator.INSTANCE,Field,No Comment,static final HashMapInstantiator INSTANCE = new HashMapInstantiator();,com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$HashMapInstantiator INSTANCE,"static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator.INSTANCE,Field,No Comment,static final LinkedHashMapInstantiator INSTANCE = new LinkedHashMapInstantiator();,com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$LinkedHashMapInstantiator INSTANCE,"static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$TreeMapInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ConstantValueInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.JDKValueInstantiators$ConstantValueInstantiator._value,Field,No Comment,protected final Object _value;,java.lang.Object _value,"protected , final "
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._caseInsensitive,Field,* @since 2.5,protected final boolean _caseInsensitive;,boolean _caseInsensitive,"protected , final "
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._hashMask,Field,No Comment,private int _hashMask;,int _hashMask,private 
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._size,Field,* Number of entries stored in the hash area.,private int _size;,int _size,private 
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._spillCount,Field,No Comment,private int _spillCount;,int _spillCount,private 
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._hashArea,Field,* Hash area that contains key/property pairs in adjacent elements.,private Object[] _hashArea;,java.lang.Object[] _hashArea,private 
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._propsInOrder,Field,"* Array of properties in the exact order they were handed in. This is\n     * used by as-array serialization, deserialization.",private final SettableBeanProperty[] _propsInOrder;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propsInOrder,"private , final "
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._aliasDefs,Field,"* Configuration of alias mappings, indexed by unmodified property name\n     * to unmodified aliases, if any; entries only included for properties\n     * that do have aliases.\n     * This is is used for constructing actual reverse lookup mapping, if\n     * needed, taking into account possible case-insensitivity, as well\n     * as possibility of name prefixes.\n     *\n     * @since 2.9","private final Map<String, List<PropertyName>> _aliasDefs;",java.util.Map _aliasDefs,"private , final "
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._aliasMapping,Field,* Mapping from secondary names (aliases) to primary names.\n     *\n     * @since 2.9,"private final Map<String, String> _aliasMapping;",java.util.Map _aliasMapping,"private , final "
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap._locale,Field,"* We require {@link Locale} since case changes are locale-sensitive in certain\n     * cases (see <a href=""https://en.wikipedia.org/wiki/Dotted_and_dotless_I"">Turkish I</a>\n     * for example)\n     *\n     * @since 2.11",private final Locale _locale;,java.util.Locale _locale,"private , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty._objectIdReader,Field,No Comment,protected final ObjectIdReader _objectIdReader;,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader,"protected , final "
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider.SKIPPER,Field,No Comment,private final static NullsConstantProvider SKIPPER = new NullsConstantProvider(null);,com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider SKIPPER,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider.NULLER,Field,No Comment,private final static NullsConstantProvider NULLER = new NullsConstantProvider(null);,com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider NULLER,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider._nullValue,Field,No Comment,protected final Object _nullValue;,java.lang.Object _nullValue,"protected , final "
com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider._access,Field,No Comment,protected final AccessPattern _access;,com.fasterxml.jackson.databind.util.AccessPattern _access,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty._referenceName,Field,No Comment,protected final String _referenceName;,java.lang.String _referenceName,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty._isContainer,Field,"* Flag that indicates whether property to handle is a container type\n     * (array, Collection, Map) or not.",protected final boolean _isContainer;,boolean _isContainer,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty._backProperty,Field,No Comment,protected final SettableBeanProperty _backProperty;,com.fasterxml.jackson.databind.deser.SettableBeanProperty _backProperty,"protected , final "
com.fasterxml.jackson.databind.deser.impl.FieldProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.FieldProperty._annotated,Field,No Comment,final protected AnnotatedField _annotated;,com.fasterxml.jackson.databind.introspect.AnnotatedField _annotated,"final , protected "
com.fasterxml.jackson.databind.deser.impl.FieldProperty._field,Field,* Actual field to set when deserializing this property.\n     * Transient since there is no need to persist; only needed during\n     * construction of objects.,final protected transient Field _field;,java.lang.reflect.Field _field,"final , protected , transient "
com.fasterxml.jackson.databind.deser.impl.FieldProperty._skipNulls,Field,* @since 2.9,final protected boolean _skipNulls;,boolean _skipNulls,"final , protected "
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer._delegate,Field,* Deserializer we delegate operations that we cannot handle.,protected final BeanDeserializerBase _delegate;,com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate,"protected , final "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer._orderedProperties,Field,* Properties in order expected to be found in JSON array.,protected final SettableBeanProperty[] _orderedProperties;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ErrorThrowingDeserializer._cause,Field,No Comment,private final Error _cause;,java.lang.Error _cause,"private , final "
com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.NullsAsEmptyProvider._deserializer,Field,No Comment,protected final JsonDeserializer<?> _deserializer;,com.fasterxml.jackson.databind.JsonDeserializer _deserializer,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader._idType,Field,No Comment,protected final JavaType _idType;,com.fasterxml.jackson.databind.JavaType _idType,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader.propertyName,Field,No Comment,public final PropertyName propertyName;,com.fasterxml.jackson.databind.PropertyName propertyName,"public , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader.generator,Field,* Blueprint generator instance: actual instance will be\n     * fetched from {@link SerializerProvider} using this as\n     * the key.,public final ObjectIdGenerator<?> generator;,com.fasterxml.jackson.annotation.ObjectIdGenerator generator,"public , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader.resolver,Field,No Comment,public final ObjectIdResolver resolver;,com.fasterxml.jackson.annotation.ObjectIdResolver resolver,"public , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader._deserializer,Field,* Deserializer used for deserializing id values.,protected final JsonDeserializer<Object> _deserializer;,com.fasterxml.jackson.databind.JsonDeserializer _deserializer,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader.idProperty,Field,No Comment,public final SettableBeanProperty idProperty;,com.fasterxml.jackson.databind.deser.SettableBeanProperty idProperty,"public , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValue.next,Field,No Comment,public final PropertyValue next;,com.fasterxml.jackson.databind.deser.impl.PropertyValue next,"public , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValue.value,Field,* Value to assign when POJO has been instantiated.,public final Object value;,java.lang.Object value,"public , final "
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular._property,Field,No Comment,final SettableBeanProperty _property;,com.fasterxml.jackson.databind.deser.SettableBeanProperty _property,final 
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any._property,Field,No Comment,final SettableAnyProperty _property;,com.fasterxml.jackson.databind.deser.SettableAnyProperty _property,final 
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any._propertyName,Field,No Comment,final String _propertyName;,java.lang.String _propertyName,final 
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map._key,Field,No Comment,final Object _key;,java.lang.Object _key,final 
com.fasterxml.jackson.databind.deser.impl.PropertyValue$AnyParameter._property,Field,No Comment,final SettableAnyProperty _property;,com.fasterxml.jackson.databind.deser.SettableAnyProperty _property,final 
com.fasterxml.jackson.databind.deser.impl.PropertyValue$AnyParameter._propertyName,Field,No Comment,final String _propertyName;,java.lang.String _propertyName,final 
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._beanType,Field,No Comment,private final JavaType _beanType;,com.fasterxml.jackson.databind.JavaType _beanType,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._properties,Field,No Comment,private final ExtTypedProperty[] _properties;,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._nameToPropertyIndex,Field,"* Mapping from external property ids to one or more indexes;\n     * in most cases single index as <code>Integer</code>, but\n     * occasionally same name maps to multiple ones: if so,\n     * <code>List&lt;Integer&gt;</code>.","private final Map<String, Object> _nameToPropertyIndex;",java.util.Map _nameToPropertyIndex,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._typeIds,Field,No Comment,private final String[] _typeIds;,java.lang.String[] _typeIds,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler._tokens,Field,No Comment,private final TokenBuffer[] _tokens;,com.fasterxml.jackson.databind.util.TokenBuffer[] _tokens,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder._beanType,Field,No Comment,private final JavaType _beanType;,com.fasterxml.jackson.databind.JavaType _beanType,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder._properties,Field,No Comment,private final List<ExtTypedProperty> _properties = new ArrayList<>();,java.util.List _properties,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder._nameToPropertyIndex,Field,No Comment,"private final Map<String, Object> _nameToPropertyIndex = new HashMap<>();",java.util.Map _nameToPropertyIndex,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty._property,Field,No Comment,private final SettableBeanProperty _property;,com.fasterxml.jackson.databind.deser.SettableBeanProperty _property,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty._typeDeserializer,Field,No Comment,private final TypeDeserializer _typeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty._typePropertyName,Field,No Comment,private final String _typePropertyName;,java.lang.String _typePropertyName,"private , final "
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty._typeProperty,Field,* @since 2.8,private SettableBeanProperty _typeProperty;,com.fasterxml.jackson.databind.deser.SettableBeanProperty _typeProperty,private 
com.fasterxml.jackson.databind.deser.impl.FailingDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.FailingDeserializer._message,Field,No Comment,protected final String _message;,java.lang.String _message,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId._item,Field,"* @since 2.8 (with this name, formerly `public Object item`)",protected Object _item;,java.lang.Object _item,protected 
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId._key,Field,No Comment,protected final ObjectIdGenerator.IdKey _key;,com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey _key,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId._referringProperties,Field,No Comment,protected LinkedList<Referring> _referringProperties;,java.util.LinkedList _referringProperties,protected 
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId._resolver,Field,No Comment,protected ObjectIdResolver _resolver;,com.fasterxml.jackson.annotation.ObjectIdResolver _resolver,protected 
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring._reference,Field,No Comment,private final UnresolvedForwardReference _reference;,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference _reference,"private , final "
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring._beanType,Field,No Comment,private final Class<?> _beanType;,java.lang.Class _beanType,"private , final "
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer._typeDeserializer,Field,No Comment,final protected TypeDeserializer _typeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer,"final , protected "
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer._deserializer,Field,No Comment,final protected JsonDeserializer<Object> _deserializer;,com.fasterxml.jackson.databind.JsonDeserializer _deserializer,"final , protected "
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler.JSON_UNWRAPPED_NAME_PREFIX,Field,* @since 2.19,"public static final String JSON_UNWRAPPED_NAME_PREFIX = ""@JsonUnwrapped/"";",java.lang.String JSON_UNWRAPPED_NAME_PREFIX,"public , static , final "
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler._creatorProperties,Field,* @since 2.19,protected final List<SettableBeanProperty> _creatorProperties;,java.util.List _creatorProperties,"protected , final "
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler._properties,Field,No Comment,protected final List<SettableBeanProperty> _properties;,java.util.List _properties,"protected , final "
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider._name,Field,No Comment,protected final PropertyName _name;,com.fasterxml.jackson.databind.PropertyName _name,"protected , final "
com.fasterxml.jackson.databind.deser.impl.NullsFailProvider._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_SINGLETON_SET,Field,No Comment,private final static int TYPE_SINGLETON_SET = 1;,int TYPE_SINGLETON_SET,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_SINGLETON_LIST,Field,No Comment,private final static int TYPE_SINGLETON_LIST = 2;,int TYPE_SINGLETON_LIST,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_SINGLETON_MAP,Field,No Comment,private final static int TYPE_SINGLETON_MAP = 3;,int TYPE_SINGLETON_MAP,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_UNMODIFIABLE_SET,Field,No Comment,private final static int TYPE_UNMODIFIABLE_SET = 4;,int TYPE_UNMODIFIABLE_SET,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_UNMODIFIABLE_LIST,Field,No Comment,private final static int TYPE_UNMODIFIABLE_LIST = 5;,int TYPE_UNMODIFIABLE_LIST,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_UNMODIFIABLE_MAP,Field,No Comment,private final static int TYPE_UNMODIFIABLE_MAP = 6;,int TYPE_UNMODIFIABLE_MAP,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_SYNC_SET,Field,2.12.1,private final static int TYPE_SYNC_SET = 7;,int TYPE_SYNC_SET,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_SYNC_COLLECTION,Field,No Comment,private final static int TYPE_SYNC_COLLECTION = 8;,int TYPE_SYNC_COLLECTION,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_SYNC_LIST,Field,No Comment,private final static int TYPE_SYNC_LIST = 9;,int TYPE_SYNC_LIST,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_SYNC_MAP,Field,No Comment,private final static int TYPE_SYNC_MAP = 10;,int TYPE_SYNC_MAP,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.TYPE_AS_LIST,Field,No Comment,public final static int TYPE_AS_LIST = 11;,int TYPE_AS_LIST,"public , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.PREFIX_JAVA_UTIL_COLLECTIONS,Field,No Comment,"private final static String PREFIX_JAVA_UTIL_COLLECTIONS = ""java.util.Collections$"";",java.lang.String PREFIX_JAVA_UTIL_COLLECTIONS,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.PREFIX_JAVA_UTIL_ARRAYS,Field,No Comment,"private final static String PREFIX_JAVA_UTIL_ARRAYS = ""java.util.Arrays$"";",java.lang.String PREFIX_JAVA_UTIL_ARRAYS,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers.PREFIX_JAVA_UTIL_IMMUTABLE_COLL,Field,"for Java 11+ List.of(), Map.of() stuff","private final static String PREFIX_JAVA_UTIL_IMMUTABLE_COLL = ""java.util.ImmutableCollections$"";",java.lang.String PREFIX_JAVA_UTIL_IMMUTABLE_COLL,"private , final , static "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter._inputType,Field,No Comment,private final JavaType _inputType;,com.fasterxml.jackson.databind.JavaType _inputType,"private , final "
com.fasterxml.jackson.databind.deser.impl.JavaUtilCollectionsDeserializers$JavaUtilCollectionsConverter._kind,Field,No Comment,private final int _kind;,int _kind,"private , final "
com.fasterxml.jackson.databind.deser.impl.ValueInjector.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.ValueInjector._valueId,Field,* Identifier used for looking up value to inject,protected final Object _valueId;,java.lang.Object _valueId,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator._propertyCount,Field,"* Number of properties: usually same as size of {@link #_propertyLookup},\n     * but not necessarily, when we have unnamed injectable properties.",protected final int _propertyCount;,int _propertyCount,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator._valueInstantiator,Field,* Helper object that knows how to actually construct the instance by\n     * invoking creator method with buffered arguments.,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator._propertyLookup,Field,"* Map that contains property objects for either constructor or factory\n     * method (whichever one is null: one property for each\n     * parameter for that one), keyed by logical property name","protected final HashMap<String, SettableBeanProperty> _propertyLookup;",java.util.HashMap _propertyLookup,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator._allProperties,Field,* Array of all Creator properties (based on arguments to constructor\n     * or factory method).,protected final SettableBeanProperty[] _allProperties;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _allProperties,"protected , final "
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator$CaseInsensitiveMap._locale,Field,* Lower-casing can have Locale-specific minor variations.\n         *\n         * @since 2.11,protected final Locale _locale;,java.util.Locale _locale,"protected , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty._forward,Field,No Comment,private final SettableBeanProperty _forward;,com.fasterxml.jackson.databind.deser.SettableBeanProperty _forward,"private , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring._parent,Field,No Comment,private final ObjectIdReferenceProperty _parent;,com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty _parent,"private , final "
com.fasterxml.jackson.databind.deser.impl.ObjectIdReferenceProperty$PropertyReferring._pojo,Field,No Comment,public final Object _pojo;,java.lang.Object _pojo,"public , final "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer._delegate,Field,* Deserializer we delegate operations that we cannot handle.,final protected BeanDeserializerBase _delegate;,com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate,"final , protected "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer._orderedProperties,Field,* Properties in order expected to be found in JSON array.,final protected SettableBeanProperty[] _orderedProperties;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties,"final , protected "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer._buildMethod,Field,No Comment,final protected AnnotatedMethod _buildMethod;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod,"final , protected "
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer._targetType,Field,"* Type that the builder will produce, target type; as opposed to\n     * `handledType()` which refers to Builder class.\n     *\n     * @since 2.9",protected final JavaType _targetType;,com.fasterxml.jackson.databind.JavaType _targetType,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_DEFAULT,Field,No Comment,protected final static int C_DEFAULT = 0;,int C_DEFAULT,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_STRING,Field,No Comment,protected final static int C_STRING = 1;,int C_STRING,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_INT,Field,No Comment,protected final static int C_INT = 2;,int C_INT,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_LONG,Field,No Comment,protected final static int C_LONG = 3;,int C_LONG,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_BIG_INTEGER,Field,No Comment,protected final static int C_BIG_INTEGER = 4;,int C_BIG_INTEGER,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_DOUBLE,Field,No Comment,protected final static int C_DOUBLE = 5;,int C_DOUBLE,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_BIG_DECIMAL,Field,No Comment,protected final static int C_BIG_DECIMAL = 6;,int C_BIG_DECIMAL,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_BOOLEAN,Field,No Comment,protected final static int C_BOOLEAN = 7;,int C_BOOLEAN,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_DELEGATE,Field,No Comment,protected final static int C_DELEGATE = 8;,int C_DELEGATE,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_PROPS,Field,No Comment,protected final static int C_PROPS = 9;,int C_PROPS,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.C_ARRAY_DELEGATE,Field,No Comment,protected final static int C_ARRAY_DELEGATE = 10;,int C_ARRAY_DELEGATE,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector.TYPE_DESCS,Field,No Comment,"protected final static String[] TYPE_DESCS = new String[] { ""default"", ""from-String"", ""from-int"", ""from-long"", ""from-big-integer"", ""from-double"", ""from-big-decimal"", ""from-boolean"", ""delegate"", ""property-based"", ""array-delegate"" };",java.lang.String[] TYPE_DESCS,"protected , final , static "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._beanDesc,Field,* Type of bean being created,protected final BeanDescription _beanDesc;,com.fasterxml.jackson.databind.BeanDescription _beanDesc,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._canFixAccess,Field,No Comment,protected final boolean _canFixAccess;,boolean _canFixAccess,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._forceAccess,Field,* @since 2.7,protected final boolean _forceAccess;,boolean _forceAccess,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._creators,Field,* Set of creators we have collected so far\n     *\n     * @since 2.5,protected final AnnotatedWithParams[] _creators = new AnnotatedWithParams[11];,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams[] _creators,"protected , final "
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._explicitCreators,Field,"* Bitmask of creators that were explicitly marked as creators; false for\n     * auto-detected (ones included base on naming and/or visibility, not\n     * annotation)\n     *\n     * @since 2.5",protected int _explicitCreators = 0;,int _explicitCreators,protected 
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._hasNonDefaultCreator,Field,No Comment,protected boolean _hasNonDefaultCreator = false;,boolean _hasNonDefaultCreator,protected 
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._delegateArgs,Field,when there are injectable values along with delegate:,protected SettableBeanProperty[] _delegateArgs;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArgs,protected 
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._arrayDelegateArgs,Field,No Comment,protected SettableBeanProperty[] _arrayDelegateArgs;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArgs,protected 
com.fasterxml.jackson.databind.deser.impl.CreatorCollector._propertyBasedArgs,Field,No Comment,protected SettableBeanProperty[] _propertyBasedArgs;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propertyBasedArgs,protected 
com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.MergingSettableBeanProperty._accessor,Field,"* Member (field, method) used for accessing existing value.",protected final AnnotatedMember _accessor;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor,"protected , final "
com.fasterxml.jackson.databind.deser.impl.UnsupportedTypeDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.UnsupportedTypeDeserializer._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.deser.impl.UnsupportedTypeDeserializer._message,Field,No Comment,protected final String _message;,java.lang.String _message,"protected , final "
com.fasterxml.jackson.databind.deser.impl.MethodProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.MethodProperty._annotated,Field,No Comment,protected final AnnotatedMethod _annotated;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated,"protected , final "
com.fasterxml.jackson.databind.deser.impl.MethodProperty._setter,Field,"* Setter method for modifying property value; used for\n     * ""regular"" method-accessible properties.",protected final transient Method _setter;,java.lang.reflect.Method _setter,"protected , final , transient "
com.fasterxml.jackson.databind.deser.impl.MethodProperty._skipNulls,Field,* @since 2.9,final protected boolean _skipNulls;,boolean _skipNulls,"final , protected "
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty._creator,Field,* Constructor used when deserializing this property.\n     * Transient since there is no need to persist; only needed during\n     * construction of objects.,final protected transient Constructor<?> _creator;,java.lang.reflect.Constructor _creator,"final , protected , transient "
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty._annotated,Field,* Serializable version of single-arg constructor we use for value instantiation.,protected AnnotatedConstructor _annotated;,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _annotated,protected 
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty._annotated,Field,No Comment,protected final AnnotatedMethod _annotated;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated,"protected , final "
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty._getter,Field,* Get method for accessing property value used to access property\n     * (of Collection or Map type) to modify.,protected final Method _getter;,java.lang.reflect.Method _getter,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty._property,Field,"* Method used for setting ""any"" properties, along with annotation\n     * information. Retained to allow contextualization of any properties.",protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty._setter,Field,* Annotated variant is needed for JDK serialization only,protected final AnnotatedMember _setter;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _setter,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty._setterIsField,Field,No Comment,protected final boolean _setterIsField;,boolean _setterIsField,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty._valueDeserializer,Field,No Comment,protected JsonDeserializer<Object> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,protected 
com.fasterxml.jackson.databind.deser.SettableAnyProperty._valueTypeDeserializer,Field,No Comment,protected final TypeDeserializer _valueTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty._keyDeserializer,Field,* @since 2.9,protected final KeyDeserializer _keyDeserializer;,com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring._parent,Field,No Comment,private final SettableAnyProperty _parent;,com.fasterxml.jackson.databind.deser.SettableAnyProperty _parent,"private , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring._pojo,Field,No Comment,private final Object _pojo;,java.lang.Object _pojo,"private , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$AnySetterReferring._propName,Field,No Comment,private final String _propName;,java.lang.String _propName,"private , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MethodAnyProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapFieldAnyProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapFieldAnyProperty._valueInstantiator,Field,No Comment,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeFieldAnyProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeFieldAnyProperty._nodeFactory,Field,No Comment,protected final JsonNodeFactory _nodeFactory;,com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapParameterAnyProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapParameterAnyProperty._valueInstantiator,Field,No Comment,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$MapParameterAnyProperty._parameterIndex,Field,No Comment,protected final int _parameterIndex;,int _parameterIndex,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeParameterAnyProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeParameterAnyProperty._nodeFactory,Field,No Comment,protected final JsonNodeFactory _nodeFactory;,com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory,"protected , final "
com.fasterxml.jackson.databind.deser.SettableAnyProperty$JsonNodeParameterAnyProperty._parameterIndex,Field,No Comment,protected final int _parameterIndex;,int _parameterIndex,"protected , final "
com.fasterxml.jackson.databind.deser.UnresolvedId._id,Field,No Comment,private final Object _id;,java.lang.Object _id,"private , final "
com.fasterxml.jackson.databind.deser.UnresolvedId._location,Field,No Comment,private final JsonLocation _location;,com.fasterxml.jackson.core.JsonLocation _location,"private , final "
com.fasterxml.jackson.databind.deser.UnresolvedId._type,Field,No Comment,private final Class<?> _type;,java.lang.Class _type,"private , final "
com.fasterxml.jackson.databind.deser.DeserializationProblemHandler.NOT_HANDLED,Field,* Marker value returned by some handler methods to indicate that\n     * they could not handle problem and produce replacement value.\n     *\n     * @since 2.7,public final static Object NOT_HANDLED = new Object();,java.lang.Object NOT_HANDLED,"public , final , static "
com.fasterxml.jackson.databind.deser.CreatorProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.CreatorProperty._annotated,Field,"* Placeholder that represents constructor parameter, when it is created\n     * from actual constructor.\n     * May be null when a synthetic instance is created.",protected final AnnotatedParameter _annotated;,com.fasterxml.jackson.databind.introspect.AnnotatedParameter _annotated,"protected , final "
com.fasterxml.jackson.databind.deser.CreatorProperty._injectableValue,Field,"* Id of value to inject, if value injection should be used for this parameter\n     * (in addition to, or instead of, regular deserialization).\n     *\n     * @since 2.11",protected final JacksonInject.Value _injectableValue;,com.fasterxml.jackson.annotation.JacksonInject$Value _injectableValue,"protected , final "
com.fasterxml.jackson.databind.deser.CreatorProperty._fallbackSetter,Field,"* In special cases, when implementing ""updateValue"", we cannot use\n     * constructors or factory methods, but have to fall back on using a\n     * setter (or mutable field property). If so, this refers to that fallback\n     * accessor.\n     *<p>\n     * Mutable only to allow setting after construction, but must be strictly\n     * set before any use.\n     *\n     * @since 2.3",protected SettableBeanProperty _fallbackSetter;,com.fasterxml.jackson.databind.deser.SettableBeanProperty _fallbackSetter,protected 
com.fasterxml.jackson.databind.deser.CreatorProperty._creatorIndex,Field,* @since 2.1,protected final int _creatorIndex;,int _creatorIndex,"protected , final "
com.fasterxml.jackson.databind.deser.CreatorProperty._ignorable,Field,"* Marker flag that may have to be set during construction, to indicate that\n     * although property may have been constructed and added as a placeholder,\n     * it represents something that should be ignored during deserialization.\n     * This mostly concerns Creator properties which may not be easily deleted\n     * during processing.\n     *\n     * @since 2.9.4",protected boolean _ignorable;,boolean _ignorable,protected 
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer._buildMethod,Field,No Comment,protected final AnnotatedMethod _buildMethod;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod,"protected , final "
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer._targetType,Field,"* Type that the builder will produce, target type; as opposed to\n     * `handledType()` which refers to Builder class.\n     *\n     * @since 2.9",protected final JavaType _targetType;,com.fasterxml.jackson.databind.JavaType _targetType,"protected , final "
com.fasterxml.jackson.databind.deser.BeanDeserializerModifier.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._baseType,Field,No Comment,protected final JavaType _baseType;,com.fasterxml.jackson.databind.JavaType _baseType,"protected , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._objectIdReader,Field,No Comment,protected final ObjectIdReader _objectIdReader;,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader,"protected , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._backRefProperties,Field,No Comment,"protected final Map<String, SettableBeanProperty> _backRefProperties;",java.util.Map _backRefProperties,"protected , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._properties,Field,No Comment,"protected transient Map<String, SettableBeanProperty> _properties;",java.util.Map _properties,"protected , transient "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._acceptString,Field,No Comment,protected final boolean _acceptString;,boolean _acceptString,"protected , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._acceptBoolean,Field,No Comment,protected final boolean _acceptBoolean;,boolean _acceptBoolean,"protected , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._acceptInt,Field,No Comment,protected final boolean _acceptInt;,boolean _acceptInt,"protected , final "
com.fasterxml.jackson.databind.deser.AbstractDeserializer._acceptDouble,Field,No Comment,protected final boolean _acceptDouble;,boolean _acceptDouble,"protected , final "
com.fasterxml.jackson.databind.deser.BeanDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.BeanDeserializer._nullFromCreator,Field,* Lazily constructed exception used as root cause if reporting problem\n     * with creator method that returns <code>null</code> (which is not allowed)\n     *\n     * @since 2.8,protected transient Exception _nullFromCreator;,java.lang.Exception _nullFromCreator,"protected , transient "
com.fasterxml.jackson.databind.deser.BeanDeserializer._currentlyTransforming,Field,"* State marker we need in order to avoid infinite recursion for some cases\n     * (not very clean, alas, but has to do for now)\n     *\n     * @since 2.9",private volatile transient NameTransformer _currentlyTransforming;,com.fasterxml.jackson.databind.util.NameTransformer _currentlyTransforming,"private , volatile , transient "
com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring._context,Field,No Comment,private final DeserializationContext _context;,com.fasterxml.jackson.databind.DeserializationContext _context,"private , final "
com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring._prop,Field,No Comment,private final SettableBeanProperty _prop;,com.fasterxml.jackson.databind.deser.SettableBeanProperty _prop,"private , final "
com.fasterxml.jackson.databind.deser.BeanDeserializer$BeanReferring._bean,Field,No Comment,private Object _bean;,java.lang.Object _bean,private 
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference._roid,Field,No Comment,private ReadableObjectId _roid;,com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid,private 
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference._unresolvedIds,Field,No Comment,private List<UnresolvedId> _unresolvedIds;,java.util.List _unresolvedIds,private 
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer.PROP_NAME_MESSAGE,Field,No Comment,"protected final static String PROP_NAME_MESSAGE = ""message"";",java.lang.String PROP_NAME_MESSAGE,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer.PROP_NAME_SUPPRESSED,Field,No Comment,"protected final static String PROP_NAME_SUPPRESSED = ""suppressed"";",java.lang.String PROP_NAME_SUPPRESSED,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer.PROP_NAME_LOCALIZED_MESSAGE,Field,No Comment,"protected final static String PROP_NAME_LOCALIZED_MESSAGE = ""localizedMessage"";",java.lang.String PROP_NAME_LOCALIZED_MESSAGE,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer._adapterDeserializer,Field,No Comment,protected final JsonDeserializer<?> _adapterDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _adapterDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.className,Field,NOTE: some String fields must not be nulls,"public String className = """", classLoaderName;",java.lang.String className,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.classLoaderName,Field,NOTE: some String fields must not be nulls,"public String className = """", classLoaderName;",java.lang.String classLoaderName,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.declaringClass,Field,No Comment,"public String declaringClass, format;",java.lang.String declaringClass,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.format,Field,No Comment,"public String declaringClass, format;",java.lang.String format,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.fileName,Field,No Comment,"public String fileName = """", methodName = """";",java.lang.String fileName,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.methodName,Field,No Comment,"public String fileName = """", methodName = """";",java.lang.String methodName,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.lineNumber,Field,No Comment,public int lineNumber = -1;,int lineNumber,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.moduleName,Field,No Comment,"public String moduleName, moduleVersion;",java.lang.String moduleName,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.moduleVersion,Field,No Comment,"public String moduleName, moduleVersion;",java.lang.String moduleVersion,public 
com.fasterxml.jackson.databind.deser.std.StackTraceElementDeserializer$Adapter.nativeMethod,Field,No Comment,public boolean nativeMethod;,boolean nativeMethod,public 
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.NO_STRINGS,Field,No Comment,private final static String[] NO_STRINGS = new String[0];,java.lang.String[] NO_STRINGS,"private , final , static "
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer.instance,Field,No Comment,public final static StringArrayDeserializer instance = new StringArrayDeserializer();,com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer._elementDeserializer,Field,"* Value serializer to use, if not the standard one (which is inlined)",protected JsonDeserializer<String> _elementDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer._nullProvider,Field,* Handler we need for dealing with null values as elements\n     *\n     * @since 2.9,protected final NullValueProvider _nullProvider;,com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider,"protected , final "
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer._unwrapSingle,Field,"* Specific override for this instance (from proper, or global per-type overrides)\n     * to indicate whether single value may be taken to mean an unwrapped one-element array\n     * or not. If null, left to global defaults.\n     *\n     * @since 2.7",protected final Boolean _unwrapSingle;,java.lang.Boolean _unwrapSingle,"protected , final "
com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer._skipNullValues,Field,* Marker flag set if the <code>_nullProvider</code> indicates that all null\n     * content values should be skipped (instead of being possibly converted).\n     *\n     * @since 2.9,protected final boolean _skipNullValues;,boolean _skipNullValues,"protected , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers._unwrapSingle,Field,"* Specific override for this instance (from proper, or global per-type overrides)\n     * to indicate whether single value may be taken to mean an unwrapped one-element array\n     * or not. If null, left to global defaults.\n     *\n     * @since 2.7",protected final Boolean _unwrapSingle;,java.lang.Boolean _unwrapSingle,"protected , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers._emptyValue,Field,since 2.9,private transient Object _emptyValue;,java.lang.Object _emptyValue,"private , transient "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers._nuller,Field,* Flag that indicates need for special handling; either failing\n     * (throw exception) or skipping,protected final NullValueProvider _nuller;,com.fasterxml.jackson.databind.deser.NullValueProvider _nuller,"protected , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser.instance,Field,No Comment,public final static IntDeser instance = new IntDeser();,com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser.instance,Field,No Comment,public final static LongDeser instance = new LongDeser();,com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer._keyDeserializer,Field,"* Key deserializer to use; either passed via constructor\n     * (when indicated by annotations), or resolved when\n     * {@link #createContextual} is called;",protected final KeyDeserializer _keyDeserializer;,com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer._valueDeserializer,Field,* Value deserializer.,protected final JsonDeserializer<Object> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapEntryDeserializer._valueTypeDeserializer,Field,"* If value instances have polymorphic type information, this\n     * is the type deserializer that can handle it",protected final TypeDeserializer _valueTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers._classNames,Field,No Comment,private final static HashSet<String> _classNames = new HashSet<String>();,java.util.HashSet _classNames,"private , final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer._logicalType,Field,@since 2.12,protected final LogicalType _logicalType;,com.fasterxml.jackson.databind.type.LogicalType _logicalType,"protected , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer._nullValue,Field,No Comment,protected final T _nullValue;,java.lang.Object _nullValue,"protected , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer._emptyValue,Field,@since 2.9,protected final T _emptyValue;,java.lang.Object _emptyValue,"protected , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer._primitive,Field,No Comment,protected final boolean _primitive;,boolean _primitive,"protected , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer.primitiveInstance,Field,No Comment,"final static BooleanDeserializer primitiveInstance = new BooleanDeserializer(Boolean.TYPE, Boolean.FALSE);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer.wrapperInstance,Field,No Comment,"final static BooleanDeserializer wrapperInstance = new BooleanDeserializer(Boolean.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer.primitiveInstance,Field,No Comment,"final static ByteDeserializer primitiveInstance = new ByteDeserializer(Byte.TYPE, (byte) 0);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer.wrapperInstance,Field,No Comment,"final static ByteDeserializer wrapperInstance = new ByteDeserializer(Byte.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer.primitiveInstance,Field,No Comment,"final static ShortDeserializer primitiveInstance = new ShortDeserializer(Short.TYPE, Short.valueOf((short) 0));",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer.wrapperInstance,Field,No Comment,"final static ShortDeserializer wrapperInstance = new ShortDeserializer(Short.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer.primitiveInstance,Field,No Comment,"final static CharacterDeserializer primitiveInstance = new CharacterDeserializer(Character.TYPE, '\0');",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer.wrapperInstance,Field,No Comment,"final static CharacterDeserializer wrapperInstance = new CharacterDeserializer(Character.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.primitiveInstance,Field,No Comment,"final static IntegerDeserializer primitiveInstance = new IntegerDeserializer(Integer.TYPE, 0);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer.wrapperInstance,Field,No Comment,"final static IntegerDeserializer wrapperInstance = new IntegerDeserializer(Integer.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer.primitiveInstance,Field,No Comment,"final static LongDeserializer primitiveInstance = new LongDeserializer(Long.TYPE, 0L);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer.wrapperInstance,Field,No Comment,"final static LongDeserializer wrapperInstance = new LongDeserializer(Long.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer.primitiveInstance,Field,No Comment,"final static FloatDeserializer primitiveInstance = new FloatDeserializer(Float.TYPE, 0.f);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer.wrapperInstance,Field,No Comment,"final static FloatDeserializer wrapperInstance = new FloatDeserializer(Float.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer.primitiveInstance,Field,No Comment,"final static DoubleDeserializer primitiveInstance = new DoubleDeserializer(Double.TYPE, 0.d);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer primitiveInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer.wrapperInstance,Field,No Comment,"final static DoubleDeserializer wrapperInstance = new DoubleDeserializer(Double.class, null);",com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer wrapperInstance,"final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer.instance,Field,No Comment,public final static NumberDeserializer instance = new NumberDeserializer();,com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer.instance,Field,No Comment,public final static BigIntegerDeserializer instance = new BigIntegerDeserializer();,com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer.instance,Field,No Comment,public final static BigDecimalDeserializer instance = new BigDecimalDeserializer();,com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer._untyped,Field,* Flag that indicates whether the component type is Object or not.\n     * Used for minor optimization when constructing result.,protected final boolean _untyped;,boolean _untyped,"protected , final "
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer._elementClass,Field,* Type of contained elements: needed for constructing actual\n     * result array,protected final Class<?> _elementClass;,java.lang.Class _elementClass,"protected , final "
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer._elementDeserializer,Field,* Element deserializer,protected JsonDeserializer<Object> _elementDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer._elementTypeDeserializer,Field,"* If element instances have polymorphic type information, this\n     * is the type deserializer that can handle it",protected final TypeDeserializer _elementTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer._emptyValue,Field,* @since 2.12,protected final Object[] _emptyValue;,java.lang.Object[] _emptyValue,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdNodeBasedDeserializer._treeDeserializer,Field,No Comment,protected JsonDeserializer<Object> _treeDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _treeDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer.NO_OBJECTS,Field,No Comment,protected final static Object[] NO_OBJECTS = new Object[0];,java.lang.Object[] NO_OBJECTS,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapDeserializer,Field,No Comment,protected JsonDeserializer<Object> _mapDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _mapDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listDeserializer,Field,No Comment,protected JsonDeserializer<Object> _listDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _listDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._stringDeserializer,Field,No Comment,protected JsonDeserializer<Object> _stringDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _stringDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._numberDeserializer,Field,No Comment,protected JsonDeserializer<Object> _numberDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _numberDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._customKeyDeserializer,Field,* Object.class may also have custom key deserializer\n     *\n     * @since 2.19,private KeyDeserializer _customKeyDeserializer;,com.fasterxml.jackson.databind.KeyDeserializer _customKeyDeserializer,private 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._listType,Field,"* If {@link java.util.List} has been mapped to non-default implementation,\n     * we'll store type here\n     *\n     * @since 2.6",protected JavaType _listType;,com.fasterxml.jackson.databind.JavaType _listType,protected 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._mapType,Field,"* If {@link java.util.Map} has been mapped to non-default implementation,\n     * we'll store type here\n     *\n     * @since 2.6",protected JavaType _mapType;,com.fasterxml.jackson.databind.JavaType _mapType,protected 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer._nonMerging,Field,* @since 2.9,protected final boolean _nonMerging;,boolean _nonMerging,"protected , final "
com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.NO_OBJECTS,Field,No Comment,protected final static Object[] NO_OBJECTS = new Object[0];,java.lang.Object[] NO_OBJECTS,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR.std,Field,No Comment,public final static UntypedObjectDeserializerNR std = new UntypedObjectDeserializerNR();,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR std,"public , final , static "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR._nonMerging,Field,@since 2.9,protected final boolean _nonMerging;,boolean _nonMerging,"protected , final "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope._parent,Field,No Comment,private final Scope _parent;,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope _parent,"private , final "
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope._child,Field,No Comment,private Scope _child;,com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope _child,private 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope._isObject,Field,No Comment,"private boolean _isObject, _squashDups;",boolean _isObject,private 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope._squashDups,Field,No Comment,"private boolean _isObject, _squashDups;",boolean _squashDups,private 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope._deferredKey,Field,No Comment,private String _deferredKey;,java.lang.String _deferredKey,private 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope._map,Field,No Comment,"private Map<String, Object> _map;",java.util.Map _map,private 
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializerNR$Scope._list,Field,No Comment,private List<Object> _list;,java.util.List _list,private 
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer.instance,Field,* Singleton instance of generic deserializer for {@link JsonNode}.\n     * Only used for types other than JSON Object and Array.,private final static JsonNodeDeserializer instance = new JsonNodeDeserializer();,com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance,"private , final , static "
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer._instance,Field,No Comment,protected final static ObjectDeserializer _instance = new ObjectDeserializer();,com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer._instance,Field,No Comment,protected final static ArrayDeserializer _instance = new ArrayDeserializer();,com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._supportsUpdates,Field,No Comment,protected final Boolean _supportsUpdates;,java.lang.Boolean _supportsUpdates,"protected , final "
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._mergeArrays,Field,No Comment,protected final boolean _mergeArrays;,boolean _mergeArrays,"protected , final "
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer._mergeObjects,Field,No Comment,protected final boolean _mergeObjects;,boolean _mergeObjects,"protected , final "
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack._stack,Field,No Comment,private ContainerNode[] _stack;,com.fasterxml.jackson.databind.node.ContainerNode[] _stack,private 
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack._top,Field,No Comment,"private int _top, _end;",int _top,private 
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack._end,Field,No Comment,"private int _top, _end;",int _end,private 
com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer.instance,Field,No Comment,public final static NullifyingDeserializer instance = new NullifyingDeserializer();,com.fasterxml.jackson.databind.deser.std.NullifyingDeserializer instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.serialVersionUID,Field,since 2.5,private static final long serialVersionUID = -1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._valueDeserializer,Field,* Value deserializer.,protected final JsonDeserializer<Object> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._valueTypeDeserializer,Field,"* If element instances have polymorphic type information, this\n     * is the type deserializer that can handle it",protected final TypeDeserializer _valueTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._valueInstantiator,Field,No Comment,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._delegateDeserializer,Field,* Deserializer that is used iff delegate-based creator is\n     * to be used for deserializing from JSON Object.,protected final JsonDeserializer<Object> _delegateDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator._elementType,Field,No Comment,private final Class<?> _elementType;,java.lang.Class _elementType,"private , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator._result,Field,No Comment,private final Collection<Object> _result;,java.util.Collection _result,"private , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator._accumulator,Field,* A list of {@link CollectionReferring} to maintain ordering.,private List<CollectionReferring> _accumulator = new ArrayList<CollectionReferring>();,java.util.List _accumulator,private 
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring._parent,Field,No Comment,private final CollectionReferringAccumulator _parent;,com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator _parent,"private , final "
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring.next,Field,No Comment,public final List<Object> next = new ArrayList<Object>();,java.util.List next,"public , final "
com.fasterxml.jackson.databind.deser.std.EnumDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._enumsByIndex,Field,No Comment,protected Object[] _enumsByIndex;,java.lang.Object[] _enumsByIndex,protected 
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._enumDefaultValue,Field,* @since 2.8,private final Enum<?> _enumDefaultValue;,java.lang.Enum _enumDefaultValue,"private , final "
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._lookupByName,Field,* @since 2.7.3,protected final CompactStringObjectMap _lookupByName;,com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByName,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._lookupByToString,Field,"* Alternatively, we may need a different lookup object if ""use toString""\n     * is defined.\n     * <p>\n     * Note: this will be final in Jackson 3.x, by removing deprecated {@link #_getToStringLookup(DeserializationContext)}\n     *\n     * @since 2.7.3",protected volatile CompactStringObjectMap _lookupByToString;,com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByToString,"protected , volatile "
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._caseInsensitive,Field,No Comment,protected final Boolean _caseInsensitive;,java.lang.Boolean _caseInsensitive,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._useDefaultValueForUnknownEnum,Field,No Comment,private Boolean _useDefaultValueForUnknownEnum;,java.lang.Boolean _useDefaultValueForUnknownEnum,private 
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._useNullForUnknownEnum,Field,No Comment,private Boolean _useNullForUnknownEnum;,java.lang.Boolean _useNullForUnknownEnum,private 
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._isFromIntValue,Field,"* Marker flag for cases where we expect actual integral value for Enum,\n     * based on {@code @JsonValue} (and equivalent) annotated accessor.\n     *\n     * @since 2.13",protected final boolean _isFromIntValue;,boolean _isFromIntValue,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumDeserializer._lookupByEnumNaming,Field,* Look up map with <b>key</b> as <code>Enum.name()</code> converted by\n     * {@link EnumNamingStrategy#convertEnumToExternalName(String)}\n     * and <b>value</b> as Enums.\n     *\n     * @since 2.15,protected final CompactStringObjectMap _lookupByEnumNaming;,com.fasterxml.jackson.databind.util.CompactStringObjectMap _lookupByEnumNaming,"protected , final "
com.fasterxml.jackson.databind.deser.std.AtomicLongDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer.serialVersionUID,Field,since 2.17,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer._enumType,Field,No Comment,protected final JavaType _enumType;,com.fasterxml.jackson.databind.JavaType _enumType,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer._enumDeserializer,Field,No Comment,protected JsonDeserializer<Enum<?>> _enumDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _enumDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer._nullProvider,Field,* Handler we need for dealing with nulls.\n     *\n     * @since 2.10.1,protected final NullValueProvider _nullProvider;,com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer._skipNullValues,Field,* Marker flag set if the <code>_nullProvider</code> indicates that all null\n     * content values should be skipped (instead of being possibly converted).\n     *\n     * @since 2.10.1,protected final boolean _skipNullValues;,boolean _skipNullValues,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer._unwrapSingle,Field,"* Specific override for this instance (from proper, or global per-type overrides)\n     * to indicate whether single value may be taken to mean an unwrapped one-element array\n     * or not. If null, left to global defaults.\n     *\n     * @since 2.7",protected final Boolean _unwrapSingle;,java.lang.Boolean _unwrapSingle,"protected , final "
com.fasterxml.jackson.databind.deser.std.ByteBufferDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer.HEX_DIGITS,Field,No Comment,final static int[] HEX_DIGITS = new int[127];,int[] HEX_DIGITS,"final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_BOOLEAN,Field,No Comment,public final static int TYPE_BOOLEAN = 1;,int TYPE_BOOLEAN,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_BYTE,Field,No Comment,public final static int TYPE_BYTE = 2;,int TYPE_BYTE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_SHORT,Field,No Comment,public final static int TYPE_SHORT = 3;,int TYPE_SHORT,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CHAR,Field,No Comment,public final static int TYPE_CHAR = 4;,int TYPE_CHAR,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_INT,Field,No Comment,public final static int TYPE_INT = 5;,int TYPE_INT,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_LONG,Field,No Comment,public final static int TYPE_LONG = 6;,int TYPE_LONG,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_FLOAT,Field,No Comment,public final static int TYPE_FLOAT = 7;,int TYPE_FLOAT,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_DOUBLE,Field,No Comment,public final static int TYPE_DOUBLE = 8;,int TYPE_DOUBLE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_LOCALE,Field,No Comment,public final static int TYPE_LOCALE = 9;,int TYPE_LOCALE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_DATE,Field,No Comment,public final static int TYPE_DATE = 10;,int TYPE_DATE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CALENDAR,Field,No Comment,public final static int TYPE_CALENDAR = 11;,int TYPE_CALENDAR,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_UUID,Field,No Comment,public final static int TYPE_UUID = 12;,int TYPE_UUID,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_URI,Field,No Comment,public final static int TYPE_URI = 13;,int TYPE_URI,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_URL,Field,No Comment,public final static int TYPE_URL = 14;,int TYPE_URL,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CLASS,Field,No Comment,public final static int TYPE_CLASS = 15;,int TYPE_CLASS,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_CURRENCY,Field,No Comment,public final static int TYPE_CURRENCY = 16;,int TYPE_CURRENCY,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer.TYPE_BYTE_ARRAY,Field,since 2.9,public final static int TYPE_BYTE_ARRAY = 17;,int TYPE_BYTE_ARRAY,"public , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer._kind,Field,No Comment,final protected int _kind;,int _kind,"final , protected "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer._keyClass,Field,No Comment,final protected Class<?> _keyClass;,java.lang.Class _keyClass,"final , protected "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer._deser,Field,* Some types that are deserialized using a helper deserializer.,protected final FromStringDeserializer<?> _deser;,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD.sString,Field,No Comment,private final static StringKD sString = new StringKD(String.class);,com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sString,"private , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD.sObject,Field,No Comment,private final static StringKD sObject = new StringKD(Object.class);,com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sObject,"private , final , static "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD._keyClass,Field,No Comment,final protected Class<?> _keyClass;,java.lang.Class _keyClass,"final , protected "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD._delegate,Field,No Comment,protected final JsonDeserializer<?> _delegate;,com.fasterxml.jackson.databind.JsonDeserializer _delegate,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD._byNameResolver,Field,No Comment,protected final EnumResolver _byNameResolver;,com.fasterxml.jackson.databind.util.EnumResolver _byNameResolver,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD._factory,Field,No Comment,protected final AnnotatedMethod _factory;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD._byToStringResolver,Field,"* Lazily constructed alternative in case there is need to\n         * use 'toString()' method as the source.\n         * <p>\n         * Note: this will be final in Jackson 3.x, by removing deprecated {@link #_getToStringResolver(DeserializationContext)}\n         * \n         * @since 2.7.3",protected volatile EnumResolver _byToStringResolver;,com.fasterxml.jackson.databind.util.EnumResolver _byToStringResolver,"protected , volatile "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD._byIndexResolver,Field,* Lazily constructed alternative in case there is need to\n         * parse using enum index method as the source.\n         *\n         * @since 2.15,protected volatile EnumResolver _byIndexResolver;,com.fasterxml.jackson.databind.util.EnumResolver _byIndexResolver,"protected , volatile "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD._byEnumNamingResolver,Field,* Look up map with <b>key</b> as <code>Enum.name()</code> converted by\n         * {@link EnumNamingStrategy#convertEnumToExternalName(String)}\n         * and <b>value</b> as Enums.\n         *\n         * @since 2.15,protected final EnumResolver _byEnumNamingResolver;,com.fasterxml.jackson.databind.util.EnumResolver _byEnumNamingResolver,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD._enumDefaultValue,Field,No Comment,protected final Enum<?> _enumDefaultValue;,java.lang.Enum _enumDefaultValue,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer._ctor,Field,No Comment,protected final Constructor<?> _ctor;,java.lang.reflect.Constructor _ctor,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer._factoryMethod,Field,No Comment,final Method _factoryMethod;,java.lang.reflect.Method _factoryMethod,final 
com.fasterxml.jackson.databind.deser.std.StringDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StringDeserializer.instance,Field,* @since 2.2,public final static StringDeserializer instance = new StringDeserializer();,com.fasterxml.jackson.databind.deser.std.StringDeserializer instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer.serialVersionUID,Field,2.9,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer._fullType,Field,* Full type of property (or root value) for which this deserializer\n     * has been constructed and contextualized.,protected final JavaType _fullType;,com.fasterxml.jackson.databind.JavaType _fullType,"protected , final "
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer._valueInstantiator,Field,No Comment,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer._valueTypeDeserializer,Field,No Comment,protected final TypeDeserializer _valueTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer._valueDeserializer,Field,No Comment,protected final JsonDeserializer<Object> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer._keyDeserializer,Field,"* Key deserializer to use; either passed via constructor\n     * (when indicated by annotations), or resolved when\n     * {@link #resolve} is called;",protected final KeyDeserializer _keyDeserializer;,com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer._standardStringKey,Field,"* Flag set to indicate that the key type is\n     * {@link java.lang.String} (or {@link java.lang.Object}, for\n     * which String is acceptable), <b>and</b> that the\n     * default Jackson key deserializer would be used.\n     * If both are true, can optimize handling.",protected boolean _standardStringKey;,boolean _standardStringKey,protected 
com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueDeserializer,Field,* Value deserializer.,protected final JsonDeserializer<Object> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueTypeDeserializer,Field,"* If value instances have polymorphic type information, this\n     * is the type deserializer that can handle it",protected final TypeDeserializer _valueTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer._valueInstantiator,Field,No Comment,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer._delegateDeserializer,Field,* Deserializer that is used iff delegate-based creator is\n     * to be used for deserializing from JSON Object.,protected JsonDeserializer<Object> _delegateDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.MapDeserializer._propertyBasedCreator,Field,"* If the Map is to be instantiated using non-default constructor\n     * or factory method\n     * that takes one or more named properties as argument(s),\n     * this creator is used for instantiation.",protected PropertyBasedCreator _propertyBasedCreator;,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator,protected 
com.fasterxml.jackson.databind.deser.std.MapDeserializer._hasDefaultCreator,Field,No Comment,protected final boolean _hasDefaultCreator;,boolean _hasDefaultCreator,"protected , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer._ignorableProperties,Field,No Comment,protected Set<String> _ignorableProperties;,java.util.Set _ignorableProperties,protected 
com.fasterxml.jackson.databind.deser.std.MapDeserializer._includableProperties,Field,* @since 2.12,protected Set<String> _includableProperties;,java.util.Set _includableProperties,protected 
com.fasterxml.jackson.databind.deser.std.MapDeserializer._inclusionChecker,Field,* Helper object used for name-based filtering\n     *\n     * @since 2.12,protected IgnorePropertiesUtil.Checker _inclusionChecker;,com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker,protected 
com.fasterxml.jackson.databind.deser.std.MapDeserializer._checkDupSquash,Field,"* Flag used to check, whether the {@link com.fasterxml.jackson.core.StreamReadCapability#DUPLICATE_PROPERTIES}\n     * can be applied, because the Map has declared value type of {@code java.lang.Object}.\n     *\n     * @since 2.14",protected boolean _checkDupSquash;,boolean _checkDupSquash,protected 
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator._valueType,Field,No Comment,private final Class<?> _valueType;,java.lang.Class _valueType,"private , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator._result,Field,No Comment,"private Map<Object, Object> _result;",java.util.Map _result,private 
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator._accumulator,Field,* A list of {@link MapReferring} to maintain ordering.,private List<MapReferring> _accumulator = new ArrayList<MapReferring>();,java.util.List _accumulator,private 
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring._parent,Field,No Comment,private final MapReferringAccumulator _parent;,com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferringAccumulator _parent,"private , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring.next,Field,No Comment,"public final Map<Object, Object> next = new LinkedHashMap<Object, Object>();",java.util.Map next,"public , final "
com.fasterxml.jackson.databind.deser.std.MapDeserializer$MapReferring.key,Field,No Comment,public final Object key;,java.lang.Object key,"public , final "
com.fasterxml.jackson.databind.deser.std.JdkDeserializers._classNames,Field,No Comment,private final static HashSet<String> _classNames = new HashSet<String>();,java.util.HashSet _classNames,"private , final , static "
com.fasterxml.jackson.databind.deser.std.StdDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdDeserializer.F_MASK_INT_COERCIONS,Field,"* Bitmask that covers {@link DeserializationFeature#USE_BIG_INTEGER_FOR_INTS}\n     * and {@link DeserializationFeature#USE_LONG_FOR_INTS}, used for more efficient\n     * cheks when coercing integral values for untyped deserialization.\n     *\n     * @since 2.6",protected final static int F_MASK_INT_COERCIONS = DeserializationFeature.USE_BIG_INTEGER_FOR_INTS.getMask() | DeserializationFeature.USE_LONG_FOR_INTS.getMask();,int F_MASK_INT_COERCIONS,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.StdDeserializer.F_MASK_ACCEPT_ARRAYS,Field,No Comment,// since 2.12\n@Deprecated\nprotected final static int F_MASK_ACCEPT_ARRAYS = DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS.getMask() | DeserializationFeature.ACCEPT_EMPTY_ARRAY_AS_NULL_OBJECT.getMask();,int F_MASK_ACCEPT_ARRAYS,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.StdDeserializer._valueClass,Field,"* Type of values this deserializer handles: sometimes\n     * exact types, other time most specific supertype of\n     * types deserializer handles (which may be as generic\n     * as {@link Object} in some case)",final protected Class<?> _valueClass;,java.lang.Class _valueClass,"final , protected "
com.fasterxml.jackson.databind.deser.std.StdDeserializer._valueType,Field,No Comment,final protected JavaType _valueType;,com.fasterxml.jackson.databind.JavaType _valueType,"final , protected "
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer._delegatee,Field,No Comment,protected final JsonDeserializer<?> _delegatee;,com.fasterxml.jackson.databind.JsonDeserializer _delegatee,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer._converter,Field,* Converter that was used for creating {@link #_delegateDeserializer}.,"protected final Converter<Object, T> _converter;",com.fasterxml.jackson.databind.util.Converter _converter,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer._delegateType,Field,"* Fully resolved delegate type, with generic information if any available.",protected final JavaType _delegateType;,com.fasterxml.jackson.databind.JavaType _delegateType,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer._delegateDeserializer,Field,* Underlying serializer for type <code>T</code>.,protected final JsonDeserializer<Object> _delegateDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.ArrayBlockingQueueDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase._containerType,Field,No Comment,protected final JavaType _containerType;,com.fasterxml.jackson.databind.JavaType _containerType,"protected , final "
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase._nullProvider,Field,* Handler we need for dealing with nulls.\n     *\n     * @since 2.9,protected final NullValueProvider _nullProvider;,com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider,"protected , final "
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase._skipNullValues,Field,* Marker flag set if the <code>_nullProvider</code> indicates that all null\n     * content values should be skipped (instead of being possibly converted).\n     *\n     * @since 2.9,protected final boolean _skipNullValues;,boolean _skipNullValues,"protected , final "
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase._unwrapSingle,Field,"* Specific override for this instance (from proper, or global per-type overrides)\n     * to indicate whether single value may be taken to mean an unwrapped one-element array\n     * or not. If null, left to global defaults.\n     *\n     * @since 2.9 (demoted from sub-classes where added in 2.7)",protected final Boolean _unwrapSingle;,java.lang.Boolean _unwrapSingle,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer._enumClass,Field,No Comment,protected final Class<?> _enumClass;,java.lang.Class _enumClass,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer._keyDeserializer,Field,No Comment,protected KeyDeserializer _keyDeserializer;,com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer._valueDeserializer,Field,No Comment,protected JsonDeserializer<Object> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer._valueTypeDeserializer,Field,"* If value instances have polymorphic type information, this\n     * is the type deserializer that can handle it",protected final TypeDeserializer _valueTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer._valueInstantiator,Field,* @since 2.9,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer._delegateDeserializer,Field,* Deserializer that is used iff delegate-based creator is\n     * to be used for deserializing from JSON Object.,protected JsonDeserializer<Object> _delegateDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer,protected 
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer._propertyBasedCreator,Field,"* If the Map is to be instantiated using non-default constructor\n     * or factory method\n     * that takes one or more named properties as argument(s),\n     * this creator is used for instantiation.",protected PropertyBasedCreator _propertyBasedCreator;,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator,protected 
com.fasterxml.jackson.databind.deser.std.TokenBufferDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer._valueDeserializer,Field,"* Value deserializer to use, if NOT the standard one\n     * (if it is, will be null).",protected final JsonDeserializer<String> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer._valueInstantiator,Field,* Instantiator used in case custom handling is needed for creation.,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer._delegateDeserializer,Field,* Deserializer that is used iff delegate-based creator is\n     * to be used for deserializing from JSON Object.,protected final JsonDeserializer<Object> _delegateDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_FILE,Field,No Comment,public final static int STD_FILE = 1;,int STD_FILE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_URL,Field,No Comment,public final static int STD_URL = 2;,int STD_URL,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_URI,Field,No Comment,public final static int STD_URI = 3;,int STD_URI,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_CLASS,Field,No Comment,public final static int STD_CLASS = 4;,int STD_CLASS,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_JAVA_TYPE,Field,No Comment,public final static int STD_JAVA_TYPE = 5;,int STD_JAVA_TYPE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_CURRENCY,Field,No Comment,public final static int STD_CURRENCY = 6;,int STD_CURRENCY,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_PATTERN,Field,No Comment,public final static int STD_PATTERN = 7;,int STD_PATTERN,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_LOCALE,Field,No Comment,public final static int STD_LOCALE = 8;,int STD_LOCALE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_CHARSET,Field,No Comment,public final static int STD_CHARSET = 9;,int STD_CHARSET,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_TIME_ZONE,Field,No Comment,public final static int STD_TIME_ZONE = 10;,int STD_TIME_ZONE,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_INET_ADDRESS,Field,No Comment,public final static int STD_INET_ADDRESS = 11;,int STD_INET_ADDRESS,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.STD_INET_SOCKET_ADDRESS,Field,No Comment,public final static int STD_INET_SOCKET_ADDRESS = 12;,int STD_INET_SOCKET_ADDRESS,"public , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std.LOCALE_EXT_MARKER,Field,No Comment,"protected final static String LOCALE_EXT_MARKER = ""_#"";",java.lang.String LOCALE_EXT_MARKER,"protected , final , static "
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std._kind,Field,No Comment,protected final int _kind;,int _kind,"protected , final "
com.fasterxml.jackson.databind.deser.std.JsonLocationInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._valueTypeDesc,Field,* Type of values that are instantiated; used\n     * for error reporting purposes.,protected final String _valueTypeDesc;,java.lang.String _valueTypeDesc,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._valueClass,Field,* @since 2.8,protected final Class<?> _valueClass;,java.lang.Class _valueClass,"protected , final "
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._defaultCreator,Field,* Default (no-argument) constructor to use for instantiation\n     * (with {@link #createUsingDefault}),protected AnnotatedWithParams _defaultCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _defaultCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._withArgsCreator,Field,No Comment,protected AnnotatedWithParams _withArgsCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _withArgsCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._constructorArguments,Field,No Comment,protected SettableBeanProperty[] _constructorArguments;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _constructorArguments,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._delegateType,Field,No Comment,protected JavaType _delegateType;,com.fasterxml.jackson.databind.JavaType _delegateType,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._delegateCreator,Field,No Comment,protected AnnotatedWithParams _delegateCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _delegateCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._delegateArguments,Field,No Comment,protected SettableBeanProperty[] _delegateArguments;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _delegateArguments,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._arrayDelegateType,Field,No Comment,protected JavaType _arrayDelegateType;,com.fasterxml.jackson.databind.JavaType _arrayDelegateType,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._arrayDelegateCreator,Field,No Comment,protected AnnotatedWithParams _arrayDelegateCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _arrayDelegateCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._arrayDelegateArguments,Field,No Comment,protected SettableBeanProperty[] _arrayDelegateArguments;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _arrayDelegateArguments,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._fromStringCreator,Field,No Comment,protected AnnotatedWithParams _fromStringCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromStringCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._fromIntCreator,Field,No Comment,protected AnnotatedWithParams _fromIntCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromIntCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._fromLongCreator,Field,No Comment,protected AnnotatedWithParams _fromLongCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromLongCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._fromBigIntegerCreator,Field,No Comment,protected AnnotatedWithParams _fromBigIntegerCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBigIntegerCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._fromDoubleCreator,Field,No Comment,protected AnnotatedWithParams _fromDoubleCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromDoubleCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._fromBigDecimalCreator,Field,No Comment,protected AnnotatedWithParams _fromBigDecimalCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBigDecimalCreator,protected 
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator._fromBooleanCreator,Field,No Comment,protected AnnotatedWithParams _fromBooleanCreator;,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBooleanCreator,protected 
com.fasterxml.jackson.databind.deser.std.DateDeserializers._utilClasses,Field,No Comment,private final static HashSet<String> _utilClasses = new HashSet<String>();,java.util.HashSet _utilClasses,"private , final , static "
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer._customFormat,Field,"* Specific format to use, if non-null; if null will\n         * just use default format.",protected final DateFormat _customFormat;,java.text.DateFormat _customFormat,"protected , final "
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer._formatString,Field,"* Let's also keep format String for reference, to use for error messages",protected final String _formatString;,java.lang.String _formatString,"protected , final "
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer._defaultCtor,Field,"* We may know actual expected type; if so, it will be\n         * used for instantiation.\n         *\n         * @since 2.9",protected final Constructor<Calendar> _defaultCtor;,java.lang.reflect.Constructor _defaultCtor,"protected , final "
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer.instance,Field,No Comment,public final static DateDeserializer instance = new DateDeserializer();,com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer instance,"public , final , static "
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.ThreadGroupDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._inputType,Field,Marker type; null if String expected; otherwise usually numeric wrapper,protected final JavaType _inputType;,com.fasterxml.jackson.databind.JavaType _inputType,"protected , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._factory,Field,No Comment,protected final AnnotatedMethod _factory;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory,"protected , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._deser,Field,No Comment,protected final JsonDeserializer<?> _deser;,com.fasterxml.jackson.databind.JsonDeserializer _deser,"protected , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._valueInstantiator,Field,No Comment,protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._creatorProps,Field,No Comment,protected final SettableBeanProperty[] _creatorProps;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _creatorProps,"protected , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._defaultValue,Field,@since 2.19,protected final Enum<?> _defaultValue;,java.lang.Enum _defaultValue,"protected , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._hasArgs,Field,No Comment,protected final boolean _hasArgs;,boolean _hasArgs,"protected , final "
com.fasterxml.jackson.databind.deser.std.FactoryBasedEnumDeserializer._propCreator,Field,* Lazily instantiated property-based creator.\n     *\n     * @since 2.8,private transient volatile PropertyBasedCreator _propCreator;,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propCreator,"private , transient , volatile "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase.TEMP_PROPERTY_NAME,Field,No Comment,"protected final static PropertyName TEMP_PROPERTY_NAME = new PropertyName(""#temporary-name"");",com.fasterxml.jackson.databind.PropertyName TEMP_PROPERTY_NAME,"protected , final , static "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanType,Field,* Declared type of the bean this deserializer handles.,final protected JavaType _beanType;,com.fasterxml.jackson.databind.JavaType _beanType,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._serializationShape,Field,* Requested shape from bean class annotations.,final protected JsonFormat.Shape _serializationShape;,com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._valueInstantiator,Field,"* Object that handles details of constructing initial\n     * bean value (to which bind data to), unless instance\n     * is passed (via updateValue())",protected final ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,"protected , final "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._delegateDeserializer,Field,* Deserializer that is used iff delegate-based creator is\n     * to be used for deserializing from JSON Object.\n     *<p>\n     * NOTE: cannot be {@code final} because we need to get it during\n     * {@code resolve()} method (and not contextualization).,protected JsonDeserializer<Object> _delegateDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._arrayDelegateDeserializer,Field,* Deserializer that is used iff array-delegate-based creator\n     * is to be used for deserializing from JSON Object.\n     *<p>\n     * NOTE: cannot be {@code final} because we need to get it during\n     * {@code resolve()} method (and not contextualization).,protected JsonDeserializer<Object> _arrayDelegateDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _arrayDelegateDeserializer,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._propertyBasedCreator,Field,"* If the bean needs to be instantiated using constructor\n     * or factory method\n     * that takes one or more named properties as argument(s),\n     * this creator is used for instantiation.\n     * This value gets resolved during general resolution.",protected PropertyBasedCreator _propertyBasedCreator;,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._nonStandardCreation,Field,"* Flag that is set to mark cases where deserialization from Object value\n     * using otherwise ""standard"" property binding will need to use non-default\n     * creation method: namely, either ""full"" delegation (array-delegation does\n     * not apply), or properties-based Creator method is used.\n     *<p>\n     * Note that flag is somewhat mis-named as it is not affected by scalar-delegating\n     * creators; it only has effect on Object Value binding.",protected boolean _nonStandardCreation;,boolean _nonStandardCreation,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._vanillaProcessing,Field,"* Flag that indicates that no ""special features"" whatsoever\n     * are enabled, so the simplest processing is possible.",protected boolean _vanillaProcessing;,boolean _vanillaProcessing,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._beanProperties,Field,"* Mapping of property names to properties, built when all properties\n     * to use have been successfully resolved.",final protected BeanPropertyMap _beanProperties;,com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._injectables,Field,"* List of {@link ValueInjector}s, if any injectable values are\n     * expected by the bean; otherwise null.\n     * This includes injectors used for injecting values via setters\n     * and fields, but not ones passed through constructor parameters.",final protected ValueInjector[] _injectables;,com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._anySetter,Field,"* Fallback setter used for handling any properties that are not\n     * mapped to regular setters. If setter is not null, it will be\n     * called once for each such property.",protected SettableAnyProperty _anySetter;,com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignorableProps,Field,"* In addition to properties that are set, we will also keep\n     * track of recognized but ignorable properties: these will\n     * be skipped without errors or warnings.",final protected Set<String> _ignorableProps;,java.util.Set _ignorableProps,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._includableProps,Field,* Keep track of the the properties that needs to be specifically included.,final protected Set<String> _includableProps;,java.util.Set _includableProps,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._ignoreAllUnknown,Field,"* Flag that can be set to ignore and skip unknown properties.\n     * If set, will not throw an exception for unknown properties.",final protected boolean _ignoreAllUnknown;,boolean _ignoreAllUnknown,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._needViewProcesing,Field,* Flag that indicates that some aspect of deserialization depends\n     * on active view used (if any),final protected boolean _needViewProcesing;,boolean _needViewProcesing,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._backRefs,Field,* We may also have one or more back reference fields (usually\n     * zero or one).,"final protected Map<String, SettableBeanProperty> _backRefs;",java.util.Map _backRefs,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._subDeserializers,Field,"* Lazily constructed map used to contain deserializers needed\n     * for polymorphic subtypes.\n     * Note that this is <b>only needed</b> for polymorphic types,\n     * that is, when the actual type is not statically known.\n     * For other types this remains null.\n     * The map type changed in 2.18 (from HashMap to ConcurrentHashMap)","protected transient ConcurrentHashMap<ClassKey, JsonDeserializer<Object>> _subDeserializers;",java.util.concurrent.ConcurrentHashMap _subDeserializers,"protected , transient "
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._unwrappedPropertyHandler,Field,"* If one of properties has ""unwrapped"" value, we need separate\n     * helper object",protected UnwrappedPropertyHandler _unwrappedPropertyHandler;,com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._externalTypeIdHandler,Field,* Handler that we need if any of properties uses external\n     * type id.,protected ExternalTypeHandler _externalTypeIdHandler;,com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBase._objectIdReader,Field,"* If an Object Id is to be used for value handled by this\n     * deserializer, this reader is used for handling.",protected final ObjectIdReader _objectIdReader;,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader,"protected , final "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_OBJECT,Field,No Comment,private final static Class<?> CLASS_OBJECT = Object.class;,java.lang.Class CLASS_OBJECT,"private , final , static "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_STRING,Field,No Comment,private final static Class<?> CLASS_STRING = String.class;,java.lang.Class CLASS_STRING,"private , final , static "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_CHAR_SEQUENCE,Field,No Comment,private final static Class<?> CLASS_CHAR_SEQUENCE = CharSequence.class;,java.lang.Class CLASS_CHAR_SEQUENCE,"private , final , static "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_ITERABLE,Field,No Comment,private final static Class<?> CLASS_ITERABLE = Iterable.class;,java.lang.Class CLASS_ITERABLE,"private , final , static "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_MAP_ENTRY,Field,No Comment,private final static Class<?> CLASS_MAP_ENTRY = Map.Entry.class;,java.lang.Class CLASS_MAP_ENTRY,"private , final , static "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory.CLASS_SERIALIZABLE,Field,No Comment,private final static Class<?> CLASS_SERIALIZABLE = Serializable.class;,java.lang.Class CLASS_SERIALIZABLE,"private , final , static "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory._factoryConfig,Field,"* Configuration settings for this factory; immutable instance (just like this\n     * factory), new version created via copy-constructor (fluent-style)",protected final DeserializerFactoryConfig _factoryConfig;,com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig _factoryConfig,"protected , final "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$ContainerDefaultMappings._collectionFallbacks,Field,cases where the most common concrete Collection will do.,"final static HashMap<String, Class<? extends Collection>> _collectionFallbacks;",java.util.HashMap _collectionFallbacks,"final , static "
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory$ContainerDefaultMappings._mapFallbacks,Field,cases where the most common concrete Maps will do.,"final static HashMap<String, Class<? extends Map>> _mapFallbacks;",java.util.HashMap _mapFallbacks,"final , static "
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._objectIds,Field,No Comment,"protected transient LinkedHashMap<ObjectIdGenerator.IdKey, ReadableObjectId> _objectIds;",java.util.LinkedHashMap _objectIds,"protected , transient "
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext._objectIdResolvers,Field,No Comment,private List<ObjectIdResolver> _objectIdResolvers;,java.util.List _objectIdResolvers,private 
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.INIT_CAUSE_PARAMS,Field,* Signature of <b>Throwable.initCause</b> method.,private final static Class<?>[] INIT_CAUSE_PARAMS = new Class<?>[] { Throwable.class };,java.lang.Class[] INIT_CAUSE_PARAMS,"private , final , static "
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory.instance,Field,* Globally shareable thread-safe instance which has no additional custom deserializers\n     * registered,public final static BeanDeserializerFactory instance = new BeanDeserializerFactory(new DeserializerFactoryConfig());,com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance,"public , final , static "
com.fasterxml.jackson.databind.deser.SettableBeanProperty.MISSING_VALUE_DESERIALIZER,Field,"* To avoid nasty NPEs, let's use a placeholder for _valueDeserializer,\n     * if real deserializer is not (yet) available.\n     *\n     * @since 2.2","protected static final JsonDeserializer<Object> MISSING_VALUE_DESERIALIZER = new FailingDeserializer(""No _valueDeserializer assigned"");",com.fasterxml.jackson.databind.JsonDeserializer MISSING_VALUE_DESERIALIZER,"protected , static , final "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._propName,Field,* Logical name of the property (often but not always derived\n     * from the setter method name),protected final PropertyName _propName;,com.fasterxml.jackson.databind.PropertyName _propName,"protected , final "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._type,Field,* Base type for property; may be a supertype of actual value.,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._wrapperName,Field,* @since 2.2,protected final PropertyName _wrapperName;,com.fasterxml.jackson.databind.PropertyName _wrapperName,"protected , final "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._contextAnnotations,Field,"* Class that contains this property (either class that declares\n     * the property or one of its subclasses), class that is\n     * deserialized using deserializer that contains this property.",protected final transient Annotations _contextAnnotations;,com.fasterxml.jackson.databind.util.Annotations _contextAnnotations,"protected , final , transient "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._valueDeserializer,Field,* Deserializer used for handling property value.\n     *<p>\n     * NOTE: has been immutable since 2.3,protected final JsonDeserializer<Object> _valueDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._valueTypeDeserializer,Field,"* If value will contain type information (to support\n     * polymorphic handling), this is the type deserializer\n     * used to handle type resolution.",protected final TypeDeserializer _valueTypeDeserializer;,com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer,"protected , final "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._nullProvider,Field,"* Entity used for possible translation from `null` into non-null\n     * value of type of this property.\n     * Often same as <code>_valueDeserializer</code>, but not always.\n     *\n     * @since 2.9",protected final NullValueProvider _nullProvider;,com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider,"protected , final "
com.fasterxml.jackson.databind.deser.SettableBeanProperty._managedReferenceName,Field,"* If property represents a managed (forward) reference, we will need\n     * the name of reference for later linking.\n     *<p>\n     * TODO: should try to make immutable.",protected String _managedReferenceName;,java.lang.String _managedReferenceName,protected 
com.fasterxml.jackson.databind.deser.SettableBeanProperty._objectIdInfo,Field,* This is the information for object identity associated with the property.\n     * <p>\n     * TODO: should try to make immutable.,protected ObjectIdInfo _objectIdInfo;,com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo,protected 
com.fasterxml.jackson.databind.deser.SettableBeanProperty._viewMatcher,Field,"* Helper object used for checking whether this property is to\n     * be included in the active view, if property is view-specific;\n     * null otherwise.\n     *<p>\n     * TODO: should try to make immutable.",protected ViewMatcher _viewMatcher;,com.fasterxml.jackson.databind.util.ViewMatcher _viewMatcher,protected 
com.fasterxml.jackson.databind.deser.SettableBeanProperty._propertyIndex,Field,"* Index of property (within all property of a bean); assigned\n     * when all properties have been collected. Order of entries\n     * is arbitrary, but once indexes are assigned they are not\n     * changed.\n     *<p>\n     * TODO: should try to make immutable if at all possible",protected int _propertyIndex = -1;,int _propertyIndex,protected 
com.fasterxml.jackson.databind.deser.SettableBeanProperty$Delegating.delegate,Field,No Comment,protected final SettableBeanProperty delegate;,com.fasterxml.jackson.databind.deser.SettableBeanProperty delegate,"protected , final "
com.fasterxml.jackson.databind.deser.DeserializerFactory.NO_DESERIALIZERS,Field,No Comment,protected final static Deserializers[] NO_DESERIALIZERS = new Deserializers[0];,com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS,"protected , final , static "
com.fasterxml.jackson.databind.deser.DataFormatReaders.DEFAULT_MAX_INPUT_LOOKAHEAD,Field,"* By default we will look ahead at most 64 bytes; in most cases,\n     * much less (4 bytes or so) is needed, but we will allow bit more\n     * leniency to support data formats that need more complex heuristics.",public final static int DEFAULT_MAX_INPUT_LOOKAHEAD = 64;,int DEFAULT_MAX_INPUT_LOOKAHEAD,"public , final , static "
com.fasterxml.jackson.databind.deser.DataFormatReaders._readers,Field,"* Ordered list of readers which both represent data formats to\n     * detect (in precedence order, starting with highest) and contain\n     * factories used for actual detection.",protected final ObjectReader[] _readers;,com.fasterxml.jackson.databind.ObjectReader[] _readers,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders._optimalMatch,Field,"* Strength of match we consider to be good enough to be used\n     * without checking any other formats.\n     * Default value is {@link MatchStrength#SOLID_MATCH},",protected final MatchStrength _optimalMatch;,com.fasterxml.jackson.core.format.MatchStrength _optimalMatch,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders._minimalMatch,Field,"* Strength of minimal match we accept as the answer, unless\n     * better matches are found.\n     * Default value is {@link MatchStrength#WEAK_MATCH},",protected final MatchStrength _minimalMatch;,com.fasterxml.jackson.core.format.MatchStrength _minimalMatch,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders._maxInputLookahead,Field,* Maximum number of leading bytes of the input that we can read\n     * to determine data format.\n     *<p>\n     * Default value is {@link #DEFAULT_MAX_INPUT_LOOKAHEAD}.,protected final int _maxInputLookahead;,int _maxInputLookahead,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match._originalStream,Field,No Comment,protected final InputStream _originalStream;,java.io.InputStream _originalStream,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match._bufferedData,Field,* Content read during format matching process,protected final byte[] _bufferedData;,byte[] _bufferedData,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match._bufferedStart,Field,* Pointer to the first byte in buffer available for reading,protected final int _bufferedStart;,int _bufferedStart,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match._bufferedLength,Field,* Number of bytes available in buffer.,protected final int _bufferedLength;,int _bufferedLength,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match._match,Field,* Factory that produced sufficient match (if any),protected final ObjectReader _match;,com.fasterxml.jackson.databind.ObjectReader _match,"protected , final "
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match._matchStrength,Field,* Strength of match with {@link #_match},protected final MatchStrength _matchStrength;,com.fasterxml.jackson.core.format.MatchStrength _matchStrength,"protected , final "
com.fasterxml.jackson.databind.deser.DeserializerCache.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.DeserializerCache.DEFAULT_MAX_CACHE_SIZE,Field,* Default size of the underlying cache to use.\n     * \n     * @since 2.16,public final static int DEFAULT_MAX_CACHE_SIZE = 2000;,int DEFAULT_MAX_CACHE_SIZE,"public , final , static "
com.fasterxml.jackson.databind.deser.DeserializerCache._cachedDeserializers,Field,"* We will also cache some dynamically constructed deserializers;\n     * specifically, ones that are expensive to construct.\n     * This currently means POJO, Enum and Container deserializers.","protected final LookupCache<JavaType, JsonDeserializer<Object>> _cachedDeserializers;",com.fasterxml.jackson.databind.util.LookupCache _cachedDeserializers,"protected , final "
com.fasterxml.jackson.databind.deser.DeserializerCache._incompleteDeserializers,Field,"* During deserializer construction process we may need to keep track of partially\n     * completed deserializers, to resolve cyclic dependencies. This is the\n     * map used for storing deserializers before they are fully complete.","protected final HashMap<JavaType, JsonDeserializer<Object>> _incompleteDeserializers = new HashMap<JavaType, JsonDeserializer<Object>>(8);",java.util.HashMap _incompleteDeserializers,"protected , final "
com.fasterxml.jackson.databind.deser.DeserializerCache._incompleteDeserializersLock,Field,* We hold an explicit lock while creating deserializers to avoid creating duplicates.\n     * Guards {@link #_incompleteDeserializers}.\n     *\n     * @since 2.17,private final ReentrantLock _incompleteDeserializersLock = new ReentrantLock();,java.util.concurrent.locks.ReentrantLock _incompleteDeserializersLock,"private , final "
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._config,Field,No Comment,final protected DeserializationConfig _config;,com.fasterxml.jackson.databind.DeserializationConfig _config,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._context,Field,* @since 2.9,final protected DeserializationContext _context;,com.fasterxml.jackson.databind.DeserializationContext _context,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._beanDesc,Field,* Introspected information about POJO for deserializer to handle,final protected BeanDescription _beanDesc;,com.fasterxml.jackson.databind.BeanDescription _beanDesc,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._properties,Field,* Properties to deserialize collected so far.,"final protected Map<String, SettableBeanProperty> _properties = new LinkedHashMap<String, SettableBeanProperty>();",java.util.Map _properties,"final , protected "
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._propsBasedCreatorParams,Field,"* Parameters of the primary properties-based Creator, if any.\n     *\n     * @since 2.18",protected SettableBeanProperty[] _propsBasedCreatorParams;,com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propsBasedCreatorParams,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._injectables,Field,* Value injectors for deserialization,protected List<ValueInjector> _injectables;,java.util.List _injectables,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._backRefProperties,Field,* Back-reference properties this bean contains (if any),"protected HashMap<String, SettableBeanProperty> _backRefProperties;",java.util.HashMap _backRefProperties,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._ignorableProps,Field,"* Set of names of properties that are recognized but are to be ignored for deserialization\n     * purposes (meaning no exception is thrown, value is just skipped).",protected HashSet<String> _ignorableProps;,java.util.HashSet _ignorableProps,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._includableProps,Field,"* Set of names of properties that are recognized and are set to be included for deserialization\n     * purposes (null deactivate this, empty includes nothing).",protected HashSet<String> _includableProps;,java.util.HashSet _includableProps,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._valueInstantiator,Field,* Object that will handle value instantiation for the bean type.,protected ValueInstantiator _valueInstantiator;,com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._objectIdReader,Field,"* Handler for Object Id values, if Object Ids are enabled for the\n     * bean type.",protected ObjectIdReader _objectIdReader;,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._anySetter,Field,"* Fallback setter used for handling any properties that are not\n     * mapped to regular setters. If setter is not null, it will be\n     * called once for each such property.",protected SettableAnyProperty _anySetter;,com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._ignoreAllUnknown,Field,"* Flag that can be set to ignore and skip unknown properties.\n     * If set, will not throw an exception for unknown properties.",protected boolean _ignoreAllUnknown;,boolean _ignoreAllUnknown,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._buildMethod,Field,"* When creating Builder-based deserializers, this indicates\n     * method to call on builder to finalize value.",protected AnnotatedMethod _buildMethod;,com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod,protected 
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder._builderConfig,Field,"* In addition, Builder may have additional configuration",protected JsonPOJOBuilder.Value _builderConfig;,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value _builderConfig,protected 
com.fasterxml.jackson.databind.deser.ValueInstantiator$Base.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.ValueInstantiator$Base._valueType,Field,No Comment,protected final Class<?> _valueType;,java.lang.Class _valueType,"protected , final "
com.fasterxml.jackson.databind.deser.ValueInstantiator$Delegating.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.deser.ValueInstantiator$Delegating._delegate,Field,No Comment,protected final ValueInstantiator _delegate;,com.fasterxml.jackson.databind.deser.ValueInstantiator _delegate,"protected , final "
com.fasterxml.jackson.databind.module.SimpleSerializers.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 3L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.module.SimpleSerializers._classMappings,Field,* Class-based mappings that are used both for exact and\n     * sub-class matches.,"protected HashMap<ClassKey, JsonSerializer<?>> _classMappings = null;",java.util.HashMap _classMappings,protected 
com.fasterxml.jackson.databind.module.SimpleSerializers._interfaceMappings,Field,* Interface-based matches.,"protected HashMap<ClassKey, JsonSerializer<?>> _interfaceMappings = null;",java.util.HashMap _interfaceMappings,protected 
com.fasterxml.jackson.databind.module.SimpleSerializers._hasEnumSerializer,Field,"* Flag to help find ""generic"" enum serializer, if one has been registered.\n     *\n     * @since 2.3",protected boolean _hasEnumSerializer = false;,boolean _hasEnumSerializer,protected 
com.fasterxml.jackson.databind.module.SimpleDeserializers.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.module.SimpleDeserializers._classMappings,Field,No Comment,"protected HashMap<ClassKey, JsonDeserializer<?>> _classMappings = null;",java.util.HashMap _classMappings,protected 
com.fasterxml.jackson.databind.module.SimpleDeserializers._hasEnumDeserializer,Field,"* Flag to help find ""generic"" enum deserializer, if one has been registered.\n     *\n     * @since 2.3",protected boolean _hasEnumDeserializer = false;,boolean _hasEnumDeserializer,protected 
com.fasterxml.jackson.databind.module.SimpleKeyDeserializers.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.module.SimpleKeyDeserializers._classMappings,Field,No Comment,"protected HashMap<ClassKey, KeyDeserializer> _classMappings = null;",java.util.HashMap _classMappings,protected 
com.fasterxml.jackson.databind.module.SimpleModule.serialVersionUID,Field,2.5.0,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.module.SimpleModule.MODULE_ID_SEQ,Field,but not quite it...,private static final AtomicInteger MODULE_ID_SEQ = new AtomicInteger(1);,java.util.concurrent.atomic.AtomicInteger MODULE_ID_SEQ,"private , static , final "
com.fasterxml.jackson.databind.module.SimpleModule._name,Field,No Comment,protected final String _name;,java.lang.String _name,"protected , final "
com.fasterxml.jackson.databind.module.SimpleModule._version,Field,No Comment,protected final Version _version;,com.fasterxml.jackson.core.Version _version,"protected , final "
com.fasterxml.jackson.databind.module.SimpleModule._hasExplicitName,Field,"* Flag that indicates whether module was given an explicit name\n     * or not. Distinction is used to determine whether method\n     * {@link #getTypeId()} should return name (yes, if explicit) or\n     * {@code null} (if no explicit name was passed).\n     *\n     * @since 2.13",protected final boolean _hasExplicitName;,boolean _hasExplicitName,"protected , final "
com.fasterxml.jackson.databind.module.SimpleModule._serializers,Field,No Comment,protected SimpleSerializers _serializers = null;,com.fasterxml.jackson.databind.module.SimpleSerializers _serializers,protected 
com.fasterxml.jackson.databind.module.SimpleModule._deserializers,Field,No Comment,protected SimpleDeserializers _deserializers = null;,com.fasterxml.jackson.databind.module.SimpleDeserializers _deserializers,protected 
com.fasterxml.jackson.databind.module.SimpleModule._keySerializers,Field,No Comment,protected SimpleSerializers _keySerializers = null;,com.fasterxml.jackson.databind.module.SimpleSerializers _keySerializers,protected 
com.fasterxml.jackson.databind.module.SimpleModule._keyDeserializers,Field,No Comment,protected SimpleKeyDeserializers _keyDeserializers = null;,com.fasterxml.jackson.databind.module.SimpleKeyDeserializers _keyDeserializers,protected 
com.fasterxml.jackson.databind.module.SimpleModule._abstractTypes,Field,* Lazily-constructed resolver used for storing mappings from\n     * abstract classes to more specific implementing classes\n     * (which may be abstract or concrete),protected SimpleAbstractTypeResolver _abstractTypes = null;,com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver _abstractTypes,protected 
com.fasterxml.jackson.databind.module.SimpleModule._valueInstantiators,Field,* Lazily-constructed resolver used for storing mappings from\n     * abstract classes to more specific implementing classes\n     * (which may be abstract or concrete),protected SimpleValueInstantiators _valueInstantiators = null;,com.fasterxml.jackson.databind.module.SimpleValueInstantiators _valueInstantiators,protected 
com.fasterxml.jackson.databind.module.SimpleModule._deserializerModifier,Field,* @since 2.2,protected BeanDeserializerModifier _deserializerModifier = null;,com.fasterxml.jackson.databind.deser.BeanDeserializerModifier _deserializerModifier,protected 
com.fasterxml.jackson.databind.module.SimpleModule._serializerModifier,Field,* @since 2.2,protected BeanSerializerModifier _serializerModifier = null;,com.fasterxml.jackson.databind.ser.BeanSerializerModifier _serializerModifier,protected 
com.fasterxml.jackson.databind.module.SimpleModule._mixins,Field,"* Lazily-constructed map that contains mix-in definitions, indexed\n     * by target class, value being mix-in to apply.","protected HashMap<Class<?>, Class<?>> _mixins = null;",java.util.HashMap _mixins,protected 
com.fasterxml.jackson.databind.module.SimpleModule._subtypes,Field,"* Set of subtypes to register, if any.",protected LinkedHashSet<NamedType> _subtypes = null;,java.util.LinkedHashSet _subtypes,protected 
com.fasterxml.jackson.databind.module.SimpleModule._namingStrategy,Field,* @since 2.3,protected PropertyNamingStrategy _namingStrategy = null;,com.fasterxml.jackson.databind.PropertyNamingStrategy _namingStrategy,protected 
com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver._mappings,Field,* Mappings from super types to subtypes,"protected final HashMap<ClassKey, Class<?>> _mappings = new HashMap<ClassKey, Class<?>>();",java.util.HashMap _mappings,"protected , final "
com.fasterxml.jackson.databind.module.SimpleValueInstantiators.serialVersionUID,Field,No Comment,private static final long serialVersionUID = -8929386427526115130L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.module.SimpleValueInstantiators._classMappings,Field,"* Mappings from raw (type-erased, i.e. non-generic) types\n     * to matching {@link ValueInstantiator} instances.","protected HashMap<ClassKey, ValueInstantiator> _classMappings;",java.util.HashMap _classMappings,protected 
com.fasterxml.jackson.databind.ext.DOMDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.DOMDeserializer.DEFAULT_PARSER_FACTORY,Field,No Comment,private final static DocumentBuilderFactory DEFAULT_PARSER_FACTORY;,javax.xml.parsers.DocumentBuilderFactory DEFAULT_PARSER_FACTORY,"private , final , static "
com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.DOMSerializer.transformerFactory,Field,No Comment,protected final TransformerFactory transformerFactory;,javax.xml.transform.TransformerFactory transformerFactory,"protected , final "
com.fasterxml.jackson.databind.ext.Java7Support.IMPL,Field,No Comment,private final static Java7Support IMPL;,com.fasterxml.jackson.databind.ext.Java7Support IMPL,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.PACKAGE_PREFIX_JAVAX_XML,Field,"To make 2 main ""optional"" handler groups (javax.xml.stream)\n     * more dynamic, we better only figure out handlers completely dynamically, if and\n     * when they are needed. To do this we need to assume package prefixes.","private final static String PACKAGE_PREFIX_JAVAX_XML = ""javax.xml."";",java.lang.String PACKAGE_PREFIX_JAVAX_XML,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.SERIALIZERS_FOR_JAVAX_XML,Field,No Comment,"private final static String SERIALIZERS_FOR_JAVAX_XML = ""com.fasterxml.jackson.databind.ext.CoreXMLSerializers"";",java.lang.String SERIALIZERS_FOR_JAVAX_XML,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.DESERIALIZERS_FOR_JAVAX_XML,Field,No Comment,"private final static String DESERIALIZERS_FOR_JAVAX_XML = ""com.fasterxml.jackson.databind.ext.CoreXMLDeserializers"";",java.lang.String DESERIALIZERS_FOR_JAVAX_XML,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.SERIALIZER_FOR_DOM_NODE,Field,"private final static String CLASS_NAME_DOM_DOCUMENT = ""org.w3c.dom.Document"";","private final static String SERIALIZER_FOR_DOM_NODE = ""com.fasterxml.jackson.databind.ext.DOMSerializer"";",java.lang.String SERIALIZER_FOR_DOM_NODE,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.DESERIALIZER_FOR_DOM_DOCUMENT,Field,No Comment,"private final static String DESERIALIZER_FOR_DOM_DOCUMENT = ""com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer"";",java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.DESERIALIZER_FOR_DOM_NODE,Field,No Comment,"private final static String DESERIALIZER_FOR_DOM_NODE = ""com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer"";",java.lang.String DESERIALIZER_FOR_DOM_NODE,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.CLASS_DOM_NODE,Field,"// in actual runtime, if module java.xml is not present",private final static Class<?> CLASS_DOM_NODE;,java.lang.Class CLASS_DOM_NODE,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.CLASS_DOM_DOCUMENT,Field,No Comment,private final static Class<?> CLASS_DOM_DOCUMENT;,java.lang.Class CLASS_DOM_DOCUMENT,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory._jdk7Helper,Field,No Comment,private static final Java7Handlers _jdk7Helper;,com.fasterxml.jackson.databind.ext.Java7Handlers _jdk7Helper,"private , static , final "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.instance,Field,No Comment,public final static OptionalHandlerFactory instance = new OptionalHandlerFactory();,com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance,"public , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory._sqlDeserializers,Field,"(is included on Java 8, but not part of JDK core for Java 9 and beyond)","private final Map<String, String> _sqlDeserializers;",java.util.Map _sqlDeserializers,"private , final "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory._sqlSerializers,Field,No Comment,"private final Map<String, Object> _sqlSerializers;",java.util.Map _sqlSerializers,"private , final "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.CLS_NAME_JAVA_SQL_TIMESTAMP,Field,No Comment,"private final static String CLS_NAME_JAVA_SQL_TIMESTAMP = ""java.sql.Timestamp"";",java.lang.String CLS_NAME_JAVA_SQL_TIMESTAMP,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.CLS_NAME_JAVA_SQL_DATE,Field,No Comment,"private final static String CLS_NAME_JAVA_SQL_DATE = ""java.sql.Date"";",java.lang.String CLS_NAME_JAVA_SQL_DATE,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.CLS_NAME_JAVA_SQL_TIME,Field,No Comment,"private final static String CLS_NAME_JAVA_SQL_TIME = ""java.sql.Time"";",java.lang.String CLS_NAME_JAVA_SQL_TIME,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.CLS_NAME_JAVA_SQL_BLOB,Field,No Comment,"private final static String CLS_NAME_JAVA_SQL_BLOB = ""java.sql.Blob"";",java.lang.String CLS_NAME_JAVA_SQL_BLOB,"private , final , static "
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory.CLS_NAME_JAVA_SQL_SERIALBLOB,Field,No Comment,"private final static String CLS_NAME_JAVA_SQL_SERIALBLOB = ""javax.sql.rowset.serial.SerialBlob"";",java.lang.String CLS_NAME_JAVA_SQL_SERIALBLOB,"private , final , static "
com.fasterxml.jackson.databind.ext.Java7SupportImpl._bogus,Field,No Comment,"// compiler warns, just needed side-effects\n@SuppressWarnings(""unused"")\nprivate final Class<?> _bogus;",java.lang.Class _bogus,"private , final "
com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer.instance,Field,No Comment,final static XMLGregorianCalendarSerializer instance = new XMLGregorianCalendarSerializer();,com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer instance,"final , static "
com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer._delegate,Field,No Comment,final JsonSerializer<Object> _delegate;,com.fasterxml.jackson.databind.JsonSerializer _delegate,final 
com.fasterxml.jackson.databind.ext.CoreXMLSerializers$QNameSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.CoreXMLSerializers$QNameSerializer.instance,Field,No Comment,public final static JsonSerializer<?> instance = new QNameSerializer();,com.fasterxml.jackson.databind.JsonSerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ext.NioPathSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers.EMPTY_QNAME,Field,No Comment,"protected final static QName EMPTY_QNAME = QName.valueOf("""");",javax.xml.namespace.QName EMPTY_QNAME,"protected , final , static "
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers._dataTypeFactory,Field,"* Data type factories are thread-safe after instantiation (and\n     * configuration, if any); and since instantiation (esp. implementation\n     * introspection) can be expensive we better reuse the instance.",final static DatatypeFactory _dataTypeFactory;,javax.xml.datatype.DatatypeFactory _dataTypeFactory,"final , static "
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers.TYPE_DURATION,Field,No Comment,protected final static int TYPE_DURATION = 1;,int TYPE_DURATION,"protected , final , static "
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers.TYPE_G_CALENDAR,Field,No Comment,protected final static int TYPE_G_CALENDAR = 2;,int TYPE_G_CALENDAR,"protected , final , static "
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers.TYPE_QNAME,Field,No Comment,protected final static int TYPE_QNAME = 3;,int TYPE_QNAME,"protected , final , static "
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$Std._kind,Field,No Comment,protected final int _kind;,int _kind,"protected , final "
com.fasterxml.jackson.databind.ext.Java7Handlers.IMPL,Field,No Comment,private final static Java7Handlers IMPL = new Java7HandlersImpl();,com.fasterxml.jackson.databind.ext.Java7Handlers IMPL,"private , final , static "
com.fasterxml.jackson.databind.ext.NioPathDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ext.NioPathDeserializer.areWindowsFilePathsSupported,Field,No Comment,private static final boolean areWindowsFilePathsSupported;,boolean areWindowsFilePathsSupported,"private , static , final "
com.fasterxml.jackson.databind.ext.Java7HandlersImpl._pathClass,Field,No Comment,private final Class<?> _pathClass;,java.lang.Class _pathClass,"private , final "
com.fasterxml.jackson.databind.EnumNamingStrategies.LOWER_CAMEL_CASE,Field,"* Words other than first are capitalized and no separator is used between words.\n     * See {@link EnumNamingStrategies.LowerCamelCaseStrategy} for details.\n     * <p>\n     * Example ""ENUM_NAME"" would be converted to ""enumName"".\n     *\n     * @since 2.19",public static final EnumNamingStrategy LOWER_CAMEL_CASE = LowerCamelCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.EnumNamingStrategy LOWER_CAMEL_CASE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies.UPPER_CAMEL_CASE,Field,"* Naming convention used in languages like Pascal, where all words are capitalized and no separator is used between\n     * words.\n     * See {@link EnumNamingStrategies.UpperCamelCaseStrategy} for details.\n     * <p>\n     * Example ""ENUM_NAME"" would be converted to ""EnumName"".\n     *\n     * @since 2.19",public static final EnumNamingStrategy UPPER_CAMEL_CASE = UpperCamelCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.EnumNamingStrategy UPPER_CAMEL_CASE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies.SNAKE_CASE,Field,"* Naming convention used in languages like C, where words are in lower-case letters, separated by underscores.\n     * See {@link EnumNamingStrategies.SnakeCaseStrategy} for details.\n     * <p>\n     * Example ""ENUM_NAME"" would be converted to ""enum_name"".\n     *\n     * @since 2.19",public static final EnumNamingStrategy SNAKE_CASE = SnakeCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.EnumNamingStrategy SNAKE_CASE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies.UPPER_SNAKE_CASE,Field,"* Naming convention in which the words are in upper-case letters, separated by underscores.\n     * See {@link EnumNamingStrategies.UpperSnakeCaseStrategy} for details.\n     * <p>\n     * Example ""ENUM_NAME"" would be converted to ""ENUM_NAME"", but ""__ENUM_NAME_"" would also be converted to ""ENUM_NAME"".\n     *\n     * @since 2.19",public static final EnumNamingStrategy UPPER_SNAKE_CASE = UpperSnakeCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.EnumNamingStrategy UPPER_SNAKE_CASE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies.LOWER_CASE,Field,"* Naming convention in which all words of the logical name are in lower case, and no separator is used between words.\n     * See {@link EnumNamingStrategies.LowerCaseStrategy} for details.\n     * <p>\n     * Example ""ENUM_NAME"" would be converted to ""enumname"".\n     *\n     * @since 2.19",public static final EnumNamingStrategy LOWER_CASE = LowerCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.EnumNamingStrategy LOWER_CASE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies.KEBAB_CASE,Field,"* Naming convention used in languages like Lisp, where words are in lower-case letters, separated by hyphens.\n     * See {@link EnumNamingStrategies.KebabCaseStrategy} for details.\n     * <p>\n     * Example ""ENUM_NAME"" would be converted to ""enum-name"".\n     *\n     * @since 2.19",public static final EnumNamingStrategy KEBAB_CASE = KebabCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.EnumNamingStrategy KEBAB_CASE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies.LOWER_DOT_CASE,Field,"* Naming convention widely used as configuration properties name, where words are in lower-case letters,\n     * separated by dots.\n     * See {@link EnumNamingStrategies.LowerDotCaseStrategy} for details.\n     * <p>\n     * Example ""ENUM_NAME"" would be converted to ""enum.name"".\n     *\n     * @since 2.19",public static final EnumNamingStrategy LOWER_DOT_CASE = LowerDotCaseStrategy.INSTANCE;,com.fasterxml.jackson.databind.EnumNamingStrategy LOWER_DOT_CASE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$DelegatingEnumNamingStrategy.strategy,Field,No Comment,private final NamingStrategyImpls strategy;,com.fasterxml.jackson.databind.util.NamingStrategyImpls strategy,"private , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy.INSTANCE,Field,* An instance of {@link CamelCaseStrategy} for reuse.\n         *\n         * @since 2.15,public static final CamelCaseStrategy INSTANCE = new CamelCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$CamelCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$LowerCamelCaseStrategy.INSTANCE,Field,* An instance of {@link LowerCamelCaseStrategy} for reuse.\n         *\n         * @since 2.19,public static final LowerCamelCaseStrategy INSTANCE = new LowerCamelCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$LowerCamelCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$UpperCamelCaseStrategy.INSTANCE,Field,* An instance of {@link LowerCamelCaseStrategy} for reuse.\n         *\n         * @since 2.19,public static final UpperCamelCaseStrategy INSTANCE = new UpperCamelCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$UpperCamelCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$SnakeCaseStrategy.INSTANCE,Field,* An instance of {@link SnakeCaseStrategy} for reuse.\n         *\n         * @since 2.19,public static final SnakeCaseStrategy INSTANCE = new SnakeCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$SnakeCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$UpperSnakeCaseStrategy.INSTANCE,Field,* An instance of {@link UpperSnakeCaseStrategy} for reuse.\n         *\n         * @since 2.19,public static final UpperSnakeCaseStrategy INSTANCE = new UpperSnakeCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$UpperSnakeCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$LowerCaseStrategy.INSTANCE,Field,* An instance of {@link LowerCaseStrategy} for reuse.\n         *\n         * @since 2.19,public static final LowerCaseStrategy INSTANCE = new LowerCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$LowerCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$KebabCaseStrategy.INSTANCE,Field,* An instance of {@link KebabCaseStrategy} for reuse.\n         *\n         * @since 2.19,public static final KebabCaseStrategy INSTANCE = new KebabCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$KebabCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.EnumNamingStrategies$LowerDotCaseStrategy.INSTANCE,Field,* An instance of {@link LowerDotCaseStrategy} for reuse.\n         *\n         * @since 2.19,public static final LowerDotCaseStrategy INSTANCE = new LowerDotCaseStrategy();,com.fasterxml.jackson.databind.EnumNamingStrategies$LowerDotCaseStrategy INSTANCE,"public , static , final "
com.fasterxml.jackson.databind.SerializerProvider.CACHE_UNKNOWN_MAPPINGS,Field,"* Setting for determining whether mappings for ""unknown classes"" should be\n     * cached for faster resolution. Usually this isn't needed, but maybe it\n     * is in some cases?",protected final static boolean CACHE_UNKNOWN_MAPPINGS = false;,boolean CACHE_UNKNOWN_MAPPINGS,"protected , final , static "
com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_NULL_KEY_SERIALIZER,Field,No Comment,"public final static JsonSerializer<Object> DEFAULT_NULL_KEY_SERIALIZER = new FailingSerializer(""Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)"");",com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER,"public , final , static "
com.fasterxml.jackson.databind.SerializerProvider.DEFAULT_UNKNOWN_SERIALIZER,Field,"* Placeholder serializer used when <code>java.lang.Object</code> typed property\n     * is marked to be serialized.\n     *<br>\n     * NOTE: starting with 2.6, this instance is NOT used for any other types, and\n     * separate instances are constructed for ""empty"" Beans.\n     *<p>\n     * NOTE: changed to <code>protected</code> for 2.3; no need to be publicly available.",protected final static JsonSerializer<Object> DEFAULT_UNKNOWN_SERIALIZER = new UnknownSerializer();,com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER,"protected , final , static "
com.fasterxml.jackson.databind.SerializerProvider._config,Field,* Serialization configuration to use for serialization processing.,protected final SerializationConfig _config;,com.fasterxml.jackson.databind.SerializationConfig _config,"protected , final "
com.fasterxml.jackson.databind.SerializerProvider._serializationView,Field,"* View used for currently active serialization, if any.\n     * Only set for non-blueprint instances.",protected final Class<?> _serializationView;,java.lang.Class _serializationView,"protected , final "
com.fasterxml.jackson.databind.SerializerProvider._serializerFactory,Field,* Factory used for constructing actual serializer instances.\n     * Only set for non-blueprint instances.,protected final SerializerFactory _serializerFactory;,com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory,"protected , final "
com.fasterxml.jackson.databind.SerializerProvider._serializerCache,Field,* Cache for doing type-to-value-serializer lookups.,protected final SerializerCache _serializerCache;,com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache,"protected , final "
com.fasterxml.jackson.databind.SerializerProvider._attributes,Field,* Lazily-constructed holder for per-call attributes.\n     * Only set for non-blueprint instances.\n     *\n     * @since 2.3,protected transient ContextAttributes _attributes;,com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes,"protected , transient "
com.fasterxml.jackson.databind.SerializerProvider._unknownTypeSerializer,Field,* Serializer that gets called for values of types for which no\n     * serializers can be constructed.\n     *<p>\n     * The default serializer will simply thrown an exception.,protected JsonSerializer<Object> _unknownTypeSerializer = DEFAULT_UNKNOWN_SERIALIZER;,com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer,protected 
com.fasterxml.jackson.databind.SerializerProvider._keySerializer,Field,"* Serializer used to output non-null keys of Maps (which will get\n     * output as JSON Objects), if not null; if null, us the standard\n     * default key serializer.",protected JsonSerializer<Object> _keySerializer;,com.fasterxml.jackson.databind.JsonSerializer _keySerializer,protected 
com.fasterxml.jackson.databind.SerializerProvider._nullValueSerializer,Field,* Serializer used to output a null value. Default implementation\n     * writes nulls using {@link JsonGenerator#writeNull}.,protected JsonSerializer<Object> _nullValueSerializer = NullSerializer.instance;,com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer,protected 
com.fasterxml.jackson.databind.SerializerProvider._nullKeySerializer,Field,"* Serializer used to (try to) output a null key, due to an entry of\n     * {@link java.util.Map} having null key.\n     * The default implementation will throw an exception if this happens;\n     * alternative implementation (like one that would write an Empty String)\n     * can be defined.",protected JsonSerializer<Object> _nullKeySerializer = DEFAULT_NULL_KEY_SERIALIZER;,com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer,protected 
com.fasterxml.jackson.databind.SerializerProvider._knownSerializers,Field,"* For fast lookups, we will have a local non-shared read-only\n     * map that contains serializers previously fetched.",protected final ReadOnlyClassToSerializerMap _knownSerializers;,com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers,"protected , final "
com.fasterxml.jackson.databind.SerializerProvider._dateFormat,Field,"* Lazily acquired and instantiated formatter object: initialized\n     * first time it is needed, reused afterwards. Used via instances\n     * (not blueprints), so that access need not be thread-safe.",protected DateFormat _dateFormat;,java.text.DateFormat _dateFormat,protected 
com.fasterxml.jackson.databind.SerializerProvider._stdNullValueSerializer,Field,* Flag set to indicate that we are using vanilla null value serialization\n     *\n     * @since 2.3,protected final boolean _stdNullValueSerializer;,boolean _stdNullValueSerializer,"protected , final "
com.fasterxml.jackson.databind.PropertyName.serialVersionUID,Field,2.5,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyName._USE_DEFAULT,Field,No Comment,"private final static String _USE_DEFAULT = """";",java.lang.String _USE_DEFAULT,"private , final , static "
com.fasterxml.jackson.databind.PropertyName._NO_NAME,Field,No Comment,"private final static String _NO_NAME = """";",java.lang.String _NO_NAME,"private , final , static "
com.fasterxml.jackson.databind.PropertyName.USE_DEFAULT,Field,"* Special placeholder value that indicates that name to use should be\n     * based on the standard heuristics. This can be different from returning\n     * null, as null means ""no information available, whereas this value\n     * indicates explicit defaulting.","public final static PropertyName USE_DEFAULT = new PropertyName(_USE_DEFAULT, null);",com.fasterxml.jackson.databind.PropertyName USE_DEFAULT,"public , final , static "
com.fasterxml.jackson.databind.PropertyName.NO_NAME,Field,"* Special placeholder value that indicates that there is no name associated.\n     * Exact semantics to use (if any) depend on actual annotation in use, but\n     * commonly this value disables behavior for which name would be needed.","public final static PropertyName NO_NAME = new PropertyName(new String(_NO_NAME), null);",com.fasterxml.jackson.databind.PropertyName NO_NAME,"public , final , static "
com.fasterxml.jackson.databind.PropertyName._simpleName,Field,* Basic name of the property.,protected final String _simpleName;,java.lang.String _simpleName,"protected , final "
com.fasterxml.jackson.databind.PropertyName._namespace,Field,"* Additional namespace, for formats that have such concept (JSON\n     * does not, XML does, for example).",protected final String _namespace;,java.lang.String _namespace,"protected , final "
com.fasterxml.jackson.databind.PropertyName._encodedSimple,Field,* Lazily-constructed efficient representation of the simple name.\n     *<p>\n     * NOTE: not defined as volatile to avoid performance problem with\n     * concurrent access in multi-core environments; due to statelessness\n     * of {@link SerializedString} at most leads to multiple instantiations.\n     *\n     * @since 2.4,protected SerializableString _encodedSimple;,com.fasterxml.jackson.core.SerializableString _encodedSimple,protected 
com.fasterxml.jackson.databind.JsonMappingException.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 3L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.JsonMappingException.MAX_REFS_TO_LIST,Field,"* Let's limit length of reference chain, to limit damage in cases\n     * of infinite recursion.",final static int MAX_REFS_TO_LIST = 1000;,int MAX_REFS_TO_LIST,"final , static "
com.fasterxml.jackson.databind.JsonMappingException._path,Field,* Path through which problem that triggering throwing of\n     * this exception was reached.,protected LinkedList<Reference> _path;,java.util.LinkedList _path,protected 
com.fasterxml.jackson.databind.JsonMappingException._processor,Field,"* Underlying processor ({@link JsonParser} or {@link JsonGenerator}),\n     * if known.\n     *<p>\n     * NOTE: typically not serializable hence <code>transient</code>\n     *\n     * @since 2.7",protected transient Closeable _processor;,java.io.Closeable _processor,"protected , transient "
com.fasterxml.jackson.databind.JsonMappingException$Reference.serialVersionUID,Field,changes between 2.7 and 2.8,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.JsonMappingException$Reference._from,Field,transient since 2.8,protected transient Object _from;,java.lang.Object _from,"protected , transient "
com.fasterxml.jackson.databind.JsonMappingException$Reference._fieldName,Field,"* Name of field (for beans) or key (for Maps) that is part\n         * of the reference. May be null for Collection types (which\n         * generally have {@link #_index} defined), or when resolving\n         * Map classes without (yet) having an instance to operate on.",protected String _fieldName;,java.lang.String _fieldName,protected 
com.fasterxml.jackson.databind.JsonMappingException$Reference._index,Field,"* Index within a {@link Collection} instance that contained\n         * the reference; used if index is relevant and available.\n         * If either not applicable, or not available, -1 is used to\n         * denote ""not known"" (or not relevant).",protected int _index = -1;,int _index,protected 
com.fasterxml.jackson.databind.JsonMappingException$Reference._desc,Field,* Lazily-constructed description of this instance; needed mostly to\n         * allow JDK serialization to work in case where {@link #_from} is\n         * non-serializable (and has to be dropped) but we still want to pass\n         * actual description along.\n         *\n         * @since 2.8,protected String _desc;,java.lang.String _desc,protected 
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.serialVersionUID,Field,since 2.5,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_DESERIALIZERS,Field,No Comment,protected final static Deserializers[] NO_DESERIALIZERS = new Deserializers[0];,com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS,"protected , final , static "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_MODIFIERS,Field,No Comment,protected final static BeanDeserializerModifier[] NO_MODIFIERS = new BeanDeserializerModifier[0];,com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] NO_MODIFIERS,"protected , final , static "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_ABSTRACT_TYPE_RESOLVERS,Field,No Comment,protected final static AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS = new AbstractTypeResolver[0];,com.fasterxml.jackson.databind.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS,"protected , final , static "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.NO_VALUE_INSTANTIATORS,Field,No Comment,protected final static ValueInstantiators[] NO_VALUE_INSTANTIATORS = new ValueInstantiators[0];,com.fasterxml.jackson.databind.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS,"protected , final , static "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig.DEFAULT_KEY_DESERIALIZERS,Field,"* By default we plug default key deserializers using as ""just another"" set of\n     * of key deserializers.\n     *\n     * @since 2.2",protected final static KeyDeserializers[] DEFAULT_KEY_DESERIALIZERS = new KeyDeserializers[] { new StdKeyDeserializers() };,com.fasterxml.jackson.databind.deser.KeyDeserializers[] DEFAULT_KEY_DESERIALIZERS,"protected , final , static "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._additionalDeserializers,Field,"* List of providers for additional deserializers, checked before considering default\n     * basic or bean deserializers.",protected final Deserializers[] _additionalDeserializers;,com.fasterxml.jackson.databind.deser.Deserializers[] _additionalDeserializers,"protected , final "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._additionalKeyDeserializers,Field,"* List of providers for additional key deserializers, checked before considering\n     * standard key deserializers.",protected final KeyDeserializers[] _additionalKeyDeserializers;,com.fasterxml.jackson.databind.deser.KeyDeserializers[] _additionalKeyDeserializers,"protected , final "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._modifiers,Field,* List of modifiers that can change the way {@link BeanDeserializer} instances\n     * are configured and constructed.,protected final BeanDeserializerModifier[] _modifiers;,com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] _modifiers,"protected , final "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._abstractTypeResolvers,Field,"* List of objects that may be able to resolve abstract types to\n     * concrete types. Used by functionality like ""mr Bean"" to materialize\n     * types as needed.",protected final AbstractTypeResolver[] _abstractTypeResolvers;,com.fasterxml.jackson.databind.AbstractTypeResolver[] _abstractTypeResolvers,"protected , final "
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig._valueInstantiators,Field,* List of objects that know how to create instances of POJO types;\n     * possibly using custom construction (non-annoted constructors; factory\n     * methods external to value type etc).\n     * Used to support objects that are created using non-standard methods;\n     * or to support post-constructor functionality.,protected final ValueInstantiators[] _valueInstantiators;,com.fasterxml.jackson.databind.deser.ValueInstantiators[] _valueInstantiators,"protected , final "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.FEATURE_INDEX_ENUM,Field,No Comment,protected final static int FEATURE_INDEX_ENUM = 0;,int FEATURE_INDEX_ENUM,"protected , final , static "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures.FEATURE_INDEX_JSON_NODE,Field,No Comment,protected final static int FEATURE_INDEX_JSON_NODE = 1;,int FEATURE_INDEX_JSON_NODE,"protected , final , static "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures._enabledFor1,Field,No Comment,"private final int _enabledFor1, _enabledFor2;",int _enabledFor1,"private , final "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures._enabledFor2,Field,No Comment,"private final int _enabledFor1, _enabledFor2;",int _enabledFor2,"private , final "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures._explicitFor1,Field,No Comment,"private final int _explicitFor1, _explicitFor2;",int _explicitFor1,"private , final "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures._explicitFor2,Field,No Comment,"private final int _explicitFor1, _explicitFor2;",int _explicitFor2,"private , final "
com.fasterxml.jackson.databind.cfg.DatatypeFeatures$DefaultHolder.DEFAULT_FEATURES,Field,No Comment,private static final DatatypeFeatures DEFAULT_FEATURES;,com.fasterxml.jackson.databind.cfg.DatatypeFeatures DEFAULT_FEATURES,"private , static , final "
com.fasterxml.jackson.databind.cfg.CoercionConfigs.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.CoercionConfigs.TARGET_TYPE_COUNT,Field,No Comment,private final static int TARGET_TYPE_COUNT = LogicalType.values().length;,int TARGET_TYPE_COUNT,"private , final , static "
com.fasterxml.jackson.databind.cfg.CoercionConfigs._defaultAction,Field,* Global default for cases not explicitly covered,protected CoercionAction _defaultAction;,com.fasterxml.jackson.databind.cfg.CoercionAction _defaultAction,protected 
com.fasterxml.jackson.databind.cfg.CoercionConfigs._defaultCoercions,Field,* Default coercion definitions used if no overrides found\n     * by logical or physical type.,protected final MutableCoercionConfig _defaultCoercions;,com.fasterxml.jackson.databind.cfg.MutableCoercionConfig _defaultCoercions,"protected , final "
com.fasterxml.jackson.databind.cfg.CoercionConfigs._perTypeCoercions,Field,* Coercion definitions by logical type ({@link LogicalType}),protected MutableCoercionConfig[] _perTypeCoercions;,com.fasterxml.jackson.databind.cfg.MutableCoercionConfig[] _perTypeCoercions,protected 
com.fasterxml.jackson.databind.cfg.CoercionConfigs._perClassCoercions,Field,* Coercion definitions by physical type (Class).,"protected Map<Class<?>, MutableCoercionConfig> _perClassCoercions;",java.util.Map _perClassCoercions,protected 
com.fasterxml.jackson.databind.cfg.ConstructorDetector.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.ConstructorDetector.DEFAULT,Field,"* Instance used by default, which:\n     *<ul>\n     * <li>Uses {@link SingleArgConstructor#HEURISTIC} for single-argument constructor case\n     *  </li>\n     * <li>Does not require explicit {@code @JsonCreator} annotations (so allows\n     * auto-detection of Visible constructors} (except for JDK types)\n     *  </li>\n     * <li>Does not allow auto-detection of Visible constructors for so-called JDK\n     *   types; that is, classes in packages {@code java.*} and {@code javax.*}\n     *  </li>\n     *</ul>",public final static ConstructorDetector DEFAULT = new ConstructorDetector(SingleArgConstructor.HEURISTIC);,com.fasterxml.jackson.databind.cfg.ConstructorDetector DEFAULT,"public , final , static "
com.fasterxml.jackson.databind.cfg.ConstructorDetector.USE_PROPERTIES_BASED,Field,* Instance similar to {@link #DEFAULT} except that for single-argument case\n     * uses setting of {@link SingleArgConstructor#PROPERTIES}.,public final static ConstructorDetector USE_PROPERTIES_BASED = new ConstructorDetector(SingleArgConstructor.PROPERTIES);,com.fasterxml.jackson.databind.cfg.ConstructorDetector USE_PROPERTIES_BASED,"public , final , static "
com.fasterxml.jackson.databind.cfg.ConstructorDetector.USE_DELEGATING,Field,* Instance similar to {@link #DEFAULT} except that for single-argument case\n     * uses setting of {@link SingleArgConstructor#DELEGATING}.,public final static ConstructorDetector USE_DELEGATING = new ConstructorDetector(SingleArgConstructor.DELEGATING);,com.fasterxml.jackson.databind.cfg.ConstructorDetector USE_DELEGATING,"public , final , static "
com.fasterxml.jackson.databind.cfg.ConstructorDetector.EXPLICIT_ONLY,Field,* Instance similar to {@link #DEFAULT} except that for single-argument case\n     * uses setting of {@link SingleArgConstructor#REQUIRE_MODE}.,public final static ConstructorDetector EXPLICIT_ONLY = new ConstructorDetector(SingleArgConstructor.REQUIRE_MODE);,com.fasterxml.jackson.databind.cfg.ConstructorDetector EXPLICIT_ONLY,"public , final , static "
com.fasterxml.jackson.databind.cfg.ConstructorDetector._singleArgMode,Field,No Comment,protected final SingleArgConstructor _singleArgMode;,com.fasterxml.jackson.databind.cfg.ConstructorDetector$SingleArgConstructor _singleArgMode,"protected , final "
com.fasterxml.jackson.databind.cfg.ConstructorDetector._requireCtorAnnotation,Field,* Whether explicit {@link com.fasterxml.jackson.annotation.JsonCreator}\n     * is always required for detecting constructors (even if visible) other\n     * than the default (no argument) constructor.,protected final boolean _requireCtorAnnotation;,boolean _requireCtorAnnotation,"protected , final "
com.fasterxml.jackson.databind.cfg.ConstructorDetector._allowJDKTypeCtors,Field,"* Whether auto-detection of constructors of ""JDK types"" (those in\n     * packages {@code java.} and {@code javax.}) is allowed or not",protected final boolean _allowJDKTypeCtors;,boolean _allowJDKTypeCtors,"protected , final "
com.fasterxml.jackson.databind.cfg.ConfigOverrides.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.ConfigOverrides._overrides,Field,* Per-type override definitions,"protected Map<Class<?>, MutableConfigOverride> _overrides;",java.util.Map _overrides,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverrides._defaultInclusion,Field,* @since 2.9,protected JsonInclude.Value _defaultInclusion;,com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverrides._defaultSetterInfo,Field,* @since 2.9,protected JsonSetter.Value _defaultSetterInfo;,com.fasterxml.jackson.annotation.JsonSetter$Value _defaultSetterInfo,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverrides._visibilityChecker,Field,* @since 2.9,protected VisibilityChecker<?> _visibilityChecker;,com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverrides._defaultMergeable,Field,* @since 2.9,protected Boolean _defaultMergeable;,java.lang.Boolean _defaultMergeable,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverrides._defaultLeniency,Field,"* Global default setting (if any) for leniency: if disabled ({link Boolean#TRUE}),\n     * ""strict"" (not lenient): default setting if absence of value is considered ""lenient""\n     * in Jackson 2.x. Default setting may be overridden by per-type and per-property\n     * settings.\n     *\n     * @since 2.10",protected Boolean _defaultLeniency;,java.lang.Boolean _defaultLeniency,protected 
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl.EMPTY,Field,No Comment,protected final static Impl EMPTY = new Impl(Collections.emptyMap());,com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl EMPTY,"protected , final , static "
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl.NULL_SURROGATE,Field,No Comment,protected final static Object NULL_SURROGATE = new Object();,java.lang.Object NULL_SURROGATE,"protected , final , static "
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl._shared,Field,* Shared attributes that we cannot modify in-place.,"protected final Map<?, ?> _shared;",java.util.Map _shared,"protected , final "
com.fasterxml.jackson.databind.cfg.ContextAttributes$Impl._nonShared,Field,"* Per-call attributes that we can directly modify, since they are not\n         * shared between threads.\n         *<p>\n         * NOTE: typed as Object-to-Object, unlike {@link #_shared}, because\n         * we need to be able to modify contents, and wildcard type would\n         * complicate that access.","protected transient Map<Object, Object> _nonShared;",java.util.Map _nonShared,"protected , transient "
com.fasterxml.jackson.databind.cfg.BaseSettings.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.BaseSettings.DEFAULT_TIMEZONE,Field,* We will use a default TimeZone as the baseline.,"private static final TimeZone DEFAULT_TIMEZONE = //  TimeZone.getDefault()\n/* [databind#915] 05-Nov-2015, tatu: Changed to UTC, from earlier\n             * baseline of GMT (up to 2.6)\n             */\nTimeZone.getTimeZone(""UTC"");",java.util.TimeZone DEFAULT_TIMEZONE,"private , static , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._typeFactory,Field,* Specific factory used for creating {@link JavaType} instances;\n     * needed to allow modules to add more custom type handling\n     * (mostly to support types of non-Java JVM languages),protected final TypeFactory _typeFactory;,com.fasterxml.jackson.databind.type.TypeFactory _typeFactory,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._classIntrospector,Field,"* Introspector used to figure out Bean properties needed for bean serialization\n     * and deserialization. Overridable so that it is possible to change low-level\n     * details of introspection, like adding new annotation types.",protected final ClassIntrospector _classIntrospector;,com.fasterxml.jackson.databind.introspect.ClassIntrospector _classIntrospector,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._annotationIntrospector,Field,* Introspector used for accessing annotation value based configuration.,protected final AnnotationIntrospector _annotationIntrospector;,com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._propertyNamingStrategy,Field,"* Custom property naming strategy in use, if any.",protected final PropertyNamingStrategy _propertyNamingStrategy;,com.fasterxml.jackson.databind.PropertyNamingStrategy _propertyNamingStrategy,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._enumNamingStrategy,Field,"* Custom enum naming strategy in use, if any.\n     *\n     * @since 2.19",protected final EnumNamingStrategy _enumNamingStrategy;,com.fasterxml.jackson.databind.EnumNamingStrategy _enumNamingStrategy,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._accessorNaming,Field,* Provider for creating {@link AccessorNamingStrategy} instances to use\n     *\n     * @since 2.12,protected final AccessorNamingStrategy.Provider _accessorNaming;,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider _accessorNaming,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._typeResolverBuilder,Field,* Builder used to create type resolver for serializing and deserializing\n     * values for which polymorphic type handling is needed.,protected final TypeResolverBuilder<?> _typeResolverBuilder;,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _typeResolverBuilder,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._typeValidator,Field,"* Validator that is used to limit allowed polymorphic subtypes, mostly\n     * for security reasons when dealing with untrusted content.\n     *\n     * @since 2.10",protected final PolymorphicTypeValidator _typeValidator;,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _typeValidator,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._dateFormat,Field,"* Custom date format to use for deserialization. If specified, will be\n     * used instead of {@link com.fasterxml.jackson.databind.util.StdDateFormat}.\n     *<p>\n     * Note that the configured format object will be cloned once per\n     * deserialization process (first time it is needed)",protected final DateFormat _dateFormat;,java.text.DateFormat _dateFormat,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._handlerInstantiator,Field,"* Object used for creating instances of handlers (serializers, deserializers,\n     * type and type id resolvers), given class to instantiate. This is typically\n     * used to do additional configuration (with dependency injection, for example)\n     * beyond simply construction of instances; or to use alternative constructors.",protected final HandlerInstantiator _handlerInstantiator;,com.fasterxml.jackson.databind.cfg.HandlerInstantiator _handlerInstantiator,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._locale,Field,* Default {@link java.util.Locale} used with serialization formats.\n     * Default value is {@link Locale#getDefault()}.,protected final Locale _locale;,java.util.Locale _locale,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._timeZone,Field,"* Default {@link java.util.TimeZone} used with serialization formats,\n     * if (and only if!) explicitly set by use; otherwise `null` to indicate\n     * ""use default"", which means ""UTC"" (from Jackson 2.7); earlier versions\n     * (up to 2.6) used ""GMT"".\n     *<p>\n     * Note that if a new value is set, timezone is also assigned to\n     * {@link #_dateFormat} of this object.",protected final TimeZone _timeZone;,java.util.TimeZone _timeZone,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._defaultBase64,Field,"* Explicitly default {@link Base64Variant} to use for handling\n     * binary data (<code>byte[]</code>), used with data formats\n     * that use base64 encoding (like JSON, CSV).\n     *\n     * @since 2.1",protected final Base64Variant _defaultBase64;,com.fasterxml.jackson.core.Base64Variant _defaultBase64,"protected , final "
com.fasterxml.jackson.databind.cfg.BaseSettings._cacheProvider,Field,* Used to provide custom cache implementation in downstream components.\n     *\n     * @since 2.16,protected final CacheProvider _cacheProvider;,com.fasterxml.jackson.databind.cfg.CacheProvider _cacheProvider,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase.EMPTY_OVERRIDE,Field,* @since 2.9,protected final static ConfigOverride EMPTY_OVERRIDE = ConfigOverride.empty();,com.fasterxml.jackson.databind.cfg.ConfigOverride EMPTY_OVERRIDE,"protected , final , static "
com.fasterxml.jackson.databind.cfg.MapperConfigBase.DEFAULT_MAPPER_FEATURES,Field,No Comment,private final static long DEFAULT_MAPPER_FEATURES = MapperFeature.collectLongDefaults();,long DEFAULT_MAPPER_FEATURES,"private , final , static "
com.fasterxml.jackson.databind.cfg.MapperConfigBase.AUTO_DETECT_MASK,Field,* @since 2.9,private final static long AUTO_DETECT_MASK = MapperFeature.AUTO_DETECT_FIELDS.getLongMask() | MapperFeature.AUTO_DETECT_GETTERS.getLongMask() | MapperFeature.AUTO_DETECT_IS_GETTERS.getLongMask() | MapperFeature.AUTO_DETECT_SETTERS.getLongMask() | MapperFeature.AUTO_DETECT_CREATORS.getLongMask();,long AUTO_DETECT_MASK,"private , final , static "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._mixIns,Field,"* Mix-in annotation mappings to use, if any: immutable,\n     * cannot be changed once defined.\n     *\n     * @since 2.6",protected final SimpleMixInResolver _mixIns;,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._subtypeResolver,Field,"* Registered concrete subtypes that can be used instead of (or\n     * in addition to) ones declared using annotations.\n     *<p>\n     * Note that instances are stateful and as such may need to be copied,\n     * and may NOT be demoted down to {@link BaseSettings}.",protected final SubtypeResolver _subtypeResolver;,com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootName,Field,"* Explicitly defined root name to use, if any; if empty\n     * String, will disable root-name wrapping; if null, will\n     * use defaults",protected final PropertyName _rootName;,com.fasterxml.jackson.databind.PropertyName _rootName,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._view,Field,"* View to use for filtering out properties to serialize\n     * or deserialize.\n     * Null if none (will also be assigned null if <code>Object.class</code>\n     * is defined), meaning that all properties are to be included.",protected final Class<?> _view;,java.lang.Class _view,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._attributes,Field,"* Contextual attributes accessible (get and set) during processing,\n     * on per-call basis.\n     *\n     * @since 2.3",protected final ContextAttributes _attributes;,com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._rootNames,Field,"* Simple cache used for finding out possible root name for root name\n     * wrapping.\n     *<p>\n     * Note that instances are stateful (for caching) and as such may need to be copied,\n     * and may NOT be demoted down to {@link BaseSettings}.\n     *\n     * @since 2.6",protected final RootNameLookup _rootNames;,com.fasterxml.jackson.databind.util.RootNameLookup _rootNames,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._configOverrides,Field,"* Configuration overrides to apply, keyed by type of property.\n     *\n     * @since 2.8",protected final ConfigOverrides _configOverrides;,com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfigBase._datatypeFeatures,Field,* Set of {@link DatatypeFeature}s enabled.\n     *\n     * @since 2.14,protected final DatatypeFeatures _datatypeFeatures;,com.fasterxml.jackson.databind.cfg.DatatypeFeatures _datatypeFeatures,"protected , final "
com.fasterxml.jackson.databind.cfg.CoercionConfig.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.CoercionConfig.INPUT_SHAPE_COUNT,Field,No Comment,private final static int INPUT_SHAPE_COUNT = CoercionInputShape.values().length;,int INPUT_SHAPE_COUNT,"private , final , static "
com.fasterxml.jackson.databind.cfg.CoercionConfig._acceptBlankAsEmpty,Field,No Comment,protected Boolean _acceptBlankAsEmpty;,java.lang.Boolean _acceptBlankAsEmpty,protected 
com.fasterxml.jackson.databind.cfg.CoercionConfig._coercionsByShape,Field,* Mapping from {@link CoercionInputShape} into corresponding\n     * {@link CoercionAction}.,protected final CoercionAction[] _coercionsByShape;,com.fasterxml.jackson.databind.cfg.CoercionAction[] _coercionsByShape,"protected , final "
com.fasterxml.jackson.databind.cfg.MutableCoercionConfig.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.PackageVersion.VERSION,Field,No Comment,"public final static Version VERSION = VersionUtil.parseVersion(""2.19.0-SNAPSHOT"", ""com.fasterxml.jackson.core"", ""jackson-databind"");",com.fasterxml.jackson.core.Version VERSION,"public , final , static "
com.fasterxml.jackson.databind.cfg.MutableConfigOverride.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.ConfigOverride._format,Field,"* Definitions of format overrides, if any.",protected JsonFormat.Value _format;,com.fasterxml.jackson.annotation.JsonFormat$Value _format,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride._include,Field,"* Definitions of inclusion defaults to use for properties included in this POJO type.\n     * Overrides global defaults, may be overridden by per-property-type (see\n     * {@link #_includeAsProperty}) and per-property overrides (annotations).",protected JsonInclude.Value _include;,com.fasterxml.jackson.annotation.JsonInclude$Value _include,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride._includeAsProperty,Field,"* Definitions of inclusion defaults for properties of this specified type (regardless\n     * of POJO in which they are included).\n     * Overrides global defaults, per-POJO inclusion defaults (see {#link {@link #_include}}),\n     * may be overridden by per-property overrides.\n     *\n     * @since 2.9",protected JsonInclude.Value _includeAsProperty;,com.fasterxml.jackson.annotation.JsonInclude$Value _includeAsProperty,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride._ignorals,Field,"* Definitions of property ignoral (whether to serialize, deserialize\n     * given logical property) overrides, if any.",protected JsonIgnoreProperties.Value _ignorals;,com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value _ignorals,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride._setterInfo,Field,* Definitions of setter overrides regarding null handling\n     *\n     * @since 2.9,protected JsonSetter.Value _setterInfo;,com.fasterxml.jackson.annotation.JsonSetter$Value _setterInfo,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride._visibility,Field,* Overrides for auto-detection visibility rules for this type.\n     *\n     * @since 2.9,protected JsonAutoDetect.Value _visibility;,com.fasterxml.jackson.annotation.JsonAutoDetect$Value _visibility,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride._isIgnoredType,Field,"* Flag that indicates whether ""is ignorable type"" is specified for this type;\n     * and if so, is it to be ignored (true) or not ignored (false); `null` is\n     * used to indicate ""not specified"", in which case other configuration (class\n     * annotation) is used.",protected Boolean _isIgnoredType;,java.lang.Boolean _isIgnoredType,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride._mergeable,Field,* Flag that indicates whether properties of this type default to being merged\n     * or not.,protected Boolean _mergeable;,java.lang.Boolean _mergeable,protected 
com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty.INSTANCE,Field,No Comment,final static Empty INSTANCE = new Empty();,com.fasterxml.jackson.databind.cfg.ConfigOverride$Empty INSTANCE,"final , static "
com.fasterxml.jackson.databind.cfg.MapperBuilder._mapper,Field,No Comment,protected final M _mapper;,com.fasterxml.jackson.databind.ObjectMapper _mapper,"protected , final "
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider.DEFAULT,Field,No Comment,"private final static DefaultCacheProvider DEFAULT = new DefaultCacheProvider(DeserializerCache.DEFAULT_MAX_CACHE_SIZE, SerializerCache.DEFAULT_MAX_CACHE_SIZE, TypeFactory.DEFAULT_MAX_CACHE_SIZE);",com.fasterxml.jackson.databind.cfg.DefaultCacheProvider DEFAULT,"private , final , static "
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider._maxDeserializerCacheSize,Field,* Maximum size of the {@link LookupCache} instance constructed by {@link #forDeserializerCache(DeserializationConfig)}.\n     *\n     * @see Builder#maxDeserializerCacheSize(int),protected final int _maxDeserializerCacheSize;,int _maxDeserializerCacheSize,"protected , final "
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider._maxSerializerCacheSize,Field,* Maximum size of the {@link LookupCache} instance constructed by {@link #forSerializerCache(SerializationConfig)}\n     *\n     * @see Builder#maxSerializerCacheSize(int),protected final int _maxSerializerCacheSize;,int _maxSerializerCacheSize,"protected , final "
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider._maxTypeFactoryCacheSize,Field,* Maximum size of the {@link LookupCache} instance constructed by {@link #forTypeFactory()}.\n     *\n     * @see Builder#maxTypeFactoryCacheSize(int),protected final int _maxTypeFactoryCacheSize;,int _maxTypeFactoryCacheSize,"protected , final "
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider$Builder._maxDeserializerCacheSize,Field,* Maximum Size of the {@link LookupCache} instance created by {@link #forDeserializerCache(DeserializationConfig)}.\n         * Corresponds to {@link DefaultCacheProvider#_maxDeserializerCacheSize}.,private int _maxDeserializerCacheSize;,int _maxDeserializerCacheSize,private 
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider$Builder._maxSerializerCacheSize,Field,* Maximum Size of the {@link LookupCache} instance created by {@link #forSerializerCache(SerializationConfig)}\n         * Corresponds to {@link DefaultCacheProvider#_maxSerializerCacheSize}.,private int _maxSerializerCacheSize;,int _maxSerializerCacheSize,private 
com.fasterxml.jackson.databind.cfg.DefaultCacheProvider$Builder._maxTypeFactoryCacheSize,Field,* Maximum Size of the {@link LookupCache} instance created by {@link #forTypeFactory()}.\n         * Corresponds to {@link DefaultCacheProvider#_maxTypeFactoryCacheSize}.,private int _maxTypeFactoryCacheSize;,int _maxTypeFactoryCacheSize,private 
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.NO_SERIALIZERS,Field,* Constant for empty <code>Serializers</code> array (which by definition\n     * is stateless and reusable),protected final static Serializers[] NO_SERIALIZERS = new Serializers[0];,com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS,"protected , final , static "
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig.NO_MODIFIERS,Field,No Comment,protected final static BeanSerializerModifier[] NO_MODIFIERS = new BeanSerializerModifier[0];,com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS,"protected , final , static "
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig._additionalSerializers,Field,"* List of providers for additional serializers, checked before considering default\n     * basic or bean serialializers.",protected final Serializers[] _additionalSerializers;,com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers,"protected , final "
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig._additionalKeySerializers,Field,"* List of providers for additional key serializers, checked before considering default\n     * key serialializers.",protected final Serializers[] _additionalKeySerializers;,com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers,"protected , final "
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig._modifiers,Field,* List of modifiers that can change the way {@link BeanSerializer} instances\n     * are configured and constructed.,protected final BeanSerializerModifier[] _modifiers;,com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfig.serialVersionUID,Field,since 2.9,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.cfg.MapperConfig.EMPTY_INCLUDE,Field,* @since 2.7,protected final static JsonInclude.Value EMPTY_INCLUDE = JsonInclude.Value.empty();,com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE,"protected , final , static "
com.fasterxml.jackson.databind.cfg.MapperConfig.EMPTY_FORMAT,Field,* @since 2.7,protected final static JsonFormat.Value EMPTY_FORMAT = JsonFormat.Value.empty();,com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT,"protected , final , static "
com.fasterxml.jackson.databind.cfg.MapperConfig._mapperFeatures,Field,* Set of shared mapper features enabled.\n     *<p>\n     * NOTE: changed from {@code int} (in Jackson 2.12 and prior} to {@code long}\n     * (2.13 and later),protected final long _mapperFeatures;,long _mapperFeatures,"protected , final "
com.fasterxml.jackson.databind.cfg.MapperConfig._base,Field,* Immutable container object for simple configuration settings.,protected final BaseSettings _base;,com.fasterxml.jackson.databind.cfg.BaseSettings _base,"protected , final "
com.fasterxml.jackson.databind.DatabindContext.MAX_ERROR_STR_LEN,Field,"* Let's limit length of error messages, for cases where underlying data\n     * may be very large -- no point in spamming logs with megabytes of meaningless\n     * data.\n     *\n     * @since 2.9",private final static int MAX_ERROR_STR_LEN = 500;,int MAX_ERROR_STR_LEN,"private , final , static "
com.fasterxml.jackson.databind.json.JsonMapper.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.IterationType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.IterationType._iteratedType,Field,No Comment,protected final JavaType _iteratedType;,com.fasterxml.jackson.databind.JavaType _iteratedType,"protected , final "
com.fasterxml.jackson.databind.type.TypeFactory.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.TypeFactory.DEFAULT_MAX_CACHE_SIZE,Field,* Default size used to construct {@link #_typeCache}.\n     *\n     * @since 2.16,public static final int DEFAULT_MAX_CACHE_SIZE = 200;,int DEFAULT_MAX_CACHE_SIZE,"public , static , final "
com.fasterxml.jackson.databind.type.TypeFactory.NO_TYPES,Field,No Comment,private final static JavaType[] NO_TYPES = new JavaType[0];,com.fasterxml.jackson.databind.JavaType[] NO_TYPES,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.instance,Field,* Globally shared singleton. Not accessed directly; non-core\n     * code should use per-ObjectMapper instance (via configuration objects).\n     * Core Jackson code uses {@link #defaultInstance} for accessing it.,protected final static TypeFactory instance = new TypeFactory();,com.fasterxml.jackson.databind.type.TypeFactory instance,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.EMPTY_BINDINGS,Field,No Comment,protected final static TypeBindings EMPTY_BINDINGS = TypeBindings.emptyBindings();,com.fasterxml.jackson.databind.type.TypeBindings EMPTY_BINDINGS,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_STRING,Field,No Comment,private final static Class<?> CLS_STRING = String.class;,java.lang.Class CLS_STRING,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_OBJECT,Field,No Comment,private final static Class<?> CLS_OBJECT = Object.class;,java.lang.Class CLS_OBJECT,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_COMPARABLE,Field,No Comment,private final static Class<?> CLS_COMPARABLE = Comparable.class;,java.lang.Class CLS_COMPARABLE,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_ENUM,Field,No Comment,private final static Class<?> CLS_ENUM = Enum.class;,java.lang.Class CLS_ENUM,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_JSON_NODE,Field,since 2.10,private final static Class<?> CLS_JSON_NODE = JsonNode.class;,java.lang.Class CLS_JSON_NODE,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_BOOL,Field,No Comment,private final static Class<?> CLS_BOOL = Boolean.TYPE;,java.lang.Class CLS_BOOL,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_DOUBLE,Field,No Comment,private final static Class<?> CLS_DOUBLE = Double.TYPE;,java.lang.Class CLS_DOUBLE,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_INT,Field,No Comment,private final static Class<?> CLS_INT = Integer.TYPE;,java.lang.Class CLS_INT,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CLS_LONG,Field,No Comment,private final static Class<?> CLS_LONG = Long.TYPE;,java.lang.Class CLS_LONG,"private , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_BOOL,Field,"note: these are primitive, hence no super types",protected final static SimpleType CORE_TYPE_BOOL = new SimpleType(CLS_BOOL);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_DOUBLE,Field,No Comment,protected final static SimpleType CORE_TYPE_DOUBLE = new SimpleType(CLS_DOUBLE);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_DOUBLE,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_INT,Field,No Comment,protected final static SimpleType CORE_TYPE_INT = new SimpleType(CLS_INT);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_LONG,Field,No Comment,protected final static SimpleType CORE_TYPE_LONG = new SimpleType(CLS_LONG);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_STRING,Field,"and as to String... well, for now, ignore its super types",protected final static SimpleType CORE_TYPE_STRING = new SimpleType(CLS_STRING);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_OBJECT,Field,@since 2.7,protected final static SimpleType CORE_TYPE_OBJECT = new SimpleType(CLS_OBJECT);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_OBJECT,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_COMPARABLE,Field,"* Cache {@link Comparable} because it is both parametric (relatively costly to\n     * resolve) and mostly useless (no special handling), better handle directly\n     *\n     * @since 2.7",protected final static SimpleType CORE_TYPE_COMPARABLE = new SimpleType(CLS_COMPARABLE);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_COMPARABLE,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_ENUM,Field,* Cache {@link Enum} because it is parametric AND self-referential (costly to\n     * resolve) and useless in itself (no special handling).\n     *\n     * @since 2.7,protected final static SimpleType CORE_TYPE_ENUM = new SimpleType(CLS_ENUM);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_ENUM,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory.CORE_TYPE_JSON_NODE,Field,* Cache {@link JsonNode} because it is no critical path of simple tree model\n     * reading and does not have things to override\n     *\n     * @since 2.10,protected final static SimpleType CORE_TYPE_JSON_NODE = new SimpleType(CLS_JSON_NODE);,com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_JSON_NODE,"protected , final , static "
com.fasterxml.jackson.databind.type.TypeFactory._typeCache,Field,"* Since type resolution can be expensive (specifically when resolving\n     * actual generic types), we will use small cache to avoid repetitive\n     * resolution of core types","protected final LookupCache<Object, JavaType> _typeCache;",com.fasterxml.jackson.databind.util.LookupCache _typeCache,"protected , final "
com.fasterxml.jackson.databind.type.TypeFactory._modifiers,Field,* Registered {@link TypeModifier}s: objects that can change details\n     * of {@link JavaType} instances factory constructs.,protected final TypeModifier[] _modifiers;,com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers,"protected , final "
com.fasterxml.jackson.databind.type.TypeFactory._parser,Field,No Comment,protected final TypeParser _parser;,com.fasterxml.jackson.databind.type.TypeParser _parser,"protected , final "
com.fasterxml.jackson.databind.type.TypeFactory._classLoader,Field,* ClassLoader used by this factory [databind#624].,protected final ClassLoader _classLoader;,java.lang.ClassLoader _classLoader,"protected , final "
com.fasterxml.jackson.databind.type.IdentityEqualityType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.MapLikeType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.MapLikeType._keyType,Field,* Type of keys of Map.,protected final JavaType _keyType;,com.fasterxml.jackson.databind.JavaType _keyType,"protected , final "
com.fasterxml.jackson.databind.type.MapLikeType._valueType,Field,* Type of values of Map.,protected final JavaType _valueType;,com.fasterxml.jackson.databind.JavaType _valueType,"protected , final "
com.fasterxml.jackson.databind.type.TypeBindings.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.TypeBindings.NO_STRINGS,Field,No Comment,private final static String[] NO_STRINGS = new String[0];,java.lang.String[] NO_STRINGS,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings.NO_TYPES,Field,No Comment,private final static JavaType[] NO_TYPES = new JavaType[0];,com.fasterxml.jackson.databind.JavaType[] NO_TYPES,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings.EMPTY,Field,No Comment,"private final static TypeBindings EMPTY = new TypeBindings(NO_STRINGS, NO_TYPES, null);",com.fasterxml.jackson.databind.type.TypeBindings EMPTY,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings._names,Field,* Array of type (type variable) names.,private final String[] _names;,java.lang.String[] _names,"private , final "
com.fasterxml.jackson.databind.type.TypeBindings._types,Field,* Types matching names,private final JavaType[] _types;,com.fasterxml.jackson.databind.JavaType[] _types,"private , final "
com.fasterxml.jackson.databind.type.TypeBindings._unboundVariables,Field,* Names of potentially unresolved type variables.\n     *\n     * @since 2.3,private final String[] _unboundVariables;,java.lang.String[] _unboundVariables,"private , final "
com.fasterxml.jackson.databind.type.TypeBindings._hashCode,Field,No Comment,private final int _hashCode;,int _hashCode,"private , final "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_ABSTRACT_LIST,Field,No Comment,private final static TypeVariable<?>[] VARS_ABSTRACT_LIST = AbstractList.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_ABSTRACT_LIST,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_COLLECTION,Field,No Comment,private final static TypeVariable<?>[] VARS_COLLECTION = Collection.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_COLLECTION,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_ITERABLE,Field,No Comment,private final static TypeVariable<?>[] VARS_ITERABLE = Iterable.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_ITERABLE,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_LIST,Field,No Comment,private final static TypeVariable<?>[] VARS_LIST = List.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_LIST,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_ARRAY_LIST,Field,No Comment,private final static TypeVariable<?>[] VARS_ARRAY_LIST = ArrayList.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_ARRAY_LIST,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_MAP,Field,No Comment,private final static TypeVariable<?>[] VARS_MAP = Map.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_MAP,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_HASH_MAP,Field,No Comment,private final static TypeVariable<?>[] VARS_HASH_MAP = HashMap.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_HASH_MAP,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$TypeParamStash.VARS_LINKED_HASH_MAP,Field,No Comment,private final static TypeVariable<?>[] VARS_LINKED_HASH_MAP = LinkedHashMap.class.getTypeParameters();,java.lang.reflect.TypeVariable[] VARS_LINKED_HASH_MAP,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBindings$AsKey._raw,Field,No Comment,private final Class<?> _raw;,java.lang.Class _raw,"private , final "
com.fasterxml.jackson.databind.type.TypeBindings$AsKey._params,Field,No Comment,private final JavaType[] _params;,com.fasterxml.jackson.databind.JavaType[] _params,"private , final "
com.fasterxml.jackson.databind.type.TypeBindings$AsKey._hash,Field,No Comment,private final int _hash;,int _hash,"private , final "
com.fasterxml.jackson.databind.type.ClassKey.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.ClassKey._className,Field,No Comment,private String _className;,java.lang.String _className,private 
com.fasterxml.jackson.databind.type.ClassKey._class,Field,No Comment,private Class<?> _class;,java.lang.Class _class,private 
com.fasterxml.jackson.databind.type.ClassKey._hashCode,Field,"* Let's cache hash code straight away, since we are\n     * almost certain to need it.",private int _hashCode;,int _hashCode,private 
com.fasterxml.jackson.databind.type.MapType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.ReferenceType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.ReferenceType._referencedType,Field,No Comment,protected final JavaType _referencedType;,com.fasterxml.jackson.databind.JavaType _referencedType,"protected , final "
com.fasterxml.jackson.databind.type.ReferenceType._anchorType,Field,"* Essential type used for type ids, for example if type id is needed for\n     * referencing type with polymorphic handling. Typically initialized when\n     * a {@link SimpleType} is upgraded into reference type, but NOT changed\n     * if being sub-classed.\n     *\n     * @since 2.8\n     *\n     * @deprecated Since 2.16",@Deprecated\nprotected final JavaType _anchorType;,com.fasterxml.jackson.databind.JavaType _anchorType,"protected , final "
com.fasterxml.jackson.databind.type.PlaceholderForType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.PlaceholderForType._ordinal,Field,No Comment,protected final int _ordinal;,int _ordinal,"protected , final "
com.fasterxml.jackson.databind.type.PlaceholderForType._actualType,Field,* Type assigned during wildcard resolution (which follows type\n     * structure resolution),protected JavaType _actualType;,com.fasterxml.jackson.databind.JavaType _actualType,protected 
com.fasterxml.jackson.databind.type.TypeBase.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.TypeBase.NO_BINDINGS,Field,No Comment,private final static TypeBindings NO_BINDINGS = TypeBindings.emptyBindings();,com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBase.NO_TYPES,Field,No Comment,private final static JavaType[] NO_TYPES = new JavaType[0];,com.fasterxml.jackson.databind.JavaType[] NO_TYPES,"private , final , static "
com.fasterxml.jackson.databind.type.TypeBase._superClass,Field,No Comment,protected final JavaType _superClass;,com.fasterxml.jackson.databind.JavaType _superClass,"protected , final "
com.fasterxml.jackson.databind.type.TypeBase._superInterfaces,Field,No Comment,protected final JavaType[] _superInterfaces;,com.fasterxml.jackson.databind.JavaType[] _superInterfaces,"protected , final "
com.fasterxml.jackson.databind.type.TypeBase._bindings,Field,* Bindings in effect for this type instance; possibly empty.\n     * Needed when resolving types declared in members of this type\n     * (if any).\n     *\n     * @since 2.7,protected final TypeBindings _bindings;,com.fasterxml.jackson.databind.type.TypeBindings _bindings,"protected , final "
com.fasterxml.jackson.databind.type.TypeBase._canonicalName,Field,* Lazily initialized external representation of the type,volatile transient String _canonicalName;,java.lang.String _canonicalName,"volatile , transient "
com.fasterxml.jackson.databind.type.ClassStack._parent,Field,No Comment,protected final ClassStack _parent;,com.fasterxml.jackson.databind.type.ClassStack _parent,"protected , final "
com.fasterxml.jackson.databind.type.ClassStack._current,Field,No Comment,protected final Class<?> _current;,java.lang.Class _current,"protected , final "
com.fasterxml.jackson.databind.type.ClassStack._selfRefs,Field,No Comment,private ArrayList<ResolvedRecursiveType> _selfRefs;,java.util.ArrayList _selfRefs,private 
com.fasterxml.jackson.databind.type.ResolvedRecursiveType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.ResolvedRecursiveType._referencedType,Field,No Comment,protected JavaType _referencedType;,com.fasterxml.jackson.databind.JavaType _referencedType,protected 
com.fasterxml.jackson.databind.type.TypeParser.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.TypeParser.MAX_TYPE_LENGTH,Field,* Maximum length of canonical type definition we will try to parse.\n     * Used as protection for malformed generic type declarations.\n     *\n     * @since 2.16,protected static final int MAX_TYPE_LENGTH = 64_000;,int MAX_TYPE_LENGTH,"protected , static , final "
com.fasterxml.jackson.databind.type.TypeParser.MAX_TYPE_NESTING,Field,* Maximum levels of nesting allowed for parameterized types.\n     * Used as protection for malformed generic type declarations.\n     *\n     * @since 2.16,protected static final int MAX_TYPE_NESTING = 1000;,int MAX_TYPE_NESTING,"protected , static , final "
com.fasterxml.jackson.databind.type.TypeParser._factory,Field,No Comment,protected final TypeFactory _factory;,com.fasterxml.jackson.databind.type.TypeFactory _factory,"protected , final "
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer._input,Field,No Comment,protected final String _input;,java.lang.String _input,"protected , final "
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer._index,Field,No Comment,protected int _index;,int _index,protected 
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer._pushbackToken,Field,No Comment,protected String _pushbackToken;,java.lang.String _pushbackToken,protected 
com.fasterxml.jackson.databind.type.SimpleType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.ArrayType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.ArrayType._componentType,Field,* Type of elements in the array.,protected final JavaType _componentType;,com.fasterxml.jackson.databind.JavaType _componentType,"protected , final "
com.fasterxml.jackson.databind.type.ArrayType._emptyArray,Field,"* We will also keep track of shareable instance of empty array,\n     * since it usually needs to be constructed any way; and because\n     * it is essentially immutable and thus can be shared.",protected final Object _emptyArray;,java.lang.Object _emptyArray,"protected , final "
com.fasterxml.jackson.databind.type.CollectionLikeType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.type.CollectionLikeType._elementType,Field,* Type of elements in collection,protected final JavaType _elementType;,com.fasterxml.jackson.databind.JavaType _elementType,"protected , final "
com.fasterxml.jackson.databind.type.CollectionType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor.RECORD_GET_RECORD_COMPONENTS,Field,No Comment,private final Method RECORD_GET_RECORD_COMPONENTS;,java.lang.reflect.Method RECORD_GET_RECORD_COMPONENTS,"private , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor.RECORD_COMPONENT_GET_NAME,Field,No Comment,private final Method RECORD_COMPONENT_GET_NAME;,java.lang.reflect.Method RECORD_COMPONENT_GET_NAME,"private , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor.RECORD_COMPONENT_GET_TYPE,Field,No Comment,private final Method RECORD_COMPONENT_GET_TYPE;,java.lang.reflect.Method RECORD_COMPONENT_GET_TYPE,"private , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor.INSTANCE,Field,No Comment,private final static RecordAccessor INSTANCE;,com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor INSTANCE,"private , final , static "
com.fasterxml.jackson.databind.jdk14.JDK14Util$RecordAccessor.PROBLEM,Field,No Comment,private final static RuntimeException PROBLEM;,java.lang.RuntimeException PROBLEM,"private , final , static "
com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName.rawType,Field,No Comment,public final Class<?> rawType;,java.lang.Class rawType,"public , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName.name,Field,No Comment,public final String name;,java.lang.String name,"public , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator._recordClass,Field,No Comment,protected final AnnotatedClass _recordClass;,com.fasterxml.jackson.databind.introspect.AnnotatedClass _recordClass,"protected , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator._config,Field,No Comment,protected final MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"protected , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator._intr,Field,No Comment,protected final AnnotationIntrospector _intr;,com.fasterxml.jackson.databind.AnnotationIntrospector _intr,"protected , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator._constructors,Field,No Comment,protected final List<AnnotatedConstructor> _constructors;,java.util.List _constructors,"protected , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator._primaryConstructor,Field,No Comment,protected final AnnotatedConstructor _primaryConstructor;,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _primaryConstructor,"protected , final "
com.fasterxml.jackson.databind.jdk14.JDK14Util$CreatorLocator._recordFields,Field,No Comment,protected final RawTypeName[] _recordFields;,com.fasterxml.jackson.databind.jdk14.JDK14Util$RawTypeName[] _recordFields,"protected , final "
com.fasterxml.jackson.databind.jsonschema.JsonSchema.schema,Field,No Comment,private final ObjectNode schema;,com.fasterxml.jackson.databind.node.ObjectNode schema,"private , final "
com.fasterxml.jackson.databind.ObjectMapper.serialVersionUID,Field,as of 2.9,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_ANNOTATION_INTROSPECTOR,Field,"16-May-2009, tatu: Ditto ^^^",protected final static AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR = new JacksonAnnotationIntrospector();,com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR,"protected , final , static "
com.fasterxml.jackson.databind.ObjectMapper.DEFAULT_BASE,Field,* Base settings contain defaults used for all {@link ObjectMapper}\n     * instances.,"protected final static BaseSettings DEFAULT_BASE = new BaseSettings(// cannot share global ClassIntrospector any more (2.5+)\nnull, DEFAULT_ANNOTATION_INTROSPECTOR, null, null, TypeFactory.defaultInstance(), null, StdDateFormat.instance, null, Locale.getDefault(), // to indicate ""use Jackson default TimeZone"" (UTC since Jackson 2.7)\nnull, Base64Variants.getDefaultVariant(), // Only for 2.x; 3.x will use more restrictive default\nLaissezFaireSubTypeValidator.instance, // Since 2.12:\nnew DefaultAccessorNamingStrategy.Provider(), // Since 2.16: [databind#2502] Add a way to configure Caches Jackson uses\nDefaultCacheProvider.defaultInstance());",com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE,"protected , final , static "
com.fasterxml.jackson.databind.ObjectMapper._jsonFactory,Field,* Factory used to create {@link JsonParser} and {@link JsonGenerator}\n     * instances as necessary.,protected final JsonFactory _jsonFactory;,com.fasterxml.jackson.core.JsonFactory _jsonFactory,"protected , final "
com.fasterxml.jackson.databind.ObjectMapper._typeFactory,Field,* Specific factory used for creating {@link JavaType} instances;\n     * needed to allow modules to add more custom type handling\n     * (mostly to support types of non-Java JVM languages),protected TypeFactory _typeFactory;,com.fasterxml.jackson.databind.type.TypeFactory _typeFactory,protected 
com.fasterxml.jackson.databind.ObjectMapper._injectableValues,Field,* Provider for values to inject in deserialized POJOs.,protected InjectableValues _injectableValues;,com.fasterxml.jackson.databind.InjectableValues _injectableValues,protected 
com.fasterxml.jackson.databind.ObjectMapper._subtypeResolver,Field,"* Thing used for registering sub-types, resolving them to\n     * super/sub-types as needed.",protected SubtypeResolver _subtypeResolver;,com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver,protected 
com.fasterxml.jackson.databind.ObjectMapper._configOverrides,Field,"* Currently active per-type configuration overrides, accessed by\n     * declared type of property.\n     *\n     * @since 2.9",protected final ConfigOverrides _configOverrides;,com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides,"protected , final "
com.fasterxml.jackson.databind.ObjectMapper._coercionConfigs,Field,* Current set of coercion configuration definitions that define allowed\n     * (and not allowed) coercions from secondary shapes.\n     *\n     * @since 2.12,protected final CoercionConfigs _coercionConfigs;,com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs,"protected , final "
com.fasterxml.jackson.databind.ObjectMapper._mixIns,Field,"* Mapping that defines how to apply mix-in annotations: key is\n     * the type to received additional annotations, and value is the\n     * type that has annotations to ""mix in"".\n     *<p>\n     * Annotations associated with the value classes will be used to\n     * override annotations of the key class, associated with the\n     * same field or method. They can be further masked by sub-classes:\n     * you can think of it as injecting annotations between the target\n     * class and its sub-classes (or interfaces)\n     *\n     * @since 2.6 (earlier was a simple {@link java.util.Map}",protected SimpleMixInResolver _mixIns;,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns,protected 
com.fasterxml.jackson.databind.ObjectMapper._serializationConfig,Field,* Configuration object that defines basic global\n     * settings for the serialization process,protected SerializationConfig _serializationConfig;,com.fasterxml.jackson.databind.SerializationConfig _serializationConfig,protected 
com.fasterxml.jackson.databind.ObjectMapper._serializerProvider,Field,"* Object that manages access to serializers used for serialization,\n     * including caching.\n     * It is configured with {@link #_serializerFactory} to allow\n     * for constructing custom serializers.\n     *<p>\n     * Note: while serializers are only exposed {@link SerializerProvider},\n     * mappers and readers need to access additional API defined by\n     * {@link DefaultSerializerProvider}",protected DefaultSerializerProvider _serializerProvider;,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider,protected 
com.fasterxml.jackson.databind.ObjectMapper._serializerFactory,Field,* Serializer factory used for constructing serializers.,protected SerializerFactory _serializerFactory;,com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory,protected 
com.fasterxml.jackson.databind.ObjectMapper._deserializationConfig,Field,* Configuration object that defines basic global\n     * settings for the serialization process,protected DeserializationConfig _deserializationConfig;,com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig,protected 
com.fasterxml.jackson.databind.ObjectMapper._deserializationContext,Field,"* Blueprint context object; stored here to allow custom\n     * sub-classes. Contains references to objects needed for\n     * deserialization construction (cache, factory).",protected DefaultDeserializationContext _deserializationContext;,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext,protected 
com.fasterxml.jackson.databind.ObjectMapper._registeredModuleTypes,Field,"* Set of module types (as per {@link Module#getTypeId()} that have been\n     * registered; kept track of iff {@link MapperFeature#IGNORE_DUPLICATE_MODULE_REGISTRATIONS}\n     * is enabled, so that duplicate registration calls can be ignored\n     * (to avoid adding same handlers multiple times, mostly).\n     *\n     * @since 2.5",protected Set<Object> _registeredModuleTypes;,java.util.Set _registeredModuleTypes,protected 
com.fasterxml.jackson.databind.ObjectMapper._rootDeserializers,Field,"* We will use a separate main-level Map for keeping track\n     * of root-level deserializers. This is where most successful\n     * cache lookups get resolved.\n     * Map will contain resolvers for all kinds of types, including\n     * container types: this is different from the component cache\n     * which will only cache bean deserializers.\n     *<p>\n     * Given that we don't expect much concurrency for additions\n     * (should very quickly converge to zero after startup), let's\n     * explicitly define a low concurrency setting.\n     *<p>\n     * These may are either ""raw"" deserializers (when\n     * no type information is needed for base type), or type-wrapped\n     * deserializers (if it is needed)","final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _rootDeserializers = new ConcurrentHashMap<JavaType, JsonDeserializer<Object>>(64, 0.6f, 2);",java.util.concurrent.ConcurrentHashMap _rootDeserializers,"final , protected "
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder._appliesFor,Field,* Definition of what types is this default typer valid for.,protected final DefaultTyping _appliesFor;,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor,"protected , final "
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder._subtypeValidator,Field,* {@link PolymorphicTypeValidator} top use for validating that the subtypes\n         * resolved are valid for use (usually to protect against possible\n         * security issues)\n         *\n         * @since 2.10,protected final PolymorphicTypeValidator _subtypeValidator;,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator,"protected , final "
com.fasterxml.jackson.databind.PropertyMetadata.serialVersionUID,Field,No Comment,private static final long serialVersionUID = -1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyMetadata.STD_REQUIRED,Field,No Comment,"public final static PropertyMetadata STD_REQUIRED = new PropertyMetadata(Boolean.TRUE, null, null, null, null, null, null);",com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED,"public , final , static "
com.fasterxml.jackson.databind.PropertyMetadata.STD_OPTIONAL,Field,No Comment,"public final static PropertyMetadata STD_OPTIONAL = new PropertyMetadata(Boolean.FALSE, null, null, null, null, null, null);",com.fasterxml.jackson.databind.PropertyMetadata STD_OPTIONAL,"public , final , static "
com.fasterxml.jackson.databind.PropertyMetadata.STD_REQUIRED_OR_OPTIONAL,Field,No Comment,"public final static PropertyMetadata STD_REQUIRED_OR_OPTIONAL = new PropertyMetadata(null, null, null, null, null, null, null);",com.fasterxml.jackson.databind.PropertyMetadata STD_REQUIRED_OR_OPTIONAL,"public , final , static "
com.fasterxml.jackson.databind.PropertyMetadata._required,Field,"* Three states: required, not required and unknown; unknown represented\n     * as null.",protected final Boolean _required;,java.lang.Boolean _required,"protected , final "
com.fasterxml.jackson.databind.PropertyMetadata._description,Field,* Optional human-readable description associated with the property.,protected final String _description;,java.lang.String _description,"protected , final "
com.fasterxml.jackson.databind.PropertyMetadata._index,Field,* Optional index of the property within containing Object.\n     *\n     * @since 2.4,protected final Integer _index;,java.lang.Integer _index,"protected , final "
com.fasterxml.jackson.databind.PropertyMetadata._defaultValue,Field,"* Optional default value, as String, for property; not used for\n     * any functionality by core databind, offered as metadata for\n     * extensions.",protected final String _defaultValue;,java.lang.String _defaultValue,"protected , final "
com.fasterxml.jackson.databind.PropertyMetadata._mergeInfo,Field,"* Settings regarding merging, if property is determined to possibly\n     * be mergeable (possibly since global settings may be omitted for\n     * non-mergeable types).\n     *<p>\n     * NOTE: transient since it is assumed that this information is only\n     * relevant during initial setup and not needed after full initialization.\n     * May be changed if this proves necessary.\n     *\n     * @since 2.9",protected final transient MergeInfo _mergeInfo;,com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo _mergeInfo,"protected , final , transient "
com.fasterxml.jackson.databind.PropertyMetadata._valueNulls,Field,"* Settings regarding handling of incoming `null`s, both for value itself\n     * and, for structured types, content values (array/Collection elements,\n     * Map values).\n     *\n     * @since 2.9","protected Nulls _valueNulls, _contentNulls;",com.fasterxml.jackson.annotation.Nulls _valueNulls,protected 
com.fasterxml.jackson.databind.PropertyMetadata._contentNulls,Field,"* Settings regarding handling of incoming `null`s, both for value itself\n     * and, for structured types, content values (array/Collection elements,\n     * Map values).\n     *\n     * @since 2.9","protected Nulls _valueNulls, _contentNulls;",com.fasterxml.jackson.annotation.Nulls _contentNulls,protected 
com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo.getter,Field,No Comment,public final AnnotatedMember getter;,com.fasterxml.jackson.databind.introspect.AnnotatedMember getter,"public , final "
com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo.fromDefaults,Field,"* Flag that is set if the information came from global defaults,\n         * and not from explicit per-property annotations or per-type\n         * config overrides.",public final boolean fromDefaults;,boolean fromDefaults,"public , final "
com.fasterxml.jackson.databind.SerializationConfig.serialVersionUID,Field,since 2.5,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.SerializationConfig.DEFAULT_PRETTY_PRINTER,Field,since 2.6,protected final static PrettyPrinter DEFAULT_PRETTY_PRINTER = new DefaultPrettyPrinter();,com.fasterxml.jackson.core.PrettyPrinter DEFAULT_PRETTY_PRINTER,"protected , final , static "
com.fasterxml.jackson.databind.SerializationConfig.SER_FEATURE_DEFAULTS,Field,since 2.10.1,private final static int SER_FEATURE_DEFAULTS = collectFeatureDefaults(SerializationFeature.class);,int SER_FEATURE_DEFAULTS,"private , final , static "
com.fasterxml.jackson.databind.SerializationConfig._filterProvider,Field,* Object used for resolving filter ids to filter instances.\n     * Non-null if explicitly defined; null by default.,protected final FilterProvider _filterProvider;,com.fasterxml.jackson.databind.ser.FilterProvider _filterProvider,"protected , final "
com.fasterxml.jackson.databind.SerializationConfig._defaultPrettyPrinter,Field,"* If ""default pretty-printing"" is enabled, it will create the instance\n     * from this blueprint object.\n     *\n     * @since 2.6",protected final PrettyPrinter _defaultPrettyPrinter;,com.fasterxml.jackson.core.PrettyPrinter _defaultPrettyPrinter,"protected , final "
com.fasterxml.jackson.databind.SerializationConfig._ctorDetector,Field,* @since 2.18 (only in DeserializationConfig from 2.12),protected final ConstructorDetector _ctorDetector;,com.fasterxml.jackson.databind.cfg.ConstructorDetector _ctorDetector,"protected , final "
com.fasterxml.jackson.databind.SerializationConfig._serFeatures,Field,* Set of {@link SerializationFeature}s enabled.,protected final int _serFeatures;,int _serFeatures,"protected , final "
com.fasterxml.jackson.databind.SerializationConfig._generatorFeatures,Field,* States of {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s to enable/disable.,protected final int _generatorFeatures;,int _generatorFeatures,"protected , final "
com.fasterxml.jackson.databind.SerializationConfig._generatorFeaturesToChange,Field,* Bitflag of {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s to enable/disable,protected final int _generatorFeaturesToChange;,int _generatorFeaturesToChange,"protected , final "
com.fasterxml.jackson.databind.SerializationConfig._formatWriteFeatures,Field,* States of {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable.\n     *\n     * @since 2.7,protected final int _formatWriteFeatures;,int _formatWriteFeatures,"protected , final "
com.fasterxml.jackson.databind.SerializationConfig._formatWriteFeaturesToChange,Field,* Bitflag of {@link com.fasterxml.jackson.core.FormatFeature}s to enable/disable\n     *\n     * @since 2.7,protected final int _formatWriteFeaturesToChange;,int _formatWriteFeaturesToChange,"protected , final "
com.fasterxml.jackson.databind.BeanProperty.EMPTY_FORMAT,Field,No Comment,public final static JsonFormat.Value EMPTY_FORMAT = new JsonFormat.Value();,com.fasterxml.jackson.annotation.JsonFormat$Value EMPTY_FORMAT,"public , final , static "
com.fasterxml.jackson.databind.BeanProperty.EMPTY_INCLUDE,Field,No Comment,public final static JsonInclude.Value EMPTY_INCLUDE = JsonInclude.Value.empty();,com.fasterxml.jackson.annotation.JsonInclude$Value EMPTY_INCLUDE,"public , final , static "
com.fasterxml.jackson.databind.BeanProperty$Std.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.BeanProperty$Std._name,Field,No Comment,protected final PropertyName _name;,com.fasterxml.jackson.databind.PropertyName _name,"protected , final "
com.fasterxml.jackson.databind.BeanProperty$Std._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.BeanProperty$Std._wrapperName,Field,No Comment,protected final PropertyName _wrapperName;,com.fasterxml.jackson.databind.PropertyName _wrapperName,"protected , final "
com.fasterxml.jackson.databind.BeanProperty$Std._metadata,Field,No Comment,protected final PropertyMetadata _metadata;,com.fasterxml.jackson.databind.PropertyMetadata _metadata,"protected , final "
com.fasterxml.jackson.databind.BeanProperty$Std._member,Field,"* Physical entity (field, method or constructor argument) that\n         * is used to access value of property (or in case of constructor\n         * property, just placeholder)",protected final AnnotatedMember _member;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _member,"protected , final "
com.fasterxml.jackson.databind.exc.MismatchedInputException._targetType,Field,* Type of value that was to be deserialized,protected Class<?> _targetType;,java.lang.Class _targetType,protected 
com.fasterxml.jackson.databind.exc.IgnoredPropertyException.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.exc.InvalidFormatException.serialVersionUID,Field,"silly Eclipse, warnings",private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.exc.InvalidFormatException._value,Field,"* Underlying value that could not be deserialized into\n     * target type, if available.",protected final Object _value;,java.lang.Object _value,"protected , final "
com.fasterxml.jackson.databind.exc.InvalidDefinitionException._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.exc.InvalidDefinitionException._beanDesc,Field,No Comment,protected transient BeanDescription _beanDesc;,com.fasterxml.jackson.databind.BeanDescription _beanDesc,"protected , transient "
com.fasterxml.jackson.databind.exc.InvalidDefinitionException._property,Field,No Comment,protected transient BeanPropertyDefinition _property;,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition _property,"protected , transient "
com.fasterxml.jackson.databind.exc.InvalidTypeIdException.serialVersionUID,Field,"silly Eclipse, warnings",private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.exc.InvalidTypeIdException._baseType,Field,* Basetype for which subtype was to be resolved,protected final JavaType _baseType;,com.fasterxml.jackson.databind.JavaType _baseType,"protected , final "
com.fasterxml.jackson.databind.exc.InvalidTypeIdException._typeId,Field,* Type id that failed to be resolved to a subtype; `null` in cases\n     * where no type id was located (since 2.9).,protected final String _typeId;,java.lang.String _typeId,"protected , final "
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.exc.InvalidNullException.serialVersionUID,Field,"silly Eclipse, warnings",private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.exc.InvalidNullException._propertyName,Field,"* Name of property, if known, for which null was encountered.",protected final PropertyName _propertyName;,com.fasterxml.jackson.databind.PropertyName _propertyName,"protected , final "
com.fasterxml.jackson.databind.exc.ValueInstantiationException._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.exc.PropertyBindingException._referringClass,Field,"* Class that has the problem with mapping of a property (unrecognized,\n     * missing, etc).",protected final Class<?> _referringClass;,java.lang.Class _referringClass,"protected , final "
com.fasterxml.jackson.databind.exc.PropertyBindingException._propertyName,Field,* Name of property that has the problem being reported.\n     *<p>\n     * Note: possibly redundant information since it may also included\n     * in the reference path.,protected final String _propertyName;,java.lang.String _propertyName,"protected , final "
com.fasterxml.jackson.databind.exc.PropertyBindingException._propertyIds,Field,"* Set of ids of properties that are known for the type (see\n     * {@code _referringClass}, if ids can be statically determined.",protected final Collection<Object> _propertyIds;,java.util.Collection _propertyIds,"protected , final "
com.fasterxml.jackson.databind.exc.PropertyBindingException._propertiesAsString,Field,"* Lazily constructed description of known properties, used for\n     * constructing actual message if and as needed.",protected transient String _propertiesAsString;,java.lang.String _propertiesAsString,"protected , transient "
com.fasterxml.jackson.databind.exc.PropertyBindingException.MAX_DESC_LENGTH,Field,"* Somewhat arbitrary limit, but let's try not to create uselessly\n     * huge error messages",private final static int MAX_DESC_LENGTH = 1000;,int MAX_DESC_LENGTH,"private , final , static "
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer._typeSerializer,Field,No Comment,final protected TypeSerializer _typeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer,"final , protected "
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer._serializer,Field,No Comment,final protected JsonSerializer<Object> _serializer;,com.fasterxml.jackson.databind.JsonSerializer _serializer,"final , protected "
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter._nameTransformer,Field,* Transformer used to add prefix and/or suffix for properties\n     * of unwrapped POJO.,protected final NameTransformer _nameTransformer;,com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer,"protected , final "
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider.serialVersionUID,Field,for 2.5+,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider._filtersById,Field,* Mappings from ids to filters.,"protected final Map<String, PropertyFilter> _filtersById;",java.util.Map _filtersById,"protected , final "
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider._defaultFilter,Field,"* This is the filter we return in case no mapping was found for\n     * given id; default is {@code null} (in which case caller typically\n     * reports an error), but can be set to an explicit filter.",protected PropertyFilter _defaultFilter;,com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter,protected 
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider._cfgFailOnUnknownId,Field,* Flag that indicates whether request for an unknown filter id should\n     * result an exception (default) or not.\n     * Note that this is only relevant if no default filter has been\n     * configured.,protected boolean _cfgFailOnUnknownId = true;,boolean _cfgFailOnUnknownId,protected 
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator._property,Field,No Comment,protected final BeanPropertyWriter _property;,com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer.MARKER_FOR_EMPTY,Field,* @since 2.9,public final static Object MARKER_FOR_EMPTY = JsonInclude.Include.NON_EMPTY;,java.lang.Object MARKER_FOR_EMPTY,"public , final , static "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._property,Field,* Map-valued property being serialized with this instance,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._valueTypeIsStatic,Field,"* Whether static types should be used for serialization of values\n     * or not (if not, dynamic runtime type is used)",protected final boolean _valueTypeIsStatic;,boolean _valueTypeIsStatic,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._entryType,Field,No Comment,"protected final JavaType _entryType, _keyType, _valueType;",com.fasterxml.jackson.databind.JavaType _entryType,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._keyType,Field,No Comment,"protected final JavaType _entryType, _keyType, _valueType;",com.fasterxml.jackson.databind.JavaType _keyType,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._valueType,Field,No Comment,"protected final JavaType _entryType, _keyType, _valueType;",com.fasterxml.jackson.databind.JavaType _valueType,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._keySerializer,Field,"* Key serializer to use, if it can be statically determined",protected JsonSerializer<Object> _keySerializer;,com.fasterxml.jackson.databind.JsonSerializer _keySerializer,protected 
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._valueSerializer,Field,"* Value serializer to use, if it can be statically determined",protected JsonSerializer<Object> _valueSerializer;,com.fasterxml.jackson.databind.JsonSerializer _valueSerializer,protected 
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._valueTypeSerializer,Field,"* Type identifier serializer used for values, if any.",protected final TypeSerializer _valueTypeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._dynamicValueSerializers,Field,"* If value type cannot be statically determined, mapping from\n     * runtime value types to serializers are stored in this object.",protected PropertySerializerMap _dynamicValueSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers,protected 
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._suppressableValue,Field,"* Value that indicates suppression mechanism to use for <b>values contained</b>;\n     * either ""filter"" (of which <code>equals()</code> is called), or marker\n     * value of {@link #MARKER_FOR_EMPTY}, or null to indicate no filtering for\n     * non-null values.\n     * Note that inclusion value for Map instance itself is handled by caller (POJO\n     * property that refers to the Map value).\n     *\n     * @since 2.5",protected final Object _suppressableValue;,java.lang.Object _suppressableValue,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer._suppressNulls,Field,"* Flag that indicates what to do with `null` values, distinct from\n     * handling of {@link #_suppressableValue}\n     *\n     * @since 2.9",protected final boolean _suppressNulls;,boolean _suppressNulls,"protected , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap._resetWhenFull,Field,"* Configuration setting that determines what happens when maximum\n     * size (currently 8) is reached: if true, will ""start from beginning"";\n     * if false, will simply stop adding new entries.\n     *\n     * @since 2.5",protected final boolean _resetWhenFull;,boolean _resetWhenFull,"protected , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult.serializer,Field,No Comment,public final JsonSerializer<Object> serializer;,com.fasterxml.jackson.databind.JsonSerializer serializer,"public , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult.map,Field,No Comment,public final PropertySerializerMap map;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map,"public , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer.type,Field,No Comment,public final Class<?> type;,java.lang.Class type,"public , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer.serializer,Field,No Comment,public final JsonSerializer<Object> serializer;,com.fasterxml.jackson.databind.JsonSerializer serializer,"public , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty.FOR_PROPERTIES,Field,No root serializers; do not reset when full,public final static Empty FOR_PROPERTIES = new Empty(false);,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_PROPERTIES,"public , final , static "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty.FOR_ROOT_VALUES,Field,"Yes, root serializers; do reset when full",public final static Empty FOR_ROOT_VALUES = new Empty(true);,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty FOR_ROOT_VALUES,"public , final , static "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single._type,Field,No Comment,private final Class<?> _type;,java.lang.Class _type,"private , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single._serializer,Field,No Comment,private final JsonSerializer<Object> _serializer;,com.fasterxml.jackson.databind.JsonSerializer _serializer,"private , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double._type1,Field,No Comment,"private final Class<?> _type1, _type2;",java.lang.Class _type1,"private , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double._type2,Field,No Comment,"private final Class<?> _type1, _type2;",java.lang.Class _type2,"private , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double._serializer1,Field,No Comment,"private final JsonSerializer<Object> _serializer1, _serializer2;",com.fasterxml.jackson.databind.JsonSerializer _serializer1,"private , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double._serializer2,Field,No Comment,"private final JsonSerializer<Object> _serializer1, _serializer2;",com.fasterxml.jackson.databind.JsonSerializer _serializer2,"private , final "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi.MAX_ENTRIES,Field,"* Let's limit number of serializers we actually cache; linear\n         * lookup won't scale too well beyond smallish number, and if\n         * we really want to support larger collections should use\n         * a hash map. But it seems unlikely this is a common use\n         * case so for now let's just stop building after hard-coded\n         * limit. 8 sounds like a reasonable stab for now.",private final static int MAX_ENTRIES = 8;,int MAX_ENTRIES,"private , final , static "
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi._entries,Field,No Comment,private final TypeAndSerializer[] _entries;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries,"private , final "
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer.VALUE_TYPE,Field,"Note: not clean in general, but we are betting against\n     * anyone re-defining properties of String.class here...","@SuppressWarnings(""deprecation"")\nprivate final static JavaType VALUE_TYPE = TypeFactory.defaultInstance().uncheckedSimpleType(String.class);",com.fasterxml.jackson.databind.JavaType VALUE_TYPE,"private , final , static "
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer.instance,Field,No Comment,public final static StringArraySerializer instance = new StringArraySerializer();,com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer._elementSerializer,Field,"* Value serializer to use, if it's not the standard one\n     * (if it is we can optimize serialization significantly)",protected final JsonSerializer<Object> _elementSerializer;,com.fasterxml.jackson.databind.JsonSerializer _elementSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.idType,Field,No Comment,public final JavaType idType;,com.fasterxml.jackson.databind.JavaType idType,"public , final "
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.propertyName,Field,"* Name of id property to write, if not null: if null, should\n     * only write references, but id property is handled by some\n     * other entity.",public final SerializableString propertyName;,com.fasterxml.jackson.core.SerializableString propertyName,"public , final "
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.generator,Field,* Blueprint generator instance: actual instance will be\n     * fetched from {@link SerializerProvider} using this as\n     * the key.,public final ObjectIdGenerator<?> generator;,com.fasterxml.jackson.annotation.ObjectIdGenerator generator,"public , final "
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.serializer,Field,* Serializer used for serializing id values.,public final JsonSerializer<Object> serializer;,com.fasterxml.jackson.databind.JsonSerializer serializer,"public , final "
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter.alwaysAsId,Field,"* Marker that indicates what the first reference is to be\n     * serialized as full POJO, or as Object Id (other references\n     * will always be serialized as Object Id)\n     *\n     * @since 2.1",public final boolean alwaysAsId;,boolean alwaysAsId,"public , final "
com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer.instance,Field,No Comment,public final static StringCollectionSerializer instance = new StringCollectionSerializer();,com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.AttributePropertyWriter._attrName,Field,No Comment,protected final String _attrName;,java.lang.String _attrName,"protected , final "
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer._nameTransformer,Field,* Transformer used to add prefix and/or suffix for properties\n     * of unwrapped POJO.,protected final NameTransformer _nameTransformer;,com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer,"protected , final "
com.fasterxml.jackson.databind.ser.impl.MapEntryAsPOJOSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer.serialVersionUID,Field,since 2.6,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer._defaultSerializer,Field,* Serializer that would produce JSON Object version; used in\n     * cases where array output cannot be used.,protected final BeanSerializerBase _defaultSerializer;,com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer.instance,Field,No Comment,public final static IndexedStringListSerializer instance = new IndexedStringListSerializer();,com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ser.impl.FailingSerializer._msg,Field,No Comment,protected final String _msg;,java.lang.String _msg,"protected , final "
com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.WritableObjectId.generator,Field,No Comment,public final ObjectIdGenerator<?> generator;,com.fasterxml.jackson.annotation.ObjectIdGenerator generator,"public , final "
com.fasterxml.jackson.databind.ser.impl.WritableObjectId.id,Field,No Comment,public Object id;,java.lang.Object id,public 
com.fasterxml.jackson.databind.ser.impl.WritableObjectId.idWritten,Field,"* Marker to denote whether Object Id value has been written as part of an Object,\n     * to be referencible. Remains false when forward-reference is written.",protected boolean idWritten = false;,boolean idWritten,protected 
com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer._message,Field,No Comment,protected final String _message;,java.lang.String _message,"protected , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap._buckets,Field,No Comment,private final Bucket[] _buckets;,com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] _buckets,"private , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap._size,Field,No Comment,private final int _size;,int _size,"private , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap._mask,Field,No Comment,private final int _mask;,int _mask,"private , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket.value,Field,No Comment,public final JsonSerializer<Object> value;,com.fasterxml.jackson.databind.JsonSerializer value,"public , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket.next,Field,No Comment,public final Bucket next;,com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket next,"public , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket._class,Field,No Comment,protected final Class<?> _class;,java.lang.Class _class,"protected , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket._type,Field,No Comment,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket._isTyped,Field,No Comment,protected final boolean _isTyped;,boolean _isTyped,"protected , final "
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter.EXCLUDE_ALL,Field,No Comment,static final FilterExceptFilter EXCLUDE_ALL = new FilterExceptFilter(Collections.emptySet());,com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter EXCLUDE_ALL,"static , final "
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter._propertiesToInclude,Field,* Set of property names to serialize.,protected final Set<String> _propertiesToInclude;,java.util.Set _propertiesToInclude,"protected , final "
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter.INCLUDE_ALL,Field,No Comment,final static SerializeExceptFilter INCLUDE_ALL = new SerializeExceptFilter(Collections.emptySet());,com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter INCLUDE_ALL,"final , static "
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter._propertiesToExclude,Field,* Set of property names to filter out.,protected final Set<String> _propertiesToExclude;,java.util.Set _propertiesToExclude,"protected , final "
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView._delegate,Field,No Comment,protected final BeanPropertyWriter _delegate;,com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate,"protected , final "
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView._view,Field,No Comment,protected final Class<?> _view;,java.lang.Class _view,"protected , final "
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView._delegate,Field,No Comment,protected final BeanPropertyWriter _delegate;,com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate,"protected , final "
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView._views,Field,No Comment,protected final Class<?>[] _views;,java.lang.Class[] _views,"protected , final "
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._seenObjectIds,Field,"* Per-serialization map Object Ids that have seen so far, iff\n     * Object Id handling is enabled.","protected transient Map<Object, WritableObjectId> _seenObjectIds;",java.util.Map _seenObjectIds,"protected , transient "
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._objectIdGenerators,Field,No Comment,protected transient ArrayList<ObjectIdGenerator<?>> _objectIdGenerators;,java.util.ArrayList _objectIdGenerators,"protected , transient "
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._generator,Field,* Generator used for serialization. Needed mostly for error reporting\n     * purposes.\n     *\n     * @since 2.8,protected transient JsonGenerator _generator;,com.fasterxml.jackson.core.JsonGenerator _generator,"protected , transient "
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder.NO_PROPERTIES,Field,No Comment,private final static BeanPropertyWriter[] NO_PROPERTIES = new BeanPropertyWriter[0];,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES,"private , final , static "
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._beanDesc,Field,No Comment,final protected BeanDescription _beanDesc;,com.fasterxml.jackson.databind.BeanDescription _beanDesc,"final , protected "
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._config,Field,No Comment,protected SerializationConfig _config;,com.fasterxml.jackson.databind.SerializationConfig _config,protected 
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._properties,Field,"* Bean properties, in order of serialization",protected List<BeanPropertyWriter> _properties = Collections.emptyList();,java.util.List _properties,protected 
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._filteredProperties,Field,"* Optional array of filtered property writers; if null, no\n     * view-based filtering is performed.",protected BeanPropertyWriter[] _filteredProperties;,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties,protected 
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._anyGetter,Field,"* Writer used for ""any getter"" properties, if any.",protected AnyGetterWriter _anyGetter;,com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter,protected 
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._filterId,Field,"* Id of the property filter to use for POJO, if any.",protected Object _filterId;,java.lang.Object _filterId,protected 
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._typeId,Field,* Property that is used for type id (and not serialized as regular\n     * property),protected AnnotatedMember _typeId;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId,protected 
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder._objectIdWriter,Field,"* Object responsible for serializing Object Ids for the handled\n     * type, if any.",protected ObjectIdWriter _objectIdWriter;,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter,protected 
com.fasterxml.jackson.databind.ser.AnyGetterWriter.serialVersionUID,Field,As of 2.19,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.AnyGetterWriter._property,Field,No Comment,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.AnyGetterWriter._accessor,Field,"* Method (or Field) that represents the ""any getter""",protected final AnnotatedMember _accessor;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor,"protected , final "
com.fasterxml.jackson.databind.ser.AnyGetterWriter._serializer,Field,No Comment,protected JsonSerializer<Object> _serializer;,com.fasterxml.jackson.databind.JsonSerializer _serializer,protected 
com.fasterxml.jackson.databind.ser.AnyGetterWriter._mapSerializer,Field,No Comment,protected MapSerializer _mapSerializer;,com.fasterxml.jackson.databind.ser.std.MapSerializer _mapSerializer,protected 
com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.SerializerCache.DEFAULT_MAX_CACHE_SIZE,Field,"* By default, allow caching of up to 4000 serializer entries (for possibly up to\n     * 1000 types; but depending access patterns may be as few as half of that).",public final static int DEFAULT_MAX_CACHE_SIZE = 4000;,int DEFAULT_MAX_CACHE_SIZE,"public , final , static "
com.fasterxml.jackson.databind.ser.SerializerCache.DEFAULT_MAX_CACHED,Field,* @deprecated Use {@link #DEFAULT_MAX_CACHE_SIZE} instead.,@Deprecated\npublic final static int DEFAULT_MAX_CACHED = DEFAULT_MAX_CACHE_SIZE;,int DEFAULT_MAX_CACHED,"public , final , static "
com.fasterxml.jackson.databind.ser.SerializerCache._sharedMap,Field,"* Shared, modifiable map; all access needs to be through synchronized blocks.\n     *<p>\n     * NOTE: keys are of various types (see below for key types), in addition to\n     * basic {@link JavaType} used for ""untyped"" serializers.","private final LookupCache<TypeKey, JsonSerializer<Object>> _sharedMap;",com.fasterxml.jackson.databind.util.LookupCache _sharedMap,"private , final "
com.fasterxml.jackson.databind.ser.SerializerCache._readOnlyMap,Field,"* Most recent read-only instance, created from _sharedMap, if any.",private final AtomicReference<ReadOnlyClassToSerializerMap> _readOnlyMap = new AtomicReference<ReadOnlyClassToSerializerMap>();,java.util.concurrent.atomic.AtomicReference _readOnlyMap,"private , final "
com.fasterxml.jackson.databind.ser.BeanSerializerFactory.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.BeanSerializerFactory.instance,Field,"* Like {@link BasicSerializerFactory}, this factory is stateless, and\n     * thus a single shared global (== singleton) instance can be used\n     * without thread-safety issues.",public final static BeanSerializerFactory instance = new BeanSerializerFactory(null);,com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance,"public , final , static "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.NAME_FOR_OBJECT_REF,Field,No Comment,"protected final static PropertyName NAME_FOR_OBJECT_REF = new PropertyName(""#object-ref"");",com.fasterxml.jackson.databind.PropertyName NAME_FOR_OBJECT_REF,"protected , final , static "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.NO_PROPS,Field,No Comment,final protected static BeanPropertyWriter[] NO_PROPS = new BeanPropertyWriter[0];,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS,"final , protected , static "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._beanType,Field,* @since 2.9,final protected JavaType _beanType;,com.fasterxml.jackson.databind.JavaType _beanType,"final , protected "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._props,Field,* Writers used for outputting actual property values,final protected BeanPropertyWriter[] _props;,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props,"final , protected "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._filteredProps,Field,* Optional filters used to suppress output of properties that\n     * are only to be included in certain views,final protected BeanPropertyWriter[] _filteredProps;,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps,"final , protected "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._propertyFilterId,Field,"* Id of the bean property filter to use, if any; null if none.",final protected Object _propertyFilterId;,java.lang.Object _propertyFilterId,"final , protected "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._typeId,Field,"* If using custom type ids (usually via getter, or field), this is the\n     * reference to that member.",final protected AnnotatedMember _typeId;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId,"final , protected "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._objectIdWriter,Field,"* If this POJO can be alternatively serialized using just an object id\n     * to denote a reference to previously serialized object,\n     * this Object will handle details.",final protected ObjectIdWriter _objectIdWriter;,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter,"final , protected "
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase._serializationShape,Field,* Requested shape from bean class annotations.,final protected JsonFormat.Shape _serializationShape;,com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape,"final , protected "
com.fasterxml.jackson.databind.ser.std.BooleanSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.BooleanSerializer._forPrimitive,Field,"* Whether type serialized is primitive (boolean) or wrapper\n     * (java.lang.Boolean); if true, former, if false, latter.",protected final boolean _forPrimitive;,boolean _forPrimitive,"protected , final "
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber._forPrimitive,Field,"* Whether type serialized is primitive (boolean) or wrapper\n         * (java.lang.Boolean); if true, former, if false, latter.",protected final boolean _forPrimitive;,boolean _forPrimitive,"protected , final "
com.fasterxml.jackson.databind.ser.std.ByteArraySerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._accessor,Field,* @since 2.9,protected final AnnotatedMember _accessor;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._valueTypeSerializer,Field,* @since 2.12,protected final TypeSerializer _valueTypeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._valueSerializer,Field,No Comment,protected final JsonSerializer<Object> _valueSerializer;,com.fasterxml.jackson.databind.JsonSerializer _valueSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._property,Field,No Comment,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._valueType,Field,"* Declared type of the value accessed, as declared by accessor.\n     *\n     * @since 2.12",protected final JavaType _valueType;,com.fasterxml.jackson.databind.JavaType _valueType,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._forceTypeInformation,Field,"* This is a flag that is set in rare (?) cases where this serializer\n     * is used for ""natural"" types (boolean, int, String, double); and where\n     * we actually must force type information wrapping, even though\n     * one would not normally be added.",protected final boolean _forceTypeInformation;,boolean _forceTypeInformation,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._ignoredProperties,Field,* Names of properties to ignore from Value class accessed using\n     * accessor.\n     *\n     * @since 2.16,protected final Set<String> _ignoredProperties;,java.util.Set _ignoredProperties,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer._dynamicSerializers,Field,"* If value type cannot be statically determined, mapping from\n     * runtime value types to serializers are cached in this object.\n     *\n     * @since 2.12",protected transient PropertySerializerMap _dynamicSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers,"protected , transient "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter._typeSerializer,Field,No Comment,protected final TypeSerializer _typeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter._forObject,Field,No Comment,protected final Object _forObject;,java.lang.Object _forObject,"protected , final "
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer._staticTyping,Field,"* Whether we are using static typing (using declared types, ignoring\n     * runtime type) or not for elements.",protected final boolean _staticTyping;,boolean _staticTyping,"protected , final "
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer._elementType,Field,* Declared type of element entries,protected final JavaType _elementType;,com.fasterxml.jackson.databind.JavaType _elementType,"protected , final "
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer._valueTypeSerializer,Field,"* Type serializer to use for values, if any.",protected final TypeSerializer _valueTypeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer._elementSerializer,Field,"* Value serializer to use, if it can be statically determined.",protected JsonSerializer<Object> _elementSerializer;,com.fasterxml.jackson.databind.JsonSerializer _elementSerializer,protected 
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer._dynamicSerializers,Field,"* If element type cannot be statically determined, mapping from\n     * runtime type to serializer is handled using this object",protected PropertySerializerMap _dynamicSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers,protected 
com.fasterxml.jackson.databind.ser.std.MapProperty.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.MapProperty.BOGUS_PROP,Field,No Comment,private final static BeanProperty BOGUS_PROP = new BeanProperty.Bogus();,com.fasterxml.jackson.databind.BeanProperty BOGUS_PROP,"private , final , static "
com.fasterxml.jackson.databind.ser.std.MapProperty._typeSerializer,Field,No Comment,protected final TypeSerializer _typeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapProperty._property,Field,No Comment,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapProperty._key,Field,No Comment,"protected Object _key, _value;",java.lang.Object _key,protected 
com.fasterxml.jackson.databind.ser.std.MapProperty._value,Field,No Comment,"protected Object _key, _value;",java.lang.Object _value,protected 
com.fasterxml.jackson.databind.ser.std.MapProperty._keySerializer,Field,No Comment,"protected JsonSerializer<Object> _keySerializer, _valueSerializer;",com.fasterxml.jackson.databind.JsonSerializer _keySerializer,protected 
com.fasterxml.jackson.databind.ser.std.MapProperty._valueSerializer,Field,No Comment,"protected JsonSerializer<Object> _keySerializer, _valueSerializer;",com.fasterxml.jackson.databind.JsonSerializer _valueSerializer,protected 
com.fasterxml.jackson.databind.ser.std.UUIDSerializer.HEX_CHARS,Field,No Comment,"final static char[] HEX_CHARS = ""0123456789abcdef"".toCharArray();",char[] HEX_CHARS,"final , static "
com.fasterxml.jackson.databind.ser.std.UUIDSerializer._asBinary,Field,"* Configuration setting that indicates if serialization as binary\n     * (native or Base64-encoded) has been forced; {@code null} means\n     * ""use default heuristic""\n     *\n     * @since 2.11.3",protected final Boolean _asBinary;,java.lang.Boolean _asBinary,"protected , final "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DEFAULT_KEY_SERIALIZER,Field,No Comment,"@SuppressWarnings(""deprecation"")\nprotected final static JsonSerializer<Object> DEFAULT_KEY_SERIALIZER = new StdKeySerializer();",com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER,"protected , final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers.DEFAULT_STRING_SERIALIZER,Field,No Comment,protected final static JsonSerializer<Object> DEFAULT_STRING_SERIALIZER = new StringKeySerializer();,com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER,"protected , final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_DATE,Field,No Comment,final static int TYPE_DATE = 1;,int TYPE_DATE,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_CALENDAR,Field,No Comment,final static int TYPE_CALENDAR = 2;,int TYPE_CALENDAR,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_CLASS,Field,No Comment,final static int TYPE_CLASS = 3;,int TYPE_CLASS,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_ENUM,Field,No Comment,final static int TYPE_ENUM = 4;,int TYPE_ENUM,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_INTEGER,Field,since 2.9,final static int TYPE_INTEGER = 5;,int TYPE_INTEGER,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_LONG,Field,since 2.9,final static int TYPE_LONG = 6;,int TYPE_LONG,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_BYTE_ARRAY,Field,since 2.9,final static int TYPE_BYTE_ARRAY = 7;,int TYPE_BYTE_ARRAY,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default.TYPE_TO_STRING,Field,No Comment,final static int TYPE_TO_STRING = 8;,int TYPE_TO_STRING,"final , static "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Default._typeId,Field,No Comment,protected final int _typeId;,int _typeId,"protected , final "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$Dynamic._dynamicSerializers,Field,"Important: MUST be transient, to allow serialization of key serializer itself",protected transient PropertySerializerMap _dynamicSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers,"protected , transient "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer._values,Field,No Comment,protected final EnumValues _values;,com.fasterxml.jackson.databind.util.EnumValues _values,"protected , final "
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer._valuesByEnumNaming,Field,* Map with key as converted property class defined implementation of {@link EnumNamingStrategy}\n         * and with value as Enum names collected using <code>Enum.name()</code>.\n         *\n         * @since 2.15,protected final EnumValues _valuesByEnumNaming;,com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming,"protected , final "
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer._converter,Field,No Comment,"protected final Converter<Object, ?> _converter;",com.fasterxml.jackson.databind.util.Converter _converter,"protected , final "
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer._delegateType,Field,"* Fully resolved delegate type, with generic information if any available.",protected final JavaType _delegateType;,com.fasterxml.jackson.databind.JavaType _delegateType,"protected , final "
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer._delegateSerializer,Field,* Underlying serializer for type <code>T</code>.,protected final JsonSerializer<Object> _delegateSerializer;,com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base._numberType,Field,No Comment,protected final JsonParser.NumberType _numberType;,com.fasterxml.jackson.core.JsonParser$NumberType _numberType,"protected , final "
com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base._schemaType,Field,No Comment,protected final String _schemaType;,java.lang.String _schemaType,"protected , final "
com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base._isInt,Field,No Comment,protected final boolean _isInt;,boolean _isInt,"protected , final "
com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer.instance,Field,No Comment,final static ShortSerializer instance = new ShortSerializer();,com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer instance,"final , static "
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer.instance,Field,No Comment,final static IntLikeSerializer instance = new IntLikeSerializer();,com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance,"final , static "
com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer.instance,Field,No Comment,final static FloatSerializer instance = new FloatSerializer();,com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance,"final , static "
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._elementType,Field,No Comment,protected final JavaType _elementType;,com.fasterxml.jackson.databind.JavaType _elementType,"protected , final "
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._property,Field,* Collection-valued property being serialized with this instance,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._staticTyping,Field,No Comment,protected final boolean _staticTyping;,boolean _staticTyping,"protected , final "
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._unwrapSingle,Field,"* Setting for specific local override for ""unwrap single element arrays"":\n     * true for enable unwrapping, false for preventing it, `null` for using\n     * global configuration.\n     *\n     * @since 2.6",protected final Boolean _unwrapSingle;,java.lang.Boolean _unwrapSingle,"protected , final "
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._valueTypeSerializer,Field,"* Type serializer used for values, if any.",protected final TypeSerializer _valueTypeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._elementSerializer,Field,"* Value serializer to use, if it can be statically determined",protected final JsonSerializer<Object> _elementSerializer;,com.fasterxml.jackson.databind.JsonSerializer _elementSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase._dynamicSerializers,Field,"* If element type cannot be statically determined, mapping from\n     * runtime type to serializer is handled using this object",protected PropertySerializerMap _dynamicSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers,protected 
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._useTimestamp,Field,"* Flag that indicates that serialization must be done as the\n     * Java timestamp, regardless of other settings.",protected final Boolean _useTimestamp;,java.lang.Boolean _useTimestamp,"protected , final "
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._customFormat,Field,"* Specific format to use, if not default format: non null value\n     * also indicates that serialization is to be done as JSON String,\n     * not numeric timestamp, unless {@link #_useTimestamp} is true.",protected final DateFormat _customFormat;,java.text.DateFormat _customFormat,"protected , final "
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase._reusedCustomFormat,Field,"* If {@link #_customFormat} is used, we will try to reuse instances in simplest\n     * possible form; thread-safe, but without overhead of <code>ThreadLocal</code>\n     * (not from code, but wrt retaining of possibly large number of format instances\n     * over all threads, properties with custom formats).\n     *\n     * @since 2.9",protected final AtomicReference<DateFormat> _reusedCustomFormat;,java.util.concurrent.atomic.AtomicReference _reusedCustomFormat,"protected , final "
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase._unwrapSingle,Field,"* Setting for specific local override for ""unwrap single element arrays"":\n     * true for enable unwrapping, false for preventing it, `null` for using\n     * global configuration.\n     *\n     * @since 2.6",protected final Boolean _unwrapSingle;,java.lang.Boolean _unwrapSingle,"protected , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer.MARKER_FOR_EMPTY,Field,* @since 2.9,public final static Object MARKER_FOR_EMPTY = JsonInclude.Include.NON_EMPTY;,java.lang.Object MARKER_FOR_EMPTY,"public , final , static "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._referredType,Field,* Value type,protected final JavaType _referredType;,com.fasterxml.jackson.databind.JavaType _referredType,"protected , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._property,Field,No Comment,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._valueTypeSerializer,Field,"* Type serializer used for values, if any.",protected final TypeSerializer _valueTypeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._valueSerializer,Field,"* Serializer for content values, if statically known.",protected final JsonSerializer<Object> _valueSerializer;,com.fasterxml.jackson.databind.JsonSerializer _valueSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._unwrapper,Field,"* In case of unwrapping, need name transformer.",protected final NameTransformer _unwrapper;,com.fasterxml.jackson.databind.util.NameTransformer _unwrapper,"protected , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._dynamicSerializers,Field,"* If element type cannot be statically determined, mapping from\n     * runtime type to serializer is handled using this object",protected transient PropertySerializerMap _dynamicSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers,"protected , transient "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._suppressableValue,Field,"* Value that indicates suppression mechanism to use for <b>values contained</b>;\n     * either ""filter"" (of which <code>equals()</code> is called), or marker\n     * value of {@link #MARKER_FOR_EMPTY}, or null to indicate no filtering for\n     * non-null values.\n     * Note that inclusion value for Map instance itself is handled by caller (POJO\n     * property that refers to the Map value).\n     *\n     * @since 2.9",protected final Object _suppressableValue;,java.lang.Object _suppressableValue,"protected , final "
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer._suppressNulls,Field,"* Flag that indicates what to do with `null` values, distinct from\n     * handling of {@link #_suppressableValue}\n     *\n     * @since 2.9",protected final boolean _suppressNulls;,boolean _suppressNulls,"protected , final "
com.fasterxml.jackson.databind.ser.std.NumberSerializer.instance,Field,* Static instance that is only to be used for {@link java.lang.Number}.,public final static NumberSerializer instance = new NumberSerializer(Number.class);,com.fasterxml.jackson.databind.ser.std.NumberSerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ser.std.NumberSerializer.MAX_BIG_DECIMAL_SCALE,Field,* Copied from `jackson-core` class `GeneratorBase`,protected final static int MAX_BIG_DECIMAL_SCALE = 9999;,int MAX_BIG_DECIMAL_SCALE,"protected , final , static "
com.fasterxml.jackson.databind.ser.std.NumberSerializer._isInt,Field,No Comment,protected final boolean _isInt;,boolean _isInt,"protected , final "
com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer.BD_INSTANCE,Field,No Comment,final static BigDecimalAsStringSerializer BD_INSTANCE = new BigDecimalAsStringSerializer();,com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer BD_INSTANCE,"final , static "
com.fasterxml.jackson.databind.ser.std.ToStringSerializer.instance,Field,* Singleton instance to use.,public final static ToStringSerializer instance = new ToStringSerializer();,com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ser.std.MapSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer.UNSPECIFIED_TYPE,Field,No Comment,protected final static JavaType UNSPECIFIED_TYPE = TypeFactory.unknownType();,com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE,"protected , final , static "
com.fasterxml.jackson.databind.ser.std.MapSerializer.MARKER_FOR_EMPTY,Field,* @since 2.9,public final static Object MARKER_FOR_EMPTY = JsonInclude.Include.NON_EMPTY;,java.lang.Object MARKER_FOR_EMPTY,"public , final , static "
com.fasterxml.jackson.databind.ser.std.MapSerializer._property,Field,* Map-valued property being serialized with this instance,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._valueTypeIsStatic,Field,"* Whether static types should be used for serialization of values\n     * or not (if not, dynamic runtime type is used)",protected final boolean _valueTypeIsStatic;,boolean _valueTypeIsStatic,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._keyType,Field,* Declared type of keys,protected final JavaType _keyType;,com.fasterxml.jackson.databind.JavaType _keyType,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._valueType,Field,* Declared type of contained values,protected final JavaType _valueType;,com.fasterxml.jackson.databind.JavaType _valueType,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._keySerializer,Field,"* Key serializer to use, if it can be statically determined",protected JsonSerializer<Object> _keySerializer;,com.fasterxml.jackson.databind.JsonSerializer _keySerializer,protected 
com.fasterxml.jackson.databind.ser.std.MapSerializer._valueSerializer,Field,"* Value serializer to use, if it can be statically determined",protected JsonSerializer<Object> _valueSerializer;,com.fasterxml.jackson.databind.JsonSerializer _valueSerializer,protected 
com.fasterxml.jackson.databind.ser.std.MapSerializer._valueTypeSerializer,Field,"* Type identifier serializer used for values, if any.",protected final TypeSerializer _valueTypeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._dynamicValueSerializers,Field,"* If value type cannot be statically determined, mapping from\n     * runtime value types to serializers are stored in this object.",protected PropertySerializerMap _dynamicValueSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers,protected 
com.fasterxml.jackson.databind.ser.std.MapSerializer._ignoredEntries,Field,"* Set of entries to omit during serialization, if any",protected final Set<String> _ignoredEntries;,java.util.Set _ignoredEntries,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._includedEntries,Field,"* Set of entries to include during serialization, if null, it is ignored, empty will include nothing.\n     *\n     * @since 2.12",protected final Set<String> _includedEntries;,java.util.Set _includedEntries,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._filterId,Field,"* Id of the property filter to use, if any; null if none.\n     *\n     * @since 2.3",protected final Object _filterId;,java.lang.Object _filterId,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._suppressableValue,Field,"* Value that indicates suppression mechanism to use for <b>values contained</b>;\n     * either ""filter"" (of which <code>equals()</code> is called), or marker\n     * value of {@link #MARKER_FOR_EMPTY}, or null to indicate no filtering for\n     * non-null values.\n     * Note that inclusion value for Map instance itself is handled by caller (POJO\n     * property that refers to the Map value).\n     *\n     * @since 2.5",protected final Object _suppressableValue;,java.lang.Object _suppressableValue,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._suppressNulls,Field,"* Flag that indicates what to do with `null` values, distinct from\n     * handling of {@link #_suppressableValue}\n     *\n     * @since 2.9",protected final boolean _suppressNulls;,boolean _suppressNulls,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._inclusionChecker,Field,* Helper object used for name-based filtering\n     *\n     * @since 2.12,protected final IgnorePropertiesUtil.Checker _inclusionChecker;,com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker,"protected , final "
com.fasterxml.jackson.databind.ser.std.MapSerializer._sortKeys,Field,* Flag set if output is forced to be sorted by keys (usually due\n     * to annotation).\n     *\n     * @since 2.4,protected final boolean _sortKeys;,boolean _sortKeys,"protected , final "
com.fasterxml.jackson.databind.ser.std.CalendarSerializer.instance,Field,No Comment,public static final CalendarSerializer instance = new CalendarSerializer();,com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance,"public , static , final "
com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.CollectionSerializer._maybeEnumSet,Field,* Flag that indicates that we may need to check for EnumSet dynamically\n     * during serialization: problem being that we can't always do it statically.\n     * But we can figure out when there is a possibility wrt type signature we get.\n     *\n     * @since 2.18.3,private final boolean _maybeEnumSet;,boolean _maybeEnumSet,"private , final "
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer._asNumeric,Field,* @since 2.9,protected final boolean _asNumeric;,boolean _asNumeric,"protected , final "
com.fasterxml.jackson.databind.ser.std.SerializableSerializer.instance,Field,No Comment,public final static SerializableSerializer instance = new SerializableSerializer();,com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ser.std.StringSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase._property,Field,No Comment,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase._unwrapSingle,Field,"* Setting for specific local override for ""unwrap single element arrays"":\n     * true for enable unwrapping, false for preventing it, `null` for using\n     * global configuration.\n     *\n     * @since 2.6",protected final Boolean _unwrapSingle;,java.lang.Boolean _unwrapSingle,"protected , final "
com.fasterxml.jackson.databind.ser.std.DateSerializer.instance,Field,* Default instance that is used when no contextual configuration\n     * is needed.,public static final DateSerializer instance = new DateSerializer();,com.fasterxml.jackson.databind.ser.std.DateSerializer instance,"public , static , final "
com.fasterxml.jackson.databind.ser.std.NullSerializer.instance,Field,No Comment,public final static NullSerializer instance = new NullSerializer();,com.fasterxml.jackson.databind.ser.std.NullSerializer instance,"public , final , static "
com.fasterxml.jackson.databind.ser.std.StdSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.StdSerializer.KEY_CONTENT_CONVERTER_LOCK,Field,* Key used for storing a lock object to prevent infinite recursion when\n     * constructing converting serializers.\n     *\n     * @since 2.9,private final static Object KEY_CONTENT_CONVERTER_LOCK = new Object();,java.lang.Object KEY_CONTENT_CONVERTER_LOCK,"private , final , static "
com.fasterxml.jackson.databind.ser.std.StdSerializer._handledType,Field,"* Nominal type supported, usually declared type of\n     * property for which serializer is used.",protected final Class<T> _handledType;,java.lang.Class _handledType,"protected , final "
com.fasterxml.jackson.databind.ser.std.EnumSerializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.std.EnumSerializer._values,Field,* This map contains pre-resolved values (since there are ways\n     * to customize actual String constants to use) to use as\n     * serializations.,protected final EnumValues _values;,com.fasterxml.jackson.databind.util.EnumValues _values,"protected , final "
com.fasterxml.jackson.databind.ser.std.EnumSerializer._serializeAsIndex,Field,* Flag that is set if we statically know serialization choice\n     * between index and textual format (null if it needs to be dynamically\n     * checked).\n     *\n     * @since 2.1,protected final Boolean _serializeAsIndex;,java.lang.Boolean _serializeAsIndex,"protected , final "
com.fasterxml.jackson.databind.ser.std.EnumSerializer._valuesByEnumNaming,Field,* Map with key as converted property class defined implementation of {@link EnumNamingStrategy}\n     * and with value as Enum names collected using <code>Enum.name()</code>.\n     *\n     * @since 2.15,protected final EnumValues _valuesByEnumNaming;,com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming,"protected , final "
com.fasterxml.jackson.databind.ser.std.EnumSerializer._valuesByToString,Field,"* Map that contains pre-resolved values for {@link Enum#toString} to use for serialization,\n     * while respecting {@link com.fasterxml.jackson.annotation.JsonProperty}\n     * and {@link com.fasterxml.jackson.databind.cfg.EnumFeature#WRITE_ENUMS_TO_LOWERCASE}.\n     *\n     * @since 2.16",protected final EnumValues _valuesByToString;,com.fasterxml.jackson.databind.util.EnumValues _valuesByToString,"protected , final "
com.fasterxml.jackson.databind.ser.std.StdArraySerializers._arraySerializers,Field,No Comment,"protected final static HashMap<String, JsonSerializer<?>> _arraySerializers = new HashMap<>();",java.util.HashMap _arraySerializers,"protected , final , static "
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer.VALUE_TYPE,Field,"as above, assuming no one re-defines primitive/wrapper types",private final static JavaType VALUE_TYPE = simpleElementType(Boolean.TYPE);,com.fasterxml.jackson.databind.JavaType VALUE_TYPE,"private , final , static "
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer.VALUE_TYPE,Field,"as above, assuming no one re-defines primitive/wrapper types",private final static JavaType VALUE_TYPE = simpleElementType(Short.TYPE);,com.fasterxml.jackson.databind.JavaType VALUE_TYPE,"private , final , static "
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer.VALUE_TYPE,Field,"as above, assuming no one re-defines primitive/wrapper types",private final static JavaType VALUE_TYPE = simpleElementType(Integer.TYPE);,com.fasterxml.jackson.databind.JavaType VALUE_TYPE,"private , final , static "
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer.VALUE_TYPE,Field,"as above, assuming no one re-defines primitive/wrapper types",private final static JavaType VALUE_TYPE = simpleElementType(Long.TYPE);,com.fasterxml.jackson.databind.JavaType VALUE_TYPE,"private , final , static "
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer.VALUE_TYPE,Field,"as above, assuming no one re-defines primitive/wrapper types",private final static JavaType VALUE_TYPE = simpleElementType(Float.TYPE);,com.fasterxml.jackson.databind.JavaType VALUE_TYPE,"private , final , static "
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer.VALUE_TYPE,Field,"as above, assuming no one re-defines primitive/wrapper types",private final static JavaType VALUE_TYPE = simpleElementType(Double.TYPE);,com.fasterxml.jackson.databind.JavaType VALUE_TYPE,"private , final , static "
com.fasterxml.jackson.databind.ser.PropertyWriter.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.BeanSerializerModifier.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.BasicSerializerFactory._concrete,Field,"* Since these are all JDK classes, we shouldn't have to worry\n     * about ClassLoader used to load them. Rather, we can just\n     * use the class name, and keep things simple and efficient.","protected final static HashMap<String, JsonSerializer<?>> _concrete;",java.util.HashMap _concrete,"protected , final , static "
com.fasterxml.jackson.databind.ser.BasicSerializerFactory._concreteLazy,Field,"* Actually it may not make much sense to eagerly instantiate all\n     * kinds of serializers: so this Map actually contains class references,\n     * not instances","protected final static HashMap<String, Class<? extends JsonSerializer<?>>> _concreteLazy;",java.util.HashMap _concreteLazy,"protected , final , static "
com.fasterxml.jackson.databind.ser.BasicSerializerFactory._factoryConfig,Field,"* Configuration settings for this factory; immutable instance (just like this\n     * factory), new version created via copy-constructor (fluent-style)",protected final SerializerFactoryConfig _factoryConfig;,com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig,"protected , final "
com.fasterxml.jackson.databind.ser.BeanSerializer.serialVersionUID,Field,as per jackson 2.9,private static final long serialVersionUID = 29;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.PropertyBuilder.NO_DEFAULT_MARKER,Field,@since 2.7,private final static Object NO_DEFAULT_MARKER = Boolean.FALSE;,java.lang.Object NO_DEFAULT_MARKER,"private , final , static "
com.fasterxml.jackson.databind.ser.PropertyBuilder._config,Field,No Comment,final protected SerializationConfig _config;,com.fasterxml.jackson.databind.SerializationConfig _config,"final , protected "
com.fasterxml.jackson.databind.ser.PropertyBuilder._beanDesc,Field,No Comment,final protected BeanDescription _beanDesc;,com.fasterxml.jackson.databind.BeanDescription _beanDesc,"final , protected "
com.fasterxml.jackson.databind.ser.PropertyBuilder._annotationIntrospector,Field,No Comment,final protected AnnotationIntrospector _annotationIntrospector;,com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector,"final , protected "
com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultBean,Field,"* If a property has serialization inclusion value of\n     * {@link com.fasterxml.jackson.annotation.JsonInclude.Include#NON_DEFAULT},\n     * we may need to know the default value of the bean, to know if property value\n     * equals default one.\n     *<p>\n     * NOTE: only used if enclosing class defines NON_DEFAULT, but NOT if it is the\n     * global default OR per-property override.",protected Object _defaultBean;,java.lang.Object _defaultBean,protected 
com.fasterxml.jackson.databind.ser.PropertyBuilder._defaultInclusion,Field,* Default inclusion mode for properties of the POJO for which\n     * properties are collected; possibly overridden on\n     * per-property basis. Combines global inclusion defaults and\n     * per-type (annotation and type-override) inclusion overrides.,final protected JsonInclude.Value _defaultInclusion;,com.fasterxml.jackson.annotation.JsonInclude$Value _defaultInclusion,"final , protected "
com.fasterxml.jackson.databind.ser.PropertyBuilder._useRealPropertyDefaults,Field,"* Marker flag used to indicate that ""real"" default values are to be used\n     * for properties, as per per-type value inclusion of type <code>NON_DEFAULT</code>\n     *\n     * @since 2.8",final protected boolean _useRealPropertyDefaults;,boolean _useRealPropertyDefaults,"final , protected "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serialVersionUID,Field,As of 2.7,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter.MARKER_FOR_EMPTY,Field,"* Marker object used to indicate ""do not serialize if empty""",public final static Object MARKER_FOR_EMPTY = JsonInclude.Include.NON_EMPTY;,java.lang.Object MARKER_FOR_EMPTY,"public , final , static "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._name,Field,"* Logical name of the property; will be used as the field name under which\n     * value for the property is written.\n     * <p>\n     * NOTE: do NOT change name of this field; it is accessed by Afterburner\n     * module (until 2.4; not directly from 2.5) ALSO NOTE: ... and while it\n     * really ought to be `SerializableString`, changing that is also\n     * binary-incompatible change. So nope.",protected final SerializedString _name;,com.fasterxml.jackson.core.io.SerializedString _name,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._wrapperName,Field,"* Wrapper name to use for this element, if any\n     *\n     * @since 2.2",protected final PropertyName _wrapperName;,com.fasterxml.jackson.databind.PropertyName _wrapperName,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._declaredType,Field,"* Type property is declared to have, either in class definition or\n     * associated annotations.",protected final JavaType _declaredType;,com.fasterxml.jackson.databind.JavaType _declaredType,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._cfgSerializationType,Field,"* Type to use for locating serializer; normally same as return type of the\n     * accessor method, but may be overridden by annotations.",protected final JavaType _cfgSerializationType;,com.fasterxml.jackson.databind.JavaType _cfgSerializationType,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nonTrivialBaseType,Field,"* Base type of the property, if the declared type is ""non-trivial""; meaning\n     * it is either a structured type (collection, map, array), or\n     * parameterized. Used to retain type information about contained type,\n     * which is mostly necessary if type meta-data is to be included.",protected JavaType _nonTrivialBaseType;,com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType,protected 
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._contextAnnotations,Field,"* Annotations from context (most often, class that declares property, or in\n     * case of sub-class serializer, from that sub-class)\n     * <p>\n     * NOTE: transient just to support JDK serializability; Annotations do not\n     * serialize. At all.",protected final transient Annotations _contextAnnotations;,com.fasterxml.jackson.databind.util.Annotations _contextAnnotations,"protected , final , transient "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._member,Field,"* Member (field, method) that represents property and allows access to\n     * associated annotations.",protected final AnnotatedMember _member;,com.fasterxml.jackson.databind.introspect.AnnotatedMember _member,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._accessorMethod,Field,"* Accessor method used to get property value, for method-accessible\n     * properties. Null if and only if {@link #_field} is null.\n     * <p>\n     * `transient` (and non-final) only to support JDK serializability.",protected transient Method _accessorMethod;,java.lang.reflect.Method _accessorMethod,"protected , transient "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._field,Field,* Field that contains the property value for field-accessible properties.\n     * Null if and only if {@link #_accessorMethod} is null.\n     * <p>\n     * `transient` (and non-final) only to support JDK serializability.,protected transient Field _field;,java.lang.reflect.Field _field,"protected , transient "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._serializer,Field,* Serializer to use for writing out the value: null if it cannot be known\n     * statically; non-null if it can.,protected JsonSerializer<Object> _serializer;,com.fasterxml.jackson.databind.JsonSerializer _serializer,protected 
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._nullSerializer,Field,"* Serializer used for writing out null values, if any: if null, null values\n     * are to be suppressed.",protected JsonSerializer<Object> _nullSerializer;,com.fasterxml.jackson.databind.JsonSerializer _nullSerializer,protected 
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._typeSerializer,Field,* If property being serialized needs type information to be included this\n     * is the type serializer to use. Declared type (possibly augmented with\n     * annotations) of property is used for determining exact mechanism to use\n     * (compared to actual runtime type used for serializing actual state).,protected TypeSerializer _typeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer,protected 
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._dynamicSerializers,Field,"* In case serializer is not known statically (i.e. <code>_serializer</code>\n     * is null), we will use a lookup structure for storing dynamically resolved\n     * mapping from type(s) to serializer(s).",protected transient PropertySerializerMap _dynamicSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers,"protected , transient "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressNulls,Field,"* Whether null values are to be suppressed (nothing written out if value is\n     * null) or not. Note that this is a configuration value during\n     * construction, and actual handling relies on setting (or not) of\n     * {@link #_nullSerializer}.",protected final boolean _suppressNulls;,boolean _suppressNulls,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._suppressableValue,Field,* Value that is considered default value of the property; used for\n     * default-value-suppression if enabled.,protected final Object _suppressableValue;,java.lang.Object _suppressableValue,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._includeInViews,Field,* Alternate set of property writers used when view-based filtering is\n     * available for the Bean.,protected final Class<?>[] _includeInViews;,java.lang.Class[] _includeInViews,"protected , final "
com.fasterxml.jackson.databind.ser.BeanPropertyWriter._internalSettings,Field,No Comment,"protected transient HashMap<Object, Object> _internalSettings;",java.util.HashMap _internalSettings,"protected , transient "
com.fasterxml.jackson.databind.ObjectReader.serialVersionUID,Field,since 2.9,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ObjectReader._config,Field,"* General serialization configuration settings; while immutable,\n     * can use copy-constructor to create modified instances as necessary.",protected final DeserializationConfig _config;,com.fasterxml.jackson.databind.DeserializationConfig _config,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._context,Field,* Blueprint instance of deserialization context; used for creating\n     * actual instance when needed.,protected final DefaultDeserializationContext _context;,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _context,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._parserFactory,Field,* Factory used for constructing {@link JsonGenerator}s,protected final JsonFactory _parserFactory;,com.fasterxml.jackson.core.JsonFactory _parserFactory,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._unwrapRoot,Field,* Flag that indicates whether root values are expected to be unwrapped or not,protected final boolean _unwrapRoot;,boolean _unwrapRoot,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._filter,Field,* Filter to be consider for JsonParser.\n     * Default value to be null as filter not considered.,private final TokenFilter _filter;,com.fasterxml.jackson.core.filter.TokenFilter _filter,"private , final "
com.fasterxml.jackson.databind.ObjectReader._valueType,Field,"* Declared type of value to instantiate during deserialization.\n     * Defines which deserializer to use; as well as base type of instance\n     * to construct if an updatable value is not configured to be used\n     * (subject to changes by embedded type information, for polymorphic\n     * types). If {@link #_valueToUpdate} is non-null, only used for\n     * locating deserializer.",protected final JavaType _valueType;,com.fasterxml.jackson.databind.JavaType _valueType,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._rootDeserializer,Field,"* We may pre-fetch deserializer as soon as {@link #_valueType}\n     * is known, and if so, reuse it afterwards.\n     * This allows avoiding further deserializer lookups and increases\n     * performance a bit on cases where readers are reused.\n     *\n     * @since 2.1",protected final JsonDeserializer<Object> _rootDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _rootDeserializer,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._valueToUpdate,Field,"* Instance to update with data binding; if any. If null,\n     * a new instance is created, if non-null, properties of\n     * this value object will be updated instead.\n     * Note that value can be of almost any type, except not\n     * {@link com.fasterxml.jackson.databind.type.ArrayType}; array\n     * types cannot be modified because array size is immutable.",protected final Object _valueToUpdate;,java.lang.Object _valueToUpdate,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._schema,Field,"* When using data format that uses a schema, schema is passed\n     * to parser.",protected final FormatSchema _schema;,com.fasterxml.jackson.core.FormatSchema _schema,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._injectableValues,Field,"* Values that can be injected during deserialization, if any.",protected final InjectableValues _injectableValues;,com.fasterxml.jackson.databind.InjectableValues _injectableValues,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._dataFormatReaders,Field,"* Optional detector used for auto-detecting data format that byte-based\n     * input uses.\n     *<p>\n     * NOTE: If defined non-null, <code>readValue()</code> methods that take\n     * {@link Reader} or {@link String} input <b>will fail with exception</b>,\n     * because format-detection only works on byte-sources. Also, if format\n     * cannot be detect reliably (as per detector settings),\n     * a {@link StreamReadException} will be thrown).\n     *\n     * @since 2.1",protected final DataFormatReaders _dataFormatReaders;,com.fasterxml.jackson.databind.deser.DataFormatReaders _dataFormatReaders,"protected , final "
com.fasterxml.jackson.databind.ObjectReader._rootDeserializers,Field,"* Root-level cached deserializers.\n     * Passed by {@link ObjectMapper}, shared with it.","final protected ConcurrentHashMap<JavaType, JsonDeserializer<Object>> _rootDeserializers;",java.util.concurrent.ConcurrentHashMap _rootDeserializers,"final , protected "
com.fasterxml.jackson.databind.ObjectReader._jsonNodeType,Field,* Lazily resolved {@link JavaType} for {@link JsonNode},protected transient JavaType _jsonNodeType;,com.fasterxml.jackson.databind.JavaType _jsonNodeType,"protected , transient "
com.fasterxml.jackson.databind.SequenceWriter._provider,Field,No Comment,protected final DefaultSerializerProvider _provider;,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._config,Field,No Comment,protected final SerializationConfig _config;,com.fasterxml.jackson.databind.SerializationConfig _config,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._generator,Field,No Comment,protected final JsonGenerator _generator;,com.fasterxml.jackson.core.JsonGenerator _generator,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._rootSerializer,Field,No Comment,protected final JsonSerializer<Object> _rootSerializer;,com.fasterxml.jackson.databind.JsonSerializer _rootSerializer,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._typeSerializer,Field,No Comment,protected final TypeSerializer _typeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._closeGenerator,Field,No Comment,protected final boolean _closeGenerator;,boolean _closeGenerator,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._cfgFlush,Field,No Comment,protected final boolean _cfgFlush;,boolean _cfgFlush,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._cfgCloseCloseable,Field,No Comment,protected final boolean _cfgCloseCloseable;,boolean _cfgCloseCloseable,"protected , final "
com.fasterxml.jackson.databind.SequenceWriter._dynamicSerializers,Field,"* If {@link #_rootSerializer} is not defined (no root type\n     * was used for constructing {@link ObjectWriter}), we will\n     * use simple scheme for keeping track of serializers needed.\n     * Assumption is that",protected PropertySerializerMap _dynamicSerializers;,com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers,protected 
com.fasterxml.jackson.databind.SequenceWriter._openArray,Field,"* State flag for keeping track of need to write matching END_ARRAY,\n     * if a START_ARRAY was written during initialization",protected boolean _openArray;,boolean _openArray,protected 
com.fasterxml.jackson.databind.SequenceWriter._closed,Field,No Comment,protected boolean _closed;,boolean _closed,protected 
com.fasterxml.jackson.databind.node.NullNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.NullNode.instance,Field,No Comment,public final static NullNode instance = new NullNode();,com.fasterxml.jackson.databind.node.NullNode instance,"public , final , static "
com.fasterxml.jackson.databind.node.JsonNodeFactory.serialVersionUID,Field,with 2.2,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.JsonNodeFactory.MAX_ELEMENT_INDEX_FOR_INSERT,Field,* Constant that defines maximum {@code JsonPointer} element index we\n     * use for inserts.,protected final static int MAX_ELEMENT_INDEX_FOR_INSERT = 9999;,int MAX_ELEMENT_INDEX_FOR_INSERT,"protected , final , static "
com.fasterxml.jackson.databind.node.JsonNodeFactory._cfgBigDecimalExact,Field,No Comment,// as of 2.15\n@Deprecated\nprivate final boolean _cfgBigDecimalExact;,boolean _cfgBigDecimalExact,"private , final "
com.fasterxml.jackson.databind.node.JsonNodeFactory.instance,Field,"* Default singleton instance that construct ""standard"" node instances:\n     * given that this class is stateless, a globally shared singleton\n     * can be used.",public final static JsonNodeFactory instance = new JsonNodeFactory();,com.fasterxml.jackson.databind.node.JsonNodeFactory instance,"public , final , static "
com.fasterxml.jackson.databind.node.ShortNode._value,Field,No Comment,protected final short _value;,short _value,"protected , final "
com.fasterxml.jackson.databind.node.BigIntegerNode.MIN_INTEGER,Field,No Comment,private final static BigInteger MIN_INTEGER = BigInteger.valueOf(Integer.MIN_VALUE);,java.math.BigInteger MIN_INTEGER,"private , final , static "
com.fasterxml.jackson.databind.node.BigIntegerNode.MAX_INTEGER,Field,No Comment,private final static BigInteger MAX_INTEGER = BigInteger.valueOf(Integer.MAX_VALUE);,java.math.BigInteger MAX_INTEGER,"private , final , static "
com.fasterxml.jackson.databind.node.BigIntegerNode.MIN_LONG,Field,No Comment,private final static BigInteger MIN_LONG = BigInteger.valueOf(Long.MIN_VALUE);,java.math.BigInteger MIN_LONG,"private , final , static "
com.fasterxml.jackson.databind.node.BigIntegerNode.MAX_LONG,Field,No Comment,private final static BigInteger MAX_LONG = BigInteger.valueOf(Long.MAX_VALUE);,java.math.BigInteger MAX_LONG,"private , final , static "
com.fasterxml.jackson.databind.node.BigIntegerNode._value,Field,No Comment,final protected BigInteger _value;,java.math.BigInteger _value,"final , protected "
com.fasterxml.jackson.databind.node.NodeSerialization.LONGEST_EAGER_ALLOC,Field,To avoid malicious input only allocate up to 100k,protected final static int LONGEST_EAGER_ALLOC = 100_000;,int LONGEST_EAGER_ALLOC,"protected , final , static "
com.fasterxml.jackson.databind.node.NodeSerialization.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.NodeSerialization.json,Field,No Comment,public byte[] json;,byte[] json,public 
com.fasterxml.jackson.databind.node.BinaryNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.BinaryNode.EMPTY_BINARY_NODE,Field,No Comment,final static BinaryNode EMPTY_BINARY_NODE = new BinaryNode(new byte[0]);,com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE,"final , static "
com.fasterxml.jackson.databind.node.BinaryNode._data,Field,No Comment,protected final byte[] _data;,byte[] _data,"protected , final "
com.fasterxml.jackson.databind.node.DecimalNode.ZERO,Field,No Comment,public static final DecimalNode ZERO = new DecimalNode(BigDecimal.ZERO);,com.fasterxml.jackson.databind.node.DecimalNode ZERO,"public , static , final "
com.fasterxml.jackson.databind.node.DecimalNode.MIN_INTEGER,Field,No Comment,private final static BigDecimal MIN_INTEGER = BigDecimal.valueOf(Integer.MIN_VALUE);,java.math.BigDecimal MIN_INTEGER,"private , final , static "
com.fasterxml.jackson.databind.node.DecimalNode.MAX_INTEGER,Field,No Comment,private final static BigDecimal MAX_INTEGER = BigDecimal.valueOf(Integer.MAX_VALUE);,java.math.BigDecimal MAX_INTEGER,"private , final , static "
com.fasterxml.jackson.databind.node.DecimalNode.MIN_LONG,Field,No Comment,private final static BigDecimal MIN_LONG = BigDecimal.valueOf(Long.MIN_VALUE);,java.math.BigDecimal MIN_LONG,"private , final , static "
com.fasterxml.jackson.databind.node.DecimalNode.MAX_LONG,Field,No Comment,private final static BigDecimal MAX_LONG = BigDecimal.valueOf(Long.MAX_VALUE);,java.math.BigDecimal MAX_LONG,"private , final , static "
com.fasterxml.jackson.databind.node.DecimalNode._value,Field,No Comment,final protected BigDecimal _value;,java.math.BigDecimal _value,"final , protected "
com.fasterxml.jackson.databind.node.InternalNodeMapper.JSON_MAPPER,Field,No Comment,private final static JsonMapper JSON_MAPPER = new JsonMapper();,com.fasterxml.jackson.databind.json.JsonMapper JSON_MAPPER,"private , final , static "
com.fasterxml.jackson.databind.node.InternalNodeMapper.STD_WRITER,Field,No Comment,private final static ObjectWriter STD_WRITER = JSON_MAPPER.writer();,com.fasterxml.jackson.databind.ObjectWriter STD_WRITER,"private , final , static "
com.fasterxml.jackson.databind.node.InternalNodeMapper.PRETTY_WRITER,Field,No Comment,private final static ObjectWriter PRETTY_WRITER = JSON_MAPPER.writer().withDefaultPrettyPrinter();,com.fasterxml.jackson.databind.ObjectWriter PRETTY_WRITER,"private , final , static "
com.fasterxml.jackson.databind.node.InternalNodeMapper.NODE_READER,Field,No Comment,private final static ObjectReader NODE_READER = JSON_MAPPER.readerFor(JsonNode.class);,com.fasterxml.jackson.databind.ObjectReader NODE_READER,"private , final , static "
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer._root,Field,No Comment,protected final BaseJsonNode _root;,com.fasterxml.jackson.databind.node.BaseJsonNode _root,"protected , final "
com.fasterxml.jackson.databind.node.InternalNodeMapper$WrapperForSerializer._context,Field,Non-final as passed when `serialize()` is called,protected SerializerProvider _context;,com.fasterxml.jackson.databind.SerializerProvider _context,protected 
com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack._stack,Field,No Comment,private Iterator<?>[] _stack;,java.util.Iterator[] _stack,private 
com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack._top,Field,No Comment,"private int _top, _end;",int _top,private 
com.fasterxml.jackson.databind.node.InternalNodeMapper$IteratorStack._end,Field,No Comment,"private int _top, _end;",int _end,private 
com.fasterxml.jackson.databind.node.MissingNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.MissingNode.instance,Field,No Comment,private final static MissingNode instance = new MissingNode();,com.fasterxml.jackson.databind.node.MissingNode instance,"private , final , static "
com.fasterxml.jackson.databind.node.DoubleNode._value,Field,No Comment,protected final double _value;,double _value,"protected , final "
com.fasterxml.jackson.databind.node.ObjectNode.serialVersionUID,Field,since 2.10,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.ObjectNode._children,Field,Note: LinkedHashMap for backwards compatibility,"protected final Map<String, JsonNode> _children;",java.util.Map _children,"protected , final "
com.fasterxml.jackson.databind.node.BaseJsonNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.IntNode.MIN_CANONICAL,Field,No Comment,final static int MIN_CANONICAL = -1;,int MIN_CANONICAL,"final , static "
com.fasterxml.jackson.databind.node.IntNode.MAX_CANONICAL,Field,No Comment,final static int MAX_CANONICAL = 10;,int MAX_CANONICAL,"final , static "
com.fasterxml.jackson.databind.node.IntNode.CANONICALS,Field,No Comment,private final static IntNode[] CANONICALS;,com.fasterxml.jackson.databind.node.IntNode[] CANONICALS,"private , final , static "
com.fasterxml.jackson.databind.node.IntNode._value,Field,* Integer value this node contains,protected final int _value;,int _value,"protected , final "
com.fasterxml.jackson.databind.node.POJONode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.POJONode._value,Field,No Comment,protected final Object _value;,java.lang.Object _value,"protected , final "
com.fasterxml.jackson.databind.node.ValueNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.TextNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.TextNode.EMPTY_STRING_NODE,Field,No Comment,"final static TextNode EMPTY_STRING_NODE = new TextNode("""");",com.fasterxml.jackson.databind.node.TextNode EMPTY_STRING_NODE,"final , static "
com.fasterxml.jackson.databind.node.TextNode._value,Field,No Comment,protected final String _value;,java.lang.String _value,"protected , final "
com.fasterxml.jackson.databind.node.NodeCursor._parent,Field,"* Parent cursor of this cursor, if any; null for root\n     * cursors.",protected final NodeCursor _parent;,com.fasterxml.jackson.databind.node.NodeCursor _parent,"protected , final "
com.fasterxml.jackson.databind.node.NodeCursor._currentName,Field,* Current field name,protected String _currentName;,java.lang.String _currentName,protected 
com.fasterxml.jackson.databind.node.NodeCursor._currentValue,Field,* @since 2.5,protected java.lang.Object _currentValue;,java.lang.Object _currentValue,protected 
com.fasterxml.jackson.databind.node.NodeCursor$RootCursor._node,Field,No Comment,protected JsonNode _node;,com.fasterxml.jackson.databind.JsonNode _node,protected 
com.fasterxml.jackson.databind.node.NodeCursor$RootCursor._done,Field,No Comment,protected boolean _done = false;,boolean _done,protected 
com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor._contents,Field,No Comment,protected Iterator<JsonNode> _contents;,java.util.Iterator _contents,protected 
com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor._currentElement,Field,No Comment,protected JsonNode _currentElement;,com.fasterxml.jackson.databind.JsonNode _currentElement,protected 
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor._contents,Field,No Comment,"protected Iterator<Map.Entry<String, JsonNode>> _contents;",java.util.Iterator _contents,protected 
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor._current,Field,No Comment,"protected Map.Entry<String, JsonNode> _current;",java.util.Map$Entry _current,protected 
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor._needEntry,Field,No Comment,protected boolean _needEntry;,boolean _needEntry,protected 
com.fasterxml.jackson.databind.node.NumericNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.TreeTraversingParser._objectCodec,Field,No Comment,protected ObjectCodec _objectCodec;,com.fasterxml.jackson.core.ObjectCodec _objectCodec,protected 
com.fasterxml.jackson.databind.node.TreeTraversingParser._nodeCursor,Field,* Traversal context within tree,protected NodeCursor _nodeCursor;,com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor,protected 
com.fasterxml.jackson.databind.node.TreeTraversingParser._closed,Field,* Flag that indicates whether parser is closed or not. Gets\n     * set when parser is either closed by explicit call\n     * ({@link #close}) or when end-of-input is reached.,protected boolean _closed;,boolean _closed,protected 
com.fasterxml.jackson.databind.node.ArrayNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.ArrayNode._children,Field,No Comment,private final List<JsonNode> _children;,java.util.List _children,"private , final "
com.fasterxml.jackson.databind.node.LongNode._value,Field,No Comment,protected final long _value;,long _value,"protected , final "
com.fasterxml.jackson.databind.node.ContainerNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.ContainerNode._nodeFactory,Field,* We will keep a reference to the Object (usually TreeMapper)\n     * that can construct instances of nodes to add to this container\n     * node.,protected final JsonNodeFactory _nodeFactory;,com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory,"protected , final "
com.fasterxml.jackson.databind.node.FloatNode._value,Field,No Comment,protected final float _value;,float _value,"protected , final "
com.fasterxml.jackson.databind.node.BooleanNode.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.node.BooleanNode.TRUE,Field,No Comment,public final static BooleanNode TRUE = new BooleanNode(true);,com.fasterxml.jackson.databind.node.BooleanNode TRUE,"public , final , static "
com.fasterxml.jackson.databind.node.BooleanNode.FALSE,Field,No Comment,public final static BooleanNode FALSE = new BooleanNode(false);,com.fasterxml.jackson.databind.node.BooleanNode FALSE,"public , final , static "
com.fasterxml.jackson.databind.node.BooleanNode._value,Field,No Comment,private final boolean _value;,boolean _value,"private , final "
com.fasterxml.jackson.databind.InjectableValues$Std.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.InjectableValues$Std._values,Field,No Comment,"protected final Map<String, Object> _values;",java.util.Map _values,"protected , final "
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor$Base._provider,Field,No Comment,protected SerializerProvider _provider;,com.fasterxml.jackson.databind.SerializerProvider _provider,protected 
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor$Base._provider,Field,No Comment,protected SerializerProvider _provider;,com.fasterxml.jackson.databind.SerializerProvider _provider,protected 
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor$Base._provider,Field,No Comment,protected SerializerProvider _provider;,com.fasterxml.jackson.databind.SerializerProvider _provider,protected 
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper$Base._provider,Field,No Comment,protected SerializerProvider _provider;,com.fasterxml.jackson.databind.SerializerProvider _provider,protected 
com.fasterxml.jackson.databind.MappingJsonFactory.serialVersionUID,Field,since 2.7,private static final long serialVersionUID = -1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategy.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 2L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CAMEL_CASE,Field,"* @deprecated Since 2.12 deprecated. Use {@link PropertyNamingStrategies#LOWER_CAMEL_CASE} instead.\n     * See\n     * <a href=""https://github.com/FasterXML/jackson-databind/issues/2715"">databind#2715</a>\n     * for reasons for deprecation.",// since 2.12\n@Deprecated\npublic static final PropertyNamingStrategy LOWER_CAMEL_CASE = new PropertyNamingStrategy();,com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CAMEL_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategy.UPPER_CAMEL_CASE,Field,"* @deprecated Since 2.12 deprecated. Use {@link PropertyNamingStrategies#UPPER_CAMEL_CASE} instead.\n     * See\n     * <a href=""https://github.com/FasterXML/jackson-databind/issues/2715"">databind#2715</a>\n     * for reasons for deprecation.",// since 2.12\n@Deprecated\npublic static final PropertyNamingStrategy UPPER_CAMEL_CASE = new UpperCamelCaseStrategy(false);,com.fasterxml.jackson.databind.PropertyNamingStrategy UPPER_CAMEL_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategy.SNAKE_CASE,Field,"* @deprecated Since 2.12 deprecated. Use {@link PropertyNamingStrategies#SNAKE_CASE} instead.\n     * See\n     * <a href=""https://github.com/FasterXML/jackson-databind/issues/2715"">databind#2715</a>\n     * for reasons for deprecation.",// since 2.12\n@Deprecated\npublic static final PropertyNamingStrategy SNAKE_CASE = new SnakeCaseStrategy(false);,com.fasterxml.jackson.databind.PropertyNamingStrategy SNAKE_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_CASE,Field,"* @deprecated Since 2.12 deprecated. Use {@link PropertyNamingStrategies#LOWER_CASE} instead.\n     * See\n     * <a href=""https://github.com/FasterXML/jackson-databind/issues/2715"">databind#2715</a>\n     * for reasons for deprecation.",// since 2.12\n@Deprecated\npublic static final PropertyNamingStrategy LOWER_CASE = new LowerCaseStrategy(false);,com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategy.KEBAB_CASE,Field,"* @deprecated Since 2.12 deprecated. Use {@link PropertyNamingStrategies#KEBAB_CASE} instead.\n     * See\n     * <a href=""https://github.com/FasterXML/jackson-databind/issues/2715"">databind#2715</a>\n     * for reasons for deprecation.",// since 2.12\n@Deprecated\npublic static final PropertyNamingStrategy KEBAB_CASE = new KebabCaseStrategy(false);,com.fasterxml.jackson.databind.PropertyNamingStrategy KEBAB_CASE,"public , static , final "
com.fasterxml.jackson.databind.PropertyNamingStrategy.LOWER_DOT_CASE,Field,"* @deprecated Since 2.12 deprecated. Use {@link PropertyNamingStrategies#LOWER_DOT_CASE} instead.\n     * See\n     * <a href=""https://github.com/FasterXML/jackson-databind/issues/2715"">databind#2715</a>\n     * for reasons for deprecation.",// since 2.12\n@Deprecated\npublic static final PropertyNamingStrategy LOWER_DOT_CASE = new LowerDotCaseStrategy(false);,com.fasterxml.jackson.databind.PropertyNamingStrategy LOWER_DOT_CASE,"public , static , final "
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty._type,Field,No Comment,private final Type _type;,com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type _type,"private , final "
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty._name,Field,No Comment,private final String _name;,java.lang.String _name,"private , final "
com.fasterxml.jackson.databind.ObjectWriter.serialVersionUID,Field,since 2.5,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ObjectWriter.NULL_PRETTY_PRINTER,Field,* We need to keep track of explicit disabling of pretty printing;\n     * easiest to do by a token value.,protected final static PrettyPrinter NULL_PRETTY_PRINTER = new MinimalPrettyPrinter();,com.fasterxml.jackson.core.PrettyPrinter NULL_PRETTY_PRINTER,"protected , final , static "
com.fasterxml.jackson.databind.ObjectWriter._config,Field,* General serialization configuration settings,protected final SerializationConfig _config;,com.fasterxml.jackson.databind.SerializationConfig _config,"protected , final "
com.fasterxml.jackson.databind.ObjectWriter._serializerProvider,Field,No Comment,protected final DefaultSerializerProvider _serializerProvider;,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider,"protected , final "
com.fasterxml.jackson.databind.ObjectWriter._serializerFactory,Field,No Comment,protected final SerializerFactory _serializerFactory;,com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory,"protected , final "
com.fasterxml.jackson.databind.ObjectWriter._generatorFactory,Field,* Factory used for constructing {@link JsonGenerator}s,protected final JsonFactory _generatorFactory;,com.fasterxml.jackson.core.JsonFactory _generatorFactory,"protected , final "
com.fasterxml.jackson.databind.ObjectWriter._generatorSettings,Field,* Container for settings that need to be passed to {@link JsonGenerator}\n     * constructed for serializing values.\n     *\n     * @since 2.5,protected final GeneratorSettings _generatorSettings;,com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings _generatorSettings,"protected , final "
com.fasterxml.jackson.databind.ObjectWriter._prefetch,Field,"* We may pre-fetch serializer if root type\n     * is known (has been explicitly declared), and if so, reuse it afterwards.\n     * This allows avoiding further serializer lookups and increases\n     * performance a bit on cases where readers are reused.\n     *\n     * @since 2.5",protected final Prefetch _prefetch;,com.fasterxml.jackson.databind.ObjectWriter$Prefetch _prefetch,"protected , final "
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings.empty,Field,No Comment,"public final static GeneratorSettings empty = new GeneratorSettings(null, null, null, null);",com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings empty,"public , final , static "
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings.prettyPrinter,Field,"* To allow for dynamic enabling/disabling of pretty printing,\n         * pretty printer can be optionally configured for writer\n         * as well",public final PrettyPrinter prettyPrinter;,com.fasterxml.jackson.core.PrettyPrinter prettyPrinter,"public , final "
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings.schema,Field,"* When using data format that uses a schema, schema is passed\n         * to generator.",public final FormatSchema schema;,com.fasterxml.jackson.core.FormatSchema schema,"public , final "
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings.characterEscapes,Field,"* Caller may want to specify character escaping details, either as\n         * defaults, or on call-by-call basis.",public final CharacterEscapes characterEscapes;,com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes,"public , final "
com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings.rootValueSeparator,Field,"* Caller may want to override so-called ""root value separator"",\n         * String added (verbatim, with no quoting or escaping) between\n         * values in root context. Default value is a single space character,\n         * but this is often changed to linefeed.",public final SerializableString rootValueSeparator;,com.fasterxml.jackson.core.SerializableString rootValueSeparator,"public , final "
com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.ObjectWriter$Prefetch.empty,Field,No Comment,"public final static Prefetch empty = new Prefetch(null, null, null);",com.fasterxml.jackson.databind.ObjectWriter$Prefetch empty,"public , final , static "
com.fasterxml.jackson.databind.ObjectWriter$Prefetch.rootType,Field,"* Specified root serialization type to use; can be same\n         * as runtime type, but usually one of its super types\n         * (parent class or interface it implements).",private final JavaType rootType;,com.fasterxml.jackson.databind.JavaType rootType,"private , final "
com.fasterxml.jackson.databind.ObjectWriter$Prefetch.valueSerializer,Field,"* We may pre-fetch serializer if {@link #rootType}\n         * is known, and if so, reuse it afterwards.\n         * This allows avoiding further serializer lookups and increases\n         * performance a bit on cases where readers are reused.",private final JsonSerializer<Object> valueSerializer;,com.fasterxml.jackson.databind.JsonSerializer valueSerializer,"private , final "
com.fasterxml.jackson.databind.ObjectWriter$Prefetch.typeSerializer,Field,"* When dealing with polymorphic types, we cannot pre-fetch\n         * serializer, but can pre-fetch {@link TypeSerializer}.",private final TypeSerializer typeSerializer;,com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer,"private , final "
com.fasterxml.jackson.databind.MappingIterator.EMPTY_ITERATOR,Field,No Comment,"protected final static MappingIterator<?> EMPTY_ITERATOR = new MappingIterator<Object>(null, null, null, null, false, null);",com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR,"protected , final , static "
com.fasterxml.jackson.databind.MappingIterator.STATE_CLOSED,Field,* State in which iterator is closed,protected final static int STATE_CLOSED = 0;,int STATE_CLOSED,"protected , final , static "
com.fasterxml.jackson.databind.MappingIterator.STATE_NEED_RESYNC,Field,* State in which value read failed,protected final static int STATE_NEED_RESYNC = 1;,int STATE_NEED_RESYNC,"protected , final , static "
com.fasterxml.jackson.databind.MappingIterator.STATE_MAY_HAVE_VALUE,Field,"* State in which no recovery is needed, but ""hasNextValue()"" needs\n     * to be called first",protected final static int STATE_MAY_HAVE_VALUE = 2;,int STATE_MAY_HAVE_VALUE,"protected , final , static "
com.fasterxml.jackson.databind.MappingIterator.STATE_HAS_VALUE,Field,"* State in which ""hasNextValue()"" has been succesfully called\n     * and deserializer can be called to fetch value",protected final static int STATE_HAS_VALUE = 3;,int STATE_HAS_VALUE,"protected , final , static "
com.fasterxml.jackson.databind.MappingIterator._type,Field,* Type to bind individual elements to.,protected final JavaType _type;,com.fasterxml.jackson.databind.JavaType _type,"protected , final "
com.fasterxml.jackson.databind.MappingIterator._context,Field,"* Context for deserialization, needed to pass through to deserializer",protected final DeserializationContext _context;,com.fasterxml.jackson.databind.DeserializationContext _context,"protected , final "
com.fasterxml.jackson.databind.MappingIterator._deserializer,Field,* Deserializer for individual element values.,protected final JsonDeserializer<T> _deserializer;,com.fasterxml.jackson.databind.JsonDeserializer _deserializer,"protected , final "
com.fasterxml.jackson.databind.MappingIterator._parser,Field,"* Underlying parser used for reading content to bind. Initialized\n     * as not <code>null</code> but set as <code>null</code> when\n     * iterator is closed, to denote closing.",protected final JsonParser _parser;,com.fasterxml.jackson.core.JsonParser _parser,"protected , final "
com.fasterxml.jackson.databind.MappingIterator._seqContext,Field,"* Context to resynchronize to, in case an exception is encountered\n     * but caller wants to try to read more elements.",protected final JsonStreamContext _seqContext;,com.fasterxml.jackson.core.JsonStreamContext _seqContext,"protected , final "
com.fasterxml.jackson.databind.MappingIterator._updatedValue,Field,"* If not null, ""value to update"" instead of creating a new instance\n     * for each call.",protected final T _updatedValue;,java.lang.Object _updatedValue,"protected , final "
com.fasterxml.jackson.databind.MappingIterator._closeParser,Field,* Flag that indicates whether input {@link JsonParser} should be closed\n     * when we are done or not; generally only called when caller did not\n     * pass JsonParser.,protected final boolean _closeParser;,boolean _closeParser,"protected , final "
com.fasterxml.jackson.databind.MappingIterator._state,Field,* State of the iterator,protected int _state;,int _state,protected 
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer._typePropertyName,Field,No Comment,protected final String _typePropertyName;,java.lang.String _typePropertyName,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._idResolver,Field,No Comment,protected final TypeIdResolver _idResolver;,com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase._property,Field,No Comment,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver._basePackageName,Field,"* Package name of the base class, to be used for determining common\n     * prefix that can be omitted from included type id.\n     * Does not include the trailing dot.",protected final String _basePackageName;,java.lang.String _basePackageName,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver._basePackagePrefix,Field,"* Same as {@link #_basePackageName}, but includes trailing dot.",protected final String _basePackagePrefix;,java.lang.String _basePackagePrefix,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer._typePropertyName,Field,No Comment,protected final String _typePropertyName;,java.lang.String _typePropertyName,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._typeFactory,Field,No Comment,protected final TypeFactory _typeFactory;,com.fasterxml.jackson.databind.type.TypeFactory _typeFactory,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase._baseType,Field,* Common base type for all polymorphic instances handled.,protected final JavaType _baseType;,com.fasterxml.jackson.databind.JavaType _baseType,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver._registeredSubtypes,Field,No Comment,protected LinkedHashSet<NamedType> _registeredSubtypes;,java.util.LinkedHashSet _registeredSubtypes,protected 
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer.EMPTY_CLASS_FINGERPRINT,Field,"03-May-2021, tatu: for [databind#3139], support for ""empty"" type",private static final BitSet EMPTY_CLASS_FINGERPRINT = new BitSet(0);,java.util.BitSet EMPTY_CLASS_FINGERPRINT,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer.fieldBitIndex,Field,"Fieldname -> bitmap-index of every field discovered, across all subtypes","private final Map<String, Integer> fieldBitIndex;",java.util.Map fieldBitIndex,"private , final "
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer.subtypeFingerprints,Field,Bitmap of available fields in each subtype (including its parents),"private final Map<BitSet, String> subtypeFingerprints;",java.util.Map subtypeFingerprints,"private , final "
com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator.instance,Field,No Comment,public final static LaissezFaireSubTypeValidator instance = new LaissezFaireSubTypeValidator();,com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance,"public , final , static "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._idResolver,Field,No Comment,protected final TypeIdResolver _idResolver;,com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._baseType,Field,No Comment,protected final JavaType _baseType;,com.fasterxml.jackson.databind.JavaType _baseType,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._property,Field,* Property that contains value for which type information\n     * is included; null if value is a root value.\n     * Note that this value is not assigned during construction\n     * but only when {@link #forProperty} is called to create\n     * a copy.,protected final BeanProperty _property;,com.fasterxml.jackson.databind.BeanProperty _property,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImpl,Field,"* Type to use as the default implementation, if type id is\n     * missing or cannot be resolved.",protected final JavaType _defaultImpl;,com.fasterxml.jackson.databind.JavaType _defaultImpl,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typePropertyName,Field,"* Name of type property used; needed for non-property versions too,\n     * in cases where type id is to be exposed as part of JSON.",protected final String _typePropertyName;,java.lang.String _typePropertyName,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._typeIdVisible,Field,No Comment,protected final boolean _typeIdVisible;,boolean _typeIdVisible,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._deserializers,Field,"* For efficient operation we will lazily build mappings from type ids\n     * to actual deserializers, once needed.","protected final Map<String, JsonDeserializer<Object>> _deserializers;",java.util.Map _deserializers,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase._defaultImplDeserializer,Field,No Comment,protected JsonDeserializer<Object> _defaultImplDeserializer;,com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer,protected 
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.PREFIX_SPRING,Field,No Comment,"protected final static String PREFIX_SPRING = ""org.springframework."";",java.lang.String PREFIX_SPRING,"protected , final , static "
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.PREFIX_C3P0,Field,No Comment,"protected final static String PREFIX_C3P0 = ""com.mchange.v2.c3p0."";",java.lang.String PREFIX_C3P0,"protected , final , static "
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.DEFAULT_NO_DESER_CLASS_NAMES,Field,"* Set of well-known ""nasty classes"", deserialization of which is considered dangerous\n     * and should (and is) prevented by default.",protected final static Set<String> DEFAULT_NO_DESER_CLASS_NAMES;,java.util.Set DEFAULT_NO_DESER_CLASS_NAMES,"protected , final , static "
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator._cfgIllegalClassNames,Field,* Set of class names of types that are never to be deserialized.,protected Set<String> _cfgIllegalClassNames = DEFAULT_NO_DESER_CLASS_NAMES;,java.util.Set _cfgIllegalClassNames,protected 
com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator.instance,Field,No Comment,private final static SubTypeValidator instance = new SubTypeValidator();,com.fasterxml.jackson.databind.jsontype.impl.SubTypeValidator instance,"private , final , static "
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver._config,Field,No Comment,protected final MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver._typeToId,Field,"* Mappings from class name to type id, used for serialization.\n     *<p>\n     * Since lazily constructed will require synchronization (either internal\n     * by type, or external)","protected final ConcurrentHashMap<String, String> _typeToId;",java.util.concurrent.ConcurrentHashMap _typeToId,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver._idToType,Field,"* Mappings from type id to JavaType, used for deserialization.\n     *<p>\n     * Eagerly constructed, not modified, can use regular unsynchronized {@link Map}.","protected final Map<String, JavaType> _idToType;",java.util.Map _idToType,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.SimpleNameIdResolver._caseInsensitive,Field,No Comment,protected final boolean _caseInsensitive;,boolean _caseInsensitive,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver.JAVA_UTIL_PKG,Field,No Comment,"private final static String JAVA_UTIL_PKG = ""java.util."";",java.lang.String JAVA_UTIL_PKG,"private , final , static "
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver._subTypeValidator,Field,No Comment,protected final PolymorphicTypeValidator _subTypeValidator;,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._idType,Field,No Comment,protected JsonTypeInfo.Id _idType;,com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType,protected 
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._includeAs,Field,No Comment,protected JsonTypeInfo.As _includeAs;,com.fasterxml.jackson.annotation.JsonTypeInfo$As _includeAs,protected 
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeProperty,Field,No Comment,protected String _typeProperty;,java.lang.String _typeProperty,protected 
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._typeIdVisible,Field,* Whether type id should be exposed to deserializers or not,protected boolean _typeIdVisible = false;,boolean _typeIdVisible,protected 
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._requireTypeIdForSubtypes,Field,"* \n     * Boolean value configured through {@link JsonTypeInfo#requireTypeIdForSubtypes}.\n     * If this value is not {@code null}, this value should override the global configuration of\n     * {@link com.fasterxml.jackson.databind.MapperFeature#REQUIRE_TYPE_ID_FOR_SUBTYPES}. \n     * \n     * @since 2.16 (backported from Jackson 3.0)",protected Boolean _requireTypeIdForSubtypes;,java.lang.Boolean _requireTypeIdForSubtypes,protected 
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._defaultImpl,Field,* Default class to use in case type information is not available\n     * or is broken.,protected Class<?> _defaultImpl;,java.lang.Class _defaultImpl,protected 
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder._customIdResolver,Field,No Comment,protected TypeIdResolver _customIdResolver;,com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver,protected 
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer.INSTANCE,Field,No Comment,private final static AsDeductionTypeSerializer INSTANCE = new AsDeductionTypeSerializer();,com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer INSTANCE,"private , final , static "
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver._config,Field,No Comment,protected final MapperConfig<?> _config;,com.fasterxml.jackson.databind.cfg.MapperConfig _config,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver._typeToId,Field,"* Mappings from class name to type id, used for serialization.\n     *<p>\n     * Since lazily constructed will require synchronization (either internal\n     * by type, or external)","protected final ConcurrentHashMap<String, String> _typeToId;",java.util.concurrent.ConcurrentHashMap _typeToId,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver._idToType,Field,"* Mappings from type id to JavaType, used for deserialization.\n     *<p>\n     * Eagerly constructed, not modified, can use regular unsynchronized {@link Map}.","protected final Map<String, JavaType> _idToType;",java.util.Map _idToType,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver._caseInsensitive,Field,* @since 2.11,protected final boolean _caseInsensitive;,boolean _caseInsensitive,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._inclusion,Field,No Comment,protected final As _inclusion;,com.fasterxml.jackson.annotation.JsonTypeInfo$As _inclusion,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._strictTypeIdHandling,Field,* Indicates that we should be strict about handling missing type information.\n     *\n     * @since 2.15,protected final boolean _strictTypeIdHandling;,boolean _strictTypeIdHandling,"protected , final "
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer._msgForMissingId,Field,@since 2.12.2 (see [databind#3055],"protected final String _msgForMissingId = (_property == null) ? String.format(""missing type id property '%s'"", _typePropertyName) : String.format(""missing type id property '%s' (for POJO property '%s')"", _typePropertyName, _property.getName());",java.lang.String _msgForMissingId,"protected , final "
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Base.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes.instance,Field,No Comment,public final static UnsafeBaseTypes instance = new UnsafeBaseTypes();,com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes instance,"public , final , static "
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes.UNSAFE,Field,No Comment,private final Set<String> UNSAFE = new HashSet<>();,java.util.Set UNSAFE,"private , final "
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._invalidBaseTypes,Field,* Set of specifically denied base types to indicate that use of specific\n     * base types is not allowed: most commonly used to fully block use of\n     * {@link java.lang.Object} as the base type.,protected final Set<Class<?>> _invalidBaseTypes;,java.util.Set _invalidBaseTypes,"protected , final "
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._baseTypeMatchers,Field,* Set of matchers that can validate all values of polymorphic properties\n     * that match specified allowed base types.,protected final TypeMatcher[] _baseTypeMatchers;,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _baseTypeMatchers,"protected , final "
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subTypeNameMatchers,Field,* Set of matchers that can validate specific values of polymorphic properties\n     * that match subtype class name criteria.,protected final NameMatcher[] _subTypeNameMatchers;,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] _subTypeNameMatchers,"protected , final "
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator._subClassMatchers,Field,* Set of matchers that can validate specific values of polymorphic properties\n     * that match subtype class criteria.,protected final TypeMatcher[] _subClassMatchers;,com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _subClassMatchers,"protected , final "
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder._invalidBaseTypes,Field,"* Optional set of base types (exact match) that are NOT accepted\n         * as base types for polymorphic properties. May be used to prevent ""unsafe""\n         * base types like {@link java.lang.Object} or {@link java.io.Serializable}.",protected Set<Class<?>> _invalidBaseTypes;,java.util.Set _invalidBaseTypes,protected 
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder._baseTypeMatchers,Field,* Collected matchers for base types to allow.,protected List<TypeMatcher> _baseTypeMatchers;,java.util.List _baseTypeMatchers,protected 
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder._subTypeNameMatchers,Field,* Collected name-based matchers for sub types to allow.,protected List<NameMatcher> _subTypeNameMatchers;,java.util.List _subTypeNameMatchers,protected 
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder._subTypeClassMatchers,Field,* Collected Class-based matchers for sub types to allow.,protected List<TypeMatcher> _subTypeClassMatchers;,java.util.List _subTypeClassMatchers,protected 
com.fasterxml.jackson.databind.jsontype.NamedType.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
com.fasterxml.jackson.databind.jsontype.NamedType._class,Field,No Comment,protected final Class<?> _class;,java.lang.Class _class,"protected , final "
com.fasterxml.jackson.databind.jsontype.NamedType._hashCode,Field,No Comment,protected final int _hashCode;,int _hashCode,"protected , final "
com.fasterxml.jackson.databind.jsontype.NamedType._name,Field,No Comment,protected String _name;,java.lang.String _name,protected 
