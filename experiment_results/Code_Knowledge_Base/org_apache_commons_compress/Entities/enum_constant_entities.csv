FEN:ID,:LABEL,Comment,Source Code,Signature,Modifiers
org.apache.commons.compress.changes.Change$ChangeType.DELETE,Enum Constant,* Delete.,DELETE,org.apache.commons.compress.changes.Change$ChangeType DELETE,default
org.apache.commons.compress.changes.Change$ChangeType.ADD,Enum Constant,* Add.,ADD,org.apache.commons.compress.changes.Change$ChangeType ADD,default
org.apache.commons.compress.changes.Change$ChangeType.MOVE,Enum Constant,* Not used.,MOVE,org.apache.commons.compress.changes.Change$ChangeType MOVE,default
org.apache.commons.compress.changes.Change$ChangeType.DELETE_DIR,Enum Constant,* Delete directory.,DELETE_DIR,org.apache.commons.compress.changes.Change$ChangeType DELETE_DIR,default
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.SETUID,Enum Constant,* Permission SETUID (octal value 04000).,SETUID(04000),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION SETUID,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.SETGUI,Enum Constant,* Permission SETGUI (octal value 02000).,SETGUI(02000),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION SETGUI,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.STICKY,Enum Constant,* Permission STICKY (octal value 01000).,STICKY(01000),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION STICKY,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.USER_READ,Enum Constant,* Permission USER_READ (octal value 00400).,USER_READ(00400),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION USER_READ,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.USER_WRITE,Enum Constant,* Permission USER_WRITE (octal value 00200).,USER_WRITE(00200),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION USER_WRITE,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.USER_EXEC,Enum Constant,* Permission USER_EXEC (octal value 00100).,USER_EXEC(00100),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION USER_EXEC,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.GROUP_READ,Enum Constant,* Permission GROUP_READ (octal value 00040).,GROUP_READ(00040),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION GROUP_READ,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.GROUP_WRITE,Enum Constant,* Permission GROUP_WRITE (octal value 00020).,GROUP_WRITE(00020),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION GROUP_WRITE,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.GROUP_EXEC,Enum Constant,* Permission 00020 (octal value 00010).,GROUP_EXEC(00010),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION GROUP_EXEC,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.WORLD_READ,Enum Constant,* Permission WORLD_READ (octal value 00004).,WORLD_READ(00004),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION WORLD_READ,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.WORLD_WRITE,Enum Constant,* Permission WORLD_WRITE (octal value 00002).,WORLD_WRITE(00002),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION WORLD_WRITE,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION.WORLD_EXEC,Enum Constant,* Permission WORLD_EXEC (octal value 00001).,WORLD_EXEC(00001),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$PERMISSION WORLD_EXEC,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.WHITEOUT,Enum Constant,* WHITEOUT with code 14.,WHITEOUT(14),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE WHITEOUT,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.SOCKET,Enum Constant,* SOCKET with code 12.,SOCKET(12),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE SOCKET,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.LINK,Enum Constant,* LINK with code 10.,LINK(10),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE LINK,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.FILE,Enum Constant,* FILE with code 8.,FILE(8),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE FILE,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.BLKDEV,Enum Constant,* BLKDEV with code 6.,BLKDEV(6),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE BLKDEV,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.DIRECTORY,Enum Constant,* DIRECTORY with code 4.,DIRECTORY(4),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE DIRECTORY,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.CHRDEV,Enum Constant,* CHRDEV with code 2.,CHRDEV(2),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE CHRDEV,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.FIFO,Enum Constant,* CHRDEV with code 1.,FIFO(1),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE FIFO,public 
org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE.UNKNOWN,Enum Constant,* UNKNOWN with code 15.,UNKNOWN(15),org.apache.commons.compress.archivers.dump.DumpArchiveEntry$TYPE UNKNOWN,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE.UNKNOWN,Enum Constant,* Compression code is -1.,UNKNOWN(-1),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE UNKNOWN,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE.ZLIB,Enum Constant,* Compression code is 0.,ZLIB(0),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE ZLIB,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE.BZLIB,Enum Constant,* Compression code is 1.,BZLIB(1),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE BZLIB,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE.LZO,Enum Constant,* Compression code is 2.,LZO(2),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$COMPRESSION_TYPE LZO,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE.TAPE,Enum Constant,* TAPE with code 1.,TAPE(1),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE TAPE,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE.INODE,Enum Constant,* INODE with code 2.,INODE(2),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE INODE,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE.BITS,Enum Constant,* BITS with code 3.,BITS(3),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE BITS,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE.ADDR,Enum Constant,* ADDR with code 4.,ADDR(4),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE ADDR,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE.END,Enum Constant,* END with code 5.,END(5),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE END,public 
org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE.CLRI,Enum Constant,* CLRI with code 6.,CLRI(6),org.apache.commons.compress.archivers.dump.DumpArchiveConstants$SEGMENT_TYPE CLRI,public 
org.apache.commons.compress.archivers.sevenz.CLI$Mode.LIST,Enum Constant,No Comment,"LIST(""Analysing"") {\n\n    private String getContentMethods(final SevenZArchiveEntry entry) {\n        final StringBuilder sb = new StringBuilder();\n        boolean first = true;\n        for (final SevenZMethodConfiguration m : entry.getContentMethods()) {\n            if (!first) {\n                sb.append("", "");\n            }\n            first = false;\n            sb.append(m.getMethod());\n            if (m.getOptions() != null) {\n                sb.append(""("").append(m.getOptions()).append("")"");\n            }\n        }\n        return sb.toString();\n    }\n\n    @Override\n    public void takeAction(final SevenZFile archive, final SevenZArchiveEntry entry) {\n        System.out.print(entry.getName());\n        if (entry.isDirectory()) {\n            System.out.print("" dir"");\n        } else {\n            System.out.print("" "" + entry.getCompressedSize() + ""/"" + entry.getSize());\n        }\n        if (entry.getHasLastModifiedDate()) {\n            System.out.print("" "" + entry.getLastModifiedDate());\n        } else {\n            System.out.print("" no last modified date"");\n        }\n        if (!entry.isDirectory()) {\n            System.out.println("" "" + getContentMethods(entry));\n        } else {\n            System.out.println();\n        }\n    }\n}",org.apache.commons.compress.archivers.sevenz.CLI$Mode LIST,private 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.COPY,Enum Constant,No compression at all.,COPY(new byte[] { (byte) 0x00 }),org.apache.commons.compress.archivers.sevenz.SevenZMethod COPY,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.LZMA,Enum Constant,LZMA - only supported when reading.,"LZMA(new byte[] { (byte) 0x03, (byte) 0x01, (byte) 0x01 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod LZMA,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.LZMA2,Enum Constant,LZMA2.,LZMA2(new byte[] { (byte) 0x21 }),org.apache.commons.compress.archivers.sevenz.SevenZMethod LZMA2,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.DEFLATE,Enum Constant,Deflate.,"DEFLATE(new byte[] { (byte) 0x04, (byte) 0x01, (byte) 0x08 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod DEFLATE,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.DEFLATE64,Enum Constant,* Deflate64.\n     *\n     * @since 1.16,"DEFLATE64(new byte[] { (byte) 0x04, (byte) 0x01, (byte) 0x09 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod DEFLATE64,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.BZIP2,Enum Constant,BZIP2.,"BZIP2(new byte[] { (byte) 0x04, (byte) 0x02, (byte) 0x02 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod BZIP2,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.AES256SHA256,Enum Constant,* AES encryption with a key length of 256 bit using SHA256 for hashes - only supported when reading.,"AES256SHA256(new byte[] { (byte) 0x06, (byte) 0xf1, (byte) 0x07, (byte) 0x01 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod AES256SHA256,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_X86_FILTER,Enum Constant,* BCJ x86 platform version 1.\n     *\n     * @since 1.8,"BCJ_X86_FILTER(new byte[] { 0x03, 0x03, 0x01, 0x03 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_X86_FILTER,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_PPC_FILTER,Enum Constant,* BCJ PowerPC platform.\n     *\n     * @since 1.8,"BCJ_PPC_FILTER(new byte[] { 0x03, 0x03, 0x02, 0x05 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_PPC_FILTER,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_IA64_FILTER,Enum Constant,* BCJ I64 platform.\n     *\n     * @since 1.8,"BCJ_IA64_FILTER(new byte[] { 0x03, 0x03, 0x04, 0x01 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_IA64_FILTER,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_ARM_FILTER,Enum Constant,* BCJ ARM platform.\n     *\n     * @since 1.8,"BCJ_ARM_FILTER(new byte[] { 0x03, 0x03, 0x05, 0x01 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_ARM_FILTER,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_ARM_THUMB_FILTER,Enum Constant,* BCJ ARM Thumb platform.\n     *\n     * @since 1.8,"BCJ_ARM_THUMB_FILTER(new byte[] { 0x03, 0x03, 0x07, 0x01 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_ARM_THUMB_FILTER,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_SPARC_FILTER,Enum Constant,* BCJ Sparc platform.\n     *\n     * @since 1.8,"BCJ_SPARC_FILTER(new byte[] { 0x03, 0x03, 0x08, 0x05 })",org.apache.commons.compress.archivers.sevenz.SevenZMethod BCJ_SPARC_FILTER,public 
org.apache.commons.compress.archivers.sevenz.SevenZMethod.DELTA_FILTER,Enum Constant,* Delta filter.\n     *\n     * @since 1.8,DELTA_FILTER(new byte[] { 0x03 }),org.apache.commons.compress.archivers.sevenz.SevenZMethod DELTA_FILTER,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.DES,Enum Constant,* DES with code 0x6601.,DES(0x6601),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm DES,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.RC2pre52,Enum Constant,* RC2pre52 with code 0x6602.,RC2pre52(0x6602),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm RC2pre52,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.TripleDES168,Enum Constant,* TripleDES168 with code 0x6603.,TripleDES168(0x6603),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm TripleDES168,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.TripleDES192,Enum Constant,* TripleDES192 with code 0x6609.,TripleDES192(0x6609),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm TripleDES192,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.AES128,Enum Constant,* AES128 with code 0x660E.,AES128(0x660E),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm AES128,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.AES192,Enum Constant,* AES192 with code 0x660F.,AES192(0x660F),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm AES192,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.AES256,Enum Constant,* AES256 with code 0x6610.,AES256(0x6610),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm AES256,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.RC2,Enum Constant,* RC2 with code 0x6702.,RC2(0x6702),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm RC2,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.RC4,Enum Constant,* RC4 with code 0x6801.,RC4(0x6801),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm RC4,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm.UNKNOWN,Enum Constant,* UNKNOWN with code 0xFFFF.,UNKNOWN(0xFFFF),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm UNKNOWN,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.NONE,Enum Constant,* NONE with code 0.,NONE(0),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm NONE,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.CRC32,Enum Constant,* CRC32 with code 1.,CRC32(1),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm CRC32,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.MD5,Enum Constant,* MD5 with code 0x8003.,MD5(0x8003),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm MD5,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.SHA1,Enum Constant,* SHA1 with code 0x8004.,SHA1(0x8004),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm SHA1,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.RIPEND160,Enum Constant,* RIPEND160 with code 0x8007.,RIPEND160(0x8007),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm RIPEND160,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.SHA256,Enum Constant,* SHA256 with code 0x800C.,SHA256(0x800C),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm SHA256,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.SHA384,Enum Constant,* SHA384 with code 0x800D.,SHA384(0x800D),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm SHA384,public 
org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm.SHA512,Enum Constant,* SHA512 with code 0x800E.,SHA512(0x800E),org.apache.commons.compress.archivers.zip.PKWareExtraHeader$HashAlgorithm SHA512,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource.COMMENT,Enum Constant,* The comment has been read from the archive using the encoding of the archive specified when creating the {@link ZipArchiveInputStream} or\n         * {@link ZipFile} (defaults to the platform's default encoding).,COMMENT,org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource COMMENT,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource.UNICODE_EXTRA_FIELD,Enum Constant,* The comment has been read from an {@link UnicodeCommentExtraField Unicode Extra Field}.,UNICODE_EXTRA_FIELD,org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource UNICODE_EXTRA_FIELD,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT,Enum Constant,* Try to parse as many extra fields as possible and wrap unknown extra fields as well as supported extra fields that cannot be parsed in\n         * {@link UnrecognizedExtraField}.\n         *\n         * <p>\n         * Wrap extra data that doesn't follow the recommended pattern in an {@link UnparseableExtraFieldData} instance.\n         * </p>\n         *\n         * <p>\n         * This is the default behavior starting with Commons Compress 1.19.\n         * </p>,"BEST_EFFORT(ExtraFieldUtils.UnparseableExtraField.READ) {\n\n    @Override\n    public ZipExtraField fill(final ZipExtraField field, final byte[] data, final int off, final int len, final boolean local) {\n        return fillAndMakeUnrecognizedOnError(field, data, off, len, local);\n    }\n}",org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode BEST_EFFORT,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode.STRICT_FOR_KNOW_EXTRA_FIELDS,Enum Constant,* Try to parse as many extra fields as possible and wrap unknown extra fields in {@link UnrecognizedExtraField}.\n         *\n         * <p>\n         * Wrap extra data that doesn't follow the recommended pattern in an {@link UnparseableExtraFieldData} instance.\n         * </p>\n         *\n         * <p>\n         * Throw an exception if an extra field that is generally supported cannot be parsed.\n         * </p>\n         *\n         * <p>\n         * This used to be the default behavior prior to Commons Compress 1.19.\n         * </p>,STRICT_FOR_KNOW_EXTRA_FIELDS(ExtraFieldUtils.UnparseableExtraField.READ),org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode STRICT_FOR_KNOW_EXTRA_FIELDS,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT,Enum Constant,* Try to parse as many extra fields as possible and wrap unknown extra fields as well as supported extra fields that cannot be parsed in\n         * {@link UnrecognizedExtraField}.\n         *\n         * <p>\n         * Ignore extra data that doesn't follow the recommended pattern.\n         * </p>,"ONLY_PARSEABLE_LENIENT(ExtraFieldUtils.UnparseableExtraField.SKIP) {\n\n    @Override\n    public ZipExtraField fill(final ZipExtraField field, final byte[] data, final int off, final int len, final boolean local) {\n        return fillAndMakeUnrecognizedOnError(field, data, off, len, local);\n    }\n}",org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode ONLY_PARSEABLE_LENIENT,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_STRICT,Enum Constant,* Try to parse as many extra fields as possible and wrap unknown extra fields in {@link UnrecognizedExtraField}.\n         *\n         * <p>\n         * Ignore extra data that doesn't follow the recommended pattern.\n         * </p>\n         *\n         * <p>\n         * Throw an exception if an extra field that is generally supported cannot be parsed.\n         * </p>,ONLY_PARSEABLE_STRICT(ExtraFieldUtils.UnparseableExtraField.SKIP),org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode ONLY_PARSEABLE_STRICT,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode.DRACONIC,Enum Constant,* Throw an exception if any of the recognized extra fields cannot be parsed or any extra field violates the recommended pattern.,DRACONIC(ExtraFieldUtils.UnparseableExtraField.THROW),org.apache.commons.compress.archivers.zip.ZipArchiveEntry$ExtraFieldParsingMode DRACONIC,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource.NAME,Enum Constant,* The name has been read from the archive using the encoding of the archive specified when creating the {@link ZipArchiveInputStream} or\n         * {@link ZipFile} (defaults to the platform's default encoding).,NAME,org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource NAME,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource.NAME_WITH_EFS_FLAG,Enum Constant,* The name has been read from the archive and the archive specified the EFS flag which indicates the name has been encoded as UTF-8.,NAME_WITH_EFS_FLAG,org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource NAME_WITH_EFS_FLAG,public 
org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource.UNICODE_EXTRA_FIELD,Enum Constant,* The name has been read from an {@link UnicodePathExtraField Unicode Extra Field}.,UNICODE_EXTRA_FIELD,org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource UNICODE_EXTRA_FIELD,public 
org.apache.commons.compress.archivers.zip.ZipMethod.STORED,Enum Constant,* Compression method 0 for uncompressed entries.\n     *\n     * @see ZipEntry#STORED,STORED(ZipEntry.STORED),org.apache.commons.compress.archivers.zip.ZipMethod STORED,public 
org.apache.commons.compress.archivers.zip.ZipMethod.UNSHRINKING,Enum Constant,"* UnShrinking. dynamic Lempel-Ziv-Welch-Algorithm\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",UNSHRINKING(1),org.apache.commons.compress.archivers.zip.ZipMethod UNSHRINKING,public 
org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_1,Enum Constant,"* Reduced with compression factor 1.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",EXPANDING_LEVEL_1(2),org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_1,public 
org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_2,Enum Constant,"* Reduced with compression factor 2.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",EXPANDING_LEVEL_2(3),org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_2,public 
org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_3,Enum Constant,"* Reduced with compression factor 3.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",EXPANDING_LEVEL_3(4),org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_3,public 
org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_4,Enum Constant,"* Reduced with compression factor 4.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",EXPANDING_LEVEL_4(5),org.apache.commons.compress.archivers.zip.ZipMethod EXPANDING_LEVEL_4,public 
org.apache.commons.compress.archivers.zip.ZipMethod.IMPLODING,Enum Constant,"* Imploding.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",IMPLODING(6),org.apache.commons.compress.archivers.zip.ZipMethod IMPLODING,public 
org.apache.commons.compress.archivers.zip.ZipMethod.TOKENIZATION,Enum Constant,"* Tokenization.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",TOKENIZATION(7),org.apache.commons.compress.archivers.zip.ZipMethod TOKENIZATION,public 
org.apache.commons.compress.archivers.zip.ZipMethod.DEFLATED,Enum Constant,* Compression method 8 for compressed (deflated) entries.\n     *\n     * @see ZipEntry#DEFLATED,DEFLATED(ZipEntry.DEFLATED),org.apache.commons.compress.archivers.zip.ZipMethod DEFLATED,public 
org.apache.commons.compress.archivers.zip.ZipMethod.ENHANCED_DEFLATED,Enum Constant,"* Compression Method 9 for enhanced deflate.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",ENHANCED_DEFLATED(9),org.apache.commons.compress.archivers.zip.ZipMethod ENHANCED_DEFLATED,public 
org.apache.commons.compress.archivers.zip.ZipMethod.PKWARE_IMPLODING,Enum Constant,"* PKWARE Data Compression Library Imploding.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",PKWARE_IMPLODING(10),org.apache.commons.compress.archivers.zip.ZipMethod PKWARE_IMPLODING,public 
org.apache.commons.compress.archivers.zip.ZipMethod.BZIP2,Enum Constant,"* Compression Method 12 for bzip2.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",BZIP2(12),org.apache.commons.compress.archivers.zip.ZipMethod BZIP2,public 
org.apache.commons.compress.archivers.zip.ZipMethod.LZMA,Enum Constant,"* Compression Method 14 for LZMA.\n     *\n     * @see <a href=""https://www.7-zip.org/sdk.html"">https://www.7-zip.org/sdk.html</a>\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",LZMA(14),org.apache.commons.compress.archivers.zip.ZipMethod LZMA,public 
org.apache.commons.compress.archivers.zip.ZipMethod.ZSTD_DEPRECATED,Enum Constant,"* Compression Method 20 for Zstandard (deprecated).\n     *\n     * @see <a href=""https://github.com/facebook/zstd"">Facebook Zstandard source code</a>\n     * @see <a href=""https://pkwaredownloads.blob.core.windows.net/pkware-general/Documentation/APPNOTE-6.3.7.TXT"">.ZIP File Format Specification 6.3.7:\n     *      Deprecated zstd compression method id</a>\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">.ZIP File Format Specification: Explanation of fields: compression method: (2\n     *      bytes)</a>\n     * @since 1.28.0",ZSTD_DEPRECATED(20),org.apache.commons.compress.archivers.zip.ZipMethod ZSTD_DEPRECATED,public 
org.apache.commons.compress.archivers.zip.ZipMethod.ZSTD,Enum Constant,"* Compression Method 93 for Zstandard.\n     *\n     * @see <a href=""https://github.com/facebook/zstd"">Facebook Zstandard source code</a>\n     * @see <a href=""https://pkwaredownloads.blob.core.windows.net/pkware-general/Documentation/APPNOTE-6.3.8.TXT"">.ZIP File Format Specification 6.3.8: Changed\n     *      zstd compression method id</a>\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">.ZIP File Format Specification: Explanation of fields: compression method: (2\n     *      bytes)</a>\n     * @since 1.28.0",ZSTD(93),org.apache.commons.compress.archivers.zip.ZipMethod ZSTD,public 
org.apache.commons.compress.archivers.zip.ZipMethod.XZ,Enum Constant,"* Compression Method 95 for XZ.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",XZ(95),org.apache.commons.compress.archivers.zip.ZipMethod XZ,public 
org.apache.commons.compress.archivers.zip.ZipMethod.JPEG,Enum Constant,"* Compression Method 96 for Jpeg compression.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",JPEG(96),org.apache.commons.compress.archivers.zip.ZipMethod JPEG,public 
org.apache.commons.compress.archivers.zip.ZipMethod.WAVPACK,Enum Constant,"* Compression Method 97 for WavPack.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",WAVPACK(97),org.apache.commons.compress.archivers.zip.ZipMethod WAVPACK,public 
org.apache.commons.compress.archivers.zip.ZipMethod.PPMD,Enum Constant,"* Compression Method 98 for PPMd.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",PPMD(98),org.apache.commons.compress.archivers.zip.ZipMethod PPMD,public 
org.apache.commons.compress.archivers.zip.ZipMethod.AES_ENCRYPTED,Enum Constant,"* Compression Method 99 for AES encryption.\n     *\n     * @see <a href=""https://www.pkware.com/documents/casestudies/APPNOTE.TXT"">Explanation of fields: compression method: (2 bytes)</a>",AES_ENCRYPTED(99),org.apache.commons.compress.archivers.zip.ZipMethod AES_ENCRYPTED,public 
org.apache.commons.compress.archivers.zip.ZipMethod.UNKNOWN,Enum Constant,* Unknown compression method.,UNKNOWN,org.apache.commons.compress.archivers.zip.ZipMethod UNKNOWN,public 
org.apache.commons.compress.archivers.zip.Zip64Mode.Always,Enum Constant,"* Use Zip64 extensions for all entries, even if it is clear it is not required.",Always,org.apache.commons.compress.archivers.zip.Zip64Mode Always,public 
org.apache.commons.compress.archivers.zip.Zip64Mode.Never,Enum Constant,* Don't use Zip64 extensions for any entries.\n     *\n     * <p>\n     * This will cause a {@link Zip64RequiredException} to be thrown if {@link ZipArchiveOutputStream} detects it needs Zip64 support.\n     * </p>,Never,org.apache.commons.compress.archivers.zip.Zip64Mode Never,public 
org.apache.commons.compress.archivers.zip.Zip64Mode.AsNeeded,Enum Constant,"* Use Zip64 extensions for all entries where they are required, don't use them for entries that clearly don't require them.",AsNeeded,org.apache.commons.compress.archivers.zip.Zip64Mode AsNeeded,public 
org.apache.commons.compress.archivers.zip.Zip64Mode.AlwaysWithCompatibility,Enum Constant,"* Always use Zip64 extensions for LFH and central directory as {@link Zip64Mode#Always} did, and at the meantime encode the relative offset of LFH and disk\n     * number start as needed in CFH as {@link Zip64Mode#AsNeeded} did.\n     * <p>\n     * This is a compromise for some libraries including 7z and Expand-Archive Powershell utility(and likely Excel).",AlwaysWithCompatibility,org.apache.commons.compress.archivers.zip.Zip64Mode AlwaysWithCompatibility,public 
org.apache.commons.compress.compressors.deflate64.HuffmanState.INITIAL,Enum Constant,No Comment,INITIAL,org.apache.commons.compress.compressors.deflate64.HuffmanState INITIAL,default
org.apache.commons.compress.compressors.deflate64.HuffmanState.STORED,Enum Constant,No Comment,STORED,org.apache.commons.compress.compressors.deflate64.HuffmanState STORED,default
org.apache.commons.compress.compressors.deflate64.HuffmanState.DYNAMIC_CODES,Enum Constant,No Comment,DYNAMIC_CODES,org.apache.commons.compress.compressors.deflate64.HuffmanState DYNAMIC_CODES,default
org.apache.commons.compress.compressors.deflate64.HuffmanState.FIXED_CODES,Enum Constant,No Comment,FIXED_CODES,org.apache.commons.compress.compressors.deflate64.HuffmanState FIXED_CODES,default
org.apache.commons.compress.compressors.brotli.BrotliUtils$CachedAvailability.DONT_CACHE,Enum Constant,No Comment,DONT_CACHE,org.apache.commons.compress.compressors.brotli.BrotliUtils$CachedAvailability DONT_CACHE,default
org.apache.commons.compress.compressors.brotli.BrotliUtils$CachedAvailability.CACHED_AVAILABLE,Enum Constant,No Comment,CACHED_AVAILABLE,org.apache.commons.compress.compressors.brotli.BrotliUtils$CachedAvailability CACHED_AVAILABLE,default
org.apache.commons.compress.compressors.brotli.BrotliUtils$CachedAvailability.CACHED_UNAVAILABLE,Enum Constant,No Comment,CACHED_UNAVAILABLE,org.apache.commons.compress.compressors.brotli.BrotliUtils$CachedAvailability CACHED_UNAVAILABLE,default
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State.NO_BLOCK,Enum Constant,No Comment,NO_BLOCK,org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State NO_BLOCK,private 
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State.IN_LITERAL,Enum Constant,No Comment,IN_LITERAL,org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State IN_LITERAL,private 
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE,Enum Constant,No Comment,LOOKING_FOR_BACK_REFERENCE,org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State LOOKING_FOR_BACK_REFERENCE,private 
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE,Enum Constant,No Comment,IN_BACK_REFERENCE,org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State IN_BACK_REFERENCE,private 
org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State.EOF,Enum Constant,No Comment,EOF,org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream$State EOF,private 
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize.K64,Enum Constant,Block size of 64K.,"K64(64 * 1024, 4)",org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize K64,public 
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize.K256,Enum Constant,Block size of 256K.,"K256(256 * 1024, 5)",org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize K256,public 
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize.M1,Enum Constant,Block size of 1M.,"M1(1024 * 1024, 6)",org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize M1,public 
org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize.M4,Enum Constant,Block size of 4M.,"M4(4096 * 1024, 7)",org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStream$BlockSize M4,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.ACORN_RISCOS,Enum Constant,* 13: Acorn RISCOS.,ACORN_RISCOS(OS_ACORN_RISCOS),org.apache.commons.compress.compressors.gzip.GzipParameters$OS ACORN_RISCOS,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.AMIGA,Enum Constant,* 1: Amiga.,AMIGA(OS_AMIGA),org.apache.commons.compress.compressors.gzip.GzipParameters$OS AMIGA,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.ATARI_TOS,Enum Constant,* 5: Atari TOS.,ATARI_TOS(OS_ATARI_TOS),org.apache.commons.compress.compressors.gzip.GzipParameters$OS ATARI_TOS,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.CPM,Enum Constant,* 9: CP/M.,CPM(OS_CPM),org.apache.commons.compress.compressors.gzip.GzipParameters$OS CPM,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.FAT,Enum Constant,"* 0: FAT filesystem (MS-DOS, OS/2, NT/Win32).",FAT(OS_FAT),org.apache.commons.compress.compressors.gzip.GzipParameters$OS FAT,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.HPFS,Enum Constant,"* 6: HPFS filesystem (OS/2, NT).",HPFS(OS_HPFS),org.apache.commons.compress.compressors.gzip.GzipParameters$OS HPFS,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.MACINTOSH,Enum Constant,* 7: Macintosh.,MACINTOSH(OS_MACINTOSH),org.apache.commons.compress.compressors.gzip.GzipParameters$OS MACINTOSH,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.NTFS,Enum Constant,* 11: NTFS filesystem (NT).,NTFS(OS_NTFS),org.apache.commons.compress.compressors.gzip.GzipParameters$OS NTFS,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.QDOS,Enum Constant,* 12: QDOS.,QDOS(OS_QDOS),org.apache.commons.compress.compressors.gzip.GzipParameters$OS QDOS,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.TOPS_20,Enum Constant,* 10: TOPS-20.,TOPS_20(OS_TOPS_20),org.apache.commons.compress.compressors.gzip.GzipParameters$OS TOPS_20,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.UNIX,Enum Constant,* 3: Unix.,UNIX(OS_UNIX),org.apache.commons.compress.compressors.gzip.GzipParameters$OS UNIX,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.UNKNOWN,Enum Constant,* 255: unknown.,UNKNOWN(OS_UNKNOWN),org.apache.commons.compress.compressors.gzip.GzipParameters$OS UNKNOWN,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.VM_CMS,Enum Constant,* 4: VM/CMS.,VM_CMS(OS_VM_CMS),org.apache.commons.compress.compressors.gzip.GzipParameters$OS VM_CMS,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.VMS,Enum Constant,* 2: VMS (or OpenVMS).,VMS(OS_VMS),org.apache.commons.compress.compressors.gzip.GzipParameters$OS VMS,public 
org.apache.commons.compress.compressors.gzip.GzipParameters$OS.Z_SYSTEM,Enum Constant,* 8: Z-System.,Z_SYSTEM(OS_Z_SYSTEM),org.apache.commons.compress.compressors.gzip.GzipParameters$OS Z_SYSTEM,public 
org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability.DONT_CACHE,Enum Constant,No Comment,DONT_CACHE,org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability DONT_CACHE,default
org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability.CACHED_AVAILABLE,Enum Constant,No Comment,CACHED_AVAILABLE,org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability CACHED_AVAILABLE,default
org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability.CACHED_UNAVAILABLE,Enum Constant,No Comment,CACHED_UNAVAILABLE,org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability CACHED_UNAVAILABLE,default
org.apache.commons.compress.compressors.snappy.FramedSnappyDialect.STANDARD,Enum Constant,"* The standard as defined by the <a href=""https://github.com/google/snappy/blob/master/framing_format.txt"">Snappy framing format description</a>","STANDARD(true, true)",org.apache.commons.compress.compressors.snappy.FramedSnappyDialect STANDARD,public 
org.apache.commons.compress.compressors.snappy.FramedSnappyDialect.IWORK_ARCHIVE,Enum Constant,* The format used by Apple's iWork Archives (.iwa files).,"IWORK_ARCHIVE(false, false)",org.apache.commons.compress.compressors.snappy.FramedSnappyDialect IWORK_ARCHIVE,public 
org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$State.NO_BLOCK,Enum Constant,No Comment,NO_BLOCK,org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$State NO_BLOCK,private 
org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$State.IN_LITERAL,Enum Constant,No Comment,IN_LITERAL,org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$State IN_LITERAL,private 
org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$State.IN_BACK_REFERENCE,Enum Constant,No Comment,IN_BACK_REFERENCE,org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream$State IN_BACK_REFERENCE,private 
org.apache.commons.compress.compressors.pack200.Pack200Strategy.IN_MEMORY,Enum Constant,Cache output in memory.,IN_MEMORY {\n\n    @Override\n    AbstractStreamBridge newStreamBridge() {\n        return new InMemoryCachingStreamBridge();\n    }\n},org.apache.commons.compress.compressors.pack200.Pack200Strategy IN_MEMORY,public 
org.apache.commons.compress.compressors.pack200.Pack200Strategy.TEMP_FILE,Enum Constant,Cache output in a temporary file.,TEMP_FILE {\n\n    @Override\n    AbstractStreamBridge newStreamBridge() throws IOException {\n        return new TempFileCachingStreamBridge();\n    }\n},org.apache.commons.compress.compressors.pack200.Pack200Strategy TEMP_FILE,public 
org.apache.commons.compress.compressors.zstandard.ZstdUtils$CachedAvailability.DONT_CACHE,Enum Constant,No Comment,DONT_CACHE,org.apache.commons.compress.compressors.zstandard.ZstdUtils$CachedAvailability DONT_CACHE,default
org.apache.commons.compress.compressors.zstandard.ZstdUtils$CachedAvailability.CACHED_AVAILABLE,Enum Constant,No Comment,CACHED_AVAILABLE,org.apache.commons.compress.compressors.zstandard.ZstdUtils$CachedAvailability CACHED_AVAILABLE,default
org.apache.commons.compress.compressors.zstandard.ZstdUtils$CachedAvailability.CACHED_UNAVAILABLE,Enum Constant,No Comment,CACHED_UNAVAILABLE,org.apache.commons.compress.compressors.zstandard.ZstdUtils$CachedAvailability CACHED_UNAVAILABLE,default
org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block$BlockType.LITERAL,Enum Constant,* The literal block type.,LITERAL,org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block$BlockType LITERAL,public 
org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block$BlockType.BACK_REFERENCE,Enum Constant,* The back-reference block type.,BACK_REFERENCE,org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block$BlockType BACK_REFERENCE,public 
org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block$BlockType.EOD,Enum Constant,* The end-of-data block type.,EOD,org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block$BlockType EOD,public 
org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability.DONT_CACHE,Enum Constant,No Comment,DONT_CACHE,org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability DONT_CACHE,default
org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability.CACHED_AVAILABLE,Enum Constant,No Comment,CACHED_AVAILABLE,org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability CACHED_AVAILABLE,default
org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability.CACHED_UNAVAILABLE,Enum Constant,No Comment,CACHED_UNAVAILABLE,org.apache.commons.compress.compressors.lzma.LZMAUtils$CachedAvailability CACHED_UNAVAILABLE,default
