FEN:ID,:LABEL,Comment,Source Code,Signature,Modifiers
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.AUTO_DETECT_XSI_TYPE,Enum Constant,"* Feature that enables automatic conversion of incoming ""xsi:type""\n         * (where ""type""  is the local name and ""xsi"" prefix is bound to URI\n         * {@link XMLConstants#W3C_XML_SCHEMA_INSTANCE_NS_URI}),\n         * into Jackson simple Property Name of {@code ""xsi:type""}.\n         * This is usually needed to read content written using\n         * matching {@code ToXmlGenerator.Feature#AUTO_DETECT_XSI_TYPE} feature,\n         * usually used for Polymorphic handling where it is difficult\n         * to specify proper XML Namespace for type identifier.\n         * \n         * Default setting is {@code false} in Jackson 2.x (for backwards compatibility):\n         * will be changed to true in Jackson 3.x\n         *\n         * @since 2.17",AUTO_DETECT_XSI_TYPE(false),com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature AUTO_DETECT_XSI_TYPE,public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.EMPTY_ELEMENT_AS_NULL,Enum Constant,"* Feature that indicates whether XML Empty elements (ones where there are\n         * no separate start and end tags, but just one tag that ends with ""/&gt;"")\n         * are exposed as {@link JsonToken#VALUE_NULL}) or not. If they are not\n         * returned as `null` tokens, they will be returned as {@link JsonToken#VALUE_STRING}\n         * tokens with textual value of """" (empty String).\n         *<p>\n         * Default setting was {@code true} (for backwards compatibility) from 2.9 to 2.11 (inclusive)\n         * but was changed in 2.12 to be {@code false} (see [dataformat-xml#411] for details)\n         *\n         * @since 2.9",EMPTY_ELEMENT_AS_NULL(false),com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature EMPTY_ELEMENT_AS_NULL,public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.PROCESS_XSI_NIL,Enum Constant,"* Feature that indicates whether XML Schema Instance attribute\n         * {@code xsi:nil} will be processed automatically -- to indicate {@code null}\n         * values -- or not.\n         * If enabled, {@code xsi:nil} attribute on any XML element will mark such\n         * elements as ""null values"" and any other attributes or child elements they\n         * might have to be ignored. If disabled this attribute will be exposed like\n         * any other attribute.\n         *<p>\n         * Default setting is {@code true} since processing was enabled in 2.12.\n         *\n         * @since 2.13",PROCESS_XSI_NIL(true),com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature PROCESS_XSI_NIL,public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.WRITE_XML_DECLARATION,Enum Constant,* Feature that controls whether XML declaration should be written before\n         * when generator is initialized (true) or not (false),WRITE_XML_DECLARATION(false),com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_XML_DECLARATION,public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.WRITE_XML_1_1,Enum Constant,"* Feature that controls whether output should be done as XML 1.1; if so,\n         * certain aspects may differ from default (1.0) processing: for example,\n         * XML declaration will be automatically added (regardless of setting\n         * <code>WRITE_XML_DECLARATION</code>) as this is required for reader to\n         * know to use 1.1 compliant handling. XML 1.1 can be used to allow quoted\n         * control characters (Ascii codes 0 through 31) as well as additional linefeeds\n         * and name characters.",WRITE_XML_1_1(false),com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_XML_1_1,public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.WRITE_NULLS_AS_XSI_NIL,Enum Constant,"* Feature that controls whether serialization of Java {@code null} values adds\n         * XML attribute of `xsi:nil`, as defined by XML Schema (see\n         * <a href=""https://www.oreilly.com/library/view/xml-in-a/0596007647/re166.html"">this article</a>\n         * for details) or not.\n         * If enabled, `xsi:nil` attribute will be added to the empty element; if disabled,\n         * it will not.\n         *<p>\n         * Default setting is {@code disabled} in Jackson 2.x for backwards compatibility:\n         * but will be changed in 3.0 to {@code enabled}.\n         *\n         * @since 2.10",WRITE_NULLS_AS_XSI_NIL(false),com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_NULLS_AS_XSI_NIL,public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.UNWRAP_ROOT_OBJECT_NODE,Enum Constant,"* Feature that determines writing of root values of type {@code ObjectNode}\n         * ({@code JsonNode} subtype that represents Object content values),\n         * regarding XML output.\n         * If enabled and {@code ObjectNode} has exactly one entry (key/value pair),\n         * then key of that entry is used as the root element name (and value\n         * is written as contents. Otherwise (if feature disabled, or if root\n         * {@code ObjectNode} has any other number of key/value entries,\n         * root element name is determined using normal logic (either explicitly\n         * configured, or {@code ObjectNode} otherwise).\n         *<p>\n         * Default setting is {@code disabled} in Jackson 2.x, for backwards compatibility:\n         * but will be changed in 3.0 to {@code enabled}.\n         *\n         * @since 2.13",UNWRAP_ROOT_OBJECT_NODE(false),com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature UNWRAP_ROOT_OBJECT_NODE,public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.AUTO_DETECT_XSI_TYPE,Enum Constant,"* Feature that enables automatic conversion of logical property\n         * name {@code ""xsi:type""} into matching XML name where ""type""\n         * is the local name and ""xsi"" prefix is bound to URI\n         * {@link XMLConstants#W3C_XML_SCHEMA_INSTANCE_NS_URI},\n         * and output is indicated to be done as XML Attribute.\n         * This is mostly desirable for Polymorphic handling where it is difficult\n         * to specify XML Namespace for type identifier\n         *<p>\n         * Default setting is {@code disabled} in Jackson 2.x for backwards compatibility:\n         * but will be changed in 3.0 to {@code enabled}.\n         *\n         * @since 2.17",AUTO_DETECT_XSI_TYPE(false),com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature AUTO_DETECT_XSI_TYPE,public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.WRITE_XML_SCHEMA_CONFORMING_FLOATS,Enum Constant,"* Feature that determines how floating-point infinity values are\n         * serialized.\n         *<p>\n         * By default, {@link Float#POSITIVE_INFINITY} and\n         * {@link Double#POSITIVE_INFINITY} are serialized as {@code Infinity},\n         * and {@link Float#NEGATIVE_INFINITY} and\n         * {@link Double#NEGATIVE_INFINITY} are serialized as\n         * {@code -Infinity}. This is the representation that Java normally\n         * uses for these values (see {@link Float#toString(float)} and\n         * {@link Double#toString(double)}), but JAXB and other XML\n         * Schema-conforming readers won't understand it.\n         *<p>\n         * With this feature enabled, these values are instead serialized as\n         * {@code INF} and {@code -INF}, respectively. This is the\n         * representation that XML Schema and JAXB use (see the XML Schema\n         * primitive types\n         * <a href=""https://www.w3.org/TR/xmlschema-2/#float""><code>float</code></a>\n         * and\n         * <a href=""https://www.w3.org/TR/xmlschema-2/#double""><code>double</code></a>).\n         *<p>\n         * When deserializing, Jackson always understands both representations,\n         * so there is no corresponding\n         * {@link com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature}.\n         *<p>\n         * Feature is {@code disabled} by default in Jackson 2.x for backwards compatibility:\n         * but will be changed in 3.0 to {@code enabled}.\n         *\n         * @since 2.17",WRITE_XML_SCHEMA_CONFORMING_FLOATS(false),com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_XML_SCHEMA_CONFORMING_FLOATS,public 
