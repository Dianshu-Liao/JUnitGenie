FEN:ID,:LABEL,Comment,Source Code,Signature,CFG,Modifiers
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeStartElement(XMLStreamWriter2,String,String)",Abstract Method,"* Method for forcibly writing a start element, without going\n     * through Jackson generator (and thus, without updating currently\n     * active element stack)\n     * \n     * @since 2.1","public void writeStartElement(XMLStreamWriter2 sw, String nsURI, String localName) throws XMLStreamException;","void writeStartElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)",digraph cfg_writeStartElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeEndElement(XMLStreamWriter2,int)",Abstract Method,"* Method for forcibly writing an end element, without going\n     * through Jackson generator (and thus, without updating currently\n     * active element stack)\n     * \n     * @since 2.1","public void writeEndElement(XMLStreamWriter2 sw, int nrOfEntries) throws XMLStreamException;","void writeEndElement(org.codehaus.stax2.XMLStreamWriter2,int)",digraph cfg_writeEndElement {\n}\n,public 
com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writePrologLinefeed(XMLStreamWriter2),Abstract Method,"* Method for trying to write a linefeed to separate entities outside of the\n     * root element (that is, in prolog or epilog), most often called to separate\n     * XML declaration from the root element.\n     *\n     * @since 2.7",public void writePrologLinefeed(XMLStreamWriter2 sw) throws XMLStreamException;,void writePrologLinefeed(org.codehaus.stax2.XMLStreamWriter2),digraph cfg_writePrologLinefeed {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,String,boolean)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, String text, boolean isCData) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.lang.String,boolean)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,char[],int,int,boolean)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, char[] buffer, int offset, int len, boolean isCData) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,char[],int,int,boolean)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,boolean)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, boolean value) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,boolean)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,int)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, int value) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,int)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,long)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, long value) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,long)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,double)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, double value) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,double)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,float)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, float value) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,float)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigInteger)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, BigInteger value) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.math.BigInteger)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigDecimal)",Abstract Method,No Comment,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, BigDecimal value) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.math.BigDecimal)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,Base64Variant,byte[],int,int)",Abstract Method,binary element,"public void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, org.codehaus.stax2.typed.Base64Variant base64variant, byte[] data, int offset, int len) throws XMLStreamException;","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,org.codehaus.stax2.typed.Base64Variant,byte[],int,int)",digraph cfg_writeLeafElement {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter.writeLeafNullElement(XMLStreamWriter2,String,String)",Abstract Method,empty element to represent null,"public void writeLeafNullElement(XMLStreamWriter2 sw, String nsURI, String localName) throws XMLStreamException;","void writeLeafNullElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)",digraph cfg_writeLeafNullElement {\n}\n,public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.formatParserFeaturesMask(),Method,No Comment,public int formatParserFeaturesMask() {\n    return _formatParserFeatures;\n},int formatParserFeaturesMask(),"digraph cfg_formatParserFeaturesMask {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int _formatParserFeatures>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.formatGeneratorFeaturesMask(),Method,No Comment,public int formatGeneratorFeaturesMask() {\n    return _formatGeneratorFeatures;\n},int formatGeneratorFeaturesMask(),"digraph cfg_formatGeneratorFeaturesMask {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int _formatGeneratorFeatures>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.nameForTextElement(),Method,No Comment,public String nameForTextElement() {\n    return _nameForTextElement;\n},java.lang.String nameForTextElement(),"digraph cfg_nameForTextElement {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.String _nameForTextElement>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlInputFactory(),Method,No Comment,public XMLInputFactory xmlInputFactory() {\n    if (_xmlInputFactory == null) {\n        return defaultInputFactory();\n    }\n    return _xmlInputFactory;\n},javax.xml.stream.XMLInputFactory xmlInputFactory(),"digraph cfg_xmlInputFactory {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""3"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLInputFactory defaultInputFactory()>()""];\n	""4"" [label=""if $stack1 != null""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.defaultInputFactory(),Method,No Comment,"protected XMLInputFactory defaultInputFactory() {\n    XMLInputFactory xmlIn = StaxUtil.defaultInputFactory(_classLoaderForStax);\n    // as per [dataformat-xml#190], disable external entity expansion by default\n    xmlIn.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, Boolean.FALSE);\n    // and ditto wrt [dataformat-xml#211], SUPPORT_DTD\n    xmlIn.setProperty(XMLInputFactory.SUPPORT_DTD, Boolean.FALSE);\n    return xmlIn;\n}",javax.xml.stream.XMLInputFactory defaultInputFactory(),"digraph cfg_defaultInputFactory {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.ClassLoader _classLoaderForStax>""];\n	""2"" [label=""$stack3 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""3"" [label=""$stack4 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""4"" [label=""return xmlIn""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""6"" [label=""virtualinvoke xmlIn.<javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.isSupportingExternalEntities\"", $stack3)""];\n	""7"" [label=""virtualinvoke xmlIn.<javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.supportDTD\"", $stack4)""];\n	""8"" [label=""xmlIn = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: javax.xml.stream.XMLInputFactory defaultInputFactory(java.lang.ClassLoader)>($stack2)""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlOutputFactory(),Method,No Comment,public XMLOutputFactory xmlOutputFactory() {\n    if (_xmlOutputFactory == null) {\n        return defaultOutputFactory();\n    }\n    return _xmlOutputFactory;\n},javax.xml.stream.XMLOutputFactory xmlOutputFactory(),"digraph cfg_xmlOutputFactory {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""3"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLOutputFactory defaultOutputFactory()>()""];\n	""4"" [label=""if $stack1 != null""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.defaultOutputFactory(),Method,No Comment,"protected XMLOutputFactory defaultOutputFactory() {\n    XMLOutputFactory xmlOut = StaxUtil.defaultOutputFactory(_classLoaderForStax);\n    // [dataformat-xml#326]: Better ensure namespaces get built properly:\n    xmlOut.setProperty(XMLOutputFactory.IS_REPAIRING_NAMESPACES, Boolean.TRUE);\n    return xmlOut;\n}",javax.xml.stream.XMLOutputFactory defaultOutputFactory(),"digraph cfg_defaultOutputFactory {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.ClassLoader _classLoaderForStax>""];\n	""2"" [label=""$stack3 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""3"" [label=""return xmlOut""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""5"" [label=""virtualinvoke xmlOut.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.isRepairingNamespaces\"", $stack3)""];\n	""6"" [label=""xmlOut = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: javax.xml.stream.XMLOutputFactory defaultOutputFactory(java.lang.ClassLoader)>($stack2)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.staxClassLoader(),Method,@since 2.13,protected ClassLoader staxClassLoader() {\n    return (_classLoaderForStax == null) ? getClass().getClassLoader() : _classLoaderForStax;\n},java.lang.ClassLoader staxClassLoader(),"digraph cfg_staxClassLoader {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.ClassLoader _classLoaderForStax>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.ClassLoader _classLoaderForStax>""];\n	""3"" [label=""$stack2 = virtualinvoke $stack3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()""];\n	""4"" [label=""$stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack2""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlNameProcessor(),Method,No Comment,public XmlNameProcessor xmlNameProcessor() {\n    return _nameProcessor;\n},com.fasterxml.jackson.dataformat.xml.XmlNameProcessor xmlNameProcessor(),"digraph cfg_xmlNameProcessor {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.nameForTextElement(String),Method,No Comment,public XmlFactoryBuilder nameForTextElement(String name) {\n    _nameForTextElement = name;\n    return _this();\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder nameForTextElement(java.lang.String),"digraph cfg_nameForTextElement {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.core.TSFBuilder _this()>()""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder) $stack2""];\n	""3"" [label=""name := @parameter0: java.lang.String""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.String _nameForTextElement> = name""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlInputFactory(XMLInputFactory),Method,* @since 2.13 (was misnamed as {@code inputFactory(in) formerly}),public XmlFactoryBuilder xmlInputFactory(XMLInputFactory xmlIn) {\n    _xmlInputFactory = xmlIn;\n    return _this();\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder xmlInputFactory(javax.xml.stream.XMLInputFactory),"digraph cfg_xmlInputFactory {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.core.TSFBuilder _this()>()""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder) $stack2""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLInputFactory _xmlInputFactory> = xmlIn""];\n	""6"" [label=""xmlIn := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlOutputFactory(XMLOutputFactory),Method,* @since 2.13 (was misnamed as {@code outputFactory(in) formerly}),public XmlFactoryBuilder xmlOutputFactory(XMLOutputFactory xmlOut) {\n    _xmlOutputFactory = xmlOut;\n    return _this();\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder xmlOutputFactory(javax.xml.stream.XMLOutputFactory),"digraph cfg_xmlOutputFactory {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.core.TSFBuilder _this()>()""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder) $stack2""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLOutputFactory _xmlOutputFactory> = xmlOut""];\n	""6"" [label=""xmlOut := @parameter0: javax.xml.stream.XMLOutputFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.inputFactory(XMLInputFactory),Method,* @deprecated Since 2.13 use {@link #xmlInputFactory()} instead,// since 2.13\n@Deprecated\npublic XmlFactoryBuilder inputFactory(XMLInputFactory xmlIn) {\n    return xmlInputFactory(xmlIn);\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder inputFactory(javax.xml.stream.XMLInputFactory),"digraph cfg_inputFactory {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder xmlInputFactory(javax.xml.stream.XMLInputFactory)>(xmlIn)""];\n	""2"" [label=""return $stack2""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""4"" [label=""xmlIn := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.outputFactory(XMLOutputFactory),Method,* @deprecated Since 2.13 use {@link #xmlOutputFactory()} instead,// since 2.13\n@Deprecated\npublic XmlFactoryBuilder outputFactory(XMLOutputFactory xmlOut) {\n    return xmlOutputFactory(xmlOut);\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder outputFactory(javax.xml.stream.XMLOutputFactory),"digraph cfg_outputFactory {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder xmlOutputFactory(javax.xml.stream.XMLOutputFactory)>(xmlOut)""];\n	""2"" [label=""return $stack2""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""4"" [label=""xmlOut := @parameter0: javax.xml.stream.XMLOutputFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.staxClassLoader(ClassLoader),Method,* Method that can be used to specific {@link ClassLoader} for creating\n     * {@link XMLInputFactory} and {@link XMLOutputFactory} instances if\n     * those are not explicitly defined by caller: passed to respective\n     * {@code newFactory()} methods.\n     *<br>\n     * NOTE: recommended approach is to explicitly pass {@link XMLInputFactory}\n     * and {@link XMLOutputFactory} methods instead of relying on JDK SPI\n     * mechanism.\n     *\n     * @since 2.13,public XmlFactoryBuilder staxClassLoader(ClassLoader cl) {\n    _classLoaderForStax = cl;\n    return _this();\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder staxClassLoader(java.lang.ClassLoader),"digraph cfg_staxClassLoader {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.core.TSFBuilder _this()>()""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder) $stack2""];\n	""3"" [label=""cl := @parameter0: java.lang.ClassLoader""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.ClassLoader _classLoaderForStax> = cl""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.xmlNameProcessor(XmlNameProcessor),Method,* @since 2.14,public XmlFactoryBuilder xmlNameProcessor(XmlNameProcessor nameProcessor) {\n    _nameProcessor = nameProcessor;\n    return _this();\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder xmlNameProcessor(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor),"digraph cfg_xmlNameProcessor {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.core.TSFBuilder _this()>()""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder) $stack2""];\n	""3"" [label=""nameProcessor := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = nameProcessor""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.build(),Method,No Comment,@Override\npublic XmlFactory build() {\n    return new XmlFactory(this);\n},com.fasterxml.jackson.dataformat.xml.XmlFactory build(),"digraph cfg_build {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder)>(this)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.<init>(),Constructor,No Comment,protected XmlFactoryBuilder() {\n    _formatParserFeatures = XmlFactory.DEFAULT_XML_PARSER_FEATURE_FLAGS;\n    _formatGeneratorFeatures = XmlFactory.DEFAULT_XML_GENERATOR_FEATURE_FLAGS;\n    _classLoaderForStax = null;\n    _nameProcessor = XmlNameProcessors.newPassthroughProcessor();\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.XmlFactory: int DEFAULT_XML_PARSER_FEATURE_FLAGS>""];\n	""2"" [label=""$stack2 = <com.fasterxml.jackson.dataformat.xml.XmlFactory: int DEFAULT_XML_GENERATOR_FEATURE_FLAGS>""];\n	""3"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newPassthroughProcessor()>()""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.core.TSFBuilder: void <init>()>()""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = $stack3""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int _formatGeneratorFeatures> = $stack2""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int _formatParserFeatures> = $stack1""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.ClassLoader _classLoaderForStax> = null""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder.<init>(XmlFactory),Constructor,No Comment,public XmlFactoryBuilder(XmlFactory base) {\n    super(base);\n    _formatParserFeatures = base._xmlParserFeatures;\n    _formatGeneratorFeatures = base._xmlGeneratorFeatures;\n    _xmlInputFactory = base._xmlInputFactory;\n    _xmlOutputFactory = base._xmlOutputFactory;\n    _nameForTextElement = base._cfgNameForTextElement;\n    _nameProcessor = base._nameProcessor;\n    _classLoaderForStax = null;\n},void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory),"digraph cfg_init {\n	""1"" [label=""$stack2 = base.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""2"" [label=""$stack3 = base.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""3"" [label=""$stack4 = base.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""4"" [label=""$stack5 = base.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""5"" [label=""$stack6 = base.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""6"" [label=""$stack7 = base.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""7"" [label=""base := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""8"" [label=""return""];\n	""9"" [label=""specialinvoke this.<com.fasterxml.jackson.core.TSFBuilder: void <init>(com.fasterxml.jackson.core.JsonFactory)>(base)""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = $stack7""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int _formatGeneratorFeatures> = $stack3""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int _formatParserFeatures> = $stack2""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.ClassLoader _classLoaderForStax> = null""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.String _nameForTextElement> = $stack6""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLInputFactory _xmlInputFactory> = $stack4""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLOutputFactory _xmlOutputFactory> = $stack5""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_next""];\n	""16"" -> ""4""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.XmlInfo.getNamespace(),Method,No Comment,public String getNamespace() {\n    return _namespace;\n},java.lang.String getNamespace(),"digraph cfg_getNamespace {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: java.lang.String _namespace>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlInfo""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.XmlInfo.isAttribute(),Method,No Comment,public boolean isAttribute() {\n    return _isAttribute;\n},boolean isAttribute(),"digraph cfg_isAttribute {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean _isAttribute>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlInfo""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.XmlInfo.isText(),Method,No Comment,public boolean isText() {\n    return _isText;\n},boolean isText(),"digraph cfg_isText {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean _isText>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlInfo""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.XmlInfo.isCData(),Method,No Comment,public boolean isCData() {\n    return _isCData;\n},boolean isCData(),"digraph cfg_isCData {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean _isCData>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlInfo""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.XmlInfo.<init>(Boolean,String,Boolean,Boolean)",Constructor,No Comment,"public XmlInfo(Boolean isAttribute, String ns, Boolean isText, Boolean isCData) {\n    _isAttribute = (isAttribute == null) ? false : isAttribute.booleanValue();\n    _namespace = (ns == null) ? """" : ns;\n    _isText = (isText == null) ? false : isText.booleanValue();\n    _isCData = (isCData == null) ? false : isCData.booleanValue();\n}","void <init>(java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Boolean)","digraph cfg_init {\n	""1"" [label=""$stack5 = 0""];\n	""2"" [label=""$stack5 = virtualinvoke isAttribute.<java.lang.Boolean: boolean booleanValue()>()""];\n	""3"" [label=""$stack6 = 0""];\n	""4"" [label=""$stack6 = virtualinvoke isText.<java.lang.Boolean: boolean booleanValue()>()""];\n	""5"" [label=""$stack7 = 0""];\n	""6"" [label=""$stack7 = virtualinvoke isCData.<java.lang.Boolean: boolean booleanValue()>()""];\n	""7"" [label=""$stack8 = \""\""""];\n	""8"" [label=""$stack8 = ns""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if isAttribute != null""];\n	""14"" [label=""if isCData != null""];\n	""15"" [label=""if isText != null""];\n	""16"" [label=""if ns != null""];\n	""17"" [label=""isAttribute := @parameter0: java.lang.Boolean""];\n	""18"" [label=""isCData := @parameter3: java.lang.Boolean""];\n	""19"" [label=""isText := @parameter2: java.lang.Boolean""];\n	""20"" [label=""ns := @parameter1: java.lang.String""];\n	""21"" [label=""return""];\n	""22"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlInfo""];\n	""24"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean _isAttribute> = $stack5""];\n	""25"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean _isCData> = $stack7""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean _isText> = $stack6""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: java.lang.String _namespace> = $stack8""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_goto""];\n	""11"" -> ""26""[label=""cfg_goto""];\n	""12"" -> ""25""[label=""cfg_goto""];\n	""13"" -> ""1""[label=""cfg_false""];\n	""13"" -> ""2""[label=""cfg_true""];\n	""14"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""15"" -> ""3""[label=""cfg_false""];\n	""15"" -> ""4""[label=""cfg_true""];\n	""16"" -> ""7""[label=""cfg_false""];\n	""16"" -> ""8""[label=""cfg_true""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""22""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""13""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""16""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_next""];\n	""27"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""26""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_goto""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwAsParseException(XMLStreamException,JsonParser)",Method,* @since 2.9,"public static <T> T throwAsParseException(XMLStreamException e, JsonParser p) throws IOException {\n    Throwable t = _unwrap(e);\n    throw new JsonParseException(p, _message(t, e), t);\n}","java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)","digraph cfg_throwAsParseException {\n	""1"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.String _message(java.lang.Throwable,java.lang.Throwable)>(t, e)""];\n	""2"" [label=""$stack4 = new com.fasterxml.jackson.core.JsonParseException""];\n	""3"" [label=""e := @parameter0: javax.xml.stream.XMLStreamException""];\n	""4"" [label=""p := @parameter1: com.fasterxml.jackson.core.JsonParser""];\n	""5"" [label=""specialinvoke $stack4.<com.fasterxml.jackson.core.JsonParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)>(p, $stack3, t)""];\n	""6"" [label=""t = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Throwable _unwrap(java.lang.Throwable)>(e)""];\n	""7"" [label=""throw $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
"com.fasterxml.jackson.dataformat.xml.util.StaxUtil.throwAsGenerationException(XMLStreamException,JsonGenerator)",Method,* @since 2.9,"public static <T> T throwAsGenerationException(XMLStreamException e, JsonGenerator g) throws IOException {\n    Throwable t = _unwrap(e);\n    throw new JsonGenerationException(_message(t, e), t, g);\n}","java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)","digraph cfg_throwAsGenerationException {\n	""1"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.String _message(java.lang.Throwable,java.lang.Throwable)>(t, e)""];\n	""2"" [label=""$stack4 = new com.fasterxml.jackson.core.JsonGenerationException""];\n	""3"" [label=""e := @parameter0: javax.xml.stream.XMLStreamException""];\n	""4"" [label=""g := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""5"" [label=""specialinvoke $stack4.<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator)>($stack3, t, g)""];\n	""6"" [label=""t = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Throwable _unwrap(java.lang.Throwable)>(e)""];\n	""7"" [label=""throw $stack4""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.StaxUtil._unwrap(Throwable),Method,No Comment,private static Throwable _unwrap(Throwable t) {\n    while (t.getCause() != null) {\n        t = t.getCause();\n    }\n    if (t instanceof Error)\n        throw (Error) t;\n    if (t instanceof RuntimeException)\n        throw (RuntimeException) t;\n    return t;\n},java.lang.Throwable _unwrap(java.lang.Throwable),"digraph cfg__unwrap {\n	""1"" [label=""$stack1 = virtualinvoke t.<java.lang.Throwable: java.lang.Throwable getCause()>()""];\n	""2"" [label=""$stack2 = t instanceof java.lang.Error""];\n	""3"" [label=""$stack3 = t instanceof java.lang.RuntimeException""];\n	""4"" [label=""$stack4 = (java.lang.RuntimeException) t""];\n	""5"" [label=""$stack5 = (java.lang.Error) t""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack1 == null""];\n	""8"" [label=""if $stack2 == 0""];\n	""9"" [label=""if $stack3 == 0""];\n	""10"" [label=""return t""];\n	""11"" [label=""t := @parameter0: java.lang.Throwable""];\n	""12"" [label=""t = virtualinvoke t.<java.lang.Throwable: java.lang.Throwable getCause()>()""];\n	""13"" [label=""throw $stack4""];\n	""14"" [label=""throw $stack5""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n","private , static "
"com.fasterxml.jackson.dataformat.xml.util.StaxUtil._message(Throwable,Throwable)",Method,No Comment,"private static String _message(Throwable t1, Throwable t2) {\n    String msg = t1.getMessage();\n    if (msg == null) {\n        msg = t2.getMessage();\n    }\n    return msg;\n}","java.lang.String _message(java.lang.Throwable,java.lang.Throwable)","digraph cfg__message {\n	""1"" [label=""if msg != null""];\n	""2"" [label=""msg = virtualinvoke t1.<java.lang.Throwable: java.lang.String getMessage()>()""];\n	""3"" [label=""msg = virtualinvoke t2.<java.lang.Throwable: java.lang.String getMessage()>()""];\n	""4"" [label=""return msg""];\n	""5"" [label=""t1 := @parameter0: java.lang.Throwable""];\n	""6"" [label=""t2 := @parameter1: java.lang.Throwable""];\n	""1"" -> ""3""[label=""cfg_false""];\n	""1"" -> ""4""[label=""cfg_true""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n","private , static "
com.fasterxml.jackson.dataformat.xml.util.StaxUtil.sanitizeXmlTypeName(String),Method,"* Since XML names can not contain all characters JSON names can, we may\n     * need to replace characters. Let's start with trivial replacement of\n     * ASCII characters that can not be included.","public static String sanitizeXmlTypeName(String name) {\n    // [dataformat-xml#451]: with DEDUCTION, at least, won't have property name\n    //   (but probably sensible to check for it anyway)\n    if (name == null) {\n        return null;\n    }\n    StringBuilder sb;\n    int changes = 0;\n    // First things first: remove array types' trailing[]...\n    if (name.endsWith(""[]"")) {\n        do {\n            name = name.substring(0, name.length() - 2);\n            ++changes;\n        } while (name.endsWith(""[]""));\n        sb = new StringBuilder(name);\n        // do trivial pluralization attempt\n        if (name.endsWith(""s"")) {\n            sb.append(""es"");\n        } else {\n            sb.append('s');\n        }\n    } else {\n        sb = new StringBuilder(name);\n    }\n    for (int i = 0, len = name.length(); i < len; ++i) {\n        char c = name.charAt(i);\n        if (c > 127)\n            continue;\n        if (c >= 'a' && c <= 'z')\n            continue;\n        if (c >= 'A' && c <= 'Z')\n            continue;\n        if (c >= '0' && c <= '9')\n            continue;\n        if (c == '_' || c == '.' || c == '-')\n            continue;\n        // Ok, need to replace\n        ++changes;\n        if (c == '$') {\n            sb.setCharAt(i, '.');\n        } else {\n            sb.setCharAt(i, '_');\n        }\n    }\n    if (changes == 0) {\n        return name;\n    }\n    return sb.toString();\n}",java.lang.String sanitizeXmlTypeName(java.lang.String),"digraph cfg_sanitizeXmlTypeName {\n	""1"" [label=""$stack10 = $stack9 - 2""];\n	""2"" [label=""$stack11 = virtualinvoke name.<java.lang.String: boolean endsWith(java.lang.String)>(\""[]\"")""];\n	""3"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack13 = virtualinvoke name.<java.lang.String: boolean endsWith(java.lang.String)>(\""s\"")""];\n	""5"" [label=""$stack6 = virtualinvoke name.<java.lang.String: boolean endsWith(java.lang.String)>(\""[]\"")""];\n	""6"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack8 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""8"" [label=""$stack9 = virtualinvoke name.<java.lang.String: int length()>()""];\n	""9"" [label=""c = virtualinvoke name.<java.lang.String: char charAt(int)>(i)""];\n	""10"" [label=""changes = 0""];\n	""11"" [label=""changes = changes + 1""];\n	""12"" [label=""changes = changes + 1""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""i = 0""];\n	""23"" [label=""i = i + 1""];\n	""24"" [label=""if $stack11 != 0""];\n	""25"" [label=""if $stack13 == 0""];\n	""26"" [label=""if $stack6 == 0""];\n	""27"" [label=""if c != 36""];\n	""28"" [label=""if c != 45""];\n	""29"" [label=""if c < 48""];\n	""30"" [label=""if c < 65""];\n	""31"" [label=""if c < 97""];\n	""32"" [label=""if c <= 127""];\n	""33"" [label=""if c == 46""];\n	""34"" [label=""if c == 95""];\n	""35"" [label=""if c > 122""];\n	""36"" [label=""if c > 57""];\n	""37"" [label=""if c > 90""];\n	""38"" [label=""if changes != 0""];\n	""39"" [label=""if i >= len""];\n	""40"" [label=""if name != null""];\n	""41"" [label=""len = virtualinvoke name.<java.lang.String: int length()>()""];\n	""42"" [label=""name := @parameter0: java.lang.String""];\n	""43"" [label=""name = virtualinvoke name.<java.lang.String: java.lang.String substring(int,int)>(0, $stack10)""];\n	""44"" [label=""return $stack8""];\n	""45"" [label=""return name""];\n	""46"" [label=""return null""];\n	""47"" [label=""sb = $stack12""];\n	""48"" [label=""sb = $stack7""];\n	""49"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>(java.lang.String)>(name)""];\n	""50"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>(java.lang.String)>(name)""];\n	""51"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(115)""];\n	""52"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""es\"")""];\n	""53"" [label=""virtualinvoke sb.<java.lang.StringBuilder: void setCharAt(int,char)>(i, 46)""];\n	""54"" [label=""virtualinvoke sb.<java.lang.StringBuilder: void setCharAt(int,char)>(i, 95)""];\n	""1"" -> ""43""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""27""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_goto""];\n	""14"" -> ""22""[label=""cfg_goto""];\n	""15"" -> ""23""[label=""cfg_goto""];\n	""16"" -> ""23""[label=""cfg_goto""];\n	""17"" -> ""23""[label=""cfg_goto""];\n	""18"" -> ""23""[label=""cfg_goto""];\n	""19"" -> ""23""[label=""cfg_goto""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_goto""];\n	""21"" -> ""39""[label=""cfg_goto""];\n	""22"" -> ""41""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""3""[label=""cfg_false""];\n	""24"" -> ""8""[label=""cfg_true""];\n	""25"" -> ""51""[label=""cfg_true""];\n	""25"" -> ""52""[label=""cfg_false""];\n	""26"" -> ""6""[label=""cfg_true""];\n	""26"" -> ""8""[label=""cfg_false""];\n	""27"" -> ""53""[label=""cfg_false""];\n	""27"" -> ""54""[label=""cfg_true""];\n	""28"" -> ""12""[label=""cfg_true""];\n	""28"" -> ""19""[label=""cfg_false""];\n	""29"" -> ""34""[label=""cfg_true""];\n	""29"" -> ""36""[label=""cfg_false""];\n	""3"" -> ""49""[label=""cfg_next""];\n	""30"" -> ""29""[label=""cfg_true""];\n	""30"" -> ""37""[label=""cfg_false""];\n	""31"" -> ""30""[label=""cfg_true""];\n	""31"" -> ""35""[label=""cfg_false""];\n	""32"" -> ""15""[label=""cfg_false""];\n	""32"" -> ""31""[label=""cfg_true""];\n	""33"" -> ""23""[label=""cfg_true""];\n	""33"" -> ""28""[label=""cfg_false""];\n	""34"" -> ""23""[label=""cfg_true""];\n	""34"" -> ""33""[label=""cfg_false""];\n	""35"" -> ""16""[label=""cfg_false""];\n	""35"" -> ""30""[label=""cfg_true""];\n	""36"" -> ""18""[label=""cfg_false""];\n	""36"" -> ""34""[label=""cfg_true""];\n	""37"" -> ""17""[label=""cfg_false""];\n	""37"" -> ""29""[label=""cfg_true""];\n	""38"" -> ""45""[label=""cfg_false""];\n	""38"" -> ""7""[label=""cfg_true""];\n	""39"" -> ""38""[label=""cfg_true""];\n	""39"" -> ""9""[label=""cfg_false""];\n	""4"" -> ""25""[label=""cfg_next""];\n	""40"" -> ""10""[label=""cfg_true""];\n	""40"" -> ""46""[label=""cfg_false""];\n	""41"" -> ""39""[label=""cfg_next""];\n	""42"" -> ""40""[label=""cfg_next""];\n	""43"" -> ""11""[label=""cfg_next""];\n	""47"" -> ""4""[label=""cfg_next""];\n	""48"" -> ""22""[label=""cfg_next""];\n	""49"" -> ""47""[label=""cfg_next""];\n	""5"" -> ""26""[label=""cfg_next""];\n	""50"" -> ""48""[label=""cfg_next""];\n	""51"" -> ""14""[label=""cfg_next""];\n	""52"" -> ""13""[label=""cfg_next""];\n	""53"" -> ""20""[label=""cfg_next""];\n	""54"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""50""[label=""cfg_next""];\n	""7"" -> ""44""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.StaxUtil.toStax2Base64Variant(Base64Variant),Method,"* Helper method used to ""convert"" Jackson's {@link Base64Variant} into corresponding\n     * Stax2 equivalent, to try to allow Jackson-style configuration for XML output as well.\n     *\n     * @param j64b Jackson base64 variant to find match for\n     *\n     * @return Stax2 Base64 variant that most closely resembles Jackson canonical Base64 variant\n     *     passed in as argument\n     *\n     * @since 2.12",public static org.codehaus.stax2.typed.Base64Variant toStax2Base64Variant(Base64Variant j64b) {\n    return Base64Mapper.instance.map(j64b);\n},org.codehaus.stax2.typed.Base64Variant toStax2Base64Variant(com.fasterxml.jackson.core.Base64Variant),"digraph cfg_toStax2Base64Variant {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper instance>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: org.codehaus.stax2.typed.Base64Variant map(com.fasterxml.jackson.core.Base64Variant)>(j64b)""];\n	""3"" [label=""j64b := @parameter0: com.fasterxml.jackson.core.Base64Variant""];\n	""4"" [label=""return $stack2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.StaxUtil.defaultInputFactory(ClassLoader),Method,* @since 2.14,"public static XMLInputFactory defaultInputFactory(ClassLoader cl) {\n    // 05-Jul-2021, tatu: as per [dataformat-xml#483], specify ClassLoader\n    try {\n        return XMLInputFactory.newFactory(XMLInputFactory.class.getName(), cl);\n    } catch (FactoryConfigurationError | NoSuchMethodError e) {\n        // 24-Oct-2022, tatu: as per [dataformat-xml#550] need extra care\n        return XMLInputFactory.newInstance();\n    }\n}",javax.xml.stream.XMLInputFactory defaultInputFactory(java.lang.ClassLoader),"digraph cfg_defaultInputFactory {\n	""1"" [label=""$stack2 = class \""Ljavax/xml/stream/XMLInputFactory;\""""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>()""];\n	""3"" [label=""$stack4 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newFactory(java.lang.String,java.lang.ClassLoader)>($stack3, cl)""];\n	""4"" [label=""$stack5 := @caughtexception""];\n	""5"" [label=""$stack6 = staticinvoke <javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLInputFactory newInstance()>()""];\n	""6"" [label=""cl := @parameter0: java.lang.ClassLoader""];\n	""7"" [label=""e = $stack5""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""return $stack6""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""1"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.StaxUtil.defaultOutputFactory(ClassLoader),Method,* @since 2.14,"public static XMLOutputFactory defaultOutputFactory(ClassLoader cl) {\n    // 05-Jul-2021, tatu: as per [dataformat-xml#483], specify ClassLoader\n    try {\n        return XMLOutputFactory.newFactory(XMLOutputFactory.class.getName(), cl);\n    } catch (FactoryConfigurationError | NoSuchMethodError e) {\n        // 24-Oct-2022, tatu: as per [dataformat-xml#550] need extra care\n        return XMLOutputFactory.newInstance();\n    }\n}",javax.xml.stream.XMLOutputFactory defaultOutputFactory(java.lang.ClassLoader),"digraph cfg_defaultOutputFactory {\n	""1"" [label=""$stack2 = class \""Ljavax/xml/stream/XMLOutputFactory;\""""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>()""];\n	""3"" [label=""$stack4 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newFactory(java.lang.String,java.lang.ClassLoader)>($stack3, cl)""];\n	""4"" [label=""$stack5 := @caughtexception""];\n	""5"" [label=""$stack6 = staticinvoke <javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLOutputFactory newInstance()>()""];\n	""6"" [label=""cl := @parameter0: java.lang.ClassLoader""];\n	""7"" [label=""e = $stack5""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""return $stack6""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""1"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper.map(Base64Variant),Method,No Comment,"public org.codehaus.stax2.typed.Base64Variant map(Base64Variant j64b) {\n    org.codehaus.stax2.typed.Base64Variant result = j2stax2.get(j64b.getName());\n    if (result == null) {\n        // 13-May-2020, tatu: in unexpected case of no match, default to what Stax2\n        //    considers default, not Jackson: this for backwards compatibility with\n        //    Jackson 2.11 and earlier\n        result = org.codehaus.stax2.typed.Base64Variants.getDefaultVariant();\n    }\n    return result;\n}",org.codehaus.stax2.typed.Base64Variant map(com.fasterxml.jackson.core.Base64Variant),"digraph cfg_map {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: java.util.Map j2stax2>""];\n	""2"" [label=""$stack4 = virtualinvoke j64b.<com.fasterxml.jackson.core.Base64Variant: java.lang.String getName()>()""];\n	""3"" [label=""$stack5 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack4)""];\n	""4"" [label=""if result != null""];\n	""5"" [label=""j64b := @parameter0: com.fasterxml.jackson.core.Base64Variant""];\n	""6"" [label=""result = (org.codehaus.stax2.typed.Base64Variant) $stack5""];\n	""7"" [label=""result = staticinvoke <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant getDefaultVariant()>()""];\n	""8"" [label=""return result""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_false""];\n	""4"" -> ""8""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper.<init>(),Constructor,No Comment,private Base64Mapper() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""$stack1 = new java.util.HashMap""];\n	""2"" [label=""$stack10 = <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant MODIFIED_FOR_URL>""];\n	""3"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: java.util.Map j2stax2>""];\n	""4"" [label=""$stack12 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MODIFIED_FOR_URL>""];\n	""5"" [label=""$stack13 = virtualinvoke $stack10.<com.fasterxml.jackson.core.Base64Variant: java.lang.String getName()>()""];\n	""6"" [label=""$stack14 = <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant PEM>""];\n	""7"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: java.util.Map j2stax2>""];\n	""8"" [label=""$stack16 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant PEM>""];\n	""9"" [label=""$stack17 = virtualinvoke $stack14.<com.fasterxml.jackson.core.Base64Variant: java.lang.String getName()>()""];\n	""10"" [label=""$stack2 = <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant MIME>""];\n	""11"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: java.util.Map j2stax2>""];\n	""12"" [label=""$stack4 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MIME>""];\n	""13"" [label=""$stack5 = virtualinvoke $stack2.<com.fasterxml.jackson.core.Base64Variant: java.lang.String getName()>()""];\n	""14"" [label=""$stack6 = <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant MIME_NO_LINEFEEDS>""];\n	""15"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: java.util.Map j2stax2>""];\n	""16"" [label=""$stack8 = <org.codehaus.stax2.typed.Base64Variants: org.codehaus.stax2.typed.Base64Variant MIME_NO_LINEFEEDS>""];\n	""17"" [label=""$stack9 = virtualinvoke $stack6.<com.fasterxml.jackson.core.Base64Variant: java.lang.String getName()>()""];\n	""18"" [label=""interfaceinvoke $stack11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack13, $stack12)""];\n	""19"" [label=""interfaceinvoke $stack15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack17, $stack16)""];\n	""20"" [label=""interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack5, $stack4)""];\n	""21"" [label=""interfaceinvoke $stack7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack9, $stack8)""];\n	""22"" [label=""return""];\n	""23"" [label=""specialinvoke $stack1.<java.util.HashMap: void <init>()>()""];\n	""24"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""25"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.StaxUtil$Base64Mapper: java.util.Map j2stax2> = $stack1""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""7""[label=""cfg_next""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""3""[label=""cfg_next""];\n	""23"" -> ""26""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""25"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findNamespaceAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",Method,No Comment,"public static String findNamespaceAnnotation(MapperConfig<?> config, AnnotationIntrospector ai, AnnotatedMember prop) {\n    for (AnnotationIntrospector intr : ai.allIntrospectors()) {\n        if (intr instanceof AnnotationIntrospector.XmlExtensions) {\n            String ns = ((AnnotationIntrospector.XmlExtensions) intr).findNamespace(config, prop);\n            if (ns != null) {\n                return ns;\n            }\n        }\n    }\n    return null;\n}","java.lang.String findNamespaceAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)","digraph cfg_findNamespaceAnnotation {\n	""1"" [label=""$stack10 = (com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions) intr""];\n	""2"" [label=""$stack6 = virtualinvoke ai.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.Collection allIntrospectors()>()""];\n	""3"" [label=""$stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""$stack9 = intr instanceof com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions""];\n	""6"" [label=""ai := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""7"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack7 == 0""];\n	""10"" [label=""if $stack9 == 0""];\n	""11"" [label=""if ns == null""];\n	""12"" [label=""intr = (com.fasterxml.jackson.databind.AnnotationIntrospector) $stack8""];\n	""13"" [label=""l3 = interfaceinvoke $stack6.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""14"" [label=""ns = interfaceinvoke $stack10.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, prop)""];\n	""15"" [label=""prop := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember""];\n	""16"" [label=""return ns""];\n	""17"" [label=""return null""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""8""[label=""cfg_true""];\n	""11"" -> ""16""[label=""cfg_false""];\n	""11"" -> ""8""[label=""cfg_true""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_goto""];\n	""9"" -> ""17""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n","public , static "
"com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findIsAttributeAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",Method,No Comment,"public static Boolean findIsAttributeAnnotation(MapperConfig<?> config, AnnotationIntrospector ai, AnnotatedMember prop) {\n    for (AnnotationIntrospector intr : ai.allIntrospectors()) {\n        if (intr instanceof AnnotationIntrospector.XmlExtensions) {\n            Boolean b = ((AnnotationIntrospector.XmlExtensions) intr).isOutputAsAttribute(config, prop);\n            if (b != null) {\n                return b;\n            }\n        }\n    }\n    return null;\n}","java.lang.Boolean findIsAttributeAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)","digraph cfg_findIsAttributeAnnotation {\n	""1"" [label=""$stack10 = (com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions) intr""];\n	""2"" [label=""$stack6 = virtualinvoke ai.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.Collection allIntrospectors()>()""];\n	""3"" [label=""$stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""$stack9 = intr instanceof com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions""];\n	""6"" [label=""ai := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""7"" [label=""b = interfaceinvoke $stack10.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, prop)""];\n	""8"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack7 == 0""];\n	""11"" [label=""if $stack9 == 0""];\n	""12"" [label=""if b == null""];\n	""13"" [label=""intr = (com.fasterxml.jackson.databind.AnnotationIntrospector) $stack8""];\n	""14"" [label=""l3 = interfaceinvoke $stack6.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""15"" [label=""prop := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember""];\n	""16"" [label=""return b""];\n	""17"" [label=""return null""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_true""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""9""[label=""cfg_true""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""12"" -> ""9""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_goto""];\n}\n","public , static "
"com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findIsTextAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",Method,No Comment,"public static Boolean findIsTextAnnotation(MapperConfig<?> config, AnnotationIntrospector ai, AnnotatedMember prop) {\n    for (AnnotationIntrospector intr : ai.allIntrospectors()) {\n        if (intr instanceof AnnotationIntrospector.XmlExtensions) {\n            Boolean b = ((AnnotationIntrospector.XmlExtensions) intr).isOutputAsText(config, prop);\n            if (b != null) {\n                return b;\n            }\n        }\n    }\n    return null;\n}","java.lang.Boolean findIsTextAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)","digraph cfg_findIsTextAnnotation {\n	""1"" [label=""$stack10 = (com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions) intr""];\n	""2"" [label=""$stack6 = virtualinvoke ai.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.Collection allIntrospectors()>()""];\n	""3"" [label=""$stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""$stack9 = intr instanceof com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions""];\n	""6"" [label=""ai := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""7"" [label=""b = interfaceinvoke $stack10.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, prop)""];\n	""8"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack7 == 0""];\n	""11"" [label=""if $stack9 == 0""];\n	""12"" [label=""if b == null""];\n	""13"" [label=""intr = (com.fasterxml.jackson.databind.AnnotationIntrospector) $stack8""];\n	""14"" [label=""l3 = interfaceinvoke $stack6.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""15"" [label=""prop := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember""];\n	""16"" [label=""return b""];\n	""17"" [label=""return null""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_true""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""9""[label=""cfg_true""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""12"" -> ""9""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_goto""];\n}\n","public , static "
"com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil.findIsCDataAnnotation(MapperConfig,AnnotationIntrospector,AnnotatedMember)",Method,No Comment,"public static Boolean findIsCDataAnnotation(MapperConfig<?> config, AnnotationIntrospector ai, AnnotatedMember prop) {\n    for (AnnotationIntrospector intr : ai.allIntrospectors()) {\n        if (intr instanceof AnnotationIntrospector.XmlExtensions) {\n            Boolean b = ((AnnotationIntrospector.XmlExtensions) intr).isOutputAsCData(config, prop);\n            if (b != null) {\n                return b;\n            }\n        }\n    }\n    return null;\n}","java.lang.Boolean findIsCDataAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)","digraph cfg_findIsCDataAnnotation {\n	""1"" [label=""$stack10 = (com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions) intr""];\n	""2"" [label=""$stack6 = virtualinvoke ai.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.Collection allIntrospectors()>()""];\n	""3"" [label=""$stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>()""];\n	""4"" [label=""$stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""$stack9 = intr instanceof com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions""];\n	""6"" [label=""ai := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""7"" [label=""b = interfaceinvoke $stack10.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, prop)""];\n	""8"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack7 == 0""];\n	""11"" [label=""if $stack9 == 0""];\n	""12"" [label=""if b == null""];\n	""13"" [label=""intr = (com.fasterxml.jackson.databind.AnnotationIntrospector) $stack8""];\n	""14"" [label=""l3 = interfaceinvoke $stack6.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""15"" [label=""prop := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember""];\n	""16"" [label=""return b""];\n	""17"" [label=""return null""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_true""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""9""[label=""cfg_true""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""12"" -> ""9""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_goto""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.construct(Set),Method,No Comment,public static CaseInsensitiveNameSet construct(Set<String> names0) {\n    Set<String> namesToMatch = new HashSet<String>(names0);\n    for (String name : names0) {\n        namesToMatch.add(name.toLowerCase());\n    }\n    return new CaseInsensitiveNameSet(namesToMatch);\n},com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet construct(java.util.Set),"digraph cfg_construct {\n	""1"" [label=""$stack4 = new java.util.HashSet""];\n	""2"" [label=""$stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>()""];\n	""3"" [label=""$stack6 = new com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet""];\n	""4"" [label=""$stack7 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""$stack8 = virtualinvoke name.<java.lang.String: java.lang.String toLowerCase()>()""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""interfaceinvoke namesToMatch.<java.util.Set: boolean add(java.lang.Object)>($stack8)""];\n	""9"" [label=""l2 = interfaceinvoke names0.<java.util.Set: java.util.Iterator iterator()>()""];\n	""10"" [label=""name = (java.lang.String) $stack7""];\n	""11"" [label=""names0 := @parameter0: java.util.Set""];\n	""12"" [label=""namesToMatch = $stack4""];\n	""13"" [label=""return $stack6""];\n	""14"" [label=""specialinvoke $stack4.<java.util.HashSet: void <init>(java.util.Collection)>(names0)""];\n	""15"" [label=""specialinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet: void <init>(java.util.Set)>(namesToMatch)""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.contains(Object),Method,No Comment,@Override\npublic boolean contains(Object key0) {\n    final String key = (String) key0;\n    if (_namesToMatch.contains(key)) {\n        return true;\n    }\n    final String lc = key.toLowerCase();\n    return (lc != key) && _namesToMatch.contains(lc);\n},boolean contains(java.lang.Object),"digraph cfg_contains {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet: java.util.Set _namesToMatch>""];\n	""2"" [label=""$stack5 = interfaceinvoke $stack4.<java.util.Set: boolean contains(java.lang.Object)>(key)""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet: java.util.Set _namesToMatch>""];\n	""4"" [label=""$stack7 = interfaceinvoke $stack6.<java.util.Set: boolean contains(java.lang.Object)>(lc)""];\n	""5"" [label=""$stack8 = 0""];\n	""6"" [label=""$stack8 = 1""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""if $stack7 == 0""];\n	""10"" [label=""if lc == key""];\n	""11"" [label=""key = (java.lang.String) key0""];\n	""12"" [label=""key0 := @parameter0: java.lang.Object""];\n	""13"" [label=""lc = virtualinvoke key.<java.lang.String: java.lang.String toLowerCase()>()""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""return 1""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""10"" -> ""5""[label=""cfg_true""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""16"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_goto""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""15""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.iterator(),Method,No Comment,@Override\npublic Iterator<String> iterator() {\n    return _namesToMatch.iterator();\n},java.util.Iterator iterator(),"digraph cfg_iterator {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet: java.util.Set _namesToMatch>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<java.util.Set: java.util.Iterator iterator()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.size(),Method,No Comment,@Override\npublic int size() {\n    return _namesToMatch.size();\n},int size(),"digraph cfg_size {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet: java.util.Set _namesToMatch>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<java.util.Set: int size()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet.<init>(Set),Constructor,No Comment,private CaseInsensitiveNameSet(Set<String> namesToMatch) {\n    _namesToMatch = namesToMatch;\n},void <init>(java.util.Set),"digraph cfg_init {\n	""1"" [label=""namesToMatch := @parameter0: java.util.Set""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.util.AbstractSet: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet: java.util.Set _namesToMatch> = namesToMatch""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.indentArraysWith(Indenter),Method,No Comment,public void indentArraysWith(Indenter i) {\n    _arrayIndenter = (i == null) ? new NopIndenter() : i;\n},void indentArraysWith(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter),"digraph cfg_indentArraysWith {\n	""1"" [label=""$stack2 = i""];\n	""2"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter""];\n	""3"" [label=""goto""];\n	""4"" [label=""i := @parameter0: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter""];\n	""5"" [label=""if i != null""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter: void <init>()>()""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _arrayIndenter> = $stack2""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_goto""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.indentObjectsWith(Indenter),Method,No Comment,public void indentObjectsWith(Indenter i) {\n    _objectIndenter = (i == null) ? new NopIndenter() : i;\n},void indentObjectsWith(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter),"digraph cfg_indentObjectsWith {\n	""1"" [label=""$stack2 = i""];\n	""2"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter""];\n	""3"" [label=""goto""];\n	""4"" [label=""i := @parameter0: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter""];\n	""5"" [label=""if i != null""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter: void <init>()>()""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter> = $stack2""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_goto""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.withCustomNewLine(String),Method,* Sets custom new-line.\n     * @since 2.15,public DefaultXmlPrettyPrinter withCustomNewLine(String newLine) {\n    _newLine = newLine != null ? newLine : SYSTEM_DEFAULT_NEW_LINE;\n    return this;\n},com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter withCustomNewLine(java.lang.String),"digraph cfg_withCustomNewLine {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String SYSTEM_DEFAULT_NEW_LINE>""];\n	""2"" [label=""$stack2 = newLine""];\n	""3"" [label=""goto""];\n	""4"" [label=""if newLine == null""];\n	""5"" [label=""newLine := @parameter0: java.lang.String""];\n	""6"" [label=""return this""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine> = $stack2""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_true""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.createInstance(),Method,No Comment,@Override\npublic DefaultXmlPrettyPrinter createInstance() {\n    return new DefaultXmlPrettyPrinter(this);\n},com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter createInstance(),"digraph cfg_createInstance {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: void <init>(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter)>(this)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeRootValueSeparator(JsonGenerator),Method,No Comment,"@Override\npublic void writeRootValueSeparator(JsonGenerator gen) throws IOException {\n    // Not sure if this should ever be applicable; but if multiple roots were allowed, we'd use linefeed\n    gen.writeRaw('\n');\n}",void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_writeRootValueSeparator {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""4"" [label=""virtualinvoke gen.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(10)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.beforeArrayValues(JsonGenerator),Method,No Comment,@Override\npublic void beforeArrayValues(JsonGenerator gen) throws IOException {\n    // never called for ToXmlGenerator\n},void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_beforeArrayValues {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartArray(JsonGenerator),Method,No Comment,@Override\npublic void writeStartArray(JsonGenerator gen) throws IOException {\n    // anything to do here?\n},void writeStartArray(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_writeStartArray {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeArrayValueSeparator(JsonGenerator),Method,No Comment,@Override\npublic void writeArrayValueSeparator(JsonGenerator gen) throws IOException {\n    // never called for ToXmlGenerator\n},void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_writeArrayValueSeparator {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndArray(JsonGenerator,int)",Method,No Comment,"@Override\npublic void writeEndArray(JsonGenerator gen, int nrOfValues) throws IOException {\n    // anything to do here?\n}","void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)","digraph cfg_writeEndArray {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""nrOfValues := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.beforeObjectEntries(JsonGenerator),Method,No Comment,"@Override\npublic void beforeObjectEntries(JsonGenerator gen) throws IOException, JsonGenerationException {\n    // never called for ToXmlGenerator\n}",void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_beforeObjectEntries {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartObject(JsonGenerator),Method,No Comment,"@Override\npublic void writeStartObject(JsonGenerator gen) throws IOException {\n    if (!_objectIndenter.isInline()) {\n        if (_nesting > 0) {\n            _objectIndenter.writeIndentation(gen, _nesting);\n        }\n        ++_nesting;\n    }\n    _justHadStartElement = true;\n    ((ToXmlGenerator) gen)._handleStartObject();\n}",void writeStartObject(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_writeStartObject {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack3 = interfaceinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack4 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen""];\n	""4"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""5"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""6"" [label=""$stack7 = $stack6 + 1""];\n	""7"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""8"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""9"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""10"" [label=""if $stack3 != 0""];\n	""11"" [label=""if $stack5 <= 0""];\n	""12"" [label=""interfaceinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(gen, $stack8)""];\n	""13"" [label=""return""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 1""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting> = $stack7""];\n	""17"" [label=""virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _handleStartObject()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_true""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""11"" -> ""5""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeObjectEntrySeparator(JsonGenerator),Method,No Comment,@Override\npublic void writeObjectEntrySeparator(JsonGenerator gen) throws IOException {\n    // never called for ToXmlGenerator\n},void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_writeObjectEntrySeparator {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeObjectFieldValueSeparator(JsonGenerator),Method,No Comment,@Override\npublic void writeObjectFieldValueSeparator(JsonGenerator gen) throws IOException {\n    // never called for ToXmlGenerator\n},void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg_writeObjectFieldValueSeparator {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndObject(JsonGenerator,int)",Method,No Comment,"@Override\npublic void writeEndObject(JsonGenerator gen, int nrOfEntries) throws IOException {\n    if (!_objectIndenter.isInline()) {\n        --_nesting;\n    }\n    // for empty elements, no need for linefeeds etc:\n    if (_justHadStartElement) {\n        _justHadStartElement = false;\n    } else {\n        _objectIndenter.writeIndentation(gen, _nesting);\n    }\n    ((ToXmlGenerator) gen)._handleEndObject();\n}","void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)","digraph cfg_writeEndObject {\n	""1"" [label=""$stack10 = $stack9 - 1""];\n	""2"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""4"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement>""];\n	""5"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""6"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""7"" [label=""$stack8 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen""];\n	""8"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""9"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack4 != 0""];\n	""12"" [label=""if $stack5 == 0""];\n	""13"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)>(gen, $stack6)""];\n	""14"" [label=""nrOfEntries := @parameter1: int""];\n	""15"" [label=""return""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting> = $stack10""];\n	""19"" [label=""virtualinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _handleEndObject()>()""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_goto""];\n	""11"" -> ""4""[label=""cfg_true""];\n	""11"" -> ""8""[label=""cfg_false""];\n	""12"" -> ""17""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeStartElement(XMLStreamWriter2,String,String)",Method,No Comment,"@Override\npublic void writeStartElement(XMLStreamWriter2 sw, String nsURI, String localName) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        if (_justHadStartElement) {\n            _justHadStartElement = false;\n        }\n        _objectIndenter.writeIndentation(sw, _nesting);\n        ++_nesting;\n    }\n    sw.writeStartElement(nsURI, localName);\n    _justHadStartElement = true;\n}","void writeStartElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)","digraph cfg_writeStartElement {\n	""1"" [label=""$stack10 = $stack9 + 1""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""3"" [label=""$stack5 = interfaceinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement>""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""6"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""7"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""8"" [label=""if $stack5 != 0""];\n	""9"" [label=""if $stack6 == 0""];\n	""10"" [label=""interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack7)""];\n	""11"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""12"" [label=""localName := @parameter2: java.lang.String""];\n	""13"" [label=""nsURI := @parameter1: java.lang.String""];\n	""14"" [label=""return""];\n	""15"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 1""];\n	""19"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting> = $stack10""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""6""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_next""];\n	""19"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""17""[label=""cfg_false""];\n	""9"" -> ""6""[label=""cfg_true""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeEndElement(XMLStreamWriter2,int)",Method,No Comment,"@Override\npublic void writeEndElement(XMLStreamWriter2 sw, int nrOfEntries) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        --_nesting;\n    }\n    // for empty elements, no need for linefeeds etc:\n    if (_justHadStartElement) {\n        _justHadStartElement = false;\n    } else {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeEndElement();\n}","void writeEndElement(org.codehaus.stax2.XMLStreamWriter2,int)","digraph cfg_writeEndElement {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack4 = interfaceinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement>""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""6"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""7"" [label=""$stack9 = $stack8 - 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack4 != 0""];\n	""10"" [label=""if $stack5 == 0""];\n	""11"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack6)""];\n	""12"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""13"" [label=""nrOfEntries := @parameter1: int""];\n	""14"" [label=""return""];\n	""15"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting> = $stack9""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_false""];\n	""10"" -> ""5""[label=""cfg_true""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""8""[label=""cfg_next""];\n	""18"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""12""[label=""cfg_goto""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,String,boolean)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, String text, boolean isCData) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    if (isCData) {\n        sw.writeCData(text);\n    } else {\n        sw.writeCharacters(text);\n    }\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.lang.String,boolean)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack7 = interfaceinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack7 != 0""];\n	""7"" [label=""if isCData == 0""];\n	""8"" [label=""interfaceinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack8)""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(java.lang.String)>(text)""];\n	""10"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(java.lang.String)>(text)""];\n	""11"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""12"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""13"" [label=""isCData := @parameter4: boolean""];\n	""14"" [label=""localName := @parameter2: java.lang.String""];\n	""15"" [label=""nsURI := @parameter1: java.lang.String""];\n	""16"" [label=""return""];\n	""17"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""18"" [label=""text := @parameter3: java.lang.String""];\n	""19"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""20"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_goto""];\n	""6"" -> ""12""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""7"" -> ""10""[label=""cfg_true""];\n	""7"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,char[],int,int,boolean)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, char[] buffer, int offset, int len, boolean isCData) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    if (isCData) {\n        sw.writeCData(buffer, offset, len);\n    } else {\n        sw.writeCharacters(buffer, offset, len);\n    }\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,char[],int,int,boolean)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""3"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""4"" [label=""$stack9 = interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""5"" [label=""buffer := @parameter3: char[]""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack9 != 0""];\n	""8"" [label=""if isCData == 0""];\n	""9"" [label=""interfaceinvoke $stack11.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack10)""];\n	""10"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(char[],int,int)>(buffer, offset, len)""];\n	""11"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(char[],int,int)>(buffer, offset, len)""];\n	""12"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""13"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""14"" [label=""isCData := @parameter6: boolean""];\n	""15"" [label=""len := @parameter5: int""];\n	""16"" [label=""localName := @parameter2: java.lang.String""];\n	""17"" [label=""nsURI := @parameter1: java.lang.String""];\n	""18"" [label=""offset := @parameter4: int""];\n	""19"" [label=""return""];\n	""20"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""21"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""22"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_goto""];\n	""7"" -> ""13""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,boolean)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, boolean value) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeBoolean(value);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,boolean)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack6 = interfaceinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack6 != 0""];\n	""6"" [label=""interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack7)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeBoolean(boolean)>(value)""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""10"" [label=""localName := @parameter2: java.lang.String""];\n	""11"" [label=""nsURI := @parameter1: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""16"" [label=""value := @parameter3: boolean""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,int)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, int value) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeInt(value);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,int)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack6 = interfaceinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack6 != 0""];\n	""6"" [label=""interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack7)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeInt(int)>(value)""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""10"" [label=""localName := @parameter2: java.lang.String""];\n	""11"" [label=""nsURI := @parameter1: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""16"" [label=""value := @parameter3: int""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,long)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, long value) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeLong(value);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,long)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack7 = interfaceinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack7 != 0""];\n	""6"" [label=""interfaceinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack8)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeLong(long)>(value)""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""10"" [label=""localName := @parameter2: java.lang.String""];\n	""11"" [label=""nsURI := @parameter1: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""16"" [label=""value := @parameter3: long""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,double)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, double value) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeDouble(value);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,double)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack7 = interfaceinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack7 != 0""];\n	""6"" [label=""interfaceinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack8)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeDouble(double)>(value)""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""10"" [label=""localName := @parameter2: java.lang.String""];\n	""11"" [label=""nsURI := @parameter1: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""16"" [label=""value := @parameter3: double""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,float)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, float value) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeFloat(value);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,float)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack6 = interfaceinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack6 != 0""];\n	""6"" [label=""interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack7)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeFloat(float)>(value)""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""10"" [label=""localName := @parameter2: java.lang.String""];\n	""11"" [label=""nsURI := @parameter1: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""16"" [label=""value := @parameter3: float""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigInteger)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, BigInteger value) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeInteger(value);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.math.BigInteger)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack6 = interfaceinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack6 != 0""];\n	""6"" [label=""interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack7)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeInteger(java.math.BigInteger)>(value)""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""10"" [label=""localName := @parameter2: java.lang.String""];\n	""11"" [label=""nsURI := @parameter1: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""16"" [label=""value := @parameter3: java.math.BigInteger""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,BigDecimal)",Method,No Comment,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, BigDecimal value) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeDecimal(value);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.math.BigDecimal)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack6 = interfaceinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack6 != 0""];\n	""6"" [label=""interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack7)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeDecimal(java.math.BigDecimal)>(value)""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""10"" [label=""localName := @parameter2: java.lang.String""];\n	""11"" [label=""nsURI := @parameter1: java.lang.String""];\n	""12"" [label=""return""];\n	""13"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""16"" [label=""value := @parameter3: java.math.BigDecimal""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafElement(XMLStreamWriter2,String,String,Base64Variant,byte[],int,int)",Method,method definition changed in 2.12,"@Override\npublic void writeLeafElement(XMLStreamWriter2 sw, String nsURI, String localName, org.codehaus.stax2.typed.Base64Variant base64variant, byte[] data, int offset, int len) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeStartElement(nsURI, localName);\n    sw.writeBinary(base64variant, data, offset, len);\n    sw.writeEndElement();\n    _justHadStartElement = false;\n}","void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,org.codehaus.stax2.typed.Base64Variant,byte[],int,int)","digraph cfg_writeLeafElement {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""3"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""4"" [label=""$stack9 = interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""5"" [label=""base64variant := @parameter3: org.codehaus.stax2.typed.Base64Variant""];\n	""6"" [label=""data := @parameter4: byte[]""];\n	""7"" [label=""if $stack9 != 0""];\n	""8"" [label=""interfaceinvoke $stack11.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack10)""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>(base64variant, data, offset, len)""];\n	""10"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""11"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""12"" [label=""len := @parameter6: int""];\n	""13"" [label=""localName := @parameter2: java.lang.String""];\n	""14"" [label=""nsURI := @parameter1: java.lang.String""];\n	""15"" [label=""offset := @parameter5: int""];\n	""16"" [label=""return""];\n	""17"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""19"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafNullElement(XMLStreamWriter2,String,String)",Method,No Comment,"@Override\npublic void writeLeafNullElement(XMLStreamWriter2 sw, String nsURI, String localName) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeEmptyElement(nsURI, localName);\n    _justHadStartElement = false;\n}","void writeLeafNullElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)","digraph cfg_writeLeafNullElement {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack5 = interfaceinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack5 != 0""];\n	""6"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack6)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEmptyElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""8"" [label=""localName := @parameter2: java.lang.String""];\n	""9"" [label=""nsURI := @parameter1: java.lang.String""];\n	""10"" [label=""return""];\n	""11"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writeLeafXsiNilElement(XMLStreamWriter2,String,String)",Method,@since 2.12,"public void writeLeafXsiNilElement(XMLStreamWriter2 sw, String nsURI, String localName) throws XMLStreamException {\n    if (!_objectIndenter.isInline()) {\n        _objectIndenter.writeIndentation(sw, _nesting);\n    }\n    sw.writeEmptyElement(nsURI, localName);\n    sw.writeAttribute(""xsi"", XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI, ""nil"", ""true"");\n    _justHadStartElement = false;\n}","void writeLeafXsiNilElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)","digraph cfg_writeLeafXsiNilElement {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""2"" [label=""$stack5 = interfaceinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: boolean isInline()>()""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""4"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""5"" [label=""if $stack5 != 0""];\n	""6"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter: void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)>(sw, $stack6)""];\n	""7"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(\""xsi\"", \""http://www.w3.org/2001/XMLSchema-instance\"", \""nil\"", \""true\"")""];\n	""8"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeEmptyElement(java.lang.String,java.lang.String)>(nsURI, localName)""];\n	""9"" [label=""localName := @parameter2: java.lang.String""];\n	""10"" [label=""nsURI := @parameter1: java.lang.String""];\n	""11"" [label=""return""];\n	""12"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: boolean _justHadStartElement> = 0""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.writePrologLinefeed(XMLStreamWriter2),Method,No Comment,"// since 2.7\n@Override\npublic void writePrologLinefeed(XMLStreamWriter2 sw) throws XMLStreamException {\n    // 06-Dec-2015, tatu: Alternatively could try calling `writeSpace()`...\n    sw.writeRaw(_newLine);\n}",void writePrologLinefeed(org.codehaus.stax2.XMLStreamWriter2),"digraph cfg_writePrologLinefeed {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine>""];\n	""2"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String)>($stack2)""];\n	""3"" [label=""return""];\n	""4"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.<init>(),Constructor,No Comment,public DefaultXmlPrettyPrinter() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter""];\n	""2"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter""];\n	""3"" [label=""$stack3 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String SYSTEM_DEFAULT_NEW_LINE>""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter: void <init>()>()""];\n	""6"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter: void <init>(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter)>(this)""];\n	""7"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _arrayIndenter> = $stack1""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter> = $stack2""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting> = 0""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine> = $stack3""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter.<init>(DefaultXmlPrettyPrinter),Constructor,No Comment,protected DefaultXmlPrettyPrinter(DefaultXmlPrettyPrinter base) {\n    _arrayIndenter = base._arrayIndenter;\n    _objectIndenter = base._objectIndenter;\n    _nesting = base._nesting;\n    _newLine = base._newLine;\n},void <init>(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter),"digraph cfg_init {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter""];\n	""2"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter""];\n	""3"" [label=""$stack4 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String SYSTEM_DEFAULT_NEW_LINE>""];\n	""4"" [label=""$stack5 = base.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _arrayIndenter>""];\n	""5"" [label=""$stack6 = base.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter>""];\n	""6"" [label=""$stack7 = base.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting>""];\n	""7"" [label=""$stack8 = base.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine>""];\n	""8"" [label=""base := @parameter0: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""9"" [label=""return""];\n	""10"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter: void <init>()>()""];\n	""11"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter: void <init>(com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter)>(this)""];\n	""12"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _arrayIndenter> = $stack2""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _arrayIndenter> = $stack5""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter> = $stack3""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter _objectIndenter> = $stack6""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting> = $stack7""];\n	""19"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: int _nesting> = 0""];\n	""20"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine> = $stack4""];\n	""21"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine> = $stack8""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""11"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""5""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""6""[label=""cfg_next""];\n	""18"" -> ""7""[label=""cfg_next""];\n	""19"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""12""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter.writeIndentation(JsonGenerator,int)",Abstract Method,No Comment,"public void writeIndentation(JsonGenerator g, int level) throws IOException;","void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)",digraph cfg_writeIndentation {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter.writeIndentation(XMLStreamWriter2,int)",Abstract Method,No Comment,"public void writeIndentation(XMLStreamWriter2 sw, int level) throws XMLStreamException;","void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)",digraph cfg_writeIndentation {\n}\n,public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Indenter.isInline(),Abstract Method,"* @return True if indenter is considered inline (does not add linefeeds),\n         *   false otherwise",public boolean isInline();,boolean isInline(),digraph cfg_isInline {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.writeIndentation(JsonGenerator,int)",Method,No Comment,"@Override\npublic void writeIndentation(JsonGenerator jg, int level) {\n}","void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)","digraph cfg_writeIndentation {\n	""1"" [label=""jg := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""level := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.isInline(),Method,No Comment,@Override\npublic boolean isInline() {\n    return true;\n},boolean isInline(),"digraph cfg_isInline {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.writeIndentation(XMLStreamWriter2,int)",Method,No Comment,"@Override\npublic void writeIndentation(XMLStreamWriter2 sw, int level) {\n}","void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)","digraph cfg_writeIndentation {\n	""1"" [label=""level := @parameter1: int""];\n	""2"" [label=""return""];\n	""3"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter.<init>(),Constructor,No Comment,public NopIndenter() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$NopIndenter""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.writeIndentation(XMLStreamWriter2,int)",Method,No Comment,"@Override\npublic void writeIndentation(XMLStreamWriter2 sw, int level) throws XMLStreamException {\n    sw.writeRaw("" "");\n}","void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)","digraph cfg_writeIndentation {\n	""1"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String)>(\"" \"")""];\n	""2"" [label=""level := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.writeIndentation(JsonGenerator,int)",Method,No Comment,"@Override\npublic void writeIndentation(JsonGenerator g, int level) throws IOException {\n    g.writeRaw(' ');\n}","void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)","digraph cfg_writeIndentation {\n	""1"" [label=""g := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""level := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter""];\n	""5"" [label=""virtualinvoke g.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char)>(32)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.isInline(),Method,No Comment,@Override\npublic boolean isInline() {\n    return true;\n},boolean isInline(),"digraph cfg_isInline {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter.<init>(),Constructor,No Comment,public FixedSpaceIndenter() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter.isInline(),Method,No Comment,@Override\npublic boolean isInline() {\n    return false;\n},boolean isInline(),"digraph cfg_isInline {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter.writeIndentation(XMLStreamWriter2,int)",Method,No Comment,"@Override\npublic void writeIndentation(XMLStreamWriter2 sw, int level) throws XMLStreamException {\n    sw.writeRaw(_newLine);\n    // 2 spaces per level\n    level += level;\n    while (level > SPACE_COUNT) {\n        // should never happen but...\n        sw.writeRaw(SPACES, 0, SPACE_COUNT);\n        level -= SPACES.length;\n    }\n    sw.writeRaw(SPACES, 0, level);\n}","void writeIndentation(org.codehaus.stax2.XMLStreamWriter2,int)","digraph cfg_writeIndentation {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter this$0>""];\n	""2"" [label=""$stack4 = $stack3.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine>""];\n	""3"" [label=""$stack5 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: char[] SPACES>""];\n	""4"" [label=""$stack6 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: char[] SPACES>""];\n	""5"" [label=""$stack7 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: char[] SPACES>""];\n	""6"" [label=""$stack8 = lengthof $stack7""];\n	""7"" [label=""goto""];\n	""8"" [label=""if level <= 64""];\n	""9"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(char[],int,int)>($stack5, 0, level)""];\n	""10"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(char[],int,int)>($stack6, 0, 64)""];\n	""11"" [label=""interfaceinvoke sw.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String)>($stack4)""];\n	""12"" [label=""level := @parameter1: int""];\n	""13"" [label=""level = level + level""];\n	""14"" [label=""level = level - $stack8""];\n	""15"" [label=""return""];\n	""16"" [label=""sw := @parameter0: org.codehaus.stax2.XMLStreamWriter2""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""16"" -> ""12""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter.writeIndentation(JsonGenerator,int)",Method,No Comment,"@Override\npublic void writeIndentation(JsonGenerator jg, int level) throws IOException {\n    jg.writeRaw(_newLine);\n    // 2 spaces per level\n    level += level;\n    while (level > SPACE_COUNT) {\n        // should never happen but...\n        jg.writeRaw(SPACES, 0, SPACE_COUNT);\n        level -= SPACES.length;\n    }\n    jg.writeRaw(SPACES, 0, level);\n}","void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int)","digraph cfg_writeIndentation {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter this$0>""];\n	""2"" [label=""$stack4 = $stack3.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: java.lang.String _newLine>""];\n	""3"" [label=""$stack5 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: char[] SPACES>""];\n	""4"" [label=""$stack6 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: char[] SPACES>""];\n	""5"" [label=""$stack7 = <com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: char[] SPACES>""];\n	""6"" [label=""$stack8 = lengthof $stack7""];\n	""7"" [label=""goto""];\n	""8"" [label=""if level <= 64""];\n	""9"" [label=""jg := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""10"" [label=""level := @parameter1: int""];\n	""11"" [label=""level = level + level""];\n	""12"" [label=""level = level - $stack8""];\n	""13"" [label=""return""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter""];\n	""15"" [label=""virtualinvoke jg.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char[],int,int)>($stack5, 0, level)""];\n	""16"" [label=""virtualinvoke jg.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(char[],int,int)>($stack6, 0, 64)""];\n	""17"" [label=""virtualinvoke jg.<com.fasterxml.jackson.core.JsonGenerator: void writeRaw(java.lang.String)>($stack4)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""17"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(JavaType),Method,"* Helper method used for figuring out if given raw type is a collection (""indexed"") type;\n     * in which case a wrapper element is typically added.","public static boolean isIndexedType(JavaType type) {\n    Class<?> cls = type.getRawClass();\n    // 25-Mar-2024, tatu [dataformat-xml#646]: Need to support Iterable too\n    if (type.isContainerType() || type.isIterationType() || cls == Iterable.class) {\n        // One special case; byte[] will be serialized as base64-encoded String, not real array, so:\n        // (actually, ditto for char[]; thought to be a String)\n        if (cls == byte[].class || cls == char[].class) {\n            return false;\n        }\n        // Also, should not add wrapping for Maps\n        // [dataformat-xml#220]: nor map-like (Scala Map) types\n        if (type.isMapLikeType()) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}",boolean isIndexedType(com.fasterxml.jackson.databind.JavaType),"digraph cfg_isIndexedType {\n	""1"" [label=""$stack2 = virtualinvoke type.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>()""];\n	""2"" [label=""$stack3 = virtualinvoke type.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>()""];\n	""3"" [label=""$stack4 = virtualinvoke type.<com.fasterxml.jackson.databind.JavaType: boolean isIterationType()>()""];\n	""4"" [label=""cls = virtualinvoke type.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>()""];\n	""5"" [label=""if $stack2 != 0""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""if $stack4 != 0""];\n	""8"" [label=""if cls != class \""Ljava/lang/Iterable;\""""];\n	""9"" [label=""if cls != class [C""];\n	""10"" [label=""if cls == class [B""];\n	""11"" [label=""return 0""];\n	""12"" [label=""return 0""];\n	""13"" [label=""return 0""];\n	""14"" [label=""return 1""];\n	""15"" [label=""type := @parameter0: com.fasterxml.jackson.databind.JavaType""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_true""];\n	""10"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""13""[label=""cfg_false""];\n	""6"" -> ""14""[label=""cfg_true""];\n	""7"" -> ""10""[label=""cfg_true""];\n	""7"" -> ""8""[label=""cfg_false""];\n	""8"" -> ""10""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""12""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.wrapIfNecessary(XMLStreamReader),Method,No Comment,public static XMLStreamReader2 wrapIfNecessary(XMLStreamReader sr) {\n    if (sr instanceof XMLStreamReader2) {\n        return (XMLStreamReader2) sr;\n    }\n    return new Stax2JacksonReaderAdapter(sr);\n},org.codehaus.stax2.XMLStreamReader2 wrapIfNecessary(javax.xml.stream.XMLStreamReader),"digraph cfg_wrapIfNecessary {\n	""1"" [label=""$stack1 = sr instanceof org.codehaus.stax2.XMLStreamReader2""];\n	""2"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter""];\n	""3"" [label=""$stack3 = (org.codehaus.stax2.XMLStreamReader2) sr""];\n	""4"" [label=""if $stack1 == 0""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter: void <init>(javax.xml.stream.XMLStreamReader)>(sr)""];\n	""8"" [label=""sr := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""4"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.next(),Method,"04-Dec-2023, tatu: Needed to catch exceptions from buggy SJSXP decoder...","@Override\npublic int next() throws XMLStreamException {\n    try {\n        return super.next();\n    } catch (ArrayIndexOutOfBoundsException e) {\n        // Use IllegalStateException since that is guaranteed to be translated\n        // appropriately into Jackson type by caller:\n        throw new IllegalStateException(""Internal processing error by `XMLStreamReader` of type "" + ClassUtil.classNameOf(_delegate) + "" when calling `next()` ("" + ""consider using Woodstox instead): "" + e.getMessage(), e);\n    }\n}",int next(),"digraph cfg_next {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" when calling `next()` (consider using Woodstox instead): \"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""4"" [label=""$stack13 = new java.lang.IllegalStateException""];\n	""5"" [label=""$stack2 = specialinvoke this.<org.codehaus.stax2.ri.Stax2ReaderAdapter: int next()>()""];\n	""6"" [label=""$stack3 := @caughtexception""];\n	""7"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""8"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter: javax.xml.stream.XMLStreamReader _delegate>""];\n	""9"" [label=""$stack6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>($stack5)""];\n	""10"" [label=""$stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Internal processing error by `XMLStreamReader` of type \"")""];\n	""11"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6)""];\n	""12"" [label=""$stack9 = virtualinvoke e.<java.lang.ArrayIndexOutOfBoundsException: java.lang.String getMessage()>()""];\n	""13"" [label=""e = $stack3""];\n	""14"" [label=""return $stack2""];\n	""15"" [label=""specialinvoke $stack13.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($stack12, e)""];\n	""16"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter""];\n	""18"" [label=""throw $stack13""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""18""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_except""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter.<init>(XMLStreamReader),Constructor,No Comment,public Stax2JacksonReaderAdapter(XMLStreamReader sr) {\n    super(sr);\n    _delegate = sr;\n},void <init>(javax.xml.stream.XMLStreamReader),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<org.codehaus.stax2.ri.Stax2ReaderAdapter: void <init>(javax.xml.stream.XMLStreamReader)>(sr)""];\n	""3"" [label=""sr := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter: javax.xml.stream.XMLStreamReader _delegate> = sr""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.readResolve(),Method,No Comment,"protected Object readResolve() {\n    // just need to make 100% sure it gets set to non-null, that's all\n    // 05-Jan-2020, tatu: How is that possibly, you ask? JDK serialization, that's how\n    //   (it by-passes calls to constructors, as well as initializers)\n    //   ... and if you don't believe, try commenting it out and see test failure you get\n    if (_rootNames == null) {\n        return new XmlRootNameLookup();\n    }\n    return this;\n}",java.lang.Object readResolve(),"digraph cfg_readResolve {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: com.fasterxml.jackson.databind.util.LRUMap _rootNames>""];\n	""2"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""3"" [label=""if $stack1 != null""];\n	""4"" [label=""return $stack2""];\n	""5"" [label=""return this""];\n	""6"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: void <init>()>()""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_false""];\n	""3"" -> ""5""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.findRootName(JavaType,MapperConfig)",Method,No Comment,"public QName findRootName(JavaType rootType, MapperConfig<?> config) {\n    return findRootName(rootType.getRawClass(), config);\n}","javax.xml.namespace.QName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig)","digraph cfg_findRootName {\n	""1"" [label=""$stack3 = virtualinvoke rootType.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>()""];\n	""2"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)>($stack3, config)""];\n	""3"" [label=""config := @parameter1: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""rootType := @parameter0: com.fasterxml.jackson.databind.JavaType""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.findRootName(Class,MapperConfig)",Method,No Comment,"public QName findRootName(Class<?> rootType, MapperConfig<?> config) {\n    ClassKey key = new ClassKey(rootType);\n    QName name = _rootNames.get(key);\n    if (name != null) {\n        return name;\n    }\n    name = _findRootName(config, rootType);\n    _rootNames.put(key, name);\n    return name;\n}","javax.xml.namespace.QName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)","digraph cfg_findRootName {\n	""1"" [label=""$stack5 = new com.fasterxml.jackson.databind.type.ClassKey""];\n	""2"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: com.fasterxml.jackson.databind.util.LRUMap _rootNames>""];\n	""3"" [label=""$stack7 = virtualinvoke $stack6.<com.fasterxml.jackson.databind.util.LRUMap: java.lang.Object get(java.lang.Object)>(key)""];\n	""4"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: com.fasterxml.jackson.databind.util.LRUMap _rootNames>""];\n	""5"" [label=""config := @parameter1: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""6"" [label=""if name == null""];\n	""7"" [label=""key = $stack5""];\n	""8"" [label=""name = (javax.xml.namespace.QName) $stack7""];\n	""9"" [label=""name = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName _findRootName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(config, rootType)""];\n	""10"" [label=""return name""];\n	""11"" [label=""return name""];\n	""12"" [label=""rootType := @parameter0: java.lang.Class""];\n	""13"" [label=""specialinvoke $stack5.<com.fasterxml.jackson.databind.type.ClassKey: void <init>(java.lang.Class)>(rootType)""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""15"" [label=""virtualinvoke $stack8.<com.fasterxml.jackson.databind.util.LRUMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, name)""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup._findRootName(MapperConfig,Class)",Method,No Comment,"protected QName _findRootName(MapperConfig<?> config, Class<?> rootType) {\n    BeanDescription beanDesc = config.introspectClassAnnotations(rootType);\n    AnnotationIntrospector intr = config.getAnnotationIntrospector();\n    AnnotatedClass ac = beanDesc.getClassInfo();\n    String localName = null;\n    String ns = null;\n    PropertyName root = intr.findRootName(ac);\n    if (root != null) {\n        localName = root.getSimpleName();\n        ns = root.getNamespace();\n    }\n    // No answer so far? Let's just default to using simple class name\n    if (localName == null || localName.length() == 0) {\n        // Should we strip out enclosing class tho? For now, nope:\n        // one caveat: array simple names end with ""[]""; also, ""$"" needs replacing\n        localName = StaxUtil.sanitizeXmlTypeName(rootType.getSimpleName());\n        return _qname(ns, localName);\n    }\n    // Otherwise let's see if there's namespace, too (if we are missing it)\n    if (ns == null || ns.isEmpty()) {\n        ns = _findNamespace(config, intr, ac);\n    }\n    return _qname(ns, localName);\n}","javax.xml.namespace.QName _findRootName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)","digraph cfg__findRootName {\n	""1"" [label=""$stack10 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName _qname(java.lang.String,java.lang.String)>(ns, localName)""];\n	""2"" [label=""$stack11 = virtualinvoke localName.<java.lang.String: int length()>()""];\n	""3"" [label=""$stack12 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName _qname(java.lang.String,java.lang.String)>(ns, localName)""];\n	""4"" [label=""$stack13 = virtualinvoke ns.<java.lang.String: boolean isEmpty()>()""];\n	""5"" [label=""$stack9 = virtualinvoke rootType.<java.lang.Class: java.lang.String getSimpleName()>()""];\n	""6"" [label=""ac = virtualinvoke beanDesc.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>()""];\n	""7"" [label=""beanDesc = virtualinvoke config.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)>(rootType)""];\n	""8"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""9"" [label=""if $stack11 != 0""];\n	""10"" [label=""if $stack13 == 0""];\n	""11"" [label=""if localName == null""];\n	""12"" [label=""if ns == null""];\n	""13"" [label=""if root == null""];\n	""14"" [label=""intr = virtualinvoke config.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>()""];\n	""15"" [label=""localName = null""];\n	""16"" [label=""localName = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.String sanitizeXmlTypeName(java.lang.String)>($stack9)""];\n	""17"" [label=""localName = virtualinvoke root.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""18"" [label=""ns = null""];\n	""19"" [label=""ns = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: java.lang.String _findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(config, intr, ac)""];\n	""20"" [label=""ns = virtualinvoke root.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getNamespace()>()""];\n	""21"" [label=""return $stack10""];\n	""22"" [label=""return $stack12""];\n	""23"" [label=""root = virtualinvoke intr.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(ac)""];\n	""24"" [label=""rootType := @parameter1: java.lang.Class""];\n	""25"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""1"" -> ""21""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""2""[label=""cfg_false""];\n	""11"" -> ""5""[label=""cfg_true""];\n	""12"" -> ""19""[label=""cfg_true""];\n	""12"" -> ""4""[label=""cfg_false""];\n	""13"" -> ""11""[label=""cfg_true""];\n	""13"" -> ""17""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""18""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""23""[label=""cfg_next""];\n	""19"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup._qname(String,String)",Method,No Comment,"private QName _qname(String ns, String localName) {\n    if (ns == null) {\n        // some QName impls barf on nulls...\n        ns = """";\n    }\n    return new QName(ns, localName);\n}","javax.xml.namespace.QName _qname(java.lang.String,java.lang.String)","digraph cfg__qname {\n	""1"" [label=""$stack3 = new javax.xml.namespace.QName""];\n	""2"" [label=""if ns != null""];\n	""3"" [label=""localName := @parameter1: java.lang.String""];\n	""4"" [label=""ns := @parameter0: java.lang.String""];\n	""5"" [label=""ns = \""\""""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""specialinvoke $stack3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(ns, localName)""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_true""];\n	""2"" -> ""5""[label=""cfg_false""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup._findNamespace(MapperConfig,AnnotationIntrospector,AnnotatedClass)",Method,No Comment,"private String _findNamespace(MapperConfig<?> config, AnnotationIntrospector ai, AnnotatedClass ann) {\n    for (AnnotationIntrospector intr : ai.allIntrospectors()) {\n        if (intr instanceof AnnotationIntrospector.XmlExtensions) {\n            String ns = ((AnnotationIntrospector.XmlExtensions) intr).findNamespace(config, ann);\n            if (ns != null) {\n                return ns;\n            }\n        }\n    }\n    return null;\n}","java.lang.String _findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedClass)","digraph cfg__findNamespace {\n	""1"" [label=""$stack10 = intr instanceof com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions""];\n	""2"" [label=""$stack11 = (com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions) intr""];\n	""3"" [label=""$stack7 = virtualinvoke ai.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.Collection allIntrospectors()>()""];\n	""4"" [label=""$stack8 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>()""];\n	""5"" [label=""$stack9 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>()""];\n	""6"" [label=""ai := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""7"" [label=""ann := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedClass""];\n	""8"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack10 == 0""];\n	""11"" [label=""if $stack8 == 0""];\n	""12"" [label=""if ns == null""];\n	""13"" [label=""intr = (com.fasterxml.jackson.databind.AnnotationIntrospector) $stack9""];\n	""14"" [label=""l4 = interfaceinvoke $stack7.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""15"" [label=""ns = interfaceinvoke $stack11.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""16"" [label=""return ns""];\n	""17"" [label=""return null""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_false""];\n	""10"" -> ""9""[label=""cfg_true""];\n	""11"" -> ""17""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_false""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""12"" -> ""9""[label=""cfg_true""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_goto""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup.<init>(),Constructor,No Comment,"public XmlRootNameLookup() {\n    _rootNames = new LRUMap<ClassKey, QName>(40, 200);\n}",void <init>(),"digraph cfg_init {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.databind.util.LRUMap""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(40, 200)""];\n	""4"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: com.fasterxml.jackson.databind.util.LRUMap _rootNames> = $stack1""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder._propName(String,Id)",Method,No Comment,"@Override\nprotected String _propName(String propName, JsonTypeInfo.Id idType) {\n    // 30-Jan-2024, tatu: Before 2.17 we used to indiscriminately cleanse\n    //   property name always; with 2.17+ only default ones\n    if (propName == null || propName.isEmpty()) {\n        propName = StaxUtil.sanitizeXmlTypeName(idType.getDefaultPropertyName());\n    } else {\n        // ... alas, there's... a ""feature"" (read: bug) in `JsonTypeInfo.Value` construction\n        // which will automatically apply default property name if no explicit property\n        // name specific. This means we don't really know if default is being used.\n        // But let's assume that if ""propName.equals(defaultPropName)"" this is the case.\n        if (propName.equals(idType.getDefaultPropertyName())) {\n            propName = StaxUtil.sanitizeXmlTypeName(propName);\n        }\n    }\n    return propName;\n}","java.lang.String _propName(java.lang.String,com.fasterxml.jackson.annotation.JsonTypeInfo$Id)","digraph cfg__propName {\n	""1"" [label=""$stack3 = virtualinvoke idType.<com.fasterxml.jackson.annotation.JsonTypeInfo$Id: java.lang.String getDefaultPropertyName()>()""];\n	""2"" [label=""$stack4 = virtualinvoke propName.<java.lang.String: boolean isEmpty()>()""];\n	""3"" [label=""$stack5 = virtualinvoke idType.<com.fasterxml.jackson.annotation.JsonTypeInfo$Id: java.lang.String getDefaultPropertyName()>()""];\n	""4"" [label=""$stack6 = virtualinvoke propName.<java.lang.String: boolean equals(java.lang.Object)>($stack5)""];\n	""5"" [label=""goto""];\n	""6"" [label=""idType := @parameter1: com.fasterxml.jackson.annotation.JsonTypeInfo$Id""];\n	""7"" [label=""if $stack4 == 0""];\n	""8"" [label=""if $stack6 == 0""];\n	""9"" [label=""if propName == null""];\n	""10"" [label=""propName := @parameter0: java.lang.String""];\n	""11"" [label=""propName = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.String sanitizeXmlTypeName(java.lang.String)>($stack3)""];\n	""12"" [label=""propName = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.String sanitizeXmlTypeName(java.lang.String)>(propName)""];\n	""13"" [label=""return propName""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_goto""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_false""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""12""[label=""cfg_false""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.idResolver(MapperConfig,JavaType,PolymorphicTypeValidator,Collection,boolean,boolean)",Method,No Comment,"@Override\nprotected TypeIdResolver idResolver(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator subtypeValidator, Collection<NamedType> subtypes, boolean forSer, boolean forDeser) {\n    if (_customIdResolver != null) {\n        return _customIdResolver;\n    }\n    // Only override handlers of class, minimal class; name is good as is\n    switch(_idType) {\n        case CLASS:\n            return new XmlClassNameIdResolver(baseType, config.getTypeFactory(), subTypeValidator(config));\n        case MINIMAL_CLASS:\n            return new XmlMinimalClassNameIdResolver(baseType, config.getTypeFactory(), subTypeValidator(config));\n        default:\n    }\n    return super.idResolver(config, baseType, subtypeValidator, subtypes, forSer, forDeser);\n}","com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean)","digraph cfg_idResolver {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<com.fasterxml.jackson.annotation.JsonTypeInfo$Id: int ordinal()>()""];\n	""2"" [label=""$stack11 = $stack9[$stack10]""];\n	""3"" [label=""$stack12 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig)>(config)""];\n	""4"" [label=""$stack13 = virtualinvoke config.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>()""];\n	""5"" [label=""$stack14 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver""];\n	""6"" [label=""$stack15 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig)>(config)""];\n	""7"" [label=""$stack16 = virtualinvoke config.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>()""];\n	""8"" [label=""$stack17 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver""];\n	""9"" [label=""$stack18 = specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean)>(config, baseType, subtypeValidator, subtypes, forSer, forDeser)""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver>""];\n	""11"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver>""];\n	""12"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType>""];\n	""13"" [label=""$stack9 = <com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>""];\n	""14"" [label=""baseType := @parameter1: com.fasterxml.jackson.databind.JavaType""];\n	""15"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""16"" [label=""forDeser := @parameter5: boolean""];\n	""17"" [label=""forSer := @parameter4: boolean""];\n	""18"" [label=""if $stack7 == null""];\n	""19"" [label=""return $stack14""];\n	""20"" [label=""return $stack17""];\n	""21"" [label=""return $stack18""];\n	""22"" [label=""return $stack19""];\n	""23"" [label=""specialinvoke $stack14.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(baseType, $stack13, $stack12)""];\n	""24"" [label=""specialinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(baseType, $stack16, $stack15)""];\n	""25"" [label=""subtypeValidator := @parameter2: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator""];\n	""26"" [label=""subtypes := @parameter3: java.util.Collection""];\n	""27"" [label=""switch($stack11) \{     case 1:     case 2:     default:  \}""];\n	""28"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_false""];\n	""18"" -> ""13""[label=""cfg_true""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""24"" -> ""20""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""17""[label=""cfg_next""];\n	""27"" -> ""5""[label=""cfg_switch""];\n	""27"" -> ""8""[label=""cfg_switch""];\n	""27"" -> ""9""[label=""cfg_switch""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.encodeXmlClassName(String),Method,* Helper method for encoding regular Java class name in form that\n     * can be used as XML element name.,"protected static String encodeXmlClassName(String className) {\n    /* For now, let's just replace '$'s with double dots...\n         * Perhaps make configurable in future?\n         */\n    int ix = className.lastIndexOf('$');\n    if (ix >= 0) {\n        StringBuilder sb = new StringBuilder(className);\n        do {\n            sb.replace(ix, ix + 1, "".."");\n            ix = className.lastIndexOf('$', ix - 1);\n        } while (ix >= 0);\n        className = sb.toString();\n    }\n    return className;\n}",java.lang.String encodeXmlClassName(java.lang.String),"digraph cfg_encodeXmlClassName {\n	""1"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack4 = ix + 1""];\n	""3"" [label=""$stack5 = ix - 1""];\n	""4"" [label=""className := @parameter0: java.lang.String""];\n	""5"" [label=""className = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""if ix < 0""];\n	""7"" [label=""if ix >= 0""];\n	""8"" [label=""ix = virtualinvoke className.<java.lang.String: int lastIndexOf(int)>(36)""];\n	""9"" [label=""ix = virtualinvoke className.<java.lang.String: int lastIndexOf(int,int)>(36, $stack5)""];\n	""10"" [label=""return className""];\n	""11"" [label=""sb = $stack3""];\n	""12"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>(java.lang.String)>(className)""];\n	""13"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>(ix, $stack4, \""..\"")""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","protected , static "
com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.decodeXmlClassName(String),Method,"* Helper method for decoding ""XML safe"" Java class name back into\n     * actual class name","protected static String decodeXmlClassName(String className) {\n    int ix = className.lastIndexOf("".."");\n    if (ix >= 0) {\n        StringBuilder sb = new StringBuilder(className);\n        do {\n            sb.replace(ix, ix + 2, ""$"");\n            ix = className.lastIndexOf("".."", ix - 1);\n        } while (ix >= 0);\n        className = sb.toString();\n    }\n    return className;\n}",java.lang.String decodeXmlClassName(java.lang.String),"digraph cfg_decodeXmlClassName {\n	""1"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack4 = ix + 2""];\n	""3"" [label=""$stack5 = ix - 1""];\n	""4"" [label=""className := @parameter0: java.lang.String""];\n	""5"" [label=""className = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""if ix < 0""];\n	""7"" [label=""if ix >= 0""];\n	""8"" [label=""ix = virtualinvoke className.<java.lang.String: int lastIndexOf(java.lang.String)>(\""..\"")""];\n	""9"" [label=""ix = virtualinvoke className.<java.lang.String: int lastIndexOf(java.lang.String,int)>(\""..\"", $stack5)""];\n	""10"" [label=""return className""];\n	""11"" [label=""sb = $stack3""];\n	""12"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>(java.lang.String)>(className)""];\n	""13"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>(ix, $stack4, \""$\"")""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_false""];\n	""6"" -> ""10""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","protected , static "
com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.<init>(),Constructor,No Comment,public XmlTypeResolverBuilder() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder.<init>(Value),Constructor,No Comment,public XmlTypeResolverBuilder(JsonTypeInfo.Value settings) {\n    super(settings);\n},void <init>(com.fasterxml.jackson.annotation.JsonTypeInfo$Value),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""settings := @parameter0: com.fasterxml.jackson.annotation.JsonTypeInfo$Value""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: void <init>(com.fasterxml.jackson.annotation.JsonTypeInfo$Value)>(settings)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver.idFromValue(Object),Method,No Comment,@Override\npublic String idFromValue(Object value) {\n    return encodeXmlClassName(super.idFromValue(value));\n},java.lang.String idFromValue(java.lang.Object),"digraph cfg_idFromValue {\n	""1"" [label=""$stack2 = specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String idFromValue(java.lang.Object)>(value)""];\n	""2"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: java.lang.String encodeXmlClassName(java.lang.String)>($stack2)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver.typeFromId(DatabindContext,String)",Method,No Comment,"@Override\npublic JavaType typeFromId(DatabindContext context, String id) throws IOException {\n    return super.typeFromId(context, decodeXmlClassName(id));\n}","com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)","digraph cfg_typeFromId {\n	""1"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: java.lang.String decodeXmlClassName(java.lang.String)>(id)""];\n	""2"" [label=""$stack4 = specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)>(context, $stack3)""];\n	""3"" [label=""context := @parameter0: com.fasterxml.jackson.databind.DatabindContext""];\n	""4"" [label=""id := @parameter1: java.lang.String""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver.<init>(JavaType,TypeFactory,PolymorphicTypeValidator)",Constructor,No Comment,"public XmlClassNameIdResolver(JavaType baseType, TypeFactory typeFactory, PolymorphicTypeValidator ptv) {\n    super(baseType, typeFactory, ptv);\n}","void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)","digraph cfg_init {\n	""1"" [label=""baseType := @parameter0: com.fasterxml.jackson.databind.JavaType""];\n	""2"" [label=""ptv := @parameter2: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(baseType, typeFactory, ptv)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver""];\n	""6"" [label=""typeFactory := @parameter1: com.fasterxml.jackson.databind.type.TypeFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver.idFromValue(Object),Method,No Comment,@Override\npublic String idFromValue(Object value) {\n    return encodeXmlClassName(super.idFromValue(value));\n},java.lang.String idFromValue(java.lang.Object),"digraph cfg_idFromValue {\n	""1"" [label=""$stack2 = specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver: java.lang.String idFromValue(java.lang.Object)>(value)""];\n	""2"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: java.lang.String encodeXmlClassName(java.lang.String)>($stack2)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver""];\n	""5"" [label=""value := @parameter0: java.lang.Object""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver.typeFromId(DatabindContext,String)",Method,No Comment,"@Override\npublic JavaType typeFromId(DatabindContext context, String id) throws IOException {\n    return super.typeFromId(context, decodeXmlClassName(id));\n}","com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)","digraph cfg_typeFromId {\n	""1"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: java.lang.String decodeXmlClassName(java.lang.String)>(id)""];\n	""2"" [label=""$stack4 = specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver: com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext,java.lang.String)>(context, $stack3)""];\n	""3"" [label=""context := @parameter0: com.fasterxml.jackson.databind.DatabindContext""];\n	""4"" [label=""id := @parameter1: java.lang.String""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver.<init>(JavaType,TypeFactory,PolymorphicTypeValidator)",Constructor,No Comment,"public XmlMinimalClassNameIdResolver(JavaType baseType, TypeFactory typeFactory, PolymorphicTypeValidator ptv) {\n    super(baseType, typeFactory, ptv);\n}","void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)","digraph cfg_init {\n	""1"" [label=""baseType := @parameter0: com.fasterxml.jackson.databind.JavaType""];\n	""2"" [label=""ptv := @parameter2: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(baseType, typeFactory, ptv)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver""];\n	""6"" [label=""typeFactory := @parameter1: com.fasterxml.jackson.databind.type.TypeFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessor.encodeName(XmlName),Abstract Method,* Used during XML serialization.\n     * <p>\n     * This method should process the provided {@link XmlName} and\n     * escape / encode invalid XML characters.\n     *\n     * @param name The name to encode,void encodeName(XmlName name);,void encodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),digraph cfg_encodeName {\n}\n,default
com.fasterxml.jackson.dataformat.xml.XmlNameProcessor.decodeName(XmlName),Abstract Method,"* Used during XML deserialization.\n     * <p>\n     * This method should process the provided {@link XmlName} and\n     * revert the encoding done in the {@link #encodeName(XmlName)}\n     * method.\n     * <p>\n     * Note: Depending on the use case, it is not always required (or\n     * even possible) to reverse an encoding with 100% accuracy.\n     *\n     * @param name The name to encode",void decodeName(XmlName name);,void decodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),digraph cfg_decodeName {\n}\n,default
com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName.<init>(),Constructor,No Comment,public XmlName() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.instance(AnnotationIntrospector,AnnotationIntrospector)",Method,No Comment,"public static XmlAnnotationIntrospector.Pair instance(AnnotationIntrospector a1, AnnotationIntrospector a2) {\n    return new XmlAnnotationIntrospector.Pair(a1, a2);\n}","com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair instance(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector)","digraph cfg_instance {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair""];\n	""2"" [label=""a1 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""3"" [label=""a2 := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""4"" [label=""return $stack2""];\n	""5"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector)>(a1, a2)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n","public , static "
"com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.findNamespace(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic String findNamespace(MapperConfig<?> config, Annotated ann) {\n    String value = (_xmlPrimary == null) ? null : _xmlPrimary.findNamespace(config, ann);\n    if ((value == null) && (_xmlSecondary != null)) {\n        value = _xmlSecondary.findNamespace(config, ann);\n    }\n    return value;\n}","java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_findNamespace {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""4"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""5"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 != null""];\n	""9"" [label=""if $stack6 == null""];\n	""10"" [label=""if value != null""];\n	""11"" [label=""return value""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair""];\n	""13"" [label=""value = interfaceinvoke $stack5.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""14"" [label=""value = interfaceinvoke $stack7.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""15"" [label=""value = null""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_goto""];\n	""8"" -> ""15""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.isOutputAsAttribute(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsAttribute(MapperConfig<?> config, Annotated ann) {\n    Boolean value = (_xmlPrimary == null) ? null : _xmlPrimary.isOutputAsAttribute(config, ann);\n    if ((value == null) && (_xmlSecondary != null)) {\n        value = _xmlSecondary.isOutputAsAttribute(config, ann);\n    }\n    return value;\n}","java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsAttribute {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""4"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""5"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 != null""];\n	""9"" [label=""if $stack6 == null""];\n	""10"" [label=""if value != null""];\n	""11"" [label=""return value""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair""];\n	""13"" [label=""value = interfaceinvoke $stack5.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""14"" [label=""value = interfaceinvoke $stack7.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""15"" [label=""value = null""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_goto""];\n	""8"" -> ""15""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.isOutputAsText(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsText(MapperConfig<?> config, Annotated ann) {\n    Boolean value = (_xmlPrimary == null) ? null : _xmlPrimary.isOutputAsText(config, ann);\n    if ((value == null) && (_xmlSecondary != null)) {\n        value = _xmlSecondary.isOutputAsText(config, ann);\n    }\n    return value;\n}","java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsText {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""4"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""5"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 != null""];\n	""9"" [label=""if $stack6 == null""];\n	""10"" [label=""if value != null""];\n	""11"" [label=""return value""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair""];\n	""13"" [label=""value = interfaceinvoke $stack5.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""14"" [label=""value = interfaceinvoke $stack7.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""15"" [label=""value = null""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_goto""];\n	""8"" -> ""15""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.isOutputAsCData(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsCData(MapperConfig<?> config, Annotated ann) {\n    Boolean value = (_xmlPrimary == null) ? null : _xmlPrimary.isOutputAsCData(config, ann);\n    if ((value == null) && (_xmlSecondary != null)) {\n        value = _xmlSecondary.isOutputAsCData(config, ann);\n    }\n    return value;\n}","java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsCData {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary>""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""4"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary>""];\n	""5"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 != null""];\n	""9"" [label=""if $stack6 == null""];\n	""10"" [label=""if value != null""];\n	""11"" [label=""return value""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair""];\n	""13"" [label=""value = interfaceinvoke $stack5.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""14"" [label=""value = interfaceinvoke $stack7.<com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions: java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(config, ann)""];\n	""15"" [label=""value = null""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_true""];\n	""10"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_goto""];\n	""8"" -> ""15""[label=""cfg_false""];\n	""8"" -> ""2""[label=""cfg_true""];\n	""9"" -> ""11""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair.<init>(AnnotationIntrospector,AnnotationIntrospector)",Constructor,No Comment,"public Pair(AnnotationIntrospector p, AnnotationIntrospector s) {\n    super(p, s);\n    if (p instanceof AnnotationIntrospector.XmlExtensions) {\n        _xmlPrimary = (AnnotationIntrospector.XmlExtensions) p;\n    } else {\n        _xmlPrimary = null;\n    }\n    if (s instanceof AnnotationIntrospector.XmlExtensions) {\n        _xmlSecondary = (AnnotationIntrospector.XmlExtensions) s;\n    } else {\n        _xmlSecondary = null;\n    }\n}","void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector)","digraph cfg_init {\n	""1"" [label=""$stack3 = p instanceof com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions""];\n	""2"" [label=""$stack4 = s instanceof com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions""];\n	""3"" [label=""$stack5 = (com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions) s""];\n	""4"" [label=""$stack6 = (com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions) p""];\n	""5"" [label=""goto""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""p := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""10"" [label=""return""];\n	""11"" [label=""s := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector""];\n	""12"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair: void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector)>(p, s)""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary> = $stack6""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlPrimary> = null""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary> = $stack5""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector$Pair: com.fasterxml.jackson.databind.AnnotationIntrospector$XmlExtensions _xmlSecondary> = null""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_goto""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""15""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""17""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.reset(int,int,int)",Method,No Comment,"protected final void reset(int type, int lineNr, int colNr) {\n    _type = type;\n    _index = -1;\n    _lineNr = lineNr;\n    _columnNr = colNr;\n    _currentName = null;\n    _currentValue = null;\n    _namesToWrap = null;\n    // _nestingDepth fine as is, same level for reuse\n}","void reset(int,int,int)","digraph cfg_reset {\n	""1"" [label=""colNr := @parameter2: int""];\n	""2"" [label=""lineNr := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _columnNr> = colNr""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index> = -1""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _lineNr> = lineNr""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _type> = type""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.Object _currentValue> = null""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String _currentName> = null""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.util.Set _namesToWrap> = null""];\n	""12"" [label=""type := @parameter0: int""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n","protected , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.getCurrentValue(),Method,No Comment,@Override\npublic Object getCurrentValue() {\n    return _currentValue;\n},java.lang.Object getCurrentValue(),"digraph cfg_getCurrentValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.Object _currentValue>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.setCurrentValue(Object),Method,No Comment,@Override\npublic void setCurrentValue(Object v) {\n    _currentValue = v;\n},void setCurrentValue(java.lang.Object),"digraph cfg_setCurrentValue {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""3"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.Object _currentValue> = v""];\n	""4"" [label=""v := @parameter0: java.lang.Object""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createRootContext(int,int)",Method,No Comment,"public static XmlReadContext createRootContext(int lineNr, int colNr) {\n    return new XmlReadContext(null, 0, TYPE_ROOT, lineNr, colNr);\n}","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createRootContext(int,int)","digraph cfg_createRootContext {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""2"" [label=""colNr := @parameter1: int""];\n	""3"" [label=""lineNr := @parameter0: int""];\n	""4"" [label=""return $stack2""];\n	""5"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,int,int,int,int)>(null, 0, 0, lineNr, colNr)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createRootContext(),Method,No Comment,"public static XmlReadContext createRootContext() {\n    return new XmlReadContext(null, 0, TYPE_ROOT, 1, 0);\n}",com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createRootContext(),"digraph cfg_createRootContext {\n	""1"" [label=""$stack0 = new com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""2"" [label=""return $stack0""];\n	""3"" [label=""specialinvoke $stack0.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,int,int,int,int)>(null, 0, 0, 1, 0)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createChildArrayContext(int,int)",Method,No Comment,"public final XmlReadContext createChildArrayContext(int lineNr, int colNr) {\n    // not needed for Object, but does not hurt so no need to check curr type\n    ++_index;\n    XmlReadContext ctxt = _child;\n    if (ctxt == null) {\n        _child = ctxt = new XmlReadContext(this, _nestingDepth + 1, TYPE_ARRAY, lineNr, colNr);\n        return ctxt;\n    }\n    ctxt.reset(TYPE_ARRAY, lineNr, colNr);\n    return ctxt;\n}","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildArrayContext(int,int)","digraph cfg_createChildArrayContext {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index>""];\n	""2"" [label=""$stack5 = $stack4 + 1""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _nestingDepth>""];\n	""4"" [label=""$stack7 = $stack6 + 1""];\n	""5"" [label=""$stack8 = new com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""6"" [label=""colNr := @parameter1: int""];\n	""7"" [label=""ctxt = $stack8""];\n	""8"" [label=""ctxt = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _child>""];\n	""9"" [label=""if ctxt != null""];\n	""10"" [label=""lineNr := @parameter0: int""];\n	""11"" [label=""return ctxt""];\n	""12"" [label=""return ctxt""];\n	""13"" [label=""specialinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,int,int,int,int)>(this, $stack7, 1, lineNr, colNr)""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _child> = $stack8""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index> = $stack5""];\n	""17"" [label=""virtualinvoke ctxt.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void reset(int,int,int)>(1, lineNr, colNr)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""8""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n","public , final "
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.createChildObjectContext(int,int)",Method,No Comment,"public final XmlReadContext createChildObjectContext(int lineNr, int colNr) {\n    // not needed for Object, but does not hurt so no need to check curr type\n    ++_index;\n    XmlReadContext ctxt = _child;\n    if (ctxt == null) {\n        _child = ctxt = new XmlReadContext(this, TYPE_OBJECT, lineNr, colNr);\n        return ctxt;\n    }\n    ctxt.reset(TYPE_OBJECT, lineNr, colNr);\n    return ctxt;\n}","com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)","digraph cfg_createChildObjectContext {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index>""];\n	""2"" [label=""$stack5 = $stack4 + 1""];\n	""3"" [label=""$stack6 = new com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""4"" [label=""colNr := @parameter1: int""];\n	""5"" [label=""ctxt = $stack6""];\n	""6"" [label=""ctxt = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _child>""];\n	""7"" [label=""if ctxt != null""];\n	""8"" [label=""lineNr := @parameter0: int""];\n	""9"" [label=""return ctxt""];\n	""10"" [label=""return ctxt""];\n	""11"" [label=""specialinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,int,int,int)>(this, 2, lineNr, colNr)""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _child> = $stack6""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index> = $stack5""];\n	""15"" [label=""virtualinvoke ctxt.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void reset(int,int,int)>(2, lineNr, colNr)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.getCurrentName(),Method,No Comment,@Override\npublic final String getCurrentName() {\n    return _currentName;\n},java.lang.String getCurrentName(),"digraph cfg_getCurrentName {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String _currentName>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.hasCurrentName(),Method,@since 2.9,@Override\npublic boolean hasCurrentName() {\n    return _currentName != null;\n},boolean hasCurrentName(),"digraph cfg_hasCurrentName {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String _currentName>""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.getParent(),Method,No Comment,@Override\npublic final XmlReadContext getParent() {\n    return _parent;\n},com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent(),"digraph cfg_getParent {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parent>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.startLocation(ContentReference),Method,* @return Location pointing to the point where the context\n     *   start marker was found,"@Override\npublic final JsonLocation startLocation(ContentReference srcRef) {\n    // We don't keep track of offsets at this level (only reader does)\n    long totalChars = -1L;\n    return new JsonLocation(srcRef, totalChars, _lineNr, _columnNr);\n}",com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference),"digraph cfg_startLocation {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _columnNr>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _lineNr>""];\n	""3"" [label=""$stack6 = new com.fasterxml.jackson.core.JsonLocation""];\n	""4"" [label=""return $stack6""];\n	""5"" [label=""specialinvoke $stack6.<com.fasterxml.jackson.core.JsonLocation: void <init>(com.fasterxml.jackson.core.io.ContentReference,long,int,int)>(srcRef, totalChars, $stack5, $stack4)""];\n	""6"" [label=""srcRef := @parameter0: com.fasterxml.jackson.core.io.ContentReference""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""8"" [label=""totalChars = -1L""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.valueStarted(),Method,"* Method called to mark start of new value, mostly to update `index`\n     * for Array and Root contexts.\n     *\n     * @since 2.12",public final void valueStarted() {\n    ++_index;\n},void valueStarted(),"digraph cfg_valueStarted {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index>""];\n	""2"" [label=""$stack2 = $stack1 + 1""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index> = $stack2""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.setCurrentName(String),Method,No Comment,public void setCurrentName(String name) {\n    _currentName = name;\n},void setCurrentName(java.lang.String),"digraph cfg_setCurrentName {\n	""1"" [label=""name := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String _currentName> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.setNamesToWrap(Set),Method,No Comment,public void setNamesToWrap(Set<String> namesToWrap) {\n    _namesToWrap = namesToWrap;\n},void setNamesToWrap(java.util.Set),"digraph cfg_setNamesToWrap {\n	""1"" [label=""namesToWrap := @parameter0: java.util.Set""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.util.Set _namesToWrap> = namesToWrap""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.shouldWrap(String),Method,@since 2.11.1,public boolean shouldWrap(String localName) {\n    return (_namesToWrap != null) && _namesToWrap.contains(localName);\n},boolean shouldWrap(java.lang.String),"digraph cfg_shouldWrap {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.util.Set _namesToWrap>""];\n	""2"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.util.Set _namesToWrap>""];\n	""3"" [label=""$stack4 = interfaceinvoke $stack3.<java.util.Set: boolean contains(java.lang.Object)>(localName)""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack2 == null""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""localName := @parameter0: java.lang.String""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.convertToArray(),Method,No Comment,protected void convertToArray() {\n    _type = TYPE_ARRAY;\n},void convertToArray(),"digraph cfg_convertToArray {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""3"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _type> = 1""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.toString(),Method,"* Overridden to provide developer readable ""JsonPath"" representation\n     * of the context.","@Override\npublic final String toString() {\n    StringBuilder sb = new StringBuilder(64);\n    switch(_type) {\n        case TYPE_ROOT:\n            sb.append(""/"");\n            break;\n        case TYPE_ARRAY:\n            sb.append('[');\n            sb.append(getCurrentIndex());\n            sb.append(']');\n            break;\n        case TYPE_OBJECT:\n            sb.append('{');\n            if (_currentName != null) {\n                sb.append('""');\n                CharTypes.appendQuoted(sb, _currentName);\n                sb.append('""');\n            } else {\n                sb.append('?');\n            }\n            sb.append('}');\n            break;\n    }\n    return sb.toString();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _type>""];\n	""3"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String _currentName>""];\n	""4"" [label=""$stack5 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String _currentName>""];\n	""6"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int getCurrentIndex()>()""];\n	""7"" [label=""goto""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack4 == null""];\n	""11"" [label=""return $stack5""];\n	""12"" [label=""sb = $stack2""];\n	""13"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>(int)>(64)""];\n	""14"" [label=""staticinvoke <com.fasterxml.jackson.core.io.CharTypes: void appendQuoted(java.lang.StringBuilder,java.lang.String)>(sb, $stack6)""];\n	""15"" [label=""switch($stack3) \{     case 0:     case 1:     case 2:     default:  \}""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""17"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123)""];\n	""18"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125)""];\n	""19"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)""];\n	""20"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)""];\n	""21"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63)""];\n	""22"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91)""];\n	""23"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)""];\n	""24"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack7)""];\n	""25"" [label=""virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""/\"")""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_false""];\n	""10"" -> ""21""[label=""cfg_true""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_switch""];\n	""15"" -> ""22""[label=""cfg_switch""];\n	""15"" -> ""25""[label=""cfg_switch""];\n	""15"" -> ""4""[label=""cfg_switch""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""6""[label=""cfg_next""];\n	""23"" -> ""8""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_goto""];\n	""9"" -> ""18""[label=""cfg_goto""];\n}\n","public , final "
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.<init>(XmlReadContext,int,int,int,int)",Constructor,* @since 2.18,"public XmlReadContext(XmlReadContext parent, int nestingDepth, int type, int lineNr, int colNr) {\n    super();\n    _type = type;\n    _parent = parent;\n    _lineNr = lineNr;\n    _columnNr = colNr;\n    _index = -1;\n    _nestingDepth = nestingDepth;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,int,int,int,int)","digraph cfg_init {\n	""1"" [label=""colNr := @parameter4: int""];\n	""2"" [label=""lineNr := @parameter3: int""];\n	""3"" [label=""nestingDepth := @parameter1: int""];\n	""4"" [label=""parent := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<com.fasterxml.jackson.core.JsonStreamContext: void <init>()>()""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _child> = null""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parent> = parent""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _columnNr> = colNr""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _index> = -1""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _lineNr> = lineNr""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _nestingDepth> = nestingDepth""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _type> = type""];\n	""15"" [label=""type := @parameter2: int""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext.<init>(XmlReadContext,int,int,int)",Constructor,* @deprecated Since 2.18,"// since 2.18\n@Deprecated\npublic XmlReadContext(XmlReadContext parent, int type, int lineNr, int colNr) {\n    this(parent, (parent == null) ? 0 : parent._nestingDepth + 1, type, lineNr, colNr);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,int,int,int)","digraph cfg_init {\n	""1"" [label=""$stack5 = parent.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: int _nestingDepth>""];\n	""2"" [label=""$stack6 = $stack5 + 1""];\n	""3"" [label=""$stack6 = 0""];\n	""4"" [label=""colNr := @parameter3: int""];\n	""5"" [label=""goto""];\n	""6"" [label=""if parent != null""];\n	""7"" [label=""lineNr := @parameter2: int""];\n	""8"" [label=""parent := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""9"" [label=""return""];\n	""10"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext,int,int,int,int)>(parent, $stack6, type, lineNr, colNr)""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext""];\n	""12"" [label=""type := @parameter1: int""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_goto""];\n	""6"" -> ""1""[label=""cfg_true""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""12""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.newDelegatingInstance(JsonDeserializer),Method,No Comment,"@Override\nprotected JsonDeserializer<?> newDelegatingInstance(JsonDeserializer<?> newDelegatee0) {\n    // default not enough, as we need to create a new wrapping deserializer\n    // even if delegatee does not change\n    throw new IllegalStateException(""Internal error: should never get called"");\n}",com.fasterxml.jackson.databind.JsonDeserializer newDelegatingInstance(com.fasterxml.jackson.databind.JsonDeserializer),"digraph cfg_newDelegatingInstance {\n	""1"" [label=""$stack2 = new java.lang.IllegalStateException""];\n	""2"" [label=""newDelegatee0 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer""];\n	""3"" [label=""specialinvoke $stack2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\""Internal error: should never get called\"")""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""5"" [label=""throw $stack2""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.createContextual(DeserializationContext,BeanProperty)",Method,No Comment,"@Override\npublic JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException {\n    return new XmlTextDeserializer(_verifyDeserType(_delegatee), _xmlTextPropertyIndex);\n}","com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)","digraph cfg_createContextual {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: int _xmlTextPropertyIndex>""];\n	""3"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase _verifyDeserType(com.fasterxml.jackson.databind.JsonDeserializer)>($stack3)""];\n	""4"" [label=""$stack6 = new com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""5"" [label=""ctxt := @parameter0: com.fasterxml.jackson.databind.DeserializationContext""];\n	""6"" [label=""property := @parameter1: com.fasterxml.jackson.databind.BeanProperty""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,int)>($stack5, $stack4)""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserialize(JsonParser,DeserializationContext)",Method,No Comment,"@Override\npublic Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n    if (p.getCurrentToken() == JsonToken.VALUE_STRING) {\n        Object bean = _valueInstantiator.createUsingDefault(ctxt);\n        _xmlTextProperty.deserializeAndSet(p, ctxt, bean);\n        return bean;\n    }\n    return _delegatee.deserialize(p, ctxt);\n}","java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)","digraph cfg_deserialize {\n	""1"" [label=""$stack4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""2"" [label=""$stack5 = virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>()""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(p, ctxt)""];\n	""5"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>""];\n	""6"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.SettableBeanProperty _xmlTextProperty>""];\n	""7"" [label=""bean = virtualinvoke $stack8.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>(ctxt)""];\n	""8"" [label=""ctxt := @parameter1: com.fasterxml.jackson.databind.DeserializationContext""];\n	""9"" [label=""if $stack5 != $stack4""];\n	""10"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""return bean""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""14"" [label=""virtualinvoke $stack9.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(p, ctxt, bean)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""5""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserialize(JsonParser,DeserializationContext,Object)",Method,No Comment,"@SuppressWarnings(""unchecked"")\n@Override\npublic Object deserialize(JsonParser p, DeserializationContext ctxt, Object bean) throws IOException {\n    if (p.getCurrentToken() == JsonToken.VALUE_STRING) {\n        _xmlTextProperty.deserializeAndSet(p, ctxt, bean);\n        return bean;\n    }\n    return ((JsonDeserializer<Object>) _delegatee).deserialize(p, ctxt, bean);\n}","java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)","digraph cfg_deserialize {\n	""1"" [label=""$stack4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""2"" [label=""$stack5 = virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken getCurrentToken()>()""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""4"" [label=""$stack7 = virtualinvoke $stack6.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(p, ctxt, bean)""];\n	""5"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.SettableBeanProperty _xmlTextProperty>""];\n	""6"" [label=""bean := @parameter2: java.lang.Object""];\n	""7"" [label=""ctxt := @parameter1: com.fasterxml.jackson.databind.DeserializationContext""];\n	""8"" [label=""if $stack5 != $stack4""];\n	""9"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""return bean""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""13"" [label=""virtualinvoke $stack8.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(p, ctxt, bean)""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",Method,No Comment,"@Override\npublic Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException {\n    return _delegatee.deserializeWithType(p, ctxt, typeDeserializer);\n}","java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)","digraph cfg_deserializeWithType {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(p, ctxt, typeDeserializer)""];\n	""3"" [label=""ctxt := @parameter1: com.fasterxml.jackson.databind.DeserializationContext""];\n	""4"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""7"" [label=""typeDeserializer := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer._verifyDeserType(JsonDeserializer),Method,No Comment,"protected BeanDeserializerBase _verifyDeserType(JsonDeserializer<?> deser) {\n    if (!(deser instanceof BeanDeserializerBase)) {\n        throw new IllegalArgumentException(""Can not change delegate to be of type "" + deser.getClass().getName());\n    }\n    return (BeanDeserializerBase) deser;\n}",com.fasterxml.jackson.databind.deser.BeanDeserializerBase _verifyDeserType(com.fasterxml.jackson.databind.JsonDeserializer),"digraph cfg__verifyDeserType {\n	""1"" [label=""$stack10 = new java.lang.IllegalArgumentException""];\n	""2"" [label=""$stack2 = deser instanceof com.fasterxml.jackson.databind.deser.BeanDeserializerBase""];\n	""3"" [label=""$stack3 = (com.fasterxml.jackson.databind.deser.BeanDeserializerBase) deser""];\n	""4"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack5 = virtualinvoke deser.<java.lang.Object: java.lang.Class getClass()>()""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.String getName()>()""];\n	""7"" [label=""$stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Can not change delegate to be of type \"")""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6)""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""deser := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer""];\n	""11"" [label=""if $stack2 != 0""];\n	""12"" [label=""return $stack3""];\n	""13"" [label=""specialinvoke $stack10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack9)""];\n	""14"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""16"" [label=""throw $stack10""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.<init>(BeanDeserializerBase,SettableBeanProperty)",Constructor,No Comment,"public XmlTextDeserializer(BeanDeserializerBase delegate, SettableBeanProperty prop) {\n    super(delegate);\n    _xmlTextProperty = prop;\n    _xmlTextPropertyIndex = prop.getPropertyIndex();\n    _valueInstantiator = delegate.getValueInstantiator();\n}","void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty)","digraph cfg_init {\n	""1"" [label=""$stack3 = virtualinvoke prop.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: int getPropertyIndex()>()""];\n	""2"" [label=""$stack4 = virtualinvoke delegate.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>()""];\n	""3"" [label=""delegate := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase""];\n	""4"" [label=""prop := @parameter1: com.fasterxml.jackson.databind.deser.SettableBeanProperty""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer: void <init>(com.fasterxml.jackson.databind.JsonDeserializer)>(delegate)""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.SettableBeanProperty _xmlTextProperty> = prop""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator> = $stack4""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: int _xmlTextPropertyIndex> = $stack3""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer.<init>(BeanDeserializerBase,int)",Constructor,No Comment,"public XmlTextDeserializer(BeanDeserializerBase delegate, int textPropIndex) {\n    super(delegate);\n    _xmlTextPropertyIndex = textPropIndex;\n    _valueInstantiator = delegate.getValueInstantiator();\n    _xmlTextProperty = delegate.findProperty(textPropIndex);\n}","void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,int)","digraph cfg_init {\n	""1"" [label=""$stack3 = virtualinvoke delegate.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>()""];\n	""2"" [label=""$stack4 = virtualinvoke delegate.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(int)>(textPropIndex)""];\n	""3"" [label=""delegate := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer: void <init>(com.fasterxml.jackson.databind.JsonDeserializer)>(delegate)""];\n	""6"" [label=""textPropIndex := @parameter1: int""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.SettableBeanProperty _xmlTextProperty> = $stack4""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator> = $stack3""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: int _xmlTextPropertyIndex> = textPropIndex""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.ElementWrappable.addVirtualWrapping(Set,boolean)",Abstract Method,"* Method that may be called to indicate that specified names\n     * (only local parts retained currently: this may be changed in\n     * future) should be considered ""auto-wrapping"", meaning that\n     * they will be doubled to contain two opening elements, two\n     * matching closing elements. This is needed for supporting\n     * handling of so-called ""unwrapped"" array types, something\n     * XML mappings like JAXB often use.","public void addVirtualWrapping(Set<String> namesToWrap0, boolean caseInsensitive);","void addVirtualWrapping(java.util.Set,boolean)",digraph cfg_addVirtualWrapping {\n}\n,public 
"com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchingWrapper(ElementWrapper,String,String)",Method,"* Factory method called to construct a new ""matching"" wrapper element,\n     * at level where virtual wrapping is needed.","public static ElementWrapper matchingWrapper(ElementWrapper parent, String wrapperLocalName, String wrapperNamespace) {\n    return new ElementWrapper(parent, wrapperLocalName, wrapperNamespace);\n}","com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper matchingWrapper(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,java.lang.String,java.lang.String)","digraph cfg_matchingWrapper {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""2"" [label=""parent := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: void <init>(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,java.lang.String,java.lang.String)>(parent, wrapperLocalName, wrapperNamespace)""];\n	""5"" [label=""wrapperLocalName := @parameter1: java.lang.String""];\n	""6"" [label=""wrapperNamespace := @parameter2: java.lang.String""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.intermediateWrapper(),Method,"* Factory method used for creating intermediate wrapper level, which\n     * is only used for purpose of keeping track of physical element\n     * nesting.","public ElementWrapper intermediateWrapper() {\n    return new ElementWrapper(this, null, null);\n}",com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper intermediateWrapper(),"digraph cfg_intermediateWrapper {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: void <init>(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,java.lang.String,java.lang.String)>(this, null, null)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.isMatching(),Method,No Comment,public boolean isMatching() {\n    return _wrapperName != null;\n},boolean isMatching(),"digraph cfg_isMatching {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName>""];\n	""2"" [label=""$stack2 = 0""];\n	""3"" [label=""$stack2 = 1""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack1 == null""];\n	""6"" [label=""return $stack2""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.getWrapperLocalName(),Method,No Comment,public String getWrapperLocalName() {\n    return _wrapperName;\n},java.lang.String getWrapperLocalName(),"digraph cfg_getWrapperLocalName {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.getWrapperNamespace(),Method,No Comment,public String getWrapperNamespace() {\n    return _wrapperNamespace;\n},java.lang.String getWrapperNamespace(),"digraph cfg_getWrapperNamespace {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperNamespace>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.getParent(),Method,No Comment,public ElementWrapper getParent() {\n    return _parent;\n},com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper getParent(),"digraph cfg_getParent {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _parent>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.matchesWrapper(String,String)",Method,No Comment,"public boolean matchesWrapper(String localName, String ns) {\n    // null means ""anything goes"", so:\n    if (_wrapperName == null) {\n        return true;\n    }\n    if (ns == null) {\n        ns = """";\n    }\n    return _wrapperName.equals(localName) && _wrapperNamespace.equals(ns);\n}","boolean matchesWrapper(java.lang.String,java.lang.String)","digraph cfg_matchesWrapper {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName>""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName>""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>(localName)""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperNamespace>""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>(ns)""];\n	""6"" [label=""$stack8 = 0""];\n	""7"" [label=""$stack8 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack3 != null""];\n	""10"" [label=""if $stack5 == 0""];\n	""11"" [label=""if $stack7 == 0""];\n	""12"" [label=""if ns != null""];\n	""13"" [label=""localName := @parameter0: java.lang.String""];\n	""14"" [label=""ns := @parameter1: java.lang.String""];\n	""15"" [label=""ns = \""\""""];\n	""16"" [label=""return $stack8""];\n	""17"" [label=""return 1""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""12"" -> ""15""[label=""cfg_false""];\n	""12"" -> ""2""[label=""cfg_true""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_goto""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""17""[label=""cfg_false""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.toString(),Method,No Comment,"@Override\npublic String toString() {\n    if (_parent == null) {\n        return ""Wrapper: ROOT, matching: "" + _wrapperName;\n    }\n    if (_wrapperName == null) {\n        return ""Wrapper: empty"";\n    }\n    return ""Wrapper: branch, matching: "" + _wrapperName;\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _parent>""];\n	""2"" [label=""$stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Wrapper: ROOT, matching: \"")""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9)""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName>""];\n	""6"" [label=""$stack3 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName>""];\n	""8"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Wrapper: branch, matching: \"")""];\n	""9"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4)""];\n	""10"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""11"" [label=""$stack8 = new java.lang.StringBuilder""];\n	""12"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName>""];\n	""13"" [label=""if $stack1 != null""];\n	""14"" [label=""if $stack2 != null""];\n	""15"" [label=""return \""Wrapper: empty\""""];\n	""16"" [label=""return $stack12""];\n	""17"" [label=""return $stack7""];\n	""18"" [label=""specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>()""];\n	""19"" [label=""specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>()""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""15""[label=""cfg_false""];\n	""14"" -> ""6""[label=""cfg_true""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.<init>(ElementWrapper),Constructor,No Comment,"private ElementWrapper(ElementWrapper parent) {\n    _parent = parent;\n    _wrapperName = null;\n    _wrapperNamespace = """";\n}",void <init>(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper),"digraph cfg_init {\n	""1"" [label=""parent := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _parent> = parent""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName> = null""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperNamespace> = \""\""""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper.<init>(ElementWrapper,String,String)",Constructor,No Comment,"private ElementWrapper(ElementWrapper parent, String wrapperLocalName, String wrapperNamespace) {\n    _parent = parent;\n    _wrapperName = wrapperLocalName;\n    _wrapperNamespace = (wrapperNamespace == null) ? """" : wrapperNamespace;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,java.lang.String,java.lang.String)","digraph cfg_init {\n	""1"" [label=""$stack4 = \""\""""];\n	""2"" [label=""$stack4 = wrapperNamespace""];\n	""3"" [label=""goto""];\n	""4"" [label=""if wrapperNamespace != null""];\n	""5"" [label=""parent := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _parent> = parent""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperName> = wrapperLocalName""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String _wrapperNamespace> = $stack4""];\n	""12"" [label=""wrapperLocalName := @parameter1: java.lang.String""];\n	""13"" [label=""wrapperNamespace := @parameter2: java.lang.String""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.version(),Method,No Comment,@Override\npublic Version version() {\n    return PackageVersion.VERSION;\n},com.fasterxml.jackson.core.Version version(),"digraph cfg_version {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.PackageVersion: com.fasterxml.jackson.core.Version VERSION>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getCodec(),Method,No Comment,@Override\npublic ObjectCodec getCodec() {\n    return _objectCodec;\n},com.fasterxml.jackson.core.ObjectCodec getCodec(),"digraph cfg_getCodec {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.setCodec(ObjectCodec),Method,No Comment,@Override\npublic void setCodec(ObjectCodec c) {\n    _objectCodec = c;\n},void setCodec(com.fasterxml.jackson.core.ObjectCodec),"digraph cfg_setCodec {\n	""1"" [label=""c := @parameter0: com.fasterxml.jackson.core.ObjectCodec""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = c""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.setXMLTextElementName(String),Method,* @since 2.1,public void setXMLTextElementName(String name) {\n    _cfgNameForTextElement = name;\n},void setXMLTextElementName(java.lang.String),"digraph cfg_setXMLTextElementName {\n	""1"" [label=""name := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _cfgNameForTextElement> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.requiresCustomCodec(),Method,"* XML format does require support from custom {@link ObjectCodec}\n     * (that is, {@link XmlMapper}), so need to return true here.\n     * \n     * @return True since XML format does require support from codec",@Override\npublic boolean requiresCustomCodec() {\n    return true;\n},boolean requiresCustomCodec(),"digraph cfg_requiresCustomCodec {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.canReadObjectId(),Method,No Comment,@Override\npublic boolean canReadObjectId() {\n    return false;\n},boolean canReadObjectId(),"digraph cfg_canReadObjectId {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.canReadTypeId(),Method,No Comment,@Override\npublic boolean canReadTypeId() {\n    return false;\n},boolean canReadTypeId(),"digraph cfg_canReadTypeId {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getReadCapabilities(),Method,No Comment,@Override\npublic JacksonFeatureSet<StreamReadCapability> getReadCapabilities() {\n    return XML_READ_CAPABILITIES;\n},com.fasterxml.jackson.core.util.JacksonFeatureSet getReadCapabilities(),"digraph cfg_getReadCapabilities {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.util.JacksonFeatureSet XML_READ_CAPABILITIES>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.enable(Feature),Method,No Comment,public FromXmlParser enable(Feature f) {\n    _formatFeatures |= f.getMask();\n    _xmlTokens.setFormatFeatures(_formatFeatures);\n    return this;\n},com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser enable(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature),"digraph cfg_enable {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""2"" [label=""$stack3 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: int getMask()>()""];\n	""3"" [label=""$stack4 = $stack2 | $stack3""];\n	""4"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""5"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""6"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature""];\n	""7"" [label=""return this""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures> = $stack4""];\n	""10"" [label=""virtualinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void setFormatFeatures(int)>($stack5)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.disable(Feature),Method,No Comment,public FromXmlParser disable(Feature f) {\n    _formatFeatures &= ~f.getMask();\n    _xmlTokens.setFormatFeatures(_formatFeatures);\n    return this;\n},com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser disable(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature),"digraph cfg_disable {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""2"" [label=""$stack3 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: int getMask()>()""];\n	""3"" [label=""$stack4 = $stack3 ^ -1""];\n	""4"" [label=""$stack5 = $stack2 & $stack4""];\n	""5"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""6"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""7"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature""];\n	""8"" [label=""return this""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures> = $stack5""];\n	""11"" [label=""virtualinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void setFormatFeatures(int)>($stack6)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isEnabled(Feature),Method,No Comment,public final boolean isEnabled(Feature f) {\n    return (_formatFeatures & f.getMask()) != 0;\n},boolean isEnabled(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature),"digraph cfg_isEnabled {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""2"" [label=""$stack3 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: int getMask()>()""];\n	""3"" [label=""$stack4 = $stack2 & $stack3""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n","public , final "
"com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.configure(Feature,boolean)",Method,No Comment,"public FromXmlParser configure(Feature f, boolean state) {\n    if (state) {\n        enable(f);\n    } else {\n        disable(f);\n    }\n    return this;\n}","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser configure(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature,boolean)","digraph cfg_configure {\n	""1"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature""];\n	""2"" [label=""goto""];\n	""3"" [label=""if state == 0""];\n	""4"" [label=""return this""];\n	""5"" [label=""state := @parameter1: boolean""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""7"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser disable(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature)>(f)""];\n	""8"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser enable(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature)>(f)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_goto""];\n	""3"" -> ""7""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getFormatFeatures(),Method,No Comment,@Override\npublic int getFormatFeatures() {\n    return _formatFeatures;\n},int getFormatFeatures(),"digraph cfg_getFormatFeatures {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.overrideFormatFeatures(int,int)",Method,No Comment,"@Override\npublic JsonParser overrideFormatFeatures(int values, int mask) {\n    _formatFeatures = (_formatFeatures & ~mask) | (values & mask);\n    _xmlTokens.setFormatFeatures(_formatFeatures);\n    return this;\n}","com.fasterxml.jackson.core.JsonParser overrideFormatFeatures(int,int)","digraph cfg_overrideFormatFeatures {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""2"" [label=""$stack4 = mask ^ -1""];\n	""3"" [label=""$stack5 = $stack3 & $stack4""];\n	""4"" [label=""$stack6 = values & mask""];\n	""5"" [label=""$stack7 = $stack5 | $stack6""];\n	""6"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""7"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""8"" [label=""mask := @parameter1: int""];\n	""9"" [label=""return this""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures> = $stack7""];\n	""12"" [label=""values := @parameter0: int""];\n	""13"" [label=""virtualinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void setFormatFeatures(int)>($stack8)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getStaxReader(),Method,"* Method that allows application direct access to underlying\n     * Stax {@link XMLStreamWriter}. Note that use of writer is\n     * discouraged, and may interfere with processing of this writer;\n     * however, occasionally it may be necessary.\n     *<p>\n     * Note: writer instance will always be of type\n     * {@link org.codehaus.stax2.XMLStreamWriter2} (including\n     * Typed Access API) so upcasts are safe.",public XMLStreamReader getStaxReader() {\n    return _xmlTokens.getXmlReader();\n},javax.xml.stream.XMLStreamReader getStaxReader(),"digraph cfg_getStaxReader {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 getXmlReader()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.addVirtualWrapping(Set,boolean)",Method,No Comment,"@Override\npublic void addVirtualWrapping(Set<String> namesToWrap0, boolean caseInsensitive) {\n    //System.out.printf(""addVirtualWrapping(%s) at '%s' [case-insensitive? %s]\n"", namesToWrap0, _parsingContext.pathAsPointer(), caseInsensitive);\n    final Set<String> namesToWrap = caseInsensitive ? CaseInsensitiveNameSet.construct(namesToWrap0) : namesToWrap0;\n    // 17-Sep-2012, tatu: Not 100% sure why, but this is necessary to avoid\n    //   problems with Lists-in-Lists properties\n    // 12-May-2020, tatu: But as per [dataformat-xml#86] NOT for root element\n    //   (would still like to know why work-around needed ever, but...)\n    if (!_parsingContext.inRoot() && !_parsingContext.getParent().inRoot()) {\n        String name = _xmlTokens.getLocalName();\n        if ((name != null) && namesToWrap.contains(name)) {\n            //System.out.println(""REPEAT from addVirtualWrapping() for '""+name+""'"");\n            _xmlTokens.repeatStartElement();\n        }\n    }\n    _parsingContext.setNamesToWrap(namesToWrap);\n}","void addVirtualWrapping(java.util.Set,boolean)","digraph cfg_addVirtualWrapping {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inRoot()>()""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""3"" [label=""$stack12 = interfaceinvoke namesToWrap.<java.util.Set: boolean contains(java.lang.Object)>(name)""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""5"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inRoot()>()""];\n	""7"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""8"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent()>()""];\n	""10"" [label=""caseInsensitive := @parameter1: boolean""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack10 != 0""];\n	""13"" [label=""if $stack12 == 0""];\n	""14"" [label=""if $stack6 != 0""];\n	""15"" [label=""if caseInsensitive == 0""];\n	""16"" [label=""if name == null""];\n	""17"" [label=""name = virtualinvoke $stack11.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getLocalName()>()""];\n	""18"" [label=""namesToWrap = namesToWrap0""];\n	""19"" [label=""namesToWrap = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet: com.fasterxml.jackson.dataformat.xml.util.CaseInsensitiveNameSet construct(java.util.Set)>(namesToWrap0)""];\n	""20"" [label=""namesToWrap0 := @parameter0: java.util.Set""];\n	""21"" [label=""return""];\n	""22"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""23"" [label=""virtualinvoke $stack13.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void repeatStartElement()>()""];\n	""24"" [label=""virtualinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setNamesToWrap(java.util.Set)>(namesToWrap)""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_goto""];\n	""12"" -> ""2""[label=""cfg_false""];\n	""12"" -> ""7""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""13"" -> ""7""[label=""cfg_true""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""14"" -> ""8""[label=""cfg_false""];\n	""15"" -> ""18""[label=""cfg_true""];\n	""15"" -> ""19""[label=""cfg_false""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""16"" -> ""7""[label=""cfg_true""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""5""[label=""cfg_next""];\n	""19"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_next""];\n	""22"" -> ""20""[label=""cfg_next""];\n	""23"" -> ""7""[label=""cfg_next""];\n	""24"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""24""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.currentName(),Method,* Method that can be called to get the name associated with\n     * the current event.,"@Override\npublic String currentName() throws IOException {\n    // start markers require information from parent\n    String name;\n    if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {\n        XmlReadContext parent = _parsingContext.getParent();\n        name = parent.getCurrentName();\n    } else {\n        name = _parsingContext.getCurrentName();\n    }\n    // sanity check\n    if (name == null) {\n        throw new IllegalStateException(""Missing name, in state: "" + _currToken);\n    }\n    return name;\n}",java.lang.String currentName(),"digraph cfg_currentName {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""2"" [label=""$stack11 = new java.lang.IllegalStateException""];\n	""3"" [label=""$stack12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""6"" [label=""$stack3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""7"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""8"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""9"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""11"" [label=""$stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Missing name, in state: \"")""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7)""];\n	""13"" [label=""goto""];\n	""14"" [label=""if $stack13 != $stack12""];\n	""15"" [label=""if $stack4 == $stack3""];\n	""16"" [label=""if name != null""];\n	""17"" [label=""name = virtualinvoke $stack14.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String getCurrentName()>()""];\n	""18"" [label=""name = virtualinvoke parent.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: java.lang.String getCurrentName()>()""];\n	""19"" [label=""parent = virtualinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent()>()""];\n	""20"" [label=""return name""];\n	""21"" [label=""specialinvoke $stack11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack10)""];\n	""22"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""24"" [label=""throw $stack11""];\n	""1"" -> ""21""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_goto""];\n	""14"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""8""[label=""cfg_false""];\n	""15"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""16"" -> ""2""[label=""cfg_false""];\n	""16"" -> ""20""[label=""cfg_true""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""24""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_next""];\n	""23"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""22""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getCurrentName(),Method,No Comment,// since 2.17\n@Deprecated\n@Override\npublic String getCurrentName() throws IOException {\n    return currentName();\n},java.lang.String getCurrentName(),"digraph cfg_getCurrentName {\n	""1"" [label=""$stack1 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String currentName()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.overrideCurrentName(String),Method,No Comment,"@Override\npublic void overrideCurrentName(String name) {\n    // Simple, but need to look for START_OBJECT/ARRAY's ""off-by-one"" thing:\n    XmlReadContext ctxt = _parsingContext;\n    if (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {\n        ctxt = ctxt.getParent();\n    }\n    ctxt.setCurrentName(name);\n}",void overrideCurrentName(java.lang.String),"digraph cfg_overrideCurrentName {\n	""1"" [label=""$stack3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""3"" [label=""$stack5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""5"" [label=""ctxt = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""6"" [label=""ctxt = virtualinvoke ctxt.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent()>()""];\n	""7"" [label=""if $stack4 == $stack3""];\n	""8"" [label=""if $stack6 != $stack5""];\n	""9"" [label=""name := @parameter0: java.lang.String""];\n	""10"" [label=""return""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""12"" [label=""virtualinvoke ctxt.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>(name)""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""7"" -> ""6""[label=""cfg_true""];\n	""8"" -> ""12""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.close(),Method,No Comment,"@Override\npublic void close() throws IOException {\n    if (!_closed) {\n        _closed = true;\n        try {\n            if (_ioContext.isResourceManaged() || isEnabled(JsonParser.Feature.AUTO_CLOSE_SOURCE)) {\n                _xmlTokens.closeCompletely();\n            } else {\n                _xmlTokens.close();\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsParseException(e, this);\n        } finally {\n            // Also, internal buffer(s) can now be released as well\n            _releaseBuffers();\n        }\n        _ioContext.close();\n    }\n}",void close(),"digraph cfg_close {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""2"" [label=""$stack11 := @caughtexception""];\n	""3"" [label=""$stack12 := @caughtexception""];\n	""4"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _closed>""];\n	""5"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.io.IOContext _ioContext>""];\n	""6"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>()""];\n	""7"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""8"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.io.IOContext _ioContext>""];\n	""9"" [label=""$stack8 = <com.fasterxml.jackson.core.JsonParser$Feature: com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE>""];\n	""10"" [label=""$stack9 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)>($stack8)""];\n	""11"" [label=""e = $stack12""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack3 != 0""];\n	""16"" [label=""if $stack5 != 0""];\n	""17"" [label=""if $stack9 == 0""];\n	""18"" [label=""l2 = $stack11""];\n	""19"" [label=""return""];\n	""20"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, this)""];\n	""21"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""22"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _closed> = 1""];\n	""23"" [label=""throw l2""];\n	""24"" [label=""virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void close()>()""];\n	""25"" [label=""virtualinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void closeCompletely()>()""];\n	""26"" [label=""virtualinvoke $stack7.<com.fasterxml.jackson.core.io.IOContext: void close()>()""];\n	""27"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _releaseBuffers()>()""];\n	""28"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _releaseBuffers()>()""];\n	""29"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _releaseBuffers()>()""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""1"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""17""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_except""];\n	""10"" -> ""3""[label=""cfg_except""];\n	""11"" -> ""2""[label=""cfg_except""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_except""];\n	""12"" -> ""27""[label=""cfg_goto""];\n	""12"" -> ""3""[label=""cfg_except""];\n	""13"" -> ""8""[label=""cfg_goto""];\n	""14"" -> ""8""[label=""cfg_goto""];\n	""15"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""22""[label=""cfg_false""];\n	""16"" -> ""2""[label=""cfg_except""];\n	""16"" -> ""3""[label=""cfg_except""];\n	""16"" -> ""7""[label=""cfg_true""];\n	""16"" -> ""9""[label=""cfg_false""];\n	""17"" -> ""1""[label=""cfg_true""];\n	""17"" -> ""2""[label=""cfg_except""];\n	""17"" -> ""3""[label=""cfg_except""];\n	""17"" -> ""7""[label=""cfg_false""];\n	""18"" -> ""28""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_except""];\n	""20"" -> ""29""[label=""cfg_next""];\n	""21"" -> ""4""[label=""cfg_next""];\n	""22"" -> ""5""[label=""cfg_next""];\n	""24"" -> ""2""[label=""cfg_except""];\n	""24"" -> ""27""[label=""cfg_next""];\n	""24"" -> ""3""[label=""cfg_except""];\n	""25"" -> ""12""[label=""cfg_next""];\n	""25"" -> ""2""[label=""cfg_except""];\n	""25"" -> ""3""[label=""cfg_except""];\n	""26"" -> ""19""[label=""cfg_next""];\n	""27"" -> ""14""[label=""cfg_next""];\n	""28"" -> ""23""[label=""cfg_next""];\n	""29"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_except""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_except""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_except""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""7"" -> ""2""[label=""cfg_except""];\n	""7"" -> ""25""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""26""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_except""];\n	""9"" -> ""3""[label=""cfg_except""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isClosed(),Method,No Comment,@Override\npublic boolean isClosed() {\n    return _closed;\n},boolean isClosed(),"digraph cfg_isClosed {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _closed>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getParsingContext(),Method,No Comment,@Override\npublic XmlReadContext getParsingContext() {\n    return _parsingContext;\n},com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParsingContext(),"digraph cfg_getParsingContext {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.currentTokenLocation(),Method,"* Method that return the <b>starting</b> location of the current\n     * token; that is, position of the first character from input\n     * that starts the current token.",@Override\npublic JsonLocation currentTokenLocation() {\n    return _xmlTokens.getTokenLocation();\n},com.fasterxml.jackson.core.JsonLocation currentTokenLocation(),"digraph cfg_currentTokenLocation {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.core.JsonLocation getTokenLocation()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.currentLocation(),Method,* Method that returns location of the last processed character;\n     * usually for error reporting purposes,@Override\npublic JsonLocation currentLocation() {\n    return _xmlTokens.getCurrentLocation();\n},com.fasterxml.jackson.core.JsonLocation currentLocation(),"digraph cfg_currentLocation {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getCurrentLocation(),Method,No Comment,// since 2.17\n@Deprecated\n@Override\npublic JsonLocation getCurrentLocation() {\n    return currentLocation();\n},com.fasterxml.jackson.core.JsonLocation getCurrentLocation(),"digraph cfg_getCurrentLocation {\n	""1"" [label=""$stack1 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonLocation currentLocation()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTokenLocation(),Method,No Comment,// since 2.17\n@Deprecated\n@Override\npublic JsonLocation getTokenLocation() {\n    return currentTokenLocation();\n},com.fasterxml.jackson.core.JsonLocation getTokenLocation(),"digraph cfg_getTokenLocation {\n	""1"" [label=""$stack1 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonLocation currentTokenLocation()>()""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isExpectedStartArrayToken(),Method,"* Since xml representation can not really distinguish between array\n     * and object starts (both are represented with elements), this method\n     * is overridden and taken to mean that expectation is that the current\n     * start element is to mean 'start array', instead of default of\n     * 'start object'.\n     *\n     * @throws UncheckedIOException if underlying {@link StreamReadConstraints} constraint fails","@Override\npublic boolean isExpectedStartArrayToken() {\n    JsonToken t = _currToken;\n    if (t == JsonToken.START_OBJECT) {\n        try {\n            _updateToken(JsonToken.START_ARRAY);\n        } catch (StreamConstraintsException e) {\n            throw new UncheckedIOException(e);\n        }\n        // Ok: must replace current context with array as well\n        _parsingContext.convertToArray();\n        //System.out.println("" FromXmlParser.isExpectedArrayStart(): OBJ->Array"");\n        // And just in case a field name was to be returned, wipe it\n        // 06-Jan-2015, tatu: Actually, could also be empty Object buffered; if so, convert...\n        if (_nextToken == JsonToken.END_OBJECT) {\n            _nextToken = JsonToken.END_ARRAY;\n        } else {\n            _nextToken = null;\n        }\n        // and last thing, [dataformat-xml#33], better ignore attributes\n        _xmlTokens.skipAttributes();\n        return true;\n    }\n    //System.out.println("" FromXmlParser.isExpectedArrayStart?: t=""+t);\n    return (t == JsonToken.START_ARRAY);\n}",boolean isExpectedStartArrayToken(),"digraph cfg_isExpectedStartArrayToken {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""2"" [label=""$stack11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>""];\n	""3"" [label=""$stack12 := @caughtexception""];\n	""4"" [label=""$stack13 = new java.io.UncheckedIOException""];\n	""5"" [label=""$stack3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""6"" [label=""$stack4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>""];\n	""7"" [label=""$stack5 = 0""];\n	""8"" [label=""$stack5 = 1""];\n	""9"" [label=""$stack6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>""];\n	""10"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""11"" [label=""$stack8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>""];\n	""12"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken>""];\n	""13"" [label=""e = $stack12""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""if $stack9 != $stack8""];\n	""18"" [label=""if t != $stack3""];\n	""19"" [label=""if t != $stack4""];\n	""20"" [label=""return $stack5""];\n	""21"" [label=""return 1""];\n	""22"" [label=""specialinvoke $stack13.<java.io.UncheckedIOException: void <init>(java.io.IOException)>(e)""];\n	""23"" [label=""t = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""24"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""25"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack11""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = null""];\n	""27"" [label=""throw $stack13""];\n	""28"" [label=""virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void skipAttributes()>()""];\n	""29"" [label=""virtualinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void convertToArray()>()""];\n	""30"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack6)""];\n	""1"" -> ""28""[label=""cfg_next""];\n	""10"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_goto""];\n	""15"" -> ""20""[label=""cfg_goto""];\n	""16"" -> ""1""[label=""cfg_goto""];\n	""17"" -> ""2""[label=""cfg_false""];\n	""17"" -> ""26""[label=""cfg_true""];\n	""18"" -> ""6""[label=""cfg_true""];\n	""18"" -> ""9""[label=""cfg_false""];\n	""19"" -> ""7""[label=""cfg_true""];\n	""19"" -> ""8""[label=""cfg_false""];\n	""2"" -> ""25""[label=""cfg_next""];\n	""22"" -> ""27""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""16""[label=""cfg_next""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""28"" -> ""21""[label=""cfg_next""];\n	""29"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""30"" -> ""14""[label=""cfg_next""];\n	""30"" -> ""3""[label=""cfg_except""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_except""];\n	""9"" -> ""30""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isExpectedNumberIntToken(),Method,"* Since xml representation can not really distinguish between different\n     * scalar types (numbers, booleans) -- they are all just Character Data,\n     * without schema -- we can try to infer type from intent here.\n     * The main benefit is avoiding checks for coercion.\n     *\n     * @throws UncheckedIOException if underlying {@link StreamReadConstraints} constraint fails","@Override\npublic boolean isExpectedNumberIntToken() {\n    JsonToken t = _currToken;\n    if (t == JsonToken.VALUE_STRING) {\n        final String text = _currText.trim();\n        final int len = _isIntNumber(text);\n        try {\n            if (len > 0) {\n                if (len <= 9) {\n                    _numberInt = NumberInput.parseInt(text);\n                    _numTypesValid = NR_INT;\n                    _updateToken(JsonToken.VALUE_NUMBER_INT);\n                    return true;\n                }\n                if (len <= 18) {\n                    // definitely in long range\n                    long l = NumberInput.parseLong(text);\n                    if (len == 10) {\n                        int asInt = (int) l;\n                        long l2 = (long) asInt;\n                        if (l == l2) {\n                            _numberInt = asInt;\n                            _numTypesValid = NR_INT;\n                            _updateToken(JsonToken.VALUE_NUMBER_INT);\n                            return true;\n                        }\n                    }\n                    _numberLong = l;\n                    _numTypesValid = NR_LONG;\n                    _updateToken(JsonToken.VALUE_NUMBER_INT);\n                    return true;\n                }\n                // Might still fit within `long`\n                if (len == 19) {\n                    final boolean stillLong;\n                    if (text.charAt(0) == '-') {\n                        stillLong = NumberInput.inLongRange(text.substring(1), true);\n                    } else {\n                        stillLong = NumberInput.inLongRange(text, false);\n                    }\n                    if (stillLong) {\n                        _numberLong = NumberInput.parseLong(text);\n                        _numTypesValid = NR_LONG;\n                        _updateToken(JsonToken.VALUE_NUMBER_INT);\n                        return true;\n                    }\n                }\n                // finally, need BigInteger\n                streamReadConstraints().validateIntegerLength(text.length());\n                _numberBigInt = NumberInput.parseBigInteger(text, isEnabled(StreamReadFeature.USE_FAST_BIG_NUMBER_PARSER));\n                _numTypesValid = NR_BIGINT;\n                _updateToken(JsonToken.VALUE_NUMBER_INT);\n                return true;\n            }\n        } catch (StreamConstraintsException e) {\n            // Ugh. This method in API ought to expose IOException\n            throw new UncheckedIOException(e);\n        }\n    }\n    return (t == JsonToken.VALUE_NUMBER_INT);\n}",boolean isExpectedNumberIntToken(),"digraph cfg_isExpectedNumberIntToken {\n	""1"" [label=""$stack10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>""];\n	""2"" [label=""$stack11 = 0""];\n	""3"" [label=""$stack11 = 1""];\n	""4"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""5"" [label=""$stack13 = virtualinvoke text.<java.lang.String: int length()>()""];\n	""6"" [label=""$stack14 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()>()""];\n	""7"" [label=""$stack15 = <com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.StreamReadFeature USE_FAST_BIG_NUMBER_PARSER>""];\n	""8"" [label=""$stack16 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)>($stack15)""];\n	""9"" [label=""$stack17 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: java.math.BigInteger parseBigInteger(java.lang.String,boolean)>(text, $stack16)""];\n	""10"" [label=""$stack18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>""];\n	""11"" [label=""$stack19 = 1""];\n	""12"" [label=""$stack20 = virtualinvoke text.<java.lang.String: char charAt(int)>(0)""];\n	""13"" [label=""$stack21 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(text)""];\n	""14"" [label=""$stack22 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>""];\n	""15"" [label=""$stack23 = 1""];\n	""16"" [label=""$stack24 = virtualinvoke text.<java.lang.String: java.lang.String substring(int)>(1)""];\n	""17"" [label=""$stack25 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>""];\n	""18"" [label=""$stack26 = 1""];\n	""19"" [label=""$stack27 = l cmp l2""];\n	""20"" [label=""$stack28 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>""];\n	""21"" [label=""$stack29 = 1""];\n	""22"" [label=""$stack30 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(text)""];\n	""23"" [label=""$stack31 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>""];\n	""24"" [label=""$stack32 = 1""];\n	""25"" [label=""$stack33 := @caughtexception""];\n	""26"" [label=""$stack34 = new java.io.UncheckedIOException""];\n	""27"" [label=""$stack9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""28"" [label=""asInt = (int) l""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""if $stack20 != 45""];\n	""33"" [label=""if $stack27 != 0""];\n	""34"" [label=""if l == 0""];\n	""35"" [label=""if len != 10""];\n	""36"" [label=""if len != 19""];\n	""37"" [label=""if len <= 0""];\n	""38"" [label=""if len > 18""];\n	""39"" [label=""if len > 9""];\n	""40"" [label=""if t != $stack10""];\n	""41"" [label=""if t != $stack9""];\n	""42"" [label=""l = $stack33""];\n	""43"" [label=""l = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: boolean inLongRange(java.lang.String,boolean)>($stack24, 1)""];\n	""44"" [label=""l = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: boolean inLongRange(java.lang.String,boolean)>(text, 0)""];\n	""45"" [label=""l = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(text)""];\n	""46"" [label=""l2 = (long) asInt""];\n	""47"" [label=""len = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _isIntNumber(java.lang.String)>(text)""];\n	""48"" [label=""return $stack11""];\n	""49"" [label=""return $stack19""];\n	""50"" [label=""return $stack23""];\n	""51"" [label=""return $stack26""];\n	""52"" [label=""return $stack29""];\n	""53"" [label=""return $stack32""];\n	""54"" [label=""specialinvoke $stack34.<java.io.UncheckedIOException: void <init>(java.io.IOException)>(l)""];\n	""55"" [label=""t = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""56"" [label=""text = virtualinvoke $stack12.<java.lang.String: java.lang.String trim()>()""];\n	""57"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""58"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = 1""];\n	""59"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = 1""];\n	""60"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = 2""];\n	""61"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = 2""];\n	""62"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = 4""];\n	""63"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt> = $stack30""];\n	""64"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt> = asInt""];\n	""65"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt> = $stack17""];\n	""66"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong> = $stack21""];\n	""67"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong> = l""];\n	""68"" [label=""throw $stack34""];\n	""69"" [label=""virtualinvoke $stack14.<com.fasterxml.jackson.core.StreamReadConstraints: void validateIntegerLength(int)>($stack13)""];\n	""70"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack18)""];\n	""71"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack22)""];\n	""72"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack25)""];\n	""73"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack28)""];\n	""74"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack31)""];\n	""1"" -> ""40""[label=""cfg_next""];\n	""10"" -> ""25""[label=""cfg_except""];\n	""10"" -> ""70""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_except""];\n	""11"" -> ""49""[label=""cfg_next""];\n	""12"" -> ""25""[label=""cfg_except""];\n	""12"" -> ""32""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_except""];\n	""13"" -> ""66""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_except""];\n	""14"" -> ""71""[label=""cfg_next""];\n	""15"" -> ""25""[label=""cfg_except""];\n	""15"" -> ""50""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_except""];\n	""16"" -> ""43""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_except""];\n	""17"" -> ""72""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_except""];\n	""18"" -> ""51""[label=""cfg_next""];\n	""19"" -> ""25""[label=""cfg_except""];\n	""19"" -> ""33""[label=""cfg_next""];\n	""2"" -> ""48""[label=""cfg_next""];\n	""20"" -> ""25""[label=""cfg_except""];\n	""20"" -> ""73""[label=""cfg_next""];\n	""21"" -> ""25""[label=""cfg_except""];\n	""21"" -> ""52""[label=""cfg_next""];\n	""22"" -> ""25""[label=""cfg_except""];\n	""22"" -> ""63""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_except""];\n	""23"" -> ""74""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_except""];\n	""24"" -> ""53""[label=""cfg_next""];\n	""25"" -> ""42""[label=""cfg_next""];\n	""26"" -> ""54""[label=""cfg_next""];\n	""27"" -> ""41""[label=""cfg_next""];\n	""28"" -> ""25""[label=""cfg_except""];\n	""28"" -> ""46""[label=""cfg_next""];\n	""29"" -> ""1""[label=""cfg_goto""];\n	""3"" -> ""31""[label=""cfg_next""];\n	""30"" -> ""25""[label=""cfg_except""];\n	""30"" -> ""34""[label=""cfg_goto""];\n	""31"" -> ""48""[label=""cfg_goto""];\n	""32"" -> ""16""[label=""cfg_false""];\n	""32"" -> ""25""[label=""cfg_except""];\n	""32"" -> ""44""[label=""cfg_true""];\n	""33"" -> ""25""[label=""cfg_except""];\n	""33"" -> ""64""[label=""cfg_false""];\n	""33"" -> ""67""[label=""cfg_true""];\n	""34"" -> ""13""[label=""cfg_false""];\n	""34"" -> ""25""[label=""cfg_except""];\n	""34"" -> ""6""[label=""cfg_true""];\n	""35"" -> ""25""[label=""cfg_except""];\n	""35"" -> ""28""[label=""cfg_false""];\n	""35"" -> ""67""[label=""cfg_true""];\n	""36"" -> ""12""[label=""cfg_false""];\n	""36"" -> ""25""[label=""cfg_except""];\n	""36"" -> ""6""[label=""cfg_true""];\n	""37"" -> ""25""[label=""cfg_except""];\n	""37"" -> ""29""[label=""cfg_true""];\n	""37"" -> ""39""[label=""cfg_false""];\n	""38"" -> ""25""[label=""cfg_except""];\n	""38"" -> ""36""[label=""cfg_true""];\n	""38"" -> ""45""[label=""cfg_false""];\n	""39"" -> ""22""[label=""cfg_false""];\n	""39"" -> ""25""[label=""cfg_except""];\n	""39"" -> ""38""[label=""cfg_true""];\n	""4"" -> ""56""[label=""cfg_next""];\n	""40"" -> ""2""[label=""cfg_true""];\n	""40"" -> ""3""[label=""cfg_false""];\n	""41"" -> ""1""[label=""cfg_true""];\n	""41"" -> ""4""[label=""cfg_false""];\n	""42"" -> ""26""[label=""cfg_next""];\n	""43"" -> ""25""[label=""cfg_except""];\n	""43"" -> ""30""[label=""cfg_next""];\n	""44"" -> ""25""[label=""cfg_except""];\n	""44"" -> ""34""[label=""cfg_next""];\n	""45"" -> ""25""[label=""cfg_except""];\n	""45"" -> ""35""[label=""cfg_next""];\n	""46"" -> ""19""[label=""cfg_next""];\n	""46"" -> ""25""[label=""cfg_except""];\n	""47"" -> ""37""[label=""cfg_next""];\n	""5"" -> ""25""[label=""cfg_except""];\n	""5"" -> ""69""[label=""cfg_next""];\n	""54"" -> ""68""[label=""cfg_next""];\n	""55"" -> ""27""[label=""cfg_next""];\n	""56"" -> ""47""[label=""cfg_next""];\n	""57"" -> ""55""[label=""cfg_next""];\n	""58"" -> ""23""[label=""cfg_next""];\n	""58"" -> ""25""[label=""cfg_except""];\n	""59"" -> ""20""[label=""cfg_next""];\n	""59"" -> ""25""[label=""cfg_except""];\n	""6"" -> ""25""[label=""cfg_except""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""60"" -> ""17""[label=""cfg_next""];\n	""60"" -> ""25""[label=""cfg_except""];\n	""61"" -> ""14""[label=""cfg_next""];\n	""61"" -> ""25""[label=""cfg_except""];\n	""62"" -> ""10""[label=""cfg_next""];\n	""62"" -> ""25""[label=""cfg_except""];\n	""63"" -> ""25""[label=""cfg_except""];\n	""63"" -> ""58""[label=""cfg_next""];\n	""64"" -> ""25""[label=""cfg_except""];\n	""64"" -> ""59""[label=""cfg_next""];\n	""65"" -> ""25""[label=""cfg_except""];\n	""65"" -> ""62""[label=""cfg_next""];\n	""66"" -> ""25""[label=""cfg_except""];\n	""66"" -> ""61""[label=""cfg_next""];\n	""67"" -> ""25""[label=""cfg_except""];\n	""67"" -> ""60""[label=""cfg_next""];\n	""69"" -> ""25""[label=""cfg_except""];\n	""69"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""25""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""11""[label=""cfg_next""];\n	""70"" -> ""25""[label=""cfg_except""];\n	""71"" -> ""15""[label=""cfg_next""];\n	""71"" -> ""25""[label=""cfg_except""];\n	""72"" -> ""18""[label=""cfg_next""];\n	""72"" -> ""25""[label=""cfg_except""];\n	""73"" -> ""21""[label=""cfg_next""];\n	""73"" -> ""25""[label=""cfg_except""];\n	""74"" -> ""24""[label=""cfg_next""];\n	""74"" -> ""25""[label=""cfg_except""];\n	""8"" -> ""25""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_except""];\n	""9"" -> ""65""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.nextToken(),Method,public JsonToken nextToken0() throws IOException,"@Override\npublic JsonToken nextToken() throws IOException {\n    _binaryValue = null;\n    _numTypesValid = NR_UNKNOWN;\n    //System.out.println(""FromXmlParser.nextToken0: _nextToken = ""+_nextToken);\n    if (_nextToken != null) {\n        final JsonToken t = _updateToken(_nextToken);\n        _nextToken = null;\n        switch(t) {\n            case START_OBJECT:\n                _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n                break;\n            case START_ARRAY:\n                _parsingContext = _parsingContext.createChildArrayContext(-1, -1);\n                break;\n            case END_OBJECT:\n            case END_ARRAY:\n                _parsingContext = _parsingContext.getParent();\n                break;\n            case FIELD_NAME:\n                // 29-Mar-2021, tatu: [dataformat-xml#442]: special case of leading\n                //    mixed text added\n                if (_nextIsLeadingMixed) {\n                    _nextIsLeadingMixed = false;\n                    _parsingContext.setCurrentName(_cfgNameForTextElement);\n                    _nextToken = JsonToken.VALUE_STRING;\n                } else {\n                    _parsingContext.setCurrentName(_xmlTokens.getLocalName());\n                }\n                break;\n            default:\n                // VALUE_STRING, VALUE_NULL\n                // 13-May-2020, tatu: [dataformat-xml#397]: advance `index` anyway; not\n                //    used for Object contexts, updated automatically by ""createChildXxxContext""\n                _parsingContext.valueStarted();\n        }\n        return t;\n    }\n    int token = _nextToken();\n    // Need to have a loop just because we may have to eat/convert\n    // a start-element that indicates an array element.\n    while (token == XmlTokenStream.XML_START_ELEMENT) {\n        // If we thought we might get leaf, no such luck\n        if (_mayBeLeaf) {\n            // leave _mayBeLeaf set, as we start a new context\n            _nextToken = JsonToken.FIELD_NAME;\n            _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n            return _updateToken(JsonToken.START_OBJECT);\n        }\n        if (_parsingContext.inArray()) {\n            // Yup: in array, so this element could be verified; but it won't be\n            // reported anyway, and we need to process following event.\n            token = _nextToken();\n            _mayBeLeaf = true;\n            continue;\n        }\n        String name = _xmlTokens.getLocalName();\n        _parsingContext.setCurrentName(name);\n        // Ok: virtual wrapping can be done by simply repeating current START_ELEMENT.\n        // Couple of ways to do it; but start by making _xmlTokens replay the thing...\n        if (_parsingContext.shouldWrap(name)) {\n            _xmlTokens.repeatStartElement();\n        }\n        _mayBeLeaf = true;\n        // Ok: in array context we need to skip reporting field names.\n        // But what's the best way to find next token?\n        return _updateToken(JsonToken.FIELD_NAME);\n    }\n    // Ok; beyond start element, what do we get?\n    while (true) {\n        switch(token) {\n            case XmlTokenStream.XML_END_ELEMENT:\n                // Simple, except that if this is a leaf, need to suppress end:\n                if (_mayBeLeaf) {\n                    _mayBeLeaf = false;\n                    if (_parsingContext.inArray()) {\n                        // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to\n                        //    expose as empty Object, not null\n                        _nextToken = JsonToken.END_OBJECT;\n                        _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n                        return _updateToken(JsonToken.START_OBJECT);\n                    }\n                    // 07-Sep-2019, tatu: for [dataformat-xml#353], must NOT return second null\n                    if (_currToken != JsonToken.VALUE_NULL) {\n                        // 13-May-2020, tatu: [dataformat-xml#397]: advance `index`\n                        _parsingContext.valueStarted();\n                        return _updateToken(JsonToken.VALUE_NULL);\n                    }\n                }\n                _updateToken(_parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT);\n                _parsingContext = _parsingContext.getParent();\n                return _currToken;\n            case XmlTokenStream.XML_ATTRIBUTE_NAME:\n                // If there was a chance of leaf node, no more...\n                if (_mayBeLeaf) {\n                    _mayBeLeaf = false;\n                    _nextToken = JsonToken.FIELD_NAME;\n                    _currText = _xmlTokens.getText();\n                    _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n                    return _updateToken(JsonToken.START_OBJECT);\n                }\n                _parsingContext.setCurrentName(_xmlTokens.getLocalName());\n                return _updateToken(JsonToken.FIELD_NAME);\n            case XmlTokenStream.XML_ATTRIBUTE_VALUE:\n                _currText = _xmlTokens.getText();\n                // 13-May-2020, tatu: [dataformat-xml#397]: advance `index`\n                _parsingContext.valueStarted();\n                return _updateToken(JsonToken.VALUE_STRING);\n            case XmlTokenStream.XML_TEXT:\n                _currText = _xmlTokens.getText();\n                if (_mayBeLeaf) {\n                    _mayBeLeaf = false;\n                    // One more refinement (pronounced like ""hack"") is that if\n                    // we had an empty String (or all white space), and we are\n                    // deserializing an array, we better hide the empty text.\n                    // Also: must skip following END_ELEMENT\n                    // 05-Jun-2020, tatu: ... if there is one; we may actually alternatively\n                    //   get START_ELEMENT for ""mixed content"" case; if so, need to change to\n                    //   expose ""XmlText"" as separate property\n                    token = _nextToken();\n                    if (token == XmlTokenStream.XML_END_ELEMENT) {\n                        if (_parsingContext.inArray()) {\n                            if (XmlTokenStream._allWs(_currText)) {\n                                // 06-Jan-2015, tatu: as per [dataformat-xml#180], need to\n                                //    expose as empty Object, not null (or, worse, as used to\n                                //    be done, by swallowing the token)\n                                _nextToken = JsonToken.END_OBJECT;\n                                _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n                                return _updateToken(JsonToken.START_OBJECT);\n                            }\n                        }\n                        return _updateToken(JsonToken.VALUE_STRING);\n                    }\n                    if (token != XmlTokenStream.XML_START_ELEMENT) {\n                        throw new JsonParseException(this, String.format(""Internal error: Expected END_ELEMENT (%d) or START_ELEMENT (%d), got event of type %d"", XmlTokenStream.XML_END_ELEMENT, XmlTokenStream.XML_START_ELEMENT, token));\n                    }\n                    // fall-through, except must create new context AND push back\n                    // START_ELEMENT we just saw:\n                    _xmlTokens.pushbackCurrentToken();\n                    _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n                }\n                // [dataformat-xml#177]: empty text may also need to be skipped\n                // but... [dataformat-xml#191]: looks like we can't short-cut, must\n                // loop over again\n                if (_parsingContext.inObject()) {\n                    if (_currToken == JsonToken.FIELD_NAME) {\n                        // 29-Mar-2021, tatu: [dataformat-xml#442]: need special handling for\n                        //    leading mixed content; requires 3-token sequence for which _nextToken\n                        //    along is not enough.\n                        _nextIsLeadingMixed = true;\n                        _nextToken = JsonToken.FIELD_NAME;\n                        return _updateToken(JsonToken.START_OBJECT);\n                    } else if (XmlTokenStream._allWs(_currText)) {\n                        token = _nextToken();\n                        continue;\n                    }\n                } else if (_parsingContext.inArray()) {\n                    // [dataformat-xml#319] Aaaaand for Arrays too\n                    if (XmlTokenStream._allWs(_currText)) {\n                        token = _nextToken();\n                        continue;\n                    }\n                    // 29-Mar-2021, tatu: This seems like an error condition...\n                    //   How should we indicate it? As of 2.13, report as unexpected state\n                    /*\n                    throw _constructError(\n""Unexpected non-whitespace text ('""+_currText+""') in Array context: should not occur (or should be handled)""\n);\n                    */\n                    // [dataformat-xml#509] 2.13 introduced a defect in which an Exception was thrown above, breaking\n                    // parsing of mixed content arrays (https://github.com/FasterXML/jackson-dataformat-xml/issues/509).\n                    // This exception case was removed to enable continued support of that functionality, but more\n                    // robust state handling may be in order.\n                    // See comment https://github.com/FasterXML/jackson-dataformat-xml/pull/604\n                }\n                // If not a leaf (or otherwise ignorable), need to transform into property...\n                _parsingContext.setCurrentName(_cfgNameForTextElement);\n                _nextToken = JsonToken.VALUE_STRING;\n                return _updateToken(JsonToken.FIELD_NAME);\n            case XmlTokenStream.XML_END:\n                return _updateTokenToNull();\n            default:\n                return _internalErrorUnknownToken(token);\n        }\n    }\n}",com.fasterxml.jackson.core.JsonToken nextToken(),"digraph cfg_nextToken {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""2"" [label=""$stack100 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack99)""];\n	""3"" [label=""$stack101 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken>""];\n	""4"" [label=""$stack102 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>""];\n	""5"" [label=""$stack103 = virtualinvoke t.<com.fasterxml.jackson.core.JsonToken: int ordinal()>()""];\n	""6"" [label=""$stack104 = $stack102[$stack103]""];\n	""7"" [label=""$stack105 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _nextIsLeadingMixed>""];\n	""8"" [label=""$stack106 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""9"" [label=""$stack107 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""10"" [label=""$stack108 = virtualinvoke $stack106.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getLocalName()>()""];\n	""11"" [label=""$stack109 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _cfgNameForTextElement>""];\n	""12"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""13"" [label=""$stack110 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""14"" [label=""$stack111 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""15"" [label=""$stack112 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""16"" [label=""$stack113 = virtualinvoke $stack112.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent()>()""];\n	""17"" [label=""$stack114 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""18"" [label=""$stack115 = virtualinvoke $stack114.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildArrayContext(int,int)>(-1, -1)""];\n	""19"" [label=""$stack116 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""20"" [label=""$stack117 = virtualinvoke $stack116.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""21"" [label=""$stack118 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""22"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _cfgNameForTextElement>""];\n	""23"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""24"" [label=""$stack14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""25"" [label=""$stack15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""26"" [label=""$stack16 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack15)""];\n	""27"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""28"" [label=""$stack18 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _allWs(java.lang.String)>($stack17)""];\n	""29"" [label=""$stack19 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""30"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""31"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""32"" [label=""$stack22 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _allWs(java.lang.String)>($stack21)""];\n	""33"" [label=""$stack23 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""34"" [label=""$stack24 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""35"" [label=""$stack25 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack24)""];\n	""36"" [label=""$stack26 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""37"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""38"" [label=""$stack28 = virtualinvoke $stack27.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""39"" [label=""$stack29 = newarray (java.lang.Object)[3]""];\n	""40"" [label=""$stack29[0] = $stack30""];\n	""41"" [label=""$stack29[1] = $stack31""];\n	""42"" [label=""$stack29[2] = $stack32""];\n	""43"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken>""];\n	""44"" [label=""$stack30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)""];\n	""45"" [label=""$stack31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)""];\n	""46"" [label=""$stack32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(t)""];\n	""47"" [label=""$stack33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\""Internal error: Expected END_ELEMENT (%d) or START_ELEMENT (%d), got event of type %d\"", $stack29)""];\n	""48"" [label=""$stack34 = new com.fasterxml.jackson.core.JsonParseException""];\n	""49"" [label=""$stack35 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""50"" [label=""$stack36 = virtualinvoke $stack35.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""51"" [label=""$stack37 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""52"" [label=""$stack38 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack37)""];\n	""53"" [label=""$stack39 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""54"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateTokenToNull()>()""];\n	""55"" [label=""$stack40 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _allWs(java.lang.String)>($stack39)""];\n	""56"" [label=""$stack41 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>""];\n	""57"" [label=""$stack42 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""58"" [label=""$stack43 = virtualinvoke $stack42.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""59"" [label=""$stack44 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""60"" [label=""$stack45 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack44)""];\n	""61"" [label=""$stack46 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""62"" [label=""$stack47 = virtualinvoke $stack46.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getText()>()""];\n	""63"" [label=""$stack48 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""64"" [label=""$stack49 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""65"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""66"" [label=""$stack50 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack49)""];\n	""67"" [label=""$stack51 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""68"" [label=""$stack52 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""69"" [label=""$stack53 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""70"" [label=""$stack54 = virtualinvoke $stack52.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getLocalName()>()""];\n	""71"" [label=""$stack55 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""72"" [label=""$stack56 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack55)""];\n	""73"" [label=""$stack57 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""74"" [label=""$stack58 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""75"" [label=""$stack59 = virtualinvoke $stack58.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getText()>()""];\n	""76"" [label=""$stack6 = virtualinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getText()>()""];\n	""77"" [label=""$stack60 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""78"" [label=""$stack61 = virtualinvoke $stack60.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""79"" [label=""$stack62 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""80"" [label=""$stack63 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack62)""];\n	""81"" [label=""$stack64 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""82"" [label=""$stack65 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""83"" [label=""$stack66 = virtualinvoke $stack65.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""84"" [label=""$stack67 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>""];\n	""85"" [label=""$stack67 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>""];\n	""86"" [label=""$stack68 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""87"" [label=""$stack69 = virtualinvoke $stack68.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent()>()""];\n	""88"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""89"" [label=""$stack70 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""90"" [label=""$stack71 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""91"" [label=""$stack72 = virtualinvoke $stack71.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""92"" [label=""$stack73 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>""];\n	""93"" [label=""$stack74 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""94"" [label=""$stack75 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""95"" [label=""$stack76 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>""];\n	""96"" [label=""$stack77 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack76)""];\n	""97"" [label=""$stack78 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>""];\n	""98"" [label=""$stack79 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""99"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""100"" [label=""$stack80 = virtualinvoke $stack79.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""101"" [label=""$stack81 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""102"" [label=""$stack82 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack81)""];\n	""103"" [label=""$stack83 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(t)""];\n	""104"" [label=""$stack84 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.Object _internalErrorUnknownToken(java.lang.Object)>($stack83)""];\n	""105"" [label=""$stack85 = (com.fasterxml.jackson.core.JsonToken) $stack84""];\n	""106"" [label=""$stack86 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""107"" [label=""$stack87 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""108"" [label=""$stack88 = virtualinvoke $stack87.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""109"" [label=""$stack89 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""110"" [label=""$stack9 = virtualinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inObject()>()""];\n	""111"" [label=""$stack90 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""112"" [label=""$stack91 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""113"" [label=""$stack92 = virtualinvoke $stack91.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean shouldWrap(java.lang.String)>(name)""];\n	""114"" [label=""$stack93 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""115"" [label=""$stack94 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack93)""];\n	""116"" [label=""$stack95 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""117"" [label=""$stack96 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""118"" [label=""$stack97 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""119"" [label=""$stack98 = virtualinvoke $stack97.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""120"" [label=""$stack99 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""121"" [label=""goto""];\n	""122"" [label=""goto""];\n	""123"" [label=""goto""];\n	""124"" [label=""goto""];\n	""125"" [label=""goto""];\n	""126"" [label=""goto""];\n	""127"" [label=""goto""];\n	""128"" [label=""goto""];\n	""129"" [label=""goto""];\n	""130"" [label=""if $stack105 == 0""];\n	""131"" [label=""if $stack11 == 0""];\n	""132"" [label=""if $stack18 == 0""];\n	""133"" [label=""if $stack20 != $stack19""];\n	""134"" [label=""if $stack22 == 0""];\n	""135"" [label=""if $stack3 == null""];\n	""136"" [label=""if $stack36 == 0""];\n	""137"" [label=""if $stack40 == 0""];\n	""138"" [label=""if $stack51 == 0""];\n	""139"" [label=""if $stack64 == 0""];\n	""140"" [label=""if $stack66 == 0""];\n	""141"" [label=""if $stack7 == 0""];\n	""142"" [label=""if $stack72 == 0""];\n	""143"" [label=""if $stack74 == $stack73""];\n	""144"" [label=""if $stack86 == 0""];\n	""145"" [label=""if $stack88 == 0""];\n	""146"" [label=""if $stack9 == 0""];\n	""147"" [label=""if $stack92 == 0""];\n	""148"" [label=""if t != 1""];\n	""149"" [label=""if t != 2""];\n	""150"" [label=""if t == 1""];\n	""151"" [label=""name = virtualinvoke $stack89.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getLocalName()>()""];\n	""152"" [label=""return $stack100""];\n	""153"" [label=""return $stack16""];\n	""154"" [label=""return $stack25""];\n	""155"" [label=""return $stack38""];\n	""156"" [label=""return $stack4""];\n	""157"" [label=""return $stack45""];\n	""158"" [label=""return $stack50""];\n	""159"" [label=""return $stack56""];\n	""160"" [label=""return $stack63""];\n	""161"" [label=""return $stack70""];\n	""162"" [label=""return $stack77""];\n	""163"" [label=""return $stack82""];\n	""164"" [label=""return $stack85""];\n	""165"" [label=""return $stack94""];\n	""166"" [label=""return t""];\n	""167"" [label=""specialinvoke $stack34.<com.fasterxml.jackson.core.JsonParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(this, $stack33)""];\n	""168"" [label=""switch($stack104) \{     case 1:     case 2:     case 3:     case 4:     case 5:     default:  \}""];\n	""169"" [label=""switch(t) \{     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     default:  \}""];\n	""170"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack101)""];\n	""171"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _nextToken()>()""];\n	""172"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _nextToken()>()""];\n	""173"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _nextToken()>()""];\n	""174"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _nextToken()>()""];\n	""175"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _nextToken()>()""];\n	""176"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""177"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 0""];\n	""178"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 0""];\n	""179"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 0""];\n	""180"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 1""];\n	""181"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 1""];\n	""182"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _nextIsLeadingMixed> = 0""];\n	""183"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _nextIsLeadingMixed> = 1""];\n	""184"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: byte[] _binaryValue> = null""];\n	""185"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack111""];\n	""186"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack14""];\n	""187"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack23""];\n	""188"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack41""];\n	""189"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack57""];\n	""190"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack78""];\n	""191"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack96""];\n	""192"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = null""];\n	""193"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack113""];\n	""194"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack115""];\n	""195"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack117""];\n	""196"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack28""];\n	""197"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack43""];\n	""198"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack61""];\n	""199"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack69""];\n	""200"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack80""];\n	""201"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack98""];\n	""202"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = 0""];\n	""203"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = $stack47""];\n	""204"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = $stack59""];\n	""205"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = $stack6""];\n	""206"" [label=""throw $stack34""];\n	""207"" [label=""virtualinvoke $stack107.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>($stack108)""];\n	""208"" [label=""virtualinvoke $stack110.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>($stack109)""];\n	""209"" [label=""virtualinvoke $stack118.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void valueStarted()>()""];\n	""210"" [label=""virtualinvoke $stack13.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>($stack12)""];\n	""211"" [label=""virtualinvoke $stack26.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void pushbackCurrentToken()>()""];\n	""212"" [label=""virtualinvoke $stack48.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void valueStarted()>()""];\n	""213"" [label=""virtualinvoke $stack53.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>($stack54)""];\n	""214"" [label=""virtualinvoke $stack75.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void valueStarted()>()""];\n	""215"" [label=""virtualinvoke $stack90.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>(name)""];\n	""216"" [label=""virtualinvoke $stack95.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void repeatStartElement()>()""];\n	""217"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack67)""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""207""[label=""cfg_next""];\n	""100"" -> ""200""[label=""cfg_next""];\n	""101"" -> ""102""[label=""cfg_next""];\n	""102"" -> ""163""[label=""cfg_next""];\n	""103"" -> ""104""[label=""cfg_next""];\n	""104"" -> ""105""[label=""cfg_next""];\n	""105"" -> ""164""[label=""cfg_next""];\n	""106"" -> ""144""[label=""cfg_next""];\n	""107"" -> ""108""[label=""cfg_next""];\n	""108"" -> ""145""[label=""cfg_next""];\n	""109"" -> ""151""[label=""cfg_next""];\n	""11"" -> ""208""[label=""cfg_next""];\n	""110"" -> ""146""[label=""cfg_next""];\n	""111"" -> ""215""[label=""cfg_next""];\n	""112"" -> ""113""[label=""cfg_next""];\n	""113"" -> ""147""[label=""cfg_next""];\n	""114"" -> ""115""[label=""cfg_next""];\n	""115"" -> ""165""[label=""cfg_next""];\n	""116"" -> ""216""[label=""cfg_next""];\n	""117"" -> ""191""[label=""cfg_next""];\n	""118"" -> ""119""[label=""cfg_next""];\n	""119"" -> ""201""[label=""cfg_next""];\n	""12"" -> ""131""[label=""cfg_next""];\n	""120"" -> ""2""[label=""cfg_next""];\n	""121"" -> ""166""[label=""cfg_goto""];\n	""122"" -> ""166""[label=""cfg_goto""];\n	""123"" -> ""166""[label=""cfg_goto""];\n	""124"" -> ""166""[label=""cfg_goto""];\n	""125"" -> ""166""[label=""cfg_goto""];\n	""126"" -> ""148""[label=""cfg_goto""];\n	""127"" -> ""217""[label=""cfg_goto""];\n	""128"" -> ""169""[label=""cfg_goto""];\n	""129"" -> ""169""[label=""cfg_goto""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""130"" -> ""182""[label=""cfg_false""];\n	""130"" -> ""9""[label=""cfg_true""];\n	""131"" -> ""23""[label=""cfg_true""];\n	""131"" -> ""27""[label=""cfg_false""];\n	""132"" -> ""175""[label=""cfg_false""];\n	""132"" -> ""23""[label=""cfg_true""];\n	""133"" -> ""183""[label=""cfg_false""];\n	""133"" -> ""31""[label=""cfg_true""];\n	""134"" -> ""174""[label=""cfg_false""];\n	""134"" -> ""23""[label=""cfg_true""];\n	""135"" -> ""171""[label=""cfg_true""];\n	""135"" -> ""3""[label=""cfg_false""];\n	""136"" -> ""51""[label=""cfg_true""];\n	""136"" -> ""53""[label=""cfg_false""];\n	""137"" -> ""51""[label=""cfg_true""];\n	""137"" -> ""56""[label=""cfg_false""];\n	""138"" -> ""178""[label=""cfg_false""];\n	""138"" -> ""69""[label=""cfg_true""];\n	""139"" -> ""177""[label=""cfg_false""];\n	""139"" -> ""82""[label=""cfg_true""];\n	""14"" -> ""185""[label=""cfg_next""];\n	""140"" -> ""84""[label=""cfg_false""];\n	""140"" -> ""85""[label=""cfg_true""];\n	""141"" -> ""179""[label=""cfg_false""];\n	""141"" -> ""99""[label=""cfg_true""];\n	""142"" -> ""93""[label=""cfg_true""];\n	""142"" -> ""97""[label=""cfg_false""];\n	""143"" -> ""82""[label=""cfg_true""];\n	""143"" -> ""94""[label=""cfg_false""];\n	""144"" -> ""107""[label=""cfg_true""];\n	""144"" -> ""117""[label=""cfg_false""];\n	""145"" -> ""109""[label=""cfg_true""];\n	""145"" -> ""172""[label=""cfg_false""];\n	""146"" -> ""1""[label=""cfg_true""];\n	""146"" -> ""30""[label=""cfg_false""];\n	""147"" -> ""116""[label=""cfg_false""];\n	""147"" -> ""181""[label=""cfg_true""];\n	""148"" -> ""106""[label=""cfg_false""];\n	""148"" -> ""169""[label=""cfg_true""];\n	""149"" -> ""150""[label=""cfg_true""];\n	""149"" -> ""49""[label=""cfg_false""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""150"" -> ""36""[label=""cfg_true""];\n	""150"" -> ""48""[label=""cfg_false""];\n	""151"" -> ""111""[label=""cfg_next""];\n	""16"" -> ""193""[label=""cfg_next""];\n	""167"" -> ""206""[label=""cfg_next""];\n	""168"" -> ""15""[label=""cfg_switch""];\n	""168"" -> ""17""[label=""cfg_switch""];\n	""168"" -> ""19""[label=""cfg_switch""];\n	""168"" -> ""21""[label=""cfg_switch""];\n	""168"" -> ""7""[label=""cfg_switch""];\n	""169"" -> ""103""[label=""cfg_switch""];\n	""169"" -> ""54""[label=""cfg_switch""];\n	""169"" -> ""61""[label=""cfg_switch""];\n	""169"" -> ""65""[label=""cfg_switch""];\n	""169"" -> ""67""[label=""cfg_switch""];\n	""169"" -> ""81""[label=""cfg_switch""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""170"" -> ""192""[label=""cfg_next""];\n	""171"" -> ""148""[label=""cfg_next""];\n	""172"" -> ""180""[label=""cfg_next""];\n	""173"" -> ""149""[label=""cfg_next""];\n	""174"" -> ""128""[label=""cfg_next""];\n	""175"" -> ""129""[label=""cfg_next""];\n	""176"" -> ""184""[label=""cfg_next""];\n	""177"" -> ""90""[label=""cfg_next""];\n	""178"" -> ""73""[label=""cfg_next""];\n	""179"" -> ""173""[label=""cfg_next""];\n	""18"" -> ""194""[label=""cfg_next""];\n	""180"" -> ""126""[label=""cfg_next""];\n	""181"" -> ""114""[label=""cfg_next""];\n	""182"" -> ""13""[label=""cfg_next""];\n	""183"" -> ""33""[label=""cfg_next""];\n	""184"" -> ""202""[label=""cfg_next""];\n	""185"" -> ""124""[label=""cfg_next""];\n	""186"" -> ""25""[label=""cfg_next""];\n	""187"" -> ""34""[label=""cfg_next""];\n	""188"" -> ""57""[label=""cfg_next""];\n	""189"" -> ""74""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""190"" -> ""98""[label=""cfg_next""];\n	""191"" -> ""118""[label=""cfg_next""];\n	""192"" -> ""4""[label=""cfg_next""];\n	""193"" -> ""123""[label=""cfg_next""];\n	""194"" -> ""122""[label=""cfg_next""];\n	""195"" -> ""121""[label=""cfg_next""];\n	""196"" -> ""99""[label=""cfg_next""];\n	""197"" -> ""59""[label=""cfg_next""];\n	""198"" -> ""79""[label=""cfg_next""];\n	""199"" -> ""89""[label=""cfg_next""];\n	""2"" -> ""152""[label=""cfg_next""];\n	""20"" -> ""195""[label=""cfg_next""];\n	""200"" -> ""101""[label=""cfg_next""];\n	""201"" -> ""120""[label=""cfg_next""];\n	""202"" -> ""43""[label=""cfg_next""];\n	""203"" -> ""63""[label=""cfg_next""];\n	""204"" -> ""77""[label=""cfg_next""];\n	""205"" -> ""88""[label=""cfg_next""];\n	""207"" -> ""125""[label=""cfg_next""];\n	""208"" -> ""14""[label=""cfg_next""];\n	""209"" -> ""166""[label=""cfg_next""];\n	""21"" -> ""209""[label=""cfg_next""];\n	""210"" -> ""24""[label=""cfg_next""];\n	""211"" -> ""37""[label=""cfg_next""];\n	""212"" -> ""64""[label=""cfg_next""];\n	""213"" -> ""71""[label=""cfg_next""];\n	""214"" -> ""95""[label=""cfg_next""];\n	""215"" -> ""112""[label=""cfg_next""];\n	""216"" -> ""181""[label=""cfg_next""];\n	""217"" -> ""86""[label=""cfg_next""];\n	""22"" -> ""210""[label=""cfg_next""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""186""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""153""[label=""cfg_next""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""28"" -> ""132""[label=""cfg_next""];\n	""29"" -> ""133""[label=""cfg_next""];\n	""3"" -> ""170""[label=""cfg_next""];\n	""30"" -> ""29""[label=""cfg_next""];\n	""31"" -> ""32""[label=""cfg_next""];\n	""32"" -> ""134""[label=""cfg_next""];\n	""33"" -> ""187""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""154""[label=""cfg_next""];\n	""36"" -> ""211""[label=""cfg_next""];\n	""37"" -> ""38""[label=""cfg_next""];\n	""38"" -> ""196""[label=""cfg_next""];\n	""39"" -> ""44""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""45""[label=""cfg_next""];\n	""41"" -> ""46""[label=""cfg_next""];\n	""42"" -> ""47""[label=""cfg_next""];\n	""43"" -> ""135""[label=""cfg_next""];\n	""44"" -> ""40""[label=""cfg_next""];\n	""45"" -> ""41""[label=""cfg_next""];\n	""46"" -> ""42""[label=""cfg_next""];\n	""47"" -> ""167""[label=""cfg_next""];\n	""48"" -> ""39""[label=""cfg_next""];\n	""49"" -> ""50""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""136""[label=""cfg_next""];\n	""51"" -> ""52""[label=""cfg_next""];\n	""52"" -> ""155""[label=""cfg_next""];\n	""53"" -> ""55""[label=""cfg_next""];\n	""54"" -> ""156""[label=""cfg_next""];\n	""55"" -> ""137""[label=""cfg_next""];\n	""56"" -> ""188""[label=""cfg_next""];\n	""57"" -> ""58""[label=""cfg_next""];\n	""58"" -> ""197""[label=""cfg_next""];\n	""59"" -> ""60""[label=""cfg_next""];\n	""6"" -> ""168""[label=""cfg_next""];\n	""60"" -> ""157""[label=""cfg_next""];\n	""61"" -> ""62""[label=""cfg_next""];\n	""62"" -> ""203""[label=""cfg_next""];\n	""63"" -> ""212""[label=""cfg_next""];\n	""64"" -> ""66""[label=""cfg_next""];\n	""65"" -> ""76""[label=""cfg_next""];\n	""66"" -> ""158""[label=""cfg_next""];\n	""67"" -> ""138""[label=""cfg_next""];\n	""68"" -> ""70""[label=""cfg_next""];\n	""69"" -> ""68""[label=""cfg_next""];\n	""7"" -> ""130""[label=""cfg_next""];\n	""70"" -> ""213""[label=""cfg_next""];\n	""71"" -> ""72""[label=""cfg_next""];\n	""72"" -> ""159""[label=""cfg_next""];\n	""73"" -> ""189""[label=""cfg_next""];\n	""74"" -> ""75""[label=""cfg_next""];\n	""75"" -> ""204""[label=""cfg_next""];\n	""76"" -> ""205""[label=""cfg_next""];\n	""77"" -> ""78""[label=""cfg_next""];\n	""78"" -> ""198""[label=""cfg_next""];\n	""79"" -> ""80""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""80"" -> ""160""[label=""cfg_next""];\n	""81"" -> ""139""[label=""cfg_next""];\n	""82"" -> ""83""[label=""cfg_next""];\n	""83"" -> ""140""[label=""cfg_next""];\n	""84"" -> ""127""[label=""cfg_next""];\n	""85"" -> ""217""[label=""cfg_next""];\n	""86"" -> ""87""[label=""cfg_next""];\n	""87"" -> ""199""[label=""cfg_next""];\n	""88"" -> ""141""[label=""cfg_next""];\n	""89"" -> ""161""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n	""90"" -> ""91""[label=""cfg_next""];\n	""91"" -> ""142""[label=""cfg_next""];\n	""92"" -> ""143""[label=""cfg_next""];\n	""93"" -> ""92""[label=""cfg_next""];\n	""94"" -> ""214""[label=""cfg_next""];\n	""95"" -> ""96""[label=""cfg_next""];\n	""96"" -> ""162""[label=""cfg_next""];\n	""97"" -> ""190""[label=""cfg_next""];\n	""98"" -> ""100""[label=""cfg_next""];\n	""99"" -> ""110""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.nextTextValue(),Method,* Method overridden to support more reliable deserialization of\n     * String collections.,"@Override\npublic String nextTextValue() throws IOException {\n    _binaryValue = null;\n    if (_nextToken != null) {\n        final JsonToken t = _updateToken(_nextToken);\n        _nextToken = null;\n        // expected case; yes, got a String\n        if (t == JsonToken.VALUE_STRING) {\n            // 13-May-2020, tatu: [dataformat-xml#397]: advance `index`\n            _parsingContext.valueStarted();\n            return _currText;\n        }\n        _updateState(t);\n        return null;\n    }\n    int token = _nextToken();\n    // mostly copied from 'nextToken()'\n    while (token == XmlTokenStream.XML_START_ELEMENT) {\n        if (_mayBeLeaf) {\n            _nextToken = JsonToken.FIELD_NAME;\n            _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n            _updateToken(JsonToken.START_OBJECT);\n            return null;\n        }\n        if (_parsingContext.inArray()) {\n            token = _nextToken();\n            _mayBeLeaf = true;\n            continue;\n        }\n        String name = _xmlTokens.getLocalName();\n        _parsingContext.setCurrentName(name);\n        if (_parsingContext.shouldWrap(name)) {\n            //System.out.println(""REPEAT from nextTextValue()"");\n            _xmlTokens.repeatStartElement();\n        }\n        _mayBeLeaf = true;\n        _updateToken(JsonToken.FIELD_NAME);\n        return null;\n    }\n    // Ok; beyond start element, what do we get?\n    switch(token) {\n        case XmlTokenStream.XML_END_ELEMENT:\n            if (_mayBeLeaf) {\n                _mayBeLeaf = false;\n                // 18-Mar-2023, tatu: [dataformat-xml#584 / #585] in 2.14 and before\n                //    returned VALUE_STRING on assumption we never expose `null`s if\n                //    asked text value -- but that seems incorrect. Hoping this won't\n                //    break anything in 2.15+\n                _updateToken(JsonToken.VALUE_NULL);\n                // 13-May-2020, tatu: [dataformat-xml#397]: advance `index`\n                _parsingContext.valueStarted();\n                return (_currText = null);\n            }\n            _updateToken(_parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT);\n            _parsingContext = _parsingContext.getParent();\n            break;\n        case XmlTokenStream.XML_ATTRIBUTE_NAME:\n            // If there was a chance of leaf node, no more...\n            if (_mayBeLeaf) {\n                _mayBeLeaf = false;\n                _nextToken = JsonToken.FIELD_NAME;\n                _currText = _xmlTokens.getText();\n                _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n                _updateToken(JsonToken.START_OBJECT);\n            } else {\n                _parsingContext.setCurrentName(_xmlTokens.getLocalName());\n                _updateToken(JsonToken.FIELD_NAME);\n            }\n            break;\n        case XmlTokenStream.XML_ATTRIBUTE_VALUE:\n            _updateToken(JsonToken.VALUE_STRING);\n            // 13-May-2020, tatu: [dataformat-xml#397]: advance `index`\n            _parsingContext.valueStarted();\n            return (_currText = _xmlTokens.getText());\n        case XmlTokenStream.XML_TEXT:\n            _currText = _xmlTokens.getText();\n            if (_mayBeLeaf) {\n                _mayBeLeaf = false;\n                // Also: must skip following END_ELEMENT\n                _skipEndElement();\n                // NOTE: this is different from nextToken() -- NO work-around\n                // for otherwise empty List/array\n                // 13-May-2020, tatu: [dataformat-xml#397]: advance `index`\n                _parsingContext.valueStarted();\n                _updateToken(JsonToken.VALUE_STRING);\n                return _currText;\n            }\n            // If not a leaf, need to transform into property...\n            _parsingContext.setCurrentName(_cfgNameForTextElement);\n            _nextToken = JsonToken.VALUE_STRING;\n            _updateToken(JsonToken.FIELD_NAME);\n            break;\n        case XmlTokenStream.XML_END:\n            _updateTokenToNull();\n        default:\n            return _internalErrorUnknownToken(token);\n    }\n    return null;\n}",java.lang.String nextTextValue(),"digraph cfg_nextTextValue {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _cfgNameForTextElement>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""3"" [label=""$stack12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""4"" [label=""$stack13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""6"" [label=""$stack15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""8"" [label=""$stack17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getText()>()""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""15"" [label=""$stack24 = virtualinvoke $stack22.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getLocalName()>()""];\n	""16"" [label=""$stack25 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""17"" [label=""$stack26 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""18"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""19"" [label=""$stack28 = virtualinvoke $stack27.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getText()>()""];\n	""20"" [label=""$stack29 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""21"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken>""];\n	""22"" [label=""$stack30 = virtualinvoke $stack29.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""23"" [label=""$stack31 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""24"" [label=""$stack32 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""25"" [label=""$stack33 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""26"" [label=""$stack34 = virtualinvoke $stack33.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""27"" [label=""$stack35 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>""];\n	""28"" [label=""$stack35 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>""];\n	""29"" [label=""$stack36 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""30"" [label=""$stack37 = virtualinvoke $stack36.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent()>()""];\n	""31"" [label=""$stack38 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>""];\n	""32"" [label=""$stack39 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""33"" [label=""$stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(t)""];\n	""34"" [label=""$stack40 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""35"" [label=""$stack41 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""36"" [label=""$stack42 = virtualinvoke $stack41.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""37"" [label=""$stack43 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""38"" [label=""$stack44 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""39"" [label=""$stack45 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""40"" [label=""$stack46 = virtualinvoke $stack45.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean shouldWrap(java.lang.String)>(name)""];\n	""41"" [label=""$stack47 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""42"" [label=""$stack48 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""43"" [label=""$stack49 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""44"" [label=""$stack5 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.Object _internalErrorUnknownToken(java.lang.Object)>($stack4)""];\n	""45"" [label=""$stack50 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""46"" [label=""$stack51 = virtualinvoke $stack50.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""47"" [label=""$stack52 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""48"" [label=""$stack53 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken>""];\n	""49"" [label=""$stack54 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""50"" [label=""$stack55 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""51"" [label=""$stack56 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""52"" [label=""$stack6 = (java.lang.String) $stack5""];\n	""53"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""54"" [label=""$stack8 = virtualinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getText()>()""];\n	""55"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf>""];\n	""56"" [label=""goto""];\n	""57"" [label=""goto""];\n	""58"" [label=""goto""];\n	""59"" [label=""goto""];\n	""60"" [label=""goto""];\n	""61"" [label=""goto""];\n	""62"" [label=""if $stack21 == 0""];\n	""63"" [label=""if $stack3 == null""];\n	""64"" [label=""if $stack32 == 0""];\n	""65"" [label=""if $stack34 == 0""];\n	""66"" [label=""if $stack40 == 0""];\n	""67"" [label=""if $stack42 == 0""];\n	""68"" [label=""if $stack46 == 0""];\n	""69"" [label=""if $stack9 == 0""];\n	""70"" [label=""if t != $stack54""];\n	""71"" [label=""if t != 1""];\n	""72"" [label=""name = virtualinvoke $stack43.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getLocalName()>()""];\n	""73"" [label=""return $stack16""];\n	""74"" [label=""return $stack20""];\n	""75"" [label=""return $stack56""];\n	""76"" [label=""return $stack6""];\n	""77"" [label=""return null""];\n	""78"" [label=""return null""];\n	""79"" [label=""return null""];\n	""80"" [label=""return null""];\n	""81"" [label=""return null""];\n	""82"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _updateState(com.fasterxml.jackson.core.JsonToken)>(t)""];\n	""83"" [label=""switch(t) \{     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     default:  \}""];\n	""84"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack53)""];\n	""85"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _nextToken()>()""];\n	""86"" [label=""t = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _nextToken()>()""];\n	""87"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""88"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 0""];\n	""89"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 0""];\n	""90"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 0""];\n	""91"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 1""];\n	""92"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: boolean _mayBeLeaf> = 1""];\n	""93"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: byte[] _binaryValue> = null""];\n	""94"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack12""];\n	""95"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack26""];\n	""96"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack49""];\n	""97"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = null""];\n	""98"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack30""];\n	""99"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack37""];\n	""100"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack51""];\n	""101"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = $stack20""];\n	""102"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = $stack28""];\n	""103"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = $stack8""];\n	""104"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = null""];\n	""105"" [label=""virtualinvoke $stack11.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>($stack10)""];\n	""106"" [label=""virtualinvoke $stack14.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void valueStarted()>()""];\n	""107"" [label=""virtualinvoke $stack18.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void valueStarted()>()""];\n	""108"" [label=""virtualinvoke $stack23.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>($stack24)""];\n	""109"" [label=""virtualinvoke $stack39.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void valueStarted()>()""];\n	""110"" [label=""virtualinvoke $stack44.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>(name)""];\n	""111"" [label=""virtualinvoke $stack48.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void repeatStartElement()>()""];\n	""112"" [label=""virtualinvoke $stack55.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void valueStarted()>()""];\n	""113"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack13)""];\n	""114"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack15)""];\n	""115"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack17)""];\n	""116"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack25)""];\n	""117"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack31)""];\n	""118"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack35)""];\n	""119"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack38)""];\n	""120"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack47)""];\n	""121"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateToken(com.fasterxml.jackson.core.JsonToken)>($stack52)""];\n	""122"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _updateTokenToNull()>()""];\n	""123"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _skipEndElement()>()""];\n	""1"" -> ""105""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""100"" -> ""47""[label=""cfg_next""];\n	""101"" -> ""74""[label=""cfg_next""];\n	""102"" -> ""20""[label=""cfg_next""];\n	""103"" -> ""55""[label=""cfg_next""];\n	""104"" -> ""79""[label=""cfg_next""];\n	""105"" -> ""3""[label=""cfg_next""];\n	""106"" -> ""6""[label=""cfg_next""];\n	""107"" -> ""10""[label=""cfg_next""];\n	""108"" -> ""16""[label=""cfg_next""];\n	""109"" -> ""104""[label=""cfg_next""];\n	""11"" -> ""101""[label=""cfg_next""];\n	""110"" -> ""39""[label=""cfg_next""];\n	""111"" -> ""92""[label=""cfg_next""];\n	""112"" -> ""51""[label=""cfg_next""];\n	""113"" -> ""61""[label=""cfg_next""];\n	""114"" -> ""7""[label=""cfg_next""];\n	""115"" -> ""9""[label=""cfg_next""];\n	""116"" -> ""60""[label=""cfg_next""];\n	""117"" -> ""59""[label=""cfg_next""];\n	""118"" -> ""29""[label=""cfg_next""];\n	""119"" -> ""32""[label=""cfg_next""];\n	""12"" -> ""62""[label=""cfg_next""];\n	""120"" -> ""78""[label=""cfg_next""];\n	""121"" -> ""77""[label=""cfg_next""];\n	""122"" -> ""33""[label=""cfg_next""];\n	""123"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""108""[label=""cfg_next""];\n	""16"" -> ""116""[label=""cfg_next""];\n	""17"" -> ""95""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""102""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""63""[label=""cfg_next""];\n	""22"" -> ""98""[label=""cfg_next""];\n	""23"" -> ""117""[label=""cfg_next""];\n	""24"" -> ""64""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""65""[label=""cfg_next""];\n	""27"" -> ""57""[label=""cfg_next""];\n	""28"" -> ""118""[label=""cfg_next""];\n	""29"" -> ""30""[label=""cfg_next""];\n	""3"" -> ""94""[label=""cfg_next""];\n	""30"" -> ""99""[label=""cfg_next""];\n	""31"" -> ""119""[label=""cfg_next""];\n	""32"" -> ""109""[label=""cfg_next""];\n	""33"" -> ""44""[label=""cfg_next""];\n	""34"" -> ""66""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""67""[label=""cfg_next""];\n	""37"" -> ""72""[label=""cfg_next""];\n	""38"" -> ""110""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""113""[label=""cfg_next""];\n	""40"" -> ""68""[label=""cfg_next""];\n	""41"" -> ""120""[label=""cfg_next""];\n	""42"" -> ""111""[label=""cfg_next""];\n	""43"" -> ""96""[label=""cfg_next""];\n	""44"" -> ""52""[label=""cfg_next""];\n	""45"" -> ""46""[label=""cfg_next""];\n	""46"" -> ""100""[label=""cfg_next""];\n	""47"" -> ""121""[label=""cfg_next""];\n	""48"" -> ""84""[label=""cfg_next""];\n	""49"" -> ""70""[label=""cfg_next""];\n	""5"" -> ""106""[label=""cfg_next""];\n	""50"" -> ""112""[label=""cfg_next""];\n	""51"" -> ""75""[label=""cfg_next""];\n	""52"" -> ""76""[label=""cfg_next""];\n	""53"" -> ""54""[label=""cfg_next""];\n	""54"" -> ""103""[label=""cfg_next""];\n	""55"" -> ""69""[label=""cfg_next""];\n	""56"" -> ""71""[label=""cfg_goto""];\n	""57"" -> ""118""[label=""cfg_goto""];\n	""58"" -> ""80""[label=""cfg_goto""];\n	""59"" -> ""80""[label=""cfg_goto""];\n	""6"" -> ""114""[label=""cfg_next""];\n	""60"" -> ""80""[label=""cfg_goto""];\n	""61"" -> ""80""[label=""cfg_goto""];\n	""62"" -> ""14""[label=""cfg_true""];\n	""62"" -> ""89""[label=""cfg_false""];\n	""63"" -> ""48""[label=""cfg_false""];\n	""63"" -> ""85""[label=""cfg_true""];\n	""64"" -> ""25""[label=""cfg_true""];\n	""64"" -> ""88""[label=""cfg_false""];\n	""65"" -> ""27""[label=""cfg_false""];\n	""65"" -> ""28""[label=""cfg_true""];\n	""66"" -> ""35""[label=""cfg_true""];\n	""66"" -> ""43""[label=""cfg_false""];\n	""67"" -> ""37""[label=""cfg_true""];\n	""67"" -> ""86""[label=""cfg_false""];\n	""68"" -> ""42""[label=""cfg_false""];\n	""68"" -> ""92""[label=""cfg_true""];\n	""69"" -> ""2""[label=""cfg_true""];\n	""69"" -> ""90""[label=""cfg_false""];\n	""7"" -> ""73""[label=""cfg_next""];\n	""70"" -> ""50""[label=""cfg_false""];\n	""70"" -> ""82""[label=""cfg_true""];\n	""71"" -> ""34""[label=""cfg_false""];\n	""71"" -> ""83""[label=""cfg_true""];\n	""72"" -> ""38""[label=""cfg_next""];\n	""8"" -> ""115""[label=""cfg_next""];\n	""82"" -> ""81""[label=""cfg_next""];\n	""83"" -> ""12""[label=""cfg_switch""];\n	""83"" -> ""122""[label=""cfg_switch""];\n	""83"" -> ""24""[label=""cfg_switch""];\n	""83"" -> ""33""[label=""cfg_switch""];\n	""83"" -> ""53""[label=""cfg_switch""];\n	""83"" -> ""8""[label=""cfg_switch""];\n	""84"" -> ""97""[label=""cfg_next""];\n	""85"" -> ""71""[label=""cfg_next""];\n	""86"" -> ""91""[label=""cfg_next""];\n	""87"" -> ""93""[label=""cfg_next""];\n	""88"" -> ""31""[label=""cfg_next""];\n	""89"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""107""[label=""cfg_next""];\n	""90"" -> ""123""[label=""cfg_next""];\n	""91"" -> ""56""[label=""cfg_next""];\n	""92"" -> ""41""[label=""cfg_next""];\n	""93"" -> ""21""[label=""cfg_next""];\n	""94"" -> ""4""[label=""cfg_next""];\n	""95"" -> ""18""[label=""cfg_next""];\n	""96"" -> ""45""[label=""cfg_next""];\n	""97"" -> ""49""[label=""cfg_next""];\n	""98"" -> ""23""[label=""cfg_next""];\n	""99"" -> ""58""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._updateState(JsonToken),Method,No Comment,"private void _updateState(JsonToken t) {\n    switch(t) {\n        case START_OBJECT:\n            _parsingContext = _parsingContext.createChildObjectContext(-1, -1);\n            break;\n        case START_ARRAY:\n            _parsingContext = _parsingContext.createChildArrayContext(-1, -1);\n            break;\n        case END_OBJECT:\n        case END_ARRAY:\n            _parsingContext = _parsingContext.getParent();\n            break;\n        case FIELD_NAME:\n            _parsingContext.setCurrentName(_xmlTokens.getLocalName());\n            break;\n        default:\n            _internalErrorUnknownToken(t);\n    }\n}",void _updateState(com.fasterxml.jackson.core.JsonToken),"digraph cfg__updateState {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildArrayContext(int,int)>(-1, -1)""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createChildObjectContext(int,int)>(-1, -1)""];\n	""5"" [label=""$stack2 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>""];\n	""6"" [label=""$stack3 = virtualinvoke t.<com.fasterxml.jackson.core.JsonToken: int ordinal()>()""];\n	""7"" [label=""$stack4 = $stack2[$stack3]""];\n	""8"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""9"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""10"" [label=""$stack7 = virtualinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getLocalName()>()""];\n	""11"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""12"" [label=""$stack9 = virtualinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext getParent()>()""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""return""];\n	""18"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.Object _internalErrorUnknownToken(java.lang.Object)>(t)""];\n	""19"" [label=""switch($stack4) \{     case 1:     case 2:     case 3:     case 4:     case 5:     default:  \}""];\n	""20"" [label=""t := @parameter0: com.fasterxml.jackson.core.JsonToken""];\n	""21"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""22"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack11""];\n	""23"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack13""];\n	""24"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack9""];\n	""25"" [label=""virtualinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: void setCurrentName(java.lang.String)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""25""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_goto""];\n	""14"" -> ""17""[label=""cfg_goto""];\n	""15"" -> ""17""[label=""cfg_goto""];\n	""16"" -> ""17""[label=""cfg_goto""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""1""[label=""cfg_switch""];\n	""19"" -> ""11""[label=""cfg_switch""];\n	""19"" -> ""18""[label=""cfg_switch""];\n	""19"" -> ""3""[label=""cfg_switch""];\n	""19"" -> ""9""[label=""cfg_switch""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""13""[label=""cfg_next""];\n	""24"" -> ""15""[label=""cfg_next""];\n	""25"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getText(),Method,No Comment,@Override\npublic String getText() throws IOException {\n    if (_currToken == null) {\n        return null;\n    }\n    switch(_currToken) {\n        case FIELD_NAME:\n            return currentName();\n        case VALUE_STRING:\n            return _currText;\n        default:\n            return _currToken.asString();\n    }\n},java.lang.String getText(),"digraph cfg_getText {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""3"" [label=""$stack3 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$1: int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken>""];\n	""4"" [label=""$stack4 = virtualinvoke $stack2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>()""];\n	""5"" [label=""$stack5 = $stack3[$stack4]""];\n	""6"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""7"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String currentName()>()""];\n	""8"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<com.fasterxml.jackson.core.JsonToken: java.lang.String asString()>()""];\n	""10"" [label=""if $stack1 != null""];\n	""11"" [label=""return $stack6""];\n	""12"" [label=""return $stack7""];\n	""13"" [label=""return $stack9""];\n	""14"" [label=""return null""];\n	""15"" [label=""switch($stack5) \{     case 5:     case 6:     default:  \}""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""15"" -> ""6""[label=""cfg_switch""];\n	""15"" -> ""7""[label=""cfg_switch""];\n	""15"" -> ""8""[label=""cfg_switch""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextCharacters(),Method,No Comment,@Override\npublic char[] getTextCharacters() throws IOException {\n    String text = getText();\n    return (text == null) ? null : text.toCharArray();\n},char[] getTextCharacters(),"digraph cfg_getTextCharacters {\n	""1"" [label=""$stack2 = null""];\n	""2"" [label=""$stack2 = virtualinvoke text.<java.lang.String: char[] toCharArray()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if text != null""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""text = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String getText()>()""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextLength(),Method,No Comment,@Override\npublic int getTextLength() throws IOException {\n    String text = getText();\n    return (text == null) ? 0 : text.length();\n},int getTextLength(),"digraph cfg_getTextLength {\n	""1"" [label=""$stack2 = 0""];\n	""2"" [label=""$stack2 = virtualinvoke text.<java.lang.String: int length()>()""];\n	""3"" [label=""goto""];\n	""4"" [label=""if text != null""];\n	""5"" [label=""return $stack2""];\n	""6"" [label=""text = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String getText()>()""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_goto""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getTextOffset(),Method,No Comment,@Override\npublic int getTextOffset() throws IOException {\n    return 0;\n},int getTextOffset(),"digraph cfg_getTextOffset {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.hasTextCharacters(),Method,* XML input actually would offer access to character arrays; but since\n     * we must coalesce things it cannot really be exposed.,@Override\npublic boolean hasTextCharacters() {\n    return false;\n},boolean hasTextCharacters(),"digraph cfg_hasTextCharacters {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getText(Writer),Method,No Comment,// since 2.8\n@Override\npublic int getText(Writer writer) throws IOException {\n    String str = getText();\n    if (str == null) {\n        return 0;\n    }\n    writer.write(str);\n    return str.length();\n},int getText(java.io.Writer),"digraph cfg_getText {\n	""1"" [label=""$stack3 = virtualinvoke str.<java.lang.String: int length()>()""];\n	""2"" [label=""if str != null""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""return 0""];\n	""5"" [label=""str = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String getText()>()""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""7"" [label=""virtualinvoke writer.<java.io.Writer: void write(java.lang.String)>(str)""];\n	""8"" [label=""writer := @parameter0: java.io.Writer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_false""];\n	""2"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getEmbeddedObject(),Method,No Comment,@Override\npublic Object getEmbeddedObject() throws IOException {\n    // no way to embed POJOs for now...\n    return null;\n},java.lang.Object getEmbeddedObject(),"digraph cfg_getEmbeddedObject {\n	""1"" [label=""return null""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getBinaryValue(Base64Variant),Method,No Comment,"@Override\npublic byte[] getBinaryValue(Base64Variant b64variant) throws IOException {\n    if (_currToken != JsonToken.VALUE_STRING && (_currToken != JsonToken.VALUE_EMBEDDED_OBJECT || _binaryValue == null)) {\n        _reportError(""Current token ("" + _currToken + "") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary"");\n    }\n    /* To ensure that we won't see inconsistent data, better clear up\n         * state...\n         */\n    if (_binaryValue == null) {\n        try {\n            _binaryValue = _decodeBase64(b64variant);\n        } catch (IllegalArgumentException iae) {\n            throw _constructError(""Failed to decode VALUE_STRING as base64 ("" + b64variant + ""): "" + iae.getMessage());\n        }\n    }\n    return _binaryValue;\n}",byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant),"digraph cfg_getBinaryValue {\n	""1"" [label=""$stack10 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Current token (\"")""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11)""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"") not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\"")""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: byte[] _binaryValue>""];\n	""8"" [label=""$stack17 := @caughtexception""];\n	""9"" [label=""$stack18 = new java.lang.StringBuilder""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Failed to decode VALUE_STRING as base64 (\"")""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(b64variant)""];\n	""12"" [label=""$stack21 = virtualinvoke iae.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()""];\n	""13"" [label=""$stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""): \"")""];\n	""14"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21)""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""16"" [label=""$stack25 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String)>($stack24)""];\n	""17"" [label=""$stack3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""18"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""19"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: byte[] _binaryValue>""];\n	""20"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: byte[] _binaryValue>""];\n	""21"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant)>(b64variant)""];\n	""22"" [label=""$stack8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>""];\n	""23"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""24"" [label=""b64variant := @parameter0: com.fasterxml.jackson.core.Base64Variant""];\n	""25"" [label=""goto""];\n	""26"" [label=""iae = $stack17""];\n	""27"" [label=""if $stack16 != null""];\n	""28"" [label=""if $stack4 == $stack3""];\n	""29"" [label=""if $stack5 != null""];\n	""30"" [label=""if $stack9 != $stack8""];\n	""31"" [label=""return $stack6""];\n	""32"" [label=""specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>()""];\n	""34"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""35"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: byte[] _binaryValue> = $stack7""];\n	""36"" [label=""throw $stack25""];\n	""37"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _reportError(java.lang.String)>($stack15)""];\n	""1"" -> ""32""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""36""[label=""cfg_next""];\n	""17"" -> ""28""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""29""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""20"" -> ""31""[label=""cfg_next""];\n	""21"" -> ""35""[label=""cfg_next""];\n	""21"" -> ""8""[label=""cfg_except""];\n	""22"" -> ""30""[label=""cfg_next""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""18""[label=""cfg_next""];\n	""25"" -> ""20""[label=""cfg_goto""];\n	""26"" -> ""9""[label=""cfg_next""];\n	""27"" -> ""1""[label=""cfg_false""];\n	""27"" -> ""19""[label=""cfg_true""];\n	""28"" -> ""19""[label=""cfg_true""];\n	""28"" -> ""23""[label=""cfg_false""];\n	""29"" -> ""20""[label=""cfg_true""];\n	""29"" -> ""21""[label=""cfg_false""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_true""];\n	""30"" -> ""7""[label=""cfg_false""];\n	""32"" -> ""3""[label=""cfg_next""];\n	""33"" -> ""10""[label=""cfg_next""];\n	""34"" -> ""24""[label=""cfg_next""];\n	""35"" -> ""25""[label=""cfg_next""];\n	""35"" -> ""8""[label=""cfg_except""];\n	""37"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""37""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_next""];\n	""8"" -> ""26""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._decodeBase64(Base64Variant),Method,No Comment,"@SuppressWarnings(""resource"")\nprotected byte[] _decodeBase64(Base64Variant b64variant) throws IOException {\n    ByteArrayBuilder builder = _getByteArrayBuilder();\n    final String str = getText();\n    _decodeBase64(str, builder, b64variant);\n    return builder.toByteArray();\n}",byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant),"digraph cfg__decodeBase64 {\n	""1"" [label=""$stack4 = virtualinvoke builder.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>()""];\n	""2"" [label=""b64variant := @parameter0: com.fasterxml.jackson.core.Base64Variant""];\n	""3"" [label=""builder = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder()>()""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""str = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String getText()>()""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""7"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant)>(str, builder, b64variant)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.isNaN(),Method,No Comment,@Override\npublic boolean isNaN() {\n    // can't have since we only coerce integers\n    return false;\n},boolean isNaN(),"digraph cfg_isNaN {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberType(),Method,No Comment,@Override\npublic NumberType getNumberType() throws IOException {\n    if (_numTypesValid == NR_UNKNOWN) {\n        // will also check event type\n        _checkNumericValue(NR_UNKNOWN);\n    }\n    // Only integer types supported so...\n    if ((_numTypesValid & NR_INT) != 0) {\n        return NumberType.INT;\n    }\n    if ((_numTypesValid & NR_LONG) != 0) {\n        return NumberType.LONG;\n    }\n    return NumberType.BIG_INTEGER;\n},com.fasterxml.jackson.core.JsonParser$NumberType getNumberType(),"digraph cfg_getNumberType {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""3"" [label=""$stack3 = $stack2 & 1""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""5"" [label=""$stack5 = $stack4 & 2""];\n	""6"" [label=""$stack6 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER>""];\n	""7"" [label=""$stack7 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>""];\n	""8"" [label=""$stack8 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>""];\n	""9"" [label=""if $stack1 != 0""];\n	""10"" [label=""if $stack3 == 0""];\n	""11"" [label=""if $stack5 == 0""];\n	""12"" [label=""return $stack6""];\n	""13"" [label=""return $stack7""];\n	""14"" [label=""return $stack8""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""16"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(0)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_true""];\n	""10"" -> ""8""[label=""cfg_false""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_true""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberTypeFP(),Method,"* XML has no notion of natural/native floating-point type (has to be\n     * provided externally via Schema or so), so need to ensure we indicate that.",// added in 2.17\n@Override\npublic NumberTypeFP getNumberTypeFP() throws IOException {\n    return NumberTypeFP.UNKNOWN;\n},com.fasterxml.jackson.core.JsonParser$NumberTypeFP getNumberTypeFP(),"digraph cfg_getNumberTypeFP {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.core.JsonParser$NumberTypeFP: com.fasterxml.jackson.core.JsonParser$NumberTypeFP UNKNOWN>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getNumberValue(),Method,No Comment,@Override\npublic Number getNumberValue() throws IOException {\n    if (_numTypesValid == NR_UNKNOWN) {\n        // will also check event type\n        _checkNumericValue(NR_UNKNOWN);\n    }\n    // Only integer types supported so...\n    if ((_numTypesValid & NR_INT) != 0) {\n        return _numberInt;\n    }\n    if ((_numTypesValid & NR_LONG) != 0) {\n        return _numberLong;\n    }\n    if ((_numTypesValid & NR_BIGINT) != 0) {\n        return _numberBigInt;\n    }\n    _throwInternal();\n    return null;\n},java.lang.Number getNumberValue(),"digraph cfg_getNumberValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack9)""];\n	""3"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt>""];\n	""4"" [label=""$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack11)""];\n	""5"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""6"" [label=""$stack3 = $stack2 & 1""];\n	""7"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""8"" [label=""$stack5 = $stack4 & 2""];\n	""9"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""10"" [label=""$stack7 = $stack6 & 4""];\n	""11"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""12"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""13"" [label=""if $stack1 != 0""];\n	""14"" [label=""if $stack3 == 0""];\n	""15"" [label=""if $stack5 == 0""];\n	""16"" [label=""if $stack7 == 0""];\n	""17"" [label=""return $stack10""];\n	""18"" [label=""return $stack12""];\n	""19"" [label=""return $stack8""];\n	""20"" [label=""return null""];\n	""21"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""22"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(0)""];\n	""23"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _throwInternal()>()""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""14"" -> ""3""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""12""[label=""cfg_false""];\n	""15"" -> ""9""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_false""];\n	""16"" -> ""23""[label=""cfg_true""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""22"" -> ""5""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getIntValue(),Method,No Comment,"@Override\npublic int getIntValue() throws IOException {\n    if ((_numTypesValid & NR_INT) == 0) {\n        if (_numTypesValid == NR_UNKNOWN) {\n            // not parsed at all\n            // will also check event type\n            _checkNumericValue(NR_INT);\n        }\n        if ((_numTypesValid & NR_INT) == 0) {\n            // wasn't an int natively?\n            // let's make it so, if possible\n            _convertNumberToInt();\n        }\n    }\n    return _numberInt;\n}",int getIntValue(),"digraph cfg_getIntValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack2 = $stack1 & 1""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt>""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""5"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""6"" [label=""$stack6 = $stack5 & 1""];\n	""7"" [label=""if $stack2 != 0""];\n	""8"" [label=""if $stack4 != 0""];\n	""9"" [label=""if $stack6 != 0""];\n	""10"" [label=""return $stack3""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""12"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(1)""];\n	""13"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _convertNumberToInt()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""13""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getLongValue(),Method,No Comment,@Override\npublic long getLongValue() throws IOException {\n    if ((_numTypesValid & NR_LONG) == 0) {\n        if (_numTypesValid == NR_UNKNOWN) {\n            _checkNumericValue(NR_LONG);\n        }\n        if ((_numTypesValid & NR_LONG) == 0) {\n            _convertNumberToLong();\n        }\n    }\n    return _numberLong;\n},long getLongValue(),"digraph cfg_getLongValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack2 = $stack1 & 2""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""5"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""6"" [label=""$stack6 = $stack5 & 2""];\n	""7"" [label=""if $stack2 != 0""];\n	""8"" [label=""if $stack4 != 0""];\n	""9"" [label=""if $stack6 != 0""];\n	""10"" [label=""return $stack3""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""12"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(2)""];\n	""13"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _convertNumberToLong()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""13""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getBigIntegerValue(),Method,No Comment,@Override\npublic BigInteger getBigIntegerValue() throws IOException {\n    if ((_numTypesValid & NR_BIGINT) == 0) {\n        if (_numTypesValid == NR_UNKNOWN) {\n            _checkNumericValue(NR_BIGINT);\n        }\n        if ((_numTypesValid & NR_BIGINT) == 0) {\n            _convertNumberToBigInteger();\n        }\n    }\n    return _numberBigInt;\n},java.math.BigInteger getBigIntegerValue(),"digraph cfg_getBigIntegerValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack2 = $stack1 & 4""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""5"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""6"" [label=""$stack6 = $stack5 & 4""];\n	""7"" [label=""if $stack2 != 0""];\n	""8"" [label=""if $stack4 != 0""];\n	""9"" [label=""if $stack6 != 0""];\n	""10"" [label=""return $stack3""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""12"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(4)""];\n	""13"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _convertNumberToBigInteger()>()""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""12""[label=""cfg_false""];\n	""8"" -> ""5""[label=""cfg_true""];\n	""9"" -> ""13""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getFloatValue(),Method,No Comment,@Override\npublic float getFloatValue() throws IOException {\n    if ((_numTypesValid & NR_FLOAT) == 0) {\n        if (_numTypesValid == NR_UNKNOWN) {\n            _checkNumericValue(NR_FLOAT);\n        }\n    }\n    return _convertNumberToFloat();\n},float getFloatValue(),"digraph cfg_getFloatValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack2 = $stack1 & 32""];\n	""3"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: float _convertNumberToFloat()>()""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""5"" [label=""if $stack2 != 0""];\n	""6"" [label=""if $stack4 != 0""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""9"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(32)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getDoubleValue(),Method,No Comment,@Override\npublic double getDoubleValue() throws IOException {\n    if ((_numTypesValid & NR_DOUBLE) == 0) {\n        if (_numTypesValid == NR_UNKNOWN) {\n            _checkNumericValue(NR_DOUBLE);\n        }\n    }\n    return _convertNumberToDouble();\n},double getDoubleValue(),"digraph cfg_getDoubleValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack2 = $stack1 & 8""];\n	""3"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: double _convertNumberToDouble()>()""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""5"" [label=""if $stack2 != 0""];\n	""6"" [label=""if $stack4 != 0""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""9"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(8)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.getDecimalValue(),Method,No Comment,@Override\npublic BigDecimal getDecimalValue() throws IOException {\n    if ((_numTypesValid & NR_BIGDECIMAL) == 0) {\n        if (_numTypesValid == NR_UNKNOWN) {\n            _checkNumericValue(NR_BIGDECIMAL);\n        }\n    }\n    return _convertNumberToBigDecimal();\n},java.math.BigDecimal getDecimalValue(),"digraph cfg_getDecimalValue {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack2 = $stack1 & 16""];\n	""3"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigDecimal _convertNumberToBigDecimal()>()""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""5"" [label=""if $stack2 != 0""];\n	""6"" [label=""if $stack4 != 0""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""9"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _checkNumericValue(int)>(16)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""5"" -> ""4""[label=""cfg_false""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._checkNumericValue(int),Method,No Comment,"protected final void _checkNumericValue(int expType) throws IOException {\n    if (_currToken == JsonToken.VALUE_NUMBER_INT) {\n        return;\n    }\n    _reportError(""Current token ("" + currentToken() + "") not numeric, can not use numeric value accessors"");\n}",void _checkNumericValue(int),"digraph cfg__checkNumericValue {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>""];\n	""2"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _currToken>""];\n	""3"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""4"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken currentToken()>()""];\n	""5"" [label=""$stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Current token (\"")""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack5)""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"") not numeric, can not use numeric value accessors\"")""];\n	""8"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""expType := @parameter0: int""];\n	""10"" [label=""if $stack3 != $stack2""];\n	""11"" [label=""return""];\n	""12"" [label=""return""];\n	""13"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""15"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _reportError(java.lang.String)>($stack9)""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n","protected , final "
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._isIntNumber(String),Method,NOTE: copied from `StdDeserializer`...,"protected final int _isIntNumber(String text) {\n    final int len = text.length();\n    if (len > 0) {\n        char c = text.charAt(0);\n        // skip leading negative sign, do NOT allow leading plus\n        final int start = (c == '-') ? 1 : 0;\n        for (int i = start; i < len; ++i) {\n            int ch = text.charAt(i);\n            if (ch > '9' || ch < '0') {\n                return -1;\n            }\n        }\n        return len - start;\n    }\n    return 0;\n}",int _isIntNumber(java.lang.String),"digraph cfg__isIntNumber {\n	""1"" [label=""$stack7 = len - start""];\n	""2"" [label=""c = virtualinvoke text.<java.lang.String: char charAt(int)>(0)""];\n	""3"" [label=""ch = virtualinvoke text.<java.lang.String: char charAt(int)>(i)""];\n	""4"" [label=""goto""];\n	""5"" [label=""goto""];\n	""6"" [label=""i = i + 1""];\n	""7"" [label=""i = start""];\n	""8"" [label=""if c != 45""];\n	""9"" [label=""if ch > 57""];\n	""10"" [label=""if ch >= 48""];\n	""11"" [label=""if i >= len""];\n	""12"" [label=""if len <= 0""];\n	""13"" [label=""len = virtualinvoke text.<java.lang.String: int length()>()""];\n	""14"" [label=""return $stack7""];\n	""15"" [label=""return -1""];\n	""16"" [label=""return 0""];\n	""17"" [label=""start = 0""];\n	""18"" [label=""start = 1""];\n	""19"" [label=""text := @parameter0: java.lang.String""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""1""[label=""cfg_true""];\n	""11"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""16""[label=""cfg_true""];\n	""12"" -> ""2""[label=""cfg_false""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""19"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_goto""];\n	""5"" -> ""11""[label=""cfg_goto""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_true""];\n	""8"" -> ""18""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_false""];\n	""9"" -> ""15""[label=""cfg_true""];\n}\n","protected , final "
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToInt(),Method,No Comment,"protected void _convertNumberToInt() throws IOException {\n    // First, converting from long ought to be easy\n    if ((_numTypesValid & NR_LONG) != 0) {\n        // Let's verify it's lossless conversion by simple roundtrip\n        int result = (int) _numberLong;\n        if (((long) result) != _numberLong) {\n            _reportError(""Numeric value ("" + getText() + "") out of range of int"");\n        }\n        _numberInt = result;\n    } else if ((_numTypesValid & NR_BIGINT) != 0) {\n        if (BI_MIN_INT.compareTo(_numberBigInt) > 0 || BI_MAX_INT.compareTo(_numberBigInt) < 0) {\n            reportOverflowInt();\n        }\n        _numberInt = _numberBigInt.intValue();\n    } else {\n        _throwInternal();\n    }\n    _numTypesValid |= NR_INT;\n}",void _convertNumberToInt(),"digraph cfg__convertNumberToInt {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($stack8)""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.math.BigInteger: int intValue()>()""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""5"" [label=""$stack14 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger BI_MAX_INT>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($stack13)""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""8"" [label=""$stack17 = (long) result""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""10"" [label=""$stack19 = $stack17 cmp $stack18""];\n	""11"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""12"" [label=""$stack20 = new java.lang.StringBuilder""];\n	""13"" [label=""$stack21 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String getText()>()""];\n	""14"" [label=""$stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Numeric value (\"")""];\n	""15"" [label=""$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21)""];\n	""16"" [label=""$stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"") out of range of int\"")""];\n	""17"" [label=""$stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""18"" [label=""$stack3 = $stack2 & 2""];\n	""19"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""20"" [label=""$stack5 = $stack4 & 4""];\n	""21"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""22"" [label=""$stack7 = $stack6 | 1""];\n	""23"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""24"" [label=""$stack9 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger BI_MIN_INT>""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""if $stack10 > 0""];\n	""28"" [label=""if $stack15 >= 0""];\n	""29"" [label=""if $stack19 == 0""];\n	""30"" [label=""if $stack3 == 0""];\n	""31"" [label=""if $stack5 == 0""];\n	""32"" [label=""result = (int) $stack16""];\n	""33"" [label=""return""];\n	""34"" [label=""specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>()""];\n	""35"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""36"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = $stack7""];\n	""37"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt> = $stack12""];\n	""38"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt> = result""];\n	""39"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _reportError(java.lang.String)>($stack25)""];\n	""40"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _throwInternal()>()""];\n	""41"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void reportOverflowInt()>()""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""29""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""34""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""39""[label=""cfg_next""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""31""[label=""cfg_next""];\n	""21"" -> ""22""[label=""cfg_next""];\n	""22"" -> ""36""[label=""cfg_next""];\n	""23"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_goto""];\n	""26"" -> ""21""[label=""cfg_goto""];\n	""27"" -> ""41""[label=""cfg_true""];\n	""27"" -> ""5""[label=""cfg_false""];\n	""28"" -> ""2""[label=""cfg_true""];\n	""28"" -> ""41""[label=""cfg_false""];\n	""29"" -> ""12""[label=""cfg_false""];\n	""29"" -> ""38""[label=""cfg_true""];\n	""3"" -> ""37""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""30"" -> ""7""[label=""cfg_false""];\n	""31"" -> ""24""[label=""cfg_false""];\n	""31"" -> ""40""[label=""cfg_true""];\n	""32"" -> ""8""[label=""cfg_next""];\n	""34"" -> ""14""[label=""cfg_next""];\n	""35"" -> ""11""[label=""cfg_next""];\n	""36"" -> ""33""[label=""cfg_next""];\n	""37"" -> ""26""[label=""cfg_next""];\n	""38"" -> ""25""[label=""cfg_next""];\n	""39"" -> ""38""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""40"" -> ""21""[label=""cfg_next""];\n	""41"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""32""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToLong(),Method,No Comment,protected void _convertNumberToLong() throws IOException {\n    if ((_numTypesValid & NR_INT) != 0) {\n        _numberLong = (long) _numberInt;\n    } else if ((_numTypesValid & NR_BIGINT) != 0) {\n        if (BI_MIN_LONG.compareTo(_numberBigInt) > 0 || BI_MAX_LONG.compareTo(_numberBigInt) < 0) {\n            reportOverflowLong();\n        }\n        _numberLong = _numberBigInt.longValue();\n    } else {\n        _throwInternal();\n    }\n    _numTypesValid |= NR_LONG;\n},void _convertNumberToLong(),"digraph cfg__convertNumberToLong {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<java.math.BigInteger: long longValue()>()""];\n	""4"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""5"" [label=""$stack13 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger BI_MAX_LONG>""];\n	""6"" [label=""$stack14 = virtualinvoke $stack13.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($stack12)""];\n	""7"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt>""];\n	""8"" [label=""$stack16 = (long) $stack15""];\n	""9"" [label=""$stack2 = $stack1 & 1""];\n	""10"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""11"" [label=""$stack4 = $stack3 & 4""];\n	""12"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""13"" [label=""$stack6 = $stack5 | 2""];\n	""14"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""15"" [label=""$stack8 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger BI_MIN_LONG>""];\n	""16"" [label=""$stack9 = virtualinvoke $stack8.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($stack7)""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""if $stack14 >= 0""];\n	""20"" [label=""if $stack2 == 0""];\n	""21"" [label=""if $stack4 == 0""];\n	""22"" [label=""if $stack9 > 0""];\n	""23"" [label=""return""];\n	""24"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""25"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = $stack6""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong> = $stack11""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong> = $stack16""];\n	""28"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _throwInternal()>()""];\n	""29"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void reportOverflowLong()>()""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""21""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""22""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_goto""];\n	""18"" -> ""12""[label=""cfg_goto""];\n	""19"" -> ""2""[label=""cfg_true""];\n	""19"" -> ""29""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_true""];\n	""20"" -> ""7""[label=""cfg_false""];\n	""21"" -> ""15""[label=""cfg_false""];\n	""21"" -> ""28""[label=""cfg_true""];\n	""22"" -> ""29""[label=""cfg_true""];\n	""22"" -> ""5""[label=""cfg_false""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""26"" -> ""18""[label=""cfg_next""];\n	""27"" -> ""17""[label=""cfg_next""];\n	""28"" -> ""12""[label=""cfg_next""];\n	""29"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToBigInteger(),Method,No Comment,protected void _convertNumberToBigInteger() throws IOException {\n    if ((_numTypesValid & NR_LONG) != 0) {\n        _numberBigInt = BigInteger.valueOf(_numberLong);\n    } else if ((_numTypesValid & NR_INT) != 0) {\n        _numberBigInt = BigInteger.valueOf(_numberInt);\n    } else {\n        _throwInternal();\n    }\n    _numTypesValid |= NR_BIGINT;\n},void _convertNumberToBigInteger(),"digraph cfg__convertNumberToBigInteger {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""3"" [label=""$stack11 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($stack10)""];\n	""4"" [label=""$stack2 = $stack1 & 2""];\n	""5"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""6"" [label=""$stack4 = $stack3 & 1""];\n	""7"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""8"" [label=""$stack6 = $stack5 | 4""];\n	""9"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt>""];\n	""10"" [label=""$stack8 = (long) $stack7""];\n	""11"" [label=""$stack9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($stack8)""];\n	""12"" [label=""goto""];\n	""13"" [label=""goto""];\n	""14"" [label=""if $stack2 == 0""];\n	""15"" [label=""if $stack4 == 0""];\n	""16"" [label=""return""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = $stack6""];\n	""19"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt> = $stack11""];\n	""20"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt> = $stack9""];\n	""21"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _throwInternal()>()""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_goto""];\n	""13"" -> ""7""[label=""cfg_goto""];\n	""14"" -> ""2""[label=""cfg_false""];\n	""14"" -> ""5""[label=""cfg_true""];\n	""15"" -> ""21""[label=""cfg_true""];\n	""15"" -> ""9""[label=""cfg_false""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToFloat(),Method,No Comment,"protected float _convertNumberToFloat() throws IOException {\n    // Note: this MUST start with more accurate representations, since we don't know which\n    //  value is the original one (others get generated when requested)\n    if ((_numTypesValid & NR_BIGINT) != 0) {\n        return _numberBigInt.floatValue();\n    }\n    if ((_numTypesValid & NR_LONG) != 0) {\n        return (float) _numberLong;\n    }\n    if ((_numTypesValid & NR_INT) != 0) {\n        return (float) _numberInt;\n    }\n    _throwInternal();\n    return 0.0f;\n}",float _convertNumberToFloat(),"digraph cfg__convertNumberToFloat {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack10 = (float) $stack9""];\n	""3"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<java.math.BigInteger: float floatValue()>()""];\n	""5"" [label=""$stack2 = $stack1 & 4""];\n	""6"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""7"" [label=""$stack4 = $stack3 & 2""];\n	""8"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""9"" [label=""$stack6 = $stack5 & 1""];\n	""10"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt>""];\n	""11"" [label=""$stack8 = (float) $stack7""];\n	""12"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""13"" [label=""if $stack2 == 0""];\n	""14"" [label=""if $stack4 == 0""];\n	""15"" [label=""if $stack6 == 0""];\n	""16"" [label=""return $stack10""];\n	""17"" [label=""return $stack12""];\n	""18"" [label=""return $stack8""];\n	""19"" [label=""return 0.0F""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""21"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _throwInternal()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""12""[label=""cfg_false""];\n	""14"" -> ""8""[label=""cfg_true""];\n	""15"" -> ""10""[label=""cfg_false""];\n	""15"" -> ""21""[label=""cfg_true""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToDouble(),Method,No Comment,"protected double _convertNumberToDouble() throws IOException {\n    // same as above, start from more to less accurate\n    if ((_numTypesValid & NR_BIGINT) != 0) {\n        return _numberBigInt.doubleValue();\n    }\n    if ((_numTypesValid & NR_LONG) != 0) {\n        return (double) _numberLong;\n    }\n    if ((_numTypesValid & NR_INT) != 0) {\n        return (double) _numberInt;\n    }\n    _throwInternal();\n    return 0.0;\n}",double _convertNumberToDouble(),"digraph cfg__convertNumberToDouble {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack10 = (double) $stack9""];\n	""3"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""4"" [label=""$stack12 = virtualinvoke $stack11.<java.math.BigInteger: double doubleValue()>()""];\n	""5"" [label=""$stack2 = $stack1 & 4""];\n	""6"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""7"" [label=""$stack4 = $stack3 & 2""];\n	""8"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""9"" [label=""$stack6 = $stack5 & 1""];\n	""10"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt>""];\n	""11"" [label=""$stack8 = (double) $stack7""];\n	""12"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""13"" [label=""if $stack2 == 0""];\n	""14"" [label=""if $stack4 == 0""];\n	""15"" [label=""if $stack6 == 0""];\n	""16"" [label=""return $stack10""];\n	""17"" [label=""return $stack12""];\n	""18"" [label=""return $stack8""];\n	""19"" [label=""return 0.0""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""21"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _throwInternal()>()""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""6""[label=""cfg_true""];\n	""14"" -> ""12""[label=""cfg_false""];\n	""14"" -> ""8""[label=""cfg_true""];\n	""15"" -> ""10""[label=""cfg_false""];\n	""15"" -> ""21""[label=""cfg_true""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._convertNumberToBigDecimal(),Method,No Comment,protected BigDecimal _convertNumberToBigDecimal() throws IOException {\n    if ((_numTypesValid & NR_BIGINT) != 0) {\n        return new BigDecimal(_numberBigInt);\n    }\n    if ((_numTypesValid & NR_LONG) != 0) {\n        return BigDecimal.valueOf(_numberLong);\n    }\n    if ((_numTypesValid & NR_INT) != 0) {\n        return BigDecimal.valueOf(_numberInt);\n    }\n    _throwInternal();\n    return null;\n},java.math.BigDecimal _convertNumberToBigDecimal(),"digraph cfg__convertNumberToBigDecimal {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""2"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: long _numberLong>""];\n	""3"" [label=""$stack11 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($stack10)""];\n	""4"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.math.BigInteger _numberBigInt>""];\n	""5"" [label=""$stack13 = new java.math.BigDecimal""];\n	""6"" [label=""$stack2 = $stack1 & 4""];\n	""7"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""8"" [label=""$stack4 = $stack3 & 2""];\n	""9"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid>""];\n	""10"" [label=""$stack6 = $stack5 & 1""];\n	""11"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numberInt>""];\n	""12"" [label=""$stack8 = (long) $stack7""];\n	""13"" [label=""$stack9 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>($stack8)""];\n	""14"" [label=""if $stack2 == 0""];\n	""15"" [label=""if $stack4 == 0""];\n	""16"" [label=""if $stack6 == 0""];\n	""17"" [label=""return $stack11""];\n	""18"" [label=""return $stack13""];\n	""19"" [label=""return $stack9""];\n	""20"" [label=""return null""];\n	""21"" [label=""specialinvoke $stack13.<java.math.BigDecimal: void <init>(java.math.BigInteger)>($stack12)""];\n	""22"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""23"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _throwInternal()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""15"" -> ""2""[label=""cfg_false""];\n	""15"" -> ""9""[label=""cfg_true""];\n	""16"" -> ""11""[label=""cfg_false""];\n	""16"" -> ""23""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._handleEOF(),Method,"* Method called when an EOF is encountered between tokens.\n     * If so, it may be a legitimate EOF, but only iff there\n     * is no open non-root context.","@Override\nprotected void _handleEOF() throws JsonParseException {\n    if (!_parsingContext.inRoot()) {\n        String marker = _parsingContext.inArray() ? ""Array"" : ""Object"";\n        _reportInvalidEOF(String.format("": expected close marker for %s (start marker at %s)"", marker, _parsingContext.startLocation(_ioContext.contentReference())), null);\n    }\n}",void _handleEOF(),"digraph cfg__handleEOF {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.core.JsonLocation startLocation(com.fasterxml.jackson.core.io.ContentReference)>($stack9)""];\n	""2"" [label=""$stack11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"": expected close marker for %s (start marker at %s)\"", $stack6)""];\n	""3"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""4"" [label=""$stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inRoot()>()""];\n	""5"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""6"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: boolean inArray()>()""];\n	""7"" [label=""$stack6 = newarray (java.lang.Object)[2]""];\n	""8"" [label=""$stack6[0] = marker""];\n	""9"" [label=""$stack6[1] = $stack10""];\n	""10"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.io.IOContext _ioContext>""];\n	""11"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext>""];\n	""12"" [label=""$stack9 = virtualinvoke $stack7.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.io.ContentReference contentReference()>()""];\n	""13"" [label=""goto""];\n	""14"" [label=""if $stack3 != 0""];\n	""15"" [label=""if $stack5 == 0""];\n	""16"" [label=""marker = \""Array\""""];\n	""17"" [label=""marker = \""Object\""""];\n	""18"" [label=""return""];\n	""19"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""20"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _reportInvalidEOF(java.lang.String,com.fasterxml.jackson.core.JsonToken)>($stack11, null)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_goto""];\n	""14"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""5""[label=""cfg_false""];\n	""15"" -> ""16""[label=""cfg_false""];\n	""15"" -> ""17""[label=""cfg_true""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_next""];\n	""19"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._releaseBuffers(),Method,* Method called to release internal buffers owned by the base\n     * parser.,"protected void _releaseBuffers() throws IOException {\n    // anything we can/must release? Underlying parser should do all of it, for now?\n}",void _releaseBuffers(),"digraph cfg__releaseBuffers {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._getByteArrayBuilder(),Method,No Comment,protected ByteArrayBuilder _getByteArrayBuilder() {\n    if (_byteArrayBuilder == null) {\n        _byteArrayBuilder = new ByteArrayBuilder();\n    } else {\n        _byteArrayBuilder.reset();\n    }\n    return _byteArrayBuilder;\n},com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder(),"digraph cfg__getByteArrayBuilder {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder>""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder>""];\n	""4"" [label=""$stack4 = new com.fasterxml.jackson.core.util.ByteArrayBuilder""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack1 != null""];\n	""7"" [label=""return $stack3""];\n	""8"" [label=""specialinvoke $stack4.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>()>()""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder> = $stack4""];\n	""11"" [label=""virtualinvoke $stack2.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._internalErrorUnknownToken(Object),Method,No Comment,"private <T> T _internalErrorUnknownToken(Object token) {\n    throw new IllegalStateException(""Internal error: unrecognized XmlTokenStream token: "" + token);\n}",java.lang.Object _internalErrorUnknownToken(java.lang.Object),"digraph cfg__internalErrorUnknownToken {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Internal error: unrecognized XmlTokenStream token: \"")""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(token)""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""5"" [label=""$stack6 = new java.lang.IllegalStateException""];\n	""6"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""7"" [label=""specialinvoke $stack6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack5)""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""9"" [label=""throw $stack6""];\n	""10"" [label=""token := @parameter0: java.lang.Object""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._nextToken(),Method,No Comment,"protected int _nextToken() throws IOException {\n    try {\n        return _xmlTokens.next();\n    } catch (XMLStreamException e) {\n        return StaxUtil.throwAsParseException(e, this);\n    } catch (IllegalStateException e) {\n        // 08-Apr-2021, tatu: Should improve on this, wrt better information\n        //   on issue.\n        throw new JsonParseException(this, e.getMessage(), e);\n    }\n}",int _nextToken(),"digraph cfg__nextToken {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.Integer: int intValue()>()""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int next()>()""];\n	""4"" [label=""$stack4 := @caughtexception""];\n	""5"" [label=""$stack5 = virtualinvoke e.<java.lang.IllegalStateException: java.lang.String getMessage()>()""];\n	""6"" [label=""$stack6 = new com.fasterxml.jackson.core.JsonParseException""];\n	""7"" [label=""$stack7 := @caughtexception""];\n	""8"" [label=""$stack8 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, this)""];\n	""9"" [label=""$stack9 = (java.lang.Integer) $stack8""];\n	""10"" [label=""e = $stack4""];\n	""11"" [label=""e = $stack7""];\n	""12"" [label=""return $stack10""];\n	""13"" [label=""return $stack3""];\n	""14"" [label=""specialinvoke $stack6.<com.fasterxml.jackson.core.JsonParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)>(this, $stack5, e)""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""16"" [label=""throw $stack6""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_except""];\n	""2"" -> ""7""[label=""cfg_except""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""7""[label=""cfg_except""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser._skipEndElement(),Method,No Comment,"protected void _skipEndElement() throws IOException {\n    try {\n        _xmlTokens.skipEndElement();\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsParseException(e, this);\n    } catch (Exception e) {\n        throw new JsonParseException(this, e.getMessage(), e);\n    }\n}",void _skipEndElement(),"digraph cfg__skipEndElement {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""2"" [label=""$stack3 := @caughtexception""];\n	""3"" [label=""$stack4 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""4"" [label=""$stack5 = new com.fasterxml.jackson.core.JsonParseException""];\n	""5"" [label=""$stack6 := @caughtexception""];\n	""6"" [label=""e = $stack3""];\n	""7"" [label=""e = $stack6""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""return""];\n	""11"" [label=""specialinvoke $stack5.<com.fasterxml.jackson.core.JsonParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)>(this, $stack4, e)""];\n	""12"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, this)""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""14"" [label=""throw $stack5""];\n	""15"" [label=""virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void skipEndElement()>()""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""1"" -> ""5""[label=""cfg_except""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_except""];\n	""15"" -> ""5""[label=""cfg_except""];\n	""15"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_goto""];\n	""9"" -> ""10""[label=""cfg_goto""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.<init>(IOContext,int,int,ObjectCodec,XMLStreamReader,XmlNameProcessor)",Constructor,No Comment,"public FromXmlParser(IOContext ctxt, int genericParserFeatures, int xmlFeatures, ObjectCodec codec, XMLStreamReader xmlReader, XmlNameProcessor tagProcessor) throws IOException {\n    super(genericParserFeatures, ctxt.streamReadConstraints());\n    _formatFeatures = xmlFeatures;\n    _ioContext = ctxt;\n    _objectCodec = codec;\n    _parsingContext = XmlReadContext.createRootContext(-1, -1);\n    _xmlTokens = new XmlTokenStream(xmlReader, ctxt.contentReference(), _formatFeatures, tagProcessor);\n    final int firstToken;\n    try {\n        firstToken = _xmlTokens.initialize();\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsParseException(e, this);\n        return;\n    }\n    // 04-Jan-2019, tatu: Root-level nulls need slightly specific handling;\n    //    changed in 2.10.2\n    if (_xmlTokens.hasXsiNil()) {\n        _nextToken = JsonToken.VALUE_NULL;\n    } else {\n        switch(firstToken) {\n            case XmlTokenStream.XML_START_ELEMENT:\n                // Removed from 2.14:\n                // case XmlTokenStream.XML_DELAYED_START_ELEMENT:\n                _nextToken = JsonToken.START_OBJECT;\n                break;\n            case XmlTokenStream.XML_ROOT_TEXT:\n                _currText = _xmlTokens.getText();\n                // [dataformat-xml#435]: may get `null` from empty element...\n                // It's complicated.\n                if (_currText == null) {\n                    _nextToken = JsonToken.VALUE_NULL;\n                } else {\n                    _nextToken = JsonToken.VALUE_STRING;\n                }\n                break;\n            default:\n                _reportError(""Internal problem: invalid starting state (%s)"", _xmlTokens._currentStateDesc());\n        }\n    }\n}","void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)","digraph cfg_init {\n	""1"" [label=""$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext createRootContext(int,int)>(-1, -1)""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures>""];\n	""3"" [label=""$stack12 = virtualinvoke ctxt.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.io.ContentReference contentReference()>()""];\n	""4"" [label=""$stack13 = new com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean hasXsiNil()>()""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String getText()>()""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText>""];\n	""11"" [label=""$stack20 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""12"" [label=""$stack21 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>""];\n	""13"" [label=""$stack22 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens>""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _currentStateDesc()>()""];\n	""16"" [label=""$stack25 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>""];\n	""17"" [label=""$stack26 := @caughtexception""];\n	""18"" [label=""$stack9 = virtualinvoke ctxt.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()>()""];\n	""19"" [label=""codec := @parameter3: com.fasterxml.jackson.core.ObjectCodec""];\n	""20"" [label=""ctxt := @parameter0: com.fasterxml.jackson.core.io.IOContext""];\n	""21"" [label=""e = $stack26""];\n	""22"" [label=""firstToken = virtualinvoke $stack14.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int initialize()>()""];\n	""23"" [label=""genericParserFeatures := @parameter1: int""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""if $stack16 == 0""];\n	""30"" [label=""if $stack19 != null""];\n	""31"" [label=""return""];\n	""32"" [label=""return""];\n	""33"" [label=""specialinvoke $stack13.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void <init>(javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.core.io.ContentReference,int,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(xmlReader, $stack12, $stack11, tagProcessor)""];\n	""34"" [label=""specialinvoke this.<com.fasterxml.jackson.core.base.ParserMinimalBase: void <init>(int,com.fasterxml.jackson.core.StreamReadConstraints)>(genericParserFeatures, $stack9)""];\n	""35"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, this)""];\n	""36"" [label=""switch(firstToken) \{     case 1:     case 7:     default:  \}""];\n	""37"" [label=""tagProcessor := @parameter5: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""38"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""39"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack20""];\n	""40"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack21""];\n	""41"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack22""];\n	""42"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.JsonToken _nextToken> = $stack25""];\n	""43"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = codec""];\n	""44"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.io.IOContext _ioContext> = ctxt""];\n	""45"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder> = null""];\n	""46"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext _parsingContext> = $stack10""];\n	""47"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream _xmlTokens> = $stack13""];\n	""48"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _formatFeatures> = xmlFeatures""];\n	""49"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: int _numTypesValid> = 0""];\n	""50"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _cfgNameForTextElement> = \""\""""];\n	""51"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: java.lang.String _currText> = $stack18""];\n	""52"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void _reportError(java.lang.String,java.lang.Object)>(\""Internal problem: invalid starting state (%s)\"", $stack24)""];\n	""53"" [label=""xmlFeatures := @parameter2: int""];\n	""54"" [label=""xmlReader := @parameter4: javax.xml.stream.XMLStreamReader""];\n	""1"" -> ""46""[label=""cfg_next""];\n	""10"" -> ""30""[label=""cfg_next""];\n	""11"" -> ""39""[label=""cfg_next""];\n	""12"" -> ""40""[label=""cfg_next""];\n	""13"" -> ""41""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""52""[label=""cfg_next""];\n	""16"" -> ""42""[label=""cfg_next""];\n	""17"" -> ""21""[label=""cfg_next""];\n	""18"" -> ""34""[label=""cfg_next""];\n	""19"" -> ""54""[label=""cfg_next""];\n	""2"" -> ""33""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""35""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_except""];\n	""22"" -> ""24""[label=""cfg_next""];\n	""23"" -> ""53""[label=""cfg_next""];\n	""24"" -> ""6""[label=""cfg_goto""];\n	""25"" -> ""32""[label=""cfg_goto""];\n	""26"" -> ""32""[label=""cfg_goto""];\n	""27"" -> ""32""[label=""cfg_goto""];\n	""28"" -> ""32""[label=""cfg_goto""];\n	""29"" -> ""16""[label=""cfg_false""];\n	""29"" -> ""36""[label=""cfg_true""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_true""];\n	""30"" -> ""12""[label=""cfg_false""];\n	""33"" -> ""47""[label=""cfg_next""];\n	""34"" -> ""50""[label=""cfg_next""];\n	""35"" -> ""31""[label=""cfg_next""];\n	""36"" -> ""13""[label=""cfg_switch""];\n	""36"" -> ""14""[label=""cfg_switch""];\n	""36"" -> ""8""[label=""cfg_switch""];\n	""37"" -> ""18""[label=""cfg_next""];\n	""38"" -> ""20""[label=""cfg_next""];\n	""39"" -> ""28""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""27""[label=""cfg_next""];\n	""41"" -> ""26""[label=""cfg_next""];\n	""42"" -> ""25""[label=""cfg_next""];\n	""43"" -> ""1""[label=""cfg_next""];\n	""44"" -> ""43""[label=""cfg_next""];\n	""45"" -> ""49""[label=""cfg_next""];\n	""46"" -> ""4""[label=""cfg_next""];\n	""47"" -> ""5""[label=""cfg_next""];\n	""48"" -> ""44""[label=""cfg_next""];\n	""49"" -> ""48""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_except""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""50"" -> ""45""[label=""cfg_next""];\n	""51"" -> ""10""[label=""cfg_next""];\n	""52"" -> ""32""[label=""cfg_next""];\n	""53"" -> ""19""[label=""cfg_next""];\n	""54"" -> ""37""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""29""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""51""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.collectDefaults(),Method,* Method that calculates bit set (flags) of all features that\n         * are enabled by default.,public static int collectDefaults() {\n    int flags = 0;\n    for (Feature f : values()) {\n        if (f.enabledByDefault()) {\n            flags |= f.getMask();\n        }\n    }\n    return flags;\n},int collectDefaults(),"digraph cfg_collectDefaults {\n	""1"" [label=""$stack5 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean enabledByDefault()>()""];\n	""2"" [label=""$stack6 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: int getMask()>()""];\n	""3"" [label=""f = l1[l3]""];\n	""4"" [label=""flags = 0""];\n	""5"" [label=""flags = flags | $stack6""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""if l3 >= l2""];\n	""9"" [label=""l1 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature[] values()>()""];\n	""10"" [label=""l2 = lengthof l1""];\n	""11"" [label=""l3 = 0""];\n	""12"" [label=""l3 = l3 + 1""];\n	""13"" [label=""return flags""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.enabledByDefault(),Method,No Comment,@Override\npublic boolean enabledByDefault() {\n    return _defaultState;\n},boolean enabledByDefault(),"digraph cfg_enabledByDefault {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean _defaultState>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.getMask(),Method,No Comment,@Override\npublic int getMask() {\n    return _mask;\n},int getMask(),"digraph cfg_getMask {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: int _mask>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature.enabledIn(int),Method,No Comment,@Override\npublic boolean enabledIn(int flags) {\n    return (flags & getMask()) != 0;\n},boolean enabledIn(int),"digraph cfg_enabledIn {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: int getMask()>()""];\n	""2"" [label=""$stack3 = flags & $stack2""];\n	""3"" [label=""$stack4 = 0""];\n	""4"" [label=""$stack4 = 1""];\n	""5"" [label=""flags := @parameter0: int""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.initialize(),Method,"* Second part of initialization, to be called immediately after construction\n     *\n     * @since 2.12","public int initialize() throws XMLStreamException {\n    // Let's ensure we point to START_ELEMENT...\n    if (_xmlReader.getEventType() != XMLStreamConstants.START_ELEMENT) {\n        throw new IllegalArgumentException(""Invalid XMLStreamReader passed: should be pointing to START_ELEMENT ("" + XMLStreamConstants.START_ELEMENT + ""), instead got "" + _xmlReader.getEventType());\n    }\n    // sets _attributeCount, _nextAttributeIndex\n    _checkXsiAttributes();\n    _decodeElementName(_xmlReader.getNamespaceURI(), _xmlReader.getLocalName());\n    // 02-Jul-2020, tatu: Two choices: if child elements OR attributes, expose\n    //    as Object value; otherwise expose as Text\n    // 06-Sep-2022, tatu: Actually expose as Object in almost every situation\n    //    as of 2.14: otherwise we have lots of issues with empty POJOs,\n    //    Lists, Maps\n    if (_xmlReader.isEmptyElement() && FromXmlParser.Feature.EMPTY_ELEMENT_AS_NULL.enabledIn(_formatFeatures) && !_xsiNilFound && _attributeCount < 1) {\n        // 06-Sep-2022, tatu: In fact the only special case of null conversion\n        //    of the root empty element\n        _textValue = null;\n        _startElementAfterText = false;\n        return (_currentState = XML_ROOT_TEXT);\n    }\n    return (_currentState = XML_START_ELEMENT);\n    // 06-Sep-2022, tatu: This code was used in 2.12, 2.13, may be\n    //   removed after 2.14 if/when no longer needed\n    // copied from START_ELEMENT section of _next():\n    /*\n        final String text = _collectUntilTag();\n        if (text == null) {\n            // 30-Nov-2020, tatu: [dataformat-xml#435], this is tricky\n            //   situation since we got coerced `null`... but at least for\n            //   now will have to report as ""root String"" (... with null contents)\n            _textValue = null;\n            _startElementAfterText = false;\n            return (_currentState = XML_ROOT_TEXT);\n        }\n\n        final boolean startElementNext = _xmlReader.getEventType() == XMLStreamReader.START_ELEMENT;\n        // If we have no/all-whitespace text followed by START_ELEMENT, ignore text\n        if (startElementNext) {\n            if (_allWs(text)) {\n                _textValue = null;\n                return (_currentState = XML_DELAYED_START_ELEMENT);\n            }\n            _textValue = text;\n            return (_currentState = XML_DELAYED_START_ELEMENT);\n        }\n        _startElementAfterText = false;\n        _textValue = text;\n        return (_currentState = XML_ROOT_TEXT);\n        */\n}",int initialize(),"digraph cfg_initialize {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""2"" [label=""$stack10 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature EMPTY_ELEMENT_AS_NULL>""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean enabledIn(int)>($stack9)""];\n	""4"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _xsiNilFound>""];\n	""5"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _attributeCount>""];\n	""6"" [label=""$stack14 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""8"" [label=""$stack16 = interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamReader2: int getEventType()>()""];\n	""9"" [label=""$stack17 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Invalid XMLStreamReader passed: should be pointing to START_ELEMENT (1), instead got \"")""];\n	""10"" [label=""$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack16)""];\n	""11"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""12"" [label=""$stack2 = interfaceinvoke $stack1.<org.codehaus.stax2.XMLStreamReader2: int getEventType()>()""];\n	""13"" [label=""$stack20 = new java.lang.IllegalArgumentException""];\n	""14"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""15"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""16"" [label=""$stack5 = interfaceinvoke $stack4.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getLocalName()>()""];\n	""17"" [label=""$stack6 = interfaceinvoke $stack3.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getNamespaceURI()>()""];\n	""18"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""19"" [label=""$stack8 = interfaceinvoke $stack7.<org.codehaus.stax2.XMLStreamReader2: boolean isEmptyElement()>()""];\n	""20"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _formatFeatures>""];\n	""21"" [label=""if $stack11 == 0""];\n	""22"" [label=""if $stack12 != 0""];\n	""23"" [label=""if $stack13 >= 1""];\n	""24"" [label=""if $stack2 == 1""];\n	""25"" [label=""if $stack8 == 0""];\n	""26"" [label=""return 1""];\n	""27"" [label=""return 7""];\n	""28"" [label=""specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>()""];\n	""29"" [label=""specialinvoke $stack20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack19)""];\n	""30"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void _checkXsiAttributes()>()""];\n	""31"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""32"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText> = 0""];\n	""33"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 1""];\n	""34"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 7""];\n	""35"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue> = null""];\n	""36"" [label=""throw $stack20""];\n	""37"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void _decodeElementName(java.lang.String,java.lang.String)>($stack6, $stack5)""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""29""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""37""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""25""[label=""cfg_next""];\n	""2"" -> ""20""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_next""];\n	""21"" -> ""33""[label=""cfg_true""];\n	""21"" -> ""4""[label=""cfg_false""];\n	""22"" -> ""33""[label=""cfg_true""];\n	""22"" -> ""5""[label=""cfg_false""];\n	""23"" -> ""33""[label=""cfg_true""];\n	""23"" -> ""35""[label=""cfg_false""];\n	""24"" -> ""13""[label=""cfg_false""];\n	""24"" -> ""30""[label=""cfg_true""];\n	""25"" -> ""2""[label=""cfg_false""];\n	""25"" -> ""33""[label=""cfg_true""];\n	""28"" -> ""9""[label=""cfg_next""];\n	""29"" -> ""36""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""30"" -> ""14""[label=""cfg_next""];\n	""31"" -> ""1""[label=""cfg_next""];\n	""32"" -> ""34""[label=""cfg_next""];\n	""33"" -> ""26""[label=""cfg_next""];\n	""34"" -> ""27""[label=""cfg_next""];\n	""35"" -> ""32""[label=""cfg_next""];\n	""37"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getXmlReader(),Method,No Comment,public XMLStreamReader2 getXmlReader() {\n    return _xmlReader;\n},org.codehaus.stax2.XMLStreamReader2 getXmlReader(),"digraph cfg_getXmlReader {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.setFormatFeatures(int),Method,* @since 2.9,protected void setFormatFeatures(int f) {\n    _formatFeatures = f;\n    _cfgProcessXsiNil = FromXmlParser.Feature.PROCESS_XSI_NIL.enabledIn(f);\n    _cfgProcessXsiType = FromXmlParser.Feature.AUTO_DETECT_XSI_TYPE.enabledIn(f);\n},void setFormatFeatures(int),"digraph cfg_setFormatFeatures {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature PROCESS_XSI_NIL>""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean enabledIn(int)>(f)""];\n	""3"" [label=""$stack4 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature AUTO_DETECT_XSI_TYPE>""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean enabledIn(int)>(f)""];\n	""5"" [label=""f := @parameter0: int""];\n	""6"" [label=""return""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _cfgProcessXsiNil> = $stack3""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _cfgProcessXsiType> = $stack5""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _formatFeatures> = f""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.next(),Method,public int next0() throws XMLStreamException,public int next() throws XMLStreamException {\n    if (_repeatCurrentToken) {\n        _repeatCurrentToken = false;\n        return _currentState;\n    }\n    if (_repeatElement != 0) {\n        return (_currentState = _handleRepeatElement());\n    }\n    return _next();\n},int next(),"digraph cfg_next {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _repeatCurrentToken>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _repeatElement>""];\n	""3"" [label=""$stack3 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _next()>()""];\n	""4"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _handleRepeatElement()>()""];\n	""5"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""6"" [label=""if $stack1 == 0""];\n	""7"" [label=""if $stack2 == 0""];\n	""8"" [label=""return $stack3""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""return $stack5""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _repeatCurrentToken> = 0""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = $stack4""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.skipEndElement(),Method,No Comment,"public void skipEndElement() throws IOException, XMLStreamException {\n    int type = next();\n    if (type != XML_END_ELEMENT) {\n        throw new IOException(String.format(""Internal error: Expected END_ELEMENT, got event of type %s"", _stateDesc(type)));\n    }\n}",void skipEndElement(),"digraph cfg_skipEndElement {\n	""1"" [label=""$stack2 = newarray (java.lang.Object)[1]""];\n	""2"" [label=""$stack2[0] = $stack3""];\n	""3"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _stateDesc(int)>(type)""];\n	""4"" [label=""$stack4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\""Internal error: Expected END_ELEMENT, got event of type %s\"", $stack2)""];\n	""5"" [label=""$stack5 = new java.io.IOException""];\n	""6"" [label=""if type == 2""];\n	""7"" [label=""return""];\n	""8"" [label=""specialinvoke $stack5.<java.io.IOException: void <init>(java.lang.String)>($stack4)""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""10"" [label=""throw $stack5""];\n	""11"" [label=""type = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int next()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getCurrentToken(),Method,No Comment,public int getCurrentToken() {\n    return _currentState;\n},int getCurrentToken(),"digraph cfg_getCurrentToken {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getText(),Method,No Comment,public String getText() {\n    return _textValue;\n},java.lang.String getText(),"digraph cfg_getText {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getLocalName(),Method,"* Accessor for local name of current named event (that is,\n     * {@code XML_START_ELEMENT} or {@code XML_ATTRIBUTE_NAME}).\n     *<p>\n     * NOTE: name NOT accessible on {@code XML_END_ELEMENT}",public String getLocalName() {\n    return _localName;\n},java.lang.String getLocalName(),"digraph cfg_getLocalName {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getNamespaceURI(),Method,No Comment,public String getNamespaceURI() {\n    return _namespaceURI;\n},java.lang.String getNamespaceURI(),"digraph cfg_getNamespaceURI {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.hasXsiNil(),Method,No Comment,public boolean hasXsiNil() {\n    return _xsiNilFound;\n},boolean hasXsiNil(),"digraph cfg_hasXsiNil {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _xsiNilFound>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.closeCompletely(),Method,No Comment,public void closeCompletely() throws XMLStreamException {\n    _xmlReader.closeCompletely();\n},void closeCompletely(),"digraph cfg_closeCompletely {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""2"" [label=""interfaceinvoke $stack1.<org.codehaus.stax2.XMLStreamReader2: void closeCompletely()>()""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.close(),Method,No Comment,public void close() throws XMLStreamException {\n    _xmlReader.close();\n},void close(),"digraph cfg_close {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""2"" [label=""interfaceinvoke $stack1.<org.codehaus.stax2.XMLStreamReader2: void close()>()""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getCurrentLocation(),Method,No Comment,public JsonLocation getCurrentLocation() {\n    return _extractLocation(_xmlReader.getLocationInfo().getCurrentLocation());\n},com.fasterxml.jackson.core.JsonLocation getCurrentLocation(),"digraph cfg_getCurrentLocation {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.LocationInfo getLocationInfo()>()""];\n	""3"" [label=""$stack3 = interfaceinvoke $stack2.<org.codehaus.stax2.LocationInfo: org.codehaus.stax2.XMLStreamLocation2 getCurrentLocation()>()""];\n	""4"" [label=""$stack4 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.core.JsonLocation _extractLocation(org.codehaus.stax2.XMLStreamLocation2)>($stack3)""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.getTokenLocation(),Method,No Comment,public JsonLocation getTokenLocation() {\n    return _extractLocation(_xmlReader.getLocationInfo().getStartLocation());\n},com.fasterxml.jackson.core.JsonLocation getTokenLocation(),"digraph cfg_getTokenLocation {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""2"" [label=""$stack2 = interfaceinvoke $stack1.<org.codehaus.stax2.XMLStreamReader2: org.codehaus.stax2.LocationInfo getLocationInfo()>()""];\n	""3"" [label=""$stack3 = interfaceinvoke $stack2.<org.codehaus.stax2.LocationInfo: org.codehaus.stax2.XMLStreamLocation2 getStartLocation()>()""];\n	""4"" [label=""$stack4 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.core.JsonLocation _extractLocation(org.codehaus.stax2.XMLStreamLocation2)>($stack3)""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.repeatStartElement(),Method,"* Method used to add virtual wrapping, which just duplicates START_ELEMENT\n     * stream points to, and its matching closing element.","protected void repeatStartElement() {\n    //System.out.println("" XmlTokenStream.repeatStartElement() for <""+_localName+"">, _currentWrapper was: ""+_currentWrapper);\n    // sanity check: can only be used when just returned START_ELEMENT:\n    if (_currentState != XML_START_ELEMENT) {\n        // 14-May-2020, tatu: Looks like we DO end up here with empty Lists; if so,\n        //    should NOT actually wrap.\n        if (_currentState == XML_END_ELEMENT) {\n            return;\n        }\n        throw new IllegalStateException(""Current state not XML_START_ELEMENT but "" + _currentStateDesc());\n    }\n    // Important: add wrapper, to keep track...\n    if (_currentWrapper == null) {\n        _currentWrapper = ElementWrapper.matchingWrapper(null, _localName, _namespaceURI);\n    } else {\n        _currentWrapper = ElementWrapper.matchingWrapper(_currentWrapper.getParent(), _localName, _namespaceURI);\n    }\n    //System.out.println("" repeatStartElement for ""+_localName+"", _currentWrapper now: ""+_currentWrapper);\n    _repeatElement = REPLAY_START_DUP;\n}",void repeatStartElement(),"digraph cfg_repeatStartElement {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""2"" [label=""$stack10 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper matchingWrapper(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,java.lang.String,java.lang.String)>(null, $stack9, $stack8)""];\n	""3"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""4"" [label=""$stack12 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack13 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _currentStateDesc()>()""];\n	""6"" [label=""$stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Current state not XML_START_ELEMENT but \"")""];\n	""7"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13)""];\n	""8"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack17 = new java.lang.IllegalStateException""];\n	""10"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""11"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""12"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI>""];\n	""13"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName>""];\n	""14"" [label=""$stack6 = virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper getParent()>()""];\n	""15"" [label=""$stack7 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper matchingWrapper(com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper,java.lang.String,java.lang.String)>($stack6, $stack5, $stack4)""];\n	""16"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI>""];\n	""17"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName>""];\n	""18"" [label=""goto""];\n	""19"" [label=""if $stack1 == 1""];\n	""20"" [label=""if $stack11 != 2""];\n	""21"" [label=""if $stack2 != null""];\n	""22"" [label=""return""];\n	""23"" [label=""return""];\n	""24"" [label=""specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""specialinvoke $stack17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack16)""];\n	""26"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack10""];\n	""28"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack7""];\n	""29"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _repeatElement> = 1""];\n	""30"" [label=""throw $stack17""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""28""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_goto""];\n	""19"" -> ""10""[label=""cfg_true""];\n	""19"" -> ""3""[label=""cfg_false""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_false""];\n	""20"" -> ""9""[label=""cfg_true""];\n	""21"" -> ""11""[label=""cfg_true""];\n	""21"" -> ""17""[label=""cfg_false""];\n	""24"" -> ""6""[label=""cfg_next""];\n	""25"" -> ""30""[label=""cfg_next""];\n	""26"" -> ""1""[label=""cfg_next""];\n	""27"" -> ""18""[label=""cfg_next""];\n	""28"" -> ""29""[label=""cfg_next""];\n	""29"" -> ""23""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.pushbackCurrentToken(),Method,"* Method that can be called to ask stream to literally just return current token\n     * with the next call to {@link #next()}, without more work.\n     *\n     * @since 2.12",protected void pushbackCurrentToken() {\n    _repeatCurrentToken = true;\n},void pushbackCurrentToken(),"digraph cfg_pushbackCurrentToken {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""3"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _repeatCurrentToken> = 1""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.skipAttributes(),Method,"* Method called to skip any attributes current START_ELEMENT may have,\n     * so that they are not returned as token.\n     * \n     * @since 2.1","protected void skipAttributes() {\n    //System.out.println("" XmlTokenStream.skipAttributes(), state: ""+_currentStateDesc());\n    switch(_currentState) {\n        case XML_ATTRIBUTE_NAME:\n            _attributeCount = 0;\n            _currentState = XML_START_ELEMENT;\n            break;\n        case XML_START_ELEMENT:\n            // 06-Jan-2012, tatu: As per [#47] it looks like we should NOT do anything\n            //   in this particular case, because it occurs when original element had\n            //   no attributes and we now point to the first child element.\n            //              _attributeCount = 0;\n            break;\n        case XML_TEXT:\n            // nothing to do... is it even legal?\n            break;\n        /*\n        case XML_DELAYED_START_ELEMENT:\n            // 03-Jul-2020, tatu: and here nothing to do either... ?\n            break;\n            */\n        default:\n            throw new IllegalStateException(""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME but "" + _currentStateDesc());\n    }\n}",void skipAttributes(),"digraph cfg_skipAttributes {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""2"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _currentStateDesc()>()""];\n	""4"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Current state not XML_START_ELEMENT or XML_ATTRIBUTE_NAME but \"")""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3)""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack7 = new java.lang.IllegalStateException""];\n	""8"" [label=""goto""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""return""];\n	""12"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""13"" [label=""specialinvoke $stack7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack6)""];\n	""14"" [label=""switch($stack1) \{     case 1:     case 2:     case 3:     case 4:     case 5:     default:  \}""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _attributeCount> = 0""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 1""];\n	""18"" [label=""throw $stack7""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_goto""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""18""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_switch""];\n	""14"" -> ""7""[label=""cfg_switch""];\n	""14"" -> ""8""[label=""cfg_switch""];\n	""14"" -> ""9""[label=""cfg_switch""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_goto""];\n	""9"" -> ""11""[label=""cfg_goto""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._next(),Method,No Comment,"private final int _next() throws XMLStreamException {\n    //System.out.println("" XmlTokenStream._next(), state: ""+_currentStateDesc());\n    switch(_currentState) {\n        case XML_ATTRIBUTE_VALUE:\n            ++_nextAttributeIndex;\n        // fall through\n        case // attributes to return?\n        XML_START_ELEMENT:\n            // 06-Sep-2019, tatu: `xsi:nil` to induce ""real"" null value?\n            if (_xsiNilFound) {\n                _xsiNilFound = false;\n                // 08-Jul-2021, tatu: as per [dataformat-xml#467] just skip anything\n                //   element might have, no need to ensure it was empty\n                _xmlReader.skipElement();\n                return _handleEndElement();\n            }\n            if (_nextAttributeIndex < _attributeCount) {\n                //System.out.println("" XmlTokenStream._next(): Got attr(s)!"");\n                _decodeAttributeName(_xmlReader.getAttributeNamespace(_nextAttributeIndex), _xmlReader.getAttributeLocalName(_nextAttributeIndex));\n                _textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\n                return (_currentState = XML_ATTRIBUTE_NAME);\n            }\n            // otherwise need to find START/END_ELEMENT or text\n            String text = _collectUntilTag();\n            //System.out.println("" XmlTokenStream._next(): _collectUntilTag -> '""+text+""'"");\n            final boolean startElementNext = _xmlReader.getEventType() == XMLStreamReader.START_ELEMENT;\n            //System.out.println("" XmlTokenStream._next(): startElementNext? ""+startElementNext);\n            // If we have no/all-whitespace text followed by START_ELEMENT, ignore text\n            if (startElementNext) {\n                if (_allWs(text)) {\n                    _startElementAfterText = false;\n                    return _initStartElement();\n                }\n                _startElementAfterText = true;\n                _textValue = text;\n                return (_currentState = XML_TEXT);\n            }\n            // For END_ELEMENT we will return text, if any\n            if (text != null) {\n                _startElementAfterText = false;\n                _textValue = text;\n                return (_currentState = XML_TEXT);\n            }\n            _startElementAfterText = false;\n            return _handleEndElement();\n        /*\n        case XML_DELAYED_START_ELEMENT: // since 2.12, to support scalar Root Value\n            // Two cases: either ""simple"" with not text\n           if (_textValue == null) {\n               return _initStartElement();\n           }\n           // or one where there is first text (to translate into """":<text> key/value entry)\n           // then followed by start element\n           _startElementAfterText = true;\n           return (_currentState = XML_TEXT);\n           */\n        case XML_ATTRIBUTE_NAME:\n            // if we just returned name, will need to just send value next\n            return (_currentState = XML_ATTRIBUTE_VALUE);\n        case XML_TEXT:\n            // mixed text with other elements\n            if (_startElementAfterText) {\n                _startElementAfterText = false;\n                return _initStartElement();\n            }\n            // text followed by END_ELEMENT\n            return _handleEndElement();\n        case XML_ROOT_TEXT:\n            close();\n            return (_currentState = XML_END);\n        case XML_END:\n            return XML_END;\n    }\n    // Ok: must be END_ELEMENT; see what tag we get (or end)\n    switch(_skipAndCollectTextUntilTag()) {\n        case XMLStreamConstants.END_DOCUMENT:\n            close();\n            return (_currentState = XML_END);\n        case XMLStreamConstants.END_ELEMENT:\n            // 24-May-2020, tatu: Need to see if we have ""mixed content"" to offer\n            if (!_allWs(_textValue)) {\n                // _textValue already set\n                return (_currentState = XML_TEXT);\n            }\n            return _handleEndElement();\n    }\n    // 24-May-2020, tatu: Need to see if we have ""mixed content"" to offer\n    if (!_allWs(_textValue)) {\n        // _textValue already set\n        _startElementAfterText = true;\n        return (_currentState = XML_TEXT);\n    }\n    // START_ELEMENT...\n    return _initStartElement();\n}",int _next(),"digraph cfg__next {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _attributeCount>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""4"" [label=""$stack13 = interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamReader2: int getEventType()>()""];\n	""5"" [label=""$stack14 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _handleEndElement()>()""];\n	""6"" [label=""$stack15 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _allWs(java.lang.String)>(text)""];\n	""7"" [label=""$stack16 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _initStartElement()>()""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex>""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""12"" [label=""$stack21 = interfaceinvoke $stack20.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getAttributeLocalName(int)>($stack19)""];\n	""13"" [label=""$stack22 = interfaceinvoke $stack18.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getAttributeNamespace(int)>($stack17)""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex>""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""16"" [label=""$stack25 = interfaceinvoke $stack24.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getAttributeValue(int)>($stack23)""];\n	""17"" [label=""$stack26 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""18"" [label=""$stack27 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _handleEndElement()>()""];\n	""19"" [label=""$stack28 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _skipAndCollectTextUntilTag()>()""];\n	""20"" [label=""$stack29 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue>""];\n	""21"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""22"" [label=""$stack30 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _allWs(java.lang.String)>($stack29)""];\n	""23"" [label=""$stack31 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _handleEndElement()>()""];\n	""24"" [label=""$stack32 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue>""];\n	""25"" [label=""$stack33 = staticinvoke <com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _allWs(java.lang.String)>($stack32)""];\n	""26"" [label=""$stack34 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _initStartElement()>()""];\n	""27"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText>""];\n	""28"" [label=""$stack5 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _handleEndElement()>()""];\n	""29"" [label=""$stack6 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _initStartElement()>()""];\n	""30"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex>""];\n	""31"" [label=""$stack8 = $stack7 + 1""];\n	""32"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _xsiNilFound>""];\n	""33"" [label=""goto""];\n	""34"" [label=""if $stack11 >= $stack10""];\n	""35"" [label=""if $stack13 != 1""];\n	""36"" [label=""if $stack15 == 0""];\n	""37"" [label=""if $stack30 != 0""];\n	""38"" [label=""if $stack33 != 0""];\n	""39"" [label=""if $stack4 == 0""];\n	""40"" [label=""if $stack9 == 0""];\n	""41"" [label=""if startElementNext == 0""];\n	""42"" [label=""if text == null""];\n	""43"" [label=""interfaceinvoke $stack26.<org.codehaus.stax2.XMLStreamReader2: void skipElement()>()""];\n	""44"" [label=""return $stack14""];\n	""45"" [label=""return $stack16""];\n	""46"" [label=""return $stack27""];\n	""47"" [label=""return $stack31""];\n	""48"" [label=""return $stack34""];\n	""49"" [label=""return $stack5""];\n	""50"" [label=""return $stack6""];\n	""51"" [label=""return 3""];\n	""52"" [label=""return 4""];\n	""53"" [label=""return 5""];\n	""54"" [label=""return 5""];\n	""55"" [label=""return 5""];\n	""56"" [label=""return 5""];\n	""57"" [label=""return 8""];\n	""58"" [label=""return 8""];\n	""59"" [label=""return 8""];\n	""60"" [label=""startElementNext = 0""];\n	""61"" [label=""startElementNext = 1""];\n	""62"" [label=""switch($stack28) \{     case 2:     case 8:     default:  \}""];\n	""63"" [label=""switch($stack3) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     default:  \}""];\n	""64"" [label=""text = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _collectUntilTag()>()""];\n	""65"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""66"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText> = 0""];\n	""67"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText> = 0""];\n	""68"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText> = 0""];\n	""69"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText> = 0""];\n	""70"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText> = 1""];\n	""71"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _startElementAfterText> = 1""];\n	""72"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _xsiNilFound> = 0""];\n	""73"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 3""];\n	""74"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 4""];\n	""75"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 5""];\n	""76"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 5""];\n	""77"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 5""];\n	""78"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 5""];\n	""79"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 8""];\n	""80"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 8""];\n	""81"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex> = $stack8""];\n	""82"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue> = $stack25""];\n	""83"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue> = text""];\n	""84"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue> = text""];\n	""85"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void _decodeAttributeName(java.lang.String,java.lang.String)>($stack22, $stack21)""];\n	""86"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void close()>()""];\n	""87"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void close()>()""];\n	""1"" -> ""34""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""85""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""82""[label=""cfg_next""];\n	""17"" -> ""43""[label=""cfg_next""];\n	""18"" -> ""46""[label=""cfg_next""];\n	""19"" -> ""62""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""63""[label=""cfg_next""];\n	""22"" -> ""37""[label=""cfg_next""];\n	""23"" -> ""47""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""38""[label=""cfg_next""];\n	""26"" -> ""48""[label=""cfg_next""];\n	""27"" -> ""39""[label=""cfg_next""];\n	""28"" -> ""49""[label=""cfg_next""];\n	""29"" -> ""50""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""81""[label=""cfg_next""];\n	""32"" -> ""40""[label=""cfg_next""];\n	""33"" -> ""41""[label=""cfg_goto""];\n	""34"" -> ""64""[label=""cfg_true""];\n	""34"" -> ""9""[label=""cfg_false""];\n	""35"" -> ""60""[label=""cfg_true""];\n	""35"" -> ""61""[label=""cfg_false""];\n	""36"" -> ""66""[label=""cfg_false""];\n	""36"" -> ""70""[label=""cfg_true""];\n	""37"" -> ""23""[label=""cfg_true""];\n	""37"" -> ""76""[label=""cfg_false""];\n	""38"" -> ""26""[label=""cfg_true""];\n	""38"" -> ""71""[label=""cfg_false""];\n	""39"" -> ""28""[label=""cfg_true""];\n	""39"" -> ""69""[label=""cfg_false""];\n	""4"" -> ""35""[label=""cfg_next""];\n	""40"" -> ""2""[label=""cfg_true""];\n	""40"" -> ""72""[label=""cfg_false""];\n	""41"" -> ""42""[label=""cfg_true""];\n	""41"" -> ""6""[label=""cfg_false""];\n	""42"" -> ""67""[label=""cfg_false""];\n	""42"" -> ""68""[label=""cfg_true""];\n	""43"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""44""[label=""cfg_next""];\n	""6"" -> ""36""[label=""cfg_next""];\n	""60"" -> ""41""[label=""cfg_next""];\n	""61"" -> ""33""[label=""cfg_next""];\n	""62"" -> ""20""[label=""cfg_switch""];\n	""62"" -> ""24""[label=""cfg_switch""];\n	""62"" -> ""87""[label=""cfg_switch""];\n	""63"" -> ""19""[label=""cfg_switch""];\n	""63"" -> ""27""[label=""cfg_switch""];\n	""63"" -> ""30""[label=""cfg_switch""];\n	""63"" -> ""32""[label=""cfg_switch""];\n	""63"" -> ""57""[label=""cfg_switch""];\n	""63"" -> ""74""[label=""cfg_switch""];\n	""63"" -> ""86""[label=""cfg_switch""];\n	""64"" -> ""3""[label=""cfg_next""];\n	""65"" -> ""21""[label=""cfg_next""];\n	""66"" -> ""7""[label=""cfg_next""];\n	""67"" -> ""83""[label=""cfg_next""];\n	""68"" -> ""5""[label=""cfg_next""];\n	""69"" -> ""29""[label=""cfg_next""];\n	""7"" -> ""45""[label=""cfg_next""];\n	""70"" -> ""84""[label=""cfg_next""];\n	""71"" -> ""77""[label=""cfg_next""];\n	""72"" -> ""17""[label=""cfg_next""];\n	""73"" -> ""51""[label=""cfg_next""];\n	""74"" -> ""52""[label=""cfg_next""];\n	""75"" -> ""53""[label=""cfg_next""];\n	""76"" -> ""54""[label=""cfg_next""];\n	""77"" -> ""55""[label=""cfg_next""];\n	""78"" -> ""56""[label=""cfg_next""];\n	""79"" -> ""58""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""80"" -> ""59""[label=""cfg_next""];\n	""81"" -> ""32""[label=""cfg_next""];\n	""82"" -> ""73""[label=""cfg_next""];\n	""83"" -> ""75""[label=""cfg_next""];\n	""84"" -> ""78""[label=""cfg_next""];\n	""85"" -> ""15""[label=""cfg_next""];\n	""86"" -> ""79""[label=""cfg_next""];\n	""87"" -> ""80""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n","private , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._collectUntilTag(),Method,"* @return Collected text, if any, EXCEPT that if {@code FromXmlParser.Feature.EMPTY_ELEMENT_AS_NULL}\n     *    AND empty element, returns {@code null}","private final String _collectUntilTag() throws XMLStreamException {\n    // 21-Jun-2017, tatu: Whether exposed as `null` or """" is now configurable...\n    if (_xmlReader.isEmptyElement()) {\n        _xmlReader.next();\n        if (FromXmlParser.Feature.EMPTY_ELEMENT_AS_NULL.enabledIn(_formatFeatures)) {\n            return null;\n        }\n        return """";\n    }\n    CharSequence chars = null;\n    main_loop: while (_xmlReader.hasNext()) {\n        switch(_xmlReader.next()) {\n            case XMLStreamConstants.START_ELEMENT:\n                break main_loop;\n            case XMLStreamConstants.END_ELEMENT:\n            case XMLStreamConstants.END_DOCUMENT:\n                break main_loop;\n            // note: SPACE is ignorable (and seldom seen), not to be included\n            case XMLStreamConstants.CHARACTERS:\n            case XMLStreamConstants.CDATA:\n                // 17-Jul-2017, tatu: as per [dataformat-xml#236], need to try to...\n                {\n                    String str = _getText(_xmlReader);\n                    if (chars == null) {\n                        chars = str;\n                    } else {\n                        if (chars instanceof String) {\n                            chars = new StringBuilder(chars);\n                        }\n                        ((StringBuilder) chars).append(str);\n                    }\n                }\n                break;\n            default:\n        }\n    }\n    return (chars == null) ? """" : chars.toString();\n}",java.lang.String _collectUntilTag(),"digraph cfg__collectUntilTag {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""2"" [label=""$stack11 = chars instanceof java.lang.String""];\n	""3"" [label=""$stack12 = (java.lang.StringBuilder) chars""];\n	""4"" [label=""$stack13 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _formatFeatures>""];\n	""7"" [label=""$stack16 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature EMPTY_ELEMENT_AS_NULL>""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean enabledIn(int)>($stack15)""];\n	""9"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""10"" [label=""$stack4 = interfaceinvoke $stack3.<org.codehaus.stax2.XMLStreamReader2: boolean isEmptyElement()>()""];\n	""11"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""12"" [label=""$stack6 = interfaceinvoke $stack5.<org.codehaus.stax2.XMLStreamReader2: boolean hasNext()>()""];\n	""13"" [label=""$stack7 = \""\""""];\n	""14"" [label=""$stack7 = interfaceinvoke chars.<java.lang.CharSequence: java.lang.String toString()>()""];\n	""15"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""16"" [label=""$stack9 = interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamReader2: int next()>()""];\n	""17"" [label=""chars = $stack13""];\n	""18"" [label=""chars = null""];\n	""19"" [label=""chars = str""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack11 == 0""];\n	""27"" [label=""if $stack17 == 0""];\n	""28"" [label=""if $stack4 == 0""];\n	""29"" [label=""if $stack6 == 0""];\n	""30"" [label=""if chars != null""];\n	""31"" [label=""if chars != null""];\n	""32"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamReader2: int next()>()""];\n	""33"" [label=""return \""\""""];\n	""34"" [label=""return $stack7""];\n	""35"" [label=""return null""];\n	""36"" [label=""specialinvoke $stack13.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>(chars)""];\n	""37"" [label=""str = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _getText(org.codehaus.stax2.XMLStreamReader2)>($stack10)""];\n	""38"" [label=""switch($stack9) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     default:  \}""];\n	""39"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""40"" [label=""virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str)""];\n	""1"" -> ""37""[label=""cfg_next""];\n	""10"" -> ""28""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""29""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""34""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""38""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_next""];\n	""19"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""26""[label=""cfg_next""];\n	""20"" -> ""30""[label=""cfg_goto""];\n	""21"" -> ""30""[label=""cfg_goto""];\n	""22"" -> ""11""[label=""cfg_goto""];\n	""23"" -> ""24""[label=""cfg_goto""];\n	""24"" -> ""11""[label=""cfg_goto""];\n	""25"" -> ""34""[label=""cfg_goto""];\n	""26"" -> ""3""[label=""cfg_true""];\n	""26"" -> ""4""[label=""cfg_false""];\n	""27"" -> ""33""[label=""cfg_true""];\n	""27"" -> ""35""[label=""cfg_false""];\n	""28"" -> ""18""[label=""cfg_true""];\n	""28"" -> ""5""[label=""cfg_false""];\n	""29"" -> ""15""[label=""cfg_false""];\n	""29"" -> ""30""[label=""cfg_true""];\n	""3"" -> ""40""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_false""];\n	""30"" -> ""14""[label=""cfg_true""];\n	""31"" -> ""19""[label=""cfg_false""];\n	""31"" -> ""2""[label=""cfg_true""];\n	""32"" -> ""7""[label=""cfg_next""];\n	""36"" -> ""17""[label=""cfg_next""];\n	""37"" -> ""31""[label=""cfg_next""];\n	""38"" -> ""1""[label=""cfg_switch""];\n	""38"" -> ""20""[label=""cfg_switch""];\n	""38"" -> ""21""[label=""cfg_switch""];\n	""38"" -> ""22""[label=""cfg_switch""];\n	""39"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""36""[label=""cfg_next""];\n	""40"" -> ""24""[label=""cfg_next""];\n	""5"" -> ""32""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._skipAndCollectTextUntilTag(),Method,@since 2.12,"private final int _skipAndCollectTextUntilTag() throws XMLStreamException {\n    CharSequence chars = null;\n    while (_xmlReader.hasNext()) {\n        int type;\n        switch(type = _xmlReader.next()) {\n            case XMLStreamConstants.START_ELEMENT:\n            case XMLStreamConstants.END_ELEMENT:\n            case XMLStreamConstants.END_DOCUMENT:\n                _textValue = (chars == null) ? """" : chars.toString();\n                return type;\n            // note: SPACE is ignorable (and seldom seen), not to be included\n            case XMLStreamConstants.CHARACTERS:\n            case XMLStreamConstants.CDATA:\n                {\n                    String str = _getText(_xmlReader);\n                    if (chars == null) {\n                        chars = str;\n                    } else {\n                        if (chars instanceof String) {\n                            chars = new StringBuilder(chars);\n                        }\n                        ((StringBuilder) chars).append(str);\n                    }\n                }\n                break;\n            default:\n        }\n    }\n    throw new IllegalStateException(""Expected to find a tag, instead reached end of input"");\n}",int _skipAndCollectTextUntilTag(),"digraph cfg__skipAndCollectTextUntilTag {\n	""1"" [label=""$stack10 = (java.lang.StringBuilder) chars""];\n	""2"" [label=""$stack11 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack12 = \""\""""];\n	""4"" [label=""$stack12 = interfaceinvoke chars.<java.lang.CharSequence: java.lang.String toString()>()""];\n	""5"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""6"" [label=""$stack5 = interfaceinvoke $stack4.<org.codehaus.stax2.XMLStreamReader2: boolean hasNext()>()""];\n	""7"" [label=""$stack6 = new java.lang.IllegalStateException""];\n	""8"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""9"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""10"" [label=""$stack9 = chars instanceof java.lang.String""];\n	""11"" [label=""chars = $stack11""];\n	""12"" [label=""chars = null""];\n	""13"" [label=""chars = str""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""if $stack5 == 0""];\n	""19"" [label=""if $stack9 == 0""];\n	""20"" [label=""if chars != null""];\n	""21"" [label=""if chars != null""];\n	""22"" [label=""return type""];\n	""23"" [label=""specialinvoke $stack11.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>(chars)""];\n	""24"" [label=""specialinvoke $stack6.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\""Expected to find a tag, instead reached end of input\"")""];\n	""25"" [label=""str = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _getText(org.codehaus.stax2.XMLStreamReader2)>($stack8)""];\n	""26"" [label=""switch(type) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     case 9:     case 10:     case 11:     case 12:     default:  \}""];\n	""27"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""28"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _textValue> = $stack12""];\n	""29"" [label=""throw $stack6""];\n	""30"" [label=""type = interfaceinvoke $stack7.<org.codehaus.stax2.XMLStreamReader2: int next()>()""];\n	""31"" [label=""virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str)""];\n	""1"" -> ""31""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_goto""];\n	""15"" -> ""28""[label=""cfg_goto""];\n	""16"" -> ""17""[label=""cfg_goto""];\n	""17"" -> ""14""[label=""cfg_goto""];\n	""18"" -> ""7""[label=""cfg_true""];\n	""18"" -> ""8""[label=""cfg_false""];\n	""19"" -> ""1""[label=""cfg_true""];\n	""19"" -> ""2""[label=""cfg_false""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_false""];\n	""20"" -> ""4""[label=""cfg_true""];\n	""21"" -> ""10""[label=""cfg_true""];\n	""21"" -> ""13""[label=""cfg_false""];\n	""23"" -> ""11""[label=""cfg_next""];\n	""24"" -> ""29""[label=""cfg_next""];\n	""25"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_switch""];\n	""26"" -> ""20""[label=""cfg_switch""];\n	""26"" -> ""9""[label=""cfg_switch""];\n	""27"" -> ""12""[label=""cfg_next""];\n	""28"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""30"" -> ""26""[label=""cfg_next""];\n	""31"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""24""[label=""cfg_next""];\n	""8"" -> ""30""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_next""];\n}\n","private , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._getText(XMLStreamReader2),Method,No Comment,private final String _getText(XMLStreamReader2 r) throws XMLStreamException {\n    try {\n        return r.getText();\n    } catch (RuntimeException e) {\n        Throwable cause = e.getCause();\n        if (cause instanceof XMLStreamException) {\n            throw (XMLStreamException) cause;\n        }\n        throw e;\n    }\n},java.lang.String _getText(org.codehaus.stax2.XMLStreamReader2),"digraph cfg__getText {\n	""1"" [label=""$stack4 = interfaceinvoke r.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getText()>()""];\n	""2"" [label=""$stack5 := @caughtexception""];\n	""3"" [label=""$stack6 = cause instanceof javax.xml.stream.XMLStreamException""];\n	""4"" [label=""$stack7 = (javax.xml.stream.XMLStreamException) cause""];\n	""5"" [label=""cause = virtualinvoke e.<java.lang.RuntimeException: java.lang.Throwable getCause()>()""];\n	""6"" [label=""e = $stack5""];\n	""7"" [label=""if $stack6 == 0""];\n	""8"" [label=""r := @parameter0: org.codehaus.stax2.XMLStreamReader2""];\n	""9"" [label=""return $stack4""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""11"" [label=""throw $stack7""];\n	""12"" [label=""throw e""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n","private , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._initStartElement(),Method,No Comment,"private final int _initStartElement() throws XMLStreamException {\n    final String ns = _xmlReader.getNamespaceURI();\n    final String localName = _xmlReader.getLocalName();\n    _checkXsiAttributes();\n    // Support for virtual wrapping: in wrapping, may either create a new\n    // wrapper scope (if in sub-tree, or matches wrapper element itself),\n    // or implicitly close existing scope.\n    if (_currentWrapper != null) {\n        if (_currentWrapper.matchesWrapper(localName, ns)) {\n            _currentWrapper = _currentWrapper.intermediateWrapper();\n            //System.out.println("" _initStartElement(): START_ELEMENT (""+localName+"") DOES match [""+_currentWrapper+""]: leave/add intermediate"");\n        } else {\n            // implicit end is more interesting:\n            //System.out.println("" _initStartElement(): START_ELEMENT (""+localName+"") not matching '""+_localName+""'; add extra XML-END-ELEMENT!"");\n            _localName = _currentWrapper.getWrapperLocalName();\n            _namespaceURI = _currentWrapper.getWrapperNamespace();\n            _currentWrapper = _currentWrapper.getParent();\n            // Important! We also need to restore the START_ELEMENT, so:\n            _nextLocalName = localName;\n            _nextNamespaceURI = ns;\n            _repeatElement = REPLAY_START_DELAYED;\n            return (_currentState = XML_END_ELEMENT);\n        }\n    }\n    _decodeElementName(ns, localName);\n    return (_currentState = XML_START_ELEMENT);\n}",int _initStartElement(),"digraph cfg__initStartElement {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String getWrapperNamespace()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper getParent()>()""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper intermediateWrapper()>()""];\n	""7"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""8"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""9"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""10"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""11"" [label=""$stack7 = virtualinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: boolean matchesWrapper(java.lang.String,java.lang.String)>(localName, ns)""];\n	""12"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""13"" [label=""$stack9 = virtualinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String getWrapperLocalName()>()""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack5 == null""];\n	""16"" [label=""if $stack7 == 0""];\n	""17"" [label=""localName = interfaceinvoke $stack4.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getLocalName()>()""];\n	""18"" [label=""ns = interfaceinvoke $stack3.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getNamespaceURI()>()""];\n	""19"" [label=""return 1""];\n	""20"" [label=""return 2""];\n	""21"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void _checkXsiAttributes()>()""];\n	""22"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""23"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack13""];\n	""24"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack15""];\n	""25"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 1""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 2""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _repeatElement> = 3""];\n	""28"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = $stack9""];\n	""29"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = $stack11""];\n	""30"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _nextLocalName> = localName""];\n	""31"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _nextNamespaceURI> = ns""];\n	""32"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void _decodeElementName(java.lang.String,java.lang.String)>(ns, localName)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""32""[label=""cfg_goto""];\n	""15"" -> ""10""[label=""cfg_false""];\n	""15"" -> ""32""[label=""cfg_true""];\n	""16"" -> ""12""[label=""cfg_true""];\n	""16"" -> ""5""[label=""cfg_false""];\n	""17"" -> ""21""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""21"" -> ""9""[label=""cfg_next""];\n	""22"" -> ""7""[label=""cfg_next""];\n	""23"" -> ""30""[label=""cfg_next""];\n	""24"" -> ""14""[label=""cfg_next""];\n	""25"" -> ""19""[label=""cfg_next""];\n	""26"" -> ""20""[label=""cfg_next""];\n	""27"" -> ""26""[label=""cfg_next""];\n	""28"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""31""[label=""cfg_next""];\n	""31"" -> ""27""[label=""cfg_next""];\n	""32"" -> ""25""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""18""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n","private , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._checkXsiAttributes(),Method,* @since 2.10,"private final void _checkXsiAttributes() {\n    int count = _xmlReader.getAttributeCount();\n    _attributeCount = count;\n    // [dataformat-xml#354]: xsi:nul handling; at first only if first attribute\n    if (count >= 1) {\n        // [dataformat-xml#468]: may disable xsi:nil processing\n        if (_cfgProcessXsiNil && ""nil"".equals(_xmlReader.getAttributeLocalName(0))) {\n            if (XSI_NAMESPACE.equals(_xmlReader.getAttributeNamespace(0))) {\n                // need to skip, regardless of value\n                _nextAttributeIndex = 1;\n                // but only mark as nil marker if enabled\n                _xsiNilFound = ""true"".equals(_xmlReader.getAttributeValue(0));\n                return;\n            }\n        }\n    }\n    _nextAttributeIndex = 0;\n    _xsiNilFound = false;\n}",void _checkXsiAttributes(),"digraph cfg__checkXsiAttributes {\n	""1"" [label=""$stack10 = \""http://www.w3.org/2001/XMLSchema-instance\""""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.String: boolean equals(java.lang.Object)>($stack9)""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""4"" [label=""$stack13 = interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getAttributeValue(int)>(0)""];\n	""5"" [label=""$stack14 = \""true\""""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>($stack13)""];\n	""7"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""8"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _cfgProcessXsiNil>""];\n	""9"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""10"" [label=""$stack5 = interfaceinvoke $stack4.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getAttributeLocalName(int)>(0)""];\n	""11"" [label=""$stack6 = \""nil\""""];\n	""12"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>($stack5)""];\n	""13"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""14"" [label=""$stack9 = interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getAttributeNamespace(int)>(0)""];\n	""15"" [label=""count = interfaceinvoke $stack2.<org.codehaus.stax2.XMLStreamReader2: int getAttributeCount()>()""];\n	""16"" [label=""if $stack11 == 0""];\n	""17"" [label=""if $stack3 == 0""];\n	""18"" [label=""if $stack7 == 0""];\n	""19"" [label=""if count < 1""];\n	""20"" [label=""return""];\n	""21"" [label=""return""];\n	""22"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""23"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _xsiNilFound> = $stack15""];\n	""24"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _xsiNilFound> = 0""];\n	""25"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _attributeCount> = count""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex> = 0""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _nextAttributeIndex> = 1""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""25""[label=""cfg_next""];\n	""16"" -> ""26""[label=""cfg_true""];\n	""16"" -> ""27""[label=""cfg_false""];\n	""17"" -> ""11""[label=""cfg_false""];\n	""17"" -> ""26""[label=""cfg_true""];\n	""18"" -> ""1""[label=""cfg_false""];\n	""18"" -> ""26""[label=""cfg_true""];\n	""19"" -> ""26""[label=""cfg_true""];\n	""19"" -> ""8""[label=""cfg_false""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""22"" -> ""7""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""21""[label=""cfg_next""];\n	""25"" -> ""19""[label=""cfg_next""];\n	""26"" -> ""24""[label=""cfg_next""];\n	""27"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","private , final "
"com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._decodeElementName(String,String)",Method,* @since 2.14,"protected void _decodeElementName(String namespaceURI, String localName) {\n    // 31-Jan-2024, tatu: [dataformat-xml#634] Need to convert 'xsi:type'?\n    //    (not 100% sure if needed for elements but let's do for now)\n    if (_cfgProcessXsiType) {\n        if (localName.equals(""type"") && XSI_NAMESPACE.equals(namespaceURI)) {\n            _localName = ""xsi:type"";\n            // or could leave as it was?\n            _namespaceURI = """";\n            return;\n        }\n    }\n    _nameToDecode.namespace = namespaceURI;\n    _nameToDecode.localPart = localName;\n    _nameProcessor.decodeName(_nameToDecode);\n    _namespaceURI = _nameToDecode.namespace;\n    _localName = _nameToDecode.localPart;\n}","void _decodeElementName(java.lang.String,java.lang.String)","digraph cfg__decodeElementName {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""2"" [label=""$stack11 = $stack10.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""3"" [label=""$stack12 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>(\""type\"")""];\n	""4"" [label=""$stack13 = \""http://www.w3.org/2001/XMLSchema-instance\""""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(namespaceURI)""];\n	""6"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _cfgProcessXsiType>""];\n	""7"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""8"" [label=""$stack4.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String namespace> = namespaceURI""];\n	""9"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""10"" [label=""$stack5.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = localName""];\n	""11"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""12"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""13"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""14"" [label=""$stack9 = $stack8.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String namespace>""];\n	""15"" [label=""if $stack12 == 0""];\n	""16"" [label=""if $stack14 == 0""];\n	""17"" [label=""if $stack3 == 0""];\n	""18"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor: void decodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName)>($stack6)""];\n	""19"" [label=""localName := @parameter1: java.lang.String""];\n	""20"" [label=""namespaceURI := @parameter0: java.lang.String""];\n	""21"" [label=""return""];\n	""22"" [label=""return""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""24"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = \""xsi:type\""""];\n	""25"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = $stack11""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = \""\""""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = $stack9""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""7""[label=""cfg_true""];\n	""16"" -> ""24""[label=""cfg_false""];\n	""16"" -> ""7""[label=""cfg_true""];\n	""17"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""7""[label=""cfg_true""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""25""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""22""[label=""cfg_next""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""27"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._decodeAttributeName(String,String)",Method,* @since 2.14,"protected void _decodeAttributeName(String namespaceURI, String localName) {\n    // 31-Jan-2024, tatu: [dataformat-xml#634] Need to convert 'xsi:type'?\n    if (_cfgProcessXsiType) {\n        if (localName.equals(""type"") && XSI_NAMESPACE.equals(namespaceURI)) {\n            _localName = ""xsi:type"";\n            // or could leave as it was?\n            _namespaceURI = """";\n            return;\n        }\n    }\n    _nameToDecode.namespace = namespaceURI;\n    _nameToDecode.localPart = localName;\n    _nameProcessor.decodeName(_nameToDecode);\n    _namespaceURI = _nameToDecode.namespace;\n    _localName = _nameToDecode.localPart;\n}","void _decodeAttributeName(java.lang.String,java.lang.String)","digraph cfg__decodeAttributeName {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""2"" [label=""$stack11 = $stack10.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""3"" [label=""$stack12 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>(\""type\"")""];\n	""4"" [label=""$stack13 = \""http://www.w3.org/2001/XMLSchema-instance\""""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(namespaceURI)""];\n	""6"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _cfgProcessXsiType>""];\n	""7"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""8"" [label=""$stack4.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String namespace> = namespaceURI""];\n	""9"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""10"" [label=""$stack5.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = localName""];\n	""11"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""12"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""13"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode>""];\n	""14"" [label=""$stack9 = $stack8.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String namespace>""];\n	""15"" [label=""if $stack12 == 0""];\n	""16"" [label=""if $stack14 == 0""];\n	""17"" [label=""if $stack3 == 0""];\n	""18"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor: void decodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName)>($stack6)""];\n	""19"" [label=""localName := @parameter1: java.lang.String""];\n	""20"" [label=""namespaceURI := @parameter0: java.lang.String""];\n	""21"" [label=""return""];\n	""22"" [label=""return""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""24"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = \""xsi:type\""""];\n	""25"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = $stack11""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = \""\""""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = $stack9""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""7""[label=""cfg_true""];\n	""16"" -> ""24""[label=""cfg_false""];\n	""16"" -> ""7""[label=""cfg_true""];\n	""17"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""7""[label=""cfg_true""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""25""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""23"" -> ""20""[label=""cfg_next""];\n	""24"" -> ""26""[label=""cfg_next""];\n	""25"" -> ""22""[label=""cfg_next""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""27"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._handleRepeatElement(),Method,"* Method called to handle details of repeating ""virtual""\n     * start/end elements, needed for handling 'unwrapped' lists.","protected int _handleRepeatElement() throws XMLStreamException {\n    //System.out.println("" XMLTokenStream._handleRepeatElement()"");\n    int type = _repeatElement;\n    _repeatElement = 0;\n    if (type == REPLAY_START_DUP) {\n        //System.out.println("" XMLTokenStream._handleRepeatElement() for START_ELEMENT: ""+_localName+"" (""+_xmlReader.getLocalName()+"")"");\n        // important: add the virtual element second time, but not with name to match\n        // lgtm [java/dereferenced-value-may-be-null]\n        _currentWrapper = _currentWrapper.intermediateWrapper();\n        return XML_START_ELEMENT;\n    }\n    if (type == REPLAY_END) {\n        //System.out.println("" XMLTokenStream._handleRepeatElement() for END_ELEMENT: ""+_localName+"" (""+_xmlReader.getLocalName()+"")"");\n        _decodeElementName(_xmlReader.getNamespaceURI(), _xmlReader.getLocalName());\n        if (_currentWrapper != null) {\n            _currentWrapper = _currentWrapper.getParent();\n        }\n        return XML_END_ELEMENT;\n    }\n    if (type == REPLAY_START_DELAYED) {\n        if (_currentWrapper != null) {\n            _currentWrapper = _currentWrapper.intermediateWrapper();\n        }\n        _decodeElementName(_nextNamespaceURI, _nextLocalName);\n        _nextLocalName = null;\n        _nextNamespaceURI = null;\n        //System.out.println("" XMLTokenStream._handleRepeatElement() for START_DELAYED: ""+_localName+"" (""+_xmlReader.getLocalName()+"")"");\n        return XML_START_ELEMENT;\n    }\n    throw new IllegalStateException(""Unrecognized type to repeat: "" + type);\n}",int _handleRepeatElement(),"digraph cfg__handleRepeatElement {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper intermediateWrapper()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader>""];\n	""5"" [label=""$stack14 = interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getLocalName()>()""];\n	""6"" [label=""$stack15 = interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamReader2: java.lang.String getNamespaceURI()>()""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper getParent()>()""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""11"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""12"" [label=""$stack20 = virtualinvoke $stack19.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper intermediateWrapper()>()""];\n	""13"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Unrecognized type to repeat: \"")""];\n	""14"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(type)""];\n	""15"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""16"" [label=""$stack6 = new java.lang.IllegalStateException""];\n	""17"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""18"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _nextLocalName>""];\n	""19"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _nextNamespaceURI>""];\n	""20"" [label=""if $stack16 == null""];\n	""21"" [label=""if $stack7 == null""];\n	""22"" [label=""if type != 1""];\n	""23"" [label=""if type != 2""];\n	""24"" [label=""if type != 3""];\n	""25"" [label=""return 1""];\n	""26"" [label=""return 1""];\n	""27"" [label=""return 2""];\n	""28"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""29"" [label=""specialinvoke $stack6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack5)""];\n	""30"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""31"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack11""];\n	""32"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack18""];\n	""33"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack20""];\n	""34"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _repeatElement> = 0""];\n	""35"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _nextLocalName> = null""];\n	""36"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _nextNamespaceURI> = null""];\n	""37"" [label=""throw $stack6""];\n	""38"" [label=""type = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _repeatElement>""];\n	""39"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void _decodeElementName(java.lang.String,java.lang.String)>($stack15, $stack14)""];\n	""40"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: void _decodeElementName(java.lang.String,java.lang.String)>($stack9, $stack8)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""33""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""29""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""21""[label=""cfg_next""];\n	""18"" -> ""40""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""31""[label=""cfg_next""];\n	""20"" -> ""27""[label=""cfg_true""];\n	""20"" -> ""8""[label=""cfg_false""];\n	""21"" -> ""1""[label=""cfg_false""];\n	""21"" -> ""19""[label=""cfg_true""];\n	""22"" -> ""10""[label=""cfg_false""];\n	""22"" -> ""23""[label=""cfg_true""];\n	""23"" -> ""24""[label=""cfg_true""];\n	""23"" -> ""3""[label=""cfg_false""];\n	""24"" -> ""16""[label=""cfg_true""];\n	""24"" -> ""17""[label=""cfg_false""];\n	""28"" -> ""13""[label=""cfg_next""];\n	""29"" -> ""37""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""30"" -> ""38""[label=""cfg_next""];\n	""31"" -> ""19""[label=""cfg_next""];\n	""32"" -> ""27""[label=""cfg_next""];\n	""33"" -> ""25""[label=""cfg_next""];\n	""34"" -> ""22""[label=""cfg_next""];\n	""35"" -> ""36""[label=""cfg_next""];\n	""36"" -> ""26""[label=""cfg_next""];\n	""38"" -> ""34""[label=""cfg_next""];\n	""39"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""35""[label=""cfg_next""];\n	""5"" -> ""39""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._handleEndElement(),Method,No Comment,"private final int _handleEndElement() {\n    //System.out.println("" XMLTokenStream._handleEndElement()"");\n    if (_currentWrapper != null) {\n        ElementWrapper w = _currentWrapper;\n        // important: if we close the scope, must duplicate END_ELEMENT as well\n        if (w.isMatching()) {\n            _repeatElement = REPLAY_END;\n            // 11-Sep-2022, tatu: I _think_ these are already properly decoded\n            _localName = w.getWrapperLocalName();\n            _namespaceURI = w.getWrapperNamespace();\n            _currentWrapper = _currentWrapper.getParent();\n            //System.out.println("" XMLTokenStream._handleEndElement(): IMPLICIT requestRepeat of END_ELEMENT '""+_localName);\n        } else {\n            _currentWrapper = _currentWrapper.getParent();\n            // 23-May-2020, tatu: Let's clear _localName since it's value is unlikely\n            //    to be correct and we may or may not be able to get real one (for\n            //    END_ELEMENT could) -- FromXmlParser does NOT use this info\n            _localName = """";\n            _namespaceURI = """";\n        }\n    } else {\n        // Not (necessarily) known, as per above, so:\n        _localName = """";\n        _namespaceURI = """";\n    }\n    return (_currentState = XML_END_ELEMENT);\n}",int _handleEndElement(),"digraph cfg__handleEndElement {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""2"" [label=""$stack3 = virtualinvoke w.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: boolean isMatching()>()""];\n	""3"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper getParent()>()""];\n	""5"" [label=""$stack6 = virtualinvoke w.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String getWrapperLocalName()>()""];\n	""6"" [label=""$stack7 = virtualinvoke w.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: java.lang.String getWrapperNamespace()>()""];\n	""7"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""8"" [label=""$stack9 = virtualinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper getParent()>()""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack2 == null""];\n	""12"" [label=""if $stack3 == 0""];\n	""13"" [label=""return 2""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack5""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper> = $stack9""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState> = 2""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _repeatElement> = 2""];\n	""19"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = \""\""""];\n	""20"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = \""\""""];\n	""21"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _localName> = $stack6""];\n	""22"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = \""\""""];\n	""23"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = \""\""""];\n	""24"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _namespaceURI> = $stack7""];\n	""25"" [label=""w = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper _currentWrapper>""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_goto""];\n	""11"" -> ""19""[label=""cfg_true""];\n	""11"" -> ""25""[label=""cfg_false""];\n	""12"" -> ""18""[label=""cfg_false""];\n	""12"" -> ""3""[label=""cfg_true""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""18"" -> ""5""[label=""cfg_next""];\n	""19"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""6""[label=""cfg_next""];\n	""22"" -> ""10""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""7""[label=""cfg_next""];\n	""25"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_goto""];\n}\n","private , final "
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._extractLocation(XMLStreamLocation2),Method,No Comment,"private JsonLocation _extractLocation(XMLStreamLocation2 location) {\n    if (location == null) {\n        // just for impls that might pass null...\n        return new JsonLocation(_sourceReference, -1, -1, -1);\n    }\n    return new JsonLocation(_sourceReference, location.getCharacterOffset(), location.getLineNumber(), location.getColumnNumber());\n}",com.fasterxml.jackson.core.JsonLocation _extractLocation(org.codehaus.stax2.XMLStreamLocation2),"digraph cfg__extractLocation {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.core.io.ContentReference _sourceReference>""];\n	""2"" [label=""$stack3 = interfaceinvoke location.<org.codehaus.stax2.XMLStreamLocation2: int getCharacterOffset()>()""];\n	""3"" [label=""$stack4 = interfaceinvoke location.<org.codehaus.stax2.XMLStreamLocation2: int getColumnNumber()>()""];\n	""4"" [label=""$stack5 = interfaceinvoke location.<org.codehaus.stax2.XMLStreamLocation2: int getLineNumber()>()""];\n	""5"" [label=""$stack6 = (long) $stack3""];\n	""6"" [label=""$stack7 = new com.fasterxml.jackson.core.JsonLocation""];\n	""7"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.core.io.ContentReference _sourceReference>""];\n	""8"" [label=""$stack9 = new com.fasterxml.jackson.core.JsonLocation""];\n	""9"" [label=""if location != null""];\n	""10"" [label=""location := @parameter0: org.codehaus.stax2.XMLStreamLocation2""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""return $stack9""];\n	""13"" [label=""specialinvoke $stack7.<com.fasterxml.jackson.core.JsonLocation: void <init>(com.fasterxml.jackson.core.io.ContentReference,long,int,int)>($stack2, $stack6, $stack5, $stack4)""];\n	""14"" [label=""specialinvoke $stack9.<com.fasterxml.jackson.core.JsonLocation: void <init>(com.fasterxml.jackson.core.io.ContentReference,long,int,int)>($stack8, -1L, -1, -1)""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_true""];\n	""9"" -> ""8""[label=""cfg_false""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._allWs(String),Method,No Comment,protected static boolean _allWs(String str) {\n    final int len = (str == null) ? 0 : str.length();\n    if (len > 0) {\n        for (int i = 0; i < len; ++i) {\n            if (str.charAt(i) > ' ') {\n                return false;\n            }\n        }\n    }\n    return true;\n},boolean _allWs(java.lang.String),"digraph cfg__allWs {\n	""1"" [label=""$stack3 = virtualinvoke str.<java.lang.String: char charAt(int)>(i)""];\n	""2"" [label=""goto""];\n	""3"" [label=""goto""];\n	""4"" [label=""i = 0""];\n	""5"" [label=""i = i + 1""];\n	""6"" [label=""if $stack3 <= 32""];\n	""7"" [label=""if i >= len""];\n	""8"" [label=""if len <= 0""];\n	""9"" [label=""if str != null""];\n	""10"" [label=""len = 0""];\n	""11"" [label=""len = virtualinvoke str.<java.lang.String: int length()>()""];\n	""12"" [label=""return 0""];\n	""13"" [label=""return 1""];\n	""14"" [label=""str := @parameter0: java.lang.String""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_goto""];\n	""3"" -> ""7""[label=""cfg_goto""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_false""];\n	""6"" -> ""5""[label=""cfg_true""];\n	""7"" -> ""1""[label=""cfg_false""];\n	""7"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_false""];\n	""9"" -> ""11""[label=""cfg_true""];\n}\n","protected , static "
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._currentStateDesc(),Method,No Comment,protected String _currentStateDesc() {\n    return _stateDesc(_currentState);\n},java.lang.String _currentStateDesc(),"digraph cfg__currentStateDesc {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""2"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: java.lang.String _stateDesc(int)>($stack1)""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream._stateDesc(int),Method,No Comment,"protected String _stateDesc(int state) {\n    switch(state) {\n        case XML_START_ELEMENT:\n            return ""XML_START_ELEMENT"";\n        case XML_END_ELEMENT:\n            return ""XML_END_ELEMENT"";\n        case XML_ATTRIBUTE_NAME:\n            return ""XML_ATTRIBUTE_NAME"";\n        case XML_ATTRIBUTE_VALUE:\n            return ""XML_ATTRIBUTE_VALUE"";\n        case XML_TEXT:\n            return ""XML_TEXT"";\n        // case XML_DELAYED_START_ELEMENT:\n        //    return ""XML_START_ELEMENT_DELAYED"";\n        case XML_ROOT_TEXT:\n            return ""XML_ROOT_TEXT"";\n        case XML_END:\n            return ""XML_END"";\n    }\n    return ""N/A ("" + _currentState + "")"";\n}",java.lang.String _stateDesc(int),"digraph cfg__stateDesc {\n	""1"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _currentState>""];\n	""3"" [label=""$stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""N/A (\"")""];\n	""4"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack3)""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"")\"")""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""return \""XML_ATTRIBUTE_NAME\""""];\n	""8"" [label=""return \""XML_ATTRIBUTE_VALUE\""""];\n	""9"" [label=""return \""XML_END\""""];\n	""10"" [label=""return \""XML_END_ELEMENT\""""];\n	""11"" [label=""return \""XML_ROOT_TEXT\""""];\n	""12"" [label=""return \""XML_START_ELEMENT\""""];\n	""13"" [label=""return \""XML_TEXT\""""];\n	""14"" [label=""return $stack7""];\n	""15"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""16"" [label=""state := @parameter0: int""];\n	""17"" [label=""switch(state) \{     case 1:     case 2:     case 3:     case 4:     case 5:     case 6:     case 7:     case 8:     default:  \}""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_switch""];\n	""17"" -> ""10""[label=""cfg_switch""];\n	""17"" -> ""11""[label=""cfg_switch""];\n	""17"" -> ""12""[label=""cfg_switch""];\n	""17"" -> ""13""[label=""cfg_switch""];\n	""17"" -> ""7""[label=""cfg_switch""];\n	""17"" -> ""8""[label=""cfg_switch""];\n	""17"" -> ""9""[label=""cfg_switch""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream.<init>(XMLStreamReader,ContentReference,int,XmlNameProcessor)",Constructor,No Comment,"public XmlTokenStream(XMLStreamReader xmlReader, ContentReference sourceRef, int formatFeatures, XmlNameProcessor nameProcessor) {\n    _sourceReference = sourceRef;\n    _formatFeatures = formatFeatures;\n    _cfgProcessXsiNil = FromXmlParser.Feature.PROCESS_XSI_NIL.enabledIn(_formatFeatures);\n    _cfgProcessXsiType = FromXmlParser.Feature.AUTO_DETECT_XSI_TYPE.enabledIn(_formatFeatures);\n    // 04-Dec-2023, tatu: [dataformat-xml#618] Need further customized adapter:\n    _xmlReader = Stax2JacksonReaderAdapter.wrapIfNecessary(xmlReader);\n    _nameProcessor = nameProcessor;\n}","void <init>(javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.core.io.ContentReference,int,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)","digraph cfg_init {\n	""1"" [label=""$stack10 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature AUTO_DETECT_XSI_TYPE>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean enabledIn(int)>($stack9)""];\n	""3"" [label=""$stack12 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.Stax2JacksonReaderAdapter: org.codehaus.stax2.XMLStreamReader2 wrapIfNecessary(javax.xml.stream.XMLStreamReader)>(xmlReader)""];\n	""4"" [label=""$stack5 = new com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""5"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _formatFeatures>""];\n	""6"" [label=""$stack7 = <com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature PROCESS_XSI_NIL>""];\n	""7"" [label=""$stack8 = virtualinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature: boolean enabledIn(int)>($stack6)""];\n	""8"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _formatFeatures>""];\n	""9"" [label=""formatFeatures := @parameter2: int""];\n	""10"" [label=""nameProcessor := @parameter3: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""11"" [label=""return""];\n	""12"" [label=""sourceRef := @parameter1: com.fasterxml.jackson.core.io.ContentReference""];\n	""13"" [label=""specialinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: void <init>()>()""];\n	""14"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _cfgProcessXsiNil> = $stack8""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: boolean _cfgProcessXsiType> = $stack11""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.core.io.ContentReference _sourceReference> = sourceRef""];\n	""19"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = nameProcessor""];\n	""20"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToDecode> = $stack5""];\n	""21"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: int _formatFeatures> = formatFeatures""];\n	""22"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream: org.codehaus.stax2.XMLStreamReader2 _xmlReader> = $stack12""];\n	""23"" [label=""xmlReader := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""18"" -> ""21""[label=""cfg_next""];\n	""19"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""6""[label=""cfg_next""];\n	""22"" -> ""19""[label=""cfg_next""];\n	""23"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.updateProperties(DeserializationConfig,BeanDescription,List)",Method,No Comment,"@Override\npublic List<BeanPropertyDefinition> updateProperties(DeserializationConfig config, BeanDescription beanDesc, List<BeanPropertyDefinition> propDefs) {\n    final AnnotationIntrospector intr = config.getAnnotationIntrospector();\n    int changed = 0;\n    for (int i = 0, propCount = propDefs.size(); i < propCount; ++i) {\n        BeanPropertyDefinition prop = propDefs.get(i);\n        AnnotatedMember acc = prop.getPrimaryMember();\n        // should not be null, but just in case:\n        if (acc == null) {\n            continue;\n        }\n        /* First: handle ""as text""? Such properties\n             * are exposed as values of 'unnamed' fields; so one way to\n             * map them is to rename property to have name """"... (and\n             * hope this does not break other parts...)\n             */\n        Boolean b = AnnotationUtil.findIsTextAnnotation(config, intr, acc);\n        if (b != null && b.booleanValue()) {\n            // unwrapped properties will appear as 'unnamed' (empty String)\n            BeanPropertyDefinition newProp = prop.withSimpleName(_cfgNameForTextValue);\n            if (newProp != prop) {\n                propDefs.set(i, newProp);\n            }\n            continue;\n        }\n        // second: do we need to handle wrapping (for Lists)?\n        PropertyName wrapperName = prop.getWrapperName();\n        if (wrapperName != null && wrapperName != PropertyName.NO_NAME) {\n            String localName = wrapperName.getSimpleName();\n            if ((localName != null && localName.length() > 0) && !localName.equals(prop.getName())) {\n                // make copy-on-write as necessary\n                if (changed == 0) {\n                    propDefs = new ArrayList<BeanPropertyDefinition>(propDefs);\n                }\n                ++changed;\n                propDefs.set(i, prop.withSimpleName(localName));\n                continue;\n            }\n            // otherwise unwrapped; needs handling but later on\n        }\n    }\n    return propDefs;\n}","java.util.List updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)","digraph cfg_updateProperties {\n	""1"" [label=""$stack13 = interfaceinvoke propDefs.<java.util.List: java.lang.Object get(int)>(i)""];\n	""2"" [label=""$stack14 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName NO_NAME>""];\n	""3"" [label=""$stack15 = virtualinvoke localName.<java.lang.String: int length()>()""];\n	""4"" [label=""$stack16 = virtualinvoke prop.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>()""];\n	""5"" [label=""$stack17 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>($stack16)""];\n	""6"" [label=""$stack18 = virtualinvoke prop.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String)>(localName)""];\n	""7"" [label=""$stack19 = new java.util.ArrayList""];\n	""8"" [label=""$stack20 = virtualinvoke b.<java.lang.Boolean: boolean booleanValue()>()""];\n	""9"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier: java.lang.String _cfgNameForTextValue>""];\n	""10"" [label=""acc = virtualinvoke prop.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember()>()""];\n	""11"" [label=""b = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil: java.lang.Boolean findIsTextAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(config, intr, acc)""];\n	""12"" [label=""beanDesc := @parameter1: com.fasterxml.jackson.databind.BeanDescription""];\n	""13"" [label=""changed = 0""];\n	""14"" [label=""changed = changed + 1""];\n	""15"" [label=""config := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig""];\n	""16"" [label=""goto""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""i = 0""];\n	""21"" [label=""i = i + 1""];\n	""22"" [label=""if $stack15 <= 0""];\n	""23"" [label=""if $stack17 != 0""];\n	""24"" [label=""if $stack20 == 0""];\n	""25"" [label=""if acc != null""];\n	""26"" [label=""if b == null""];\n	""27"" [label=""if changed != 0""];\n	""28"" [label=""if i >= propCount""];\n	""29"" [label=""if localName == null""];\n	""30"" [label=""if newProp == $stack14""];\n	""31"" [label=""if newProp == null""];\n	""32"" [label=""if newProp == prop""];\n	""33"" [label=""interfaceinvoke propDefs.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i, $stack18)""];\n	""34"" [label=""interfaceinvoke propDefs.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i, newProp)""];\n	""35"" [label=""intr = virtualinvoke config.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>()""];\n	""36"" [label=""localName = virtualinvoke newProp.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""37"" [label=""newProp = virtualinvoke prop.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.PropertyName getWrapperName()>()""];\n	""38"" [label=""newProp = virtualinvoke prop.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withSimpleName(java.lang.String)>($stack21)""];\n	""39"" [label=""prop = (com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) $stack13""];\n	""40"" [label=""propCount = interfaceinvoke propDefs.<java.util.List: int size()>()""];\n	""41"" [label=""propDefs := @parameter2: java.util.List""];\n	""42"" [label=""propDefs = $stack19""];\n	""43"" [label=""return propDefs""];\n	""44"" [label=""specialinvoke $stack19.<java.util.ArrayList: void <init>(java.util.Collection)>(propDefs)""];\n	""45"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier""];\n	""1"" -> ""39""[label=""cfg_next""];\n	""10"" -> ""25""[label=""cfg_next""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""41""[label=""cfg_next""];\n	""13"" -> ""20""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_goto""];\n	""17"" -> ""21""[label=""cfg_goto""];\n	""18"" -> ""28""[label=""cfg_goto""];\n	""19"" -> ""21""[label=""cfg_goto""];\n	""2"" -> ""30""[label=""cfg_next""];\n	""20"" -> ""40""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_true""];\n	""22"" -> ""4""[label=""cfg_false""];\n	""23"" -> ""21""[label=""cfg_true""];\n	""23"" -> ""27""[label=""cfg_false""];\n	""24"" -> ""37""[label=""cfg_true""];\n	""24"" -> ""9""[label=""cfg_false""];\n	""25"" -> ""11""[label=""cfg_true""];\n	""25"" -> ""16""[label=""cfg_false""];\n	""26"" -> ""37""[label=""cfg_true""];\n	""26"" -> ""8""[label=""cfg_false""];\n	""27"" -> ""14""[label=""cfg_true""];\n	""27"" -> ""7""[label=""cfg_false""];\n	""28"" -> ""1""[label=""cfg_false""];\n	""28"" -> ""43""[label=""cfg_true""];\n	""29"" -> ""21""[label=""cfg_true""];\n	""29"" -> ""3""[label=""cfg_false""];\n	""3"" -> ""22""[label=""cfg_next""];\n	""30"" -> ""21""[label=""cfg_true""];\n	""30"" -> ""36""[label=""cfg_false""];\n	""31"" -> ""2""[label=""cfg_false""];\n	""31"" -> ""21""[label=""cfg_true""];\n	""32"" -> ""21""[label=""cfg_true""];\n	""32"" -> ""34""[label=""cfg_false""];\n	""33"" -> ""19""[label=""cfg_next""];\n	""34"" -> ""17""[label=""cfg_next""];\n	""35"" -> ""13""[label=""cfg_next""];\n	""36"" -> ""29""[label=""cfg_next""];\n	""37"" -> ""31""[label=""cfg_next""];\n	""38"" -> ""32""[label=""cfg_next""];\n	""39"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""28""[label=""cfg_next""];\n	""41"" -> ""35""[label=""cfg_next""];\n	""42"" -> ""14""[label=""cfg_next""];\n	""44"" -> ""42""[label=""cfg_next""];\n	""45"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_next""];\n	""6"" -> ""33""[label=""cfg_next""];\n	""7"" -> ""44""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_next""];\n	""9"" -> ""38""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.modifyDeserializer(DeserializationConfig,BeanDescription,JsonDeserializer)",Method,No Comment,"@Override\npublic JsonDeserializer<?> modifyDeserializer(DeserializationConfig config, BeanDescription beanDesc, JsonDeserializer<?> deser0) {\n    if (!(deser0 instanceof BeanDeserializerBase)) {\n        return deser0;\n    }\n    /* 17-Aug-2013, tatu: One important special case first: if we have one ""XML Text""\n         * property, it may be exposed as VALUE_STRING token (depending on whether any attribute\n         * values are exposed): and to deserialize from that, we need special handling unless POJO\n         * has appropriate single-string creator method.\n         */\n    BeanDeserializerBase deser = (BeanDeserializerBase) deser0;\n    // Heuristics are bit tricky; but for now let's assume that if POJO\n    // can already work with VALUE_STRING, it's ok and doesn't need extra support\n    ValueInstantiator inst = deser.getValueInstantiator();\n    // 03-Aug-2017, tatu: [dataformat-xml#254] suggests we also should\n    //    allow passing `int`/`Integer`/`long`/`Long` cases, BUT\n    //    unfortunately we can not simply use default handling. Would need\n    //    coercion.\n    // 30-Apr-2020, tatu: Complication from [dataformat-xml#318] as we now\n    //    have a delegate too...\n    if (!inst.canCreateFromString()) {\n        SettableBeanProperty textProp = _findSoleTextProp(config, deser.properties());\n        if (textProp != null) {\n            return new XmlTextDeserializer(deser, textProp);\n        }\n    }\n    return new WrapperHandlingDeserializer(deser);\n}","com.fasterxml.jackson.databind.JsonDeserializer modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer)","digraph cfg_modifyDeserializer {\n	""1"" [label=""$stack10 = virtualinvoke deser.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.util.Iterator properties()>()""];\n	""2"" [label=""$stack11 = new com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer""];\n	""3"" [label=""$stack7 = deser0 instanceof com.fasterxml.jackson.databind.deser.BeanDeserializerBase""];\n	""4"" [label=""$stack8 = virtualinvoke inst.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateFromString()>()""];\n	""5"" [label=""$stack9 = new com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""6"" [label=""beanDesc := @parameter1: com.fasterxml.jackson.databind.BeanDescription""];\n	""7"" [label=""config := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig""];\n	""8"" [label=""deser = (com.fasterxml.jackson.databind.deser.BeanDeserializerBase) deser0""];\n	""9"" [label=""deser0 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer""];\n	""10"" [label=""if $stack7 != 0""];\n	""11"" [label=""if $stack8 != 0""];\n	""12"" [label=""if textProp == null""];\n	""13"" [label=""inst = virtualinvoke deser.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>()""];\n	""14"" [label=""return $stack11""];\n	""15"" [label=""return $stack9""];\n	""16"" [label=""return deser0""];\n	""17"" [label=""specialinvoke $stack11.<com.fasterxml.jackson.dataformat.xml.deser.XmlTextDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,com.fasterxml.jackson.databind.deser.SettableBeanProperty)>(deser, textProp)""];\n	""18"" [label=""specialinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase)>(deser)""];\n	""19"" [label=""textProp = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier: com.fasterxml.jackson.databind.deser.SettableBeanProperty _findSoleTextProp(com.fasterxml.jackson.databind.DeserializationConfig,java.util.Iterator)>(config, $stack10)""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_false""];\n	""10"" -> ""8""[label=""cfg_true""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""5""[label=""cfg_true""];\n	""12"" -> ""2""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_next""];\n	""19"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""20"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier._findSoleTextProp(DeserializationConfig,Iterator)",Method,No Comment,"private SettableBeanProperty _findSoleTextProp(DeserializationConfig config, Iterator<SettableBeanProperty> propIt) {\n    final AnnotationIntrospector ai = config.getAnnotationIntrospector();\n    SettableBeanProperty textProp = null;\n    while (propIt.hasNext()) {\n        SettableBeanProperty prop = propIt.next();\n        AnnotatedMember m = prop.getMember();\n        if (m != null) {\n            // Ok, let's use a simple check: we should have renamed it earlier so:\n            PropertyName n = prop.getFullName();\n            if (_cfgNameForTextValue.equals(n.getSimpleName())) {\n                // should we verify we only got one?\n                textProp = prop;\n                continue;\n            }\n            // as-attribute are ok as well\n            Boolean b = AnnotationUtil.findIsAttributeAnnotation(config, ai, m);\n            if (b != null && b.booleanValue()) {\n                continue;\n            }\n        }\n        // Otherwise, it's something else; no go\n        return null;\n    }\n    return textProp;\n}","com.fasterxml.jackson.databind.deser.SettableBeanProperty _findSoleTextProp(com.fasterxml.jackson.databind.DeserializationConfig,java.util.Iterator)","digraph cfg__findSoleTextProp {\n	""1"" [label=""$stack10 = interfaceinvoke propIt.<java.util.Iterator: java.lang.Object next()>()""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier: java.lang.String _cfgNameForTextValue>""];\n	""3"" [label=""$stack12 = virtualinvoke n.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>($stack12)""];\n	""5"" [label=""$stack14 = virtualinvoke b.<java.lang.Boolean: boolean booleanValue()>()""];\n	""6"" [label=""$stack9 = interfaceinvoke propIt.<java.util.Iterator: boolean hasNext()>()""];\n	""7"" [label=""ai = virtualinvoke config.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>()""];\n	""8"" [label=""b = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil: java.lang.Boolean findIsAttributeAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(config, ai, m)""];\n	""9"" [label=""config := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack13 == 0""];\n	""13"" [label=""if $stack14 == 0""];\n	""14"" [label=""if $stack9 == 0""];\n	""15"" [label=""if b == null""];\n	""16"" [label=""if m == null""];\n	""17"" [label=""m = virtualinvoke prop.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>()""];\n	""18"" [label=""n = virtualinvoke prop.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.PropertyName getFullName()>()""];\n	""19"" [label=""prop = (com.fasterxml.jackson.databind.deser.SettableBeanProperty) $stack10""];\n	""20"" [label=""propIt := @parameter1: java.util.Iterator""];\n	""21"" [label=""return null""];\n	""22"" [label=""return textProp""];\n	""23"" [label=""textProp = null""];\n	""24"" [label=""textProp = prop""];\n	""25"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_goto""];\n	""11"" -> ""6""[label=""cfg_goto""];\n	""12"" -> ""24""[label=""cfg_false""];\n	""12"" -> ""8""[label=""cfg_true""];\n	""13"" -> ""11""[label=""cfg_false""];\n	""13"" -> ""21""[label=""cfg_true""];\n	""14"" -> ""1""[label=""cfg_false""];\n	""14"" -> ""22""[label=""cfg_true""];\n	""15"" -> ""21""[label=""cfg_true""];\n	""15"" -> ""5""[label=""cfg_false""];\n	""16"" -> ""18""[label=""cfg_false""];\n	""16"" -> ""21""[label=""cfg_true""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""2""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""7""[label=""cfg_next""];\n	""23"" -> ""6""[label=""cfg_next""];\n	""24"" -> ""10""[label=""cfg_next""];\n	""25"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""23""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier.<init>(String),Constructor,No Comment,public XmlBeanDeserializerModifier(String nameForTextValue) {\n    _cfgNameForTextValue = nameForTextValue;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""nameForTextValue := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.BeanDeserializerModifier: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier: java.lang.String _cfgNameForTextValue> = \""\""""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier: java.lang.String _cfgNameForTextValue> = nameForTextValue""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.copy(),Method,No Comment,@Override\npublic XmlDeserializationContext copy() {\n    return new XmlDeserializationContext(this);\n},com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext copy(),"digraph cfg_copy {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext)>(this)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.createInstance(DeserializationConfig,JsonParser,InjectableValues)",Method,No Comment,"@Override\npublic DefaultDeserializationContext createInstance(DeserializationConfig config, JsonParser p, InjectableValues values) {\n    return new XmlDeserializationContext(this, config, p, values);\n}","com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)","digraph cfg_createInstance {\n	""1"" [label=""$stack4 = new com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig""];\n	""3"" [label=""p := @parameter1: com.fasterxml.jackson.core.JsonParser""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""specialinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)>(this, config, p, values)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""7"" [label=""values := @parameter2: com.fasterxml.jackson.databind.InjectableValues""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.createDummyInstance(DeserializationConfig),Method,No Comment,"@Override\npublic DefaultDeserializationContext createDummyInstance(DeserializationConfig config) {\n    // need to be careful to create non-blue-print instance\n    return new XmlDeserializationContext(this, config);\n}",com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDummyInstance(com.fasterxml.jackson.databind.DeserializationConfig),"digraph cfg_createDummyInstance {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig)>(this, config)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.with(DeserializerFactory),Method,No Comment,"@Override\npublic DefaultDeserializationContext with(DeserializerFactory factory) {\n    return new XmlDeserializationContext(this, factory);\n}",com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory),"digraph cfg_with {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""2"" [label=""factory := @parameter0: com.fasterxml.jackson.databind.deser.DeserializerFactory""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory)>(this, factory)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.withCaches(CacheProvider),Method,No Comment,"@Override\npublic DefaultDeserializationContext withCaches(CacheProvider cp) {\n    return new XmlDeserializationContext(this, cp);\n}",com.fasterxml.jackson.databind.deser.DefaultDeserializationContext withCaches(com.fasterxml.jackson.databind.cfg.CacheProvider),"digraph cfg_withCaches {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""2"" [label=""cp := @parameter0: com.fasterxml.jackson.databind.cfg.CacheProvider""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.cfg.CacheProvider)>(this, cp)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.readRootValue(JsonParser,JavaType,JsonDeserializer,Object)",Method,No Comment,"// since 2.12\n@Override\npublic Object readRootValue(JsonParser p, JavaType valueType, JsonDeserializer<Object> deser, Object valueToUpdate) throws IOException {\n    // 18-Sep-2021, tatu: Complicated mess; with 2.12, had [dataformat-xml#374]\n    //    to disable handling. With 2.13, via [dataformat-xml#485] undid this change\n    if (_config.useRootWrapping()) {\n        return _unwrapAndDeserialize(p, valueType, deser, valueToUpdate);\n    }\n    if (valueToUpdate == null) {\n        return deser.deserialize(p, this);\n    }\n    return deser.deserialize(p, this, valueToUpdate);\n}","java.lang.Object readRootValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)","digraph cfg_readRootValue {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig _config>""];\n	""2"" [label=""$stack6 = virtualinvoke $stack5.<com.fasterxml.jackson.databind.DeserializationConfig: boolean useRootWrapping()>()""];\n	""3"" [label=""$stack7 = virtualinvoke deser.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(p, this, valueToUpdate)""];\n	""4"" [label=""$stack8 = virtualinvoke deser.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(p, this)""];\n	""5"" [label=""$stack9 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(p, valueType, deser, valueToUpdate)""];\n	""6"" [label=""deser := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer""];\n	""7"" [label=""if $stack6 == 0""];\n	""8"" [label=""if valueToUpdate != null""];\n	""9"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""return $stack8""];\n	""12"" [label=""return $stack9""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""14"" [label=""valueToUpdate := @parameter3: java.lang.Object""];\n	""15"" [label=""valueType := @parameter1: com.fasterxml.jackson.databind.JavaType""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.extractScalarFromObject(JsonParser,JsonDeserializer,Class)",Method,"to ""extract"" scalar value (CDATA), after the fact","// since 2.12\n@Override\npublic String extractScalarFromObject(JsonParser p, JsonDeserializer<?> deser, Class<?> scalarType) throws IOException {\n    // Only called on START_OBJECT, should not need to check, but JsonParser we\n    // get may or may not be `FromXmlParser` so traverse using regular means\n    String text = """";\n    while (p.nextToken() == JsonToken.FIELD_NAME) {\n        // Couple of ways to find ""real"" textual content. One is to look for\n        // ""XmlText""... but for that would need to know configuration. Alternatively\n        // could hold on to last text seen -- but this might be last attribute, for\n        // empty element. So for now let's simply hard-code check for empty String\n        // as marker and hope for best\n        final String propName = p.currentName();\n        JsonToken t = p.nextToken();\n        if (t == JsonToken.VALUE_STRING) {\n            if (propName.equals("""")) {\n                text = p.getText();\n            }\n        } else {\n            p.skipChildren();\n        }\n    }\n    return text;\n}","java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)","digraph cfg_extractScalarFromObject {\n	""1"" [label=""$stack10 = virtualinvoke propName.<java.lang.String: boolean equals(java.lang.Object)>(\""\"")""];\n	""2"" [label=""$stack7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""3"" [label=""$stack8 = virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>()""];\n	""4"" [label=""$stack9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>""];\n	""5"" [label=""deser := @parameter1: com.fasterxml.jackson.databind.JsonDeserializer""];\n	""6"" [label=""goto""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack10 == 0""];\n	""9"" [label=""if $stack8 != $stack7""];\n	""10"" [label=""if t != $stack9""];\n	""11"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""12"" [label=""propName = virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>()""];\n	""13"" [label=""return text""];\n	""14"" [label=""scalarType := @parameter2: java.lang.Class""];\n	""15"" [label=""t = virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>()""];\n	""16"" [label=""text = \""\""""];\n	""17"" [label=""text = virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>()""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""19"" [label=""virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>()""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_false""];\n	""10"" -> ""19""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_next""];\n	""17"" -> ""7""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_next""];\n	""19"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_goto""];\n	""7"" -> ""6""[label=""cfg_goto""];\n	""8"" -> ""17""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_true""];\n	""9"" -> ""12""[label=""cfg_false""];\n	""9"" -> ""13""[label=""cfg_true""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(DeserializerFactory),Constructor,"* Default constructor for a blueprint object, which will use the standard\n     * {@link DeserializerCache}, given factory.","public XmlDeserializationContext(DeserializerFactory df) {\n    // 04-Sep-2023, tatu: Not ideal (wrt not going via CacheProvider) but\n    //     has to do for backwards compatibility:\n    super(df, new DeserializerCache());\n}",void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory),"digraph cfg_init {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.databind.deser.DeserializerCache""];\n	""2"" [label=""df := @parameter0: com.fasterxml.jackson.databind.deser.DeserializerFactory""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.databind.deser.DeserializerCache: void <init>()>()""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.deser.DeserializerCache)>(df, $stack2)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,DeserializationConfig,JsonParser,InjectableValues)",Constructor,No Comment,"private XmlDeserializationContext(XmlDeserializationContext src, DeserializationConfig config, JsonParser p, InjectableValues values) {\n    super(src, config, p, values);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)","digraph cfg_init {\n	""1"" [label=""config := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig""];\n	""2"" [label=""p := @parameter2: com.fasterxml.jackson.core.JsonParser""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)>(src, config, p, values)""];\n	""5"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""7"" [label=""values := @parameter3: com.fasterxml.jackson.databind.InjectableValues""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext),Constructor,No Comment,private XmlDeserializationContext(XmlDeserializationContext src) {\n    super(src);\n},void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)>(src)""];\n	""3"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,DeserializerFactory)",Constructor,No Comment,"private XmlDeserializationContext(XmlDeserializationContext src, DeserializerFactory factory) {\n    super(src, factory);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory)","digraph cfg_init {\n	""1"" [label=""factory := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory)>(src, factory)""];\n	""4"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,DeserializationConfig)",Constructor,No Comment,"private XmlDeserializationContext(XmlDeserializationContext src, DeserializationConfig config) {\n    super(src, config);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig)","digraph cfg_init {\n	""1"" [label=""config := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig)>(src, config)""];\n	""4"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext.<init>(XmlDeserializationContext,CacheProvider)",Constructor,@since 2.16,"private XmlDeserializationContext(XmlDeserializationContext src, CacheProvider cp) {\n    super(src, cp);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext,com.fasterxml.jackson.databind.cfg.CacheProvider)","digraph cfg_init {\n	""1"" [label=""cp := @parameter1: com.fasterxml.jackson.databind.cfg.CacheProvider""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DefaultDeserializationContext,com.fasterxml.jackson.databind.cfg.CacheProvider)>(src, cp)""];\n	""4"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.newDelegatingInstance(JsonDeserializer),Method,No Comment,"@Override\nprotected JsonDeserializer<?> newDelegatingInstance(JsonDeserializer<?> newDelegatee0) {\n    // default not enough, as we may need to create a new wrapping deserializer\n    // even if delegatee does not change\n    throw new IllegalStateException(""Internal error: should never get called"");\n}",com.fasterxml.jackson.databind.JsonDeserializer newDelegatingInstance(com.fasterxml.jackson.databind.JsonDeserializer),"digraph cfg_newDelegatingInstance {\n	""1"" [label=""$stack2 = new java.lang.IllegalStateException""];\n	""2"" [label=""newDelegatee0 := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer""];\n	""3"" [label=""specialinvoke $stack2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\""Internal error: should never get called\"")""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""5"" [label=""throw $stack2""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.createContextual(DeserializationContext,BeanProperty)",Method,No Comment,"@Override\npublic JsonDeserializer<?> createContextual(DeserializationContext ctxt, BeanProperty property) throws JsonMappingException {\n    JavaType vt = _type;\n    if (vt == null) {\n        vt = ctxt.constructType(_delegatee.handledType());\n    }\n    JsonDeserializer<?> del = ctxt.handleSecondaryContextualization(_delegatee, property, vt);\n    BeanDeserializerBase newDelegatee = _verifyDeserType(del);\n    // Let's go through the properties now...\n    Iterator<SettableBeanProperty> it = newDelegatee.properties();\n    HashSet<String> unwrappedNames = null;\n    while (it.hasNext()) {\n        SettableBeanProperty prop = it.next();\n        // First things first: only consider array/Collection types\n        // (not perfect check, but simplest reasonable check)\n        JavaType type = prop.getType();\n        if (!TypeUtil.isIndexedType(type)) {\n            continue;\n        }\n        PropertyName wrapperName = prop.getWrapperName();\n        // skip anything with wrapper (should work as is)\n        if ((wrapperName != null) && (wrapperName != PropertyName.NO_NAME)) {\n            continue;\n        }\n        if (unwrappedNames == null) {\n            unwrappedNames = new HashSet<String>();\n        }\n        // not optimal; should be able to use PropertyName...\n        unwrappedNames.add(prop.getName());\n        for (PropertyName alias : prop.findAliases(ctxt.getConfig())) {\n            unwrappedNames.add(alias.getSimpleName());\n        }\n    }\n    // Ok: if nothing to take care of, just return the delegatee...\n    if (unwrappedNames == null) {\n        return newDelegatee;\n    }\n    // Otherwise, create the thing that can deal with virtual wrapping\n    return new WrapperHandlingDeserializer(newDelegatee, unwrappedNames);\n}","com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty)","digraph cfg_createContextual {\n	""1"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""2"" [label=""$stack14 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>()""];\n	""3"" [label=""$stack15 = new com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""4"" [label=""$stack16 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>()""];\n	""5"" [label=""$stack17 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.TypeUtil: boolean isIndexedType(com.fasterxml.jackson.databind.JavaType)>(type)""];\n	""6"" [label=""$stack18 = virtualinvoke prop.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.lang.String getName()>()""];\n	""7"" [label=""$stack19 = virtualinvoke ctxt.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>()""];\n	""8"" [label=""$stack20 = virtualinvoke prop.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.util.List findAliases(com.fasterxml.jackson.databind.cfg.MapperConfig)>($stack19)""];\n	""9"" [label=""$stack21 = interfaceinvoke l11.<java.util.Iterator: boolean hasNext()>()""];\n	""10"" [label=""$stack22 = interfaceinvoke l11.<java.util.Iterator: java.lang.Object next()>()""];\n	""11"" [label=""$stack23 = virtualinvoke alias.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""12"" [label=""$stack24 = new java.util.HashSet""];\n	""13"" [label=""$stack25 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName NO_NAME>""];\n	""14"" [label=""$stack26 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""15"" [label=""$stack27 = virtualinvoke $stack26.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Class handledType()>()""];\n	""16"" [label=""alias = (com.fasterxml.jackson.databind.PropertyName) $stack22""];\n	""17"" [label=""ctxt := @parameter0: com.fasterxml.jackson.databind.DeserializationContext""];\n	""18"" [label=""del = virtualinvoke ctxt.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JavaType)>($stack13, property, vt)""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack14 == 0""];\n	""24"" [label=""if $stack17 != 0""];\n	""25"" [label=""if $stack21 == 0""];\n	""26"" [label=""if unwrappedNames != null""];\n	""27"" [label=""if unwrappedNames != null""];\n	""28"" [label=""if vt != null""];\n	""29"" [label=""if wrapperName == $stack25""];\n	""30"" [label=""if wrapperName == null""];\n	""31"" [label=""it = virtualinvoke newDelegatee.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: java.util.Iterator properties()>()""];\n	""32"" [label=""l11 = interfaceinvoke $stack20.<java.util.List: java.util.Iterator iterator()>()""];\n	""33"" [label=""newDelegatee = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.deser.BeanDeserializerBase _verifyDeserType(com.fasterxml.jackson.databind.JsonDeserializer)>(del)""];\n	""34"" [label=""prop = (com.fasterxml.jackson.databind.deser.SettableBeanProperty) $stack16""];\n	""35"" [label=""property := @parameter1: com.fasterxml.jackson.databind.BeanProperty""];\n	""36"" [label=""return $stack15""];\n	""37"" [label=""return newDelegatee""];\n	""38"" [label=""specialinvoke $stack15.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set)>(newDelegatee, unwrappedNames)""];\n	""39"" [label=""specialinvoke $stack24.<java.util.HashSet: void <init>()>()""];\n	""40"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""41"" [label=""type = virtualinvoke prop.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.JavaType getType()>()""];\n	""42"" [label=""unwrappedNames = $stack24""];\n	""43"" [label=""unwrappedNames = null""];\n	""44"" [label=""virtualinvoke unwrappedNames.<java.util.HashSet: boolean add(java.lang.Object)>($stack18)""];\n	""45"" [label=""virtualinvoke unwrappedNames.<java.util.HashSet: boolean add(java.lang.Object)>($stack23)""];\n	""46"" [label=""vt = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.JavaType _type>""];\n	""47"" [label=""vt = virtualinvoke ctxt.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($stack27)""];\n	""48"" [label=""wrapperName = virtualinvoke prop.<com.fasterxml.jackson.databind.deser.SettableBeanProperty: com.fasterxml.jackson.databind.PropertyName getWrapperName()>()""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""11"" -> ""45""[label=""cfg_next""];\n	""12"" -> ""39""[label=""cfg_next""];\n	""13"" -> ""29""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""15"" -> ""47""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""35""[label=""cfg_next""];\n	""18"" -> ""33""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_goto""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""20"" -> ""2""[label=""cfg_goto""];\n	""21"" -> ""2""[label=""cfg_goto""];\n	""22"" -> ""9""[label=""cfg_goto""];\n	""23"" -> ""26""[label=""cfg_true""];\n	""23"" -> ""4""[label=""cfg_false""];\n	""24"" -> ""19""[label=""cfg_false""];\n	""24"" -> ""48""[label=""cfg_true""];\n	""25"" -> ""10""[label=""cfg_false""];\n	""25"" -> ""21""[label=""cfg_true""];\n	""26"" -> ""3""[label=""cfg_true""];\n	""26"" -> ""37""[label=""cfg_false""];\n	""27"" -> ""12""[label=""cfg_false""];\n	""27"" -> ""6""[label=""cfg_true""];\n	""28"" -> ""1""[label=""cfg_true""];\n	""28"" -> ""14""[label=""cfg_false""];\n	""29"" -> ""20""[label=""cfg_false""];\n	""29"" -> ""27""[label=""cfg_true""];\n	""3"" -> ""38""[label=""cfg_next""];\n	""30"" -> ""13""[label=""cfg_false""];\n	""30"" -> ""27""[label=""cfg_true""];\n	""31"" -> ""43""[label=""cfg_next""];\n	""32"" -> ""9""[label=""cfg_next""];\n	""33"" -> ""31""[label=""cfg_next""];\n	""34"" -> ""41""[label=""cfg_next""];\n	""35"" -> ""46""[label=""cfg_next""];\n	""38"" -> ""36""[label=""cfg_next""];\n	""39"" -> ""42""[label=""cfg_next""];\n	""4"" -> ""34""[label=""cfg_next""];\n	""40"" -> ""17""[label=""cfg_next""];\n	""41"" -> ""5""[label=""cfg_next""];\n	""42"" -> ""6""[label=""cfg_next""];\n	""43"" -> ""2""[label=""cfg_next""];\n	""44"" -> ""7""[label=""cfg_next""];\n	""45"" -> ""22""[label=""cfg_next""];\n	""46"" -> ""28""[label=""cfg_next""];\n	""47"" -> ""1""[label=""cfg_next""];\n	""48"" -> ""30""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""44""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""32""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.deserialize(JsonParser,DeserializationContext)",Method,No Comment,"@Override\npublic Object deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {\n    _configureParser(p);\n    return _delegatee.deserialize(p, ctxt);\n}","java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)","digraph cfg_deserialize {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(p, ctxt)""];\n	""3"" [label=""ctxt := @parameter1: com.fasterxml.jackson.databind.DeserializationContext""];\n	""4"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""5"" [label=""return $stack4""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""7"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: void _configureParser(com.fasterxml.jackson.core.JsonParser)>(p)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.deserialize(JsonParser,DeserializationContext,Object)",Method,No Comment,"@SuppressWarnings(""unchecked"")\n@Override\npublic Object deserialize(JsonParser p, DeserializationContext ctxt, Object intoValue) throws IOException {\n    _configureParser(p);\n    return ((JsonDeserializer<Object>) _delegatee).deserialize(p, ctxt, intoValue);\n}","java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)","digraph cfg_deserialize {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(p, ctxt, intoValue)""];\n	""3"" [label=""ctxt := @parameter1: com.fasterxml.jackson.databind.DeserializationContext""];\n	""4"" [label=""intoValue := @parameter2: java.lang.Object""];\n	""5"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""6"" [label=""return $stack5""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""8"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: void _configureParser(com.fasterxml.jackson.core.JsonParser)>(p)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.deserializeWithType(JsonParser,DeserializationContext,TypeDeserializer)",Method,No Comment,"@Override\npublic Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException {\n    _configureParser(p);\n    return _delegatee.deserializeWithType(p, ctxt, typeDeserializer);\n}","java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)","digraph cfg_deserializeWithType {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _delegatee>""];\n	""2"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer)>(p, ctxt, typeDeserializer)""];\n	""3"" [label=""ctxt := @parameter1: com.fasterxml.jackson.databind.DeserializationContext""];\n	""4"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""7"" [label=""typeDeserializer := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer""];\n	""8"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: void _configureParser(com.fasterxml.jackson.core.JsonParser)>(p)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer._configureParser(JsonParser),Method,No Comment,"@SuppressWarnings(""resource"")\nprotected final void _configureParser(JsonParser p) throws IOException {\n    // 05-Sep-2019, tatu: May get XML parser, except for case where content is\n    //   buffered. In that case we may still have access to real parser if we\n    //   are lucky (like in [dataformat-xml#242])\n    while (p instanceof JsonParserDelegate) {\n        p = ((JsonParserDelegate) p).delegate();\n    }\n    if ((p instanceof ElementWrappable) && (_namesToWrap != null)) {\n        // 03-May-2021, tatu: as per [dataformat-xml#469] there are special\n        //   cases where we get String token to represent XML empty element.\n        //   If so, need to refrain from adding wrapping as that would\n        //   override parent settings\n        JsonToken t = p.currentToken();\n        if (t == JsonToken.START_OBJECT || t == JsonToken.START_ARRAY || // 12-Dec-2021, tatu: [dataformat-xml#490] There seems to be\n        //    cases here (similar to regular JSON) where leading START_OBJECT\n        //    is consumed during buffering, so need to consider that too\n        //    it seems (just hope we are at correct level and not off by one...)\n        t == JsonToken.FIELD_NAME) {\n            ((ElementWrappable) p).addVirtualWrapping(_namesToWrap, _caseInsensitive);\n        }\n    }\n}",void _configureParser(com.fasterxml.jackson.core.JsonParser),"digraph cfg__configureParser {\n	""1"" [label=""$stack10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>""];\n	""2"" [label=""$stack11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>""];\n	""3"" [label=""$stack12 = (com.fasterxml.jackson.core.util.JsonParserDelegate) p""];\n	""4"" [label=""$stack3 = p instanceof com.fasterxml.jackson.core.util.JsonParserDelegate""];\n	""5"" [label=""$stack4 = p instanceof com.fasterxml.jackson.dataformat.xml.deser.ElementWrappable""];\n	""6"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: java.util.Set _namesToWrap>""];\n	""7"" [label=""$stack6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>""];\n	""8"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: boolean _caseInsensitive>""];\n	""9"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: java.util.Set _namesToWrap>""];\n	""10"" [label=""$stack9 = (com.fasterxml.jackson.dataformat.xml.deser.ElementWrappable) p""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack3 == 0""];\n	""13"" [label=""if $stack4 == 0""];\n	""14"" [label=""if $stack5 == null""];\n	""15"" [label=""if t != $stack11""];\n	""16"" [label=""if t == $stack10""];\n	""17"" [label=""if t == $stack6""];\n	""18"" [label=""interfaceinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.deser.ElementWrappable: void addVirtualWrapping(java.util.Set,boolean)>($stack8, $stack7)""];\n	""19"" [label=""p := @parameter0: com.fasterxml.jackson.core.JsonParser""];\n	""20"" [label=""p = virtualinvoke $stack12.<com.fasterxml.jackson.core.util.JsonParserDelegate: com.fasterxml.jackson.core.JsonParser delegate()>()""];\n	""21"" [label=""return""];\n	""22"" [label=""t = virtualinvoke p.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>()""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_goto""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""21""[label=""cfg_true""];\n	""13"" -> ""6""[label=""cfg_false""];\n	""14"" -> ""21""[label=""cfg_true""];\n	""14"" -> ""22""[label=""cfg_false""];\n	""15"" -> ""10""[label=""cfg_false""];\n	""15"" -> ""21""[label=""cfg_true""];\n	""16"" -> ""10""[label=""cfg_true""];\n	""16"" -> ""2""[label=""cfg_false""];\n	""17"" -> ""1""[label=""cfg_false""];\n	""17"" -> ""10""[label=""cfg_true""];\n	""18"" -> ""21""[label=""cfg_next""];\n	""19"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""7""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n","protected , final "
com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer._verifyDeserType(JsonDeserializer),Method,No Comment,"protected BeanDeserializerBase _verifyDeserType(JsonDeserializer<?> deser) {\n    if (!(deser instanceof BeanDeserializerBase)) {\n        throw new IllegalArgumentException(""Can not change delegate to be of type "" + deser.getClass().getName());\n    }\n    return (BeanDeserializerBase) deser;\n}",com.fasterxml.jackson.databind.deser.BeanDeserializerBase _verifyDeserType(com.fasterxml.jackson.databind.JsonDeserializer),"digraph cfg__verifyDeserType {\n	""1"" [label=""$stack10 = new java.lang.IllegalArgumentException""];\n	""2"" [label=""$stack2 = deser instanceof com.fasterxml.jackson.databind.deser.BeanDeserializerBase""];\n	""3"" [label=""$stack3 = (com.fasterxml.jackson.databind.deser.BeanDeserializerBase) deser""];\n	""4"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack5 = virtualinvoke deser.<java.lang.Object: java.lang.Class getClass()>()""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.String getName()>()""];\n	""7"" [label=""$stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Can not change delegate to be of type \"")""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6)""];\n	""9"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""10"" [label=""deser := @parameter0: com.fasterxml.jackson.databind.JsonDeserializer""];\n	""11"" [label=""if $stack2 != 0""];\n	""12"" [label=""return $stack3""];\n	""13"" [label=""specialinvoke $stack10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack9)""];\n	""14"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""16"" [label=""throw $stack10""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""13""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.<init>(BeanDeserializerBase),Constructor,No Comment,"public WrapperHandlingDeserializer(BeanDeserializerBase delegate) {\n    this(delegate, null);\n}",void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase),"digraph cfg_init {\n	""1"" [label=""delegate := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set)>(delegate, null)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer.<init>(BeanDeserializerBase,Set)",Constructor,No Comment,"public WrapperHandlingDeserializer(BeanDeserializerBase delegate, Set<String> namesToWrap) {\n    super(delegate);\n    _namesToWrap = namesToWrap;\n    _type = delegate.getValueType();\n    _caseInsensitive = delegate.isCaseInsensitive();\n}","void <init>(com.fasterxml.jackson.databind.deser.BeanDeserializerBase,java.util.Set)","digraph cfg_init {\n	""1"" [label=""$stack3 = virtualinvoke delegate.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: com.fasterxml.jackson.databind.JavaType getValueType()>()""];\n	""2"" [label=""$stack4 = virtualinvoke delegate.<com.fasterxml.jackson.databind.deser.BeanDeserializerBase: boolean isCaseInsensitive()>()""];\n	""3"" [label=""delegate := @parameter0: com.fasterxml.jackson.databind.deser.BeanDeserializerBase""];\n	""4"" [label=""namesToWrap := @parameter1: java.util.Set""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer: void <init>(com.fasterxml.jackson.databind.JsonDeserializer)>(delegate)""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: boolean _caseInsensitive> = $stack4""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: com.fasterxml.jackson.databind.JavaType _type> = $stack3""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer: java.util.Set _namesToWrap> = namesToWrap""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.init(Id,TypeIdResolver)",Method,No Comment,"@Override\npublic StdTypeResolverBuilder init(JsonTypeInfo.Id idType, TypeIdResolver idRes) {\n    super.init(idType, idRes);\n    if (_typeProperty != null) {\n        _typeProperty = StaxUtil.sanitizeXmlTypeName(_typeProperty);\n    }\n    return this;\n}","com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)","digraph cfg_init {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: java.lang.String _typeProperty>""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: java.lang.String _typeProperty>""];\n	""3"" [label=""$stack5 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.String sanitizeXmlTypeName(java.lang.String)>($stack4)""];\n	""4"" [label=""idRes := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeIdResolver""];\n	""5"" [label=""idType := @parameter0: com.fasterxml.jackson.annotation.JsonTypeInfo$Id""];\n	""6"" [label=""if $stack3 == null""];\n	""7"" [label=""return this""];\n	""8"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>(idType, idRes)""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: java.lang.String _typeProperty> = $stack5""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_false""];\n	""6"" -> ""7""[label=""cfg_true""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.typeProperty(String),Method,No Comment,@Override\npublic StdTypeResolverBuilder typeProperty(String typeIdPropName) {\n    // ok to have null/empty; will restore to use defaults\n    if (typeIdPropName == null || typeIdPropName.length() == 0) {\n        typeIdPropName = _idType.getDefaultPropertyName();\n    }\n    _typeProperty = StaxUtil.sanitizeXmlTypeName(typeIdPropName);\n    return this;\n},com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String),"digraph cfg_typeProperty {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType>""];\n	""2"" [label=""$stack3 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.String sanitizeXmlTypeName(java.lang.String)>(typeIdPropName)""];\n	""3"" [label=""$stack4 = virtualinvoke typeIdPropName.<java.lang.String: int length()>()""];\n	""4"" [label=""if $stack4 != 0""];\n	""5"" [label=""if typeIdPropName == null""];\n	""6"" [label=""return this""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: java.lang.String _typeProperty> = $stack3""];\n	""9"" [label=""typeIdPropName := @parameter0: java.lang.String""];\n	""10"" [label=""typeIdPropName = virtualinvoke $stack2.<com.fasterxml.jackson.annotation.JsonTypeInfo$Id: java.lang.String getDefaultPropertyName()>()""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.idResolver(MapperConfig,JavaType,PolymorphicTypeValidator,Collection,boolean,boolean)",Method,No Comment,"@Override\nprotected TypeIdResolver idResolver(MapperConfig<?> config, JavaType baseType, PolymorphicTypeValidator subtypeValidator, Collection<NamedType> subtypes, boolean forSer, boolean forDeser) {\n    if (_customIdResolver != null) {\n        return _customIdResolver;\n    }\n    // Only override handlers of class, minimal class; name is good as is\n    switch(_idType) {\n        case CLASS:\n            return new XmlTypeResolverBuilder.XmlClassNameIdResolver(baseType, config.getTypeFactory(), subTypeValidator(config));\n        case MINIMAL_CLASS:\n            return new XmlTypeResolverBuilder.XmlMinimalClassNameIdResolver(baseType, config.getTypeFactory(), subTypeValidator(config));\n        default:\n    }\n    return super.idResolver(config, baseType, subtypeValidator, subtypes, forSer, forDeser);\n}","com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean)","digraph cfg_idResolver {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<com.fasterxml.jackson.annotation.JsonTypeInfo$Id: int ordinal()>()""];\n	""2"" [label=""$stack11 = $stack9[$stack10]""];\n	""3"" [label=""$stack12 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig)>(config)""];\n	""4"" [label=""$stack13 = virtualinvoke config.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>()""];\n	""5"" [label=""$stack14 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver""];\n	""6"" [label=""$stack15 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(com.fasterxml.jackson.databind.cfg.MapperConfig)>(config)""];\n	""7"" [label=""$stack16 = virtualinvoke config.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>()""];\n	""8"" [label=""$stack17 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver""];\n	""9"" [label=""$stack18 = specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean)>(config, baseType, subtypeValidator, subtypes, forSer, forDeser)""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver>""];\n	""11"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver>""];\n	""12"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType>""];\n	""13"" [label=""$stack9 = <com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>""];\n	""14"" [label=""baseType := @parameter1: com.fasterxml.jackson.databind.JavaType""];\n	""15"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""16"" [label=""forDeser := @parameter5: boolean""];\n	""17"" [label=""forSer := @parameter4: boolean""];\n	""18"" [label=""if $stack7 == null""];\n	""19"" [label=""return $stack14""];\n	""20"" [label=""return $stack17""];\n	""21"" [label=""return $stack18""];\n	""22"" [label=""return $stack19""];\n	""23"" [label=""specialinvoke $stack14.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlMinimalClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(baseType, $stack13, $stack12)""];\n	""24"" [label=""specialinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder$XmlClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(baseType, $stack16, $stack15)""];\n	""25"" [label=""subtypeValidator := @parameter2: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator""];\n	""26"" [label=""subtypes := @parameter3: java.util.Collection""];\n	""27"" [label=""switch($stack11) \{     case 1:     case 2:     default:  \}""];\n	""28"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""22""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_false""];\n	""18"" -> ""13""[label=""cfg_true""];\n	""2"" -> ""27""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_next""];\n	""24"" -> ""20""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""17""[label=""cfg_next""];\n	""27"" -> ""5""[label=""cfg_switch""];\n	""27"" -> ""8""[label=""cfg_switch""];\n	""27"" -> ""9""[label=""cfg_switch""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""23""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder.<init>(DefaultTyping,PolymorphicTypeValidator)",Constructor,No Comment,"public DefaultingXmlTypeResolverBuilder(DefaultTyping t, PolymorphicTypeValidator ptv) {\n    super(t, ptv);\n}","void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)","digraph cfg_init {\n	""1"" [label=""ptv := @parameter1: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(t, ptv)""];\n	""4"" [label=""t := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.PackageVersion.version(),Method,No Comment,@Override\npublic Version version() {\n    return VERSION;\n},com.fasterxml.jackson.core.Version version(),"digraph cfg_version {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.PackageVersion: com.fasterxml.jackson.core.Version VERSION>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.PackageVersion""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.findNamespace(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic String findNamespace(MapperConfig<?> config, Annotated ann) {\n    return null;\n}","java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_findNamespace {\n	""1"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""3"" [label=""return null""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.isOutputAsAttribute(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsAttribute(MapperConfig<?> config, Annotated ann) {\n    return null;\n}","java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsAttribute {\n	""1"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""3"" [label=""return null""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.isOutputAsText(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsText(MapperConfig<?> config, Annotated ann) {\n    return null;\n}","java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsText {\n	""1"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""3"" [label=""return null""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.isOutputAsCData(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsCData(MapperConfig<?> config, Annotated ann) {\n    return null;\n}","java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsCData {\n	""1"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""3"" [label=""return null""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.<init>(),Constructor,No Comment,@Deprecated\npublic XmlJaxbAnnotationIntrospector() {\n    super();\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector.<init>(TypeFactory),Constructor,No Comment,public XmlJaxbAnnotationIntrospector(TypeFactory typeFactory) {\n    super();\n},void <init>(com.fasterxml.jackson.databind.type.TypeFactory),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.jaxb.XmlJaxbAnnotationIntrospector""];\n	""4"" [label=""typeFactory := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.setupModule(SetupContext),Method,No Comment,"@SuppressWarnings(""deprecation"")\n@Override\npublic void setupModule(SetupContext context) {\n    // Need to modify BeanDeserializer, BeanSerializer that are used\n    context.addBeanSerializerModifier(new XmlBeanSerializerModifier());\n    context.addBeanDeserializerModifier(new XmlBeanDeserializerModifier(_cfgNameForTextElement));\n    // as well as AnnotationIntrospector\n    context.insertAnnotationIntrospector(_constructIntrospector());\n    // and finally inform XmlFactory about overrides, if need be:\n    if (_cfgNameForTextElement != FromXmlParser.DEFAULT_UNNAMED_TEXT_PROPERTY) {\n        XmlMapper m = (XmlMapper) context.getOwner();\n        m.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    // Usually this would be the first call; but here anything added will\n    // be stuff user may has added, so do it afterwards instead.\n    super.setupModule(context);\n}",void setupModule(com.fasterxml.jackson.databind.Module$SetupContext),"digraph cfg_setupModule {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: java.lang.String _cfgNameForTextElement>""];\n	""3"" [label=""$stack5 = new com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier""];\n	""4"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: com.fasterxml.jackson.databind.AnnotationIntrospector _constructIntrospector()>()""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: java.lang.String _cfgNameForTextElement>""];\n	""6"" [label=""$stack8 = interfaceinvoke context.<com.fasterxml.jackson.databind.Module$SetupContext: com.fasterxml.jackson.core.ObjectCodec getOwner()>()""];\n	""7"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: java.lang.String _cfgNameForTextElement>""];\n	""8"" [label=""context := @parameter0: com.fasterxml.jackson.databind.Module$SetupContext""];\n	""9"" [label=""if $stack7 == \""\""""];\n	""10"" [label=""interfaceinvoke context.<com.fasterxml.jackson.databind.Module$SetupContext: void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier)>($stack5)""];\n	""11"" [label=""interfaceinvoke context.<com.fasterxml.jackson.databind.Module$SetupContext: void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)>($stack3)""];\n	""12"" [label=""interfaceinvoke context.<com.fasterxml.jackson.databind.Module$SetupContext: void insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)>($stack6)""];\n	""13"" [label=""m = (com.fasterxml.jackson.dataformat.xml.XmlMapper) $stack8""];\n	""14"" [label=""return""];\n	""15"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier: void <init>()>()""];\n	""16"" [label=""specialinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier: void <init>(java.lang.String)>($stack4)""];\n	""17"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.module.SimpleModule: void setupModule(com.fasterxml.jackson.databind.Module$SetupContext)>(context)""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""19"" [label=""virtualinvoke m.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void setXMLTextElementName(java.lang.String)>($stack9)""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""8""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.setDefaultUseWrapper(boolean),Method,"* Method that can be used to define whether {@link AnnotationIntrospector}\n     * we register will use wrapper for indexed (List, array) properties or not,\n     * if there are no explicit annotations.\n     * See {@link com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper}\n     * for details.\n     *<p>\n     * Note that method MUST be called before registering the module; otherwise change\n     * will not have any effect.\n     * \n     * @param state Whether to enable or disable ""use wrapper for non-annotated List properties""\n     * \n     * @since 2.1",public void setDefaultUseWrapper(boolean state) {\n    _cfgDefaultUseWrapper = state;\n},void setDefaultUseWrapper(boolean),"digraph cfg_setDefaultUseWrapper {\n	""1"" [label=""return""];\n	""2"" [label=""state := @parameter0: boolean""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: boolean _cfgDefaultUseWrapper> = state""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.setXMLTextElementName(String),Method,"* Method that can be used to define alternate ""virtual name"" to use\n     * for XML CDATA segments; that is, text values. Default name is empty String\n     * (""""); but some frameworks use other names: JAXB, for example, uses\n     * ""value"".\n     *<p>\n     * Note that method MUST be called before registering the module; otherwise change\n     * will not have any effect.\n     * \n     * @param name Virtual name to use when exposing XML character data sections\n     * \n     * @since 2.1",public void setXMLTextElementName(String name) {\n    _cfgNameForTextElement = name;\n},void setXMLTextElementName(java.lang.String),"digraph cfg_setXMLTextElementName {\n	""1"" [label=""name := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: java.lang.String _cfgNameForTextElement> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.overrideSerializerFactory(SerializerFactory),Method,* Method to use for overriding default {@link SerializerFactory} used\n     *\n     * @since 2.18.2,public JacksonXmlModule overrideSerializerFactory(SerializerFactory factory) {\n    _serializerFactoryOverride = factory;\n    return this;\n},com.fasterxml.jackson.dataformat.xml.JacksonXmlModule overrideSerializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory),"digraph cfg_overrideSerializerFactory {\n	""1"" [label=""factory := @parameter0: com.fasterxml.jackson.databind.ser.SerializerFactory""];\n	""2"" [label=""return this""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactoryOverride> = factory""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.serializerFactoryOverride(),Method,* @since 2.18.2,public SerializerFactory serializerFactoryOverride() {\n    return _serializerFactoryOverride;\n},com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactoryOverride(),"digraph cfg_serializerFactoryOverride {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactoryOverride>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule._constructIntrospector(),Method,No Comment,protected AnnotationIntrospector _constructIntrospector() {\n    return new JacksonXmlAnnotationIntrospector(_cfgDefaultUseWrapper);\n},com.fasterxml.jackson.databind.AnnotationIntrospector _constructIntrospector(),"digraph cfg__constructIntrospector {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: boolean _cfgDefaultUseWrapper>""];\n	""2"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: void <init>(boolean)>($stack1)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.JacksonXmlModule.<init>(),Constructor,No Comment,"public JacksonXmlModule() {\n    super(""JacksonXmlModule"", PackageVersion.VERSION);\n}",void <init>(),"digraph cfg_init {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.PackageVersion: com.fasterxml.jackson.core.Version VERSION>""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.module.SimpleModule: void <init>(java.lang.String,com.fasterxml.jackson.core.Version)>(\""JacksonXmlModule\"", $stack1)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: boolean _cfgDefaultUseWrapper> = 1""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: java.lang.String _cfgNameForTextElement> = \""\""""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.setDefaultUseWrapper(boolean),Method,No Comment,public void setDefaultUseWrapper(boolean b) {\n    _cfgDefaultUseWrapper = b;\n},void setDefaultUseWrapper(boolean),"digraph cfg_setDefaultUseWrapper {\n	""1"" [label=""b := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: boolean _cfgDefaultUseWrapper> = b""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findWrapperName(Annotated),Method,No Comment,"@Override\npublic PropertyName findWrapperName(Annotated ann) {\n    JacksonXmlElementWrapper w = _findAnnotation(ann, JacksonXmlElementWrapper.class);\n    if (w != null) {\n        // Special case: wrapping explicitly blocked?\n        if (!w.useWrapping()) {\n            return PropertyName.NO_NAME;\n        }\n        // also: need to ensure we use marker:\n        String localName = w.localName();\n        if (localName == null || localName.length() == 0) {\n            return PropertyName.USE_DEFAULT;\n        }\n        return PropertyName.construct(w.localName(), w.namespace());\n    }\n    // 09-Sep-2012, tatu: In absence of configuration we need to use our\n    //   default settings...\n    if (_cfgDefaultUseWrapper) {\n        return PropertyName.USE_DEFAULT;\n    }\n    return null;\n}",com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated),"digraph cfg_findWrapperName {\n	""1"" [label=""$stack10 = interfaceinvoke w.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper: java.lang.String namespace()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke w.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper: java.lang.String localName()>()""];\n	""3"" [label=""$stack12 = staticinvoke <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String)>($stack11, $stack10)""];\n	""4"" [label=""$stack13 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName NO_NAME>""];\n	""5"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(ann, class \""Lcom/fasterxml/jackson/dataformat/xml/annotation/JacksonXmlElementWrapper;\"")""];\n	""6"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: boolean _cfgDefaultUseWrapper>""];\n	""7"" [label=""$stack6 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName USE_DEFAULT>""];\n	""8"" [label=""$stack7 = interfaceinvoke w.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper: boolean useWrapping()>()""];\n	""9"" [label=""$stack8 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName USE_DEFAULT>""];\n	""10"" [label=""$stack9 = virtualinvoke localName.<java.lang.String: int length()>()""];\n	""11"" [label=""ann := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""12"" [label=""if $stack5 == 0""];\n	""13"" [label=""if $stack7 != 0""];\n	""14"" [label=""if $stack9 != 0""];\n	""15"" [label=""if localName == null""];\n	""16"" [label=""if w == null""];\n	""17"" [label=""localName = interfaceinvoke w.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper: java.lang.String localName()>()""];\n	""18"" [label=""return $stack12""];\n	""19"" [label=""return $stack13""];\n	""20"" [label=""return $stack6""];\n	""21"" [label=""return $stack8""];\n	""22"" [label=""return null""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""24"" [label=""w = (com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlElementWrapper) $stack4""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_true""];\n	""12"" -> ""7""[label=""cfg_false""];\n	""13"" -> ""17""[label=""cfg_true""];\n	""13"" -> ""4""[label=""cfg_false""];\n	""14"" -> ""2""[label=""cfg_true""];\n	""14"" -> ""9""[label=""cfg_false""];\n	""15"" -> ""10""[label=""cfg_false""];\n	""15"" -> ""9""[label=""cfg_true""];\n	""16"" -> ""6""[label=""cfg_true""];\n	""16"" -> ""8""[label=""cfg_false""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""11""[label=""cfg_next""];\n	""24"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findRootName(AnnotatedClass),Method,No Comment,"@Override\npublic PropertyName findRootName(AnnotatedClass ac) {\n    JacksonXmlRootElement root = _findAnnotation(ac, JacksonXmlRootElement.class);\n    if (root != null) {\n        String local = root.localName();\n        String ns = root.namespace();\n        if (local.length() == 0 && ns.length() == 0) {\n            return PropertyName.USE_DEFAULT;\n        }\n        return new PropertyName(local, ns);\n    }\n    return super.findRootName(ac);\n}",com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass),"digraph cfg_findRootName {\n	""1"" [label=""$stack10 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName USE_DEFAULT>""];\n	""2"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(ac, class \""Lcom/fasterxml/jackson/dataformat/xml/annotation/JacksonXmlRootElement;\"")""];\n	""3"" [label=""$stack6 = specialinvoke this.<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(ac)""];\n	""4"" [label=""$stack7 = virtualinvoke local.<java.lang.String: int length()>()""];\n	""5"" [label=""$stack8 = new com.fasterxml.jackson.databind.PropertyName""];\n	""6"" [label=""$stack9 = virtualinvoke ns.<java.lang.String: int length()>()""];\n	""7"" [label=""ac := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedClass""];\n	""8"" [label=""if $stack7 != 0""];\n	""9"" [label=""if $stack9 != 0""];\n	""10"" [label=""if root == null""];\n	""11"" [label=""local = interfaceinvoke root.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement: java.lang.String localName()>()""];\n	""12"" [label=""ns = interfaceinvoke root.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement: java.lang.String namespace()>()""];\n	""13"" [label=""return $stack10""];\n	""14"" [label=""return $stack6""];\n	""15"" [label=""return $stack8""];\n	""16"" [label=""root = (com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement) $stack5""];\n	""17"" [label=""specialinvoke $stack8.<com.fasterxml.jackson.databind.PropertyName: void <init>(java.lang.String,java.lang.String)>(local, ns)""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_false""];\n	""10"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_true""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNamespace(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic String findNamespace(MapperConfig<?> config, Annotated ann) {\n    String ns1 = null;\n    JacksonXmlProperty xmlProp = _findAnnotation(ann, JacksonXmlProperty.class);\n    if (xmlProp != null) {\n        ns1 = xmlProp.namespace();\n    }\n    // 14-Nov-2020, tatu: 2.12 adds namespace for this too\n    JsonProperty jprop = _findAnnotation(ann, JsonProperty.class);\n    String ns2 = null;\n    if (jprop != null) {\n        ns2 = jprop.namespace();\n    }\n    if (ns1 == null) {\n        return ns2;\n    }\n    if (ns2 == null) {\n        return ns1;\n    }\n    if (ns1.isEmpty()) {\n        return ns2;\n    }\n    return ns1;\n}","java.lang.String findNamespace(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_findNamespace {\n	""1"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(ann, class \""Lcom/fasterxml/jackson/dataformat/xml/annotation/JacksonXmlProperty;\"")""];\n	""2"" [label=""$stack8 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(ann, class \""Lcom/fasterxml/jackson/annotation/JsonProperty;\"")""];\n	""3"" [label=""$stack9 = virtualinvoke ns1.<java.lang.String: boolean isEmpty()>()""];\n	""4"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""5"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""6"" [label=""if $stack9 == 0""];\n	""7"" [label=""if jprop == null""];\n	""8"" [label=""if ns1 != null""];\n	""9"" [label=""if ns2 != null""];\n	""10"" [label=""if xmlProp == null""];\n	""11"" [label=""jprop = (com.fasterxml.jackson.annotation.JsonProperty) $stack8""];\n	""12"" [label=""ns1 = interfaceinvoke xmlProp.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty: java.lang.String namespace()>()""];\n	""13"" [label=""ns1 = null""];\n	""14"" [label=""ns2 = interfaceinvoke jprop.<com.fasterxml.jackson.annotation.JsonProperty: java.lang.String namespace()>()""];\n	""15"" [label=""ns2 = null""];\n	""16"" [label=""return ns1""];\n	""17"" [label=""return ns1""];\n	""18"" [label=""return ns2""];\n	""19"" [label=""return ns2""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""21"" [label=""xmlProp = (com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty) $stack7""];\n	""1"" -> ""21""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_false""];\n	""10"" -> ""2""[label=""cfg_true""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""1""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""21"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""17""[label=""cfg_true""];\n	""6"" -> ""19""[label=""cfg_false""];\n	""7"" -> ""14""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_true""];\n	""8"" -> ""18""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n	""9"" -> ""16""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findAndAddVirtualProperties(MapperConfig,AnnotatedClass,List)",Method,* Due to issue [dataformat-xml#578] need to suppress calls to this method\n     * to avoid duplicate virtual properties from being added. Not elegant\n     * but .. works.\n     *\n     * @since 2.15,"@Override\npublic void findAndAddVirtualProperties(MapperConfig<?> config, AnnotatedClass ac, List<BeanPropertyWriter> properties) {\n    return;\n}","void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)","digraph cfg_findAndAddVirtualProperties {\n	""1"" [label=""ac := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedClass""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""3"" [label=""properties := @parameter2: java.util.List""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.isOutputAsAttribute(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsAttribute(MapperConfig<?> config, Annotated ann) {\n    JacksonXmlProperty prop = _findAnnotation(ann, JacksonXmlProperty.class);\n    if (prop != null) {\n        return prop.isAttribute() ? Boolean.TRUE : Boolean.FALSE;\n    }\n    return null;\n}","java.lang.Boolean isOutputAsAttribute(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsAttribute {\n	""1"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(ann, class \""Lcom/fasterxml/jackson/dataformat/xml/annotation/JacksonXmlProperty;\"")""];\n	""2"" [label=""$stack5 = interfaceinvoke prop.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty: boolean isAttribute()>()""];\n	""3"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""4"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""5"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""if prop == null""];\n	""10"" [label=""prop = (com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty) $stack4""];\n	""11"" [label=""return $stack6""];\n	""12"" [label=""return null""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.isOutputAsText(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsText(MapperConfig<?> config, Annotated ann) {\n    JacksonXmlText prop = _findAnnotation(ann, JacksonXmlText.class);\n    if (prop != null) {\n        return prop.value() ? Boolean.TRUE : Boolean.FALSE;\n    }\n    return null;\n}","java.lang.Boolean isOutputAsText(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsText {\n	""1"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(ann, class \""Lcom/fasterxml/jackson/dataformat/xml/annotation/JacksonXmlText;\"")""];\n	""2"" [label=""$stack5 = interfaceinvoke prop.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlText: boolean value()>()""];\n	""3"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""4"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""5"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""if prop == null""];\n	""10"" [label=""prop = (com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlText) $stack4""];\n	""11"" [label=""return $stack6""];\n	""12"" [label=""return null""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.isOutputAsCData(MapperConfig,Annotated)",Method,No Comment,"@Override\npublic Boolean isOutputAsCData(MapperConfig<?> config, Annotated ann) {\n    JacksonXmlCData prop = ann.getAnnotation(JacksonXmlCData.class);\n    if (prop != null) {\n        return prop.value() ? Boolean.TRUE : Boolean.FALSE;\n    }\n    return null;\n}","java.lang.Boolean isOutputAsCData(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)","digraph cfg_isOutputAsCData {\n	""1"" [label=""$stack4 = virtualinvoke ann.<com.fasterxml.jackson.databind.introspect.Annotated: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>(class \""Lcom/fasterxml/jackson/dataformat/xml/annotation/JacksonXmlCData;\"")""];\n	""2"" [label=""$stack5 = interfaceinvoke prop.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlCData: boolean value()>()""];\n	""3"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""4"" [label=""$stack6 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""5"" [label=""ann := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack5 == 0""];\n	""9"" [label=""if prop == null""];\n	""10"" [label=""prop = (com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlCData) $stack4""];\n	""11"" [label=""return $stack6""];\n	""12"" [label=""return null""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""12""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_false""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNameForSerialization(Annotated),Method,No Comment,"@Override\npublic PropertyName findNameForSerialization(Annotated a) {\n    PropertyName pn = PropertyName.merge(_findXmlName(a), super.findNameForSerialization(a));\n    if (pn == null) {\n        if (_hasOneOf(a, ANNOTATIONS_TO_INFER_XML_PROP)) {\n            return PropertyName.USE_DEFAULT;\n        }\n    }\n    return pn;\n}",com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated),"digraph cfg_findNameForSerialization {\n	""1"" [label=""$stack3 = specialinvoke this.<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated)>(a)""];\n	""2"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: com.fasterxml.jackson.databind.PropertyName _findXmlName(com.fasterxml.jackson.databind.introspect.Annotated)>(a)""];\n	""3"" [label=""$stack5 = <com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.Class[] ANNOTATIONS_TO_INFER_XML_PROP>""];\n	""4"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: boolean _hasOneOf(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class[])>(a, $stack5)""];\n	""5"" [label=""$stack7 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName USE_DEFAULT>""];\n	""6"" [label=""a := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""7"" [label=""if $stack6 == 0""];\n	""8"" [label=""if pn != null""];\n	""9"" [label=""pn = staticinvoke <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName merge(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName)>($stack4, $stack3)""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""return pn""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.findNameForDeserialization(Annotated),Method,No Comment,"@Override\npublic PropertyName findNameForDeserialization(Annotated a) {\n    PropertyName pn = PropertyName.merge(_findXmlName(a), super.findNameForDeserialization(a));\n    if (pn == null) {\n        if (_hasOneOf(a, ANNOTATIONS_TO_INFER_XML_PROP)) {\n            return PropertyName.USE_DEFAULT;\n        }\n    }\n    return pn;\n}",com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated),"digraph cfg_findNameForDeserialization {\n	""1"" [label=""$stack3 = specialinvoke this.<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated)>(a)""];\n	""2"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: com.fasterxml.jackson.databind.PropertyName _findXmlName(com.fasterxml.jackson.databind.introspect.Annotated)>(a)""];\n	""3"" [label=""$stack5 = <com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.Class[] ANNOTATIONS_TO_INFER_XML_PROP>""];\n	""4"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: boolean _hasOneOf(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class[])>(a, $stack5)""];\n	""5"" [label=""$stack7 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName USE_DEFAULT>""];\n	""6"" [label=""a := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""7"" [label=""if $stack6 == 0""];\n	""8"" [label=""if pn != null""];\n	""9"" [label=""pn = staticinvoke <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName merge(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName)>($stack4, $stack3)""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""return pn""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_true""];\n	""7"" -> ""5""[label=""cfg_false""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector._constructStdTypeResolverBuilder(),Method,* We will override this method so that we can return instance\n     * that cleans up type id property name to be a valid xml name.,@Override\nprotected StdTypeResolverBuilder _constructStdTypeResolverBuilder() {\n    return new XmlTypeResolverBuilder();\n},com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder(),"digraph cfg__constructStdTypeResolverBuilder {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector._constructStdTypeResolverBuilder(MapperConfig,Value,JavaType)",Method,No Comment,"@Override\nprotected TypeResolverBuilder<?> _constructStdTypeResolverBuilder(MapperConfig<?> config, JsonTypeInfo.Value typeInfo, JavaType baseType) {\n    return new XmlTypeResolverBuilder(typeInfo);\n}","com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructStdTypeResolverBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.annotation.JsonTypeInfo$Value,com.fasterxml.jackson.databind.JavaType)","digraph cfg__constructStdTypeResolverBuilder {\n	""1"" [label=""$stack4 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder""];\n	""2"" [label=""baseType := @parameter2: com.fasterxml.jackson.databind.JavaType""];\n	""3"" [label=""config := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""specialinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder: void <init>(com.fasterxml.jackson.annotation.JsonTypeInfo$Value)>(typeInfo)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""7"" [label=""typeInfo := @parameter1: com.fasterxml.jackson.annotation.JsonTypeInfo$Value""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector._findXmlName(Annotated),Method,No Comment,"protected PropertyName _findXmlName(Annotated a) {\n    JacksonXmlProperty pann = _findAnnotation(a, JacksonXmlProperty.class);\n    if (pann != null) {\n        return PropertyName.construct(pann.localName(), pann.namespace());\n    }\n    return null;\n}",com.fasterxml.jackson.databind.PropertyName _findXmlName(com.fasterxml.jackson.databind.introspect.Annotated),"digraph cfg__findXmlName {\n	""1"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: java.lang.annotation.Annotation _findAnnotation(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(a, class \""Lcom/fasterxml/jackson/dataformat/xml/annotation/JacksonXmlProperty;\"")""];\n	""2"" [label=""$stack4 = interfaceinvoke pann.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty: java.lang.String namespace()>()""];\n	""3"" [label=""$stack5 = interfaceinvoke pann.<com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty: java.lang.String localName()>()""];\n	""4"" [label=""$stack6 = staticinvoke <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String)>($stack5, $stack4)""];\n	""5"" [label=""a := @parameter0: com.fasterxml.jackson.databind.introspect.Annotated""];\n	""6"" [label=""if pann == null""];\n	""7"" [label=""pann = (com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty) $stack3""];\n	""8"" [label=""return $stack6""];\n	""9"" [label=""return null""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_false""];\n	""6"" -> ""9""[label=""cfg_true""];\n	""7"" -> ""6""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.<init>(),Constructor,No Comment,public JacksonXmlAnnotationIntrospector() {\n    this(DEFAULT_USE_WRAPPER);\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: void <init>(boolean)>(1)""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector.<init>(boolean),Constructor,No Comment,public JacksonXmlAnnotationIntrospector(boolean defaultUseWrapper) {\n    _cfgDefaultUseWrapper = defaultUseWrapper;\n},void <init>(boolean),"digraph cfg_init {\n	""1"" [label=""defaultUseWrapper := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: boolean _cfgDefaultUseWrapper> = defaultUseWrapper""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newPassthroughProcessor(),Method,"* Generates a new processor that does nothing and just passes through the\n     * names as-is. Using this processor may generate invalid XML.\n     * <p>\n     * With this processor set, a map with the keys {@code ""123""} and\n     * {@code ""$ I am <fancy>! &;""} will be written as:\n     *\n     * <pre>{@code\n     * <DTO>\n     *     <badMap>\n     *         <$ I am <fancy>! &;>xyz</$ I am <fancy>! &;>\n     *         <123>bar</123>\n     *     </badMap>\n     * </DTO>\n     * }</pre>\n     * <p>\n     * This is the default behavior for backwards compatibility.\n     *\n     * @since 2.14",public static XmlNameProcessor newPassthroughProcessor() {\n    return new PassthroughProcessor();\n},com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newPassthroughProcessor(),"digraph cfg_newPassthroughProcessor {\n	""1"" [label=""$stack0 = new com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor""];\n	""2"" [label=""return $stack0""];\n	""3"" [label=""specialinvoke $stack0.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor: void <init>()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newReplacementProcessor(String),Method,"* Generates a new processor that replaces all characters that are NOT one of:\n     *<ul>\n     * <li>Lower- or upper-case ASCII letter (a to z, A to Z)\n     *   </li>\n     * <li>Digit (0 to 9) in position OTHER than the first character\n     *   </li>\n     * <li>Underscore\n     *   </li>\n     * <li>Hyphen ({@code -}) in position OTHER than the first character\n     *   </li>\n     * <li>Colon (only  exposed if underlying parser is in non-namespace-aware mode)\n     *   </li>\n     * </ul>\n     * in an\n     * XML name with a replacement string. This is a one-way processor, since\n     * there is no way to reverse this replacement step.\n     * <p>\n     * With this processor set (and {@code ""_""} as the replacement string), a map\n     * with the keys {@code ""123""} and {@code ""$ I am <fancy>! &;""} will be written as:\n     * <p>\n     * NOTE: this processor works for US-ASCII based element and attribute names\n     * but is unlikely to work well for many ""international"" use cases.\n     *\n     * <pre>{@code\n     * <DTO>\n     *     <badMap>\n     *         <__I_am__fancy_____>xyz</__I_am__fancy_____>\n     *         <_23>bar</_23>\n     *     </badMap>\n     * </DTO>\n     * }</pre>\n     *\n     * @param replacement The replacement string to replace invalid characters with\n     *\n     * @since 2.14",public static XmlNameProcessor newReplacementProcessor(String replacement) {\n    return new ReplaceNameProcessor(replacement);\n},com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newReplacementProcessor(java.lang.String),"digraph cfg_newReplacementProcessor {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor""];\n	""2"" [label=""replacement := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack1""];\n	""4"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor: void <init>(java.lang.String)>(replacement)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newReplacementProcessor(),Method,"* Convenience method \n     * equivalent to calling {@link #newReplacementProcessor(String)} with {@code ""_""}\n     *\n     * @since 2.14","public static XmlNameProcessor newReplacementProcessor() {\n    return newReplacementProcessor(""_"");\n}",com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newReplacementProcessor(),"digraph cfg_newReplacementProcessor {\n	""1"" [label=""$stack0 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newReplacementProcessor(java.lang.String)>(\""_\"")""];\n	""2"" [label=""return $stack0""];\n	""1"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newBase64Processor(String),Method,"* Generates a new processor that escapes all names that contains characters\n     * OTHER than following characters:\n     *<ul>\n     * <li>Lower- or upper-case ASCII letter (a to z, A to Z)\n     *   </li>\n     * <li>Digit (0 to 9) in position OTHER than the first characters\n     *   </li>\n     * <li>Underscore\n     *   </li>\n     * <li>Hyphen ({@code -}) in position OTHER than the first character\n     *   </li>\n     * <li>Colon (only  exposed if underlying parser is in non-namespace-aware mode)\n     *   </li>\n     * </ul>\n     * with a base64-encoded version. Here the\n     * <a href=""https://datatracker.ietf.org/doc/html/rfc4648#section-5"">base64url</a>\n     * encoder and decoders are used. The {@code =} padding characters are\n     * always omitted.\n     * <p>\n     * With this processor set, a map with the keys {@code ""123""} and\n     * {@code ""$ I am <fancy>! &;""} will be written as:\n     *\n     * <pre>{@code\n     * <DTO>\n     *     <badMap>\n     *         <base64_tag_JCBJIGFtIDxmYW5jeT4hICY7>xyz</base64_tag_JCBJIGFtIDxmYW5jeT4hICY7>\n     *         <base64_tag_MTIz>bar</base64_tag_MTIz>\n     *     </badMap>\n     * </DTO>\n     * }</pre>\n     *<p>\n     * NOTE: you must ensure that no incoming element or attribute name starts\n     * with {@code prefix}, otherwise decoding will not work.\n     *\n     * @param prefix The prefix to use for name that are escaped\n     *\n     * @since 2.14",public static XmlNameProcessor newBase64Processor(String prefix) {\n    return new Base64NameProcessor(prefix);\n},com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newBase64Processor(java.lang.String),"digraph cfg_newBase64Processor {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor""];\n	""2"" [label=""prefix := @parameter0: java.lang.String""];\n	""3"" [label=""return $stack1""];\n	""4"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: void <init>(java.lang.String)>(prefix)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newBase64Processor(),Method,"* Convenience method\n     * equivalent to calling {@link #newBase64Processor(String)} with {@code ""base64_tag_""}\n     *\n     * @since 2.14","public static XmlNameProcessor newBase64Processor() {\n    return newBase64Processor(""base64_tag_"");\n}",com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newBase64Processor(),"digraph cfg_newBase64Processor {\n	""1"" [label=""$stack0 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newBase64Processor(java.lang.String)>(\""base64_tag_\"")""];\n	""2"" [label=""return $stack0""];\n	""1"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.newAlwaysOnBase64Processor(),Method,"* Similar to {@link #newBase64Processor(String)}, however, names will\n     * <b>always</b> be escaped with base64. No magic prefix is required\n     * for this case, since adding one would be redundant because all names\n     * will be base64 encoded.",public static XmlNameProcessor newAlwaysOnBase64Processor() {\n    return new AlwaysOnBase64NameProcessor();\n},com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newAlwaysOnBase64Processor(),"digraph cfg_newAlwaysOnBase64Processor {\n	""1"" [label=""$stack0 = new com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor""];\n	""2"" [label=""return $stack0""];\n	""3"" [label=""specialinvoke $stack0.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor: void <init>()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors.<init>(),Constructor,No Comment,private XmlNameProcessors() {\n    // Nothing to do here; just to prevent instantiation\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor.encodeName(XmlName),Method,No Comment,@Override\npublic void encodeName(XmlName name) {\n},void encodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_encodeName {\n	""1"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor.decodeName(XmlName),Method,No Comment,@Override\npublic void decodeName(XmlName name) {\n},void decodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_decodeName {\n	""1"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor.<init>(),Constructor,No Comment,public PassthroughProcessor() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$PassthroughProcessor""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor.encodeName(XmlName),Method,No Comment,@Override\npublic void encodeName(XmlName name) {\n    String newLocalPart = name.localPart;\n    newLocalPart = BEGIN_MATCHER.matcher(newLocalPart).replaceAll(_replacement);\n    name.localPart = MAIN_MATCHER.matcher(newLocalPart).replaceAll(_replacement);\n},void encodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_encodeName {\n	""1"" [label=""$stack3 = <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor: java.util.regex.Pattern BEGIN_MATCHER>""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor: java.lang.String _replacement>""];\n	""3"" [label=""$stack5 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(newLocalPart)""];\n	""4"" [label=""$stack6 = <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor: java.util.regex.Pattern MAIN_MATCHER>""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor: java.lang.String _replacement>""];\n	""6"" [label=""$stack8 = virtualinvoke $stack6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(newLocalPart)""];\n	""7"" [label=""$stack9 = virtualinvoke $stack8.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack7)""];\n	""8"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""9"" [label=""name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = $stack9""];\n	""10"" [label=""newLocalPart = name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""11"" [label=""newLocalPart = virtualinvoke $stack5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack4)""];\n	""12"" [label=""return""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor.decodeName(XmlName),Method,No Comment,@Override\npublic void decodeName(XmlName name) {\n    // One-way transformation; cannot decode\n},void decodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_decodeName {\n	""1"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor.<init>(String),Constructor,No Comment,public ReplaceNameProcessor(String replacement) {\n    _replacement = replacement;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""replacement := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$ReplaceNameProcessor: java.lang.String _replacement> = replacement""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor.encodeName(XmlName),Method,No Comment,"@Override\npublic void encodeName(XmlName name) {\n    if (!VALID_XML_NAME.matcher(name.localPart).matches()) {\n        name.localPart = _prefix + new String(BASE64_ENCODER.encode(name.localPart.getBytes(UTF_8)), UTF_8);\n    }\n}",void encodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_encodeName {\n	""1"" [label=""$stack10 = <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: java.util.Base64$Encoder BASE64_ENCODER>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($stack8)""];\n	""3"" [label=""$stack12 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack10.<java.util.Base64$Encoder: byte[] encode(byte[])>($stack11)""];\n	""5"" [label=""$stack14 = new java.lang.String""];\n	""6"" [label=""$stack15 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""7"" [label=""$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""9"" [label=""$stack2 = name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""10"" [label=""$stack3 = <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: java.util.regex.Pattern VALID_XML_NAME>""];\n	""11"" [label=""$stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack2)""];\n	""12"" [label=""$stack5 = virtualinvoke $stack4.<java.util.regex.Matcher: boolean matches()>()""];\n	""13"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""14"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: java.lang.String _prefix>""];\n	""15"" [label=""$stack8 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>""];\n	""16"" [label=""$stack9 = name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""17"" [label=""if $stack5 != 0""];\n	""18"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""19"" [label=""name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = $stack17""];\n	""20"" [label=""return""];\n	""21"" [label=""specialinvoke $stack14.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($stack13, $stack12)""];\n	""22"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_false""];\n	""17"" -> ""20""[label=""cfg_true""];\n	""18"" -> ""10""[label=""cfg_next""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""21"" -> ""7""[label=""cfg_next""];\n	""22"" -> ""14""[label=""cfg_next""];\n	""23"" -> ""18""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor.decodeName(XmlName),Method,No Comment,"@Override\npublic void decodeName(XmlName name) {\n    if (name.localPart.startsWith(_prefix)) {\n        String localName = name.localPart;\n        localName = localName.substring(_prefix.length());\n        name.localPart = new String(BASE64_DECODER.decode(localName), UTF_8);\n    }\n}",void decodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_decodeName {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(localName)""];\n	""2"" [label=""$stack11 = new java.lang.String""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: java.lang.String _prefix>""];\n	""4"" [label=""$stack4 = name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.String: boolean startsWith(java.lang.String)>($stack3)""];\n	""6"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: java.lang.String _prefix>""];\n	""7"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.String: int length()>()""];\n	""8"" [label=""$stack8 = <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: java.util.Base64$Decoder BASE64_DECODER>""];\n	""9"" [label=""$stack9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>""];\n	""10"" [label=""if $stack5 == 0""];\n	""11"" [label=""localName = name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""12"" [label=""localName = virtualinvoke localName.<java.lang.String: java.lang.String substring(int)>($stack7)""];\n	""13"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""14"" [label=""name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = $stack11""];\n	""15"" [label=""return""];\n	""16"" [label=""specialinvoke $stack11.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($stack10, $stack9)""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_false""];\n	""10"" -> ""15""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor.<init>(String),Constructor,No Comment,public Base64NameProcessor(String prefix) {\n    _prefix = prefix;\n},void <init>(java.lang.String),"digraph cfg_init {\n	""1"" [label=""prefix := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$Base64NameProcessor: java.lang.String _prefix> = prefix""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor.encodeName(XmlName),Method,No Comment,"@Override\npublic void encodeName(XmlName name) {\n    name.localPart = new String(BASE64_ENCODER.encode(name.localPart.getBytes(UTF_8)), UTF_8);\n}",void encodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_encodeName {\n	""1"" [label=""$stack2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>""];\n	""2"" [label=""$stack3 = name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""3"" [label=""$stack4 = <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor: java.util.Base64$Encoder BASE64_ENCODER>""];\n	""4"" [label=""$stack5 = virtualinvoke $stack3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($stack2)""];\n	""5"" [label=""$stack6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>""];\n	""6"" [label=""$stack7 = virtualinvoke $stack4.<java.util.Base64$Encoder: byte[] encode(byte[])>($stack5)""];\n	""7"" [label=""$stack8 = new java.lang.String""];\n	""8"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""9"" [label=""name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = $stack8""];\n	""10"" [label=""return""];\n	""11"" [label=""specialinvoke $stack8.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($stack7, $stack6)""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor.decodeName(XmlName),Method,No Comment,"@Override\npublic void decodeName(XmlName name) {\n    name.localPart = new String(BASE64_DECODER.decode(name.localPart), UTF_8);\n}",void decodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName),"digraph cfg_decodeName {\n	""1"" [label=""$stack2 = name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""2"" [label=""$stack3 = <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor: java.util.Base64$Decoder BASE64_DECODER>""];\n	""3"" [label=""$stack4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>""];\n	""4"" [label=""$stack5 = virtualinvoke $stack3.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>($stack2)""];\n	""5"" [label=""$stack6 = new java.lang.String""];\n	""6"" [label=""name := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""7"" [label=""name.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = $stack6""];\n	""8"" [label=""return""];\n	""9"" [label=""specialinvoke $stack6.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($stack5, $stack4)""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor.<init>(),Constructor,No Comment,public AlwaysOnBase64NameProcessor() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<java.lang.Object: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlNameProcessors$AlwaysOnBase64NameProcessor""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.builder(),Method,No Comment,public static XmlFactoryBuilder builder() {\n    return new XmlFactoryBuilder();\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder builder(),"digraph cfg_builder {\n	""1"" [label=""$stack0 = new com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""2"" [label=""return $stack0""];\n	""3"" [label=""specialinvoke $stack0.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: void <init>()>()""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlFactory.rebuild(),Method,No Comment,@Override\npublic XmlFactoryBuilder rebuild() {\n    return new XmlFactoryBuilder(this);\n},com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder rebuild(),"digraph cfg_rebuild {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory)>(this)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._initFactories(XMLInputFactory,XMLOutputFactory)",Method,No Comment,"protected void _initFactories(XMLInputFactory xmlIn, XMLOutputFactory xmlOut) {\n    // [dataformat-xml#326]: Better ensure namespaces get built properly, so:\n    xmlOut.setProperty(XMLOutputFactory.IS_REPAIRING_NAMESPACES, Boolean.TRUE);\n    // and for parser, force coalescing as well (much simpler to use)\n    xmlIn.setProperty(XMLInputFactory.IS_COALESCING, Boolean.TRUE);\n}","void _initFactories(javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)","digraph cfg__initFactories {\n	""1"" [label=""$stack3 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""2"" [label=""$stack4 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""5"" [label=""virtualinvoke xmlIn.<javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.isCoalescing\"", $stack4)""];\n	""6"" [label=""virtualinvoke xmlOut.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.isRepairingNamespaces\"", $stack3)""];\n	""7"" [label=""xmlIn := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""8"" [label=""xmlOut := @parameter1: javax.xml.stream.XMLOutputFactory""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactory.copy(),Method,"* Note: compared to base implementation by {@link JsonFactory},\n     * here the copy will actually share underlying XML input and\n     * output factories, as there is no way to make copies of those.","@Override\npublic XmlFactory copy() {\n    _checkInvalidCopy(XmlFactory.class);\n    return new XmlFactory(this, null);\n}",com.fasterxml.jackson.dataformat.xml.XmlFactory copy(),"digraph cfg_copy {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.core.ObjectCodec)>(this, null)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""5"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void _checkInvalidCopy(java.lang.Class)>(class \""Lcom/fasterxml/jackson/dataformat/xml/XmlFactory;\"")""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.version(),Method,No Comment,@Override\npublic Version version() {\n    return PackageVersion.VERSION;\n},com.fasterxml.jackson.core.Version version(),"digraph cfg_version {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.PackageVersion: com.fasterxml.jackson.core.Version VERSION>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.readResolve(),Method,* Method that we need to override to actually make restoration go\n     * through constructors etc.,"// since JsonFactory already implemented it\n@Override\nprotected Object readResolve() {\n    if (_jdkXmlInFactory == null) {\n        throw new IllegalStateException(""No XMLInputFactory class name read during JDK deserialization"");\n    }\n    if (_jdkXmlOutFactory == null) {\n        throw new IllegalStateException(""No XMLOutputFactory class name read during JDK deserialization"");\n    }\n    final XMLInputFactory inf;\n    XMLOutputFactory outf;\n    try {\n        inf = (XMLInputFactory) Class.forName(_jdkXmlInFactory).getDeclaredConstructor().newInstance();\n        outf = (XMLOutputFactory) Class.forName(_jdkXmlOutFactory).getDeclaredConstructor().newInstance();\n    } catch (Exception e) {\n        throw new IllegalArgumentException(e);\n    }\n    return new XmlFactory(_objectCodec, _xmlParserFeatures, _xmlGeneratorFeatures, inf, outf, _cfgNameForTextElement);\n}",java.lang.Object readResolve(),"digraph cfg_readResolve {\n	""1"" [label=""$stack10 = virtualinvoke $stack8.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($stack7)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack9)""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _jdkXmlOutFactory>""];\n	""4"" [label=""$stack13 = newarray (java.lang.Class)[0]""];\n	""5"" [label=""$stack14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($stack12)""];\n	""6"" [label=""$stack15 = newarray (java.lang.Object)[0]""];\n	""7"" [label=""$stack16 = virtualinvoke $stack14.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>($stack13)""];\n	""8"" [label=""$stack17 = virtualinvoke $stack16.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack15)""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""13"" [label=""$stack22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""14"" [label=""$stack23 = new java.lang.IllegalStateException""];\n	""15"" [label=""$stack24 = new java.lang.IllegalStateException""];\n	""16"" [label=""$stack25 := @caughtexception""];\n	""17"" [label=""$stack26 = new java.lang.IllegalArgumentException""];\n	""18"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _jdkXmlInFactory>""];\n	""19"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _jdkXmlOutFactory>""];\n	""20"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _jdkXmlInFactory>""];\n	""21"" [label=""$stack7 = newarray (java.lang.Class)[0]""];\n	""22"" [label=""$stack8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($stack6)""];\n	""23"" [label=""$stack9 = newarray (java.lang.Object)[0]""];\n	""24"" [label=""e = $stack25""];\n	""25"" [label=""goto""];\n	""26"" [label=""if $stack4 != null""];\n	""27"" [label=""if $stack5 != null""];\n	""28"" [label=""inf = (javax.xml.stream.XMLInputFactory) $stack11""];\n	""29"" [label=""outf = (javax.xml.stream.XMLOutputFactory) $stack17""];\n	""30"" [label=""return $stack22""];\n	""31"" [label=""specialinvoke $stack22.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec,int,int,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory,java.lang.String)>($stack21, $stack20, $stack19, inf, outf, $stack18)""];\n	""32"" [label=""specialinvoke $stack23.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\""No XMLOutputFactory class name read during JDK deserialization\"")""];\n	""33"" [label=""specialinvoke $stack24.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\""No XMLInputFactory class name read during JDK deserialization\"")""];\n	""34"" [label=""specialinvoke $stack26.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(e)""];\n	""35"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""36"" [label=""throw $stack23""];\n	""37"" [label=""throw $stack24""];\n	""38"" [label=""throw $stack26""];\n	""1"" -> ""16""[label=""cfg_except""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""32""[label=""cfg_next""];\n	""15"" -> ""33""[label=""cfg_next""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""34""[label=""cfg_next""];\n	""18"" -> ""26""[label=""cfg_next""];\n	""19"" -> ""27""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_except""];\n	""2"" -> ""28""[label=""cfg_next""];\n	""20"" -> ""16""[label=""cfg_except""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""16""[label=""cfg_except""];\n	""22"" -> ""16""[label=""cfg_except""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""16""[label=""cfg_except""];\n	""23"" -> ""2""[label=""cfg_next""];\n	""24"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""13""[label=""cfg_goto""];\n	""26"" -> ""15""[label=""cfg_false""];\n	""26"" -> ""19""[label=""cfg_true""];\n	""27"" -> ""14""[label=""cfg_false""];\n	""27"" -> ""20""[label=""cfg_true""];\n	""28"" -> ""16""[label=""cfg_except""];\n	""28"" -> ""3""[label=""cfg_next""];\n	""29"" -> ""16""[label=""cfg_except""];\n	""29"" -> ""25""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_except""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""31"" -> ""30""[label=""cfg_next""];\n	""32"" -> ""36""[label=""cfg_next""];\n	""33"" -> ""37""[label=""cfg_next""];\n	""34"" -> ""38""[label=""cfg_next""];\n	""35"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_except""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_except""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_except""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""16""[label=""cfg_except""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_except""];\n	""8"" -> ""29""[label=""cfg_next""];\n	""9"" -> ""31""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactory.readObject(ObjectInputStream),Method,"* In addition to default serialization, which mostly works, need\n     * to handle case of XML factories, hence override.","private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException {\n    in.defaultReadObject();\n    _jdkXmlInFactory = in.readUTF();\n    _jdkXmlOutFactory = in.readUTF();\n}",void readObject(java.io.ObjectInputStream),"digraph cfg_readObject {\n	""1"" [label=""$stack2 = virtualinvoke in.<java.io.ObjectInputStream: java.lang.String readUTF()>()""];\n	""2"" [label=""$stack3 = virtualinvoke in.<java.io.ObjectInputStream: java.lang.String readUTF()>()""];\n	""3"" [label=""in := @parameter0: java.io.ObjectInputStream""];\n	""4"" [label=""return""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _jdkXmlInFactory> = $stack2""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _jdkXmlOutFactory> = $stack3""];\n	""8"" [label=""virtualinvoke in.<java.io.ObjectInputStream: void defaultReadObject()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.XmlFactory.writeObject(ObjectOutputStream),Method,"* In addition to default serialization, which mostly works, need\n     * to handle case of XML factories, hence override.",private void writeObject(ObjectOutputStream out) throws IOException {\n    out.defaultWriteObject();\n    out.writeUTF(_xmlInputFactory.getClass().getName());\n    out.writeUTF(_xmlOutputFactory.getClass().getName());\n},void writeObject(java.io.ObjectOutputStream),"digraph cfg_writeObject {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>()""];\n	""4"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""5"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.Object: java.lang.Class getClass()>()""];\n	""6"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.Class: java.lang.String getName()>()""];\n	""7"" [label=""out := @parameter0: java.io.ObjectOutputStream""];\n	""8"" [label=""return""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""10"" [label=""virtualinvoke out.<java.io.ObjectOutputStream: void defaultWriteObject()>()""];\n	""11"" [label=""virtualinvoke out.<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>($stack4)""];\n	""12"" [label=""virtualinvoke out.<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>($stack7)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.XmlFactory.setXMLTextElementName(String),Method,* @since 2.1,public void setXMLTextElementName(String name) {\n    _cfgNameForTextElement = name;\n},void setXMLTextElementName(java.lang.String),"digraph cfg_setXMLTextElementName {\n	""1"" [label=""name := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getXMLTextElementName(),Method,* @since 2.2,public String getXMLTextElementName() {\n    return _cfgNameForTextElement;\n},java.lang.String getXMLTextElementName(),"digraph cfg_getXMLTextElementName {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatParserFeatures(),Method,No Comment,@Override\npublic int getFormatParserFeatures() {\n    return _xmlParserFeatures;\n},int getFormatParserFeatures(),"digraph cfg_getFormatParserFeatures {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatGeneratorFeatures(),Method,No Comment,@Override\npublic int getFormatGeneratorFeatures() {\n    return _xmlGeneratorFeatures;\n},int getFormatGeneratorFeatures(),"digraph cfg_getFormatGeneratorFeatures {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getXmlNameProcessor(),Method,No Comment,public XmlNameProcessor getXmlNameProcessor() {\n    return _nameProcessor;\n},com.fasterxml.jackson.dataformat.xml.XmlNameProcessor getXmlNameProcessor(),"digraph cfg_getXmlNameProcessor {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.setXmlNameProcessor(XmlNameProcessor),Method,No Comment,public void setXmlNameProcessor(XmlNameProcessor processor) {\n    _nameProcessor = processor;\n},void setXmlNameProcessor(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor),"digraph cfg_setXmlNameProcessor {\n	""1"" [label=""processor := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = processor""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getXMLInputFactory(),Method,@since 2.4,public XMLInputFactory getXMLInputFactory() {\n    return _xmlInputFactory;\n},javax.xml.stream.XMLInputFactory getXMLInputFactory(),"digraph cfg_getXMLInputFactory {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.setXMLInputFactory(XMLInputFactory),Method,"* @deprecated Since 2.12 -- should be set as part of build process\n     *   (either in builder, or constructor)",@Deprecated\npublic void setXMLInputFactory(XMLInputFactory f) {\n    _xmlInputFactory = f;\n},void setXMLInputFactory(javax.xml.stream.XMLInputFactory),"digraph cfg_setXMLInputFactory {\n	""1"" [label=""f := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory> = f""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getXMLOutputFactory(),Method,@since 2.4,public XMLOutputFactory getXMLOutputFactory() {\n    return _xmlOutputFactory;\n},javax.xml.stream.XMLOutputFactory getXMLOutputFactory(),"digraph cfg_getXMLOutputFactory {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.setXMLOutputFactory(XMLOutputFactory),Method,"* @deprecated Since 2.12 -- should be set as part of build process\n     *   (either in builder, or constructor)",@Deprecated\npublic void setXMLOutputFactory(XMLOutputFactory f) {\n    _xmlOutputFactory = f;\n},void setXMLOutputFactory(javax.xml.stream.XMLOutputFactory),"digraph cfg_setXMLOutputFactory {\n	""1"" [label=""f := @parameter0: javax.xml.stream.XMLOutputFactory""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory> = f""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatName(),Method,* Method that returns short textual id identifying format\n     * this factory supports.\n     *<p>\n     * Note: sub-classes should override this method; default\n     * implementation will return null for all sub-classes,@Override\npublic String getFormatName() {\n    return FORMAT_NAME_XML;\n},java.lang.String getFormatName(),"digraph cfg_getFormatName {\n	""1"" [label=""return \""XML\""""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.hasFormat(InputAccessor),Method,No Comment,@Override\npublic MatchStrength hasFormat(InputAccessor acc) throws IOException {\n    return hasXMLFormat(acc);\n},com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor),"digraph cfg_hasFormat {\n	""1"" [label=""$stack2 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.format.MatchStrength hasXMLFormat(com.fasterxml.jackson.core.format.InputAccessor)>(acc)""];\n	""2"" [label=""acc := @parameter0: com.fasterxml.jackson.core.format.InputAccessor""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.requiresCustomCodec(),Method,"* XML format does require support from custom {@link ObjectCodec}\n     * (that is, {@link XmlMapper}), so need to return true here.\n     * \n     * @return True since XML format does require support from codec",@Override\npublic boolean requiresCustomCodec() {\n    return true;\n},boolean requiresCustomCodec(),"digraph cfg_requiresCustomCodec {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.canUseCharArrays(),Method,"* As of 2.4, we do have actual capability for passing char arrays\n     * efficiently, but unfortunately\n     * have no working mechanism for recycling buffers. So we have to \n     * admit that can not make efficient use.",@Override\npublic boolean canUseCharArrays() {\n    return false;\n},boolean canUseCharArrays(),"digraph cfg_canUseCharArrays {\n	""1"" [label=""return 0""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatReadFeatureType(),Method,No Comment,// since 2.6\n@Override\npublic Class<FromXmlParser.Feature> getFormatReadFeatureType() {\n    return FromXmlParser.Feature.class;\n},java.lang.Class getFormatReadFeatureType(),"digraph cfg_getFormatReadFeatureType {\n	""1"" [label=""return class \""Lcom/fasterxml/jackson/dataformat/xml/deser/FromXmlParser$Feature;\""""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.getFormatWriteFeatureType(),Method,No Comment,// since 2.6\n@Override\npublic Class<ToXmlGenerator.Feature> getFormatWriteFeatureType() {\n    return ToXmlGenerator.Feature.class;\n},java.lang.Class getFormatWriteFeatureType(),"digraph cfg_getFormatWriteFeatureType {\n	""1"" [label=""return class \""Lcom/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator$Feature;\""""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.createParser(String),Method,"* Overridden just to prevent trying to optimize access via char array;\n     * while nice idea, problem is that we don't have proper hooks to ensure\n     * that temporary buffer gets recycled; so let's just use StringReader.","@SuppressWarnings(""resource"")\n@Override\npublic JsonParser createParser(String content) throws IOException {\n    Reader r = new StringReader(content);\n    IOContext ctxt = _createContext(_createContentReference(r), true);\n    if (_inputDecorator != null) {\n        r = _inputDecorator.decorate(ctxt, r);\n    }\n    return _createParser(r, ctxt);\n}",com.fasterxml.jackson.core.JsonParser createParser(java.lang.String),"digraph cfg_createParser {\n	""1"" [label=""$stack4 = new java.io.StringReader""];\n	""2"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(r)""];\n	""3"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>""];\n	""4"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>(r, ctxt)""];\n	""5"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>""];\n	""6"" [label=""content := @parameter0: java.lang.String""];\n	""7"" [label=""ctxt = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>($stack5, 1)""];\n	""8"" [label=""if $stack6 == null""];\n	""9"" [label=""r = $stack4""];\n	""10"" [label=""r = virtualinvoke $stack8.<com.fasterxml.jackson.core.io.InputDecorator: java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader)>(ctxt, r)""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""specialinvoke $stack4.<java.io.StringReader: void <init>(java.lang.String)>(content)""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(OutputStream),Method,No Comment,"@Override\npublic ToXmlGenerator createGenerator(OutputStream out) throws IOException {\n    return createGenerator(out, JsonEncoding.UTF8);\n}",com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(java.io.OutputStream),"digraph cfg_createGenerator {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(out, $stack2)""];\n	""3"" [label=""out := @parameter0: java.io.OutputStream""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(OutputStream,JsonEncoding)",Method,No Comment,"@Override\npublic ToXmlGenerator createGenerator(OutputStream out, JsonEncoding enc) throws IOException {\n    // false -> we won't manage the stream unless explicitly directed to\n    final IOContext ctxt = _createContext(_createContentReference(out), false);\n    ctxt.setEncoding(enc);\n    return new ToXmlGenerator(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, _createXmlWriter(ctxt, out), _nameProcessor);\n}","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)","digraph cfg_createGenerator {\n	""1"" [label=""$stack10 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(out)""];\n	""3"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _generatorFeatures>""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""6"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""7"" [label=""$stack9 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _createXmlWriter(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(ctxt, out)""];\n	""8"" [label=""ctxt = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>($stack4, 0)""];\n	""9"" [label=""enc := @parameter1: com.fasterxml.jackson.core.JsonEncoding""];\n	""10"" [label=""out := @parameter0: java.io.OutputStream""];\n	""11"" [label=""return $stack10""];\n	""12"" [label=""specialinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack5, $stack6, $stack7, $stack9, $stack8)""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""14"" [label=""virtualinvoke ctxt.<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>(enc)""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(Writer),Method,No Comment,"@Override\npublic ToXmlGenerator createGenerator(Writer out) throws IOException {\n    final IOContext ctxt = _createContext(_createContentReference(out), false);\n    return new ToXmlGenerator(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, _createXmlWriter(ctxt, out), _nameProcessor);\n}",com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(java.io.Writer),"digraph cfg_createGenerator {\n	""1"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(out)""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _generatorFeatures>""];\n	""3"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""6"" [label=""$stack8 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _createXmlWriter(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)>(ctxt, out)""];\n	""7"" [label=""$stack9 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""8"" [label=""ctxt = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>($stack3, 0)""];\n	""9"" [label=""out := @parameter0: java.io.Writer""];\n	""10"" [label=""return $stack9""];\n	""11"" [label=""specialinvoke $stack9.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack4, $stack5, $stack6, $stack8, $stack7)""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(File,JsonEncoding)",Method,No Comment,"@SuppressWarnings(""resource"")\n@Override\npublic ToXmlGenerator createGenerator(File f, JsonEncoding enc) throws IOException {\n    OutputStream out = new FileOutputStream(f);\n    // true -> yes, we have to manage the stream since we created it\n    final IOContext ctxt = _createContext(_createContentReference(out), true);\n    ctxt.setEncoding(enc);\n    return new ToXmlGenerator(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, _createXmlWriter(ctxt, out), _nameProcessor);\n}","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)","digraph cfg_createGenerator {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""2"" [label=""$stack11 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _createXmlWriter(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(ctxt, out)""];\n	""3"" [label=""$stack12 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""$stack5 = new java.io.FileOutputStream""];\n	""5"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(out)""];\n	""6"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _generatorFeatures>""];\n	""7"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""8"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""9"" [label=""ctxt = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>($stack6, 1)""];\n	""10"" [label=""enc := @parameter1: com.fasterxml.jackson.core.JsonEncoding""];\n	""11"" [label=""f := @parameter0: java.io.File""];\n	""12"" [label=""out = $stack5""];\n	""13"" [label=""return $stack12""];\n	""14"" [label=""specialinvoke $stack12.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack7, $stack8, $stack9, $stack11, $stack10)""];\n	""15"" [label=""specialinvoke $stack5.<java.io.FileOutputStream: void <init>(java.io.File)>(f)""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""17"" [label=""virtualinvoke ctxt.<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>(enc)""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""17"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.createParser(XMLStreamReader),Method,"* Factory method that wraps given {@link XMLStreamReader}, usually to allow\n     * partial data-binding.\n     * \n     * @since 2.4","public FromXmlParser createParser(XMLStreamReader sr) throws IOException {\n    // note: should NOT move parser if already pointing to START_ELEMENT\n    if (sr.getEventType() != XMLStreamConstants.START_ELEMENT) {\n        sr = _initializeXmlReader(sr);\n    }\n    // false -> not managed\n    FromXmlParser xp = new FromXmlParser(_createContext(_createContentReference(sr), false), _parserFeatures, _xmlParserFeatures, _objectCodec, sr, _nameProcessor);\n    if (_cfgNameForTextElement != null) {\n        xp.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    return xp;\n}",com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser createParser(javax.xml.stream.XMLStreamReader),"digraph cfg_createParser {\n	""1"" [label=""$stack10 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""4"" [label=""$stack3 = interfaceinvoke sr.<javax.xml.stream.XMLStreamReader: int getEventType()>()""];\n	""5"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(sr)""];\n	""6"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""7"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""8"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""9"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _parserFeatures>""];\n	""10"" [label=""$stack9 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>($stack4, 0)""];\n	""11"" [label=""if $stack11 == null""];\n	""12"" [label=""if $stack3 == 1""];\n	""13"" [label=""return xp""];\n	""14"" [label=""specialinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>($stack9, $stack8, $stack7, $stack6, sr, $stack5)""];\n	""15"" [label=""sr := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""16"" [label=""sr = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader)>(sr)""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""18"" [label=""virtualinvoke xp.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void setXMLTextElementName(java.lang.String)>($stack12)""];\n	""19"" [label=""xp = $stack10""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_true""];\n	""11"" -> ""3""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_true""];\n	""12"" -> ""16""[label=""cfg_false""];\n	""14"" -> ""19""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.createGenerator(XMLStreamWriter),Method,"* Factory method that wraps given {@link XMLStreamWriter}, usually to allow\n     * incremental serialization to compose large output by serializing a sequence\n     * of individual objects.\n     *\n     * @since 2.4","public ToXmlGenerator createGenerator(XMLStreamWriter sw) throws IOException {\n    sw = _initializeXmlWriter(sw);\n    IOContext ctxt = _createContext(_createContentReference(sw), false);\n    return new ToXmlGenerator(ctxt, _generatorFeatures, _xmlGeneratorFeatures, _objectCodec, sw, _nameProcessor);\n}",com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter),"digraph cfg_createGenerator {\n	""1"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(sw)""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""3"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _generatorFeatures>""];\n	""6"" [label=""$stack8 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""7"" [label=""ctxt = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>($stack3, 0)""];\n	""8"" [label=""return $stack8""];\n	""9"" [label=""specialinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack7, $stack6, $stack5, sw, $stack4)""];\n	""10"" [label=""sw := @parameter0: javax.xml.stream.XMLStreamWriter""];\n	""11"" [label=""sw = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw)""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(InputStream,IOContext)",Method,No Comment,"@Override\nprotected FromXmlParser _createParser(InputStream in, IOContext ctxt) throws IOException {\n    XMLStreamReader sr;\n    try {\n        sr = _xmlInputFactory.createXMLStreamReader(in);\n    } catch (XMLStreamException e) {\n        return StaxUtil.throwAsParseException(e, null);\n    }\n    sr = _initializeXmlReader(sr);\n    FromXmlParser xp = new FromXmlParser(ctxt, _parserFeatures, _xmlParserFeatures, _objectCodec, sr, _nameProcessor);\n    if (_cfgNameForTextElement != null) {\n        xp.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    return xp;\n}","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)","digraph cfg__createParser {\n	""1"" [label=""$stack10 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""4"" [label=""$stack13 := @caughtexception""];\n	""5"" [label=""$stack14 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, null)""];\n	""6"" [label=""$stack15 = (com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) $stack14""];\n	""7"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""8"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""9"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""10"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""11"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _parserFeatures>""];\n	""12"" [label=""ctxt := @parameter1: com.fasterxml.jackson.core.io.IOContext""];\n	""13"" [label=""e = $stack10""];\n	""14"" [label=""e = $stack13""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack11 == null""];\n	""17"" [label=""in := @parameter0: java.io.InputStream""];\n	""18"" [label=""return $stack15""];\n	""19"" [label=""return e""];\n	""20"" [label=""specialinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack9, $stack8, $stack7, sr, $stack6)""];\n	""21"" [label=""sr = virtualinvoke $stack5.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(in)""];\n	""22"" [label=""sr = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader)>(sr)""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""24"" [label=""virtualinvoke e.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void setXMLTextElementName(java.lang.String)>($stack12)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""22""[label=""cfg_goto""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""21"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""4""[label=""cfg_except""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_except""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(Reader,IOContext)",Method,No Comment,"@Override\nprotected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException {\n    XMLStreamReader sr;\n    try {\n        sr = _xmlInputFactory.createXMLStreamReader(r);\n    } catch (XMLStreamException e) {\n        return StaxUtil.throwAsParseException(e, null);\n    }\n    sr = _initializeXmlReader(sr);\n    FromXmlParser xp = new FromXmlParser(ctxt, _parserFeatures, _xmlParserFeatures, _objectCodec, sr, _nameProcessor);\n    if (_cfgNameForTextElement != null) {\n        xp.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    return xp;\n}","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)","digraph cfg__createParser {\n	""1"" [label=""$stack10 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""4"" [label=""$stack13 := @caughtexception""];\n	""5"" [label=""$stack14 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, null)""];\n	""6"" [label=""$stack15 = (com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) $stack14""];\n	""7"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""8"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""9"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""10"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""11"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _parserFeatures>""];\n	""12"" [label=""ctxt := @parameter1: com.fasterxml.jackson.core.io.IOContext""];\n	""13"" [label=""e = $stack10""];\n	""14"" [label=""e = $stack13""];\n	""15"" [label=""goto""];\n	""16"" [label=""if $stack11 == null""];\n	""17"" [label=""r := @parameter0: java.io.Reader""];\n	""18"" [label=""return $stack15""];\n	""19"" [label=""return e""];\n	""20"" [label=""specialinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack9, $stack8, $stack7, sr, $stack6)""];\n	""21"" [label=""sr = virtualinvoke $stack5.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>(r)""];\n	""22"" [label=""sr = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader)>(sr)""];\n	""23"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""24"" [label=""virtualinvoke e.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void setXMLTextElementName(java.lang.String)>($stack12)""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""22""[label=""cfg_goto""];\n	""16"" -> ""19""[label=""cfg_true""];\n	""16"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""21"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""4""[label=""cfg_except""];\n	""22"" -> ""1""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_next""];\n	""24"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_except""];\n	""8"" -> ""20""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(char[],int,int,IOContext,boolean)",Method,No Comment,"@Override\nprotected FromXmlParser _createParser(char[] data, int offset, int len, IOContext ctxt, boolean recycleBuffer) throws IOException {\n    // !!! TODO: add proper handling of 'recycleBuffer'; currently its handling\n    //    is always same as if 'false' was passed\n    XMLStreamReader sr;\n    try {\n        // 03-Jul-2021, tatu: [dataformat-xml#482] non-Stax2 impls unlikely to\n        //    support so avoid:\n        if (_xmlInputFactory instanceof XMLInputFactory2) {\n            sr = _xmlInputFactory.createXMLStreamReader(new Stax2CharArraySource(data, offset, len));\n        } else {\n            sr = _xmlInputFactory.createXMLStreamReader(new CharArrayReader(data, offset, len));\n        }\n    } catch (XMLStreamException e) {\n        return StaxUtil.throwAsParseException(e, null);\n    }\n    sr = _initializeXmlReader(sr);\n    FromXmlParser xp = new FromXmlParser(ctxt, _parserFeatures, _xmlParserFeatures, _objectCodec, sr, _nameProcessor);\n    if (_cfgNameForTextElement != null) {\n        xp.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    return xp;\n}","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean)","digraph cfg__createParser {\n	""1"" [label=""$stack10 = new java.io.CharArrayReader""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _parserFeatures>""];\n	""7"" [label=""$stack16 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""10"" [label=""$stack19 = new org.codehaus.stax2.io.Stax2CharArraySource""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""12"" [label=""$stack21 := @caughtexception""];\n	""13"" [label=""$stack22 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, null)""];\n	""14"" [label=""$stack23 = (com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) $stack22""];\n	""15"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""16"" [label=""$stack9 = $stack8 instanceof org.codehaus.stax2.XMLInputFactory2""];\n	""17"" [label=""ctxt := @parameter3: com.fasterxml.jackson.core.io.IOContext""];\n	""18"" [label=""data := @parameter0: char[]""];\n	""19"" [label=""e = $stack16""];\n	""20"" [label=""e = $stack21""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack17 == null""];\n	""24"" [label=""if $stack9 == 0""];\n	""25"" [label=""len := @parameter2: int""];\n	""26"" [label=""offset := @parameter1: int""];\n	""27"" [label=""recycleBuffer := @parameter4: boolean""];\n	""28"" [label=""return $stack23""];\n	""29"" [label=""return e""];\n	""30"" [label=""specialinvoke $stack10.<java.io.CharArrayReader: void <init>(char[],int,int)>(data, offset, len)""];\n	""31"" [label=""specialinvoke $stack16.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack15, $stack14, $stack13, sr, $stack12)""];\n	""32"" [label=""specialinvoke $stack19.<org.codehaus.stax2.io.Stax2CharArraySource: void <init>(char[],int,int)>(data, offset, len)""];\n	""33"" [label=""sr = virtualinvoke $stack11.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.Reader)>($stack10)""];\n	""34"" [label=""sr = virtualinvoke $stack20.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)>($stack19)""];\n	""35"" [label=""sr = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader)>(sr)""];\n	""36"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""37"" [label=""virtualinvoke e.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void setXMLTextElementName(java.lang.String)>($stack18)""];\n	""1"" -> ""12""[label=""cfg_except""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_except""];\n	""10"" -> ""32""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_except""];\n	""12"" -> ""20""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""28""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_except""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""12""[label=""cfg_except""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""27""[label=""cfg_next""];\n	""18"" -> ""26""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_except""];\n	""20"" -> ""13""[label=""cfg_next""];\n	""21"" -> ""12""[label=""cfg_except""];\n	""21"" -> ""22""[label=""cfg_goto""];\n	""22"" -> ""35""[label=""cfg_goto""];\n	""23"" -> ""29""[label=""cfg_true""];\n	""23"" -> ""9""[label=""cfg_false""];\n	""24"" -> ""11""[label=""cfg_false""];\n	""24"" -> ""12""[label=""cfg_except""];\n	""24"" -> ""2""[label=""cfg_true""];\n	""25"" -> ""17""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""31""[label=""cfg_next""];\n	""30"" -> ""12""[label=""cfg_except""];\n	""30"" -> ""33""[label=""cfg_next""];\n	""31"" -> ""19""[label=""cfg_next""];\n	""32"" -> ""12""[label=""cfg_except""];\n	""32"" -> ""34""[label=""cfg_next""];\n	""33"" -> ""12""[label=""cfg_except""];\n	""33"" -> ""22""[label=""cfg_next""];\n	""34"" -> ""12""[label=""cfg_except""];\n	""34"" -> ""21""[label=""cfg_next""];\n	""35"" -> ""7""[label=""cfg_next""];\n	""36"" -> ""18""[label=""cfg_next""];\n	""37"" -> ""29""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""23""[label=""cfg_next""];\n	""9"" -> ""37""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createParser(byte[],int,int,IOContext)",Method,No Comment,"@Override\nprotected FromXmlParser _createParser(byte[] data, int offset, int len, IOContext ctxt) throws IOException {\n    XMLStreamReader sr;\n    try {\n        // 03-Jul-2021, tatu: [dataformat-xml#482] non-Stax2 impls unlikely to\n        //    support so avoid:\n        if (_xmlInputFactory instanceof XMLInputFactory2) {\n            sr = _xmlInputFactory.createXMLStreamReader(new Stax2ByteArraySource(data, offset, len));\n        } else {\n            // 04-Dec-2023, tatu: As per [dataformat-xml#618], JDK's crappy in-built\n            //    Stax implementation barfs here. Hence:\n            try {\n                sr = _xmlInputFactory.createXMLStreamReader(new ByteArrayInputStream(data, offset, len));\n            } catch (ArrayIndexOutOfBoundsException e) {\n                throw new JsonParseException(null, ""Internal processing error by `XMLInputFactory` of type "" + ClassUtil.classNameOf(_xmlInputFactory) + "" when trying to create a parser ("" + ""consider using Woodstox instead): "" + e.getMessage());\n            }\n        }\n    } catch (XMLStreamException e) {\n        return StaxUtil.throwAsParseException(e, null);\n    }\n    sr = _initializeXmlReader(sr);\n    FromXmlParser xp = new FromXmlParser(ctxt, _parserFeatures, _xmlParserFeatures, _objectCodec, sr, _nameProcessor);\n    if (_cfgNameForTextElement != null) {\n        xp.setXMLTextElementName(_cfgNameForTextElement);\n    }\n    return xp;\n}","com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext)","digraph cfg__createParser {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _parserFeatures>""];\n	""6"" [label=""$stack15 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""9"" [label=""$stack18 = new org.codehaus.stax2.io.Stax2ByteArraySource""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""11"" [label=""$stack20 := @caughtexception""];\n	""12"" [label=""$stack21 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsParseException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonParser)>(e, null)""];\n	""13"" [label=""$stack22 = (com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser) $stack21""];\n	""14"" [label=""$stack23 := @caughtexception""];\n	""15"" [label=""$stack24 = new java.lang.StringBuilder""];\n	""16"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""17"" [label=""$stack26 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>($stack25)""];\n	""18"" [label=""$stack27 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Internal processing error by `XMLInputFactory` of type \"")""];\n	""19"" [label=""$stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26)""];\n	""20"" [label=""$stack29 = virtualinvoke e.<java.lang.ArrayIndexOutOfBoundsException: java.lang.String getMessage()>()""];\n	""21"" [label=""$stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" when trying to create a parser (consider using Woodstox instead): \"")""];\n	""22"" [label=""$stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29)""];\n	""23"" [label=""$stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""24"" [label=""$stack33 = new com.fasterxml.jackson.core.JsonParseException""];\n	""25"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""26"" [label=""$stack8 = $stack7 instanceof org.codehaus.stax2.XMLInputFactory2""];\n	""27"" [label=""$stack9 = new java.io.ByteArrayInputStream""];\n	""28"" [label=""ctxt := @parameter3: com.fasterxml.jackson.core.io.IOContext""];\n	""29"" [label=""data := @parameter0: byte[]""];\n	""30"" [label=""e = $stack15""];\n	""31"" [label=""e = $stack20""];\n	""32"" [label=""e = $stack23""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""if $stack16 == null""];\n	""37"" [label=""if $stack8 == 0""];\n	""38"" [label=""len := @parameter2: int""];\n	""39"" [label=""offset := @parameter1: int""];\n	""40"" [label=""return $stack22""];\n	""41"" [label=""return e""];\n	""42"" [label=""specialinvoke $stack15.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(ctxt, $stack14, $stack13, $stack12, sr, $stack11)""];\n	""43"" [label=""specialinvoke $stack18.<org.codehaus.stax2.io.Stax2ByteArraySource: void <init>(byte[],int,int)>(data, offset, len)""];\n	""44"" [label=""specialinvoke $stack24.<java.lang.StringBuilder: void <init>()>()""];\n	""45"" [label=""specialinvoke $stack33.<com.fasterxml.jackson.core.JsonParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String)>(null, $stack32)""];\n	""46"" [label=""specialinvoke $stack9.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(data, offset, len)""];\n	""47"" [label=""sr = virtualinvoke $stack10.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>($stack9)""];\n	""48"" [label=""sr = virtualinvoke $stack19.<javax.xml.stream.XMLInputFactory: javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)>($stack18)""];\n	""49"" [label=""sr = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader)>(sr)""];\n	""50"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""51"" [label=""throw $stack33""];\n	""52"" [label=""virtualinvoke e.<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser: void setXMLTextElementName(java.lang.String)>($stack17)""];\n	""1"" -> ""11""[label=""cfg_except""];\n	""1"" -> ""14""[label=""cfg_except""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_except""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""31""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""40""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_except""];\n	""14"" -> ""32""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_except""];\n	""15"" -> ""44""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_except""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""17"" -> ""11""[label=""cfg_except""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_except""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""11""[label=""cfg_except""];\n	""19"" -> ""21""[label=""cfg_next""];\n	""2"" -> ""42""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_except""];\n	""20"" -> ""22""[label=""cfg_next""];\n	""21"" -> ""11""[label=""cfg_except""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""11""[label=""cfg_except""];\n	""22"" -> ""23""[label=""cfg_next""];\n	""23"" -> ""11""[label=""cfg_except""];\n	""23"" -> ""45""[label=""cfg_next""];\n	""24"" -> ""11""[label=""cfg_except""];\n	""24"" -> ""15""[label=""cfg_next""];\n	""25"" -> ""11""[label=""cfg_except""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""11""[label=""cfg_except""];\n	""26"" -> ""37""[label=""cfg_next""];\n	""27"" -> ""11""[label=""cfg_except""];\n	""27"" -> ""14""[label=""cfg_except""];\n	""27"" -> ""46""[label=""cfg_next""];\n	""28"" -> ""25""[label=""cfg_next""];\n	""29"" -> ""39""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""7""[label=""cfg_next""];\n	""31"" -> ""12""[label=""cfg_next""];\n	""32"" -> ""11""[label=""cfg_except""];\n	""32"" -> ""24""[label=""cfg_next""];\n	""33"" -> ""11""[label=""cfg_except""];\n	""33"" -> ""34""[label=""cfg_goto""];\n	""34"" -> ""49""[label=""cfg_goto""];\n	""35"" -> ""11""[label=""cfg_except""];\n	""35"" -> ""34""[label=""cfg_goto""];\n	""36"" -> ""41""[label=""cfg_true""];\n	""36"" -> ""8""[label=""cfg_false""];\n	""37"" -> ""1""[label=""cfg_true""];\n	""37"" -> ""10""[label=""cfg_false""];\n	""37"" -> ""11""[label=""cfg_except""];\n	""38"" -> ""28""[label=""cfg_next""];\n	""39"" -> ""38""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""42"" -> ""30""[label=""cfg_next""];\n	""43"" -> ""11""[label=""cfg_except""];\n	""43"" -> ""48""[label=""cfg_next""];\n	""44"" -> ""11""[label=""cfg_except""];\n	""44"" -> ""18""[label=""cfg_next""];\n	""45"" -> ""11""[label=""cfg_except""];\n	""45"" -> ""51""[label=""cfg_next""];\n	""46"" -> ""11""[label=""cfg_except""];\n	""46"" -> ""14""[label=""cfg_except""];\n	""46"" -> ""47""[label=""cfg_next""];\n	""47"" -> ""11""[label=""cfg_except""];\n	""47"" -> ""14""[label=""cfg_except""];\n	""47"" -> ""35""[label=""cfg_next""];\n	""48"" -> ""11""[label=""cfg_except""];\n	""48"" -> ""33""[label=""cfg_next""];\n	""49"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""50"" -> ""29""[label=""cfg_next""];\n	""51"" -> ""11""[label=""cfg_except""];\n	""52"" -> ""41""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""36""[label=""cfg_next""];\n	""8"" -> ""52""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_except""];\n	""9"" -> ""43""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createGenerator(Writer,IOContext)",Method,No Comment,"@Override\nprotected JsonGenerator _createGenerator(Writer out, IOContext ctxt) throws IOException {\n    // this method should never get called here, so:\n    VersionUtil.throwInternal();\n    return null;\n}","com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)","digraph cfg__createGenerator {\n	""1"" [label=""ctxt := @parameter1: com.fasterxml.jackson.core.io.IOContext""];\n	""2"" [label=""out := @parameter0: java.io.Writer""];\n	""3"" [label=""return null""];\n	""4"" [label=""staticinvoke <com.fasterxml.jackson.core.util.VersionUtil: void throwInternal()>()""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createXmlWriter(IOContext,OutputStream)",Method,No Comment,"protected XMLStreamWriter _createXmlWriter(IOContext ctxt, OutputStream out) throws IOException {\n    XMLStreamWriter sw;\n    try {\n        sw = _xmlOutputFactory.createXMLStreamWriter(_decorate(ctxt, out), ""UTF-8"");\n    } catch (Exception e) {\n        throw new JsonGenerationException(e.getMessage(), e, null);\n    }\n    return _initializeXmlWriter(sw);\n}","javax.xml.stream.XMLStreamWriter _createXmlWriter(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)","digraph cfg__createXmlWriter {\n	""1"" [label=""$stack10 = new com.fasterxml.jackson.core.JsonGenerationException""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""3"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.io.OutputStream _decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(ctxt, out)""];\n	""4"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw)""];\n	""5"" [label=""$stack8 := @caughtexception""];\n	""6"" [label=""$stack9 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""7"" [label=""ctxt := @parameter0: com.fasterxml.jackson.core.io.IOContext""];\n	""8"" [label=""e = $stack8""];\n	""9"" [label=""goto""];\n	""10"" [label=""out := @parameter1: java.io.OutputStream""];\n	""11"" [label=""return $stack7""];\n	""12"" [label=""specialinvoke $stack10.<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator)>($stack9, e, null)""];\n	""13"" [label=""sw = virtualinvoke $stack5.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.OutputStream,java.lang.String)>($stack6, \""UTF-8\"")""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""15"" [label=""throw $stack10""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_except""];\n	""13"" -> ""9""[label=""cfg_next""];\n	""14"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_except""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_except""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_goto""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._createXmlWriter(IOContext,Writer)",Method,No Comment,"protected XMLStreamWriter _createXmlWriter(IOContext ctxt, Writer w) throws IOException {\n    XMLStreamWriter sw;\n    try {\n        sw = _xmlOutputFactory.createXMLStreamWriter(_decorate(ctxt, w));\n    } catch (Exception e) {\n        throw new JsonGenerationException(e.getMessage(), e, null);\n    }\n    return _initializeXmlWriter(sw);\n}","javax.xml.stream.XMLStreamWriter _createXmlWriter(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)","digraph cfg__createXmlWriter {\n	""1"" [label=""$stack10 = new com.fasterxml.jackson.core.JsonGenerationException""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""3"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.io.Writer _decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)>(ctxt, w)""];\n	""4"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter)>(sw)""];\n	""5"" [label=""$stack8 := @caughtexception""];\n	""6"" [label=""$stack9 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""7"" [label=""ctxt := @parameter0: com.fasterxml.jackson.core.io.IOContext""];\n	""8"" [label=""e = $stack8""];\n	""9"" [label=""goto""];\n	""10"" [label=""return $stack7""];\n	""11"" [label=""specialinvoke $stack10.<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator)>($stack9, e, null)""];\n	""12"" [label=""sw = virtualinvoke $stack5.<javax.xml.stream.XMLOutputFactory: javax.xml.stream.XMLStreamWriter createXMLStreamWriter(java.io.Writer)>($stack6)""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""14"" [label=""throw $stack10""];\n	""15"" [label=""w := @parameter1: java.io.Writer""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_except""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_except""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_except""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_goto""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactory._initializeXmlWriter(XMLStreamWriter),Method,No Comment,"protected final XMLStreamWriter _initializeXmlWriter(XMLStreamWriter sw) throws IOException {\n    // And just for Sun Stax parser (JDK default), seems that we better define default namespace\n    // (Woodstox doesn't care) -- otherwise it'll add unnecessary odd declaration\n    try {\n        sw.setDefaultNamespace("""");\n    } catch (Exception e) {\n        throw new JsonGenerationException(e.getMessage(), e, null);\n    }\n    return sw;\n}",javax.xml.stream.XMLStreamWriter _initializeXmlWriter(javax.xml.stream.XMLStreamWriter),"digraph cfg__initializeXmlWriter {\n	""1"" [label=""$stack3 := @caughtexception""];\n	""2"" [label=""$stack4 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""3"" [label=""$stack5 = new com.fasterxml.jackson.core.JsonGenerationException""];\n	""4"" [label=""e = $stack3""];\n	""5"" [label=""goto""];\n	""6"" [label=""interfaceinvoke sw.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(\""\"")""];\n	""7"" [label=""return sw""];\n	""8"" [label=""specialinvoke $stack5.<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String,java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator)>($stack4, e, null)""];\n	""9"" [label=""sw := @parameter0: javax.xml.stream.XMLStreamWriter""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""11"" [label=""throw $stack5""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_goto""];\n	""6"" -> ""1""[label=""cfg_except""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n","protected , final "
com.fasterxml.jackson.dataformat.xml.XmlFactory._initializeXmlReader(XMLStreamReader),Method,No Comment,"protected final XMLStreamReader _initializeXmlReader(XMLStreamReader sr) throws IOException {\n    try {\n        // for now, nothing to do... except let's find the root element\n        while (sr.next() != XMLStreamConstants.START_ELEMENT) {\n            ;\n        }\n        // [dataformat-xml#350]: Xerces-backed impl throws non-XMLStreamException so:\n    } catch (Exception e) {\n        throw new JsonParseException(null, e.getMessage(), e);\n    }\n    return sr;\n}",javax.xml.stream.XMLStreamReader _initializeXmlReader(javax.xml.stream.XMLStreamReader),"digraph cfg__initializeXmlReader {\n	""1"" [label=""$stack3 = interfaceinvoke sr.<javax.xml.stream.XMLStreamReader: int next()>()""];\n	""2"" [label=""$stack4 := @caughtexception""];\n	""3"" [label=""$stack5 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""4"" [label=""$stack6 = new com.fasterxml.jackson.core.JsonParseException""];\n	""5"" [label=""e = $stack4""];\n	""6"" [label=""goto""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack3 == 1""];\n	""9"" [label=""return sr""];\n	""10"" [label=""specialinvoke $stack6.<com.fasterxml.jackson.core.JsonParseException: void <init>(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable)>(null, $stack5, e)""];\n	""11"" [label=""sr := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""13"" [label=""throw $stack6""];\n	""1"" -> ""2""[label=""cfg_except""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_goto""];\n	""6"" -> ""2""[label=""cfg_except""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""2""[label=""cfg_except""];\n	""8"" -> ""6""[label=""cfg_false""];\n	""8"" -> ""7""[label=""cfg_true""];\n}\n","protected , final "
com.fasterxml.jackson.dataformat.xml.XmlFactory.hasXMLFormat(InputAccessor),Method,"* Method that tries to figure out if content seems to be in some kind\n     * of XML format.\n     * Note that implementation here is not nearly as robust as what underlying\n     * Stax parser will do; the idea is to first support common encodings,\n     * then expand as needed (for example, it is not all that hard to support\n     * UTF-16; but it is some work and not needed quite yet)","public static MatchStrength hasXMLFormat(InputAccessor acc) throws IOException {\n    /* Basically we just need to find ""<!"", ""<?"" or ""<NAME""... but ideally\n         * we would actually see the XML declaration\n         */\n    if (!acc.hasMoreBytes()) {\n        return MatchStrength.INCONCLUSIVE;\n    }\n    byte b = acc.nextByte();\n    // Very first thing, a UTF-8 BOM? (later improvements: other BOM's, heuristics)\n    if (b == UTF8_BOM_1) {\n        // yes, looks like UTF-8 BOM\n        if (!acc.hasMoreBytes()) {\n            return MatchStrength.INCONCLUSIVE;\n        }\n        if (acc.nextByte() != UTF8_BOM_2) {\n            return MatchStrength.NO_MATCH;\n        }\n        if (!acc.hasMoreBytes()) {\n            return MatchStrength.INCONCLUSIVE;\n        }\n        if (acc.nextByte() != UTF8_BOM_3) {\n            return MatchStrength.NO_MATCH;\n        }\n        if (!acc.hasMoreBytes()) {\n            return MatchStrength.INCONCLUSIVE;\n        }\n        b = acc.nextByte();\n    }\n    // otherwise: XML declaration?\n    boolean maybeXmlDecl = (b == BYTE_LT);\n    if (!maybeXmlDecl) {\n        int ch = skipSpace(acc, b);\n        if (ch < 0) {\n            return MatchStrength.INCONCLUSIVE;\n        }\n        b = (byte) ch;\n        // If we did not get an LT, shouldn't be valid XML (minus encoding issues etc)\n        if (b != BYTE_LT) {\n            return MatchStrength.NO_MATCH;\n        }\n    }\n    if (!acc.hasMoreBytes()) {\n        return MatchStrength.INCONCLUSIVE;\n    }\n    b = acc.nextByte();\n    // Couple of choices here\n    if (b == BYTE_QMARK) {\n        // <?\n        b = acc.nextByte();\n        if (b == BYTE_x) {\n            if (maybeXmlDecl) {\n                if (acc.hasMoreBytes() && acc.nextByte() == BYTE_m) {\n                    if (acc.hasMoreBytes() && acc.nextByte() == BYTE_l) {\n                        return MatchStrength.FULL_MATCH;\n                    }\n                }\n            }\n            // but even with just partial match, we ought to be fine\n            return MatchStrength.SOLID_MATCH;\n        }\n        // Ok to start with some other char too; just not xml declaration\n        if (validXmlNameStartChar(acc, b)) {\n            return MatchStrength.SOLID_MATCH;\n        }\n    } else if (b == BYTE_EXCL) {\n        /* must be <!-- comment --> or <!DOCTYPE ...>, since\n             * <![CDATA[ ]]> can NOT come outside of root\n             */\n        if (!acc.hasMoreBytes()) {\n            return MatchStrength.INCONCLUSIVE;\n        }\n        b = acc.nextByte();\n        if (b == BYTE_HYPHEN) {\n            if (!acc.hasMoreBytes()) {\n                return MatchStrength.INCONCLUSIVE;\n            }\n            if (acc.nextByte() == BYTE_HYPHEN) {\n                return MatchStrength.SOLID_MATCH;\n            }\n        } else if (b == BYTE_D) {\n            return tryMatch(acc, ""OCTYPE"", MatchStrength.SOLID_MATCH);\n        }\n    } else {\n        // maybe root element? Just needs to match first char.\n        if (validXmlNameStartChar(acc, b)) {\n            return MatchStrength.SOLID_MATCH;\n        }\n    }\n    return MatchStrength.NO_MATCH;\n}",com.fasterxml.jackson.core.format.MatchStrength hasXMLFormat(com.fasterxml.jackson.core.format.InputAccessor),"digraph cfg_hasXMLFormat {\n	""1"" [label=""$stack10 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>""];\n	""2"" [label=""$stack11 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength)>(acc, \""OCTYPE\"", $stack10)""];\n	""3"" [label=""$stack12 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""4"" [label=""$stack13 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""5"" [label=""$stack14 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>""];\n	""6"" [label=""$stack15 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""7"" [label=""$stack16 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""8"" [label=""$stack17 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlFactory: boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor,byte)>(acc, b)""];\n	""9"" [label=""$stack18 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>""];\n	""10"" [label=""$stack19 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>""];\n	""11"" [label=""$stack20 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""12"" [label=""$stack21 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""13"" [label=""$stack22 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""14"" [label=""$stack23 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""15"" [label=""$stack24 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH>""];\n	""16"" [label=""$stack25 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""17"" [label=""$stack26 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>""];\n	""18"" [label=""$stack27 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""19"" [label=""$stack28 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""20"" [label=""$stack29 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""21"" [label=""$stack30 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""22"" [label=""$stack31 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""23"" [label=""$stack32 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""24"" [label=""$stack33 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""25"" [label=""$stack34 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>""];\n	""26"" [label=""$stack35 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""27"" [label=""$stack36 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>""];\n	""28"" [label=""$stack37 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""29"" [label=""$stack38 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""30"" [label=""$stack4 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""31"" [label=""$stack5 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""32"" [label=""$stack6 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlFactory: boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor,byte)>(acc, b)""];\n	""33"" [label=""$stack7 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>""];\n	""34"" [label=""$stack8 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>""];\n	""35"" [label=""$stack9 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""36"" [label=""acc := @parameter0: com.fasterxml.jackson.core.format.InputAccessor""];\n	""37"" [label=""b = (byte) ch""];\n	""38"" [label=""b = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""39"" [label=""b = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""40"" [label=""b = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""41"" [label=""b = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""42"" [label=""b = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""43"" [label=""ch = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlFactory: int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte)>(acc, b)""];\n	""44"" [label=""goto""];\n	""45"" [label=""if $stack12 != 0""];\n	""46"" [label=""if $stack13 != 45""];\n	""47"" [label=""if $stack17 == 0""];\n	""48"" [label=""if $stack20 == 0""];\n	""49"" [label=""if $stack21 != 109""];\n	""50"" [label=""if $stack22 == 0""];\n	""51"" [label=""if $stack23 != 108""];\n	""52"" [label=""if $stack28 != 0""];\n	""53"" [label=""if $stack29 == -69""];\n	""54"" [label=""if $stack30 != 0""];\n	""55"" [label=""if $stack31 == -65""];\n	""56"" [label=""if $stack32 != 0""];\n	""57"" [label=""if $stack4 != 0""];\n	""58"" [label=""if $stack5 != 0""];\n	""59"" [label=""if $stack6 == 0""];\n	""60"" [label=""if $stack9 != 0""];\n	""61"" [label=""if b != -17""];\n	""62"" [label=""if b != 120""];\n	""63"" [label=""if b != 33""];\n	""64"" [label=""if b != 45""];\n	""65"" [label=""if b != 60""];\n	""66"" [label=""if b != 63""];\n	""67"" [label=""if b != 68""];\n	""68"" [label=""if b == 60""];\n	""69"" [label=""if ch >= 0""];\n	""70"" [label=""if maybeXmlDecl != 0""];\n	""71"" [label=""if maybeXmlDecl == 0""];\n	""72"" [label=""maybeXmlDecl = 0""];\n	""73"" [label=""maybeXmlDecl = 1""];\n	""74"" [label=""return $stack11""];\n	""75"" [label=""return $stack14""];\n	""76"" [label=""return $stack15""];\n	""77"" [label=""return $stack16""];\n	""78"" [label=""return $stack18""];\n	""79"" [label=""return $stack19""];\n	""80"" [label=""return $stack24""];\n	""81"" [label=""return $stack25""];\n	""82"" [label=""return $stack26""];\n	""83"" [label=""return $stack27""];\n	""84"" [label=""return $stack33""];\n	""85"" [label=""return $stack34""];\n	""86"" [label=""return $stack35""];\n	""87"" [label=""return $stack36""];\n	""88"" [label=""return $stack37""];\n	""89"" [label=""return $stack38""];\n	""90"" [label=""return $stack7""];\n	""91"" [label=""return $stack8""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""79""[label=""cfg_next""];\n	""11"" -> ""48""[label=""cfg_next""];\n	""12"" -> ""49""[label=""cfg_next""];\n	""13"" -> ""50""[label=""cfg_next""];\n	""14"" -> ""51""[label=""cfg_next""];\n	""15"" -> ""80""[label=""cfg_next""];\n	""16"" -> ""81""[label=""cfg_next""];\n	""17"" -> ""82""[label=""cfg_next""];\n	""18"" -> ""83""[label=""cfg_next""];\n	""19"" -> ""52""[label=""cfg_next""];\n	""2"" -> ""74""[label=""cfg_next""];\n	""20"" -> ""53""[label=""cfg_next""];\n	""21"" -> ""54""[label=""cfg_next""];\n	""22"" -> ""55""[label=""cfg_next""];\n	""23"" -> ""56""[label=""cfg_next""];\n	""24"" -> ""84""[label=""cfg_next""];\n	""25"" -> ""85""[label=""cfg_next""];\n	""26"" -> ""86""[label=""cfg_next""];\n	""27"" -> ""87""[label=""cfg_next""];\n	""28"" -> ""88""[label=""cfg_next""];\n	""29"" -> ""89""[label=""cfg_next""];\n	""3"" -> ""45""[label=""cfg_next""];\n	""30"" -> ""57""[label=""cfg_next""];\n	""31"" -> ""58""[label=""cfg_next""];\n	""32"" -> ""59""[label=""cfg_next""];\n	""33"" -> ""90""[label=""cfg_next""];\n	""34"" -> ""91""[label=""cfg_next""];\n	""35"" -> ""60""[label=""cfg_next""];\n	""36"" -> ""30""[label=""cfg_next""];\n	""37"" -> ""68""[label=""cfg_next""];\n	""38"" -> ""61""[label=""cfg_next""];\n	""39"" -> ""65""[label=""cfg_next""];\n	""4"" -> ""46""[label=""cfg_next""];\n	""40"" -> ""66""[label=""cfg_next""];\n	""41"" -> ""62""[label=""cfg_next""];\n	""42"" -> ""64""[label=""cfg_next""];\n	""43"" -> ""69""[label=""cfg_next""];\n	""44"" -> ""70""[label=""cfg_goto""];\n	""45"" -> ""4""[label=""cfg_true""];\n	""45"" -> ""6""[label=""cfg_false""];\n	""46"" -> ""33""[label=""cfg_true""];\n	""46"" -> ""5""[label=""cfg_false""];\n	""47"" -> ""33""[label=""cfg_true""];\n	""47"" -> ""9""[label=""cfg_false""];\n	""48"" -> ""10""[label=""cfg_true""];\n	""48"" -> ""12""[label=""cfg_false""];\n	""49"" -> ""10""[label=""cfg_true""];\n	""49"" -> ""13""[label=""cfg_false""];\n	""5"" -> ""75""[label=""cfg_next""];\n	""50"" -> ""10""[label=""cfg_true""];\n	""50"" -> ""14""[label=""cfg_false""];\n	""51"" -> ""10""[label=""cfg_true""];\n	""51"" -> ""15""[label=""cfg_false""];\n	""52"" -> ""20""[label=""cfg_true""];\n	""52"" -> ""28""[label=""cfg_false""];\n	""53"" -> ""21""[label=""cfg_true""];\n	""53"" -> ""27""[label=""cfg_false""];\n	""54"" -> ""22""[label=""cfg_true""];\n	""54"" -> ""26""[label=""cfg_false""];\n	""55"" -> ""23""[label=""cfg_true""];\n	""55"" -> ""25""[label=""cfg_false""];\n	""56"" -> ""24""[label=""cfg_false""];\n	""56"" -> ""39""[label=""cfg_true""];\n	""57"" -> ""29""[label=""cfg_false""];\n	""57"" -> ""38""[label=""cfg_true""];\n	""58"" -> ""16""[label=""cfg_false""];\n	""58"" -> ""40""[label=""cfg_true""];\n	""59"" -> ""33""[label=""cfg_true""];\n	""59"" -> ""34""[label=""cfg_false""];\n	""6"" -> ""76""[label=""cfg_next""];\n	""60"" -> ""42""[label=""cfg_true""];\n	""60"" -> ""7""[label=""cfg_false""];\n	""61"" -> ""19""[label=""cfg_false""];\n	""61"" -> ""65""[label=""cfg_true""];\n	""62"" -> ""71""[label=""cfg_false""];\n	""62"" -> ""8""[label=""cfg_true""];\n	""63"" -> ""32""[label=""cfg_true""];\n	""63"" -> ""35""[label=""cfg_false""];\n	""64"" -> ""3""[label=""cfg_false""];\n	""64"" -> ""67""[label=""cfg_true""];\n	""65"" -> ""72""[label=""cfg_true""];\n	""65"" -> ""73""[label=""cfg_false""];\n	""66"" -> ""41""[label=""cfg_false""];\n	""66"" -> ""63""[label=""cfg_true""];\n	""67"" -> ""1""[label=""cfg_false""];\n	""67"" -> ""33""[label=""cfg_true""];\n	""68"" -> ""17""[label=""cfg_false""];\n	""68"" -> ""31""[label=""cfg_true""];\n	""69"" -> ""18""[label=""cfg_false""];\n	""69"" -> ""37""[label=""cfg_true""];\n	""7"" -> ""77""[label=""cfg_next""];\n	""70"" -> ""31""[label=""cfg_true""];\n	""70"" -> ""43""[label=""cfg_false""];\n	""71"" -> ""10""[label=""cfg_true""];\n	""71"" -> ""11""[label=""cfg_false""];\n	""72"" -> ""70""[label=""cfg_next""];\n	""73"" -> ""44""[label=""cfg_next""];\n	""8"" -> ""47""[label=""cfg_next""];\n	""9"" -> ""78""[label=""cfg_next""];\n}\n","public , static "
"com.fasterxml.jackson.dataformat.xml.XmlFactory.validXmlNameStartChar(InputAccessor,byte)",Method,No Comment,"private final static boolean validXmlNameStartChar(InputAccessor acc, byte b) throws IOException {\n    /* Can make it actual real XML check in future; for now we do just crude\n         * check for ASCII range\n         */\n    int ch = (int) b & 0xFF;\n    if (ch >= 'A') {\n        // in theory, colon could be; in practice it should never be valid (wrt namespace)\n        // This is where we'd check for multi-byte UTF-8 chars (or whatever encoding is in use)...\n        return true;\n    }\n    return false;\n}","boolean validXmlNameStartChar(com.fasterxml.jackson.core.format.InputAccessor,byte)","digraph cfg_validXmlNameStartChar {\n	""1"" [label=""acc := @parameter0: com.fasterxml.jackson.core.format.InputAccessor""];\n	""2"" [label=""b := @parameter1: byte""];\n	""3"" [label=""ch = b & 255""];\n	""4"" [label=""if ch < 65""];\n	""5"" [label=""return 0""];\n	""6"" [label=""return 1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_true""];\n	""4"" -> ""6""[label=""cfg_false""];\n}\n","private , final , static "
"com.fasterxml.jackson.dataformat.xml.XmlFactory.tryMatch(InputAccessor,String,MatchStrength)",Method,No Comment,"private final static MatchStrength tryMatch(InputAccessor acc, String matchStr, MatchStrength fullMatchStrength) throws IOException {\n    for (int i = 0, len = matchStr.length(); i < len; ++i) {\n        if (!acc.hasMoreBytes()) {\n            return MatchStrength.INCONCLUSIVE;\n        }\n        if (acc.nextByte() != matchStr.charAt(i)) {\n            return MatchStrength.NO_MATCH;\n        }\n    }\n    return fullMatchStrength;\n}","com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength)","digraph cfg_tryMatch {\n	""1"" [label=""$stack5 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""2"" [label=""$stack6 = virtualinvoke matchStr.<java.lang.String: char charAt(int)>(i)""];\n	""3"" [label=""$stack7 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""4"" [label=""$stack8 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>""];\n	""5"" [label=""$stack9 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>""];\n	""6"" [label=""acc := @parameter0: com.fasterxml.jackson.core.format.InputAccessor""];\n	""7"" [label=""fullMatchStrength := @parameter2: com.fasterxml.jackson.core.format.MatchStrength""];\n	""8"" [label=""goto""];\n	""9"" [label=""i = 0""];\n	""10"" [label=""i = i + 1""];\n	""11"" [label=""if $stack5 != 0""];\n	""12"" [label=""if $stack7 == $stack6""];\n	""13"" [label=""if i >= len""];\n	""14"" [label=""len = virtualinvoke matchStr.<java.lang.String: int length()>()""];\n	""15"" [label=""matchStr := @parameter1: java.lang.String""];\n	""16"" [label=""return $stack8""];\n	""17"" [label=""return $stack9""];\n	""18"" [label=""return fullMatchStrength""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_false""];\n	""12"" -> ""10""[label=""cfg_true""];\n	""12"" -> ""4""[label=""cfg_false""];\n	""13"" -> ""1""[label=""cfg_false""];\n	""13"" -> ""18""[label=""cfg_true""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_goto""];\n	""9"" -> ""14""[label=""cfg_next""];\n}\n","private , final , static "
"com.fasterxml.jackson.dataformat.xml.XmlFactory.skipSpace(InputAccessor,byte)",Method,No Comment,"private final static int skipSpace(InputAccessor acc, byte b) throws IOException {\n    while (true) {\n        int ch = (int) b & 0xFF;\n        if (!(ch == ' ' || ch == '\r' || ch == '\n' || ch == '\t')) {\n            return ch;\n        }\n        if (!acc.hasMoreBytes()) {\n            return -1;\n        }\n        b = acc.nextByte();\n        ch = (int) b & 0xFF;\n    }\n}","int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte)","digraph cfg_skipSpace {\n	""1"" [label=""$stack3 = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>()""];\n	""2"" [label=""acc := @parameter0: com.fasterxml.jackson.core.format.InputAccessor""];\n	""3"" [label=""b := @parameter1: byte""];\n	""4"" [label=""b = interfaceinvoke acc.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>()""];\n	""5"" [label=""ch = b & 255""];\n	""6"" [label=""ch = b & 255""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack3 != 0""];\n	""9"" [label=""if ch == 10""];\n	""10"" [label=""if ch == 13""];\n	""11"" [label=""if ch == 32""];\n	""12"" [label=""if ch == 9""];\n	""13"" [label=""return -1""];\n	""14"" [label=""return ch""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_true""];\n	""10"" -> ""9""[label=""cfg_false""];\n	""11"" -> ""1""[label=""cfg_true""];\n	""11"" -> ""10""[label=""cfg_false""];\n	""12"" -> ""1""[label=""cfg_true""];\n	""12"" -> ""14""[label=""cfg_false""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_goto""];\n	""8"" -> ""13""[label=""cfg_false""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""9"" -> ""1""[label=""cfg_true""];\n	""9"" -> ""12""[label=""cfg_false""];\n}\n","private , final , static "
"com.fasterxml.jackson.dataformat.xml.XmlFactory._decorate(IOContext,OutputStream)",Method,No Comment,"protected OutputStream _decorate(IOContext ioCtxt, OutputStream out) throws IOException {\n    if (_outputDecorator != null) {\n        OutputStream out2 = _outputDecorator.decorate(ioCtxt, out);\n        if (out2 != null) {\n            return out2;\n        }\n    }\n    return out;\n}","java.io.OutputStream _decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)","digraph cfg__decorate {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>""];\n	""3"" [label=""if $stack4 == null""];\n	""4"" [label=""if out2 == null""];\n	""5"" [label=""ioCtxt := @parameter0: com.fasterxml.jackson.core.io.IOContext""];\n	""6"" [label=""out := @parameter1: java.io.OutputStream""];\n	""7"" [label=""out2 = virtualinvoke $stack5.<com.fasterxml.jackson.core.io.OutputDecorator: java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(ioCtxt, out)""];\n	""8"" [label=""return out""];\n	""9"" [label=""return out2""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_false""];\n	""3"" -> ""8""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_true""];\n	""4"" -> ""9""[label=""cfg_false""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory._decorate(IOContext,Writer)",Method,No Comment,"protected Writer _decorate(IOContext ioCtxt, Writer out) throws IOException {\n    if (_outputDecorator != null) {\n        Writer out2 = _outputDecorator.decorate(ioCtxt, out);\n        if (out2 != null) {\n            return out2;\n        }\n    }\n    return out;\n}","java.io.Writer _decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)","digraph cfg__decorate {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>""];\n	""3"" [label=""if $stack4 == null""];\n	""4"" [label=""if out2 == null""];\n	""5"" [label=""ioCtxt := @parameter0: com.fasterxml.jackson.core.io.IOContext""];\n	""6"" [label=""out := @parameter1: java.io.Writer""];\n	""7"" [label=""out2 = virtualinvoke $stack5.<com.fasterxml.jackson.core.io.OutputDecorator: java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)>(ioCtxt, out)""];\n	""8"" [label=""return out""];\n	""9"" [label=""return out2""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""10"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_false""];\n	""3"" -> ""8""[label=""cfg_true""];\n	""4"" -> ""8""[label=""cfg_true""];\n	""4"" -> ""9""[label=""cfg_false""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(),Constructor,"* Default constructor used to create factory instances.\n     * Creation of a factory instance is a light-weight operation,\n     * but it is still a good idea to reuse limited number of\n     * factory instances (and quite often just a single instance):\n     * factories are used as context for storing some reused\n     * processing objects (such as symbol tables parsers use)\n     * and this reuse only works within context of a single\n     * factory instance.","public XmlFactory() {\n    this(null, null, null);\n}",void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)>(null, null, null)""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec),Constructor,No Comment,"public XmlFactory(ObjectCodec oc) {\n    this(oc, null, null);\n}",void <init>(com.fasterxml.jackson.core.ObjectCodec),"digraph cfg_init {\n	""1"" [label=""oc := @parameter0: com.fasterxml.jackson.core.ObjectCodec""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)>(oc, null, null)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XMLInputFactory),Constructor,No Comment,"public XmlFactory(XMLInputFactory xmlIn) {\n    this(null, xmlIn, null);\n}",void <init>(javax.xml.stream.XMLInputFactory),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)>(null, xmlIn, null)""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""4"" [label=""xmlIn := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XMLInputFactory,XMLOutputFactory)",Constructor,No Comment,"public XmlFactory(XMLInputFactory xmlIn, XMLOutputFactory xmlOut) {\n    this(null, xmlIn, xmlOut);\n}","void <init>(javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)","digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)>(null, xmlIn, xmlOut)""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""4"" [label=""xmlIn := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""5"" [label=""xmlOut := @parameter1: javax.xml.stream.XMLOutputFactory""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec,XMLInputFactory,XMLOutputFactory)",Constructor,No Comment,"public XmlFactory(ObjectCodec oc, XMLInputFactory xmlIn, XMLOutputFactory xmlOut) {\n    this(oc, DEFAULT_XML_PARSER_FEATURE_FLAGS, DEFAULT_XML_GENERATOR_FEATURE_FLAGS, xmlIn, xmlOut, null);\n}","void <init>(com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)","digraph cfg_init {\n	""1"" [label=""$stack4 = <com.fasterxml.jackson.dataformat.xml.XmlFactory: int DEFAULT_XML_GENERATOR_FEATURE_FLAGS>""];\n	""2"" [label=""$stack5 = <com.fasterxml.jackson.dataformat.xml.XmlFactory: int DEFAULT_XML_PARSER_FEATURE_FLAGS>""];\n	""3"" [label=""oc := @parameter0: com.fasterxml.jackson.core.ObjectCodec""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec,int,int,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory,java.lang.String)>(oc, $stack5, $stack4, xmlIn, xmlOut, null)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""7"" [label=""xmlIn := @parameter1: javax.xml.stream.XMLInputFactory""];\n	""8"" [label=""xmlOut := @parameter2: javax.xml.stream.XMLOutputFactory""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec,int,int,XMLInputFactory,XMLOutputFactory,String)",Constructor,No Comment,"public XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem) {\n    this(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, nameForTextElem, XmlNameProcessors.newPassthroughProcessor());\n}","void <init>(com.fasterxml.jackson.core.ObjectCodec,int,int,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory,java.lang.String)","digraph cfg_init {\n	""1"" [label=""$stack7 = staticinvoke <com.fasterxml.jackson.dataformat.xml.XmlNameProcessors: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor newPassthroughProcessor()>()""];\n	""2"" [label=""nameForTextElem := @parameter5: java.lang.String""];\n	""3"" [label=""oc := @parameter0: com.fasterxml.jackson.core.ObjectCodec""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec,int,int,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory,java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(oc, xpFeatures, xgFeatures, xmlIn, xmlOut, nameForTextElem, $stack7)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""7"" [label=""xgFeatures := @parameter2: int""];\n	""8"" [label=""xmlIn := @parameter3: javax.xml.stream.XMLInputFactory""];\n	""9"" [label=""xmlOut := @parameter4: javax.xml.stream.XMLOutputFactory""];\n	""10"" [label=""xpFeatures := @parameter1: int""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(ObjectCodec,int,int,XMLInputFactory,XMLOutputFactory,String,XmlNameProcessor)",Constructor,No Comment,"protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures, XMLInputFactory xmlIn, XMLOutputFactory xmlOut, String nameForTextElem, XmlNameProcessor nameProcessor) {\n    super(oc);\n    _nameProcessor = nameProcessor;\n    _xmlParserFeatures = xpFeatures;\n    _xmlGeneratorFeatures = xgFeatures;\n    _cfgNameForTextElement = nameForTextElem;\n    if (xmlIn == null) {\n        xmlIn = StaxUtil.defaultInputFactory(getClass().getClassLoader());\n        // as per [dataformat-xml#190], disable external entity expansion by default\n        xmlIn.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, Boolean.FALSE);\n        // and ditto wrt [dataformat-xml#211], SUPPORT_DTD\n        xmlIn.setProperty(XMLInputFactory.SUPPORT_DTD, Boolean.FALSE);\n    }\n    if (xmlOut == null) {\n        xmlOut = StaxUtil.defaultOutputFactory(getClass().getClassLoader());\n        // [dataformat-xml#326]: Better ensure namespaces get built properly:\n        xmlOut.setProperty(XMLOutputFactory.IS_REPAIRING_NAMESPACES, Boolean.TRUE);\n    }\n    _initFactories(xmlIn, xmlOut);\n    _xmlInputFactory = xmlIn;\n    _xmlOutputFactory = xmlOut;\n}","void <init>(com.fasterxml.jackson.core.ObjectCodec,int,int,javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory,java.lang.String,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)","digraph cfg_init {\n	""1"" [label=""$stack10 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""2"" [label=""$stack11 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()""];\n	""4"" [label=""$stack13 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""5"" [label=""$stack14 = <java.lang.Boolean: java.lang.Boolean FALSE>""];\n	""6"" [label=""$stack8 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>()""];\n	""7"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()""];\n	""8"" [label=""if xmlIn != null""];\n	""9"" [label=""if xmlOut != null""];\n	""10"" [label=""nameForTextElem := @parameter5: java.lang.String""];\n	""11"" [label=""nameProcessor := @parameter6: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""12"" [label=""oc := @parameter0: com.fasterxml.jackson.core.ObjectCodec""];\n	""13"" [label=""return""];\n	""14"" [label=""specialinvoke this.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>(oc)""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = nameProcessor""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures> = xgFeatures""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures> = xpFeatures""];\n	""19"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement> = nameForTextElem""];\n	""20"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory> = xmlIn""];\n	""21"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory> = xmlOut""];\n	""22"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void _initFactories(javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)>(xmlIn, xmlOut)""];\n	""23"" [label=""virtualinvoke xmlIn.<javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.isSupportingExternalEntities\"", $stack13)""];\n	""24"" [label=""virtualinvoke xmlIn.<javax.xml.stream.XMLInputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.supportDTD\"", $stack14)""];\n	""25"" [label=""virtualinvoke xmlOut.<javax.xml.stream.XMLOutputFactory: void setProperty(java.lang.String,java.lang.Object)>(\""javax.xml.stream.isRepairingNamespaces\"", $stack10)""];\n	""26"" [label=""xgFeatures := @parameter2: int""];\n	""27"" [label=""xmlIn := @parameter3: javax.xml.stream.XMLInputFactory""];\n	""28"" [label=""xmlIn = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: javax.xml.stream.XMLInputFactory defaultInputFactory(java.lang.ClassLoader)>($stack12)""];\n	""29"" [label=""xmlOut := @parameter4: javax.xml.stream.XMLOutputFactory""];\n	""30"" [label=""xmlOut = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: javax.xml.stream.XMLOutputFactory defaultOutputFactory(java.lang.ClassLoader)>($stack9)""];\n	""31"" [label=""xpFeatures := @parameter1: int""];\n	""1"" -> ""25""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""31""[label=""cfg_next""];\n	""14"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_next""];\n	""21"" -> ""13""[label=""cfg_next""];\n	""22"" -> ""20""[label=""cfg_next""];\n	""23"" -> ""5""[label=""cfg_next""];\n	""24"" -> ""9""[label=""cfg_next""];\n	""25"" -> ""22""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""4""[label=""cfg_next""];\n	""29"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_next""];\n	""31"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""30""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""9""[label=""cfg_true""];\n	""9"" -> ""22""[label=""cfg_true""];\n	""9"" -> ""6""[label=""cfg_false""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XmlFactory,ObjectCodec)",Constructor,* @since 2.2.1,"protected XmlFactory(XmlFactory src, ObjectCodec oc) {\n    super(src, oc);\n    _xmlParserFeatures = src._xmlParserFeatures;\n    _xmlGeneratorFeatures = src._xmlGeneratorFeatures;\n    _cfgNameForTextElement = src._cfgNameForTextElement;\n    _xmlInputFactory = src._xmlInputFactory;\n    _xmlOutputFactory = src._xmlOutputFactory;\n    _nameProcessor = src._nameProcessor;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.core.ObjectCodec)","digraph cfg_init {\n	""1"" [label=""$stack3 = src.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures>""];\n	""2"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures>""];\n	""3"" [label=""$stack5 = src.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement>""];\n	""4"" [label=""$stack6 = src.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""5"" [label=""$stack7 = src.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""6"" [label=""$stack8 = src.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""7"" [label=""oc := @parameter1: com.fasterxml.jackson.core.ObjectCodec""];\n	""8"" [label=""return""];\n	""9"" [label=""specialinvoke this.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec)>(src, oc)""];\n	""10"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = $stack8""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures> = $stack4""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures> = $stack3""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement> = $stack5""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory> = $stack6""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory> = $stack7""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""8""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""17"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_next""];\n	""4"" -> ""16""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlFactory.<init>(XmlFactoryBuilder),Constructor,* Constructors used by {@link JsonFactoryBuilder} for instantiation.\n     *\n     * @since 2.9,"protected XmlFactory(XmlFactoryBuilder b) {\n    super(b, false);\n    _xmlParserFeatures = b.formatParserFeaturesMask();\n    _xmlGeneratorFeatures = b.formatGeneratorFeaturesMask();\n    _cfgNameForTextElement = b.nameForTextElement();\n    _xmlInputFactory = b.xmlInputFactory();\n    _xmlOutputFactory = b.xmlOutputFactory();\n    _nameProcessor = b.xmlNameProcessor();\n    _initFactories(_xmlInputFactory, _xmlOutputFactory);\n}",void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder),"digraph cfg_init {\n	""1"" [label=""$stack2 = virtualinvoke b.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int formatParserFeaturesMask()>()""];\n	""2"" [label=""$stack3 = virtualinvoke b.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: int formatGeneratorFeaturesMask()>()""];\n	""3"" [label=""$stack4 = virtualinvoke b.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: java.lang.String nameForTextElement()>()""];\n	""4"" [label=""$stack5 = virtualinvoke b.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLInputFactory xmlInputFactory()>()""];\n	""5"" [label=""$stack6 = virtualinvoke b.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: javax.xml.stream.XMLOutputFactory xmlOutputFactory()>()""];\n	""6"" [label=""$stack7 = virtualinvoke b.<com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor xmlNameProcessor()>()""];\n	""7"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory>""];\n	""8"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory>""];\n	""9"" [label=""b := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlFactoryBuilder""];\n	""10"" [label=""return""];\n	""11"" [label=""specialinvoke this.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.TSFBuilder,boolean)>(b, 0)""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = $stack7""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlGeneratorFeatures> = $stack3""];\n	""15"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: int _xmlParserFeatures> = $stack2""];\n	""16"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: java.lang.String _cfgNameForTextElement> = $stack4""];\n	""17"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLInputFactory _xmlInputFactory> = $stack5""];\n	""18"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: javax.xml.stream.XMLOutputFactory _xmlOutputFactory> = $stack6""];\n	""19"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void _initFactories(javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)>($stack9, $stack8)""];\n	""1"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""14"" -> ""3""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""4""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_next""];\n	""18"" -> ""6""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.changeProperties(SerializationConfig,BeanDescription,List)",Method,"* First thing to do is to find annotations regarding XML serialization,\n     * and wrap collection serializers.","@Override\npublic List<BeanPropertyWriter> changeProperties(SerializationConfig config, BeanDescription beanDesc, List<BeanPropertyWriter> beanProperties) {\n    final AnnotationIntrospector intr = config.getAnnotationIntrospector();\n    for (int i = 0, len = beanProperties.size(); i < len; ++i) {\n        BeanPropertyWriter bpw = beanProperties.get(i);\n        final AnnotatedMember member = bpw.getMember();\n        String ns = AnnotationUtil.findNamespaceAnnotation(config, intr, member);\n        Boolean isAttribute = AnnotationUtil.findIsAttributeAnnotation(config, intr, member);\n        Boolean isText = AnnotationUtil.findIsTextAnnotation(config, intr, member);\n        Boolean isCData = AnnotationUtil.findIsCDataAnnotation(config, intr, member);\n        bpw.setInternalSetting(XmlBeanSerializerBase.KEY_XML_INFO, new XmlInfo(isAttribute, ns, isText, isCData));\n        // Actually: if we have a Collection type, easiest place to add wrapping would be here...\n        //  or: let's also allow wrapping of ""untyped"" (Object): assuming it is a dynamically\n        //   typed Collection...\n        if (!TypeUtil.isIndexedType(bpw.getType())) {\n            continue;\n        }\n        PropertyName wrappedName = PropertyName.construct(bpw.getName(), ns);\n        PropertyName wrapperName = bpw.getWrapperName();\n        // first things first: no wrapping?\n        if (wrapperName == null || wrapperName == PropertyName.NO_NAME) {\n            continue;\n        }\n        // no local name? Just double the wrapped name for wrapper\n        String localName = wrapperName.getSimpleName();\n        if (localName == null || localName.length() == 0) {\n            wrapperName = wrappedName;\n        }\n        beanProperties.set(i, new XmlBeanPropertyWriter(bpw, wrapperName, wrappedName));\n    }\n    return beanProperties;\n}","java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)","digraph cfg_changeProperties {\n	""1"" [label=""$stack16 = interfaceinvoke beanProperties.<java.util.List: java.lang.Object get(int)>(i)""];\n	""2"" [label=""$stack17 = new com.fasterxml.jackson.dataformat.xml.util.XmlInfo""];\n	""3"" [label=""$stack18 = <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.lang.String KEY_XML_INFO>""];\n	""4"" [label=""$stack19 = virtualinvoke bpw.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getType()>()""];\n	""5"" [label=""$stack20 = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.TypeUtil: boolean isIndexedType(com.fasterxml.jackson.databind.JavaType)>($stack19)""];\n	""6"" [label=""$stack21 = virtualinvoke bpw.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>()""];\n	""7"" [label=""$stack22 = <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName NO_NAME>""];\n	""8"" [label=""$stack23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter""];\n	""9"" [label=""$stack24 = virtualinvoke localName.<java.lang.String: int length()>()""];\n	""10"" [label=""beanDesc := @parameter1: com.fasterxml.jackson.databind.BeanDescription""];\n	""11"" [label=""beanProperties := @parameter2: java.util.List""];\n	""12"" [label=""bpw = (com.fasterxml.jackson.databind.ser.BeanPropertyWriter) $stack16""];\n	""13"" [label=""config := @parameter0: com.fasterxml.jackson.databind.SerializationConfig""];\n	""14"" [label=""goto""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""i = 0""];\n	""18"" [label=""i = i + 1""];\n	""19"" [label=""if $stack20 != 0""];\n	""20"" [label=""if $stack24 != 0""];\n	""21"" [label=""if i >= len""];\n	""22"" [label=""if localName == null""];\n	""23"" [label=""if wrapperName != $stack22""];\n	""24"" [label=""if wrapperName == null""];\n	""25"" [label=""interfaceinvoke beanProperties.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i, $stack23)""];\n	""26"" [label=""intr = virtualinvoke config.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>()""];\n	""27"" [label=""isAttribute = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil: java.lang.Boolean findIsAttributeAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(config, intr, member)""];\n	""28"" [label=""isCData = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil: java.lang.Boolean findIsCDataAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(config, intr, member)""];\n	""29"" [label=""isText = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil: java.lang.Boolean findIsTextAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(config, intr, member)""];\n	""30"" [label=""len = interfaceinvoke beanProperties.<java.util.List: int size()>()""];\n	""31"" [label=""localName = virtualinvoke wrapperName.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""32"" [label=""member = virtualinvoke bpw.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>()""];\n	""33"" [label=""ns = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil: java.lang.String findNamespaceAnnotation(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(config, intr, member)""];\n	""34"" [label=""return beanProperties""];\n	""35"" [label=""specialinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: void <init>(java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Boolean)>(isAttribute, ns, isText, isCData)""];\n	""36"" [label=""specialinvoke $stack23.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName)>(bpw, wrapperName, wrappedName)""];\n	""37"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier""];\n	""38"" [label=""virtualinvoke bpw.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object)>($stack18, $stack17)""];\n	""39"" [label=""wrappedName = staticinvoke <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String)>($stack21, ns)""];\n	""40"" [label=""wrapperName = virtualinvoke bpw.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.PropertyName getWrapperName()>()""];\n	""41"" [label=""wrapperName = wrappedName""];\n	""1"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""26""[label=""cfg_next""];\n	""12"" -> ""32""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_goto""];\n	""15"" -> ""18""[label=""cfg_goto""];\n	""16"" -> ""21""[label=""cfg_goto""];\n	""17"" -> ""30""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""14""[label=""cfg_false""];\n	""19"" -> ""6""[label=""cfg_true""];\n	""2"" -> ""35""[label=""cfg_next""];\n	""20"" -> ""41""[label=""cfg_false""];\n	""20"" -> ""8""[label=""cfg_true""];\n	""21"" -> ""1""[label=""cfg_false""];\n	""21"" -> ""34""[label=""cfg_true""];\n	""22"" -> ""41""[label=""cfg_true""];\n	""22"" -> ""9""[label=""cfg_false""];\n	""23"" -> ""15""[label=""cfg_false""];\n	""23"" -> ""31""[label=""cfg_true""];\n	""24"" -> ""18""[label=""cfg_true""];\n	""24"" -> ""7""[label=""cfg_false""];\n	""25"" -> ""18""[label=""cfg_next""];\n	""26"" -> ""17""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""3""[label=""cfg_next""];\n	""29"" -> ""28""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""21""[label=""cfg_next""];\n	""31"" -> ""22""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""27""[label=""cfg_next""];\n	""35"" -> ""38""[label=""cfg_next""];\n	""36"" -> ""25""[label=""cfg_next""];\n	""37"" -> ""13""[label=""cfg_next""];\n	""38"" -> ""4""[label=""cfg_next""];\n	""39"" -> ""40""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""24""[label=""cfg_next""];\n	""41"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""19""[label=""cfg_next""];\n	""6"" -> ""39""[label=""cfg_next""];\n	""7"" -> ""23""[label=""cfg_next""];\n	""8"" -> ""36""[label=""cfg_next""];\n	""9"" -> ""20""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.modifySerializer(SerializationConfig,BeanDescription,JsonSerializer)",Method,No Comment,"@Override\npublic JsonSerializer<?> modifySerializer(SerializationConfig config, BeanDescription beanDesc, JsonSerializer<?> serializer) {\n    /* First things first: we can only handle real BeanSerializers; question\n         * is, what to do if it's not one: throw exception or bail out?\n         * For now let's do latter.\n         */\n    if (!(serializer instanceof BeanSerializerBase)) {\n        return serializer;\n    }\n    return new XmlBeanSerializer((BeanSerializerBase) serializer);\n}","com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)","digraph cfg_modifySerializer {\n	""1"" [label=""$stack4 = serializer instanceof com.fasterxml.jackson.databind.ser.std.BeanSerializerBase""];\n	""2"" [label=""$stack5 = (com.fasterxml.jackson.databind.ser.std.BeanSerializerBase) serializer""];\n	""3"" [label=""$stack6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""4"" [label=""beanDesc := @parameter1: com.fasterxml.jackson.databind.BeanDescription""];\n	""5"" [label=""config := @parameter0: com.fasterxml.jackson.databind.SerializationConfig""];\n	""6"" [label=""if $stack4 != 0""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""return serializer""];\n	""9"" [label=""serializer := @parameter2: com.fasterxml.jackson.databind.JsonSerializer""];\n	""10"" [label=""specialinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)>($stack5)""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_false""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier.<init>(),Constructor,No Comment,public XmlBeanSerializerModifier() {\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: void <init>()>()""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFields(Object,JsonGenerator,SerializerProvider)",Method,"* Main serialization method needs to be overridden to allow XML-specific\n     * extra handling, such as indication of whether to write attributes or\n     * elements.","@Override\nprotected void serializeFields(Object bean, JsonGenerator gen0, SerializerProvider provider) throws IOException {\n    // 19-Aug-2013, tatu: During 'convertValue()', need to skip\n    if (!(gen0 instanceof ToXmlGenerator)) {\n        super.serializeFields(bean, gen0, provider);\n        return;\n    }\n    final ToXmlGenerator xgen = (ToXmlGenerator) gen0;\n    final BeanPropertyWriter[] props;\n    if (_filteredProps != null && provider.getActiveView() != null) {\n        props = _filteredProps;\n    } else {\n        props = _props;\n    }\n    final int attrCount = _attributeCount;\n    final boolean isAttribute = xgen._nextIsAttribute;\n    if (attrCount > 0) {\n        xgen.setNextIsAttribute(true);\n    }\n    final int textIndex = _textPropertyIndex;\n    final QName[] xmlNames = _xmlNames;\n    int i = 0;\n    final BitSet cdata = _cdata;\n    try {\n        for (final int len = props.length; i < len; ++i) {\n            // 28-jan-2014, pascal: we don't want to reset the attribute flag if we are an unwrapping serializer\n            // that started with nextIsAttribute to true because all properties should be unwrapped as attributes too.\n            if (i == attrCount && !(isAttribute && isUnwrappingSerializer())) {\n                xgen.setNextIsAttribute(false);\n            }\n            // also: if this is property to write as text (""unwrap""), need to:\n            if (i == textIndex) {\n                xgen.setNextIsUnwrapped(true);\n            }\n            xgen.setNextName(xmlNames[i]);\n            BeanPropertyWriter prop = props[i];\n            if (prop != null) {\n                // can have nulls in filtered list\n                if ((cdata != null) && cdata.get(i)) {\n                    xgen.setNextIsCData(true);\n                    prop.serializeAsField(bean, xgen, provider);\n                    xgen.setNextIsCData(false);\n                } else {\n                    prop.serializeAsField(bean, xgen, provider);\n                }\n            }\n            // Reset to avoid next value being written as unwrapped,\n            // for example when property is suppressed\n            if (i == textIndex) {\n                xgen.setNextIsUnwrapped(false);\n            }\n        }\n    } catch (Exception e) {\n        String name = (i == props.length) ? ""[anySetter]"" : props[i].getName();\n        wrapAndThrow(provider, e, bean, name);\n    } catch (StackOverflowError e) {\n        // Bit tricky, can't do more calls as stack is full; so:\n        JsonMappingException mapE = JsonMappingException.from(gen0, ""Infinite recursion (StackOverflowError)"");\n        String name = (i == props.length) ? ""[anySetter]"" : props[i].getName();\n        mapE.prependPath(new JsonMappingException.Reference(bean, name));\n        throw mapE;\n    }\n}","void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)","digraph cfg_serializeFields {\n	""1"" [label=""$stack15 = gen0 instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>""];\n	""3"" [label=""$stack17 = xmlNames[i]""];\n	""4"" [label=""$stack18 = virtualinvoke cdata.<java.util.BitSet: boolean get(int)>(i)""];\n	""5"" [label=""$stack19 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: boolean isUnwrappingSerializer()>()""];\n	""6"" [label=""$stack20 = virtualinvoke provider.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getActiveView()>()""];\n	""7"" [label=""$stack21 := @caughtexception""];\n	""8"" [label=""$stack22 = lengthof props""];\n	""9"" [label=""$stack23 = props[i]""];\n	""10"" [label=""$stack24 = new com.fasterxml.jackson.databind.JsonMappingException$Reference""];\n	""11"" [label=""$stack25 := @caughtexception""];\n	""12"" [label=""$stack26 = lengthof props""];\n	""13"" [label=""$stack27 = props[i]""];\n	""14"" [label=""attrCount = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""15"" [label=""bean := @parameter0: java.lang.Object""];\n	""16"" [label=""cdata = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata>""];\n	""17"" [label=""gen0 := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""i = 0""];\n	""26"" [label=""i = i + 1""];\n	""27"" [label=""if $stack15 != 0""];\n	""28"" [label=""if $stack16 == null""];\n	""29"" [label=""if $stack18 == 0""];\n	""30"" [label=""if $stack19 != 0""];\n	""31"" [label=""if $stack20 == null""];\n	""32"" [label=""if attrCount <= 0""];\n	""33"" [label=""if cdata == null""];\n	""34"" [label=""if i != $stack22""];\n	""35"" [label=""if i != $stack26""];\n	""36"" [label=""if i != attrCount""];\n	""37"" [label=""if i != textIndex""];\n	""38"" [label=""if i != textIndex""];\n	""39"" [label=""if i >= len""];\n	""40"" [label=""if isAttribute == 0""];\n	""41"" [label=""if prop == null""];\n	""42"" [label=""isAttribute = xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""43"" [label=""len = $stack21""];\n	""44"" [label=""len = $stack25""];\n	""45"" [label=""len = lengthof props""];\n	""46"" [label=""name = \""[anySetter]\""""];\n	""47"" [label=""name = virtualinvoke $stack23.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>()""];\n	""48"" [label=""prop = \""[anySetter]\""""];\n	""49"" [label=""prop = props[i]""];\n	""50"" [label=""prop = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>(gen0, \""Infinite recursion (StackOverflowError)\"")""];\n	""51"" [label=""prop = virtualinvoke $stack27.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>()""];\n	""52"" [label=""props = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>""];\n	""53"" [label=""props = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""54"" [label=""provider := @parameter2: com.fasterxml.jackson.databind.SerializerProvider""];\n	""55"" [label=""return""];\n	""56"" [label=""return""];\n	""57"" [label=""specialinvoke $stack24.<com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>(bean, name)""];\n	""58"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, gen0, provider)""];\n	""59"" [label=""textIndex = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex>""];\n	""60"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""61"" [label=""throw prop""];\n	""62"" [label=""virtualinvoke prop.<com.fasterxml.jackson.databind.JsonMappingException: void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference)>($stack24)""];\n	""63"" [label=""virtualinvoke prop.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, xgen, provider)""];\n	""64"" [label=""virtualinvoke prop.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, xgen, provider)""];\n	""65"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(provider, len, bean, prop)""];\n	""66"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(0)""];\n	""67"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(1)""];\n	""68"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsCData(boolean)>(0)""];\n	""69"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsCData(boolean)>(1)""];\n	""70"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsUnwrapped(boolean)>(0)""];\n	""71"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsUnwrapped(boolean)>(1)""];\n	""72"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextName(javax.xml.namespace.QName)>($stack17)""];\n	""73"" [label=""xgen = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen0""];\n	""74"" [label=""xmlNames = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""1"" -> ""27""[label=""cfg_next""];\n	""10"" -> ""57""[label=""cfg_next""];\n	""11"" -> ""44""[label=""cfg_next""];\n	""12"" -> ""35""[label=""cfg_next""];\n	""13"" -> ""51""[label=""cfg_next""];\n	""14"" -> ""42""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""45""[label=""cfg_next""];\n	""17"" -> ""54""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_goto""];\n	""19"" -> ""56""[label=""cfg_goto""];\n	""2"" -> ""28""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_except""];\n	""20"" -> ""38""[label=""cfg_goto""];\n	""20"" -> ""7""[label=""cfg_except""];\n	""21"" -> ""10""[label=""cfg_goto""];\n	""22"" -> ""65""[label=""cfg_goto""];\n	""23"" -> ""56""[label=""cfg_goto""];\n	""24"" -> ""11""[label=""cfg_except""];\n	""24"" -> ""39""[label=""cfg_goto""];\n	""24"" -> ""7""[label=""cfg_except""];\n	""25"" -> ""16""[label=""cfg_next""];\n	""26"" -> ""11""[label=""cfg_except""];\n	""26"" -> ""24""[label=""cfg_next""];\n	""26"" -> ""7""[label=""cfg_except""];\n	""27"" -> ""58""[label=""cfg_false""];\n	""27"" -> ""73""[label=""cfg_true""];\n	""28"" -> ""53""[label=""cfg_true""];\n	""28"" -> ""6""[label=""cfg_false""];\n	""29"" -> ""11""[label=""cfg_except""];\n	""29"" -> ""63""[label=""cfg_true""];\n	""29"" -> ""69""[label=""cfg_false""];\n	""29"" -> ""7""[label=""cfg_except""];\n	""3"" -> ""11""[label=""cfg_except""];\n	""3"" -> ""7""[label=""cfg_except""];\n	""3"" -> ""72""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_except""];\n	""30"" -> ""37""[label=""cfg_true""];\n	""30"" -> ""66""[label=""cfg_false""];\n	""30"" -> ""7""[label=""cfg_except""];\n	""31"" -> ""52""[label=""cfg_false""];\n	""31"" -> ""53""[label=""cfg_true""];\n	""32"" -> ""59""[label=""cfg_true""];\n	""32"" -> ""67""[label=""cfg_false""];\n	""33"" -> ""11""[label=""cfg_except""];\n	""33"" -> ""4""[label=""cfg_false""];\n	""33"" -> ""63""[label=""cfg_true""];\n	""33"" -> ""7""[label=""cfg_except""];\n	""34"" -> ""46""[label=""cfg_false""];\n	""34"" -> ""9""[label=""cfg_true""];\n	""35"" -> ""13""[label=""cfg_true""];\n	""35"" -> ""48""[label=""cfg_false""];\n	""36"" -> ""11""[label=""cfg_except""];\n	""36"" -> ""37""[label=""cfg_true""];\n	""36"" -> ""40""[label=""cfg_false""];\n	""36"" -> ""7""[label=""cfg_except""];\n	""37"" -> ""11""[label=""cfg_except""];\n	""37"" -> ""3""[label=""cfg_true""];\n	""37"" -> ""7""[label=""cfg_except""];\n	""37"" -> ""71""[label=""cfg_false""];\n	""38"" -> ""11""[label=""cfg_except""];\n	""38"" -> ""26""[label=""cfg_true""];\n	""38"" -> ""7""[label=""cfg_except""];\n	""38"" -> ""70""[label=""cfg_false""];\n	""39"" -> ""11""[label=""cfg_except""];\n	""39"" -> ""19""[label=""cfg_true""];\n	""39"" -> ""36""[label=""cfg_false""];\n	""39"" -> ""7""[label=""cfg_except""];\n	""4"" -> ""11""[label=""cfg_except""];\n	""4"" -> ""29""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_except""];\n	""40"" -> ""11""[label=""cfg_except""];\n	""40"" -> ""5""[label=""cfg_false""];\n	""40"" -> ""66""[label=""cfg_true""];\n	""40"" -> ""7""[label=""cfg_except""];\n	""41"" -> ""11""[label=""cfg_except""];\n	""41"" -> ""33""[label=""cfg_false""];\n	""41"" -> ""38""[label=""cfg_true""];\n	""41"" -> ""7""[label=""cfg_except""];\n	""42"" -> ""32""[label=""cfg_next""];\n	""43"" -> ""50""[label=""cfg_next""];\n	""44"" -> ""12""[label=""cfg_next""];\n	""45"" -> ""11""[label=""cfg_except""];\n	""45"" -> ""39""[label=""cfg_next""];\n	""45"" -> ""7""[label=""cfg_except""];\n	""46"" -> ""21""[label=""cfg_next""];\n	""47"" -> ""10""[label=""cfg_next""];\n	""48"" -> ""22""[label=""cfg_next""];\n	""49"" -> ""11""[label=""cfg_except""];\n	""49"" -> ""41""[label=""cfg_next""];\n	""49"" -> ""7""[label=""cfg_except""];\n	""5"" -> ""11""[label=""cfg_except""];\n	""5"" -> ""30""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_except""];\n	""50"" -> ""8""[label=""cfg_next""];\n	""51"" -> ""65""[label=""cfg_next""];\n	""52"" -> ""18""[label=""cfg_next""];\n	""53"" -> ""14""[label=""cfg_next""];\n	""54"" -> ""1""[label=""cfg_next""];\n	""57"" -> ""62""[label=""cfg_next""];\n	""58"" -> ""55""[label=""cfg_next""];\n	""59"" -> ""74""[label=""cfg_next""];\n	""6"" -> ""31""[label=""cfg_next""];\n	""60"" -> ""15""[label=""cfg_next""];\n	""62"" -> ""61""[label=""cfg_next""];\n	""63"" -> ""11""[label=""cfg_except""];\n	""63"" -> ""38""[label=""cfg_next""];\n	""63"" -> ""7""[label=""cfg_except""];\n	""64"" -> ""11""[label=""cfg_except""];\n	""64"" -> ""68""[label=""cfg_next""];\n	""64"" -> ""7""[label=""cfg_except""];\n	""65"" -> ""23""[label=""cfg_next""];\n	""66"" -> ""11""[label=""cfg_except""];\n	""66"" -> ""37""[label=""cfg_next""];\n	""66"" -> ""7""[label=""cfg_except""];\n	""67"" -> ""59""[label=""cfg_next""];\n	""68"" -> ""11""[label=""cfg_except""];\n	""68"" -> ""20""[label=""cfg_next""];\n	""68"" -> ""7""[label=""cfg_except""];\n	""69"" -> ""11""[label=""cfg_except""];\n	""69"" -> ""64""[label=""cfg_next""];\n	""69"" -> ""7""[label=""cfg_except""];\n	""7"" -> ""43""[label=""cfg_next""];\n	""70"" -> ""11""[label=""cfg_except""];\n	""70"" -> ""26""[label=""cfg_next""];\n	""70"" -> ""7""[label=""cfg_except""];\n	""71"" -> ""11""[label=""cfg_except""];\n	""71"" -> ""3""[label=""cfg_next""];\n	""71"" -> ""7""[label=""cfg_except""];\n	""72"" -> ""11""[label=""cfg_except""];\n	""72"" -> ""49""[label=""cfg_next""];\n	""72"" -> ""7""[label=""cfg_except""];\n	""73"" -> ""2""[label=""cfg_next""];\n	""74"" -> ""25""[label=""cfg_next""];\n	""8"" -> ""34""[label=""cfg_next""];\n	""9"" -> ""47""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeFieldsFiltered(Object,JsonGenerator,SerializerProvider)",Method,No Comment,"@Override\nprotected void serializeFieldsFiltered(Object bean, JsonGenerator gen0, SerializerProvider provider) throws IOException {\n    // 19-Aug-2013, tatu: During 'convertValue()', need to skip\n    if (!(gen0 instanceof ToXmlGenerator)) {\n        super.serializeFieldsFiltered(bean, gen0, provider);\n        return;\n    }\n    final ToXmlGenerator xgen = (ToXmlGenerator) gen0;\n    final BeanPropertyWriter[] props;\n    if (_filteredProps != null && provider.getActiveView() != null) {\n        props = _filteredProps;\n    } else {\n        props = _props;\n    }\n    final PropertyFilter filter = findPropertyFilter(provider, _propertyFilterId, bean);\n    // better also allow missing filter actually..\n    if (filter == null) {\n        serializeFields(bean, gen0, provider);\n        return;\n    }\n    final boolean isAttribute = xgen._nextIsAttribute;\n    final int attrCount = _attributeCount;\n    if (attrCount > 0) {\n        xgen.setNextIsAttribute(true);\n    }\n    final int textIndex = _textPropertyIndex;\n    final QName[] xmlNames = _xmlNames;\n    final BitSet cdata = _cdata;\n    int i = 0;\n    try {\n        for (final int len = props.length; i < len; ++i) {\n            // 28-jan-2014, pascal: we don't want to reset the attribute flag if we are an unwrapping serializer\n            // that started with nextIsAttribute to true because all properties should be unwrapped as attributes too.\n            if (i == attrCount && !(isAttribute && isUnwrappingSerializer())) {\n                xgen.setNextIsAttribute(false);\n            }\n            // also: if this is property to write as text (""unwrap""), need to:\n            if (i == textIndex) {\n                xgen.setNextIsUnwrapped(true);\n            }\n            xgen.setNextName(xmlNames[i]);\n            BeanPropertyWriter prop = props[i];\n            if (prop != null) {\n                // can have nulls in filtered list\n                if ((cdata != null) && cdata.get(i)) {\n                    xgen.setNextIsCData(true);\n                    filter.serializeAsField(bean, xgen, provider, prop);\n                    xgen.setNextIsCData(false);\n                } else {\n                    filter.serializeAsField(bean, xgen, provider, prop);\n                }\n            }\n            // Reset to avoid next value being written as unwrapped,\n            // for example when property is suppressed\n            if (i == textIndex) {\n                xgen.setNextIsUnwrapped(false);\n            }\n        }\n    } catch (Exception e) {\n        String name = (i == props.length) ? ""[anySetter]"" : props[i].getName();\n        wrapAndThrow(provider, e, bean, name);\n    } catch (StackOverflowError e) {\n        JsonMappingException mapE = JsonMappingException.from(gen0, ""Infinite recursion (StackOverflowError)"", e);\n        String name = (i == props.length) ? ""[anySetter]"" : props[i].getName();\n        mapE.prependPath(new JsonMappingException.Reference(bean, name));\n        throw mapE;\n    }\n}","void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)","digraph cfg_serializeFieldsFiltered {\n	""1"" [label=""$stack16 = gen0 instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>""];\n	""3"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.lang.Object _propertyFilterId>""];\n	""4"" [label=""$stack19 = xmlNames[i]""];\n	""5"" [label=""$stack20 = virtualinvoke cdata.<java.util.BitSet: boolean get(int)>(i)""];\n	""6"" [label=""$stack21 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: boolean isUnwrappingSerializer()>()""];\n	""7"" [label=""$stack22 = virtualinvoke provider.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class getActiveView()>()""];\n	""8"" [label=""$stack23 := @caughtexception""];\n	""9"" [label=""$stack24 = lengthof props""];\n	""10"" [label=""$stack25 = props[i]""];\n	""11"" [label=""$stack26 = new com.fasterxml.jackson.databind.JsonMappingException$Reference""];\n	""12"" [label=""$stack27 := @caughtexception""];\n	""13"" [label=""$stack28 = lengthof props""];\n	""14"" [label=""$stack29 = props[i]""];\n	""15"" [label=""attrCount = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""16"" [label=""bean := @parameter0: java.lang.Object""];\n	""17"" [label=""cdata = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata>""];\n	""18"" [label=""filter = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)>(provider, $stack18, bean)""];\n	""19"" [label=""gen0 := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""goto""];\n	""26"" [label=""goto""];\n	""27"" [label=""i = 0""];\n	""28"" [label=""i = i + 1""];\n	""29"" [label=""if $stack16 != 0""];\n	""30"" [label=""if $stack17 == null""];\n	""31"" [label=""if $stack20 == 0""];\n	""32"" [label=""if $stack21 != 0""];\n	""33"" [label=""if $stack22 == null""];\n	""34"" [label=""if attrCount <= 0""];\n	""35"" [label=""if cdata == null""];\n	""36"" [label=""if filter != null""];\n	""37"" [label=""if i != $stack24""];\n	""38"" [label=""if i != $stack28""];\n	""39"" [label=""if i != attrCount""];\n	""40"" [label=""if i != textIndex""];\n	""41"" [label=""if i != textIndex""];\n	""42"" [label=""if i >= len""];\n	""43"" [label=""if isAttribute == 0""];\n	""44"" [label=""if prop == null""];\n	""45"" [label=""interfaceinvoke filter.<com.fasterxml.jackson.databind.ser.PropertyFilter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter)>(bean, xgen, provider, prop)""];\n	""46"" [label=""interfaceinvoke filter.<com.fasterxml.jackson.databind.ser.PropertyFilter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter)>(bean, xgen, provider, prop)""];\n	""47"" [label=""isAttribute = xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""48"" [label=""len = $stack23""];\n	""49"" [label=""len = $stack27""];\n	""50"" [label=""len = lengthof props""];\n	""51"" [label=""name = \""[anySetter]\""""];\n	""52"" [label=""name = virtualinvoke $stack25.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>()""];\n	""53"" [label=""prop = \""[anySetter]\""""];\n	""54"" [label=""prop = props[i]""];\n	""55"" [label=""prop = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)>(gen0, \""Infinite recursion (StackOverflowError)\"", len)""];\n	""56"" [label=""prop = virtualinvoke $stack29.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>()""];\n	""57"" [label=""props = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>""];\n	""58"" [label=""props = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""59"" [label=""provider := @parameter2: com.fasterxml.jackson.databind.SerializerProvider""];\n	""60"" [label=""return""];\n	""61"" [label=""return""];\n	""62"" [label=""return""];\n	""63"" [label=""specialinvoke $stack26.<com.fasterxml.jackson.databind.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>(bean, name)""];\n	""64"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, gen0, provider)""];\n	""65"" [label=""textIndex = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex>""];\n	""66"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""67"" [label=""throw prop""];\n	""68"" [label=""virtualinvoke prop.<com.fasterxml.jackson.databind.JsonMappingException: void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference)>($stack26)""];\n	""69"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, gen0, provider)""];\n	""70"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(provider, len, bean, prop)""];\n	""71"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(0)""];\n	""72"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(1)""];\n	""73"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsCData(boolean)>(0)""];\n	""74"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsCData(boolean)>(1)""];\n	""75"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsUnwrapped(boolean)>(0)""];\n	""76"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsUnwrapped(boolean)>(1)""];\n	""77"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextName(javax.xml.namespace.QName)>($stack19)""];\n	""78"" [label=""xgen = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen0""];\n	""79"" [label=""xmlNames = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""1"" -> ""29""[label=""cfg_next""];\n	""10"" -> ""52""[label=""cfg_next""];\n	""11"" -> ""63""[label=""cfg_next""];\n	""12"" -> ""49""[label=""cfg_next""];\n	""13"" -> ""38""[label=""cfg_next""];\n	""14"" -> ""56""[label=""cfg_next""];\n	""15"" -> ""34""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_next""];\n	""17"" -> ""27""[label=""cfg_next""];\n	""18"" -> ""36""[label=""cfg_next""];\n	""19"" -> ""59""[label=""cfg_next""];\n	""2"" -> ""30""[label=""cfg_next""];\n	""20"" -> ""3""[label=""cfg_goto""];\n	""21"" -> ""62""[label=""cfg_goto""];\n	""22"" -> ""12""[label=""cfg_except""];\n	""22"" -> ""41""[label=""cfg_goto""];\n	""22"" -> ""8""[label=""cfg_except""];\n	""23"" -> ""11""[label=""cfg_goto""];\n	""24"" -> ""70""[label=""cfg_goto""];\n	""25"" -> ""62""[label=""cfg_goto""];\n	""26"" -> ""12""[label=""cfg_except""];\n	""26"" -> ""42""[label=""cfg_goto""];\n	""26"" -> ""8""[label=""cfg_except""];\n	""27"" -> ""50""[label=""cfg_next""];\n	""28"" -> ""12""[label=""cfg_except""];\n	""28"" -> ""26""[label=""cfg_next""];\n	""28"" -> ""8""[label=""cfg_except""];\n	""29"" -> ""64""[label=""cfg_false""];\n	""29"" -> ""78""[label=""cfg_true""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""30"" -> ""58""[label=""cfg_true""];\n	""30"" -> ""7""[label=""cfg_false""];\n	""31"" -> ""12""[label=""cfg_except""];\n	""31"" -> ""45""[label=""cfg_true""];\n	""31"" -> ""74""[label=""cfg_false""];\n	""31"" -> ""8""[label=""cfg_except""];\n	""32"" -> ""12""[label=""cfg_except""];\n	""32"" -> ""40""[label=""cfg_true""];\n	""32"" -> ""71""[label=""cfg_false""];\n	""32"" -> ""8""[label=""cfg_except""];\n	""33"" -> ""57""[label=""cfg_false""];\n	""33"" -> ""58""[label=""cfg_true""];\n	""34"" -> ""65""[label=""cfg_true""];\n	""34"" -> ""72""[label=""cfg_false""];\n	""35"" -> ""12""[label=""cfg_except""];\n	""35"" -> ""45""[label=""cfg_true""];\n	""35"" -> ""5""[label=""cfg_false""];\n	""35"" -> ""8""[label=""cfg_except""];\n	""36"" -> ""47""[label=""cfg_true""];\n	""36"" -> ""69""[label=""cfg_false""];\n	""37"" -> ""10""[label=""cfg_true""];\n	""37"" -> ""51""[label=""cfg_false""];\n	""38"" -> ""14""[label=""cfg_true""];\n	""38"" -> ""53""[label=""cfg_false""];\n	""39"" -> ""12""[label=""cfg_except""];\n	""39"" -> ""40""[label=""cfg_true""];\n	""39"" -> ""43""[label=""cfg_false""];\n	""39"" -> ""8""[label=""cfg_except""];\n	""4"" -> ""12""[label=""cfg_except""];\n	""4"" -> ""77""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_except""];\n	""40"" -> ""12""[label=""cfg_except""];\n	""40"" -> ""4""[label=""cfg_true""];\n	""40"" -> ""76""[label=""cfg_false""];\n	""40"" -> ""8""[label=""cfg_except""];\n	""41"" -> ""12""[label=""cfg_except""];\n	""41"" -> ""28""[label=""cfg_true""];\n	""41"" -> ""75""[label=""cfg_false""];\n	""41"" -> ""8""[label=""cfg_except""];\n	""42"" -> ""12""[label=""cfg_except""];\n	""42"" -> ""21""[label=""cfg_true""];\n	""42"" -> ""39""[label=""cfg_false""];\n	""42"" -> ""8""[label=""cfg_except""];\n	""43"" -> ""12""[label=""cfg_except""];\n	""43"" -> ""6""[label=""cfg_false""];\n	""43"" -> ""71""[label=""cfg_true""];\n	""43"" -> ""8""[label=""cfg_except""];\n	""44"" -> ""12""[label=""cfg_except""];\n	""44"" -> ""35""[label=""cfg_false""];\n	""44"" -> ""41""[label=""cfg_true""];\n	""44"" -> ""8""[label=""cfg_except""];\n	""45"" -> ""12""[label=""cfg_except""];\n	""45"" -> ""41""[label=""cfg_next""];\n	""45"" -> ""8""[label=""cfg_except""];\n	""46"" -> ""12""[label=""cfg_except""];\n	""46"" -> ""73""[label=""cfg_next""];\n	""46"" -> ""8""[label=""cfg_except""];\n	""47"" -> ""15""[label=""cfg_next""];\n	""48"" -> ""55""[label=""cfg_next""];\n	""49"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_except""];\n	""5"" -> ""31""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_except""];\n	""50"" -> ""12""[label=""cfg_except""];\n	""50"" -> ""42""[label=""cfg_next""];\n	""50"" -> ""8""[label=""cfg_except""];\n	""51"" -> ""23""[label=""cfg_next""];\n	""52"" -> ""11""[label=""cfg_next""];\n	""53"" -> ""24""[label=""cfg_next""];\n	""54"" -> ""12""[label=""cfg_except""];\n	""54"" -> ""44""[label=""cfg_next""];\n	""54"" -> ""8""[label=""cfg_except""];\n	""55"" -> ""9""[label=""cfg_next""];\n	""56"" -> ""70""[label=""cfg_next""];\n	""57"" -> ""20""[label=""cfg_next""];\n	""58"" -> ""3""[label=""cfg_next""];\n	""59"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_except""];\n	""6"" -> ""32""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_except""];\n	""63"" -> ""68""[label=""cfg_next""];\n	""64"" -> ""60""[label=""cfg_next""];\n	""65"" -> ""79""[label=""cfg_next""];\n	""66"" -> ""16""[label=""cfg_next""];\n	""68"" -> ""67""[label=""cfg_next""];\n	""69"" -> ""61""[label=""cfg_next""];\n	""7"" -> ""33""[label=""cfg_next""];\n	""70"" -> ""25""[label=""cfg_next""];\n	""71"" -> ""12""[label=""cfg_except""];\n	""71"" -> ""40""[label=""cfg_next""];\n	""71"" -> ""8""[label=""cfg_except""];\n	""72"" -> ""65""[label=""cfg_next""];\n	""73"" -> ""12""[label=""cfg_except""];\n	""73"" -> ""22""[label=""cfg_next""];\n	""73"" -> ""8""[label=""cfg_except""];\n	""74"" -> ""12""[label=""cfg_except""];\n	""74"" -> ""46""[label=""cfg_next""];\n	""74"" -> ""8""[label=""cfg_except""];\n	""75"" -> ""12""[label=""cfg_except""];\n	""75"" -> ""28""[label=""cfg_next""];\n	""75"" -> ""8""[label=""cfg_except""];\n	""76"" -> ""12""[label=""cfg_except""];\n	""76"" -> ""4""[label=""cfg_next""];\n	""76"" -> ""8""[label=""cfg_except""];\n	""77"" -> ""12""[label=""cfg_except""];\n	""77"" -> ""54""[label=""cfg_next""];\n	""77"" -> ""8""[label=""cfg_except""];\n	""78"" -> ""2""[label=""cfg_next""];\n	""79"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""48""[label=""cfg_next""];\n	""9"" -> ""37""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.serializeWithType(Object,JsonGenerator,SerializerProvider,TypeSerializer)",Method,No Comment,"@Override\npublic void serializeWithType(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer) throws IOException {\n    if (_objectIdWriter != null) {\n        _serializeWithObjectId(bean, gen, provider, typeSer);\n        return;\n    }\n    /* Ok: let's serialize type id as attribute, but if (and only if!)\n         * we are using AS_PROPERTY\n         */\n    if (typeSer.getTypeInclusion() == JsonTypeInfo.As.PROPERTY) {\n        ToXmlGenerator xgen = (ToXmlGenerator) gen;\n        xgen.setNextIsAttribute(true);\n        super.serializeWithType(bean, gen, provider, typeSer);\n        if (_attributeCount == 0) {\n            // if no attributes, need to reset\n            xgen.setNextIsAttribute(false);\n        }\n    } else {\n        super.serializeWithType(bean, gen, provider, typeSer);\n    }\n}","void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)","digraph cfg_serializeWithType {\n	""1"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>""];\n	""2"" [label=""$stack7 = <com.fasterxml.jackson.annotation.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY>""];\n	""3"" [label=""$stack8 = virtualinvoke typeSer.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion()>()""];\n	""4"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""5"" [label=""bean := @parameter0: java.lang.Object""];\n	""6"" [label=""gen := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack6 == null""];\n	""9"" [label=""if $stack8 != $stack7""];\n	""10"" [label=""if $stack9 != 0""];\n	""11"" [label=""provider := @parameter2: com.fasterxml.jackson.databind.SerializerProvider""];\n	""12"" [label=""return""];\n	""13"" [label=""return""];\n	""14"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(bean, gen, provider, typeSer)""];\n	""15"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(bean, gen, provider, typeSer)""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""17"" [label=""typeSer := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer""];\n	""18"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(bean, gen, provider, typeSer)""];\n	""19"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(0)""];\n	""20"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(1)""];\n	""21"" [label=""xgen = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_false""];\n	""10"" -> ""7""[label=""cfg_true""];\n	""11"" -> ""17""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""15"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""19"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_goto""];\n	""8"" -> ""18""[label=""cfg_false""];\n	""8"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""21""[label=""cfg_false""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._serializeObjectId(Object,JsonGenerator,SerializerProvider,TypeSerializer,WritableObjectId)",Method,No Comment,"@Override\nprotected void _serializeObjectId(Object bean, JsonGenerator gen, SerializerProvider provider, TypeSerializer typeSer, WritableObjectId objectId) throws IOException {\n    // Ok: let's serialize type id as attribute, but if (and only if!) we are using AS_PROPERTY\n    if (typeSer.getTypeInclusion() == JsonTypeInfo.As.PROPERTY) {\n        ToXmlGenerator xgen = (ToXmlGenerator) gen;\n        xgen.setNextIsAttribute(true);\n        super._serializeObjectId(bean, gen, provider, typeSer, objectId);\n        if (_attributeCount == 0) {\n            // if no attributes, need to reset\n            xgen.setNextIsAttribute(false);\n        }\n    } else {\n        super._serializeObjectId(bean, gen, provider, typeSer, objectId);\n    }\n}","void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)","digraph cfg__serializeObjectId {\n	""1"" [label=""$stack7 = <com.fasterxml.jackson.annotation.JsonTypeInfo$As: com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY>""];\n	""2"" [label=""$stack8 = virtualinvoke typeSer.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion()>()""];\n	""3"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""4"" [label=""bean := @parameter0: java.lang.Object""];\n	""5"" [label=""gen := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack8 != $stack7""];\n	""8"" [label=""if $stack9 != 0""];\n	""9"" [label=""objectId := @parameter4: com.fasterxml.jackson.databind.ser.impl.WritableObjectId""];\n	""10"" [label=""provider := @parameter2: com.fasterxml.jackson.databind.SerializerProvider""];\n	""11"" [label=""return""];\n	""12"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)>(bean, gen, provider, typeSer, objectId)""];\n	""13"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void _serializeObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.ser.impl.WritableObjectId)>(bean, gen, provider, typeSer, objectId)""];\n	""14"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""15"" [label=""typeSer := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer""];\n	""16"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(0)""];\n	""17"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(1)""];\n	""18"" [label=""xgen = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""3""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""15"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""17"" -> ""13""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""18""[label=""cfg_false""];\n	""8"" -> ""16""[label=""cfg_false""];\n	""8"" -> ""6""[label=""cfg_true""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._isAttribute(BeanPropertyWriter),Method,No Comment,protected static boolean _isAttribute(BeanPropertyWriter bpw) {\n    XmlInfo info = (XmlInfo) bpw.getInternalSetting(KEY_XML_INFO);\n    return (info != null) && info.isAttribute();\n},boolean _isAttribute(com.fasterxml.jackson.databind.ser.BeanPropertyWriter),"digraph cfg__isAttribute {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.lang.String KEY_XML_INFO>""];\n	""2"" [label=""$stack3 = virtualinvoke bpw.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object getInternalSetting(java.lang.Object)>($stack2)""];\n	""3"" [label=""$stack4 = virtualinvoke info.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean isAttribute()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""bpw := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if info == null""];\n	""10"" [label=""info = (com.fasterxml.jackson.dataformat.xml.util.XmlInfo) $stack3""];\n	""11"" [label=""return $stack5""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""4""[label=""cfg_true""];\n}\n","protected , static "
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._isCData(BeanPropertyWriter),Method,No Comment,protected static boolean _isCData(BeanPropertyWriter bpw) {\n    XmlInfo info = (XmlInfo) bpw.getInternalSetting(KEY_XML_INFO);\n    return (info != null) && info.isCData();\n},boolean _isCData(com.fasterxml.jackson.databind.ser.BeanPropertyWriter),"digraph cfg__isCData {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.lang.String KEY_XML_INFO>""];\n	""2"" [label=""$stack3 = virtualinvoke bpw.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object getInternalSetting(java.lang.Object)>($stack2)""];\n	""3"" [label=""$stack4 = virtualinvoke info.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean isCData()>()""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""bpw := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""if info == null""];\n	""10"" [label=""info = (com.fasterxml.jackson.dataformat.xml.util.XmlInfo) $stack3""];\n	""11"" [label=""return $stack5""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""4""[label=""cfg_true""];\n}\n","protected , static "
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(BeanPropertyWriter[],BeanPropertyWriter[])",Method,* Method for re-sorting lists of bean properties such that attributes are strictly\n     * written before elements.,"protected static int _orderAttributesFirst(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties) {\n    int attrCount = 0;\n    for (int i = 0, len = properties.length; i < len; ++i) {\n        BeanPropertyWriter bpw = properties[i];\n        if (!_isAttribute(bpw)) {\n            continue;\n        }\n        // Move attribute a few places down as necessary\n        int moveBy = i - attrCount;\n        if (moveBy > 0) {\n            System.arraycopy(properties, attrCount, properties, attrCount + 1, moveBy);\n            properties[attrCount] = bpw;\n            if (filteredProperties != null) {\n                BeanPropertyWriter fbpw = filteredProperties[i];\n                System.arraycopy(filteredProperties, attrCount, filteredProperties, attrCount + 1, moveBy);\n                filteredProperties[attrCount] = fbpw;\n            }\n        }\n        ++attrCount;\n    }\n    return attrCount;\n}","int _orderAttributesFirst(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])","digraph cfg__orderAttributesFirst {\n	""1"" [label=""$stack10 = attrCount + 1""];\n	""2"" [label=""$stack8 = staticinvoke <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: boolean _isAttribute(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(bpw)""];\n	""3"" [label=""$stack9 = attrCount + 1""];\n	""4"" [label=""attrCount = 0""];\n	""5"" [label=""attrCount = attrCount + 1""];\n	""6"" [label=""bpw = properties[i]""];\n	""7"" [label=""fbpw = filteredProperties[i]""];\n	""8"" [label=""filteredProperties := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""9"" [label=""filteredProperties[attrCount] = fbpw""];\n	""10"" [label=""goto""];\n	""11"" [label=""goto""];\n	""12"" [label=""i = 0""];\n	""13"" [label=""i = i + 1""];\n	""14"" [label=""if $stack8 != 0""];\n	""15"" [label=""if filteredProperties == null""];\n	""16"" [label=""if i >= len""];\n	""17"" [label=""if moveBy <= 0""];\n	""18"" [label=""len = lengthof properties""];\n	""19"" [label=""moveBy = i - attrCount""];\n	""20"" [label=""properties := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""21"" [label=""properties[attrCount] = bpw""];\n	""22"" [label=""return attrCount""];\n	""23"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(filteredProperties, attrCount, filteredProperties, $stack10, moveBy)""];\n	""24"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(properties, attrCount, properties, $stack9, moveBy)""];\n	""1"" -> ""23""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_goto""];\n	""11"" -> ""16""[label=""cfg_goto""];\n	""12"" -> ""18""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_false""];\n	""14"" -> ""19""[label=""cfg_true""];\n	""15"" -> ""5""[label=""cfg_true""];\n	""15"" -> ""7""[label=""cfg_false""];\n	""16"" -> ""22""[label=""cfg_true""];\n	""16"" -> ""6""[label=""cfg_false""];\n	""17"" -> ""3""[label=""cfg_false""];\n	""17"" -> ""5""[label=""cfg_true""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""8""[label=""cfg_next""];\n	""21"" -> ""15""[label=""cfg_next""];\n	""23"" -> ""9""[label=""cfg_next""];\n	""24"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n","protected , static "
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(BeanSerializerBase),Constructor,No Comment,"public XmlBeanSerializerBase(BeanSerializerBase src) {\n    super(src);\n    // Then make sure attributes are sorted before elements, keep track\n    // of how many there are altogether\n    int attrCount = 0;\n    for (BeanPropertyWriter bpw : _props) {\n        if (_isAttribute(bpw)) {\n            // Yup: let's build re-ordered list then\n            attrCount = _orderAttributesFirst(_props, _filteredProps);\n            break;\n        }\n    }\n    _attributeCount = attrCount;\n    // also: pre-compute need, if any, for CDATA handling:\n    BitSet cdata = null;\n    for (int i = 0, len = _props.length; i < len; ++i) {\n        BeanPropertyWriter bpw = _props[i];\n        if (_isCData(bpw)) {\n            if (cdata == null) {\n                cdata = new BitSet(len);\n            }\n            cdata.set(i);\n        }\n    }\n    _cdata = cdata;\n    // And then collect namespace information\n    _xmlNames = new QName[_props.length];\n    int textIndex = -1;\n    for (int i = 0, len = _props.length; i < len; ++i) {\n        BeanPropertyWriter bpw = _props[i];\n        XmlInfo info = (XmlInfo) bpw.getInternalSetting(KEY_XML_INFO);\n        String ns = null;\n        if (info != null) {\n            ns = info.getNamespace();\n            if (textIndex < 0 && info.isText()) {\n                textIndex = i;\n            }\n        }\n        _xmlNames[i] = new QName((ns == null) ? """" : ns, bpw.getName());\n    }\n    _textPropertyIndex = textIndex;\n}",void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase),"digraph cfg_init {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""3"" [label=""$stack12 = lengthof $stack11""];\n	""4"" [label=""$stack13 = newarray (javax.xml.namespace.QName)[$stack12]""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""7"" [label=""$stack16 = <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.lang.String KEY_XML_INFO>""];\n	""8"" [label=""$stack17 = virtualinvoke bpw_1.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Object getInternalSetting(java.lang.Object)>($stack16)""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""10"" [label=""$stack18[len] = $stack20""];\n	""11"" [label=""$stack19 = virtualinvoke bpw_1.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>()""];\n	""12"" [label=""$stack20 = new javax.xml.namespace.QName""];\n	""13"" [label=""$stack21 = \""\""""];\n	""14"" [label=""$stack21 = ns""];\n	""15"" [label=""$stack22 = virtualinvoke info.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: boolean isText()>()""];\n	""16"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""17"" [label=""$stack24 = staticinvoke <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: boolean _isCData(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(bpw)""];\n	""18"" [label=""$stack25 = new java.util.BitSet""];\n	""19"" [label=""$stack26 = staticinvoke <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: boolean _isAttribute(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(bpw)""];\n	""20"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps>""];\n	""21"" [label=""$stack28 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""22"" [label=""attrCount = 0""];\n	""23"" [label=""attrCount = staticinvoke <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _orderAttributesFirst(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>($stack28, $stack27)""];\n	""24"" [label=""bpw = $stack23[i]""];\n	""25"" [label=""bpw = cdata[len]""];\n	""26"" [label=""bpw = lengthof $stack14""];\n	""27"" [label=""bpw_1 = $stack15[len]""];\n	""28"" [label=""cdata = $stack25""];\n	""29"" [label=""cdata = null""];\n	""30"" [label=""cdata = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props>""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""i = -1""];\n	""37"" [label=""i = 0""];\n	""38"" [label=""i = i + 1""];\n	""39"" [label=""i = len""];\n	""40"" [label=""i = lengthof cdata""];\n	""41"" [label=""if $stack22 == 0""];\n	""42"" [label=""if $stack24 == 0""];\n	""43"" [label=""if $stack26 == 0""];\n	""44"" [label=""if cdata != null""];\n	""45"" [label=""if i >= 0""];\n	""46"" [label=""if i >= len""];\n	""47"" [label=""if info == null""];\n	""48"" [label=""if len >= bpw""];\n	""49"" [label=""if len >= i""];\n	""50"" [label=""if ns != null""];\n	""51"" [label=""info = (com.fasterxml.jackson.dataformat.xml.util.XmlInfo) $stack17""];\n	""52"" [label=""len = 0""];\n	""53"" [label=""len = 0""];\n	""54"" [label=""len = len + 1""];\n	""55"" [label=""len = len + 1""];\n	""56"" [label=""len = lengthof $stack10""];\n	""57"" [label=""ns = null""];\n	""58"" [label=""ns = virtualinvoke info.<com.fasterxml.jackson.dataformat.xml.util.XmlInfo: java.lang.String getNamespace()>()""];\n	""59"" [label=""return""];\n	""60"" [label=""specialinvoke $stack20.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($stack21, $stack19)""];\n	""61"" [label=""specialinvoke $stack25.<java.util.BitSet: void <init>(int)>(len)""];\n	""62"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)>(src)""];\n	""63"" [label=""src := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase""];\n	""64"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""65"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount> = attrCount""];\n	""66"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex> = i""];\n	""67"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata> = cdata""];\n	""68"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames> = $stack13""];\n	""69"" [label=""virtualinvoke cdata.<java.util.BitSet: void set(int)>(i)""];\n	""1"" -> ""56""[label=""cfg_next""];\n	""10"" -> ""55""[label=""cfg_next""];\n	""11"" -> ""60""[label=""cfg_next""];\n	""12"" -> ""50""[label=""cfg_next""];\n	""13"" -> ""34""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""41""[label=""cfg_next""];\n	""16"" -> ""24""[label=""cfg_next""];\n	""17"" -> ""42""[label=""cfg_next""];\n	""18"" -> ""61""[label=""cfg_next""];\n	""19"" -> ""43""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""30""[label=""cfg_next""];\n	""23"" -> ""31""[label=""cfg_next""];\n	""24"" -> ""17""[label=""cfg_next""];\n	""25"" -> ""19""[label=""cfg_next""];\n	""26"" -> ""48""[label=""cfg_next""];\n	""27"" -> ""7""[label=""cfg_next""];\n	""28"" -> ""69""[label=""cfg_next""];\n	""29"" -> ""37""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""40""[label=""cfg_next""];\n	""31"" -> ""65""[label=""cfg_goto""];\n	""32"" -> ""49""[label=""cfg_goto""];\n	""33"" -> ""46""[label=""cfg_goto""];\n	""34"" -> ""11""[label=""cfg_goto""];\n	""35"" -> ""48""[label=""cfg_goto""];\n	""36"" -> ""53""[label=""cfg_next""];\n	""37"" -> ""1""[label=""cfg_next""];\n	""38"" -> ""33""[label=""cfg_next""];\n	""39"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""68""[label=""cfg_next""];\n	""40"" -> ""52""[label=""cfg_next""];\n	""41"" -> ""39""[label=""cfg_false""];\n	""41"" -> ""9""[label=""cfg_true""];\n	""42"" -> ""38""[label=""cfg_true""];\n	""42"" -> ""44""[label=""cfg_false""];\n	""43"" -> ""21""[label=""cfg_false""];\n	""43"" -> ""54""[label=""cfg_true""];\n	""44"" -> ""18""[label=""cfg_false""];\n	""44"" -> ""69""[label=""cfg_true""];\n	""45"" -> ""15""[label=""cfg_false""];\n	""45"" -> ""9""[label=""cfg_true""];\n	""46"" -> ""16""[label=""cfg_false""];\n	""46"" -> ""67""[label=""cfg_true""];\n	""47"" -> ""58""[label=""cfg_false""];\n	""47"" -> ""9""[label=""cfg_true""];\n	""48"" -> ""6""[label=""cfg_false""];\n	""48"" -> ""66""[label=""cfg_true""];\n	""49"" -> ""25""[label=""cfg_false""];\n	""49"" -> ""65""[label=""cfg_true""];\n	""5"" -> ""26""[label=""cfg_next""];\n	""50"" -> ""13""[label=""cfg_false""];\n	""50"" -> ""14""[label=""cfg_true""];\n	""51"" -> ""57""[label=""cfg_next""];\n	""52"" -> ""49""[label=""cfg_next""];\n	""53"" -> ""5""[label=""cfg_next""];\n	""54"" -> ""32""[label=""cfg_next""];\n	""55"" -> ""35""[label=""cfg_next""];\n	""56"" -> ""46""[label=""cfg_next""];\n	""57"" -> ""47""[label=""cfg_next""];\n	""58"" -> ""45""[label=""cfg_next""];\n	""6"" -> ""27""[label=""cfg_next""];\n	""60"" -> ""10""[label=""cfg_next""];\n	""61"" -> ""28""[label=""cfg_next""];\n	""62"" -> ""22""[label=""cfg_next""];\n	""63"" -> ""62""[label=""cfg_next""];\n	""64"" -> ""63""[label=""cfg_next""];\n	""65"" -> ""29""[label=""cfg_next""];\n	""66"" -> ""59""[label=""cfg_next""];\n	""67"" -> ""2""[label=""cfg_next""];\n	""68"" -> ""36""[label=""cfg_next""];\n	""69"" -> ""38""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""51""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,ObjectIdWriter)",Constructor,No Comment,"protected XmlBeanSerializerBase(XmlBeanSerializerBase src, ObjectIdWriter objectIdWriter) {\n    super(src, objectIdWriter);\n    _attributeCount = src._attributeCount;\n    _textPropertyIndex = src._textPropertyIndex;\n    _xmlNames = src._xmlNames;\n    _cdata = src._cdata;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)","digraph cfg_init {\n	""1"" [label=""$stack3 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""2"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex>""];\n	""3"" [label=""$stack5 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""4"" [label=""$stack6 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata>""];\n	""5"" [label=""objectIdWriter := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""6"" [label=""return""];\n	""7"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(src, objectIdWriter)""];\n	""8"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount> = $stack3""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex> = $stack4""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata> = $stack6""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames> = $stack5""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,ObjectIdWriter,Object)",Constructor,No Comment,"protected XmlBeanSerializerBase(XmlBeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId) {\n    super(src, objectIdWriter, filterId);\n    _attributeCount = src._attributeCount;\n    _textPropertyIndex = src._textPropertyIndex;\n    _xmlNames = src._xmlNames;\n    _cdata = src._cdata;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""2"" [label=""$stack5 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex>""];\n	""3"" [label=""$stack6 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""4"" [label=""$stack7 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata>""];\n	""5"" [label=""filterId := @parameter2: java.lang.Object""];\n	""6"" [label=""objectIdWriter := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""7"" [label=""return""];\n	""8"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(src, objectIdWriter, filterId)""];\n	""9"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount> = $stack4""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex> = $stack5""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata> = $stack7""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames> = $stack6""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,Set,Set)",Constructor,No Comment,"protected XmlBeanSerializerBase(XmlBeanSerializerBase src, Set<String> toIgnore, Set<String> toInclude) {\n    super(src, toIgnore, toInclude);\n    _attributeCount = src._attributeCount;\n    _textPropertyIndex = src._textPropertyIndex;\n    _xmlNames = src._xmlNames;\n    _cdata = src._cdata;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,java.util.Set,java.util.Set)","digraph cfg_init {\n	""1"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""2"" [label=""$stack5 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex>""];\n	""3"" [label=""$stack6 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""4"" [label=""$stack7 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata>""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(src, toIgnore, toInclude)""];\n	""7"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount> = $stack4""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex> = $stack5""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata> = $stack7""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames> = $stack6""];\n	""13"" [label=""toIgnore := @parameter1: java.util.Set""];\n	""14"" [label=""toInclude := @parameter2: java.util.Set""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,NameTransformer)",Constructor,No Comment,"public XmlBeanSerializerBase(XmlBeanSerializerBase src, NameTransformer transformer) {\n    super(src, transformer);\n    _attributeCount = src._attributeCount;\n    _textPropertyIndex = src._textPropertyIndex;\n    _xmlNames = src._xmlNames;\n    _cdata = src._cdata;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)","digraph cfg_init {\n	""1"" [label=""$stack3 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""2"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex>""];\n	""3"" [label=""$stack5 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""4"" [label=""$stack6 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata>""];\n	""5"" [label=""return""];\n	""6"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>(src, transformer)""];\n	""7"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount> = $stack3""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex> = $stack4""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata> = $stack6""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames> = $stack5""];\n	""13"" [label=""transformer := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""10""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase.<init>(XmlBeanSerializerBase,BeanPropertyWriter[],BeanPropertyWriter[])",Constructor,@since 2.11.1,"protected XmlBeanSerializerBase(XmlBeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties) {\n    super(src, properties, filteredProperties);\n    _attributeCount = src._attributeCount;\n    _textPropertyIndex = src._textPropertyIndex;\n    _xmlNames = src._xmlNames;\n    _cdata = src._cdata;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])","digraph cfg_init {\n	""1"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount>""];\n	""2"" [label=""$stack5 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex>""];\n	""3"" [label=""$stack6 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames>""];\n	""4"" [label=""$stack7 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata>""];\n	""5"" [label=""filteredProperties := @parameter2: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""6"" [label=""properties := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""7"" [label=""return""];\n	""8"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(src, properties, filteredProperties)""];\n	""9"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _attributeCount> = $stack4""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: int _textPropertyIndex> = $stack5""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: java.util.BitSet _cdata> = $stack7""];\n	""14"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: javax.xml.namespace.QName[] _xmlNames> = $stack6""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""2""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""7""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.copy(),Method,No Comment,@Override\npublic DefaultSerializerProvider copy() {\n    return new XmlSerializerProvider(this);\n},com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy(),"digraph cfg_copy {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider)>(this)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.withCaches(CacheProvider),Method,No Comment,"@Override\npublic DefaultSerializerProvider withCaches(CacheProvider cacheProvider) {\n    return new XmlSerializerProvider(this, cacheProvider);\n}",com.fasterxml.jackson.databind.ser.DefaultSerializerProvider withCaches(com.fasterxml.jackson.databind.cfg.CacheProvider),"digraph cfg_withCaches {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""2"" [label=""cacheProvider := @parameter0: com.fasterxml.jackson.databind.cfg.CacheProvider""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider,com.fasterxml.jackson.databind.cfg.CacheProvider)>(this, cacheProvider)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.createInstance(SerializationConfig,SerializerFactory)",Method,No Comment,"@Override\npublic DefaultSerializerProvider createInstance(SerializationConfig config, SerializerFactory jsf) {\n    return new XmlSerializerProvider(this, config, jsf);\n}","com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)","digraph cfg_createInstance {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""2"" [label=""config := @parameter0: com.fasterxml.jackson.databind.SerializationConfig""];\n	""3"" [label=""jsf := @parameter1: com.fasterxml.jackson.databind.ser.SerializerFactory""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)>(this, config, jsf)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator,Object)",Method,No Comment,"@SuppressWarnings(""resource"")\n@Override\npublic void serializeValue(JsonGenerator gen, Object value) throws IOException {\n    _generator = gen;\n    if (value == null) {\n        _serializeXmlNull(gen);\n        return;\n    }\n    final Class<?> cls = value.getClass();\n    final boolean asArray;\n    final ToXmlGenerator xgen = _asXmlGenerator(gen);\n    if (xgen == null) {\n        // called by convertValue()\n        asArray = false;\n    } else {\n        // [dataformat-xml#441]: allow ObjectNode unwrapping\n        if (_shouldUnwrapObjectNode(xgen, value)) {\n            _serializeUnwrappedObjectNode(xgen, value, null);\n            return;\n        }\n        QName rootName = _rootNameFromConfig();\n        if (rootName == null) {\n            rootName = _rootNameLookup.findRootName(cls, _config);\n        }\n        _initWithRootName(xgen, rootName);\n        asArray = TypeUtil.isIndexedType(_config.constructType(cls));\n        if (asArray) {\n            _startRootArray(xgen, rootName);\n        }\n    }\n    // From super-class implementation\n    final JsonSerializer<Object> ser = findTypedValueSerializer(cls, true, null);\n    try {\n        ser.serialize(value, gen, this);\n    } catch (Exception e) {\n        // but wrap RuntimeExceptions, to get path information\n        throw _wrapAsIOE(gen, e);\n    }\n    // end of super-class implementation\n    if (asArray) {\n        gen.writeEndObject();\n    }\n}","void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)","digraph cfg_serializeValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(cls)""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup>""];\n	""4"" [label=""$stack13 := @caughtexception""];\n	""5"" [label=""$stack14 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(gen, e)""];\n	""6"" [label=""$stack8 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: boolean _shouldUnwrapObjectNode(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,java.lang.Object)>(xgen, value)""];\n	""7"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""8"" [label=""asArray = 0""];\n	""9"" [label=""asArray = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.TypeUtil: boolean isIndexedType(com.fasterxml.jackson.databind.JavaType)>($stack10)""];\n	""10"" [label=""cls = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""11"" [label=""e = $stack13""];\n	""12"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""13"" [label=""goto""];\n	""14"" [label=""goto""];\n	""15"" [label=""if $stack8 == 0""];\n	""16"" [label=""if asArray == 0""];\n	""17"" [label=""if asArray == 0""];\n	""18"" [label=""if rootName != null""];\n	""19"" [label=""if value != null""];\n	""20"" [label=""if xgen != null""];\n	""21"" [label=""return""];\n	""22"" [label=""return""];\n	""23"" [label=""return""];\n	""24"" [label=""rootName = virtualinvoke $stack12.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)>(cls, $stack11)""];\n	""25"" [label=""rootName = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)>(cls, 1, null)""];\n	""26"" [label=""rootName = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: javax.xml.namespace.QName _rootNameFromConfig()>()""];\n	""27"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""28"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator> = gen""];\n	""29"" [label=""throw $stack14""];\n	""30"" [label=""value := @parameter1: java.lang.Object""];\n	""31"" [label=""virtualinvoke gen.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>()""];\n	""32"" [label=""virtualinvoke rootName.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(value, gen, this)""];\n	""33"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>(xgen, rootName)""];\n	""34"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _serializeUnwrappedObjectNode(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer)>(xgen, value, null)""];\n	""35"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator)>(gen)""];\n	""36"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>(xgen, rootName)""];\n	""37"" [label=""xgen = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator _asXmlGenerator(com.fasterxml.jackson.core.JsonGenerator)>(gen)""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""37""[label=""cfg_next""];\n	""11"" -> ""5""[label=""cfg_next""];\n	""12"" -> ""30""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_goto""];\n	""14"" -> ""17""[label=""cfg_goto""];\n	""15"" -> ""26""[label=""cfg_true""];\n	""15"" -> ""34""[label=""cfg_false""];\n	""16"" -> ""25""[label=""cfg_true""];\n	""16"" -> ""36""[label=""cfg_false""];\n	""17"" -> ""23""[label=""cfg_true""];\n	""17"" -> ""31""[label=""cfg_false""];\n	""18"" -> ""3""[label=""cfg_false""];\n	""18"" -> ""33""[label=""cfg_true""];\n	""19"" -> ""10""[label=""cfg_true""];\n	""19"" -> ""35""[label=""cfg_false""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""6""[label=""cfg_true""];\n	""20"" -> ""8""[label=""cfg_false""];\n	""24"" -> ""33""[label=""cfg_next""];\n	""25"" -> ""32""[label=""cfg_next""];\n	""26"" -> ""18""[label=""cfg_next""];\n	""27"" -> ""12""[label=""cfg_next""];\n	""28"" -> ""19""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""30"" -> ""28""[label=""cfg_next""];\n	""31"" -> ""23""[label=""cfg_next""];\n	""32"" -> ""14""[label=""cfg_next""];\n	""32"" -> ""4""[label=""cfg_except""];\n	""33"" -> ""7""[label=""cfg_next""];\n	""34"" -> ""22""[label=""cfg_next""];\n	""35"" -> ""21""[label=""cfg_next""];\n	""36"" -> ""25""[label=""cfg_next""];\n	""37"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""16""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator,Object,JavaType)",Method,No Comment,"// since 2.11.1, was missing before\n@Override\npublic void serializeValue(JsonGenerator gen, Object value, JavaType rootType) throws IOException {\n    serializeValue(gen, value, rootType, null);\n}","void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType)","digraph cfg_serializeValue {\n	""1"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""2"" [label=""return""];\n	""3"" [label=""rootType := @parameter2: com.fasterxml.jackson.databind.JavaType""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""5"" [label=""value := @parameter1: java.lang.Object""];\n	""6"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(gen, value, rootType, null)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializeValue(JsonGenerator,Object,JavaType,JsonSerializer)",Method,@since 2.1,"@SuppressWarnings(""resource"")\n@Override\npublic void serializeValue(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> ser) throws IOException {\n    _generator = gen;\n    if (value == null) {\n        _serializeXmlNull(gen);\n        return;\n    }\n    // Let's ensure types are compatible at this point\n    if ((rootType != null) && !rootType.getRawClass().isAssignableFrom(value.getClass())) {\n        _reportIncompatibleRootType(value, rootType);\n    }\n    final boolean asArray;\n    final ToXmlGenerator xgen = _asXmlGenerator(gen);\n    if (xgen == null) {\n        // called by convertValue()\n        asArray = false;\n    } else {\n        // [dataformat-xml#441]: allow ObjectNode unwrapping\n        if (_shouldUnwrapObjectNode(xgen, value)) {\n            _serializeUnwrappedObjectNode(xgen, value, ser);\n            return;\n        }\n        QName rootName = _rootNameFromConfig();\n        if (rootName == null) {\n            rootName = (rootType == null) ? _rootNameLookup.findRootName(value.getClass(), _config) : _rootNameLookup.findRootName(rootType, _config);\n        }\n        _initWithRootName(xgen, rootName);\n        asArray = (rootType == null) ? TypeUtil.isIndexedType(_config.constructType(value.getClass())) : TypeUtil.isIndexedType(rootType);\n        if (asArray) {\n            _startRootArray(xgen, rootName);\n        }\n    }\n    if (ser == null) {\n        ser = findTypedValueSerializer(rootType, true, null);\n    }\n    // From super-class implementation\n    try {\n        ser.serialize(value, gen, this);\n    } catch (Exception e) {\n        // but others do need to be, to get path etc\n        throw _wrapAsIOE(gen, e);\n    }\n    // end of super-class implementation\n    if (asArray) {\n        gen.writeEndObject();\n    }\n}","void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)","digraph cfg_serializeValue {\n	""1"" [label=""$stack10 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack9.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($stack10)""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""7"" [label=""$stack16 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""8"" [label=""$stack17 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""9"" [label=""$stack18 = virtualinvoke rootType.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>()""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack17)""];\n	""11"" [label=""$stack20 := @caughtexception""];\n	""12"" [label=""$stack21 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(gen, rootName)""];\n	""13"" [label=""$stack8 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: boolean _shouldUnwrapObjectNode(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,java.lang.Object)>(xgen, value)""];\n	""14"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""15"" [label=""asArray = 0""];\n	""16"" [label=""asArray = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.TypeUtil: boolean isIndexedType(com.fasterxml.jackson.databind.JavaType)>($stack11)""];\n	""17"" [label=""asArray = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.TypeUtil: boolean isIndexedType(com.fasterxml.jackson.databind.JavaType)>(rootType)""];\n	""18"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack19 != 0""];\n	""24"" [label=""if $stack8 == 0""];\n	""25"" [label=""if asArray == 0""];\n	""26"" [label=""if asArray == 0""];\n	""27"" [label=""if rootName != null""];\n	""28"" [label=""if rootType != null""];\n	""29"" [label=""if rootType != null""];\n	""30"" [label=""if rootType == null""];\n	""31"" [label=""if ser != null""];\n	""32"" [label=""if value != null""];\n	""33"" [label=""if xgen != null""];\n	""34"" [label=""return""];\n	""35"" [label=""return""];\n	""36"" [label=""return""];\n	""37"" [label=""rootName = $stack20""];\n	""38"" [label=""rootName = virtualinvoke $stack13.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig)>(rootType, $stack12)""];\n	""39"" [label=""rootName = virtualinvoke $stack14.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)>($stack16, $stack15)""];\n	""40"" [label=""rootName = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: javax.xml.namespace.QName _rootNameFromConfig()>()""];\n	""41"" [label=""rootType := @parameter2: com.fasterxml.jackson.databind.JavaType""];\n	""42"" [label=""ser := @parameter3: com.fasterxml.jackson.databind.JsonSerializer""];\n	""43"" [label=""ser = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty)>(rootType, 1, null)""];\n	""44"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""45"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator> = gen""];\n	""46"" [label=""throw $stack21""];\n	""47"" [label=""value := @parameter1: java.lang.Object""];\n	""48"" [label=""virtualinvoke gen.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>()""];\n	""49"" [label=""virtualinvoke ser.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(value, gen, this)""];\n	""50"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>(xgen, rootName)""];\n	""51"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(value, rootType)""];\n	""52"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _serializeUnwrappedObjectNode(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer)>(xgen, value, ser)""];\n	""53"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator)>(gen)""];\n	""54"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>(xgen, rootName)""];\n	""55"" [label=""xgen = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator _asXmlGenerator(com.fasterxml.jackson.core.JsonGenerator)>(gen)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_next""];\n	""11"" -> ""37""[label=""cfg_next""];\n	""12"" -> ""46""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""19""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""47""[label=""cfg_next""];\n	""19"" -> ""31""[label=""cfg_goto""];\n	""2"" -> ""16""[label=""cfg_next""];\n	""20"" -> ""50""[label=""cfg_goto""];\n	""21"" -> ""25""[label=""cfg_goto""];\n	""22"" -> ""26""[label=""cfg_goto""];\n	""23"" -> ""51""[label=""cfg_false""];\n	""23"" -> ""55""[label=""cfg_true""];\n	""24"" -> ""40""[label=""cfg_true""];\n	""24"" -> ""52""[label=""cfg_false""];\n	""25"" -> ""31""[label=""cfg_true""];\n	""25"" -> ""54""[label=""cfg_false""];\n	""26"" -> ""36""[label=""cfg_true""];\n	""26"" -> ""48""[label=""cfg_false""];\n	""27"" -> ""28""[label=""cfg_false""];\n	""27"" -> ""50""[label=""cfg_true""];\n	""28"" -> ""4""[label=""cfg_true""];\n	""28"" -> ""5""[label=""cfg_false""];\n	""29"" -> ""14""[label=""cfg_false""];\n	""29"" -> ""17""[label=""cfg_true""];\n	""3"" -> ""38""[label=""cfg_next""];\n	""30"" -> ""55""[label=""cfg_true""];\n	""30"" -> ""9""[label=""cfg_false""];\n	""31"" -> ""43""[label=""cfg_false""];\n	""31"" -> ""49""[label=""cfg_true""];\n	""32"" -> ""30""[label=""cfg_true""];\n	""32"" -> ""53""[label=""cfg_false""];\n	""33"" -> ""13""[label=""cfg_true""];\n	""33"" -> ""15""[label=""cfg_false""];\n	""37"" -> ""12""[label=""cfg_next""];\n	""38"" -> ""50""[label=""cfg_next""];\n	""39"" -> ""20""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""27""[label=""cfg_next""];\n	""41"" -> ""42""[label=""cfg_next""];\n	""42"" -> ""45""[label=""cfg_next""];\n	""43"" -> ""49""[label=""cfg_next""];\n	""44"" -> ""18""[label=""cfg_next""];\n	""45"" -> ""32""[label=""cfg_next""];\n	""47"" -> ""41""[label=""cfg_next""];\n	""48"" -> ""36""[label=""cfg_next""];\n	""49"" -> ""11""[label=""cfg_except""];\n	""49"" -> ""22""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""50"" -> ""29""[label=""cfg_next""];\n	""51"" -> ""55""[label=""cfg_next""];\n	""52"" -> ""35""[label=""cfg_next""];\n	""53"" -> ""34""[label=""cfg_next""];\n	""54"" -> ""31""[label=""cfg_next""];\n	""55"" -> ""33""[label=""cfg_next""];\n	""6"" -> ""39""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.serializePolymorphic(JsonGenerator,Object,JavaType,JsonSerializer,TypeSerializer)",Method,No Comment,"@SuppressWarnings(""resource"")\n// since 2.11.1, was missing before\n@Override\npublic void serializePolymorphic(JsonGenerator gen, Object value, JavaType rootType, JsonSerializer<Object> valueSer, TypeSerializer typeSer) throws IOException {\n    _generator = gen;\n    if (value == null) {\n        _serializeXmlNull(gen);\n        return;\n    }\n    // Let's ensure types are compatible at this point\n    if ((rootType != null) && !rootType.getRawClass().isAssignableFrom(value.getClass())) {\n        _reportIncompatibleRootType(value, rootType);\n    }\n    final boolean asArray;\n    final ToXmlGenerator xgen = _asXmlGenerator(gen);\n    if (xgen == null) {\n        // called by convertValue()\n        asArray = false;\n    } else {\n        QName rootName = _rootNameFromConfig();\n        if (rootName == null) {\n            rootName = (rootType == null) ? _rootNameLookup.findRootName(value.getClass(), _config) : _rootNameLookup.findRootName(rootType, _config);\n        }\n        _initWithRootName(xgen, rootName);\n        asArray = (rootType == null) ? TypeUtil.isIndexedType(_config.constructType(value.getClass())) : TypeUtil.isIndexedType(rootType);\n        if (asArray) {\n            _startRootArray(xgen, rootName);\n        }\n    }\n    // 21-May-2020: See comments in `jackson-databind/DefaultSerializerProvider`\n    if (valueSer == null) {\n        if ((rootType != null) && rootType.isContainerType()) {\n            valueSer = findValueSerializer(rootType, null);\n        } else {\n            valueSer = findValueSerializer(value.getClass(), null);\n        }\n    }\n    // From super-class implementation\n    try {\n        valueSer.serializeWithType(value, gen, this, typeSer);\n    } catch (Exception e) {\n        // but others do need to be, to get path etc\n        throw _wrapAsIOE(gen, e);\n    }\n    // end of super-class implementation\n    if (asArray) {\n        gen.writeEndObject();\n    }\n}","void serializePolymorphic(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer)","digraph cfg_serializePolymorphic {\n	""1"" [label=""$stack10 = virtualinvoke rootType.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>()""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""3"" [label=""$stack12 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack11.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>($stack12)""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""9"" [label=""$stack18 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""10"" [label=""$stack19 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""11"" [label=""$stack20 = virtualinvoke rootType.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>()""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack19)""];\n	""13"" [label=""$stack22 := @caughtexception""];\n	""14"" [label=""$stack23 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(gen, rootName)""];\n	""15"" [label=""$stack9 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""16"" [label=""asArray = 0""];\n	""17"" [label=""asArray = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.TypeUtil: boolean isIndexedType(com.fasterxml.jackson.databind.JavaType)>($stack13)""];\n	""18"" [label=""asArray = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.TypeUtil: boolean isIndexedType(com.fasterxml.jackson.databind.JavaType)>(rootType)""];\n	""19"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""if $stack10 == 0""];\n	""26"" [label=""if $stack21 != 0""];\n	""27"" [label=""if asArray == 0""];\n	""28"" [label=""if asArray == 0""];\n	""29"" [label=""if rootName != null""];\n	""30"" [label=""if rootType != null""];\n	""31"" [label=""if rootType != null""];\n	""32"" [label=""if rootType == null""];\n	""33"" [label=""if rootType == null""];\n	""34"" [label=""if value != null""];\n	""35"" [label=""if valueSer != null""];\n	""36"" [label=""if xgen != null""];\n	""37"" [label=""return""];\n	""38"" [label=""return""];\n	""39"" [label=""rootName = $stack22""];\n	""40"" [label=""rootName = virtualinvoke $stack15.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig)>(rootType, $stack14)""];\n	""41"" [label=""rootName = virtualinvoke $stack16.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig)>($stack18, $stack17)""];\n	""42"" [label=""rootName = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: javax.xml.namespace.QName _rootNameFromConfig()>()""];\n	""43"" [label=""rootType := @parameter2: com.fasterxml.jackson.databind.JavaType""];\n	""44"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""45"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.core.JsonGenerator _generator> = gen""];\n	""46"" [label=""throw $stack23""];\n	""47"" [label=""typeSer := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer""];\n	""48"" [label=""value := @parameter1: java.lang.Object""];\n	""49"" [label=""valueSer := @parameter3: com.fasterxml.jackson.databind.JsonSerializer""];\n	""50"" [label=""valueSer = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(rootType, null)""];\n	""51"" [label=""valueSer = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>($stack9, null)""];\n	""52"" [label=""virtualinvoke gen.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>()""];\n	""53"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>(xgen, rootName)""];\n	""54"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(value, rootType)""];\n	""55"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator)>(gen)""];\n	""56"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>(xgen, rootName)""];\n	""57"" [label=""virtualinvoke valueSer.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(value, gen, this, typeSer)""];\n	""58"" [label=""xgen = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator _asXmlGenerator(com.fasterxml.jackson.core.JsonGenerator)>(gen)""];\n	""1"" -> ""25""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""26""[label=""cfg_next""];\n	""13"" -> ""39""[label=""cfg_next""];\n	""14"" -> ""46""[label=""cfg_next""];\n	""15"" -> ""51""[label=""cfg_next""];\n	""16"" -> ""20""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""18"" -> ""27""[label=""cfg_next""];\n	""19"" -> ""48""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""35""[label=""cfg_goto""];\n	""21"" -> ""53""[label=""cfg_goto""];\n	""22"" -> ""27""[label=""cfg_goto""];\n	""23"" -> ""57""[label=""cfg_goto""];\n	""24"" -> ""28""[label=""cfg_goto""];\n	""25"" -> ""15""[label=""cfg_true""];\n	""25"" -> ""50""[label=""cfg_false""];\n	""26"" -> ""54""[label=""cfg_false""];\n	""26"" -> ""58""[label=""cfg_true""];\n	""27"" -> ""35""[label=""cfg_true""];\n	""27"" -> ""56""[label=""cfg_false""];\n	""28"" -> ""38""[label=""cfg_true""];\n	""28"" -> ""52""[label=""cfg_false""];\n	""29"" -> ""30""[label=""cfg_false""];\n	""29"" -> ""53""[label=""cfg_true""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""6""[label=""cfg_true""];\n	""30"" -> ""7""[label=""cfg_false""];\n	""31"" -> ""18""[label=""cfg_true""];\n	""31"" -> ""2""[label=""cfg_false""];\n	""32"" -> ""11""[label=""cfg_false""];\n	""32"" -> ""58""[label=""cfg_true""];\n	""33"" -> ""1""[label=""cfg_false""];\n	""33"" -> ""15""[label=""cfg_true""];\n	""34"" -> ""32""[label=""cfg_true""];\n	""34"" -> ""55""[label=""cfg_false""];\n	""35"" -> ""33""[label=""cfg_false""];\n	""35"" -> ""57""[label=""cfg_true""];\n	""36"" -> ""16""[label=""cfg_false""];\n	""36"" -> ""42""[label=""cfg_true""];\n	""39"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_next""];\n	""40"" -> ""53""[label=""cfg_next""];\n	""41"" -> ""21""[label=""cfg_next""];\n	""42"" -> ""29""[label=""cfg_next""];\n	""43"" -> ""49""[label=""cfg_next""];\n	""44"" -> ""19""[label=""cfg_next""];\n	""45"" -> ""34""[label=""cfg_next""];\n	""47"" -> ""45""[label=""cfg_next""];\n	""48"" -> ""43""[label=""cfg_next""];\n	""49"" -> ""47""[label=""cfg_next""];\n	""5"" -> ""40""[label=""cfg_next""];\n	""50"" -> ""23""[label=""cfg_next""];\n	""51"" -> ""57""[label=""cfg_next""];\n	""52"" -> ""38""[label=""cfg_next""];\n	""53"" -> ""31""[label=""cfg_next""];\n	""54"" -> ""58""[label=""cfg_next""];\n	""55"" -> ""37""[label=""cfg_next""];\n	""56"" -> ""35""[label=""cfg_next""];\n	""57"" -> ""13""[label=""cfg_except""];\n	""57"" -> ""24""[label=""cfg_next""];\n	""58"" -> ""36""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""41""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._serializeXmlNull(JsonGenerator),Method,No Comment,"protected void _serializeXmlNull(JsonGenerator gen) throws IOException {\n    // 14-Nov-2016, tatu: As per [dataformat-xml#213], we may have explicitly\n    //    configured root name...\n    QName rootName = _rootNameFromConfig();\n    if (rootName == null) {\n        rootName = XmlRootNameLookup.ROOT_NAME_FOR_NULL;\n    }\n    if (gen instanceof ToXmlGenerator) {\n        _initWithRootName((ToXmlGenerator) gen, rootName);\n    }\n    super.serializeValue(gen, null);\n}",void _serializeXmlNull(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg__serializeXmlNull {\n	""1"" [label=""$stack3 = gen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" [label=""$stack4 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen""];\n	""3"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""4"" [label=""if $stack3 == 0""];\n	""5"" [label=""if rootName != null""];\n	""6"" [label=""return""];\n	""7"" [label=""rootName = <com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: javax.xml.namespace.QName ROOT_NAME_FOR_NULL>""];\n	""8"" [label=""rootName = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: javax.xml.namespace.QName _rootNameFromConfig()>()""];\n	""9"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(gen, null)""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""11"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>($stack4, rootName)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""10"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""9""[label=""cfg_true""];\n	""5"" -> ""1""[label=""cfg_true""];\n	""5"" -> ""7""[label=""cfg_false""];\n	""7"" -> ""1""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""6""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._startRootArray(ToXmlGenerator,QName)",Method,No Comment,"protected void _startRootArray(ToXmlGenerator xgen, QName rootName) throws IOException {\n    xgen.writeStartObject();\n    // Could repeat root name, but what's the point? How to customize?\n    xgen.writeFieldName(""item"");\n}","void _startRootArray(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)","digraph cfg__startRootArray {\n	""1"" [label=""return""];\n	""2"" [label=""rootName := @parameter1: javax.xml.namespace.QName""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""4"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeFieldName(java.lang.String)>(\""item\"")""];\n	""5"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeStartObject()>()""];\n	""6"" [label=""xgen := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._initWithRootName(ToXmlGenerator,QName)",Method,No Comment,"protected void _initWithRootName(ToXmlGenerator xgen, QName rootName) throws IOException {\n    // 28-Nov-2012, tatu: We should only initialize the root name if no name has been\n    //   set, as per [dataformat-xml#42], to allow for custom serializers to work.\n    if (!xgen.setNextNameIfMissing(rootName)) {\n        // however, if we are root, we... insist\n        if (xgen.inRoot()) {\n            xgen.setNextName(rootName);\n        }\n    }\n    xgen.initGenerator();\n    String ns = rootName.getNamespaceURI();\n    // [dataformat-xml#26] If we just try writing root element with namespace,\n    // we will get an explicit prefix. But we'd rather use the default\n    // namespace, so let's try to force that.\n    if (ns != null && ns.length() > 0) {\n        try {\n            xgen.getStaxWriter().setDefaultNamespace(ns);\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, xgen);\n        }\n    }\n}","void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)","digraph cfg__initWithRootName {\n	""1"" [label=""$stack5 = virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean setNextNameIfMissing(javax.xml.namespace.QName)>(rootName)""];\n	""2"" [label=""$stack6 = virtualinvoke ns.<java.lang.String: int length()>()""];\n	""3"" [label=""$stack7 = virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.stream.XMLStreamWriter getStaxWriter()>()""];\n	""4"" [label=""$stack8 = virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean inRoot()>()""];\n	""5"" [label=""$stack9 := @caughtexception""];\n	""6"" [label=""e = $stack9""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack5 != 0""];\n	""9"" [label=""if $stack6 <= 0""];\n	""10"" [label=""if $stack8 == 0""];\n	""11"" [label=""if ns == null""];\n	""12"" [label=""interfaceinvoke $stack7.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(ns)""];\n	""13"" [label=""ns = virtualinvoke rootName.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""14"" [label=""return""];\n	""15"" [label=""rootName := @parameter1: javax.xml.namespace.QName""];\n	""16"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, xgen)""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""18"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void initGenerator()>()""];\n	""19"" [label=""virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextName(javax.xml.namespace.QName)>(rootName)""];\n	""20"" [label=""xgen := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_true""];\n	""10"" -> ""19""[label=""cfg_false""];\n	""11"" -> ""14""[label=""cfg_true""];\n	""11"" -> ""2""[label=""cfg_false""];\n	""12"" -> ""5""[label=""cfg_except""];\n	""12"" -> ""7""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""1""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""13""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_except""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_goto""];\n	""8"" -> ""18""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""14""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_false""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._rootNameFromConfig(),Method,No Comment,"protected QName _rootNameFromConfig() {\n    PropertyName name = _config.getFullRootName();\n    if (name == null) {\n        return null;\n    }\n    String ns = name.getNamespace();\n    if (ns == null || ns.isEmpty()) {\n        return new QName(name.getSimpleName());\n    }\n    return new QName(ns, name.getSimpleName());\n}",javax.xml.namespace.QName _rootNameFromConfig(),"digraph cfg__rootNameFromConfig {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig _config>""];\n	""2"" [label=""$stack4 = virtualinvoke name.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""3"" [label=""$stack5 = new javax.xml.namespace.QName""];\n	""4"" [label=""$stack6 = virtualinvoke ns.<java.lang.String: boolean isEmpty()>()""];\n	""5"" [label=""$stack7 = virtualinvoke name.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""6"" [label=""$stack8 = new javax.xml.namespace.QName""];\n	""7"" [label=""if $stack6 == 0""];\n	""8"" [label=""if name != null""];\n	""9"" [label=""if ns == null""];\n	""10"" [label=""name = virtualinvoke $stack3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyName getFullRootName()>()""];\n	""11"" [label=""ns = virtualinvoke name.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getNamespace()>()""];\n	""12"" [label=""return $stack5""];\n	""13"" [label=""return $stack8""];\n	""14"" [label=""return null""];\n	""15"" [label=""specialinvoke $stack5.<javax.xml.namespace.QName: void <init>(java.lang.String)>($stack4)""];\n	""16"" [label=""specialinvoke $stack8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(ns, $stack7)""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""13""[label=""cfg_next""];\n	""17"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""6""[label=""cfg_true""];\n	""8"" -> ""11""[label=""cfg_true""];\n	""8"" -> ""14""[label=""cfg_false""];\n	""9"" -> ""3""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._shouldUnwrapObjectNode(ToXmlGenerator,Object)",Method,@since 2.13,"protected boolean _shouldUnwrapObjectNode(ToXmlGenerator xgen, Object value) {\n    return xgen.isEnabled(ToXmlGenerator.Feature.UNWRAP_ROOT_OBJECT_NODE) && (value instanceof ObjectNode) && (((ObjectNode) value).size() == 1);\n}","boolean _shouldUnwrapObjectNode(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,java.lang.Object)","digraph cfg__shouldUnwrapObjectNode {\n	""1"" [label=""$stack3 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature UNWRAP_ROOT_OBJECT_NODE>""];\n	""2"" [label=""$stack4 = virtualinvoke xgen.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature)>($stack3)""];\n	""3"" [label=""$stack5 = value instanceof com.fasterxml.jackson.databind.node.ObjectNode""];\n	""4"" [label=""$stack6 = (com.fasterxml.jackson.databind.node.ObjectNode) value""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<com.fasterxml.jackson.databind.node.ObjectNode: int size()>()""];\n	""6"" [label=""$stack8 = 0""];\n	""7"" [label=""$stack8 = 1""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack4 == 0""];\n	""10"" [label=""if $stack5 == 0""];\n	""11"" [label=""if $stack7 != 1""];\n	""12"" [label=""return $stack8""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""14"" [label=""value := @parameter1: java.lang.Object""];\n	""15"" [label=""xgen := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_false""];\n	""10"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""6""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_false""];\n	""13"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""12""[label=""cfg_goto""];\n	""9"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""6""[label=""cfg_true""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._serializeUnwrappedObjectNode(ToXmlGenerator,Object,JsonSerializer)",Method,@since 2.13,"protected void _serializeUnwrappedObjectNode(ToXmlGenerator xgen, Object value, JsonSerializer<Object> ser) throws IOException {\n    ObjectNode root = (ObjectNode) value;\n    Map.Entry<String, JsonNode> entry = root.fields().next();\n    final JsonNode newRoot = entry.getValue();\n    // No namespace associated with JsonNode:\n    _initWithRootName(xgen, new QName(entry.getKey()));\n    if (ser == null) {\n        ser = findTypedValueSerializer(newRoot.getClass(), true, null);\n    }\n    // From super-class implementation\n    try {\n        ser.serialize(newRoot, xgen, this);\n    } catch (Exception e) {\n        // but others do need to be, to get path etc\n        throw _wrapAsIOE(xgen, e);\n    }\n}","void _serializeUnwrappedObjectNode(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer)","digraph cfg__serializeUnwrappedObjectNode {\n	""1"" [label=""$stack10 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>()""];\n	""2"" [label=""$stack11 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>()""];\n	""3"" [label=""$stack12 = (java.lang.String) $stack11""];\n	""4"" [label=""$stack13 = new javax.xml.namespace.QName""];\n	""5"" [label=""$stack14 = virtualinvoke newRoot.<java.lang.Object: java.lang.Class getClass()>()""];\n	""6"" [label=""$stack15 := @caughtexception""];\n	""7"" [label=""$stack16 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(xgen, e)""];\n	""8"" [label=""$stack8 = virtualinvoke root.<com.fasterxml.jackson.databind.node.ObjectNode: java.util.Iterator fields()>()""];\n	""9"" [label=""$stack9 = interfaceinvoke $stack8.<java.util.Iterator: java.lang.Object next()>()""];\n	""10"" [label=""e = $stack15""];\n	""11"" [label=""entry = (java.util.Map$Entry) $stack9""];\n	""12"" [label=""goto""];\n	""13"" [label=""if ser != null""];\n	""14"" [label=""newRoot = (com.fasterxml.jackson.databind.JsonNode) $stack10""];\n	""15"" [label=""return""];\n	""16"" [label=""root = (com.fasterxml.jackson.databind.node.ObjectNode) value""];\n	""17"" [label=""ser := @parameter2: com.fasterxml.jackson.databind.JsonSerializer""];\n	""18"" [label=""ser = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty)>($stack14, 1, null)""];\n	""19"" [label=""specialinvoke $stack13.<javax.xml.namespace.QName: void <init>(java.lang.String)>($stack12)""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""21"" [label=""throw $stack16""];\n	""22"" [label=""value := @parameter1: java.lang.Object""];\n	""23"" [label=""virtualinvoke ser.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(newRoot, xgen, this)""];\n	""24"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void _initWithRootName(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator,javax.xml.namespace.QName)>(xgen, $stack13)""];\n	""25"" [label=""xgen := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""14""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_goto""];\n	""13"" -> ""23""[label=""cfg_true""];\n	""13"" -> ""5""[label=""cfg_false""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""16"" -> ""8""[label=""cfg_next""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""23""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""25""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_next""];\n	""23"" -> ""12""[label=""cfg_next""];\n	""23"" -> ""6""[label=""cfg_except""];\n	""24"" -> ""13""[label=""cfg_next""];\n	""25"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._asXmlGenerator(JsonGenerator),Method,No Comment,"protected ToXmlGenerator _asXmlGenerator(JsonGenerator gen) throws JsonMappingException {\n    if (!(gen instanceof ToXmlGenerator)) {\n        // [dataformat-xml#71]: We sometimes get TokenBuffer, which is fine\n        if (gen instanceof TokenBuffer) {\n            return null;\n        }\n        // but verify\n        throw JsonMappingException.from(gen, ""XmlMapper does not work with generators of type other than `ToXmlGenerator`; got: `"" + gen.getClass().getName() + ""`"");\n    }\n    return (ToXmlGenerator) gen;\n}",com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator _asXmlGenerator(com.fasterxml.jackson.core.JsonGenerator),"digraph cfg__asXmlGenerator {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""`\"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""3"" [label=""$stack12 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>(gen, $stack11)""];\n	""4"" [label=""$stack2 = gen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""5"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) gen""];\n	""6"" [label=""$stack4 = gen instanceof com.fasterxml.jackson.databind.util.TokenBuffer""];\n	""7"" [label=""$stack5 = new java.lang.StringBuilder""];\n	""8"" [label=""$stack6 = virtualinvoke gen.<java.lang.Object: java.lang.Class getClass()>()""];\n	""9"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.Class: java.lang.String getName()>()""];\n	""10"" [label=""$stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""XmlMapper does not work with generators of type other than `ToXmlGenerator`; got: `\"")""];\n	""11"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7)""];\n	""12"" [label=""gen := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""13"" [label=""if $stack2 != 0""];\n	""14"" [label=""if $stack4 == 0""];\n	""15"" [label=""return $stack3""];\n	""16"" [label=""return null""];\n	""17"" [label=""specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>()""];\n	""18"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""19"" [label=""throw $stack12""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""6""[label=""cfg_false""];\n	""14"" -> ""16""[label=""cfg_false""];\n	""14"" -> ""7""[label=""cfg_true""];\n	""17"" -> ""10""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""19""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider._wrapAsIOE(JsonGenerator,Exception)",Method,No Comment,"protected IOException _wrapAsIOE(JsonGenerator g, Exception e) {\n    if (e instanceof IOException) {\n        return (IOException) e;\n    }\n    String msg = e.getMessage();\n    if (msg == null) {\n        msg = ""[no message for "" + e.getClass().getName() + ""]"";\n    }\n    return new JsonMappingException(g, msg, e);\n}","java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)","digraph cfg__wrapAsIOE {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""]\"")""];\n	""3"" [label=""$stack12 = (java.io.IOException) e""];\n	""4"" [label=""$stack4 = e instanceof java.io.IOException""];\n	""5"" [label=""$stack5 = new com.fasterxml.jackson.databind.JsonMappingException""];\n	""6"" [label=""$stack6 = new java.lang.StringBuilder""];\n	""7"" [label=""$stack7 = virtualinvoke e.<java.lang.Object: java.lang.Class getClass()>()""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.Class: java.lang.String getName()>()""];\n	""9"" [label=""$stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""[no message for \"")""];\n	""10"" [label=""e := @parameter1: java.lang.Exception""];\n	""11"" [label=""g := @parameter0: com.fasterxml.jackson.core.JsonGenerator""];\n	""12"" [label=""if $stack4 == 0""];\n	""13"" [label=""if msg != null""];\n	""14"" [label=""msg = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""15"" [label=""msg = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>()""];\n	""16"" [label=""return $stack12""];\n	""17"" [label=""return $stack5""];\n	""18"" [label=""specialinvoke $stack5.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String,java.lang.Throwable)>(g, msg, e)""];\n	""19"" [label=""specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>()""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""15""[label=""cfg_true""];\n	""12"" -> ""3""[label=""cfg_false""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""6""[label=""cfg_false""];\n	""14"" -> ""5""[label=""cfg_next""];\n	""15"" -> ""13""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""16""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlRootNameLookup),Constructor,No Comment,public XmlSerializerProvider(XmlRootNameLookup rootNames) {\n    super();\n    _rootNameLookup = rootNames;\n},void <init>(com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""rootNames := @parameter0: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup> = rootNames""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlSerializerProvider,SerializationConfig,SerializerFactory)",Constructor,No Comment,"public XmlSerializerProvider(XmlSerializerProvider src, SerializationConfig config, SerializerFactory f) {\n    super(src, config, f);\n    _rootNameLookup = src._rootNameLookup;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)","digraph cfg_init {\n	""1"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup>""];\n	""2"" [label=""config := @parameter1: com.fasterxml.jackson.databind.SerializationConfig""];\n	""3"" [label=""f := @parameter2: com.fasterxml.jackson.databind.ser.SerializerFactory""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void <init>(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)>(src, config, f)""];\n	""6"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup> = $stack4""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlSerializerProvider,CacheProvider)",Constructor,* @since 2.16,"protected XmlSerializerProvider(XmlSerializerProvider src, CacheProvider cp) {\n    super(src, cp);\n    _rootNameLookup = src._rootNameLookup;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider,com.fasterxml.jackson.databind.cfg.CacheProvider)","digraph cfg_init {\n	""1"" [label=""$stack3 = src.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup>""];\n	""2"" [label=""cp := @parameter1: com.fasterxml.jackson.databind.cfg.CacheProvider""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.cfg.CacheProvider)>(src, cp)""];\n	""5"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup> = $stack3""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.<init>(XmlSerializerProvider),Constructor,* @since 2.8.9,"protected XmlSerializerProvider(XmlSerializerProvider src) {\n    super(src);\n    // 21-May-2018, tatu: As per [dataformat-xml#282], should NOT really copy\n    //    root name lookup as that may link back to diff version, configuration\n    _rootNameLookup = new XmlRootNameLookup();\n}",void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider),"digraph cfg_init {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: void <init>()>()""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)>(src)""];\n	""5"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup _rootNameLookup> = $stack2""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.unwrappingSerializer(NameTransformer),Method,No Comment,"@Override\npublic JsonSerializer<Object> unwrappingSerializer(NameTransformer transformer) {\n    // !!! 23-Jan-2012, tatu: Should we chain transformers?\n    return new UnwrappingXmlBeanSerializer(this, transformer);\n}",com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer),"digraph cfg_unwrappingSerializer {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""2"" [label=""return $stack2""];\n	""3"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>(this, transformer)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""5"" [label=""transformer := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.isUnwrappingSerializer(),Method,No Comment,@Override\npublic boolean isUnwrappingSerializer() {\n    // sure is\n    return true;\n},boolean isUnwrappingSerializer(),"digraph cfg_isUnwrappingSerializer {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withObjectIdWriter(ObjectIdWriter),Method,No Comment,"@Override\npublic BeanSerializerBase withObjectIdWriter(ObjectIdWriter objectIdWriter) {\n    return new UnwrappingXmlBeanSerializer(this, objectIdWriter);\n}",com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter),"digraph cfg_withObjectIdWriter {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""2"" [label=""objectIdWriter := @parameter0: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(this, objectIdWriter)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withFilterId(Object),Method,No Comment,"@Override\npublic BeanSerializerBase withFilterId(Object filterId) {\n    return new UnwrappingXmlBeanSerializer(this, _objectIdWriter, filterId);\n}",com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object),"digraph cfg_withFilterId {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>""];\n	""2"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""3"" [label=""filterId := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(this, $stack2, filterId)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withByNameInclusion(Set,Set)",Method,No Comment,"// since 2.12\n@Override\nprotected BeanSerializerBase withByNameInclusion(Set<String> toIgnore, Set<String> toInclude) {\n    return new UnwrappingXmlBeanSerializer(this, toIgnore, toInclude);\n}","com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set)","digraph cfg_withByNameInclusion {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""2"" [label=""return $stack3""];\n	""3"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,java.util.Set,java.util.Set)>(this, toIgnore, toInclude)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""5"" [label=""toIgnore := @parameter0: java.util.Set""];\n	""6"" [label=""toInclude := @parameter1: java.util.Set""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])",Method,No Comment,"// since 2.11.1\n@Override\nprotected BeanSerializerBase withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties) {\n    return new UnwrappingXmlBeanSerializer(this, properties, filteredProperties);\n}","com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])","digraph cfg_withProperties {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""2"" [label=""filteredProperties := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""3"" [label=""properties := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(this, properties, filteredProperties)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.asArraySerializer(),Method,* JSON Array output can not be done if unwrapping operation is requested;\n     * so implementation will simply return 'this'.,@Override\nprotected BeanSerializerBase asArraySerializer() {\n    return this;\n},com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer(),"digraph cfg_asArraySerializer {\n	""1"" [label=""return this""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.serialize(Object,JsonGenerator,SerializerProvider)",Method,* Main serialization method that will delegate actual output to configured\n     * {@link BeanPropertyWriter} instances.,"@Override\npublic final void serialize(Object bean, JsonGenerator jgen, SerializerProvider provider) throws IOException, JsonGenerationException {\n    if (_objectIdWriter != null) {\n        _serializeWithObjectId(bean, jgen, provider, false);\n        return;\n    }\n    if (_propertyFilterId != null) {\n        serializeFieldsFiltered(bean, jgen, provider);\n    } else {\n        serializeFields(bean, jgen, provider);\n    }\n}","void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)","digraph cfg_serialize {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: java.lang.Object _propertyFilterId>""];\n	""3"" [label=""bean := @parameter0: java.lang.Object""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack4 == null""];\n	""6"" [label=""if $stack5 == null""];\n	""7"" [label=""jgen := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""8"" [label=""provider := @parameter2: com.fasterxml.jackson.databind.SerializerProvider""];\n	""9"" [label=""return""];\n	""10"" [label=""return""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""12"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)>(bean, jgen, provider, 0)""];\n	""13"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, jgen, provider)""];\n	""14"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, jgen, provider)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_goto""];\n	""5"" -> ""12""[label=""cfg_false""];\n	""5"" -> ""2""[label=""cfg_true""];\n	""6"" -> ""13""[label=""cfg_true""];\n	""6"" -> ""14""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.toString(),Method,No Comment,"@Override\npublic String toString() {\n    return ""UnwrappingXmlBeanSerializer for "" + handledType().getName();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: java.lang.Class handledType()>()""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>()""];\n	""4"" [label=""$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""UnwrappingXmlBeanSerializer for \"")""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3)""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(XmlBeanSerializerBase,NameTransformer)",Constructor,* Constructor used for creating unwrapping instance of a standard\n     * <code>BeanSerializer</code>,"public UnwrappingXmlBeanSerializer(XmlBeanSerializerBase src, NameTransformer transformer) {\n    super(src, transformer);\n    _nameTransformer = transformer;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)","digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>(src, transformer)""];\n	""3"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""5"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = transformer""];\n	""6"" [label=""transformer := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,ObjectIdWriter)",Constructor,No Comment,"public UnwrappingXmlBeanSerializer(UnwrappingXmlBeanSerializer src, ObjectIdWriter objectIdWriter) {\n    super(src, objectIdWriter);\n    _nameTransformer = src._nameTransformer;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)","digraph cfg_init {\n	""1"" [label=""$stack3 = src.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>""];\n	""2"" [label=""objectIdWriter := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(src, objectIdWriter)""];\n	""5"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = $stack3""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,ObjectIdWriter,Object)",Constructor,No Comment,"public UnwrappingXmlBeanSerializer(UnwrappingXmlBeanSerializer src, ObjectIdWriter objectIdWriter, Object filterId) {\n    super(src, objectIdWriter, filterId);\n    _nameTransformer = src._nameTransformer;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>""];\n	""2"" [label=""filterId := @parameter2: java.lang.Object""];\n	""3"" [label=""objectIdWriter := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(src, objectIdWriter, filterId)""];\n	""6"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = $stack4""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,Set,Set)",Constructor,No Comment,"protected UnwrappingXmlBeanSerializer(UnwrappingXmlBeanSerializer src, Set<String> toIgnore, Set<String> toInclude) {\n    super(src, toIgnore, toInclude);\n    _nameTransformer = src._nameTransformer;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,java.util.Set,java.util.Set)","digraph cfg_init {\n	""1"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,java.util.Set,java.util.Set)>(src, toIgnore, toInclude)""];\n	""4"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = $stack4""];\n	""7"" [label=""toIgnore := @parameter1: java.util.Set""];\n	""8"" [label=""toInclude := @parameter2: java.util.Set""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer.<init>(UnwrappingXmlBeanSerializer,BeanPropertyWriter[],BeanPropertyWriter[])",Constructor,No Comment,"protected UnwrappingXmlBeanSerializer(UnwrappingXmlBeanSerializer src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties) {\n    super(src, properties, filteredProperties);\n    _nameTransformer = src._nameTransformer;\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])","digraph cfg_init {\n	""1"" [label=""$stack4 = src.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>""];\n	""2"" [label=""filteredProperties := @parameter2: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""3"" [label=""properties := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(src, properties, filteredProperties)""];\n	""6"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = $stack4""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.initGenerator(),Method,"* Method called before writing any other output, to optionally\n     * output XML declaration.","public void initGenerator() throws IOException {\n    if (_initialized) {\n        return;\n    }\n    _initialized = true;\n    try {\n        boolean xmlDeclWritten;\n        if (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(""UTF-8"", ""1.1"");\n            xmlDeclWritten = true;\n        } else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\n            _xmlWriter.writeStartDocument(""UTF-8"", ""1.0"");\n            xmlDeclWritten = true;\n        } else {\n            xmlDeclWritten = false;\n        }\n        // as per [dataformat-xml#172], try adding indentation\n        if (xmlDeclWritten && (_xmlPrettyPrinter != null)) {\n            // ... but only if it is likely to succeed:\n            if (!_stax2Emulation) {\n                _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n            }\n        }\n        if (Feature.AUTO_DETECT_XSI_TYPE.enabledIn(_formatFeatures)) {\n            _xmlWriter.setPrefix(""xsi"", XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI);\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void initGenerator(),"digraph cfg_initGenerator {\n	""1"" [label=""$stack10 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature AUTO_DETECT_XSI_TYPE>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: boolean enabledIn(int)>($stack9)""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""$stack19 := @caughtexception""];\n	""11"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _initialized>""];\n	""12"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""13"" [label=""$stack4 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_XML_1_1>""];\n	""14"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: boolean enabledIn(int)>($stack3)""];\n	""15"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""16"" [label=""$stack7 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_XML_DECLARATION>""];\n	""17"" [label=""$stack8 = virtualinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: boolean enabledIn(int)>($stack6)""];\n	""18"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack11 == 0""];\n	""23"" [label=""if $stack13 == null""];\n	""24"" [label=""if $stack14 != 0""];\n	""25"" [label=""if $stack2 == 0""];\n	""26"" [label=""if $stack5 == 0""];\n	""27"" [label=""if $stack8 == 0""];\n	""28"" [label=""if xmlDeclWritten == 0""];\n	""29"" [label=""interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamWriter2: void setPrefix(java.lang.String,java.lang.String)>(\""xsi\"", \""http://www.w3.org/2001/XMLSchema-instance\"")""];\n	""30"" [label=""interfaceinvoke $stack16.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writePrologLinefeed(org.codehaus.stax2.XMLStreamWriter2)>($stack15)""];\n	""31"" [label=""interfaceinvoke $stack17.<org.codehaus.stax2.XMLStreamWriter2: void writeStartDocument(java.lang.String,java.lang.String)>(\""UTF-8\"", \""1.0\"")""];\n	""32"" [label=""interfaceinvoke $stack18.<org.codehaus.stax2.XMLStreamWriter2: void writeStartDocument(java.lang.String,java.lang.String)>(\""UTF-8\"", \""1.1\"")""];\n	""33"" [label=""return""];\n	""34"" [label=""return""];\n	""35"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(xmlDeclWritten, this)""];\n	""36"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""37"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _initialized> = 1""];\n	""38"" [label=""xmlDeclWritten = $stack19""];\n	""39"" [label=""xmlDeclWritten = 0""];\n	""40"" [label=""xmlDeclWritten = 1""];\n	""41"" [label=""xmlDeclWritten = 1""];\n	""1"" -> ""10""[label=""cfg_except""];\n	""1"" -> ""18""[label=""cfg_next""];\n	""10"" -> ""38""[label=""cfg_next""];\n	""11"" -> ""25""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_except""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""10""[label=""cfg_except""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""10""[label=""cfg_except""];\n	""14"" -> ""26""[label=""cfg_next""];\n	""15"" -> ""10""[label=""cfg_except""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""10""[label=""cfg_except""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""10""[label=""cfg_except""];\n	""17"" -> ""27""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_except""];\n	""18"" -> ""2""[label=""cfg_next""];\n	""19"" -> ""10""[label=""cfg_except""];\n	""19"" -> ""28""[label=""cfg_goto""];\n	""2"" -> ""10""[label=""cfg_except""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""10""[label=""cfg_except""];\n	""20"" -> ""28""[label=""cfg_goto""];\n	""21"" -> ""34""[label=""cfg_goto""];\n	""22"" -> ""10""[label=""cfg_except""];\n	""22"" -> ""21""[label=""cfg_true""];\n	""22"" -> ""3""[label=""cfg_false""];\n	""23"" -> ""1""[label=""cfg_true""];\n	""23"" -> ""10""[label=""cfg_except""];\n	""23"" -> ""5""[label=""cfg_false""];\n	""24"" -> ""1""[label=""cfg_true""];\n	""24"" -> ""10""[label=""cfg_except""];\n	""24"" -> ""7""[label=""cfg_false""];\n	""25"" -> ""33""[label=""cfg_false""];\n	""25"" -> ""37""[label=""cfg_true""];\n	""26"" -> ""10""[label=""cfg_except""];\n	""26"" -> ""16""[label=""cfg_true""];\n	""26"" -> ""9""[label=""cfg_false""];\n	""27"" -> ""10""[label=""cfg_except""];\n	""27"" -> ""39""[label=""cfg_true""];\n	""27"" -> ""8""[label=""cfg_false""];\n	""28"" -> ""1""[label=""cfg_true""];\n	""28"" -> ""10""[label=""cfg_except""];\n	""28"" -> ""4""[label=""cfg_false""];\n	""29"" -> ""10""[label=""cfg_except""];\n	""29"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_except""];\n	""3"" -> ""29""[label=""cfg_next""];\n	""30"" -> ""1""[label=""cfg_next""];\n	""30"" -> ""10""[label=""cfg_except""];\n	""31"" -> ""10""[label=""cfg_except""];\n	""31"" -> ""41""[label=""cfg_next""];\n	""32"" -> ""10""[label=""cfg_except""];\n	""32"" -> ""40""[label=""cfg_next""];\n	""35"" -> ""34""[label=""cfg_next""];\n	""36"" -> ""11""[label=""cfg_next""];\n	""37"" -> ""13""[label=""cfg_next""];\n	""38"" -> ""35""[label=""cfg_next""];\n	""39"" -> ""10""[label=""cfg_except""];\n	""39"" -> ""28""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_except""];\n	""4"" -> ""23""[label=""cfg_next""];\n	""40"" -> ""10""[label=""cfg_except""];\n	""40"" -> ""19""[label=""cfg_next""];\n	""41"" -> ""10""[label=""cfg_except""];\n	""41"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_except""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_except""];\n	""6"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_except""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_except""];\n	""8"" -> ""31""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_except""];\n	""9"" -> ""32""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._constructDefaultPrettyPrinter(),Method,No Comment,@Override\nprotected PrettyPrinter _constructDefaultPrettyPrinter() {\n    return new DefaultXmlPrettyPrinter();\n},com.fasterxml.jackson.core.PrettyPrinter _constructDefaultPrettyPrinter(),"digraph cfg__constructDefaultPrettyPrinter {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: void <init>()>()""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setPrettyPrinter(PrettyPrinter),Method,No Comment,@Override\npublic JsonGenerator setPrettyPrinter(PrettyPrinter pp) {\n    _cfgPrettyPrinter = pp;\n    _xmlPrettyPrinter = (pp instanceof XmlPrettyPrinter) ? (XmlPrettyPrinter) pp : null;\n    return this;\n},com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter),"digraph cfg_setPrettyPrinter {\n	""1"" [label=""$stack2 = pp instanceof com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter) pp""];\n	""3"" [label=""$stack3 = null""];\n	""4"" [label=""goto""];\n	""5"" [label=""if $stack2 == 0""];\n	""6"" [label=""pp := @parameter0: com.fasterxml.jackson.core.PrettyPrinter""];\n	""7"" [label=""return this""];\n	""8"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter> = pp""];\n	""10"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter> = $stack3""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_goto""];\n	""5"" -> ""2""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_true""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getOutputTarget(),Method,No Comment,"@Override\npublic Object getOutputTarget() {\n    // Stax2 does not expose underlying target, so best we can do is to return\n    // the Stax XMLStreamWriter instance:\n    return _originalXmlWriter;\n}",java.lang.Object getOutputTarget(),"digraph cfg_getOutputTarget {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.stream.XMLStreamWriter _originalXmlWriter>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getOutputBuffered(),Method,"* Stax2 does not expose buffered content amount, so we can only return\n     * <code>-1</code> from here",@Override\npublic int getOutputBuffered() {\n    return -1;\n},int getOutputBuffered(),"digraph cfg_getOutputBuffered {\n	""1"" [label=""return -1""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getFormatFeatures(),Method,No Comment,@Override\npublic int getFormatFeatures() {\n    return _formatFeatures;\n},int getFormatFeatures(),"digraph cfg_getFormatFeatures {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.overrideFormatFeatures(int,int)",Method,No Comment,"// since 2.7\n@Override\npublic JsonGenerator overrideFormatFeatures(int values, int mask) {\n    int oldF = _formatFeatures;\n    int newF = (_formatFeatures & ~mask) | (values & mask);\n    if (oldF != newF) {\n        _formatFeatures = newF;\n    }\n    return this;\n}","com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int,int)","digraph cfg_overrideFormatFeatures {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""2"" [label=""$stack6 = mask ^ -1""];\n	""3"" [label=""$stack7 = $stack5 & $stack6""];\n	""4"" [label=""$stack8 = values & mask""];\n	""5"" [label=""if oldF == newF""];\n	""6"" [label=""mask := @parameter1: int""];\n	""7"" [label=""newF = $stack7 | $stack8""];\n	""8"" [label=""oldF = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""9"" [label=""return this""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""11"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures> = newF""];\n	""12"" [label=""values := @parameter0: int""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""9""[label=""cfg_true""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.streamWriteConstraints(),Method,No Comment,@Override\npublic StreamWriteConstraints streamWriteConstraints() {\n    return _streamWriteConstraints;\n},com.fasterxml.jackson.core.StreamWriteConstraints streamWriteConstraints(),"digraph cfg_streamWriteConstraints {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.StreamWriteConstraints _streamWriteConstraints>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.enable(Feature),Method,No Comment,public ToXmlGenerator enable(Feature f) {\n    _formatFeatures |= f.getMask();\n    return this;\n},com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator enable(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature),"digraph cfg_enable {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""2"" [label=""$stack3 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: int getMask()>()""];\n	""3"" [label=""$stack4 = $stack2 | $stack3""];\n	""4"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature""];\n	""5"" [label=""return this""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures> = $stack4""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.disable(Feature),Method,No Comment,public ToXmlGenerator disable(Feature f) {\n    _formatFeatures &= ~f.getMask();\n    return this;\n},com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator disable(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature),"digraph cfg_disable {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""2"" [label=""$stack3 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: int getMask()>()""];\n	""3"" [label=""$stack4 = $stack3 ^ -1""];\n	""4"" [label=""$stack5 = $stack2 & $stack4""];\n	""5"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature""];\n	""6"" [label=""return this""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures> = $stack5""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.isEnabled(Feature),Method,No Comment,public final boolean isEnabled(Feature f) {\n    return (_formatFeatures & f.getMask()) != 0;\n},boolean isEnabled(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature),"digraph cfg_isEnabled {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""2"" [label=""$stack3 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: int getMask()>()""];\n	""3"" [label=""$stack4 = $stack2 & $stack3""];\n	""4"" [label=""$stack5 = 0""];\n	""5"" [label=""$stack5 = 1""];\n	""6"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature""];\n	""7"" [label=""goto""];\n	""8"" [label=""if $stack4 == 0""];\n	""9"" [label=""return $stack5""];\n	""10"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_goto""];\n	""8"" -> ""4""[label=""cfg_true""];\n	""8"" -> ""5""[label=""cfg_false""];\n}\n","public , final "
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.configure(Feature,boolean)",Method,No Comment,"public ToXmlGenerator configure(Feature f, boolean state) {\n    if (state) {\n        enable(f);\n    } else {\n        disable(f);\n    }\n    return this;\n}","com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator configure(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature,boolean)","digraph cfg_configure {\n	""1"" [label=""f := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature""];\n	""2"" [label=""goto""];\n	""3"" [label=""if state == 0""];\n	""4"" [label=""return this""];\n	""5"" [label=""state := @parameter1: boolean""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""7"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator disable(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature)>(f)""];\n	""8"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator enable(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature)>(f)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_goto""];\n	""3"" -> ""7""[label=""cfg_true""];\n	""3"" -> ""8""[label=""cfg_false""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""4""[label=""cfg_next""];\n	""8"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.canWriteFormattedNumbers(),Method,No Comment,@Override\npublic boolean canWriteFormattedNumbers() {\n    return true;\n},boolean canWriteFormattedNumbers(),"digraph cfg_canWriteFormattedNumbers {\n	""1"" [label=""return 1""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getWriteCapabilities(),Method,No Comment,// @since 2.12\n@Override\npublic JacksonFeatureSet<StreamWriteCapability> getWriteCapabilities() {\n    return DEFAULT_TEXTUAL_WRITE_CAPABILITIES;\n},com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities(),"digraph cfg_getWriteCapabilities {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_TEXTUAL_WRITE_CAPABILITIES>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.inRoot(),Method,@since 2.7.5,public boolean inRoot() {\n    return _writeContext.inRoot();\n},boolean inRoot(),"digraph cfg_inRoot {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inRoot()>()""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.getStaxWriter(),Method,"* Method that allows application direct access to underlying\n     * Stax {@link XMLStreamWriter}. Note that use of writer is\n     * discouraged, and may interfere with processing of this writer;\n     * however, occasionally it may be necessary.\n     *<p>\n     * Note: writer instance will always be of type\n     * {@link org.codehaus.stax2.XMLStreamWriter2} (including\n     * Typed Access API) so upcasts are safe.",public XMLStreamWriter getStaxWriter() {\n    return _xmlWriter;\n},javax.xml.stream.XMLStreamWriter getStaxWriter(),"digraph cfg_getStaxWriter {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextIsAttribute(boolean),Method,No Comment,public void setNextIsAttribute(boolean isAttribute) {\n    _nextIsAttribute = isAttribute;\n},void setNextIsAttribute(boolean),"digraph cfg_setNextIsAttribute {\n	""1"" [label=""isAttribute := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute> = isAttribute""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextIsUnwrapped(boolean),Method,No Comment,public void setNextIsUnwrapped(boolean isUnwrapped) {\n    _nextIsUnwrapped = isUnwrapped;\n},void setNextIsUnwrapped(boolean),"digraph cfg_setNextIsUnwrapped {\n	""1"" [label=""isUnwrapped := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsUnwrapped> = isUnwrapped""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextIsCData(boolean),Method,No Comment,public void setNextIsCData(boolean isCData) {\n    _nextIsCData = isCData;\n},void setNextIsCData(boolean),"digraph cfg_setNextIsCData {\n	""1"" [label=""isCData := @parameter0: boolean""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData> = isCData""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextName(QName),Method,No Comment,public final void setNextName(QName name) {\n    _nextName = name;\n},void setNextName(javax.xml.namespace.QName),"digraph cfg_setNextName {\n	""1"" [label=""name := @parameter0: javax.xml.namespace.QName""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName> = name""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.setNextNameIfMissing(QName),Method,"* Method that does same as {@link #setNextName}, unless\n     * a name has already been set.\n     * \n     * @since 2.1.2",public final boolean setNextNameIfMissing(QName name) {\n    if (_nextName == null) {\n        _nextName = name;\n        return true;\n    }\n    return false;\n},boolean setNextNameIfMissing(javax.xml.namespace.QName),"digraph cfg_setNextNameIfMissing {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""2"" [label=""if $stack2 != null""];\n	""3"" [label=""name := @parameter0: javax.xml.namespace.QName""];\n	""4"" [label=""return 0""];\n	""5"" [label=""return 1""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""7"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName> = name""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_true""];\n	""2"" -> ""7""[label=""cfg_false""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""7"" -> ""5""[label=""cfg_next""];\n}\n","public , final "
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.startWrappedValue(QName,QName)",Method,"* Methdod called when a structured (collection, array, map) is being\n     * output.\n     * \n     * @param wrapperName Element used as wrapper around elements, if any (null if none)\n     * @param wrappedName Element used around individual content items (can not\n     *   be null)","public void startWrappedValue(QName wrapperName, QName wrappedName) throws IOException {\n    if (wrapperName != null) {\n        try {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeStartElement(_xmlWriter, wrapperName.getNamespaceURI(), wrapperName.getLocalPart());\n            } else {\n                _xmlWriter.writeStartElement(wrapperName.getNamespaceURI(), wrapperName.getLocalPart());\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, this);\n        }\n    }\n    this.setNextName(wrappedName);\n}","void startWrappedValue(javax.xml.namespace.QName,javax.xml.namespace.QName)","digraph cfg_startWrappedValue {\n	""1"" [label=""$stack10 = virtualinvoke wrapperName.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""2"" [label=""$stack11 = virtualinvoke wrapperName.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack12 := @caughtexception""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""5"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack6 = virtualinvoke wrapperName.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""7"" [label=""$stack7 = virtualinvoke wrapperName.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""8"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""9"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""e = $stack12""];\n	""11"" [label=""goto""];\n	""12"" [label=""goto""];\n	""13"" [label=""if $stack4 == null""];\n	""14"" [label=""if wrapperName == null""];\n	""15"" [label=""interfaceinvoke $stack5.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack7, $stack6)""];\n	""16"" [label=""interfaceinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeStartElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)>($stack9, $stack11, $stack10)""];\n	""17"" [label=""return""];\n	""18"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""19"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""20"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextName(javax.xml.namespace.QName)>(wrappedName)""];\n	""21"" [label=""wrappedName := @parameter1: javax.xml.namespace.QName""];\n	""22"" [label=""wrapperName := @parameter0: javax.xml.namespace.QName""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""1"" -> ""3""[label=""cfg_except""];\n	""10"" -> ""18""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_goto""];\n	""11"" -> ""3""[label=""cfg_except""];\n	""12"" -> ""20""[label=""cfg_goto""];\n	""13"" -> ""3""[label=""cfg_except""];\n	""13"" -> ""5""[label=""cfg_true""];\n	""13"" -> ""8""[label=""cfg_false""];\n	""14"" -> ""20""[label=""cfg_true""];\n	""14"" -> ""4""[label=""cfg_false""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""3""[label=""cfg_except""];\n	""16"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""3""[label=""cfg_except""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""22""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""20"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""14""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""3""[label=""cfg_except""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_except""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n	""9"" -> ""3""[label=""cfg_except""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.finishWrappedValue(QName,QName)",Method,* Method called after a structured collection output has completed,"public void finishWrappedValue(QName wrapperName, QName wrappedName) throws IOException {\n    // First: wrapper to close?\n    if (wrapperName != null) {\n        try {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeEndElement(_xmlWriter, _writeContext.getEntryCount());\n            } else {\n                _xmlWriter.writeEndElement();\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, this);\n        }\n    }\n}","void finishWrappedValue(javax.xml.namespace.QName,javax.xml.namespace.QName)","digraph cfg_finishWrappedValue {\n	""1"" [label=""$stack10 := @caughtexception""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""3"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""5"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""6"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack9 = virtualinvoke $stack6.<com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>()""];\n	""8"" [label=""e = $stack10""];\n	""9"" [label=""goto""];\n	""10"" [label=""goto""];\n	""11"" [label=""if $stack4 == null""];\n	""12"" [label=""if wrapperName == null""];\n	""13"" [label=""interfaceinvoke $stack5.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""14"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeEndElement(org.codehaus.stax2.XMLStreamWriter2,int)>($stack8, $stack9)""];\n	""15"" [label=""return""];\n	""16"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""17"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""18"" [label=""wrappedName := @parameter1: javax.xml.namespace.QName""];\n	""19"" [label=""wrapperName := @parameter0: javax.xml.namespace.QName""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_goto""];\n	""11"" -> ""1""[label=""cfg_except""];\n	""11"" -> ""3""[label=""cfg_true""];\n	""11"" -> ""5""[label=""cfg_false""];\n	""12"" -> ""15""[label=""cfg_true""];\n	""12"" -> ""2""[label=""cfg_false""];\n	""13"" -> ""1""[label=""cfg_except""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_except""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""12""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_except""];\n	""2"" -> ""11""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_except""];\n	""3"" -> ""13""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_except""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_except""];\n	""7"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_except""];\n	""9"" -> ""10""[label=""cfg_goto""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRepeatedFieldName(),Method,* Trivial helper method called when to add a replicated wrapper name\n     * \n     * @since 2.2,"public void writeRepeatedFieldName() throws IOException {\n    if (_writeContext.writeFieldName(_nextName.getLocalPart()) == JsonWriteContext.STATUS_EXPECT_VALUE) {\n        _reportError(""Can not write a field name, expecting a value"");\n    }\n}",void writeRepeatedFieldName(),"digraph cfg_writeRepeatedFieldName {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""3"" [label=""$stack3 = virtualinvoke $stack1.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""4"" [label=""$stack4 = virtualinvoke $stack2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>($stack3)""];\n	""5"" [label=""if $stack4 != 4""];\n	""6"" [label=""return""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""8"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportError(java.lang.String)>(\""Can not write a field name, expecting a value\"")""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_true""];\n	""5"" -> ""8""[label=""cfg_false""];\n	""7"" -> ""2""[label=""cfg_next""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeFieldName(SerializableString),Method,No Comment,@Override\npublic void writeFieldName(SerializableString name) throws IOException {\n    writeFieldName(name.getValue());\n},void writeFieldName(com.fasterxml.jackson.core.SerializableString),"digraph cfg_writeFieldName {\n	""1"" [label=""$stack2 = interfaceinvoke name.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>()""];\n	""2"" [label=""name := @parameter0: com.fasterxml.jackson.core.SerializableString""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""5"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeFieldName(java.lang.String)>($stack2)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeFieldName(String),Method,No Comment,"@Override\npublic final void writeFieldName(String name) throws IOException {\n    if (_writeContext.writeFieldName(name) == JsonWriteContext.STATUS_EXPECT_VALUE) {\n        _reportError(""Can not write a field name, expecting a value"");\n    }\n    String ns;\n    // 30-Jan-2024, tatu: Surprise!\n    if (Feature.AUTO_DETECT_XSI_TYPE.enabledIn(_formatFeatures) && ""xsi:type"".equals(name)) {\n        setNextName(new QName(XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI, ""type"", ""xsi""));\n        setNextIsAttribute(true);\n    } else {\n        // Should this ever get called?\n        ns = (_nextName == null) ? """" : _nextName.getNamespaceURI();\n        _nameToEncode.namespace = ns;\n        _nameToEncode.localPart = name;\n        _nameProcessor.encodeName(_nameToEncode);\n        setNextName(new QName(_nameToEncode.namespace, _nameToEncode.localPart));\n    }\n}",void writeFieldName(java.lang.String),"digraph cfg_writeFieldName {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToEncode>""];\n	""2"" [label=""$stack10.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String namespace> = ns""];\n	""3"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToEncode>""];\n	""4"" [label=""$stack11.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart> = name""];\n	""5"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToEncode>""];\n	""6"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor>""];\n	""7"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToEncode>""];\n	""8"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToEncode>""];\n	""9"" [label=""$stack16 = $stack15.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String localPart>""];\n	""10"" [label=""$stack17 = $stack14.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: java.lang.String namespace>""];\n	""11"" [label=""$stack18 = new javax.xml.namespace.QName""];\n	""12"" [label=""$stack19 = \""xsi:type\""""];\n	""13"" [label=""$stack20 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>(name)""];\n	""14"" [label=""$stack21 = new javax.xml.namespace.QName""];\n	""15"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""16"" [label=""$stack4 = virtualinvoke $stack3.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(name)""];\n	""17"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures>""];\n	""18"" [label=""$stack6 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature AUTO_DETECT_XSI_TYPE>""];\n	""19"" [label=""$stack7 = virtualinvoke $stack6.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: boolean enabledIn(int)>($stack5)""];\n	""20"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""21"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""if $stack20 == 0""];\n	""25"" [label=""if $stack4 != 4""];\n	""26"" [label=""if $stack7 == 0""];\n	""27"" [label=""if $stack8 != null""];\n	""28"" [label=""interfaceinvoke $stack13.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor: void encodeName(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName)>($stack12)""];\n	""29"" [label=""name := @parameter0: java.lang.String""];\n	""30"" [label=""ns = \""\""""];\n	""31"" [label=""ns = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""32"" [label=""return""];\n	""33"" [label=""specialinvoke $stack18.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($stack17, $stack16)""];\n	""34"" [label=""specialinvoke $stack21.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(\""http://www.w3.org/2001/XMLSchema-instance\"", \""type\"", \""xsi\"")""];\n	""35"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""36"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportError(java.lang.String)>(\""Can not write a field name, expecting a value\"")""];\n	""37"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextIsAttribute(boolean)>(1)""];\n	""38"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextName(javax.xml.namespace.QName)>($stack18)""];\n	""39"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void setNextName(javax.xml.namespace.QName)>($stack21)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""34""[label=""cfg_next""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""19"" -> ""26""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""27""[label=""cfg_next""];\n	""21"" -> ""31""[label=""cfg_next""];\n	""22"" -> ""32""[label=""cfg_goto""];\n	""23"" -> ""1""[label=""cfg_goto""];\n	""24"" -> ""14""[label=""cfg_false""];\n	""24"" -> ""20""[label=""cfg_true""];\n	""25"" -> ""18""[label=""cfg_true""];\n	""25"" -> ""36""[label=""cfg_false""];\n	""26"" -> ""12""[label=""cfg_false""];\n	""26"" -> ""20""[label=""cfg_true""];\n	""27"" -> ""21""[label=""cfg_true""];\n	""27"" -> ""30""[label=""cfg_false""];\n	""28"" -> ""11""[label=""cfg_next""];\n	""29"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""23""[label=""cfg_next""];\n	""31"" -> ""1""[label=""cfg_next""];\n	""33"" -> ""38""[label=""cfg_next""];\n	""34"" -> ""39""[label=""cfg_next""];\n	""35"" -> ""29""[label=""cfg_next""];\n	""36"" -> ""18""[label=""cfg_next""];\n	""37"" -> ""22""[label=""cfg_next""];\n	""38"" -> ""32""[label=""cfg_next""];\n	""39"" -> ""37""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""28""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""33""[label=""cfg_next""];\n}\n","public , final "
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStringField(String,String)",Method,No Comment,"@Override\npublic final void writeStringField(String fieldName, String value) throws IOException {\n    writeFieldName(fieldName);\n    writeString(value);\n}","void writeStringField(java.lang.String,java.lang.String)","digraph cfg_writeStringField {\n	""1"" [label=""fieldName := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""value := @parameter1: java.lang.String""];\n	""5"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeFieldName(java.lang.String)>(fieldName)""];\n	""6"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeString(java.lang.String)>(value)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStartArray(),Method,No Comment,"@Override\npublic final void writeStartArray() throws IOException {\n    _verifyValueWrite(""start an array"");\n    _writeContext = _writeContext.createChildArrayContext();\n    streamWriteConstraints().validateNestingDepth(_writeContext.getNestingDepth());\n    if (_cfgPrettyPrinter != null) {\n        _cfgPrettyPrinter.writeStartArray(this);\n    } else {\n        // nothing to do here; no-operation\n    }\n}",void writeStartArray(),"digraph cfg_writeStartArray {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext()>()""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<com.fasterxml.jackson.core.json.JsonWriteContext: int getNestingDepth()>()""];\n	""5"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.StreamWriteConstraints streamWriteConstraints()>()""];\n	""6"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""7"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""8"" [label=""if $stack6 == null""];\n	""9"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(com.fasterxml.jackson.core.JsonGenerator)>(this)""];\n	""10"" [label=""return""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""12"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $stack2""];\n	""13"" [label=""virtualinvoke $stack5.<com.fasterxml.jackson.core.StreamWriteConstraints: void validateNestingDepth(int)>($stack4)""];\n	""14"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""start an array\"")""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_next""];\n	""14"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""10""[label=""cfg_true""];\n	""8"" -> ""7""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeEndArray(),Method,No Comment,"@Override\npublic final void writeEndArray() throws IOException {\n    if (!_writeContext.inArray()) {\n        _reportError(""Current context not Array but "" + _writeContext.typeDesc());\n    }\n    if (_cfgPrettyPrinter != null) {\n        _cfgPrettyPrinter.writeEndArray(this, _writeContext.getEntryCount());\n    } else {\n        // nothing to do here; no-operation\n    }\n    _writeContext = _writeContext.getParent();\n}",void writeEndArray(),"digraph cfg_writeEndArray {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""2"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""3"" [label=""$stack11 = virtualinvoke $stack10.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>()""];\n	""4"" [label=""$stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Current context not Array but \"")""];\n	""5"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11)""];\n	""6"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inArray()>()""];\n	""8"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""9"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""10"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext getParent()>()""];\n	""11"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""12"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""13"" [label=""$stack8 = virtualinvoke $stack6.<com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>()""];\n	""14"" [label=""$stack9 = new java.lang.StringBuilder""];\n	""15"" [label=""if $stack2 != 0""];\n	""16"" [label=""if $stack3 == null""];\n	""17"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.core.PrettyPrinter: void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)>(this, $stack8)""];\n	""18"" [label=""return""];\n	""19"" [label=""specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>()""];\n	""20"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""21"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $stack5""];\n	""22"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportError(java.lang.String)>($stack14)""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_next""];\n	""14"" -> ""19""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_false""];\n	""15"" -> ""8""[label=""cfg_true""];\n	""16"" -> ""12""[label=""cfg_false""];\n	""16"" -> ""9""[label=""cfg_true""];\n	""17"" -> ""9""[label=""cfg_next""];\n	""19"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""1""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""22"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""22""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_next""];\n	""8"" -> ""16""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStartObject(),Method,No Comment,"@Override\npublic final void writeStartObject() throws IOException {\n    _verifyValueWrite(""start an object"");\n    _writeContext = _writeContext.createChildObjectContext();\n    streamWriteConstraints().validateNestingDepth(_writeContext.getNestingDepth());\n    if (_cfgPrettyPrinter != null) {\n        _cfgPrettyPrinter.writeStartObject(this);\n    } else {\n        _handleStartObject();\n    }\n}",void writeStartObject(),"digraph cfg_writeStartObject {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""2"" [label=""$stack2 = virtualinvoke $stack1.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>()""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""4"" [label=""$stack4 = virtualinvoke $stack3.<com.fasterxml.jackson.core.json.JsonWriteContext: int getNestingDepth()>()""];\n	""5"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.StreamWriteConstraints streamWriteConstraints()>()""];\n	""6"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""7"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""8"" [label=""goto""];\n	""9"" [label=""if $stack6 == null""];\n	""10"" [label=""interfaceinvoke $stack7.<com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(com.fasterxml.jackson.core.JsonGenerator)>(this)""];\n	""11"" [label=""return""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""13"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $stack2""];\n	""14"" [label=""virtualinvoke $stack5.<com.fasterxml.jackson.core.StreamWriteConstraints: void validateNestingDepth(int)>($stack4)""];\n	""15"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _handleStartObject()>()""];\n	""16"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""start an object\"")""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""13"" -> ""5""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_next""];\n	""7"" -> ""10""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_goto""];\n	""9"" -> ""15""[label=""cfg_true""];\n	""9"" -> ""7""[label=""cfg_false""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeEndObject(),Method,No Comment,"@Override\npublic final void writeEndObject() throws IOException {\n    if (!_writeContext.inObject()) {\n        _reportError(""Current context not Object but "" + _writeContext.typeDesc());\n    }\n    _writeContext = _writeContext.getParent();\n    if (_cfgPrettyPrinter != null) {\n        // as per [Issue#45], need to suppress indentation if only attributes written:\n        int count = _nextIsAttribute ? 0 : _writeContext.getEntryCount();\n        _cfgPrettyPrinter.writeEndObject(this, count);\n    } else {\n        _handleEndObject();\n    }\n}",void writeEndObject(),"digraph cfg_writeEndObject {\n	""1"" [label=""$stack10 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Current context not Object but \"")""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12)""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""8"" [label=""$stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inObject()>()""];\n	""9"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""10"" [label=""$stack5 = virtualinvoke $stack4.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext getParent()>()""];\n	""11"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""12"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""13"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""14"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""15"" [label=""count = 0""];\n	""16"" [label=""count = virtualinvoke $stack8.<com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>()""];\n	""17"" [label=""goto""];\n	""18"" [label=""goto""];\n	""19"" [label=""if $stack3 != 0""];\n	""20"" [label=""if $stack6 == null""];\n	""21"" [label=""if $stack7 == 0""];\n	""22"" [label=""interfaceinvoke $stack9.<com.fasterxml.jackson.core.PrettyPrinter: void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)>(this, count)""];\n	""23"" [label=""return""];\n	""24"" [label=""specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>()""];\n	""25"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""26"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = $stack5""];\n	""27"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _handleEndObject()>()""];\n	""28"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportError(java.lang.String)>($stack15)""];\n	""1"" -> ""24""[label=""cfg_next""];\n	""10"" -> ""26""[label=""cfg_next""];\n	""11"" -> ""20""[label=""cfg_next""];\n	""12"" -> ""21""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""22""[label=""cfg_next""];\n	""15"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_goto""];\n	""18"" -> ""23""[label=""cfg_goto""];\n	""19"" -> ""1""[label=""cfg_false""];\n	""19"" -> ""9""[label=""cfg_true""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""12""[label=""cfg_false""];\n	""20"" -> ""27""[label=""cfg_true""];\n	""21"" -> ""13""[label=""cfg_true""];\n	""21"" -> ""15""[label=""cfg_false""];\n	""22"" -> ""18""[label=""cfg_next""];\n	""24"" -> ""4""[label=""cfg_next""];\n	""25"" -> ""7""[label=""cfg_next""];\n	""26"" -> ""11""[label=""cfg_next""];\n	""27"" -> ""23""[label=""cfg_next""];\n	""28"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""28""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._handleStartObject(),Method,note: public just because pretty printer needs to make a callback,"public final void _handleStartObject() throws IOException {\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    // Need to keep track of names to make Lists work correctly\n    _elementNameStack.addLast(_nextName);\n    try {\n        _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void _handleStartObject(),"digraph cfg__handleStartObject {\n	""1"" [label=""$stack10 := @caughtexception""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""3"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""4"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: java.util.LinkedList _elementNameStack>""];\n	""5"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""6"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""8"" [label=""$stack8 = virtualinvoke $stack7.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""9"" [label=""$stack9 = virtualinvoke $stack5.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""10"" [label=""e = $stack10""];\n	""11"" [label=""goto""];\n	""12"" [label=""if $stack2 != null""];\n	""13"" [label=""interfaceinvoke $stack6.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack9, $stack8)""];\n	""14"" [label=""return""];\n	""15"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""16"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""17"" [label=""virtualinvoke $stack4.<java.util.LinkedList: void addLast(java.lang.Object)>($stack3)""];\n	""18"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_next""];\n	""11"" -> ""14""[label=""cfg_goto""];\n	""12"" -> ""18""[label=""cfg_false""];\n	""12"" -> ""4""[label=""cfg_true""];\n	""13"" -> ""1""[label=""cfg_except""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""6""[label=""cfg_next""];\n	""18"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""12""[label=""cfg_next""];\n	""3"" -> ""17""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_except""];\n	""5"" -> ""9""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_except""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_except""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._handleEndObject(),Method,note: public just because pretty printer needs to make a callback,"public final void _handleEndObject() throws IOException {\n    // We may want to repeat same element, so:\n    if (_elementNameStack.isEmpty()) {\n        throw new JsonGenerationException(""Can not write END_ELEMENT without open START_ELEMENT"", this);\n    }\n    _nextName = _elementNameStack.removeLast();\n    try {\n        // note: since attributes don't nest, can only have one attribute active, so:\n        _nextIsAttribute = false;\n        _xmlWriter.writeEndElement();\n        // [databind-xml#172]: possibly also need indentation\n        if (_elementNameStack.isEmpty() && (_xmlPrettyPrinter != null)) {\n            // ... but only if it is likely to succeed:\n            if (!_stax2Emulation) {\n                _xmlPrettyPrinter.writePrologLinefeed(_xmlWriter);\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void _handleEndObject(),"digraph cfg__handleEndObject {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""5"" [label=""$stack14 = new com.fasterxml.jackson.core.JsonGenerationException""];\n	""6"" [label=""$stack15 := @caughtexception""];\n	""7"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: java.util.LinkedList _elementNameStack>""];\n	""8"" [label=""$stack3 = virtualinvoke $stack2.<java.util.LinkedList: boolean isEmpty()>()""];\n	""9"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: java.util.LinkedList _elementNameStack>""];\n	""10"" [label=""$stack5 = virtualinvoke $stack4.<java.util.LinkedList: java.lang.Object removeLast()>()""];\n	""11"" [label=""$stack6 = (javax.xml.namespace.QName) $stack5""];\n	""12"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""13"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: java.util.LinkedList _elementNameStack>""];\n	""14"" [label=""$stack9 = virtualinvoke $stack8.<java.util.LinkedList: boolean isEmpty()>()""];\n	""15"" [label=""e = $stack15""];\n	""16"" [label=""goto""];\n	""17"" [label=""if $stack10 == null""];\n	""18"" [label=""if $stack11 != 0""];\n	""19"" [label=""if $stack3 == 0""];\n	""20"" [label=""if $stack9 == 0""];\n	""21"" [label=""interfaceinvoke $stack13.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writePrologLinefeed(org.codehaus.stax2.XMLStreamWriter2)>($stack12)""];\n	""22"" [label=""interfaceinvoke $stack7.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""23"" [label=""return""];\n	""24"" [label=""specialinvoke $stack14.<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator)>(\""Can not write END_ELEMENT without open START_ELEMENT\"", this)""];\n	""25"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""26"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute> = 0""];\n	""28"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName> = $stack6""];\n	""29"" [label=""throw $stack14""];\n	""1"" -> ""17""[label=""cfg_next""];\n	""1"" -> ""6""[label=""cfg_except""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""28""[label=""cfg_next""];\n	""12"" -> ""22""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_except""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""6""[label=""cfg_except""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""14"" -> ""6""[label=""cfg_except""];\n	""15"" -> ""25""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_goto""];\n	""17"" -> ""16""[label=""cfg_true""];\n	""17"" -> ""2""[label=""cfg_false""];\n	""17"" -> ""6""[label=""cfg_except""];\n	""18"" -> ""16""[label=""cfg_true""];\n	""18"" -> ""4""[label=""cfg_false""];\n	""18"" -> ""6""[label=""cfg_except""];\n	""19"" -> ""5""[label=""cfg_false""];\n	""19"" -> ""9""[label=""cfg_true""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_except""];\n	""20"" -> ""1""[label=""cfg_false""];\n	""20"" -> ""16""[label=""cfg_true""];\n	""20"" -> ""6""[label=""cfg_except""];\n	""21"" -> ""16""[label=""cfg_next""];\n	""21"" -> ""6""[label=""cfg_except""];\n	""22"" -> ""13""[label=""cfg_next""];\n	""22"" -> ""6""[label=""cfg_except""];\n	""24"" -> ""29""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""26"" -> ""7""[label=""cfg_next""];\n	""27"" -> ""12""[label=""cfg_next""];\n	""27"" -> ""6""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_except""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_except""];\n	""5"" -> ""24""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_next""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""19""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n","public , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeString(String),Method,No Comment,"@Override\npublic void writeString(String text) throws IOException {\n    if (text == null) {\n        // [dataformat-xml#413]\n        writeNull();\n        return;\n    }\n    _verifyValueWrite(""write String value"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            // must write attribute name and value with one call\n            _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), text);\n        } else if (checkNextIsUnwrapped()) {\n            // [dataformat-xml#56] Should figure out how to prevent indentation for end element\n            //   but for now, let's just make sure structure is correct\n            //if (_xmlPrettyPrinter != null) { ... }\n            if (_nextIsCData) {\n                _xmlWriter.writeCData(text);\n            } else {\n                _xmlWriter.writeCharacters(text);\n            }\n        } else if (_xmlPrettyPrinter != null) {\n            _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), text, _nextIsCData);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            if (_nextIsCData) {\n                _xmlWriter.writeCData(text);\n            } else {\n                _xmlWriter.writeCharacters(text);\n            }\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeString(java.lang.String),"digraph cfg_writeString {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData>""];\n	""12"" [label=""$stack21 = virtualinvoke $stack19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""13"" [label=""$stack22 = virtualinvoke $stack16.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData>""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""16"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""17"" [label=""$stack26 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""18"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""19"" [label=""$stack28 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""20"" [label=""$stack29 = virtualinvoke $stack28.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""21"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""22"" [label=""$stack30 = virtualinvoke $stack26.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""23"" [label=""$stack31 := @caughtexception""];\n	""24"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""25"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""26"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""27"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""28"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""29"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""30"" [label=""e = $stack31""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""if $stack12 == 0""];\n	""38"" [label=""if $stack23 == 0""];\n	""39"" [label=""if $stack3 != null""];\n	""40"" [label=""if $stack4 == 0""];\n	""41"" [label=""if $stack5 == 0""];\n	""42"" [label=""if $stack6 == null""];\n	""43"" [label=""if text != null""];\n	""44"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(java.lang.String)>(text)""];\n	""45"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""46"" [label=""interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(java.lang.String)>(text)""];\n	""47"" [label=""interfaceinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.lang.String,boolean)>($stack18, $stack22, $stack21, text, $stack20)""];\n	""48"" [label=""interfaceinvoke $stack24.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(java.lang.String)>(text)""];\n	""49"" [label=""interfaceinvoke $stack25.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(java.lang.String)>(text)""];\n	""50"" [label=""interfaceinvoke $stack27.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($stack30, $stack29, text)""];\n	""51"" [label=""interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack11, $stack10)""];\n	""52"" [label=""return""];\n	""53"" [label=""return""];\n	""54"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""55"" [label=""text := @parameter0: java.lang.String""];\n	""56"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""57"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write String value\"")""];\n	""58"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""59"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeNull()>()""];\n	""1"" -> ""23""[label=""cfg_except""];\n	""1"" -> ""51""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""23""[label=""cfg_except""];\n	""11"" -> ""23""[label=""cfg_except""];\n	""11"" -> ""47""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_except""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""23""[label=""cfg_except""];\n	""14"" -> ""23""[label=""cfg_except""];\n	""14"" -> ""38""[label=""cfg_next""];\n	""15"" -> ""23""[label=""cfg_except""];\n	""15"" -> ""48""[label=""cfg_next""];\n	""16"" -> ""23""[label=""cfg_except""];\n	""16"" -> ""49""[label=""cfg_next""];\n	""17"" -> ""22""[label=""cfg_next""];\n	""17"" -> ""23""[label=""cfg_except""];\n	""18"" -> ""17""[label=""cfg_next""];\n	""18"" -> ""23""[label=""cfg_except""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""19"" -> ""23""[label=""cfg_except""];\n	""2"" -> ""23""[label=""cfg_except""];\n	""2"" -> ""29""[label=""cfg_next""];\n	""20"" -> ""23""[label=""cfg_except""];\n	""20"" -> ""50""[label=""cfg_next""];\n	""21"" -> ""39""[label=""cfg_next""];\n	""22"" -> ""19""[label=""cfg_next""];\n	""22"" -> ""23""[label=""cfg_except""];\n	""23"" -> ""30""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_except""];\n	""24"" -> ""40""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_except""];\n	""25"" -> ""41""[label=""cfg_next""];\n	""26"" -> ""23""[label=""cfg_except""];\n	""26"" -> ""42""[label=""cfg_next""];\n	""27"" -> ""2""[label=""cfg_next""];\n	""27"" -> ""23""[label=""cfg_except""];\n	""28"" -> ""23""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_next""];\n	""29"" -> ""1""[label=""cfg_next""];\n	""29"" -> ""23""[label=""cfg_except""];\n	""3"" -> ""23""[label=""cfg_except""];\n	""3"" -> ""37""[label=""cfg_next""];\n	""30"" -> ""54""[label=""cfg_next""];\n	""31"" -> ""23""[label=""cfg_except""];\n	""31"" -> ""32""[label=""cfg_goto""];\n	""32"" -> ""53""[label=""cfg_goto""];\n	""33"" -> ""23""[label=""cfg_except""];\n	""33"" -> ""32""[label=""cfg_goto""];\n	""34"" -> ""23""[label=""cfg_except""];\n	""34"" -> ""32""[label=""cfg_goto""];\n	""35"" -> ""23""[label=""cfg_except""];\n	""35"" -> ""32""[label=""cfg_goto""];\n	""36"" -> ""23""[label=""cfg_except""];\n	""36"" -> ""5""[label=""cfg_goto""];\n	""37"" -> ""23""[label=""cfg_except""];\n	""37"" -> ""4""[label=""cfg_true""];\n	""37"" -> ""6""[label=""cfg_false""];\n	""38"" -> ""15""[label=""cfg_true""];\n	""38"" -> ""16""[label=""cfg_false""];\n	""38"" -> ""23""[label=""cfg_except""];\n	""39"" -> ""24""[label=""cfg_true""];\n	""39"" -> ""58""[label=""cfg_false""];\n	""4"" -> ""23""[label=""cfg_except""];\n	""4"" -> ""44""[label=""cfg_next""];\n	""40"" -> ""18""[label=""cfg_false""];\n	""40"" -> ""23""[label=""cfg_except""];\n	""40"" -> ""25""[label=""cfg_true""];\n	""41"" -> ""14""[label=""cfg_false""];\n	""41"" -> ""23""[label=""cfg_except""];\n	""41"" -> ""26""[label=""cfg_true""];\n	""42"" -> ""23""[label=""cfg_except""];\n	""42"" -> ""28""[label=""cfg_true""];\n	""42"" -> ""8""[label=""cfg_false""];\n	""43"" -> ""57""[label=""cfg_true""];\n	""43"" -> ""59""[label=""cfg_false""];\n	""44"" -> ""23""[label=""cfg_except""];\n	""44"" -> ""5""[label=""cfg_next""];\n	""45"" -> ""23""[label=""cfg_except""];\n	""45"" -> ""32""[label=""cfg_next""];\n	""46"" -> ""23""[label=""cfg_except""];\n	""46"" -> ""36""[label=""cfg_next""];\n	""47"" -> ""23""[label=""cfg_except""];\n	""47"" -> ""35""[label=""cfg_next""];\n	""48"" -> ""23""[label=""cfg_except""];\n	""48"" -> ""34""[label=""cfg_next""];\n	""49"" -> ""23""[label=""cfg_except""];\n	""49"" -> ""33""[label=""cfg_next""];\n	""5"" -> ""23""[label=""cfg_except""];\n	""5"" -> ""45""[label=""cfg_next""];\n	""50"" -> ""23""[label=""cfg_except""];\n	""50"" -> ""31""[label=""cfg_next""];\n	""51"" -> ""23""[label=""cfg_except""];\n	""51"" -> ""3""[label=""cfg_next""];\n	""54"" -> ""53""[label=""cfg_next""];\n	""55"" -> ""43""[label=""cfg_next""];\n	""56"" -> ""55""[label=""cfg_next""];\n	""57"" -> ""21""[label=""cfg_next""];\n	""58"" -> ""24""[label=""cfg_next""];\n	""59"" -> ""52""[label=""cfg_next""];\n	""6"" -> ""23""[label=""cfg_except""];\n	""6"" -> ""46""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""23""[label=""cfg_except""];\n	""8"" -> ""23""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""23""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeString(char[],int,int)",Method,No Comment,"@Override\npublic void writeString(char[] text, int offset, int len) throws IOException {\n    _verifyValueWrite(""write String value"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), new String(text, offset, len));\n        } else if (checkNextIsUnwrapped()) {\n            // should we consider pretty-printing or not?\n            if (_nextIsCData) {\n                _xmlWriter.writeCData(text, offset, len);\n            } else {\n                _xmlWriter.writeCharacters(text, offset, len);\n            }\n        } else if (_xmlPrettyPrinter != null) {\n            _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), text, offset, len, _nextIsCData);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            if (_nextIsCData) {\n                _xmlWriter.writeCData(text, offset, len);\n            } else {\n                _xmlWriter.writeCharacters(text, offset, len);\n            }\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}","void writeString(char[],int,int)","digraph cfg_writeString {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData>""];\n	""14"" [label=""$stack23 = virtualinvoke $stack21.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""15"" [label=""$stack24 = virtualinvoke $stack18.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""16"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData>""];\n	""17"" [label=""$stack26 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""18"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""19"" [label=""$stack28 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""20"" [label=""$stack29 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""21"" [label=""$stack30 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""22"" [label=""$stack31 = new java.lang.String""];\n	""23"" [label=""$stack32 = virtualinvoke $stack30.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""24"" [label=""$stack33 = virtualinvoke $stack28.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""25"" [label=""$stack34 := @caughtexception""];\n	""26"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""27"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""28"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""29"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""30"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""31"" [label=""e = $stack34""];\n	""32"" [label=""goto""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""if $stack14 == 0""];\n	""39"" [label=""if $stack25 == 0""];\n	""40"" [label=""if $stack5 != null""];\n	""41"" [label=""if $stack6 == 0""];\n	""42"" [label=""if $stack7 == 0""];\n	""43"" [label=""if $stack8 == null""];\n	""44"" [label=""interfaceinvoke $stack10.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack13, $stack12)""];\n	""45"" [label=""interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(char[],int,int)>(text, offset, len)""];\n	""46"" [label=""interfaceinvoke $stack16.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""47"" [label=""interfaceinvoke $stack17.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(char[],int,int)>(text, offset, len)""];\n	""48"" [label=""interfaceinvoke $stack19.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,char[],int,int,boolean)>($stack20, $stack24, $stack23, text, offset, len, $stack22)""];\n	""49"" [label=""interfaceinvoke $stack26.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(char[],int,int)>(text, offset, len)""];\n	""50"" [label=""interfaceinvoke $stack27.<org.codehaus.stax2.XMLStreamWriter2: void writeCData(char[],int,int)>(text, offset, len)""];\n	""51"" [label=""interfaceinvoke $stack29.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($stack33, $stack32, $stack31)""];\n	""52"" [label=""len := @parameter2: int""];\n	""53"" [label=""offset := @parameter1: int""];\n	""54"" [label=""return""];\n	""55"" [label=""specialinvoke $stack31.<java.lang.String: void <init>(char[],int,int)>(text, offset, len)""];\n	""56"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""57"" [label=""text := @parameter0: char[]""];\n	""58"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""59"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write String value\"")""];\n	""60"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""25""[label=""cfg_except""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""25""[label=""cfg_except""];\n	""11"" -> ""25""[label=""cfg_except""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_next""];\n	""12"" -> ""25""[label=""cfg_except""];\n	""13"" -> ""25""[label=""cfg_except""];\n	""13"" -> ""48""[label=""cfg_next""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""14"" -> ""25""[label=""cfg_except""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""15"" -> ""25""[label=""cfg_except""];\n	""16"" -> ""25""[label=""cfg_except""];\n	""16"" -> ""39""[label=""cfg_next""];\n	""17"" -> ""25""[label=""cfg_except""];\n	""17"" -> ""49""[label=""cfg_next""];\n	""18"" -> ""25""[label=""cfg_except""];\n	""18"" -> ""50""[label=""cfg_next""];\n	""19"" -> ""24""[label=""cfg_next""];\n	""19"" -> ""25""[label=""cfg_except""];\n	""2"" -> ""25""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""25""[label=""cfg_except""];\n	""21"" -> ""23""[label=""cfg_next""];\n	""21"" -> ""25""[label=""cfg_except""];\n	""22"" -> ""25""[label=""cfg_except""];\n	""22"" -> ""55""[label=""cfg_next""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""23"" -> ""25""[label=""cfg_except""];\n	""24"" -> ""21""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_except""];\n	""25"" -> ""31""[label=""cfg_next""];\n	""26"" -> ""40""[label=""cfg_next""];\n	""27"" -> ""25""[label=""cfg_except""];\n	""27"" -> ""41""[label=""cfg_next""];\n	""28"" -> ""25""[label=""cfg_except""];\n	""28"" -> ""42""[label=""cfg_next""];\n	""29"" -> ""25""[label=""cfg_except""];\n	""29"" -> ""43""[label=""cfg_next""];\n	""3"" -> ""25""[label=""cfg_except""];\n	""3"" -> ""44""[label=""cfg_next""];\n	""30"" -> ""25""[label=""cfg_except""];\n	""30"" -> ""4""[label=""cfg_next""];\n	""31"" -> ""56""[label=""cfg_next""];\n	""32"" -> ""25""[label=""cfg_except""];\n	""32"" -> ""33""[label=""cfg_goto""];\n	""33"" -> ""54""[label=""cfg_goto""];\n	""34"" -> ""25""[label=""cfg_except""];\n	""34"" -> ""33""[label=""cfg_goto""];\n	""35"" -> ""25""[label=""cfg_except""];\n	""35"" -> ""33""[label=""cfg_goto""];\n	""36"" -> ""25""[label=""cfg_except""];\n	""36"" -> ""33""[label=""cfg_goto""];\n	""37"" -> ""25""[label=""cfg_except""];\n	""37"" -> ""7""[label=""cfg_goto""];\n	""38"" -> ""25""[label=""cfg_except""];\n	""38"" -> ""6""[label=""cfg_true""];\n	""38"" -> ""8""[label=""cfg_false""];\n	""39"" -> ""17""[label=""cfg_true""];\n	""39"" -> ""18""[label=""cfg_false""];\n	""39"" -> ""25""[label=""cfg_except""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""25""[label=""cfg_except""];\n	""40"" -> ""27""[label=""cfg_true""];\n	""40"" -> ""60""[label=""cfg_false""];\n	""41"" -> ""20""[label=""cfg_false""];\n	""41"" -> ""25""[label=""cfg_except""];\n	""41"" -> ""28""[label=""cfg_true""];\n	""42"" -> ""16""[label=""cfg_false""];\n	""42"" -> ""25""[label=""cfg_except""];\n	""42"" -> ""29""[label=""cfg_true""];\n	""43"" -> ""1""[label=""cfg_true""];\n	""43"" -> ""10""[label=""cfg_false""];\n	""43"" -> ""25""[label=""cfg_except""];\n	""44"" -> ""25""[label=""cfg_except""];\n	""44"" -> ""5""[label=""cfg_next""];\n	""45"" -> ""25""[label=""cfg_except""];\n	""45"" -> ""7""[label=""cfg_next""];\n	""46"" -> ""25""[label=""cfg_except""];\n	""46"" -> ""33""[label=""cfg_next""];\n	""47"" -> ""25""[label=""cfg_except""];\n	""47"" -> ""37""[label=""cfg_next""];\n	""48"" -> ""25""[label=""cfg_except""];\n	""48"" -> ""36""[label=""cfg_next""];\n	""49"" -> ""25""[label=""cfg_except""];\n	""49"" -> ""35""[label=""cfg_next""];\n	""5"" -> ""25""[label=""cfg_except""];\n	""5"" -> ""38""[label=""cfg_next""];\n	""50"" -> ""25""[label=""cfg_except""];\n	""50"" -> ""34""[label=""cfg_next""];\n	""51"" -> ""25""[label=""cfg_except""];\n	""51"" -> ""32""[label=""cfg_next""];\n	""52"" -> ""59""[label=""cfg_next""];\n	""53"" -> ""52""[label=""cfg_next""];\n	""55"" -> ""25""[label=""cfg_except""];\n	""55"" -> ""51""[label=""cfg_next""];\n	""56"" -> ""54""[label=""cfg_next""];\n	""57"" -> ""53""[label=""cfg_next""];\n	""58"" -> ""57""[label=""cfg_next""];\n	""59"" -> ""26""[label=""cfg_next""];\n	""6"" -> ""25""[label=""cfg_except""];\n	""6"" -> ""45""[label=""cfg_next""];\n	""60"" -> ""27""[label=""cfg_next""];\n	""7"" -> ""25""[label=""cfg_except""];\n	""7"" -> ""46""[label=""cfg_next""];\n	""8"" -> ""25""[label=""cfg_except""];\n	""8"" -> ""47""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n	""9"" -> ""25""[label=""cfg_except""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeString(SerializableString),Method,No Comment,@Override\npublic void writeString(SerializableString text) throws IOException {\n    writeString(text.getValue());\n},void writeString(com.fasterxml.jackson.core.SerializableString),"digraph cfg_writeString {\n	""1"" [label=""$stack2 = interfaceinvoke text.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>()""];\n	""2"" [label=""return""];\n	""3"" [label=""text := @parameter0: com.fasterxml.jackson.core.SerializableString""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""5"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeString(java.lang.String)>($stack2)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawUTF8String(byte[],int,int)",Method,No Comment,"@Override\npublic void writeRawUTF8String(byte[] text, int offset, int length) throws IOException {\n    // could add support for this case if we really want it (and can make Stax2 support it)\n    _reportUnsupportedOperation();\n}","void writeRawUTF8String(byte[],int,int)","digraph cfg_writeRawUTF8String {\n	""1"" [label=""length := @parameter2: int""];\n	""2"" [label=""offset := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""text := @parameter0: byte[]""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""6"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnsupportedOperation()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeUTF8String(byte[],int,int)",Method,No Comment,"@Override\npublic void writeUTF8String(byte[] text, int offset, int length) throws IOException {\n    // could add support for this case if we really want it (and can make Stax2 support it)\n    _reportUnsupportedOperation();\n}","void writeUTF8String(byte[],int,int)","digraph cfg_writeUTF8String {\n	""1"" [label=""length := @parameter2: int""];\n	""2"" [label=""offset := @parameter1: int""];\n	""3"" [label=""return""];\n	""4"" [label=""text := @parameter0: byte[]""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""6"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnsupportedOperation()>()""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(String),Method,No Comment,"@Override\npublic void writeRawValue(String text) throws IOException {\n    // [dataformat-xml#39]\n    if (_stax2Emulation) {\n        _reportUnimplementedStax2(""writeRawValue"");\n    }\n    try {\n        _verifyValueWrite(""write raw value"");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        if (_nextIsAttribute) {\n            _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), text);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeRaw(text);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            _xmlWriter.writeRaw(text);\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeRawValue(java.lang.String),"digraph cfg_writeRawValue {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""10"" [label=""$stack19 = virtualinvoke $stack15.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""11"" [label=""$stack20 := @caughtexception""];\n	""12"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""13"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""14"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""15"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""16"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""17"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""18"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""19"" [label=""e = $stack20""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack3 == 0""];\n	""24"" [label=""if $stack4 != null""];\n	""25"" [label=""if $stack5 == 0""];\n	""26"" [label=""if $stack6 == 0""];\n	""27"" [label=""interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String)>(text)""];\n	""28"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""29"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String)>(text)""];\n	""30"" [label=""interfaceinvoke $stack16.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($stack19, $stack18, text)""];\n	""31"" [label=""interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack11, $stack10)""];\n	""32"" [label=""return""];\n	""33"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""34"" [label=""text := @parameter0: java.lang.String""];\n	""35"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""36"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnimplementedStax2(java.lang.String)>(\""writeRawValue\"")""];\n	""37"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write raw value\"")""];\n	""38"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""11""[label=""cfg_except""];\n	""1"" -> ""31""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_except""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""19""[label=""cfg_next""];\n	""12"" -> ""23""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_except""];\n	""13"" -> ""24""[label=""cfg_next""];\n	""14"" -> ""11""[label=""cfg_except""];\n	""14"" -> ""25""[label=""cfg_next""];\n	""15"" -> ""11""[label=""cfg_except""];\n	""15"" -> ""26""[label=""cfg_next""];\n	""16"" -> ""11""[label=""cfg_except""];\n	""16"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""11""[label=""cfg_except""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""1""[label=""cfg_next""];\n	""18"" -> ""11""[label=""cfg_except""];\n	""19"" -> ""33""[label=""cfg_next""];\n	""2"" -> ""11""[label=""cfg_except""];\n	""2"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""11""[label=""cfg_except""];\n	""20"" -> ""21""[label=""cfg_goto""];\n	""21"" -> ""32""[label=""cfg_goto""];\n	""22"" -> ""11""[label=""cfg_except""];\n	""22"" -> ""21""[label=""cfg_goto""];\n	""23"" -> ""36""[label=""cfg_false""];\n	""23"" -> ""37""[label=""cfg_true""];\n	""24"" -> ""11""[label=""cfg_except""];\n	""24"" -> ""14""[label=""cfg_true""];\n	""24"" -> ""38""[label=""cfg_false""];\n	""25"" -> ""11""[label=""cfg_except""];\n	""25"" -> ""15""[label=""cfg_true""];\n	""25"" -> ""7""[label=""cfg_false""];\n	""26"" -> ""11""[label=""cfg_except""];\n	""26"" -> ""17""[label=""cfg_true""];\n	""26"" -> ""5""[label=""cfg_false""];\n	""27"" -> ""11""[label=""cfg_except""];\n	""27"" -> ""4""[label=""cfg_next""];\n	""28"" -> ""11""[label=""cfg_except""];\n	""28"" -> ""21""[label=""cfg_next""];\n	""29"" -> ""11""[label=""cfg_except""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""11""[label=""cfg_except""];\n	""3"" -> ""27""[label=""cfg_next""];\n	""30"" -> ""11""[label=""cfg_except""];\n	""30"" -> ""20""[label=""cfg_next""];\n	""31"" -> ""11""[label=""cfg_except""];\n	""31"" -> ""3""[label=""cfg_next""];\n	""33"" -> ""32""[label=""cfg_next""];\n	""34"" -> ""12""[label=""cfg_next""];\n	""35"" -> ""34""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_next""];\n	""37"" -> ""11""[label=""cfg_except""];\n	""37"" -> ""13""[label=""cfg_next""];\n	""38"" -> ""11""[label=""cfg_except""];\n	""38"" -> ""14""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_except""];\n	""4"" -> ""28""[label=""cfg_next""];\n	""5"" -> ""11""[label=""cfg_except""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_except""];\n	""7"" -> ""11""[label=""cfg_except""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""11""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""11""[label=""cfg_except""];\n	""9"" -> ""30""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(String,int,int)",Method,No Comment,"@Override\npublic void writeRawValue(String text, int offset, int len) throws IOException {\n    // [dataformat-xml#39]\n    if (_stax2Emulation) {\n        _reportUnimplementedStax2(""writeRawValue"");\n    }\n    try {\n        _verifyValueWrite(""write raw value"");\n        if (_nextName == null) {\n            handleMissingName();\n        }\n        if (_nextIsAttribute) {\n            _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), text.substring(offset, offset + len));\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeRaw(text, offset, len);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            _xmlWriter.writeRaw(text, offset, len);\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}","void writeRawValue(java.lang.String,int,int)","digraph cfg_writeRawValue {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""11"" [label=""$stack20 = offset + len""];\n	""12"" [label=""$stack21 = virtualinvoke text.<java.lang.String: java.lang.String substring(int,int)>(offset, $stack20)""];\n	""13"" [label=""$stack22 = virtualinvoke $stack19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""14"" [label=""$stack23 = virtualinvoke $stack17.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""15"" [label=""$stack24 := @caughtexception""];\n	""16"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""17"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""18"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""19"" [label=""$stack8 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""20"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""21"" [label=""e = $stack24""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""goto""];\n	""25"" [label=""if $stack5 == 0""];\n	""26"" [label=""if $stack6 != null""];\n	""27"" [label=""if $stack7 == 0""];\n	""28"" [label=""if $stack8 == 0""];\n	""29"" [label=""interfaceinvoke $stack10.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack13, $stack12)""];\n	""30"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String,int,int)>(text, offset, len)""];\n	""31"" [label=""interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""32"" [label=""interfaceinvoke $stack16.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String,int,int)>(text, offset, len)""];\n	""33"" [label=""interfaceinvoke $stack18.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack22, $stack21)""];\n	""34"" [label=""len := @parameter2: int""];\n	""35"" [label=""offset := @parameter1: int""];\n	""36"" [label=""return""];\n	""37"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""38"" [label=""text := @parameter0: java.lang.String""];\n	""39"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""40"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnimplementedStax2(java.lang.String)>(\""writeRawValue\"")""];\n	""41"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write raw value\"")""];\n	""42"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""15""[label=""cfg_except""];\n	""1"" -> ""20""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""10"" -> ""15""[label=""cfg_except""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_except""];\n	""12"" -> ""15""[label=""cfg_except""];\n	""12"" -> ""33""[label=""cfg_next""];\n	""13"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""15""[label=""cfg_except""];\n	""14"" -> ""10""[label=""cfg_next""];\n	""14"" -> ""15""[label=""cfg_except""];\n	""15"" -> ""21""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_except""];\n	""17"" -> ""26""[label=""cfg_next""];\n	""18"" -> ""15""[label=""cfg_except""];\n	""18"" -> ""27""[label=""cfg_next""];\n	""19"" -> ""15""[label=""cfg_except""];\n	""19"" -> ""28""[label=""cfg_next""];\n	""2"" -> ""15""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""15""[label=""cfg_except""];\n	""20"" -> ""4""[label=""cfg_next""];\n	""21"" -> ""37""[label=""cfg_next""];\n	""22"" -> ""15""[label=""cfg_except""];\n	""22"" -> ""23""[label=""cfg_goto""];\n	""23"" -> ""36""[label=""cfg_goto""];\n	""24"" -> ""15""[label=""cfg_except""];\n	""24"" -> ""23""[label=""cfg_goto""];\n	""25"" -> ""40""[label=""cfg_false""];\n	""25"" -> ""41""[label=""cfg_true""];\n	""26"" -> ""15""[label=""cfg_except""];\n	""26"" -> ""18""[label=""cfg_true""];\n	""26"" -> ""42""[label=""cfg_false""];\n	""27"" -> ""15""[label=""cfg_except""];\n	""27"" -> ""19""[label=""cfg_true""];\n	""27"" -> ""9""[label=""cfg_false""];\n	""28"" -> ""1""[label=""cfg_true""];\n	""28"" -> ""15""[label=""cfg_except""];\n	""28"" -> ""7""[label=""cfg_false""];\n	""29"" -> ""15""[label=""cfg_except""];\n	""29"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""15""[label=""cfg_except""];\n	""3"" -> ""29""[label=""cfg_next""];\n	""30"" -> ""15""[label=""cfg_except""];\n	""30"" -> ""6""[label=""cfg_next""];\n	""31"" -> ""15""[label=""cfg_except""];\n	""31"" -> ""23""[label=""cfg_next""];\n	""32"" -> ""15""[label=""cfg_except""];\n	""32"" -> ""24""[label=""cfg_next""];\n	""33"" -> ""15""[label=""cfg_except""];\n	""33"" -> ""22""[label=""cfg_next""];\n	""34"" -> ""16""[label=""cfg_next""];\n	""35"" -> ""34""[label=""cfg_next""];\n	""37"" -> ""36""[label=""cfg_next""];\n	""38"" -> ""35""[label=""cfg_next""];\n	""39"" -> ""38""[label=""cfg_next""];\n	""4"" -> ""15""[label=""cfg_except""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""40"" -> ""41""[label=""cfg_next""];\n	""41"" -> ""15""[label=""cfg_except""];\n	""41"" -> ""17""[label=""cfg_next""];\n	""42"" -> ""15""[label=""cfg_except""];\n	""42"" -> ""18""[label=""cfg_next""];\n	""5"" -> ""15""[label=""cfg_except""];\n	""5"" -> ""30""[label=""cfg_next""];\n	""6"" -> ""15""[label=""cfg_except""];\n	""6"" -> ""31""[label=""cfg_next""];\n	""7"" -> ""15""[label=""cfg_except""];\n	""7"" -> ""32""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_next""];\n	""8"" -> ""15""[label=""cfg_except""];\n	""9"" -> ""15""[label=""cfg_except""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(char[],int,int)",Method,No Comment,"@Override\npublic void writeRawValue(char[] text, int offset, int len) throws IOException {\n    // [dataformat-xml#39]\n    if (_stax2Emulation) {\n        _reportUnimplementedStax2(""writeRawValue"");\n    }\n    _verifyValueWrite(""write raw value"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeAttribute(_nextName.getNamespaceURI(), _nextName.getLocalPart(), new String(text, offset, len));\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeRaw(text, offset, len);\n        } else {\n            _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n            _xmlWriter.writeRaw(text, offset, len);\n            _xmlWriter.writeEndElement();\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}","void writeRawValue(char[],int,int)","digraph cfg_writeRawValue {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""11"" [label=""$stack20 = new java.lang.String""];\n	""12"" [label=""$stack21 = virtualinvoke $stack19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""13"" [label=""$stack22 = virtualinvoke $stack17.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""14"" [label=""$stack23 := @caughtexception""];\n	""15"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""16"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""17"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""18"" [label=""$stack8 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""19"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""20"" [label=""e = $stack23""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""goto""];\n	""24"" [label=""if $stack5 == 0""];\n	""25"" [label=""if $stack6 != null""];\n	""26"" [label=""if $stack7 == 0""];\n	""27"" [label=""if $stack8 == 0""];\n	""28"" [label=""interfaceinvoke $stack10.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack13, $stack12)""];\n	""29"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(char[],int,int)>(text, offset, len)""];\n	""30"" [label=""interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""31"" [label=""interfaceinvoke $stack16.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(char[],int,int)>(text, offset, len)""];\n	""32"" [label=""interfaceinvoke $stack18.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String)>($stack22, $stack21, $stack20)""];\n	""33"" [label=""len := @parameter2: int""];\n	""34"" [label=""offset := @parameter1: int""];\n	""35"" [label=""return""];\n	""36"" [label=""specialinvoke $stack20.<java.lang.String: void <init>(char[],int,int)>(text, offset, len)""];\n	""37"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""38"" [label=""text := @parameter0: char[]""];\n	""39"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""40"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnimplementedStax2(java.lang.String)>(\""writeRawValue\"")""];\n	""41"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write raw value\"")""];\n	""42"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""14""[label=""cfg_except""];\n	""1"" -> ""19""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""14""[label=""cfg_except""];\n	""11"" -> ""14""[label=""cfg_except""];\n	""11"" -> ""36""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_except""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""14""[label=""cfg_except""];\n	""14"" -> ""20""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_next""];\n	""16"" -> ""25""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_except""];\n	""17"" -> ""26""[label=""cfg_next""];\n	""18"" -> ""14""[label=""cfg_except""];\n	""18"" -> ""27""[label=""cfg_next""];\n	""19"" -> ""14""[label=""cfg_except""];\n	""19"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""14""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""37""[label=""cfg_next""];\n	""21"" -> ""14""[label=""cfg_except""];\n	""21"" -> ""22""[label=""cfg_goto""];\n	""22"" -> ""35""[label=""cfg_goto""];\n	""23"" -> ""14""[label=""cfg_except""];\n	""23"" -> ""22""[label=""cfg_goto""];\n	""24"" -> ""40""[label=""cfg_false""];\n	""24"" -> ""41""[label=""cfg_true""];\n	""25"" -> ""17""[label=""cfg_true""];\n	""25"" -> ""42""[label=""cfg_false""];\n	""26"" -> ""14""[label=""cfg_except""];\n	""26"" -> ""18""[label=""cfg_true""];\n	""26"" -> ""9""[label=""cfg_false""];\n	""27"" -> ""1""[label=""cfg_true""];\n	""27"" -> ""14""[label=""cfg_except""];\n	""27"" -> ""7""[label=""cfg_false""];\n	""28"" -> ""14""[label=""cfg_except""];\n	""28"" -> ""5""[label=""cfg_next""];\n	""29"" -> ""14""[label=""cfg_except""];\n	""29"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""14""[label=""cfg_except""];\n	""3"" -> ""28""[label=""cfg_next""];\n	""30"" -> ""14""[label=""cfg_except""];\n	""30"" -> ""22""[label=""cfg_next""];\n	""31"" -> ""14""[label=""cfg_except""];\n	""31"" -> ""23""[label=""cfg_next""];\n	""32"" -> ""14""[label=""cfg_except""];\n	""32"" -> ""21""[label=""cfg_next""];\n	""33"" -> ""15""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""36"" -> ""14""[label=""cfg_except""];\n	""36"" -> ""32""[label=""cfg_next""];\n	""37"" -> ""35""[label=""cfg_next""];\n	""38"" -> ""34""[label=""cfg_next""];\n	""39"" -> ""38""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_except""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""40"" -> ""41""[label=""cfg_next""];\n	""41"" -> ""16""[label=""cfg_next""];\n	""42"" -> ""17""[label=""cfg_next""];\n	""5"" -> ""14""[label=""cfg_except""];\n	""5"" -> ""29""[label=""cfg_next""];\n	""6"" -> ""14""[label=""cfg_except""];\n	""6"" -> ""30""[label=""cfg_next""];\n	""7"" -> ""14""[label=""cfg_except""];\n	""7"" -> ""31""[label=""cfg_next""];\n	""8"" -> ""13""[label=""cfg_next""];\n	""8"" -> ""14""[label=""cfg_except""];\n	""9"" -> ""14""[label=""cfg_except""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRawValue(SerializableString),Method,No Comment,@Override\npublic void writeRawValue(SerializableString text) throws IOException {\n    _reportUnsupportedOperation();\n},void writeRawValue(com.fasterxml.jackson.core.SerializableString),"digraph cfg_writeRawValue {\n	""1"" [label=""return""];\n	""2"" [label=""text := @parameter0: com.fasterxml.jackson.core.SerializableString""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnsupportedOperation()>()""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(String),Method,No Comment,"@Override\npublic void writeRaw(String text) throws IOException {\n    // [dataformat-xml#39]\n    if (_stax2Emulation) {\n        _reportUnimplementedStax2(""writeRaw"");\n    }\n    try {\n        _xmlWriter.writeRaw(text);\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeRaw(java.lang.String),"digraph cfg_writeRaw {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""2"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""3"" [label=""$stack5 := @caughtexception""];\n	""4"" [label=""e = $stack5""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack3 == 0""];\n	""7"" [label=""interfaceinvoke $stack4.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String)>(text)""];\n	""8"" [label=""return""];\n	""9"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""10"" [label=""text := @parameter0: java.lang.String""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""12"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnimplementedStax2(java.lang.String)>(\""writeRaw\"")""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""10"" -> ""1""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""8""[label=""cfg_goto""];\n	""6"" -> ""12""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(String,int,int)",Method,No Comment,"@Override\npublic void writeRaw(String text, int offset, int len) throws IOException {\n    // [dataformat-xml#39]\n    if (_stax2Emulation) {\n        _reportUnimplementedStax2(""writeRaw"");\n    }\n    try {\n        _xmlWriter.writeRaw(text, offset, len);\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}","void writeRaw(java.lang.String,int,int)","digraph cfg_writeRaw {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""2"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""e = $stack7""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack5 == 0""];\n	""7"" [label=""interfaceinvoke $stack6.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(java.lang.String,int,int)>(text, offset, len)""];\n	""8"" [label=""len := @parameter2: int""];\n	""9"" [label=""offset := @parameter1: int""];\n	""10"" [label=""return""];\n	""11"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""12"" [label=""text := @parameter0: java.lang.String""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""14"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnimplementedStax2(java.lang.String)>(\""writeRaw\"")""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_goto""];\n	""6"" -> ""14""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(char[],int,int)",Method,No Comment,"@Override\npublic void writeRaw(char[] text, int offset, int len) throws IOException {\n    // [dataformat-xml#39]\n    if (_stax2Emulation) {\n        _reportUnimplementedStax2(""writeRaw"");\n    }\n    try {\n        _xmlWriter.writeRaw(text, offset, len);\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}","void writeRaw(char[],int,int)","digraph cfg_writeRaw {\n	""1"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation>""];\n	""2"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""3"" [label=""$stack7 := @caughtexception""];\n	""4"" [label=""e = $stack7""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack5 == 0""];\n	""7"" [label=""interfaceinvoke $stack6.<org.codehaus.stax2.XMLStreamWriter2: void writeRaw(char[],int,int)>(text, offset, len)""];\n	""8"" [label=""len := @parameter2: int""];\n	""9"" [label=""offset := @parameter1: int""];\n	""10"" [label=""return""];\n	""11"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""12"" [label=""text := @parameter0: char[]""];\n	""13"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""14"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportUnimplementedStax2(java.lang.String)>(\""writeRaw\"")""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""9""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_except""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""11""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_goto""];\n	""6"" -> ""14""[label=""cfg_false""];\n	""6"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""3""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeRaw(char),Method,No Comment,@Override\npublic void writeRaw(char c) throws IOException {\n    writeRaw(String.valueOf(c));\n},void writeRaw(char),"digraph cfg_writeRaw {\n	""1"" [label=""$stack2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c)""];\n	""2"" [label=""c := @parameter0: char""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""5"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeRaw(java.lang.String)>($stack2)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBinary(Base64Variant,byte[],int,int)",Method,No Comment,"@Override\npublic void writeBinary(Base64Variant b64variant, byte[] data, int offset, int len) throws IOException {\n    if (data == null) {\n        writeNull();\n        return;\n    }\n    _verifyValueWrite(""write Binary value"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    final org.codehaus.stax2.typed.Base64Variant stax2base64v = StaxUtil.toStax2Base64Variant(b64variant);\n    try {\n        if (_nextIsAttribute) {\n            // Stax2 API only has 'full buffer' write method:\n            byte[] fullBuffer = toFullBuffer(data, offset, len);\n            _xmlWriter.writeBinaryAttribute(stax2base64v, """", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n        } else if (checkNextIsUnwrapped()) {\n            // should we consider pretty-printing or not?\n            _xmlWriter.writeBinary(stax2base64v, data, offset, len);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), stax2base64v, data, offset, len);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeBinary(stax2base64v, data, offset, len);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}","void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)","digraph cfg_writeBinary {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""6"" [label=""$stack15 = virtualinvoke $stack11.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""14"" [label=""$stack23 = virtualinvoke $stack18.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""16"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""17"" [label=""$stack26 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""18"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""19"" [label=""$stack28 = virtualinvoke $stack27.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""20"" [label=""$stack29 = virtualinvoke $stack25.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""21"" [label=""$stack30 := @caughtexception""];\n	""22"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""23"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""24"" [label=""$stack9 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""25"" [label=""b64variant := @parameter0: com.fasterxml.jackson.core.Base64Variant""];\n	""26"" [label=""data := @parameter1: byte[]""];\n	""27"" [label=""fullBuffer = $stack30""];\n	""28"" [label=""fullBuffer = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: byte[] toFullBuffer(byte[],int,int)>(data, offset, len)""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""if $stack10 == null""];\n	""34"" [label=""if $stack7 != null""];\n	""35"" [label=""if $stack8 == 0""];\n	""36"" [label=""if $stack9 == 0""];\n	""37"" [label=""if data != null""];\n	""38"" [label=""interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack15, $stack14)""];\n	""39"" [label=""interfaceinvoke $stack16.<org.codehaus.stax2.XMLStreamWriter2: void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>(stax2base64v, data, offset, len)""];\n	""40"" [label=""interfaceinvoke $stack17.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""41"" [label=""interfaceinvoke $stack19.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>($stack20, $stack23, $stack22, stax2base64v, data, offset, len)""];\n	""42"" [label=""interfaceinvoke $stack24.<org.codehaus.stax2.XMLStreamWriter2: void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>(stax2base64v, data, offset, len)""];\n	""43"" [label=""interfaceinvoke $stack26.<org.codehaus.stax2.XMLStreamWriter2: void writeBinaryAttribute(org.codehaus.stax2.typed.Base64Variant,java.lang.String,java.lang.String,java.lang.String,byte[])>(stax2base64v, \""\"", $stack29, $stack28, fullBuffer)""];\n	""44"" [label=""len := @parameter3: int""];\n	""45"" [label=""offset := @parameter2: int""];\n	""46"" [label=""return""];\n	""47"" [label=""return""];\n	""48"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(fullBuffer, this)""];\n	""49"" [label=""stax2base64v = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: org.codehaus.stax2.typed.Base64Variant toStax2Base64Variant(com.fasterxml.jackson.core.Base64Variant)>(b64variant)""];\n	""50"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""51"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write Binary value\"")""];\n	""52"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""53"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeNull()>()""];\n	""1"" -> ""21""[label=""cfg_except""];\n	""1"" -> ""33""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_except""];\n	""11"" -> ""21""[label=""cfg_except""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""21""[label=""cfg_except""];\n	""13"" -> ""21""[label=""cfg_except""];\n	""13"" -> ""41""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""21""[label=""cfg_except""];\n	""15"" -> ""21""[label=""cfg_except""];\n	""15"" -> ""42""[label=""cfg_next""];\n	""16"" -> ""20""[label=""cfg_next""];\n	""16"" -> ""21""[label=""cfg_except""];\n	""17"" -> ""16""[label=""cfg_next""];\n	""17"" -> ""21""[label=""cfg_except""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""18"" -> ""21""[label=""cfg_except""];\n	""19"" -> ""21""[label=""cfg_except""];\n	""19"" -> ""43""[label=""cfg_next""];\n	""2"" -> ""21""[label=""cfg_except""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_next""];\n	""20"" -> ""21""[label=""cfg_except""];\n	""21"" -> ""27""[label=""cfg_next""];\n	""22"" -> ""34""[label=""cfg_next""];\n	""23"" -> ""21""[label=""cfg_except""];\n	""23"" -> ""35""[label=""cfg_next""];\n	""24"" -> ""21""[label=""cfg_except""];\n	""24"" -> ""36""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""45""[label=""cfg_next""];\n	""27"" -> ""48""[label=""cfg_next""];\n	""28"" -> ""17""[label=""cfg_next""];\n	""28"" -> ""21""[label=""cfg_except""];\n	""29"" -> ""21""[label=""cfg_except""];\n	""29"" -> ""30""[label=""cfg_goto""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""21""[label=""cfg_except""];\n	""30"" -> ""47""[label=""cfg_goto""];\n	""31"" -> ""21""[label=""cfg_except""];\n	""31"" -> ""30""[label=""cfg_goto""];\n	""32"" -> ""21""[label=""cfg_except""];\n	""32"" -> ""30""[label=""cfg_goto""];\n	""33"" -> ""10""[label=""cfg_false""];\n	""33"" -> ""21""[label=""cfg_except""];\n	""33"" -> ""3""[label=""cfg_true""];\n	""34"" -> ""49""[label=""cfg_true""];\n	""34"" -> ""52""[label=""cfg_false""];\n	""35"" -> ""21""[label=""cfg_except""];\n	""35"" -> ""24""[label=""cfg_true""];\n	""35"" -> ""28""[label=""cfg_false""];\n	""36"" -> ""1""[label=""cfg_true""];\n	""36"" -> ""15""[label=""cfg_false""];\n	""36"" -> ""21""[label=""cfg_except""];\n	""37"" -> ""51""[label=""cfg_true""];\n	""37"" -> ""53""[label=""cfg_false""];\n	""38"" -> ""21""[label=""cfg_except""];\n	""38"" -> ""7""[label=""cfg_next""];\n	""39"" -> ""21""[label=""cfg_except""];\n	""39"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""21""[label=""cfg_except""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""40"" -> ""21""[label=""cfg_except""];\n	""40"" -> ""30""[label=""cfg_next""];\n	""41"" -> ""21""[label=""cfg_except""];\n	""41"" -> ""32""[label=""cfg_next""];\n	""42"" -> ""21""[label=""cfg_except""];\n	""42"" -> ""31""[label=""cfg_next""];\n	""43"" -> ""21""[label=""cfg_except""];\n	""43"" -> ""29""[label=""cfg_next""];\n	""44"" -> ""37""[label=""cfg_next""];\n	""45"" -> ""44""[label=""cfg_next""];\n	""48"" -> ""47""[label=""cfg_next""];\n	""49"" -> ""23""[label=""cfg_next""];\n	""5"" -> ""21""[label=""cfg_except""];\n	""5"" -> ""38""[label=""cfg_next""];\n	""50"" -> ""25""[label=""cfg_next""];\n	""51"" -> ""22""[label=""cfg_next""];\n	""52"" -> ""49""[label=""cfg_next""];\n	""53"" -> ""46""[label=""cfg_next""];\n	""6"" -> ""21""[label=""cfg_except""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""21""[label=""cfg_except""];\n	""7"" -> ""39""[label=""cfg_next""];\n	""8"" -> ""21""[label=""cfg_except""];\n	""8"" -> ""40""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""21""[label=""cfg_except""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBinary(Base64Variant,InputStream,int)",Method,No Comment,"@Override\npublic int writeBinary(Base64Variant b64variant, InputStream data, int dataLength) throws IOException {\n    if (data == null) {\n        writeNull();\n        return 0;\n    }\n    _verifyValueWrite(""write Binary value"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    final org.codehaus.stax2.typed.Base64Variant stax2base64v = StaxUtil.toStax2Base64Variant(b64variant);\n    try {\n        if (_nextIsAttribute) {\n            // Stax2 API only has 'full buffer' write method:\n            byte[] fullBuffer = toFullBuffer(data, dataLength);\n            _xmlWriter.writeBinaryAttribute(stax2base64v, """", _nextName.getNamespaceURI(), _nextName.getLocalPart(), fullBuffer);\n        } else if (checkNextIsUnwrapped()) {\n            // should we consider pretty-printing or not?\n            writeStreamAsBinary(stax2base64v, data, dataLength);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), stax2base64v, toFullBuffer(data, dataLength), 0, dataLength);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                writeStreamAsBinary(stax2base64v, data, dataLength);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n    return dataLength;\n}","int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int)","digraph cfg_writeBinary {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""5"" [label=""$stack14 = virtualinvoke $stack10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""11"" [label=""$stack20 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: byte[] toFullBuffer(java.io.InputStream,int)>(data, dataLength)""];\n	""12"" [label=""$stack21 = virtualinvoke $stack19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""13"" [label=""$stack22 = virtualinvoke $stack16.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""16"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""17"" [label=""$stack26 = virtualinvoke $stack25.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""18"" [label=""$stack27 = virtualinvoke $stack23.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""19"" [label=""$stack28 := @caughtexception""];\n	""20"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""21"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""22"" [label=""$stack8 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""23"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""24"" [label=""b64variant := @parameter0: com.fasterxml.jackson.core.Base64Variant""];\n	""25"" [label=""data := @parameter1: java.io.InputStream""];\n	""26"" [label=""dataLength := @parameter2: int""];\n	""27"" [label=""fullBuffer = $stack28""];\n	""28"" [label=""fullBuffer = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: byte[] toFullBuffer(java.io.InputStream,int)>(data, dataLength)""];\n	""29"" [label=""goto""];\n	""30"" [label=""goto""];\n	""31"" [label=""goto""];\n	""32"" [label=""goto""];\n	""33"" [label=""if $stack6 != null""];\n	""34"" [label=""if $stack7 == 0""];\n	""35"" [label=""if $stack8 == 0""];\n	""36"" [label=""if $stack9 == null""];\n	""37"" [label=""if data != null""];\n	""38"" [label=""interfaceinvoke $stack11.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack14, $stack13)""];\n	""39"" [label=""interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""40"" [label=""interfaceinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>($stack18, $stack22, $stack21, stax2base64v, $stack20, 0, dataLength)""];\n	""41"" [label=""interfaceinvoke $stack24.<org.codehaus.stax2.XMLStreamWriter2: void writeBinaryAttribute(org.codehaus.stax2.typed.Base64Variant,java.lang.String,java.lang.String,java.lang.String,byte[])>(stax2base64v, \""\"", $stack27, $stack26, fullBuffer)""];\n	""42"" [label=""return 0""];\n	""43"" [label=""return dataLength""];\n	""44"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeStreamAsBinary(org.codehaus.stax2.typed.Base64Variant,java.io.InputStream,int)>(stax2base64v, data, dataLength)""];\n	""45"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeStreamAsBinary(org.codehaus.stax2.typed.Base64Variant,java.io.InputStream,int)>(stax2base64v, data, dataLength)""];\n	""46"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(fullBuffer, this)""];\n	""47"" [label=""stax2base64v = staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: org.codehaus.stax2.typed.Base64Variant toStax2Base64Variant(com.fasterxml.jackson.core.Base64Variant)>(b64variant)""];\n	""48"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""49"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write Binary value\"")""];\n	""50"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""51"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeNull()>()""];\n	""1"" -> ""19""[label=""cfg_except""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""10"" -> ""12""[label=""cfg_next""];\n	""10"" -> ""19""[label=""cfg_except""];\n	""11"" -> ""19""[label=""cfg_except""];\n	""11"" -> ""40""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_except""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""19""[label=""cfg_except""];\n	""14"" -> ""18""[label=""cfg_next""];\n	""14"" -> ""19""[label=""cfg_except""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""15"" -> ""19""[label=""cfg_except""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""19""[label=""cfg_except""];\n	""17"" -> ""19""[label=""cfg_except""];\n	""17"" -> ""41""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""19""[label=""cfg_except""];\n	""19"" -> ""27""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""19""[label=""cfg_except""];\n	""20"" -> ""33""[label=""cfg_next""];\n	""21"" -> ""19""[label=""cfg_except""];\n	""21"" -> ""34""[label=""cfg_next""];\n	""22"" -> ""19""[label=""cfg_except""];\n	""22"" -> ""35""[label=""cfg_next""];\n	""23"" -> ""19""[label=""cfg_except""];\n	""23"" -> ""36""[label=""cfg_next""];\n	""24"" -> ""25""[label=""cfg_next""];\n	""25"" -> ""26""[label=""cfg_next""];\n	""26"" -> ""37""[label=""cfg_next""];\n	""27"" -> ""46""[label=""cfg_next""];\n	""28"" -> ""15""[label=""cfg_next""];\n	""28"" -> ""19""[label=""cfg_except""];\n	""29"" -> ""19""[label=""cfg_except""];\n	""29"" -> ""30""[label=""cfg_goto""];\n	""3"" -> ""19""[label=""cfg_except""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""43""[label=""cfg_goto""];\n	""31"" -> ""19""[label=""cfg_except""];\n	""31"" -> ""30""[label=""cfg_goto""];\n	""32"" -> ""19""[label=""cfg_except""];\n	""32"" -> ""30""[label=""cfg_goto""];\n	""33"" -> ""47""[label=""cfg_true""];\n	""33"" -> ""50""[label=""cfg_false""];\n	""34"" -> ""19""[label=""cfg_except""];\n	""34"" -> ""22""[label=""cfg_true""];\n	""34"" -> ""28""[label=""cfg_false""];\n	""35"" -> ""19""[label=""cfg_except""];\n	""35"" -> ""23""[label=""cfg_true""];\n	""35"" -> ""44""[label=""cfg_false""];\n	""36"" -> ""19""[label=""cfg_except""];\n	""36"" -> ""2""[label=""cfg_true""];\n	""36"" -> ""8""[label=""cfg_false""];\n	""37"" -> ""49""[label=""cfg_true""];\n	""37"" -> ""51""[label=""cfg_false""];\n	""38"" -> ""19""[label=""cfg_except""];\n	""38"" -> ""45""[label=""cfg_next""];\n	""39"" -> ""19""[label=""cfg_except""];\n	""39"" -> ""30""[label=""cfg_next""];\n	""4"" -> ""19""[label=""cfg_except""];\n	""4"" -> ""38""[label=""cfg_next""];\n	""40"" -> ""19""[label=""cfg_except""];\n	""40"" -> ""32""[label=""cfg_next""];\n	""41"" -> ""19""[label=""cfg_except""];\n	""41"" -> ""29""[label=""cfg_next""];\n	""44"" -> ""19""[label=""cfg_except""];\n	""44"" -> ""31""[label=""cfg_next""];\n	""45"" -> ""19""[label=""cfg_except""];\n	""45"" -> ""6""[label=""cfg_next""];\n	""46"" -> ""43""[label=""cfg_next""];\n	""47"" -> ""21""[label=""cfg_next""];\n	""48"" -> ""24""[label=""cfg_next""];\n	""49"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""19""[label=""cfg_except""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""50"" -> ""47""[label=""cfg_next""];\n	""51"" -> ""42""[label=""cfg_next""];\n	""6"" -> ""19""[label=""cfg_except""];\n	""6"" -> ""39""[label=""cfg_next""];\n	""7"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""19""[label=""cfg_except""];\n	""8"" -> ""19""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""19""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeStreamAsBinary(Base64Variant,InputStream,int)",Method,No Comment,"private void writeStreamAsBinary(org.codehaus.stax2.typed.Base64Variant stax2base64v, InputStream data, int len) throws IOException, XMLStreamException {\n    // base64 encodes up to 3 bytes into a 4 bytes string\n    byte[] tmp = new byte[3];\n    int offset = 0;\n    int read;\n    while ((read = data.read(tmp, offset, Math.min(3 - offset, len))) != -1) {\n        offset += read;\n        len -= read;\n        if (offset == 3) {\n            offset = 0;\n            _xmlWriter.writeBinary(stax2base64v, tmp, 0, 3);\n        }\n        if (len == 0) {\n            break;\n        }\n    }\n    // we still have < 3 bytes in the buffer\n    if (offset > 0) {\n        _xmlWriter.writeBinary(stax2base64v, tmp, 0, offset);\n    }\n}","void writeStreamAsBinary(org.codehaus.stax2.typed.Base64Variant,java.io.InputStream,int)","digraph cfg_writeStreamAsBinary {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""$stack7 = 3 - offset""];\n	""3"" [label=""$stack8 = staticinvoke <java.lang.Math: int min(int,int)>($stack7, len)""];\n	""4"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""data := @parameter1: java.io.InputStream""];\n	""6"" [label=""goto""];\n	""7"" [label=""if len != 0""];\n	""8"" [label=""if offset != 3""];\n	""9"" [label=""if offset <= 0""];\n	""10"" [label=""if read == -1""];\n	""11"" [label=""interfaceinvoke $stack10.<org.codehaus.stax2.XMLStreamWriter2: void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>(stax2base64v, tmp, 0, 3)""];\n	""12"" [label=""interfaceinvoke $stack9.<org.codehaus.stax2.XMLStreamWriter2: void writeBinary(org.codehaus.stax2.typed.Base64Variant,byte[],int,int)>(stax2base64v, tmp, 0, offset)""];\n	""13"" [label=""len := @parameter2: int""];\n	""14"" [label=""len = len - read""];\n	""15"" [label=""offset = 0""];\n	""16"" [label=""offset = 0""];\n	""17"" [label=""offset = offset + read""];\n	""18"" [label=""read = virtualinvoke data.<java.io.InputStream: int read(byte[],int,int)>(tmp, offset, $stack8)""];\n	""19"" [label=""return""];\n	""20"" [label=""stax2base64v := @parameter0: org.codehaus.stax2.typed.Base64Variant""];\n	""21"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""22"" [label=""tmp = newarray (byte)[3]""];\n	""1"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_false""];\n	""10"" -> ""9""[label=""cfg_true""];\n	""11"" -> ""7""[label=""cfg_next""];\n	""12"" -> ""19""[label=""cfg_next""];\n	""13"" -> ""22""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""2""[label=""cfg_next""];\n	""16"" -> ""1""[label=""cfg_next""];\n	""17"" -> ""14""[label=""cfg_next""];\n	""18"" -> ""10""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""5""[label=""cfg_next""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""22"" -> ""15""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_next""];\n	""4"" -> ""12""[label=""cfg_next""];\n	""5"" -> ""13""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""2""[label=""cfg_true""];\n	""7"" -> ""6""[label=""cfg_false""];\n	""8"" -> ""16""[label=""cfg_false""];\n	""8"" -> ""7""[label=""cfg_true""];\n	""9"" -> ""19""[label=""cfg_true""];\n	""9"" -> ""4""[label=""cfg_false""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.toFullBuffer(byte[],int,int)",Method,No Comment,"private byte[] toFullBuffer(byte[] data, int offset, int len) {\n    // might already be ok:\n    if (offset == 0 && len == data.length) {\n        return data;\n    }\n    byte[] result = new byte[len];\n    if (len > 0) {\n        System.arraycopy(data, offset, result, 0, len);\n    }\n    return result;\n}","byte[] toFullBuffer(byte[],int,int)","digraph cfg_toFullBuffer {\n	""1"" [label=""$stack5 = lengthof data""];\n	""2"" [label=""data := @parameter0: byte[]""];\n	""3"" [label=""if len != $stack5""];\n	""4"" [label=""if len <= 0""];\n	""5"" [label=""if offset != 0""];\n	""6"" [label=""len := @parameter2: int""];\n	""7"" [label=""offset := @parameter1: int""];\n	""8"" [label=""result = newarray (byte)[len]""];\n	""9"" [label=""return data""];\n	""10"" [label=""return result""];\n	""11"" [label=""staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(data, offset, result, 0, len)""];\n	""12"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_true""];\n	""3"" -> ""9""[label=""cfg_false""];\n	""4"" -> ""10""[label=""cfg_true""];\n	""4"" -> ""11""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_false""];\n	""5"" -> ""8""[label=""cfg_true""];\n	""6"" -> ""5""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.toFullBuffer(InputStream,int)",Method,No Comment,"private byte[] toFullBuffer(InputStream data, final int len) throws IOException {\n    byte[] result = new byte[len];\n    int offset = 0;\n    for (; offset < len; ) {\n        int count = data.read(result, offset, len - offset);\n        if (count < 0) {\n            _reportError(""Too few bytes available: missing "" + (len - offset) + "" bytes (out of "" + len + "")"");\n        }\n        offset += count;\n    }\n    return result;\n}","byte[] toFullBuffer(java.io.InputStream,int)","digraph cfg_toFullBuffer {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack8)""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"" bytes (out of \"")""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(len)""];\n	""4"" [label=""$stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"")\"")""];\n	""5"" [label=""$stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""6"" [label=""$stack6 = len - offset""];\n	""7"" [label=""$stack7 = new java.lang.StringBuilder""];\n	""8"" [label=""$stack8 = len - offset""];\n	""9"" [label=""$stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Too few bytes available: missing \"")""];\n	""10"" [label=""count = virtualinvoke data.<java.io.InputStream: int read(byte[],int,int)>(result, offset, $stack6)""];\n	""11"" [label=""data := @parameter0: java.io.InputStream""];\n	""12"" [label=""goto""];\n	""13"" [label=""if count >= 0""];\n	""14"" [label=""if offset >= len""];\n	""15"" [label=""len := @parameter1: int""];\n	""16"" [label=""offset = 0""];\n	""17"" [label=""offset = offset + count""];\n	""18"" [label=""result = newarray (byte)[len]""];\n	""19"" [label=""return result""];\n	""20"" [label=""specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>()""];\n	""21"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""22"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportError(java.lang.String)>($stack14)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_next""];\n	""11"" -> ""15""[label=""cfg_next""];\n	""12"" -> ""14""[label=""cfg_goto""];\n	""13"" -> ""17""[label=""cfg_true""];\n	""13"" -> ""7""[label=""cfg_false""];\n	""14"" -> ""19""[label=""cfg_true""];\n	""14"" -> ""6""[label=""cfg_false""];\n	""15"" -> ""18""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""17"" -> ""12""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""9""[label=""cfg_next""];\n	""21"" -> ""11""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""10""[label=""cfg_next""];\n	""7"" -> ""20""[label=""cfg_next""];\n	""8"" -> ""1""[label=""cfg_next""];\n	""9"" -> ""8""[label=""cfg_next""];\n}\n",private 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeBoolean(boolean),Method,No Comment,"@Override\npublic void writeBoolean(boolean value) throws IOException {\n    _verifyValueWrite(""write boolean value"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeBooleanAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), value);\n        } else if (checkNextIsUnwrapped()) {\n            // should we consider pretty-printing or not?\n            _xmlWriter.writeBoolean(value);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), value);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeBoolean(value);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeBoolean(boolean),"digraph cfg_writeBoolean {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""10"" [label=""$stack19 = virtualinvoke $stack14.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""16"" [label=""$stack25 = virtualinvoke $stack21.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""17"" [label=""$stack26 := @caughtexception""];\n	""18"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""19"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""20"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""21"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""22"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""23"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""24"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""25"" [label=""e = $stack26""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""if $stack3 != null""];\n	""31"" [label=""if $stack4 == 0""];\n	""32"" [label=""if $stack5 == 0""];\n	""33"" [label=""if $stack6 == null""];\n	""34"" [label=""interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamWriter2: void writeBoolean(boolean)>(value)""];\n	""35"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""36"" [label=""interfaceinvoke $stack15.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,boolean)>($stack16, $stack19, $stack18, value)""];\n	""37"" [label=""interfaceinvoke $stack20.<org.codehaus.stax2.XMLStreamWriter2: void writeBoolean(boolean)>(value)""];\n	""38"" [label=""interfaceinvoke $stack22.<org.codehaus.stax2.XMLStreamWriter2: void writeBooleanAttribute(java.lang.String,java.lang.String,java.lang.String,boolean)>(null, $stack25, $stack24, value)""];\n	""39"" [label=""interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack11, $stack10)""];\n	""40"" [label=""return""];\n	""41"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""42"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""43"" [label=""value := @parameter0: boolean""];\n	""44"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write boolean value\"")""];\n	""45"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""17""[label=""cfg_except""];\n	""1"" -> ""39""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_except""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_except""];\n	""11"" -> ""37""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_except""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_except""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_except""];\n	""15"" -> ""17""[label=""cfg_except""];\n	""15"" -> ""38""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_except""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_except""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_except""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_except""];\n	""20"" -> ""32""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_except""];\n	""21"" -> ""33""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_except""];\n	""22"" -> ""2""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_except""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""17""[label=""cfg_except""];\n	""25"" -> ""41""[label=""cfg_next""];\n	""26"" -> ""17""[label=""cfg_except""];\n	""26"" -> ""27""[label=""cfg_goto""];\n	""27"" -> ""40""[label=""cfg_goto""];\n	""28"" -> ""17""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_goto""];\n	""29"" -> ""17""[label=""cfg_except""];\n	""29"" -> ""27""[label=""cfg_goto""];\n	""3"" -> ""17""[label=""cfg_except""];\n	""3"" -> ""34""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""30"" -> ""45""[label=""cfg_false""];\n	""31"" -> ""13""[label=""cfg_false""];\n	""31"" -> ""17""[label=""cfg_except""];\n	""31"" -> ""20""[label=""cfg_true""];\n	""32"" -> ""11""[label=""cfg_false""];\n	""32"" -> ""17""[label=""cfg_except""];\n	""32"" -> ""21""[label=""cfg_true""];\n	""33"" -> ""17""[label=""cfg_except""];\n	""33"" -> ""23""[label=""cfg_true""];\n	""33"" -> ""6""[label=""cfg_false""];\n	""34"" -> ""17""[label=""cfg_except""];\n	""34"" -> ""4""[label=""cfg_next""];\n	""35"" -> ""17""[label=""cfg_except""];\n	""35"" -> ""27""[label=""cfg_next""];\n	""36"" -> ""17""[label=""cfg_except""];\n	""36"" -> ""29""[label=""cfg_next""];\n	""37"" -> ""17""[label=""cfg_except""];\n	""37"" -> ""28""[label=""cfg_next""];\n	""38"" -> ""17""[label=""cfg_except""];\n	""38"" -> ""26""[label=""cfg_next""];\n	""39"" -> ""17""[label=""cfg_except""];\n	""39"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_except""];\n	""4"" -> ""35""[label=""cfg_next""];\n	""41"" -> ""40""[label=""cfg_next""];\n	""42"" -> ""43""[label=""cfg_next""];\n	""43"" -> ""44""[label=""cfg_next""];\n	""44"" -> ""18""[label=""cfg_next""];\n	""45"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_except""];\n	""6"" -> ""17""[label=""cfg_except""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_except""];\n	""9"" -> ""36""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNull(),Method,No Comment,"@Override\npublic void writeNull() throws IOException {\n    _verifyValueWrite(""write null value"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            // With attributes, best just leave it out, right? (since there's no way\n            // to use 'xsi:nil')\n        } else if (checkNextIsUnwrapped()) {\n            // as with above, best left unwritten?\n        } else {\n            final boolean asXsiNil = isEnabled(Feature.WRITE_NULLS_AS_XSI_NIL);\n            if (_xmlPrettyPrinter != null) {\n                // 12-Nov-2020, tatu: Not clean, due to backwards-compat challenges..\n                //    but has to do\n                if (asXsiNil && (_xmlPrettyPrinter instanceof DefaultXmlPrettyPrinter)) {\n                    ((DefaultXmlPrettyPrinter) _xmlPrettyPrinter).writeLeafXsiNilElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart());\n                } else {\n                    _xmlPrettyPrinter.writeLeafNullElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart());\n                }\n            } else {\n                if (asXsiNil) {\n                    _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                    _xmlWriter.writeAttribute(""xsi"", XMLConstants.W3C_XML_SCHEMA_INSTANCE_NS_URI, ""nil"", ""true"");\n                    _xmlWriter.writeEndElement();\n                } else {\n                    _xmlWriter.writeEmptyElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                }\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeNull(),"digraph cfg_writeNull {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""6"" [label=""$stack15 = virtualinvoke $stack14.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""7"" [label=""$stack16 = virtualinvoke $stack12.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""11"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""12"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""13"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""14"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""15"" [label=""$stack23 = virtualinvoke $stack22.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""16"" [label=""$stack24 = virtualinvoke $stack19.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""17"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""18"" [label=""$stack26 = $stack25 instanceof com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter""];\n	""19"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""20"" [label=""$stack28 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""21"" [label=""$stack29 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""22"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""23"" [label=""$stack30 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""24"" [label=""$stack31 = virtualinvoke $stack30.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""25"" [label=""$stack32 = virtualinvoke $stack28.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""26"" [label=""$stack33 = (com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter) $stack27""];\n	""27"" [label=""$stack34 := @caughtexception""];\n	""28"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""29"" [label=""$stack5 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_NULLS_AS_XSI_NIL>""];\n	""30"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""31"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""32"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""33"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""34"" [label=""asXsiNil = $stack34""];\n	""35"" [label=""asXsiNil = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature)>($stack5)""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""goto""];\n	""39"" [label=""goto""];\n	""40"" [label=""goto""];\n	""41"" [label=""goto""];\n	""42"" [label=""if $stack2 != null""];\n	""43"" [label=""if $stack26 == 0""];\n	""44"" [label=""if $stack3 == 0""];\n	""45"" [label=""if $stack4 == 0""];\n	""46"" [label=""if $stack6 == null""];\n	""47"" [label=""if asXsiNil == 0""];\n	""48"" [label=""if asXsiNil == 0""];\n	""49"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack16, $stack15)""];\n	""50"" [label=""interfaceinvoke $stack17.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(\""xsi\"", \""http://www.w3.org/2001/XMLSchema-instance\"", \""nil\"", \""true\"")""];\n	""51"" [label=""interfaceinvoke $stack18.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""52"" [label=""interfaceinvoke $stack20.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafNullElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)>($stack21, $stack24, $stack23)""];\n	""53"" [label=""interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamWriter2: void writeEmptyElement(java.lang.String,java.lang.String)>($stack11, $stack10)""];\n	""54"" [label=""return""];\n	""55"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(asXsiNil, this)""];\n	""56"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""57"" [label=""virtualinvoke $stack33.<com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter: void writeLeafXsiNilElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String)>($stack29, $stack32, $stack31)""];\n	""58"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write null value\"")""];\n	""59"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""27""[label=""cfg_except""];\n	""1"" -> ""53""[label=""cfg_next""];\n	""10"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""27""[label=""cfg_except""];\n	""11"" -> ""42""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""27""[label=""cfg_except""];\n	""13"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""27""[label=""cfg_except""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_except""];\n	""15"" -> ""27""[label=""cfg_except""];\n	""15"" -> ""52""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""27""[label=""cfg_except""];\n	""17"" -> ""18""[label=""cfg_next""];\n	""17"" -> ""27""[label=""cfg_except""];\n	""18"" -> ""27""[label=""cfg_except""];\n	""18"" -> ""43""[label=""cfg_next""];\n	""19"" -> ""26""[label=""cfg_next""];\n	""19"" -> ""27""[label=""cfg_except""];\n	""2"" -> ""27""[label=""cfg_except""];\n	""2"" -> ""33""[label=""cfg_next""];\n	""20"" -> ""25""[label=""cfg_next""];\n	""20"" -> ""27""[label=""cfg_except""];\n	""21"" -> ""20""[label=""cfg_next""];\n	""21"" -> ""27""[label=""cfg_except""];\n	""22"" -> ""27""[label=""cfg_except""];\n	""22"" -> ""44""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""23"" -> ""27""[label=""cfg_except""];\n	""24"" -> ""27""[label=""cfg_except""];\n	""24"" -> ""57""[label=""cfg_next""];\n	""25"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""27""[label=""cfg_except""];\n	""26"" -> ""21""[label=""cfg_next""];\n	""26"" -> ""27""[label=""cfg_except""];\n	""27"" -> ""34""[label=""cfg_next""];\n	""28"" -> ""27""[label=""cfg_except""];\n	""28"" -> ""45""[label=""cfg_next""];\n	""29"" -> ""27""[label=""cfg_except""];\n	""29"" -> ""35""[label=""cfg_next""];\n	""3"" -> ""27""[label=""cfg_except""];\n	""3"" -> ""7""[label=""cfg_next""];\n	""30"" -> ""27""[label=""cfg_except""];\n	""30"" -> ""46""[label=""cfg_next""];\n	""31"" -> ""2""[label=""cfg_next""];\n	""31"" -> ""27""[label=""cfg_except""];\n	""32"" -> ""27""[label=""cfg_except""];\n	""32"" -> ""31""[label=""cfg_next""];\n	""33"" -> ""1""[label=""cfg_next""];\n	""33"" -> ""27""[label=""cfg_except""];\n	""34"" -> ""55""[label=""cfg_next""];\n	""35"" -> ""27""[label=""cfg_except""];\n	""35"" -> ""30""[label=""cfg_next""];\n	""36"" -> ""27""[label=""cfg_except""];\n	""36"" -> ""37""[label=""cfg_goto""];\n	""37"" -> ""54""[label=""cfg_goto""];\n	""38"" -> ""27""[label=""cfg_except""];\n	""38"" -> ""37""[label=""cfg_goto""];\n	""39"" -> ""27""[label=""cfg_except""];\n	""39"" -> ""37""[label=""cfg_goto""];\n	""4"" -> ""27""[label=""cfg_except""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""40"" -> ""27""[label=""cfg_except""];\n	""40"" -> ""37""[label=""cfg_goto""];\n	""41"" -> ""27""[label=""cfg_except""];\n	""41"" -> ""37""[label=""cfg_goto""];\n	""42"" -> ""22""[label=""cfg_true""];\n	""42"" -> ""59""[label=""cfg_false""];\n	""43"" -> ""12""[label=""cfg_true""];\n	""43"" -> ""19""[label=""cfg_false""];\n	""43"" -> ""27""[label=""cfg_except""];\n	""44"" -> ""27""[label=""cfg_except""];\n	""44"" -> ""28""[label=""cfg_true""];\n	""44"" -> ""36""[label=""cfg_false""];\n	""45"" -> ""27""[label=""cfg_except""];\n	""45"" -> ""29""[label=""cfg_true""];\n	""45"" -> ""38""[label=""cfg_false""];\n	""46"" -> ""27""[label=""cfg_except""];\n	""46"" -> ""47""[label=""cfg_false""];\n	""46"" -> ""48""[label=""cfg_true""];\n	""47"" -> ""12""[label=""cfg_true""];\n	""47"" -> ""17""[label=""cfg_false""];\n	""47"" -> ""27""[label=""cfg_except""];\n	""48"" -> ""27""[label=""cfg_except""];\n	""48"" -> ""32""[label=""cfg_true""];\n	""48"" -> ""4""[label=""cfg_false""];\n	""49"" -> ""27""[label=""cfg_except""];\n	""49"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""27""[label=""cfg_except""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""50"" -> ""27""[label=""cfg_except""];\n	""50"" -> ""9""[label=""cfg_next""];\n	""51"" -> ""27""[label=""cfg_except""];\n	""51"" -> ""41""[label=""cfg_next""];\n	""52"" -> ""27""[label=""cfg_except""];\n	""52"" -> ""40""[label=""cfg_next""];\n	""53"" -> ""27""[label=""cfg_except""];\n	""53"" -> ""37""[label=""cfg_next""];\n	""55"" -> ""54""[label=""cfg_next""];\n	""56"" -> ""58""[label=""cfg_next""];\n	""57"" -> ""27""[label=""cfg_except""];\n	""57"" -> ""39""[label=""cfg_next""];\n	""58"" -> ""11""[label=""cfg_next""];\n	""59"" -> ""22""[label=""cfg_next""];\n	""6"" -> ""27""[label=""cfg_except""];\n	""6"" -> ""49""[label=""cfg_next""];\n	""7"" -> ""27""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""27""[label=""cfg_except""];\n	""8"" -> ""50""[label=""cfg_next""];\n	""9"" -> ""27""[label=""cfg_except""];\n	""9"" -> ""51""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(int),Method,No Comment,"@Override\npublic void writeNumber(int i) throws IOException {\n    _verifyValueWrite(""write number"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n        } else if (checkNextIsUnwrapped()) {\n            // should we consider pretty-printing or not?\n            _xmlWriter.writeInt(i);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), i);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeInt(i);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeNumber(int),"digraph cfg_writeNumber {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""10"" [label=""$stack19 = virtualinvoke $stack14.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""16"" [label=""$stack25 = virtualinvoke $stack21.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""17"" [label=""$stack26 := @caughtexception""];\n	""18"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""19"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""20"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""21"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""22"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""23"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""24"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""25"" [label=""e = $stack26""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""i := @parameter0: int""];\n	""31"" [label=""if $stack3 != null""];\n	""32"" [label=""if $stack4 == 0""];\n	""33"" [label=""if $stack5 == 0""];\n	""34"" [label=""if $stack6 == null""];\n	""35"" [label=""interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamWriter2: void writeInt(int)>(i)""];\n	""36"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""37"" [label=""interfaceinvoke $stack15.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,int)>($stack16, $stack19, $stack18, i)""];\n	""38"" [label=""interfaceinvoke $stack20.<org.codehaus.stax2.XMLStreamWriter2: void writeInt(int)>(i)""];\n	""39"" [label=""interfaceinvoke $stack22.<org.codehaus.stax2.XMLStreamWriter2: void writeIntAttribute(java.lang.String,java.lang.String,java.lang.String,int)>(null, $stack25, $stack24, i)""];\n	""40"" [label=""interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack11, $stack10)""];\n	""41"" [label=""return""];\n	""42"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""43"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""44"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write number\"")""];\n	""45"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""17""[label=""cfg_except""];\n	""1"" -> ""40""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_except""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_except""];\n	""11"" -> ""38""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_except""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_except""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_except""];\n	""15"" -> ""17""[label=""cfg_except""];\n	""15"" -> ""39""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_except""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""31""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_except""];\n	""19"" -> ""32""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_except""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_except""];\n	""20"" -> ""33""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_except""];\n	""21"" -> ""34""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_except""];\n	""22"" -> ""2""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_except""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""17""[label=""cfg_except""];\n	""25"" -> ""42""[label=""cfg_next""];\n	""26"" -> ""17""[label=""cfg_except""];\n	""26"" -> ""27""[label=""cfg_goto""];\n	""27"" -> ""41""[label=""cfg_goto""];\n	""28"" -> ""17""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_goto""];\n	""29"" -> ""17""[label=""cfg_except""];\n	""29"" -> ""27""[label=""cfg_goto""];\n	""3"" -> ""17""[label=""cfg_except""];\n	""3"" -> ""35""[label=""cfg_next""];\n	""30"" -> ""44""[label=""cfg_next""];\n	""31"" -> ""19""[label=""cfg_true""];\n	""31"" -> ""45""[label=""cfg_false""];\n	""32"" -> ""13""[label=""cfg_false""];\n	""32"" -> ""17""[label=""cfg_except""];\n	""32"" -> ""20""[label=""cfg_true""];\n	""33"" -> ""11""[label=""cfg_false""];\n	""33"" -> ""17""[label=""cfg_except""];\n	""33"" -> ""21""[label=""cfg_true""];\n	""34"" -> ""17""[label=""cfg_except""];\n	""34"" -> ""23""[label=""cfg_true""];\n	""34"" -> ""6""[label=""cfg_false""];\n	""35"" -> ""17""[label=""cfg_except""];\n	""35"" -> ""4""[label=""cfg_next""];\n	""36"" -> ""17""[label=""cfg_except""];\n	""36"" -> ""27""[label=""cfg_next""];\n	""37"" -> ""17""[label=""cfg_except""];\n	""37"" -> ""29""[label=""cfg_next""];\n	""38"" -> ""17""[label=""cfg_except""];\n	""38"" -> ""28""[label=""cfg_next""];\n	""39"" -> ""17""[label=""cfg_except""];\n	""39"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_except""];\n	""4"" -> ""36""[label=""cfg_next""];\n	""40"" -> ""17""[label=""cfg_except""];\n	""40"" -> ""3""[label=""cfg_next""];\n	""42"" -> ""41""[label=""cfg_next""];\n	""43"" -> ""30""[label=""cfg_next""];\n	""44"" -> ""18""[label=""cfg_next""];\n	""45"" -> ""19""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_except""];\n	""6"" -> ""17""[label=""cfg_except""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_except""];\n	""9"" -> ""37""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(long),Method,No Comment,"@Override\npublic void writeNumber(long l) throws IOException {\n    _verifyValueWrite(""write number"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeLongAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), l);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeLong(l);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), l);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeLong(l);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeNumber(long),"digraph cfg_writeNumber {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""11"" [label=""$stack20 = virtualinvoke $stack15.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""16"" [label=""$stack25 = virtualinvoke $stack24.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""17"" [label=""$stack26 = virtualinvoke $stack22.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""18"" [label=""$stack27 := @caughtexception""];\n	""19"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""20"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""21"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""22"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""23"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""24"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""25"" [label=""e = $stack27""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""if $stack4 != null""];\n	""31"" [label=""if $stack5 == 0""];\n	""32"" [label=""if $stack6 == 0""];\n	""33"" [label=""if $stack7 == null""];\n	""34"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeLong(long)>(l)""];\n	""35"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""36"" [label=""interfaceinvoke $stack16.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,long)>($stack17, $stack20, $stack19, l)""];\n	""37"" [label=""interfaceinvoke $stack21.<org.codehaus.stax2.XMLStreamWriter2: void writeLong(long)>(l)""];\n	""38"" [label=""interfaceinvoke $stack23.<org.codehaus.stax2.XMLStreamWriter2: void writeLongAttribute(java.lang.String,java.lang.String,java.lang.String,long)>(null, $stack26, $stack25, l)""];\n	""39"" [label=""interfaceinvoke $stack9.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack12, $stack11)""];\n	""40"" [label=""l := @parameter0: long""];\n	""41"" [label=""return""];\n	""42"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""43"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""44"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write number\"")""];\n	""45"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""1"" -> ""18""[label=""cfg_except""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""18""[label=""cfg_except""];\n	""10"" -> ""36""[label=""cfg_next""];\n	""11"" -> ""18""[label=""cfg_except""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""18""[label=""cfg_except""];\n	""12"" -> ""37""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""18""[label=""cfg_except""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_except""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""18""[label=""cfg_except""];\n	""16"" -> ""18""[label=""cfg_except""];\n	""16"" -> ""38""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""18""[label=""cfg_except""];\n	""18"" -> ""25""[label=""cfg_next""];\n	""19"" -> ""30""[label=""cfg_next""];\n	""2"" -> ""18""[label=""cfg_except""];\n	""2"" -> ""39""[label=""cfg_next""];\n	""20"" -> ""18""[label=""cfg_except""];\n	""20"" -> ""31""[label=""cfg_next""];\n	""21"" -> ""18""[label=""cfg_except""];\n	""21"" -> ""32""[label=""cfg_next""];\n	""22"" -> ""18""[label=""cfg_except""];\n	""22"" -> ""33""[label=""cfg_next""];\n	""23"" -> ""18""[label=""cfg_except""];\n	""23"" -> ""3""[label=""cfg_next""];\n	""24"" -> ""18""[label=""cfg_except""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""42""[label=""cfg_next""];\n	""26"" -> ""18""[label=""cfg_except""];\n	""26"" -> ""27""[label=""cfg_goto""];\n	""27"" -> ""41""[label=""cfg_goto""];\n	""28"" -> ""18""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_goto""];\n	""29"" -> ""18""[label=""cfg_except""];\n	""29"" -> ""27""[label=""cfg_goto""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""18""[label=""cfg_except""];\n	""30"" -> ""20""[label=""cfg_true""];\n	""30"" -> ""45""[label=""cfg_false""];\n	""31"" -> ""14""[label=""cfg_false""];\n	""31"" -> ""18""[label=""cfg_except""];\n	""31"" -> ""21""[label=""cfg_true""];\n	""32"" -> ""12""[label=""cfg_false""];\n	""32"" -> ""18""[label=""cfg_except""];\n	""32"" -> ""22""[label=""cfg_true""];\n	""33"" -> ""18""[label=""cfg_except""];\n	""33"" -> ""24""[label=""cfg_true""];\n	""33"" -> ""7""[label=""cfg_false""];\n	""34"" -> ""18""[label=""cfg_except""];\n	""34"" -> ""5""[label=""cfg_next""];\n	""35"" -> ""18""[label=""cfg_except""];\n	""35"" -> ""27""[label=""cfg_next""];\n	""36"" -> ""18""[label=""cfg_except""];\n	""36"" -> ""29""[label=""cfg_next""];\n	""37"" -> ""18""[label=""cfg_except""];\n	""37"" -> ""28""[label=""cfg_next""];\n	""38"" -> ""18""[label=""cfg_except""];\n	""38"" -> ""26""[label=""cfg_next""];\n	""39"" -> ""18""[label=""cfg_except""];\n	""39"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_except""];\n	""4"" -> ""34""[label=""cfg_next""];\n	""40"" -> ""44""[label=""cfg_next""];\n	""42"" -> ""41""[label=""cfg_next""];\n	""43"" -> ""40""[label=""cfg_next""];\n	""44"" -> ""19""[label=""cfg_next""];\n	""45"" -> ""20""[label=""cfg_next""];\n	""5"" -> ""18""[label=""cfg_except""];\n	""5"" -> ""35""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""18""[label=""cfg_except""];\n	""7"" -> ""18""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""18""[label=""cfg_except""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""18""[label=""cfg_except""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(double),Method,No Comment,"@Override\npublic void writeNumber(double d) throws IOException {\n    if (Double.isInfinite(d) && isEnabled(Feature.WRITE_XML_SCHEMA_CONFORMING_FLOATS)) {\n        writeNumber(d > 0d ? ""INF"" : ""-INF"");\n        return;\n    }\n    _verifyValueWrite(""write number"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeDoubleAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), d);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeDouble(d);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), d);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeDouble(d);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeNumber(double),"digraph cfg_writeNumber {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""11"" [label=""$stack20 = virtualinvoke $stack19.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""12"" [label=""$stack21 = virtualinvoke $stack16.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""16"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""17"" [label=""$stack26 = virtualinvoke $stack25.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""18"" [label=""$stack27 = virtualinvoke $stack23.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""19"" [label=""$stack28 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_XML_SCHEMA_CONFORMING_FLOATS>""];\n	""20"" [label=""$stack29 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature)>($stack28)""];\n	""21"" [label=""$stack30 = d cmpl 0.0""];\n	""22"" [label=""$stack31 = \""-INF\""""];\n	""23"" [label=""$stack31 = \""INF\""""];\n	""24"" [label=""$stack32 := @caughtexception""];\n	""25"" [label=""$stack4 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(d)""];\n	""26"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""27"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""28"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""29"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""30"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""31"" [label=""d := @parameter0: double""];\n	""32"" [label=""e = $stack32""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""if $stack29 == 0""];\n	""39"" [label=""if $stack30 <= 0""];\n	""40"" [label=""if $stack4 == 0""];\n	""41"" [label=""if $stack5 != null""];\n	""42"" [label=""if $stack6 == 0""];\n	""43"" [label=""if $stack7 == 0""];\n	""44"" [label=""if $stack8 == null""];\n	""45"" [label=""interfaceinvoke $stack10.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack13, $stack12)""];\n	""46"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeDouble(double)>(d)""];\n	""47"" [label=""interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""48"" [label=""interfaceinvoke $stack17.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,double)>($stack18, $stack21, $stack20, d)""];\n	""49"" [label=""interfaceinvoke $stack22.<org.codehaus.stax2.XMLStreamWriter2: void writeDouble(double)>(d)""];\n	""50"" [label=""interfaceinvoke $stack24.<org.codehaus.stax2.XMLStreamWriter2: void writeDoubleAttribute(java.lang.String,java.lang.String,java.lang.String,double)>(null, $stack27, $stack26, d)""];\n	""51"" [label=""return""];\n	""52"" [label=""return""];\n	""53"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""54"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""55"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write number\"")""];\n	""56"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""57"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeNumber(java.lang.String)>($stack31)""];\n	""1"" -> ""24""[label=""cfg_except""];\n	""1"" -> ""30""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""24""[label=""cfg_except""];\n	""11"" -> ""24""[label=""cfg_except""];\n	""11"" -> ""48""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_except""];\n	""13"" -> ""24""[label=""cfg_except""];\n	""13"" -> ""49""[label=""cfg_next""];\n	""14"" -> ""18""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_except""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_except""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""24""[label=""cfg_except""];\n	""17"" -> ""24""[label=""cfg_except""];\n	""17"" -> ""50""[label=""cfg_next""];\n	""18"" -> ""16""[label=""cfg_next""];\n	""18"" -> ""24""[label=""cfg_except""];\n	""19"" -> ""20""[label=""cfg_next""];\n	""2"" -> ""24""[label=""cfg_except""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""20"" -> ""38""[label=""cfg_next""];\n	""21"" -> ""39""[label=""cfg_next""];\n	""22"" -> ""57""[label=""cfg_next""];\n	""23"" -> ""33""[label=""cfg_next""];\n	""24"" -> ""32""[label=""cfg_next""];\n	""25"" -> ""40""[label=""cfg_next""];\n	""26"" -> ""41""[label=""cfg_next""];\n	""27"" -> ""24""[label=""cfg_except""];\n	""27"" -> ""42""[label=""cfg_next""];\n	""28"" -> ""24""[label=""cfg_except""];\n	""28"" -> ""43""[label=""cfg_next""];\n	""29"" -> ""24""[label=""cfg_except""];\n	""29"" -> ""44""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_except""];\n	""3"" -> ""45""[label=""cfg_next""];\n	""30"" -> ""24""[label=""cfg_except""];\n	""30"" -> ""4""[label=""cfg_next""];\n	""31"" -> ""25""[label=""cfg_next""];\n	""32"" -> ""53""[label=""cfg_next""];\n	""33"" -> ""57""[label=""cfg_goto""];\n	""34"" -> ""24""[label=""cfg_except""];\n	""34"" -> ""35""[label=""cfg_goto""];\n	""35"" -> ""52""[label=""cfg_goto""];\n	""36"" -> ""24""[label=""cfg_except""];\n	""36"" -> ""35""[label=""cfg_goto""];\n	""37"" -> ""24""[label=""cfg_except""];\n	""37"" -> ""35""[label=""cfg_goto""];\n	""38"" -> ""21""[label=""cfg_false""];\n	""38"" -> ""55""[label=""cfg_true""];\n	""39"" -> ""22""[label=""cfg_true""];\n	""39"" -> ""23""[label=""cfg_false""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""24""[label=""cfg_except""];\n	""40"" -> ""19""[label=""cfg_false""];\n	""40"" -> ""55""[label=""cfg_true""];\n	""41"" -> ""27""[label=""cfg_true""];\n	""41"" -> ""56""[label=""cfg_false""];\n	""42"" -> ""15""[label=""cfg_false""];\n	""42"" -> ""24""[label=""cfg_except""];\n	""42"" -> ""28""[label=""cfg_true""];\n	""43"" -> ""13""[label=""cfg_false""];\n	""43"" -> ""24""[label=""cfg_except""];\n	""43"" -> ""29""[label=""cfg_true""];\n	""44"" -> ""1""[label=""cfg_true""];\n	""44"" -> ""24""[label=""cfg_except""];\n	""44"" -> ""8""[label=""cfg_false""];\n	""45"" -> ""24""[label=""cfg_except""];\n	""45"" -> ""5""[label=""cfg_next""];\n	""46"" -> ""24""[label=""cfg_except""];\n	""46"" -> ""6""[label=""cfg_next""];\n	""47"" -> ""24""[label=""cfg_except""];\n	""47"" -> ""35""[label=""cfg_next""];\n	""48"" -> ""24""[label=""cfg_except""];\n	""48"" -> ""37""[label=""cfg_next""];\n	""49"" -> ""24""[label=""cfg_except""];\n	""49"" -> ""36""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_except""];\n	""5"" -> ""46""[label=""cfg_next""];\n	""50"" -> ""24""[label=""cfg_except""];\n	""50"" -> ""34""[label=""cfg_next""];\n	""53"" -> ""52""[label=""cfg_next""];\n	""54"" -> ""31""[label=""cfg_next""];\n	""55"" -> ""26""[label=""cfg_next""];\n	""56"" -> ""27""[label=""cfg_next""];\n	""57"" -> ""51""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_except""];\n	""6"" -> ""47""[label=""cfg_next""];\n	""7"" -> ""12""[label=""cfg_next""];\n	""7"" -> ""24""[label=""cfg_except""];\n	""8"" -> ""24""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_except""];\n	""9"" -> ""7""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(float),Method,No Comment,"@Override\npublic void writeNumber(float f) throws IOException {\n    if (Float.isInfinite(f) && isEnabled(Feature.WRITE_XML_SCHEMA_CONFORMING_FLOATS)) {\n        writeNumber(f > 0f ? ""INF"" : ""-INF"");\n        return;\n    }\n    _verifyValueWrite(""write number"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeFloatAttribute(null, _nextName.getNamespaceURI(), _nextName.getLocalPart(), f);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeFloat(f);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), f);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeFloat(f);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeNumber(float),"digraph cfg_writeNumber {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""3"" [label=""$stack12 = virtualinvoke $stack8.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""10"" [label=""$stack19 = virtualinvoke $stack18.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""11"" [label=""$stack20 = virtualinvoke $stack15.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""16"" [label=""$stack25 = virtualinvoke $stack24.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""17"" [label=""$stack26 = virtualinvoke $stack22.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""18"" [label=""$stack27 = <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature WRITE_XML_SCHEMA_CONFORMING_FLOATS>""];\n	""19"" [label=""$stack28 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature)>($stack27)""];\n	""20"" [label=""$stack29 = f cmpl 0.0F""];\n	""21"" [label=""$stack3 = staticinvoke <java.lang.Float: boolean isInfinite(float)>(f)""];\n	""22"" [label=""$stack30 = \""-INF\""""];\n	""23"" [label=""$stack30 = \""INF\""""];\n	""24"" [label=""$stack31 := @caughtexception""];\n	""25"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""26"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""27"" [label=""$stack6 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""28"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""29"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""30"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""31"" [label=""e = $stack31""];\n	""32"" [label=""f := @parameter0: float""];\n	""33"" [label=""goto""];\n	""34"" [label=""goto""];\n	""35"" [label=""goto""];\n	""36"" [label=""goto""];\n	""37"" [label=""goto""];\n	""38"" [label=""if $stack28 == 0""];\n	""39"" [label=""if $stack29 <= 0""];\n	""40"" [label=""if $stack3 == 0""];\n	""41"" [label=""if $stack4 != null""];\n	""42"" [label=""if $stack5 == 0""];\n	""43"" [label=""if $stack6 == 0""];\n	""44"" [label=""if $stack7 == null""];\n	""45"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeFloat(float)>(f)""];\n	""46"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""47"" [label=""interfaceinvoke $stack16.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,float)>($stack17, $stack20, $stack19, f)""];\n	""48"" [label=""interfaceinvoke $stack21.<org.codehaus.stax2.XMLStreamWriter2: void writeFloat(float)>(f)""];\n	""49"" [label=""interfaceinvoke $stack23.<org.codehaus.stax2.XMLStreamWriter2: void writeFloatAttribute(java.lang.String,java.lang.String,java.lang.String,float)>(null, $stack26, $stack25, f)""];\n	""50"" [label=""interfaceinvoke $stack9.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack12, $stack11)""];\n	""51"" [label=""return""];\n	""52"" [label=""return""];\n	""53"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""54"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""55"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write number\"")""];\n	""56"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""57"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeNumber(java.lang.String)>($stack30)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""1"" -> ""24""[label=""cfg_except""];\n	""10"" -> ""24""[label=""cfg_except""];\n	""10"" -> ""47""[label=""cfg_next""];\n	""11"" -> ""24""[label=""cfg_except""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""24""[label=""cfg_except""];\n	""12"" -> ""48""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_next""];\n	""13"" -> ""24""[label=""cfg_except""];\n	""14"" -> ""13""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_except""];\n	""15"" -> ""16""[label=""cfg_next""];\n	""15"" -> ""24""[label=""cfg_except""];\n	""16"" -> ""24""[label=""cfg_except""];\n	""16"" -> ""49""[label=""cfg_next""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""24""[label=""cfg_except""];\n	""18"" -> ""19""[label=""cfg_next""];\n	""19"" -> ""38""[label=""cfg_next""];\n	""2"" -> ""24""[label=""cfg_except""];\n	""2"" -> ""50""[label=""cfg_next""];\n	""20"" -> ""39""[label=""cfg_next""];\n	""21"" -> ""40""[label=""cfg_next""];\n	""22"" -> ""57""[label=""cfg_next""];\n	""23"" -> ""33""[label=""cfg_next""];\n	""24"" -> ""31""[label=""cfg_next""];\n	""25"" -> ""41""[label=""cfg_next""];\n	""26"" -> ""24""[label=""cfg_except""];\n	""26"" -> ""42""[label=""cfg_next""];\n	""27"" -> ""24""[label=""cfg_except""];\n	""27"" -> ""43""[label=""cfg_next""];\n	""28"" -> ""24""[label=""cfg_except""];\n	""28"" -> ""44""[label=""cfg_next""];\n	""29"" -> ""24""[label=""cfg_except""];\n	""29"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""24""[label=""cfg_except""];\n	""30"" -> ""24""[label=""cfg_except""];\n	""30"" -> ""29""[label=""cfg_next""];\n	""31"" -> ""53""[label=""cfg_next""];\n	""32"" -> ""21""[label=""cfg_next""];\n	""33"" -> ""57""[label=""cfg_goto""];\n	""34"" -> ""24""[label=""cfg_except""];\n	""34"" -> ""35""[label=""cfg_goto""];\n	""35"" -> ""52""[label=""cfg_goto""];\n	""36"" -> ""24""[label=""cfg_except""];\n	""36"" -> ""35""[label=""cfg_goto""];\n	""37"" -> ""24""[label=""cfg_except""];\n	""37"" -> ""35""[label=""cfg_goto""];\n	""38"" -> ""20""[label=""cfg_false""];\n	""38"" -> ""55""[label=""cfg_true""];\n	""39"" -> ""22""[label=""cfg_true""];\n	""39"" -> ""23""[label=""cfg_false""];\n	""4"" -> ""24""[label=""cfg_except""];\n	""4"" -> ""45""[label=""cfg_next""];\n	""40"" -> ""18""[label=""cfg_false""];\n	""40"" -> ""55""[label=""cfg_true""];\n	""41"" -> ""26""[label=""cfg_true""];\n	""41"" -> ""56""[label=""cfg_false""];\n	""42"" -> ""14""[label=""cfg_false""];\n	""42"" -> ""24""[label=""cfg_except""];\n	""42"" -> ""27""[label=""cfg_true""];\n	""43"" -> ""12""[label=""cfg_false""];\n	""43"" -> ""24""[label=""cfg_except""];\n	""43"" -> ""28""[label=""cfg_true""];\n	""44"" -> ""24""[label=""cfg_except""];\n	""44"" -> ""30""[label=""cfg_true""];\n	""44"" -> ""7""[label=""cfg_false""];\n	""45"" -> ""24""[label=""cfg_except""];\n	""45"" -> ""5""[label=""cfg_next""];\n	""46"" -> ""24""[label=""cfg_except""];\n	""46"" -> ""35""[label=""cfg_next""];\n	""47"" -> ""24""[label=""cfg_except""];\n	""47"" -> ""37""[label=""cfg_next""];\n	""48"" -> ""24""[label=""cfg_except""];\n	""48"" -> ""36""[label=""cfg_next""];\n	""49"" -> ""24""[label=""cfg_except""];\n	""49"" -> ""34""[label=""cfg_next""];\n	""5"" -> ""24""[label=""cfg_except""];\n	""5"" -> ""46""[label=""cfg_next""];\n	""50"" -> ""24""[label=""cfg_except""];\n	""50"" -> ""4""[label=""cfg_next""];\n	""53"" -> ""52""[label=""cfg_next""];\n	""54"" -> ""32""[label=""cfg_next""];\n	""55"" -> ""25""[label=""cfg_next""];\n	""56"" -> ""26""[label=""cfg_next""];\n	""57"" -> ""51""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""6"" -> ""24""[label=""cfg_except""];\n	""7"" -> ""24""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""8"" -> ""24""[label=""cfg_except""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_except""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(BigDecimal),Method,No Comment,"@Override\npublic void writeNumber(BigDecimal dec) throws IOException {\n    if (dec == null) {\n        writeNull();\n        return;\n    }\n    _verifyValueWrite(""write number"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    boolean usePlain = isEnabled(JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN);\n    try {\n        if (_nextIsAttribute) {\n            if (usePlain) {\n                _xmlWriter.writeAttribute("""", _nextName.getNamespaceURI(), _nextName.getLocalPart(), dec.toPlainString());\n            } else {\n                _xmlWriter.writeDecimalAttribute("""", _nextName.getNamespaceURI(), _nextName.getLocalPart(), dec);\n            }\n        } else if (checkNextIsUnwrapped()) {\n            if (usePlain) {\n                _xmlWriter.writeCharacters(dec.toPlainString());\n            } else {\n                _xmlWriter.writeDecimal(dec);\n            }\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                if (usePlain) {\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), dec.toPlainString(), false);\n                } else {\n                    _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), dec);\n                }\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                if (usePlain) {\n                    _xmlWriter.writeCharacters(dec.toPlainString());\n                } else {\n                    _xmlWriter.writeDecimal(dec);\n                }\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeNumber(java.math.BigDecimal),"digraph cfg_writeNumber {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""3"" [label=""$stack12 = virtualinvoke $stack11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""4"" [label=""$stack13 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = virtualinvoke dec.<java.math.BigDecimal: java.lang.String toPlainString()>()""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""10"" [label=""$stack19 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""13"" [label=""$stack22 = virtualinvoke $stack21.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""14"" [label=""$stack23 = virtualinvoke $stack18.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""15"" [label=""$stack24 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""16"" [label=""$stack25 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""17"" [label=""$stack26 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""18"" [label=""$stack27 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""19"" [label=""$stack28 = virtualinvoke dec.<java.math.BigDecimal: java.lang.String toPlainString()>()""];\n	""20"" [label=""$stack29 = virtualinvoke $stack27.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""21"" [label=""$stack30 = virtualinvoke $stack24.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""22"" [label=""$stack31 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""23"" [label=""$stack32 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""24"" [label=""$stack33 = virtualinvoke dec.<java.math.BigDecimal: java.lang.String toPlainString()>()""];\n	""25"" [label=""$stack34 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""26"" [label=""$stack35 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""27"" [label=""$stack36 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""28"" [label=""$stack37 = virtualinvoke $stack36.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""29"" [label=""$stack38 = virtualinvoke $stack34.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""30"" [label=""$stack39 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""31"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""32"" [label=""$stack40 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""33"" [label=""$stack41 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""34"" [label=""$stack42 = virtualinvoke dec.<java.math.BigDecimal: java.lang.String toPlainString()>()""];\n	""35"" [label=""$stack43 = virtualinvoke $stack41.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""36"" [label=""$stack44 = virtualinvoke $stack39.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""37"" [label=""$stack45 := @caughtexception""];\n	""38"" [label=""$stack5 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN>""];\n	""39"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""40"" [label=""$stack7 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""41"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""42"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""43"" [label=""dec := @parameter0: java.math.BigDecimal""];\n	""44"" [label=""e = $stack45""];\n	""45"" [label=""goto""];\n	""46"" [label=""goto""];\n	""47"" [label=""goto""];\n	""48"" [label=""goto""];\n	""49"" [label=""goto""];\n	""50"" [label=""goto""];\n	""51"" [label=""goto""];\n	""52"" [label=""goto""];\n	""53"" [label=""if $stack4 != null""];\n	""54"" [label=""if $stack6 == 0""];\n	""55"" [label=""if $stack7 == 0""];\n	""56"" [label=""if $stack8 == null""];\n	""57"" [label=""if dec != null""];\n	""58"" [label=""if usePlain == 0""];\n	""59"" [label=""if usePlain == 0""];\n	""60"" [label=""if usePlain == 0""];\n	""61"" [label=""if usePlain == 0""];\n	""62"" [label=""interfaceinvoke $stack10.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack13, $stack12)""];\n	""63"" [label=""interfaceinvoke $stack14.<org.codehaus.stax2.XMLStreamWriter2: void writeDecimal(java.math.BigDecimal)>(dec)""];\n	""64"" [label=""interfaceinvoke $stack15.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""65"" [label=""interfaceinvoke $stack16.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(java.lang.String)>($stack17)""];\n	""66"" [label=""interfaceinvoke $stack19.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.math.BigDecimal)>($stack20, $stack23, $stack22, dec)""];\n	""67"" [label=""interfaceinvoke $stack25.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.lang.String,boolean)>($stack26, $stack30, $stack29, $stack28, 0)""];\n	""68"" [label=""interfaceinvoke $stack31.<org.codehaus.stax2.XMLStreamWriter2: void writeDecimal(java.math.BigDecimal)>(dec)""];\n	""69"" [label=""interfaceinvoke $stack32.<org.codehaus.stax2.XMLStreamWriter2: void writeCharacters(java.lang.String)>($stack33)""];\n	""70"" [label=""interfaceinvoke $stack35.<org.codehaus.stax2.XMLStreamWriter2: void writeDecimalAttribute(java.lang.String,java.lang.String,java.lang.String,java.math.BigDecimal)>(\""\"", $stack38, $stack37, dec)""];\n	""71"" [label=""interfaceinvoke $stack40.<org.codehaus.stax2.XMLStreamWriter2: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(\""\"", $stack44, $stack43, $stack42)""];\n	""72"" [label=""return""];\n	""73"" [label=""return""];\n	""74"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""75"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""76"" [label=""usePlain = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>($stack5)""];\n	""77"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write number\"")""];\n	""78"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""79"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeNull()>()""];\n	""1"" -> ""37""[label=""cfg_except""];\n	""1"" -> ""42""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""37""[label=""cfg_except""];\n	""11"" -> ""37""[label=""cfg_except""];\n	""11"" -> ""9""[label=""cfg_next""];\n	""12"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""37""[label=""cfg_except""];\n	""13"" -> ""37""[label=""cfg_except""];\n	""13"" -> ""66""[label=""cfg_next""];\n	""14"" -> ""12""[label=""cfg_next""];\n	""14"" -> ""37""[label=""cfg_except""];\n	""15"" -> ""21""[label=""cfg_next""];\n	""15"" -> ""37""[label=""cfg_except""];\n	""16"" -> ""17""[label=""cfg_next""];\n	""16"" -> ""37""[label=""cfg_except""];\n	""17"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""37""[label=""cfg_except""];\n	""18"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""37""[label=""cfg_except""];\n	""19"" -> ""37""[label=""cfg_except""];\n	""19"" -> ""67""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""2"" -> ""37""[label=""cfg_except""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""20"" -> ""37""[label=""cfg_except""];\n	""21"" -> ""18""[label=""cfg_next""];\n	""21"" -> ""37""[label=""cfg_except""];\n	""22"" -> ""37""[label=""cfg_except""];\n	""22"" -> ""68""[label=""cfg_next""];\n	""23"" -> ""24""[label=""cfg_next""];\n	""23"" -> ""37""[label=""cfg_except""];\n	""24"" -> ""37""[label=""cfg_except""];\n	""24"" -> ""69""[label=""cfg_next""];\n	""25"" -> ""29""[label=""cfg_next""];\n	""25"" -> ""37""[label=""cfg_except""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""26"" -> ""37""[label=""cfg_except""];\n	""27"" -> ""28""[label=""cfg_next""];\n	""27"" -> ""37""[label=""cfg_except""];\n	""28"" -> ""37""[label=""cfg_except""];\n	""28"" -> ""70""[label=""cfg_next""];\n	""29"" -> ""27""[label=""cfg_next""];\n	""29"" -> ""37""[label=""cfg_except""];\n	""3"" -> ""37""[label=""cfg_except""];\n	""3"" -> ""62""[label=""cfg_next""];\n	""30"" -> ""36""[label=""cfg_next""];\n	""30"" -> ""37""[label=""cfg_except""];\n	""31"" -> ""53""[label=""cfg_next""];\n	""32"" -> ""30""[label=""cfg_next""];\n	""32"" -> ""37""[label=""cfg_except""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""33"" -> ""37""[label=""cfg_except""];\n	""34"" -> ""37""[label=""cfg_except""];\n	""34"" -> ""71""[label=""cfg_next""];\n	""35"" -> ""34""[label=""cfg_next""];\n	""35"" -> ""37""[label=""cfg_except""];\n	""36"" -> ""33""[label=""cfg_next""];\n	""36"" -> ""37""[label=""cfg_except""];\n	""37"" -> ""44""[label=""cfg_next""];\n	""38"" -> ""76""[label=""cfg_next""];\n	""39"" -> ""37""[label=""cfg_except""];\n	""39"" -> ""54""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""37""[label=""cfg_except""];\n	""40"" -> ""37""[label=""cfg_except""];\n	""40"" -> ""55""[label=""cfg_next""];\n	""41"" -> ""37""[label=""cfg_except""];\n	""41"" -> ""56""[label=""cfg_next""];\n	""42"" -> ""37""[label=""cfg_except""];\n	""42"" -> ""4""[label=""cfg_next""];\n	""43"" -> ""57""[label=""cfg_next""];\n	""44"" -> ""74""[label=""cfg_next""];\n	""45"" -> ""37""[label=""cfg_except""];\n	""45"" -> ""46""[label=""cfg_goto""];\n	""46"" -> ""73""[label=""cfg_goto""];\n	""47"" -> ""37""[label=""cfg_except""];\n	""47"" -> ""46""[label=""cfg_goto""];\n	""48"" -> ""37""[label=""cfg_except""];\n	""48"" -> ""46""[label=""cfg_goto""];\n	""49"" -> ""37""[label=""cfg_except""];\n	""49"" -> ""46""[label=""cfg_goto""];\n	""5"" -> ""37""[label=""cfg_except""];\n	""5"" -> ""63""[label=""cfg_next""];\n	""50"" -> ""37""[label=""cfg_except""];\n	""50"" -> ""46""[label=""cfg_goto""];\n	""51"" -> ""37""[label=""cfg_except""];\n	""51"" -> ""46""[label=""cfg_goto""];\n	""52"" -> ""37""[label=""cfg_except""];\n	""52"" -> ""6""[label=""cfg_goto""];\n	""53"" -> ""38""[label=""cfg_true""];\n	""53"" -> ""78""[label=""cfg_false""];\n	""54"" -> ""37""[label=""cfg_except""];\n	""54"" -> ""40""[label=""cfg_true""];\n	""54"" -> ""58""[label=""cfg_false""];\n	""55"" -> ""37""[label=""cfg_except""];\n	""55"" -> ""41""[label=""cfg_true""];\n	""55"" -> ""59""[label=""cfg_false""];\n	""56"" -> ""1""[label=""cfg_true""];\n	""56"" -> ""37""[label=""cfg_except""];\n	""56"" -> ""60""[label=""cfg_false""];\n	""57"" -> ""77""[label=""cfg_true""];\n	""57"" -> ""79""[label=""cfg_false""];\n	""58"" -> ""26""[label=""cfg_true""];\n	""58"" -> ""32""[label=""cfg_false""];\n	""58"" -> ""37""[label=""cfg_except""];\n	""59"" -> ""22""[label=""cfg_true""];\n	""59"" -> ""23""[label=""cfg_false""];\n	""59"" -> ""37""[label=""cfg_except""];\n	""6"" -> ""37""[label=""cfg_except""];\n	""6"" -> ""64""[label=""cfg_next""];\n	""60"" -> ""10""[label=""cfg_true""];\n	""60"" -> ""16""[label=""cfg_false""];\n	""60"" -> ""37""[label=""cfg_except""];\n	""61"" -> ""37""[label=""cfg_except""];\n	""61"" -> ""5""[label=""cfg_true""];\n	""61"" -> ""7""[label=""cfg_false""];\n	""62"" -> ""37""[label=""cfg_except""];\n	""62"" -> ""61""[label=""cfg_next""];\n	""63"" -> ""37""[label=""cfg_except""];\n	""63"" -> ""6""[label=""cfg_next""];\n	""64"" -> ""37""[label=""cfg_except""];\n	""64"" -> ""46""[label=""cfg_next""];\n	""65"" -> ""37""[label=""cfg_except""];\n	""65"" -> ""52""[label=""cfg_next""];\n	""66"" -> ""37""[label=""cfg_except""];\n	""66"" -> ""51""[label=""cfg_next""];\n	""67"" -> ""37""[label=""cfg_except""];\n	""67"" -> ""50""[label=""cfg_next""];\n	""68"" -> ""37""[label=""cfg_except""];\n	""68"" -> ""49""[label=""cfg_next""];\n	""69"" -> ""37""[label=""cfg_except""];\n	""69"" -> ""48""[label=""cfg_next""];\n	""7"" -> ""37""[label=""cfg_except""];\n	""7"" -> ""8""[label=""cfg_next""];\n	""70"" -> ""37""[label=""cfg_except""];\n	""70"" -> ""47""[label=""cfg_next""];\n	""71"" -> ""37""[label=""cfg_except""];\n	""71"" -> ""45""[label=""cfg_next""];\n	""74"" -> ""73""[label=""cfg_next""];\n	""75"" -> ""43""[label=""cfg_next""];\n	""76"" -> ""39""[label=""cfg_next""];\n	""77"" -> ""31""[label=""cfg_next""];\n	""78"" -> ""38""[label=""cfg_next""];\n	""79"" -> ""72""[label=""cfg_next""];\n	""8"" -> ""37""[label=""cfg_except""];\n	""8"" -> ""65""[label=""cfg_next""];\n	""9"" -> ""14""[label=""cfg_next""];\n	""9"" -> ""37""[label=""cfg_except""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(BigInteger),Method,No Comment,"@Override\npublic void writeNumber(BigInteger value) throws IOException {\n    if (value == null) {\n        writeNull();\n        return;\n    }\n    _verifyValueWrite(""write number"");\n    if (_nextName == null) {\n        handleMissingName();\n    }\n    try {\n        if (_nextIsAttribute) {\n            _xmlWriter.writeIntegerAttribute("""", _nextName.getNamespaceURI(), _nextName.getLocalPart(), value);\n        } else if (checkNextIsUnwrapped()) {\n            _xmlWriter.writeInteger(value);\n        } else {\n            if (_xmlPrettyPrinter != null) {\n                _xmlPrettyPrinter.writeLeafElement(_xmlWriter, _nextName.getNamespaceURI(), _nextName.getLocalPart(), value);\n            } else {\n                _xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n                _xmlWriter.writeInteger(value);\n                _xmlWriter.writeEndElement();\n            }\n        }\n    } catch (XMLStreamException e) {\n        StaxUtil.throwAsGenerationException(e, this);\n    }\n}",void writeNumber(java.math.BigInteger),"digraph cfg_writeNumber {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""2"" [label=""$stack11 = virtualinvoke $stack7.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""8"" [label=""$stack17 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""9"" [label=""$stack18 = virtualinvoke $stack17.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""10"" [label=""$stack19 = virtualinvoke $stack14.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""12"" [label=""$stack21 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""13"" [label=""$stack22 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""14"" [label=""$stack23 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""15"" [label=""$stack24 = virtualinvoke $stack23.<javax.xml.namespace.QName: java.lang.String getLocalPart()>()""];\n	""16"" [label=""$stack25 = virtualinvoke $stack21.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>()""];\n	""17"" [label=""$stack26 := @caughtexception""];\n	""18"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""19"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute>""];\n	""20"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean checkNextIsUnwrapped()>()""];\n	""21"" [label=""$stack6 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter>""];\n	""22"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""23"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""24"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName>""];\n	""25"" [label=""e = $stack26""];\n	""26"" [label=""goto""];\n	""27"" [label=""goto""];\n	""28"" [label=""goto""];\n	""29"" [label=""goto""];\n	""30"" [label=""if $stack3 != null""];\n	""31"" [label=""if $stack4 == 0""];\n	""32"" [label=""if $stack5 == 0""];\n	""33"" [label=""if $stack6 == null""];\n	""34"" [label=""if value != null""];\n	""35"" [label=""interfaceinvoke $stack12.<org.codehaus.stax2.XMLStreamWriter2: void writeInteger(java.math.BigInteger)>(value)""];\n	""36"" [label=""interfaceinvoke $stack13.<org.codehaus.stax2.XMLStreamWriter2: void writeEndElement()>()""];\n	""37"" [label=""interfaceinvoke $stack15.<com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter: void writeLeafElement(org.codehaus.stax2.XMLStreamWriter2,java.lang.String,java.lang.String,java.math.BigInteger)>($stack16, $stack19, $stack18, value)""];\n	""38"" [label=""interfaceinvoke $stack20.<org.codehaus.stax2.XMLStreamWriter2: void writeInteger(java.math.BigInteger)>(value)""];\n	""39"" [label=""interfaceinvoke $stack22.<org.codehaus.stax2.XMLStreamWriter2: void writeIntegerAttribute(java.lang.String,java.lang.String,java.lang.String,java.math.BigInteger)>(\""\"", $stack25, $stack24, value)""];\n	""40"" [label=""interfaceinvoke $stack8.<org.codehaus.stax2.XMLStreamWriter2: void writeStartElement(java.lang.String,java.lang.String)>($stack11, $stack10)""];\n	""41"" [label=""return""];\n	""42"" [label=""return""];\n	""43"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""44"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""45"" [label=""value := @parameter0: java.math.BigInteger""];\n	""46"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _verifyValueWrite(java.lang.String)>(\""write number\"")""];\n	""47"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void handleMissingName()>()""];\n	""48"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeNull()>()""];\n	""1"" -> ""17""[label=""cfg_except""];\n	""1"" -> ""40""[label=""cfg_next""];\n	""10"" -> ""17""[label=""cfg_except""];\n	""10"" -> ""8""[label=""cfg_next""];\n	""11"" -> ""17""[label=""cfg_except""];\n	""11"" -> ""38""[label=""cfg_next""];\n	""12"" -> ""16""[label=""cfg_next""];\n	""12"" -> ""17""[label=""cfg_except""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""13"" -> ""17""[label=""cfg_except""];\n	""14"" -> ""15""[label=""cfg_next""];\n	""14"" -> ""17""[label=""cfg_except""];\n	""15"" -> ""17""[label=""cfg_except""];\n	""15"" -> ""39""[label=""cfg_next""];\n	""16"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""17""[label=""cfg_except""];\n	""17"" -> ""25""[label=""cfg_next""];\n	""18"" -> ""30""[label=""cfg_next""];\n	""19"" -> ""17""[label=""cfg_except""];\n	""19"" -> ""31""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_except""];\n	""2"" -> ""24""[label=""cfg_next""];\n	""20"" -> ""17""[label=""cfg_except""];\n	""20"" -> ""32""[label=""cfg_next""];\n	""21"" -> ""17""[label=""cfg_except""];\n	""21"" -> ""33""[label=""cfg_next""];\n	""22"" -> ""17""[label=""cfg_except""];\n	""22"" -> ""2""[label=""cfg_next""];\n	""23"" -> ""17""[label=""cfg_except""];\n	""23"" -> ""22""[label=""cfg_next""];\n	""24"" -> ""1""[label=""cfg_next""];\n	""24"" -> ""17""[label=""cfg_except""];\n	""25"" -> ""43""[label=""cfg_next""];\n	""26"" -> ""17""[label=""cfg_except""];\n	""26"" -> ""27""[label=""cfg_goto""];\n	""27"" -> ""42""[label=""cfg_goto""];\n	""28"" -> ""17""[label=""cfg_except""];\n	""28"" -> ""27""[label=""cfg_goto""];\n	""29"" -> ""17""[label=""cfg_except""];\n	""29"" -> ""27""[label=""cfg_goto""];\n	""3"" -> ""17""[label=""cfg_except""];\n	""3"" -> ""35""[label=""cfg_next""];\n	""30"" -> ""19""[label=""cfg_true""];\n	""30"" -> ""47""[label=""cfg_false""];\n	""31"" -> ""13""[label=""cfg_false""];\n	""31"" -> ""17""[label=""cfg_except""];\n	""31"" -> ""20""[label=""cfg_true""];\n	""32"" -> ""11""[label=""cfg_false""];\n	""32"" -> ""17""[label=""cfg_except""];\n	""32"" -> ""21""[label=""cfg_true""];\n	""33"" -> ""17""[label=""cfg_except""];\n	""33"" -> ""23""[label=""cfg_true""];\n	""33"" -> ""6""[label=""cfg_false""];\n	""34"" -> ""46""[label=""cfg_true""];\n	""34"" -> ""48""[label=""cfg_false""];\n	""35"" -> ""17""[label=""cfg_except""];\n	""35"" -> ""4""[label=""cfg_next""];\n	""36"" -> ""17""[label=""cfg_except""];\n	""36"" -> ""27""[label=""cfg_next""];\n	""37"" -> ""17""[label=""cfg_except""];\n	""37"" -> ""29""[label=""cfg_next""];\n	""38"" -> ""17""[label=""cfg_except""];\n	""38"" -> ""28""[label=""cfg_next""];\n	""39"" -> ""17""[label=""cfg_except""];\n	""39"" -> ""26""[label=""cfg_next""];\n	""4"" -> ""17""[label=""cfg_except""];\n	""4"" -> ""36""[label=""cfg_next""];\n	""40"" -> ""17""[label=""cfg_except""];\n	""40"" -> ""3""[label=""cfg_next""];\n	""43"" -> ""42""[label=""cfg_next""];\n	""44"" -> ""45""[label=""cfg_next""];\n	""45"" -> ""34""[label=""cfg_next""];\n	""46"" -> ""18""[label=""cfg_next""];\n	""47"" -> ""19""[label=""cfg_next""];\n	""48"" -> ""41""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""17""[label=""cfg_except""];\n	""6"" -> ""17""[label=""cfg_except""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""17""[label=""cfg_except""];\n	""7"" -> ""5""[label=""cfg_next""];\n	""8"" -> ""17""[label=""cfg_except""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""17""[label=""cfg_except""];\n	""9"" -> ""37""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.writeNumber(String),Method,No Comment,"@Override\npublic void writeNumber(String encodedValue) throws IOException, UnsupportedOperationException {\n    writeString(encodedValue);\n}",void writeNumber(java.lang.String),"digraph cfg_writeNumber {\n	""1"" [label=""encodedValue := @parameter0: java.lang.String""];\n	""2"" [label=""return""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeString(java.lang.String)>(encodedValue)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._verifyValueWrite(String),Method,No Comment,"@Override\nprotected final void _verifyValueWrite(String typeMsg) throws IOException {\n    int status = _writeContext.writeValue();\n    if (status == JsonWriteContext.STATUS_EXPECT_NAME) {\n        _reportError(""Can not "" + typeMsg + "", expecting field name"");\n    }\n}",void _verifyValueWrite(java.lang.String),"digraph cfg__verifyValueWrite {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""2"" [label=""$stack4 = new java.lang.StringBuilder""];\n	""3"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Can not \"")""];\n	""4"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(typeMsg)""];\n	""5"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"", expecting field name\"")""];\n	""6"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""if status != 5""];\n	""8"" [label=""return""];\n	""9"" [label=""specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>()""];\n	""10"" [label=""status = virtualinvoke $stack3.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>()""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""12"" [label=""typeMsg := @parameter0: java.lang.String""];\n	""13"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void _reportError(java.lang.String)>($stack8)""];\n	""1"" -> ""10""[label=""cfg_next""];\n	""10"" -> ""7""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""1""[label=""cfg_next""];\n	""13"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""9""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""13""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""7"" -> ""8""[label=""cfg_true""];\n	""9"" -> ""3""[label=""cfg_next""];\n}\n","protected , final "
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.flush(),Method,No Comment,"@Override\npublic void flush() throws IOException {\n    if (isEnabled(JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM)) {\n        try {\n            _xmlWriter.flush();\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, this);\n        }\n    }\n}",void flush(),"digraph cfg_flush {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>""];\n	""2"" [label=""$stack3 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>($stack2)""];\n	""3"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""4"" [label=""$stack5 := @caughtexception""];\n	""5"" [label=""e = $stack5""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""interfaceinvoke $stack4.<org.codehaus.stax2.XMLStreamWriter2: void flush()>()""];\n	""9"" [label=""return""];\n	""10"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(e, this)""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""10""[label=""cfg_next""];\n	""6"" -> ""9""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_false""];\n	""7"" -> ""9""[label=""cfg_true""];\n	""8"" -> ""4""[label=""cfg_except""];\n	""8"" -> ""6""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.close(),Method,No Comment,"@Override\npublic void close() throws IOException {\n    if (!isClosed()) {\n        // First: let's see that we still have buffers...\n        if (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\n            try {\n                while (true) {\n                    /* 28-May-2016, tatu: To work around incompatibility introduced by\n                         *     `jackson-core` 2.8 where return type of `getOutputContext()`\n                         *     changed, let's do direct access here.\n                         */\n                    //                    JsonStreamContext ctxt = getOutputContext();\n                    JsonStreamContext ctxt = _writeContext;\n                    if (ctxt.inArray()) {\n                        writeEndArray();\n                    } else if (ctxt.inObject()) {\n                        writeEndObject();\n                    } else {\n                        break;\n                    }\n                }\n            } catch (ArrayIndexOutOfBoundsException e) {\n                /* 29-Nov-2010, tatu: Stupid, stupid SJSXP doesn't do array checks, so we get\n                     *   hit by this as a collateral problem in some cases. Yuck.\n                     */\n                throw new JsonGenerationException(e, this);\n            }\n        }\n        try {\n            if (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n                _xmlWriter.closeCompletely();\n            } else {\n                _xmlWriter.close();\n            }\n        } catch (XMLStreamException e) {\n            StaxUtil.throwAsGenerationException(e, this);\n        }\n        super.close();\n    }\n}",void close(),"digraph cfg_close {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""2"" [label=""$stack11 = virtualinvoke ctxt.<com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>()""];\n	""3"" [label=""$stack12 = virtualinvoke ctxt.<com.fasterxml.jackson.core.JsonStreamContext: boolean inObject()>()""];\n	""4"" [label=""$stack13 := @caughtexception""];\n	""5"" [label=""$stack14 := @caughtexception""];\n	""6"" [label=""$stack15 = new com.fasterxml.jackson.core.JsonGenerationException""];\n	""7"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isClosed()>()""];\n	""8"" [label=""$stack3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>""];\n	""9"" [label=""$stack4 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>($stack3)""];\n	""10"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>""];\n	""11"" [label=""$stack6 = virtualinvoke $stack5.<com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>()""];\n	""12"" [label=""$stack7 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""13"" [label=""$stack8 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET>""];\n	""14"" [label=""$stack9 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>($stack8)""];\n	""15"" [label=""ctxt = $stack13""];\n	""16"" [label=""ctxt = $stack14""];\n	""17"" [label=""ctxt = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>""];\n	""18"" [label=""goto""];\n	""19"" [label=""goto""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""goto""];\n	""23"" [label=""if $stack11 == 0""];\n	""24"" [label=""if $stack12 == 0""];\n	""25"" [label=""if $stack2 != 0""];\n	""26"" [label=""if $stack4 == 0""];\n	""27"" [label=""if $stack6 != 0""];\n	""28"" [label=""if $stack9 == 0""];\n	""29"" [label=""interfaceinvoke $stack10.<org.codehaus.stax2.XMLStreamWriter2: void close()>()""];\n	""30"" [label=""interfaceinvoke $stack7.<org.codehaus.stax2.XMLStreamWriter2: void closeCompletely()>()""];\n	""31"" [label=""return""];\n	""32"" [label=""specialinvoke $stack15.<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.Throwable,com.fasterxml.jackson.core.JsonGenerator)>(ctxt, this)""];\n	""33"" [label=""specialinvoke this.<com.fasterxml.jackson.core.base.GeneratorBase: void close()>()""];\n	""34"" [label=""staticinvoke <com.fasterxml.jackson.dataformat.xml.util.StaxUtil: java.lang.Object throwAsGenerationException(javax.xml.stream.XMLStreamException,com.fasterxml.jackson.core.JsonGenerator)>(ctxt, this)""];\n	""35"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""36"" [label=""throw $stack15""];\n	""37"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeEndArray()>()""];\n	""38"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void writeEndObject()>()""];\n	""1"" -> ""29""[label=""cfg_next""];\n	""1"" -> ""4""[label=""cfg_except""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_except""];\n	""11"" -> ""27""[label=""cfg_next""];\n	""11"" -> ""4""[label=""cfg_except""];\n	""12"" -> ""30""[label=""cfg_next""];\n	""12"" -> ""4""[label=""cfg_except""];\n	""13"" -> ""14""[label=""cfg_next""];\n	""13"" -> ""4""[label=""cfg_except""];\n	""14"" -> ""28""[label=""cfg_next""];\n	""14"" -> ""4""[label=""cfg_except""];\n	""15"" -> ""34""[label=""cfg_next""];\n	""16"" -> ""6""[label=""cfg_next""];\n	""17"" -> ""2""[label=""cfg_next""];\n	""17"" -> ""5""[label=""cfg_except""];\n	""18"" -> ""19""[label=""cfg_goto""];\n	""18"" -> ""5""[label=""cfg_except""];\n	""19"" -> ""17""[label=""cfg_goto""];\n	""19"" -> ""5""[label=""cfg_except""];\n	""2"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_except""];\n	""20"" -> ""10""[label=""cfg_goto""];\n	""21"" -> ""22""[label=""cfg_goto""];\n	""21"" -> ""4""[label=""cfg_except""];\n	""22"" -> ""33""[label=""cfg_goto""];\n	""23"" -> ""3""[label=""cfg_true""];\n	""23"" -> ""37""[label=""cfg_false""];\n	""23"" -> ""5""[label=""cfg_except""];\n	""24"" -> ""20""[label=""cfg_true""];\n	""24"" -> ""38""[label=""cfg_false""];\n	""24"" -> ""5""[label=""cfg_except""];\n	""25"" -> ""31""[label=""cfg_true""];\n	""25"" -> ""8""[label=""cfg_false""];\n	""26"" -> ""10""[label=""cfg_true""];\n	""26"" -> ""17""[label=""cfg_false""];\n	""27"" -> ""12""[label=""cfg_true""];\n	""27"" -> ""13""[label=""cfg_false""];\n	""27"" -> ""4""[label=""cfg_except""];\n	""28"" -> ""1""[label=""cfg_true""];\n	""28"" -> ""12""[label=""cfg_false""];\n	""28"" -> ""4""[label=""cfg_except""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""29"" -> ""4""[label=""cfg_except""];\n	""3"" -> ""24""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_except""];\n	""30"" -> ""21""[label=""cfg_next""];\n	""30"" -> ""4""[label=""cfg_except""];\n	""32"" -> ""36""[label=""cfg_next""];\n	""33"" -> ""31""[label=""cfg_next""];\n	""34"" -> ""33""[label=""cfg_next""];\n	""35"" -> ""7""[label=""cfg_next""];\n	""37"" -> ""18""[label=""cfg_next""];\n	""37"" -> ""5""[label=""cfg_except""];\n	""38"" -> ""19""[label=""cfg_next""];\n	""38"" -> ""5""[label=""cfg_except""];\n	""4"" -> ""15""[label=""cfg_next""];\n	""5"" -> ""16""[label=""cfg_next""];\n	""6"" -> ""32""[label=""cfg_next""];\n	""7"" -> ""25""[label=""cfg_next""];\n	""8"" -> ""9""[label=""cfg_next""];\n	""9"" -> ""26""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._releaseBuffers(),Method,No Comment,"@Override\nprotected void _releaseBuffers() {\n    // Nothing to do here, as we have no buffers\n}",void _releaseBuffers(),"digraph cfg__releaseBuffers {\n	""1"" [label=""return""];\n	""2"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""2"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.checkNextIsUnwrapped(),Method,"* Method called to see if unwrapping is required; and if so,\n     * clear the flag (so further calls will return 'false' unless\n     * state is re-set)",protected boolean checkNextIsUnwrapped() {\n    if (_nextIsUnwrapped) {\n        _nextIsUnwrapped = false;\n        return true;\n    }\n    return false;\n},boolean checkNextIsUnwrapped(),"digraph cfg_checkNextIsUnwrapped {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsUnwrapped>""];\n	""2"" [label=""if $stack1 == 0""];\n	""3"" [label=""return 0""];\n	""4"" [label=""return 1""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsUnwrapped> = 0""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_true""];\n	""2"" -> ""6""[label=""cfg_false""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.handleMissingName(),Method,No Comment,"protected void handleMissingName() {\n    throw new IllegalStateException(""No element/attribute name specified when trying to output element"");\n}",void handleMissingName(),"digraph cfg_handleMissingName {\n	""1"" [label=""$stack1 = new java.lang.IllegalStateException""];\n	""2"" [label=""specialinvoke $stack1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(\""No element/attribute name specified when trying to output element\"")""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""4"" [label=""throw $stack1""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator._reportUnimplementedStax2(String),Method,* Method called in case access to native Stax2 API implementation is required.,"protected void _reportUnimplementedStax2(String missingMethod) throws IOException {\n    throw new JsonGenerationException(""Underlying Stax XMLStreamWriter (of type "" + _originalXmlWriter.getClass().getName() + "") does not implement Stax2 API natively and is missing method '"" + missingMethod + ""': this breaks functionality such as indentation that relies on it. "" + ""You need to upgrade to using compliant Stax implementation like Woodstox or Aalto"", this);\n}",void _reportUnimplementedStax2(java.lang.String),"digraph cfg__reportUnimplementedStax2 {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""\': this breaks functionality such as indentation that relies on it. You need to upgrade to using compliant Stax implementation like Woodstox or Aalto\"")""];\n	""2"" [label=""$stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""3"" [label=""$stack12 = new com.fasterxml.jackson.core.JsonGenerationException""];\n	""4"" [label=""$stack2 = new java.lang.StringBuilder""];\n	""5"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.stream.XMLStreamWriter _originalXmlWriter>""];\n	""6"" [label=""$stack4 = virtualinvoke $stack3.<java.lang.Object: java.lang.Class getClass()>()""];\n	""7"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>()""];\n	""8"" [label=""$stack6 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""Underlying Stax XMLStreamWriter (of type \"")""];\n	""9"" [label=""$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5)""];\n	""10"" [label=""$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"") does not implement Stax2 API natively and is missing method \'\"")""];\n	""11"" [label=""$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(missingMethod)""];\n	""12"" [label=""missingMethod := @parameter0: java.lang.String""];\n	""13"" [label=""specialinvoke $stack12.<com.fasterxml.jackson.core.JsonGenerationException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonGenerator)>($stack11, this)""];\n	""14"" [label=""specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>()""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""16"" [label=""throw $stack12""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""1""[label=""cfg_next""];\n	""12"" -> ""3""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""8""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""13""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""14""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""7"" -> ""9""[label=""cfg_next""];\n	""8"" -> ""5""[label=""cfg_next""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.<init>(IOContext,int,int,ObjectCodec,XMLStreamWriter,XmlNameProcessor)",Constructor,No Comment,"public ToXmlGenerator(IOContext ctxt, int stdFeatures, int xmlFeatures, ObjectCodec codec, XMLStreamWriter sw, XmlNameProcessor nameProcessor) {\n    super(stdFeatures, codec, ctxt);\n    _formatFeatures = xmlFeatures;\n    _streamWriteConstraints = ctxt.streamWriteConstraints();\n    _originalXmlWriter = sw;\n    _xmlWriter = Stax2WriterAdapter.wrapIfNecessary(sw);\n    _stax2Emulation = (_xmlWriter != sw);\n    _nameProcessor = nameProcessor;\n    _xmlPrettyPrinter = (_cfgPrettyPrinter instanceof XmlPrettyPrinter) ? (XmlPrettyPrinter) _cfgPrettyPrinter : null;\n}","void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.core.ObjectCodec,javax.xml.stream.XMLStreamWriter,com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)","digraph cfg_init {\n	""1"" [label=""$stack10 = staticinvoke <org.codehaus.stax2.ri.Stax2WriterAdapter: org.codehaus.stax2.XMLStreamWriter2 wrapIfNecessary(javax.xml.stream.XMLStreamWriter)>(sw)""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""4"" [label=""$stack13 = $stack12 instanceof com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>""];\n	""6"" [label=""$stack15 = (com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter) $stack14""];\n	""7"" [label=""$stack15 = null""];\n	""8"" [label=""$stack16 = 0""];\n	""9"" [label=""$stack16 = 1""];\n	""10"" [label=""$stack7 = new java.util.LinkedList""];\n	""11"" [label=""$stack8 = new com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName""];\n	""12"" [label=""$stack9 = virtualinvoke ctxt.<com.fasterxml.jackson.core.io.IOContext: com.fasterxml.jackson.core.StreamWriteConstraints streamWriteConstraints()>()""];\n	""13"" [label=""codec := @parameter3: com.fasterxml.jackson.core.ObjectCodec""];\n	""14"" [label=""ctxt := @parameter0: com.fasterxml.jackson.core.io.IOContext""];\n	""15"" [label=""goto""];\n	""16"" [label=""goto""];\n	""17"" [label=""if $stack11 == sw""];\n	""18"" [label=""if $stack13 == 0""];\n	""19"" [label=""nameProcessor := @parameter5: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""20"" [label=""return""];\n	""21"" [label=""specialinvoke $stack7.<java.util.LinkedList: void <init>()>()""];\n	""22"" [label=""specialinvoke $stack8.<com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName: void <init>()>()""];\n	""23"" [label=""specialinvoke this.<com.fasterxml.jackson.core.base.GeneratorBase: void <init>(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.io.IOContext)>(stdFeatures, codec, ctxt)""];\n	""24"" [label=""stdFeatures := @parameter1: int""];\n	""25"" [label=""sw := @parameter4: javax.xml.stream.XMLStreamWriter""];\n	""26"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""27"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsAttribute> = 0""];\n	""28"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsCData> = 0""];\n	""29"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _nextIsUnwrapped> = 0""];\n	""30"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: boolean _stax2Emulation> = $stack16""];\n	""31"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.core.StreamWriteConstraints _streamWriteConstraints> = $stack9""];\n	""32"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor _nameProcessor> = nameProcessor""];\n	""33"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor$XmlName _nameToEncode> = $stack8""];\n	""34"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: com.fasterxml.jackson.dataformat.xml.XmlPrettyPrinter _xmlPrettyPrinter> = $stack15""];\n	""35"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: int _formatFeatures> = xmlFeatures""];\n	""36"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: java.util.LinkedList _elementNameStack> = $stack7""];\n	""37"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.namespace.QName _nextName> = null""];\n	""38"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: javax.xml.stream.XMLStreamWriter _originalXmlWriter> = sw""];\n	""39"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: org.codehaus.stax2.XMLStreamWriter2 _xmlWriter> = $stack10""];\n	""40"" [label=""xmlFeatures := @parameter2: int""];\n	""1"" -> ""39""[label=""cfg_next""];\n	""10"" -> ""21""[label=""cfg_next""];\n	""11"" -> ""22""[label=""cfg_next""];\n	""12"" -> ""31""[label=""cfg_next""];\n	""13"" -> ""25""[label=""cfg_next""];\n	""14"" -> ""24""[label=""cfg_next""];\n	""15"" -> ""30""[label=""cfg_goto""];\n	""16"" -> ""34""[label=""cfg_goto""];\n	""17"" -> ""8""[label=""cfg_true""];\n	""17"" -> ""9""[label=""cfg_false""];\n	""18"" -> ""5""[label=""cfg_false""];\n	""18"" -> ""7""[label=""cfg_true""];\n	""19"" -> ""23""[label=""cfg_next""];\n	""2"" -> ""17""[label=""cfg_next""];\n	""21"" -> ""36""[label=""cfg_next""];\n	""22"" -> ""33""[label=""cfg_next""];\n	""23"" -> ""37""[label=""cfg_next""];\n	""24"" -> ""40""[label=""cfg_next""];\n	""25"" -> ""19""[label=""cfg_next""];\n	""26"" -> ""14""[label=""cfg_next""];\n	""27"" -> ""29""[label=""cfg_next""];\n	""28"" -> ""10""[label=""cfg_next""];\n	""29"" -> ""28""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""30"" -> ""32""[label=""cfg_next""];\n	""31"" -> ""38""[label=""cfg_next""];\n	""32"" -> ""3""[label=""cfg_next""];\n	""33"" -> ""35""[label=""cfg_next""];\n	""34"" -> ""20""[label=""cfg_next""];\n	""35"" -> ""12""[label=""cfg_next""];\n	""36"" -> ""11""[label=""cfg_next""];\n	""37"" -> ""27""[label=""cfg_next""];\n	""38"" -> ""1""[label=""cfg_next""];\n	""39"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""18""[label=""cfg_next""];\n	""40"" -> ""13""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""16""[label=""cfg_next""];\n	""7"" -> ""34""[label=""cfg_next""];\n	""8"" -> ""30""[label=""cfg_next""];\n	""9"" -> ""15""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.collectDefaults(),Method,* Method that calculates bit set (flags) of all features that\n         * are enabled by default.,public static int collectDefaults() {\n    int flags = 0;\n    for (Feature f : values()) {\n        if (f.enabledByDefault()) {\n            flags |= f.getMask();\n        }\n    }\n    return flags;\n},int collectDefaults(),"digraph cfg_collectDefaults {\n	""1"" [label=""$stack5 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: boolean enabledByDefault()>()""];\n	""2"" [label=""$stack6 = virtualinvoke f.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: int getMask()>()""];\n	""3"" [label=""f = l1[l3]""];\n	""4"" [label=""flags = 0""];\n	""5"" [label=""flags = flags | $stack6""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack5 == 0""];\n	""8"" [label=""if l3 >= l2""];\n	""9"" [label=""l1 = staticinvoke <com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature[] values()>()""];\n	""10"" [label=""l2 = lengthof l1""];\n	""11"" [label=""l3 = 0""];\n	""12"" [label=""l3 = l3 + 1""];\n	""13"" [label=""return flags""];\n	""1"" -> ""7""[label=""cfg_next""];\n	""10"" -> ""11""[label=""cfg_next""];\n	""11"" -> ""8""[label=""cfg_next""];\n	""12"" -> ""6""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""9""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_goto""];\n	""7"" -> ""12""[label=""cfg_true""];\n	""7"" -> ""2""[label=""cfg_false""];\n	""8"" -> ""13""[label=""cfg_true""];\n	""8"" -> ""3""[label=""cfg_false""];\n	""9"" -> ""10""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.enabledByDefault(),Method,No Comment,@Override\npublic boolean enabledByDefault() {\n    return _defaultState;\n},boolean enabledByDefault(),"digraph cfg_enabledByDefault {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: boolean _defaultState>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.getMask(),Method,No Comment,@Override\npublic int getMask() {\n    return _mask;\n},int getMask(),"digraph cfg_getMask {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: int _mask>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature.enabledIn(int),Method,No Comment,@Override\npublic boolean enabledIn(int flags) {\n    return (flags & getMask()) != 0;\n},boolean enabledIn(int),"digraph cfg_enabledIn {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature: int getMask()>()""];\n	""2"" [label=""$stack3 = flags & $stack2""];\n	""3"" [label=""$stack4 = 0""];\n	""4"" [label=""$stack4 = 1""];\n	""5"" [label=""flags := @parameter0: int""];\n	""6"" [label=""goto""];\n	""7"" [label=""if $stack3 == 0""];\n	""8"" [label=""return $stack4""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""8""[label=""cfg_goto""];\n	""7"" -> ""3""[label=""cfg_true""];\n	""7"" -> ""4""[label=""cfg_false""];\n	""9"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter._qname(PropertyName),Method,No Comment,"private QName _qname(PropertyName n) {\n    String ns = n.getNamespace();\n    if (ns == null) {\n        ns = """";\n    }\n    return new QName(ns, n.getSimpleName());\n}",javax.xml.namespace.QName _qname(com.fasterxml.jackson.databind.PropertyName),"digraph cfg__qname {\n	""1"" [label=""$stack3 = virtualinvoke n.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>()""];\n	""2"" [label=""$stack4 = new javax.xml.namespace.QName""];\n	""3"" [label=""if ns != null""];\n	""4"" [label=""n := @parameter0: com.fasterxml.jackson.databind.PropertyName""];\n	""5"" [label=""ns = \""\""""];\n	""6"" [label=""ns = virtualinvoke n.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getNamespace()>()""];\n	""7"" [label=""return $stack4""];\n	""8"" [label=""specialinvoke $stack4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>(ns, $stack3)""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_true""];\n	""3"" -> ""5""[label=""cfg_false""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_next""];\n}\n",private 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter.serializeAsField(Object,JsonGenerator,SerializerProvider)",Method,* Overridden version so that we can wrap output within wrapper element if\n     * and as necessary.,"@Override\npublic void serializeAsField(Object bean, JsonGenerator jgen, SerializerProvider prov) throws Exception {\n    Object value = get(bean);\n    /* 13-Feb-2014, tatu: As per [#103], default handling does not really\n         *   work here. Rather, we need just a wrapping and should NOT call\n         *   null handler, as it does not know what to do...\n         *   \n         *   Question, however, is what should it be serialized as. We have two main\n         *   choices; equivalent empty List, and ""nothing"" (missing). Let's start with\n         *   empty List? But producing missing entry is non-trivial...\n         */\n    if (value == null) {\n        // if (_nullSerializer != null) { ... }\n        // For Empty List, we'd do this:\n        /*\n            @SuppressWarnings(""resource"")\n            final ToXmlGenerator xmlGen = (jgen instanceof ToXmlGenerator) ? (ToXmlGenerator) jgen : null;\n            if (xmlGen != null) {\n                xmlGen.startWrappedValue(_wrapperQName, _wrappedQName);\n                xmlGen.finishWrappedValue(_wrapperQName, _wrappedQName);\n            }\n            */\n        // but for missing thing, well, just output nothing\n        return;\n    }\n    // then find serializer to use\n    JsonSerializer<Object> ser = _serializer;\n    if (ser == null) {\n        Class<?> cls = value.getClass();\n        PropertySerializerMap map = _dynamicSerializers;\n        ser = map.serializerFor(cls);\n        if (ser == null) {\n            ser = _findAndAddDynamic(map, cls, prov);\n        }\n    }\n    // and then see if we must suppress certain values (default, empty)\n    if (_suppressableValue != null) {\n        if (MARKER_FOR_EMPTY == _suppressableValue) {\n            if (ser.isEmpty(prov, value)) {\n                return;\n            }\n        } else if (_suppressableValue.equals(value)) {\n            return;\n        }\n    }\n    // For non-nulls: simple check for direct cycles\n    if (value == bean) {\n        // NOTE: method signature here change 2.3->2.4\n        if (_handleSelfReference(bean, jgen, prov, ser)) {\n            return;\n        }\n    }\n    final ToXmlGenerator xmlGen = (jgen instanceof ToXmlGenerator) ? (ToXmlGenerator) jgen : null;\n    // Ok then; addition we want to do is to add wrapper element, and that's what happens here\n    // 19-Aug-2013, tatu: ... except for those nasty 'convertValue()' calls...\n    if (xmlGen != null) {\n        xmlGen.startWrappedValue(_wrapperQName, _wrappedQName);\n    }\n    jgen.writeFieldName(_name);\n    if (_typeSerializer == null) {\n        ser.serialize(value, jgen, prov);\n    } else {\n        ser.serializeWithType(value, jgen, prov, _typeSerializer);\n    }\n    if (xmlGen != null) {\n        xmlGen.finishWrappedValue(_wrapperQName, _wrappedQName);\n    }\n}","void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)","digraph cfg_serializeAsField {\n	""1"" [label=""$stack10 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: com.fasterxml.jackson.core.io.SerializedString _name>""];\n	""2"" [label=""$stack11 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>""];\n	""3"" [label=""$stack12 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>""];\n	""4"" [label=""$stack13 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _wrappedQName>""];\n	""5"" [label=""$stack14 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _wrapperQName>""];\n	""6"" [label=""$stack15 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _wrappedQName>""];\n	""7"" [label=""$stack16 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _wrapperQName>""];\n	""8"" [label=""$stack17 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: boolean _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>(bean, jgen, prov, ser)""];\n	""9"" [label=""$stack18 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: java.lang.Object _suppressableValue>""];\n	""10"" [label=""$stack19 = <com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>""];\n	""11"" [label=""$stack20 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: java.lang.Object _suppressableValue>""];\n	""12"" [label=""$stack21 = virtualinvoke $stack20.<java.lang.Object: boolean equals(java.lang.Object)>(value)""];\n	""13"" [label=""$stack22 = virtualinvoke ser.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(prov, value)""];\n	""14"" [label=""$stack8 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: java.lang.Object _suppressableValue>""];\n	""15"" [label=""$stack9 = jgen instanceof com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator""];\n	""16"" [label=""bean := @parameter0: java.lang.Object""];\n	""17"" [label=""cls = (com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator) jgen""];\n	""18"" [label=""cls = null""];\n	""19"" [label=""cls = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>()""];\n	""20"" [label=""goto""];\n	""21"" [label=""goto""];\n	""22"" [label=""if $stack11 != null""];\n	""23"" [label=""if $stack17 == 0""];\n	""24"" [label=""if $stack19 != $stack18""];\n	""25"" [label=""if $stack21 == 0""];\n	""26"" [label=""if $stack22 == 0""];\n	""27"" [label=""if $stack8 == null""];\n	""28"" [label=""if $stack9 == 0""];\n	""29"" [label=""if cls == null""];\n	""30"" [label=""if cls == null""];\n	""31"" [label=""if ser != null""];\n	""32"" [label=""if ser != null""];\n	""33"" [label=""if value != bean""];\n	""34"" [label=""if value != null""];\n	""35"" [label=""jgen := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""36"" [label=""map = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>""];\n	""37"" [label=""prov := @parameter2: com.fasterxml.jackson.databind.SerializerProvider""];\n	""38"" [label=""return""];\n	""39"" [label=""return""];\n	""40"" [label=""return""];\n	""41"" [label=""return""];\n	""42"" [label=""return""];\n	""43"" [label=""ser = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer>""];\n	""44"" [label=""ser = virtualinvoke map.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(cls)""];\n	""45"" [label=""ser = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>(map, cls, prov)""];\n	""46"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter""];\n	""47"" [label=""value = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: java.lang.Object get(java.lang.Object)>(bean)""];\n	""48"" [label=""virtualinvoke cls.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void finishWrappedValue(javax.xml.namespace.QName,javax.xml.namespace.QName)>($stack14, $stack13)""];\n	""49"" [label=""virtualinvoke cls.<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator: void startWrappedValue(javax.xml.namespace.QName,javax.xml.namespace.QName)>($stack16, $stack15)""];\n	""50"" [label=""virtualinvoke jgen.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(com.fasterxml.jackson.core.SerializableString)>($stack10)""];\n	""51"" [label=""virtualinvoke ser.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(value, jgen, prov)""];\n	""52"" [label=""virtualinvoke ser.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(value, jgen, prov, $stack12)""];\n	""1"" -> ""50""[label=""cfg_next""];\n	""10"" -> ""9""[label=""cfg_next""];\n	""11"" -> ""12""[label=""cfg_next""];\n	""12"" -> ""25""[label=""cfg_next""];\n	""13"" -> ""26""[label=""cfg_next""];\n	""14"" -> ""27""[label=""cfg_next""];\n	""15"" -> ""28""[label=""cfg_next""];\n	""16"" -> ""35""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""29""[label=""cfg_next""];\n	""19"" -> ""36""[label=""cfg_next""];\n	""2"" -> ""22""[label=""cfg_next""];\n	""20"" -> ""29""[label=""cfg_goto""];\n	""21"" -> ""30""[label=""cfg_goto""];\n	""22"" -> ""3""[label=""cfg_true""];\n	""22"" -> ""51""[label=""cfg_false""];\n	""23"" -> ""15""[label=""cfg_true""];\n	""23"" -> ""41""[label=""cfg_false""];\n	""24"" -> ""11""[label=""cfg_true""];\n	""24"" -> ""13""[label=""cfg_false""];\n	""25"" -> ""33""[label=""cfg_true""];\n	""25"" -> ""40""[label=""cfg_false""];\n	""26"" -> ""33""[label=""cfg_true""];\n	""26"" -> ""39""[label=""cfg_false""];\n	""27"" -> ""10""[label=""cfg_false""];\n	""27"" -> ""33""[label=""cfg_true""];\n	""28"" -> ""17""[label=""cfg_false""];\n	""28"" -> ""18""[label=""cfg_true""];\n	""29"" -> ""1""[label=""cfg_true""];\n	""29"" -> ""7""[label=""cfg_false""];\n	""3"" -> ""52""[label=""cfg_next""];\n	""30"" -> ""42""[label=""cfg_true""];\n	""30"" -> ""5""[label=""cfg_false""];\n	""31"" -> ""14""[label=""cfg_true""];\n	""31"" -> ""19""[label=""cfg_false""];\n	""32"" -> ""14""[label=""cfg_true""];\n	""32"" -> ""45""[label=""cfg_false""];\n	""33"" -> ""15""[label=""cfg_true""];\n	""33"" -> ""8""[label=""cfg_false""];\n	""34"" -> ""38""[label=""cfg_false""];\n	""34"" -> ""43""[label=""cfg_true""];\n	""35"" -> ""37""[label=""cfg_next""];\n	""36"" -> ""44""[label=""cfg_next""];\n	""37"" -> ""47""[label=""cfg_next""];\n	""4"" -> ""48""[label=""cfg_next""];\n	""43"" -> ""31""[label=""cfg_next""];\n	""44"" -> ""32""[label=""cfg_next""];\n	""45"" -> ""14""[label=""cfg_next""];\n	""46"" -> ""16""[label=""cfg_next""];\n	""47"" -> ""34""[label=""cfg_next""];\n	""48"" -> ""42""[label=""cfg_next""];\n	""49"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""50"" -> ""2""[label=""cfg_next""];\n	""51"" -> ""21""[label=""cfg_next""];\n	""52"" -> ""30""[label=""cfg_next""];\n	""6"" -> ""49""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""23""[label=""cfg_next""];\n	""9"" -> ""24""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter.<init>(BeanPropertyWriter,PropertyName,PropertyName)",Constructor,No Comment,"public XmlBeanPropertyWriter(BeanPropertyWriter wrapped, PropertyName wrapperName, PropertyName wrappedName) {\n    this(wrapped, wrapperName, wrappedName, null);\n}","void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName)","digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JsonSerializer)>(wrapped, wrapperName, wrappedName, null)""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter""];\n	""4"" [label=""wrapped := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter""];\n	""5"" [label=""wrappedName := @parameter2: com.fasterxml.jackson.databind.PropertyName""];\n	""6"" [label=""wrapperName := @parameter1: com.fasterxml.jackson.databind.PropertyName""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter.<init>(BeanPropertyWriter,PropertyName,PropertyName,JsonSerializer)",Constructor,No Comment,"public XmlBeanPropertyWriter(BeanPropertyWriter wrapped, PropertyName wrapperName, PropertyName wrappedName, JsonSerializer<Object> serializer) {\n    super(wrapped);\n    _wrapperQName = _qname(wrapperName);\n    _wrappedQName = _qname(wrappedName);\n    if (serializer != null) {\n        assignSerializer(serializer);\n    }\n}","void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JsonSerializer)","digraph cfg_init {\n	""1"" [label=""$stack5 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _qname(com.fasterxml.jackson.databind.PropertyName)>(wrapperName)""];\n	""2"" [label=""$stack6 = specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _qname(com.fasterxml.jackson.databind.PropertyName)>(wrappedName)""];\n	""3"" [label=""if serializer == null""];\n	""4"" [label=""return""];\n	""5"" [label=""serializer := @parameter3: com.fasterxml.jackson.databind.JsonSerializer""];\n	""6"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(wrapped)""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter""];\n	""8"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _wrappedQName> = $stack6""];\n	""9"" [label=""this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: javax.xml.namespace.QName _wrapperQName> = $stack5""];\n	""10"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanPropertyWriter: void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)>(serializer)""];\n	""11"" [label=""wrapped := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter""];\n	""12"" [label=""wrappedName := @parameter2: com.fasterxml.jackson.databind.PropertyName""];\n	""13"" [label=""wrapperName := @parameter1: com.fasterxml.jackson.databind.PropertyName""];\n	""1"" -> ""9""[label=""cfg_next""];\n	""10"" -> ""4""[label=""cfg_next""];\n	""11"" -> ""13""[label=""cfg_next""];\n	""12"" -> ""5""[label=""cfg_next""];\n	""13"" -> ""12""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""10""[label=""cfg_false""];\n	""3"" -> ""4""[label=""cfg_true""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n	""7"" -> ""11""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.unwrappingSerializer(NameTransformer),Method,No Comment,"@Override\npublic JsonSerializer<Object> unwrappingSerializer(NameTransformer unwrapper) {\n    return new UnwrappingXmlBeanSerializer(this, unwrapper);\n}",com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer),"digraph cfg_unwrappingSerializer {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer""];\n	""2"" [label=""return $stack2""];\n	""3"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.ser.UnwrappingXmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>(this, unwrapper)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""5"" [label=""unwrapper := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withObjectIdWriter(ObjectIdWriter),Method,No Comment,"@Override\npublic BeanSerializerBase withObjectIdWriter(ObjectIdWriter objectIdWriter) {\n    return new XmlBeanSerializer(this, objectIdWriter, _propertyFilterId);\n}",com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter),"digraph cfg_withObjectIdWriter {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: java.lang.Object _propertyFilterId>""];\n	""2"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""3"" [label=""objectIdWriter := @parameter0: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(this, objectIdWriter, $stack2)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withFilterId(Object),Method,No Comment,"@Override\npublic BeanSerializerBase withFilterId(Object filterId) {\n    return new XmlBeanSerializer(this, _objectIdWriter, filterId);\n}",com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object),"digraph cfg_withFilterId {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>""];\n	""2"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""3"" [label=""filterId := @parameter0: java.lang.Object""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(this, $stack2, filterId)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withByNameInclusion(Set,Set)",Method,No Comment,"// since 2.12\n@Override\nprotected BeanSerializerBase withByNameInclusion(Set<String> toIgnore, Set<String> toInclude) {\n    return new XmlBeanSerializer(this, toIgnore, toInclude);\n}","com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set,java.util.Set)","digraph cfg_withByNameInclusion {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""2"" [label=""return $stack3""];\n	""3"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,java.util.Set,java.util.Set)>(this, toIgnore, toInclude)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""5"" [label=""toIgnore := @parameter0: java.util.Set""];\n	""6"" [label=""toInclude := @parameter1: java.util.Set""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.withProperties(BeanPropertyWriter[],BeanPropertyWriter[])",Method,No Comment,"// since 2.11.1\n@Override\nprotected BeanSerializerBase withProperties(BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties) {\n    return new XmlBeanSerializer(this, properties, filteredProperties);\n}","com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])","digraph cfg_withProperties {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""2"" [label=""filteredProperties := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""3"" [label=""properties := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(this, properties, filteredProperties)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.asArraySerializer(),Method,"* Implementation has to check whether as-array serialization\n     * is possible reliably; if (and only if) so, will construct\n     * a {@link BeanAsArraySerializer}, otherwise will return this\n     * serializer as is.","@Override\nprotected BeanSerializerBase asArraySerializer() {\n    /* Can not:\n         * \n         * - have Object Id (may be allowed in future)\n         * - have any getter\n         */\n    if ((_objectIdWriter == null) && (_propertyFilterId == null)) {\n        return new BeanAsArraySerializer(this);\n    }\n    // already is one, so:\n    return this;\n}",com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer(),"digraph cfg_asArraySerializer {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>""];\n	""2"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: java.lang.Object _propertyFilterId>""];\n	""3"" [label=""$stack3 = new com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer""];\n	""4"" [label=""if $stack1 != null""];\n	""5"" [label=""if $stack2 != null""];\n	""6"" [label=""return $stack3""];\n	""7"" [label=""return this""];\n	""8"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)>(this)""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""5""[label=""cfg_next""];\n	""3"" -> ""8""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_false""];\n	""4"" -> ""7""[label=""cfg_true""];\n	""5"" -> ""3""[label=""cfg_false""];\n	""5"" -> ""7""[label=""cfg_true""];\n	""8"" -> ""6""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",protected 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.serialize(Object,JsonGenerator,SerializerProvider)",Method,* Main serialization method that will delegate actual output to configured\n     * {@link BeanPropertyWriter} instances.,"@Override\npublic void serialize(Object bean, JsonGenerator g, SerializerProvider provider) throws IOException {\n    if (_objectIdWriter != null) {\n        _serializeWithObjectId(bean, g, provider, true);\n        return;\n    }\n    g.writeStartObject();\n    if (_propertyFilterId != null) {\n        serializeFieldsFiltered(bean, g, provider);\n    } else {\n        serializeFields(bean, g, provider);\n    }\n    g.writeEndObject();\n}","void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)","digraph cfg_serialize {\n	""1"" [label=""$stack4 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>""];\n	""2"" [label=""$stack5 = this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: java.lang.Object _propertyFilterId>""];\n	""3"" [label=""bean := @parameter0: java.lang.Object""];\n	""4"" [label=""g := @parameter1: com.fasterxml.jackson.core.JsonGenerator""];\n	""5"" [label=""goto""];\n	""6"" [label=""if $stack4 == null""];\n	""7"" [label=""if $stack5 == null""];\n	""8"" [label=""provider := @parameter2: com.fasterxml.jackson.databind.SerializerProvider""];\n	""9"" [label=""return""];\n	""10"" [label=""return""];\n	""11"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""12"" [label=""virtualinvoke g.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>()""];\n	""13"" [label=""virtualinvoke g.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>()""];\n	""14"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)>(bean, g, provider, 1)""];\n	""15"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, g, provider)""];\n	""16"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(bean, g, provider)""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""11"" -> ""3""[label=""cfg_next""];\n	""12"" -> ""10""[label=""cfg_next""];\n	""13"" -> ""2""[label=""cfg_next""];\n	""14"" -> ""9""[label=""cfg_next""];\n	""15"" -> ""12""[label=""cfg_next""];\n	""16"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""7""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""5"" -> ""12""[label=""cfg_goto""];\n	""6"" -> ""13""[label=""cfg_true""];\n	""6"" -> ""14""[label=""cfg_false""];\n	""7"" -> ""15""[label=""cfg_true""];\n	""7"" -> ""16""[label=""cfg_false""];\n	""8"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.toString(),Method,No Comment,"@Override\npublic String toString() {\n    return ""XmlBeanSerializer for "" + handledType().getName();\n}",java.lang.String toString(),"digraph cfg_toString {\n	""1"" [label=""$stack1 = new java.lang.StringBuilder""];\n	""2"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer: java.lang.Class handledType()>()""];\n	""3"" [label=""$stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.String getName()>()""];\n	""4"" [label=""$stack4 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\""XmlBeanSerializer for \"")""];\n	""5"" [label=""$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3)""];\n	""6"" [label=""$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>()""];\n	""7"" [label=""return $stack6""];\n	""8"" [label=""specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>()""];\n	""9"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""8""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""7""[label=""cfg_next""];\n	""8"" -> ""4""[label=""cfg_next""];\n	""9"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(BeanSerializerBase),Constructor,/**********************************************************\n    /* Life-cycle: constructors\n    /**********************************************************,public XmlBeanSerializer(BeanSerializerBase src) {\n    super(src);\n},void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase),"digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase)>(src)""];\n	""3"" [label=""src := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,ObjectIdWriter,Object)",Constructor,No Comment,"public XmlBeanSerializer(XmlBeanSerializerBase src, ObjectIdWriter objectIdWriter, Object filterId) {\n    super(src, objectIdWriter, filterId);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)","digraph cfg_init {\n	""1"" [label=""filterId := @parameter2: java.lang.Object""];\n	""2"" [label=""objectIdWriter := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(src, objectIdWriter, filterId)""];\n	""5"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,ObjectIdWriter)",Constructor,No Comment,"public XmlBeanSerializer(XmlBeanSerializerBase src, ObjectIdWriter objectIdWriter) {\n    super(src, objectIdWriter);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)","digraph cfg_init {\n	""1"" [label=""objectIdWriter := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(src, objectIdWriter)""];\n	""4"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,Set,Set)",Constructor,No Comment,"public XmlBeanSerializer(XmlBeanSerializerBase src, Set<String> toIgnore, Set<String> toInclude) {\n    super(src, toIgnore, toInclude);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,java.util.Set,java.util.Set)","digraph cfg_init {\n	""1"" [label=""return""];\n	""2"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,java.util.Set,java.util.Set)>(src, toIgnore, toInclude)""];\n	""3"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""5"" [label=""toIgnore := @parameter1: java.util.Set""];\n	""6"" [label=""toInclude := @parameter2: java.util.Set""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer.<init>(XmlBeanSerializerBase,BeanPropertyWriter[],BeanPropertyWriter[])",Constructor,No Comment,"protected XmlBeanSerializer(XmlBeanSerializerBase src, BeanPropertyWriter[] properties, BeanPropertyWriter[] filteredProperties) {\n    super(src, properties, filteredProperties);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])","digraph cfg_init {\n	""1"" [label=""filteredProperties := @parameter2: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""2"" [label=""properties := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase: void <init>(com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(src, properties, filteredProperties)""];\n	""5"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""2""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlMapper.copy(),Method,No Comment,@Override\npublic XmlMapper copy() {\n    _checkInvalidCopy(XmlMapper.class);\n    return new XmlMapper(this);\n},com.fasterxml.jackson.dataformat.xml.XmlMapper copy(),"digraph cfg_copy {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>(com.fasterxml.jackson.dataformat.xml.XmlMapper)>(this)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""5"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void _checkInvalidCopy(java.lang.Class)>(class \""Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;\"")""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.xmlBuilder(),Method,* @since 2.10,public static XmlMapper.Builder xmlBuilder() {\n    return new XmlMapper.Builder(new XmlMapper());\n},com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder xmlBuilder(),"digraph cfg_xmlBuilder {\n	""1"" [label=""$stack0 = new com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""2"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder""];\n	""3"" [label=""return $stack1""];\n	""4"" [label=""specialinvoke $stack0.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>()>()""];\n	""5"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder: void <init>(com.fasterxml.jackson.dataformat.xml.XmlMapper)>($stack0)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlMapper.builder(),Method,* @since 2.10,public static XmlMapper.Builder builder() {\n    return new XmlMapper.Builder(new XmlMapper());\n},com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder builder(),"digraph cfg_builder {\n	""1"" [label=""$stack0 = new com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""2"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder""];\n	""3"" [label=""return $stack1""];\n	""4"" [label=""specialinvoke $stack0.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>()>()""];\n	""5"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder: void <init>(com.fasterxml.jackson.dataformat.xml.XmlMapper)>($stack0)""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlMapper.builder(XmlFactory),Method,* @since 2.10,public static XmlMapper.Builder builder(XmlFactory streamFactory) {\n    return new XmlMapper.Builder(new XmlMapper(streamFactory));\n},com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder builder(com.fasterxml.jackson.dataformat.xml.XmlFactory),"digraph cfg_builder {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""2"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory)>(streamFactory)""];\n	""5"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder: void <init>(com.fasterxml.jackson.dataformat.xml.XmlMapper)>($stack1)""];\n	""6"" [label=""streamFactory := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n","public , static "
com.fasterxml.jackson.dataformat.xml.XmlMapper.version(),Method,No Comment,@Override\npublic Version version() {\n    return PackageVersion.VERSION;\n},com.fasterxml.jackson.core.Version version(),"digraph cfg_version {\n	""1"" [label=""$stack1 = <com.fasterxml.jackson.dataformat.xml.PackageVersion: com.fasterxml.jackson.core.Version VERSION>""];\n	""2"" [label=""return $stack1""];\n	""3"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlMapper._constructDefaultTypeResolverBuilder(DefaultTyping,PolymorphicTypeValidator)",Method,No Comment,"// since 2.10\n@Override\nprotected TypeResolverBuilder<?> _constructDefaultTypeResolverBuilder(DefaultTyping applicability, PolymorphicTypeValidator ptv) {\n    return new DefaultingXmlTypeResolverBuilder(applicability, ptv);\n}","com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)","digraph cfg__constructDefaultTypeResolverBuilder {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder""];\n	""2"" [label=""applicability := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping""];\n	""3"" [label=""ptv := @parameter1: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.DefaultingXmlTypeResolverBuilder: void <init>(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(applicability, ptv)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlMapper.setXMLTextElementName(String),Method,"* Method called by {@link JacksonXmlModule} to pass configuration\n     * information to {@link XmlFactory}, during registration; NOT\n     * exposed as public method since configuration should be done\n     * via {@link JacksonXmlModule}.\n     * \n     * @since 2.1\n     *\n     * @deprecated Since 2.10 use {@link Builder#nameForTextElement(String)} instead",@Deprecated\nprotected void setXMLTextElementName(String name) {\n    getFactory().setXMLTextElementName(name);\n},void setXMLTextElementName(java.lang.String),"digraph cfg_setXMLTextElementName {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>()""];\n	""2"" [label=""name := @parameter0: java.lang.String""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""5"" [label=""virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void setXMLTextElementName(java.lang.String)>(name)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlMapper.setDefaultUseWrapper(boolean),Method,* Since 2.7\n     * \n     * @deprecated Since 2.10 use {@link Builder#defaultUseWrapper(boolean)} instead,"@Deprecated\npublic XmlMapper setDefaultUseWrapper(boolean state) {\n    // ser and deser configs should usually have the same introspector, so:\n    AnnotationIntrospector ai0 = getDeserializationConfig().getAnnotationIntrospector();\n    for (AnnotationIntrospector ai : ai0.allIntrospectors()) {\n        if (ai instanceof JacksonXmlAnnotationIntrospector) {\n            ((JacksonXmlAnnotationIntrospector) ai).setDefaultUseWrapper(state);\n        }\n    }\n    return this;\n}",com.fasterxml.jackson.dataformat.xml.XmlMapper setDefaultUseWrapper(boolean),"digraph cfg_setDefaultUseWrapper {\n	""1"" [label=""$stack10 = (com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector) ai""];\n	""2"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>()""];\n	""3"" [label=""$stack6 = virtualinvoke ai0.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.Collection allIntrospectors()>()""];\n	""4"" [label=""$stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>()""];\n	""5"" [label=""$stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>()""];\n	""6"" [label=""$stack9 = ai instanceof com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector""];\n	""7"" [label=""ai = (com.fasterxml.jackson.databind.AnnotationIntrospector) $stack8""];\n	""8"" [label=""ai0 = virtualinvoke $stack5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>()""];\n	""9"" [label=""goto""];\n	""10"" [label=""if $stack7 == 0""];\n	""11"" [label=""if $stack9 == 0""];\n	""12"" [label=""l3 = interfaceinvoke $stack6.<java.util.Collection: java.util.Iterator iterator()>()""];\n	""13"" [label=""return this""];\n	""14"" [label=""state := @parameter0: boolean""];\n	""15"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""16"" [label=""virtualinvoke $stack10.<com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector: void setDefaultUseWrapper(boolean)>(state)""];\n	""1"" -> ""16""[label=""cfg_next""];\n	""10"" -> ""13""[label=""cfg_true""];\n	""10"" -> ""5""[label=""cfg_false""];\n	""11"" -> ""1""[label=""cfg_false""];\n	""11"" -> ""9""[label=""cfg_true""];\n	""12"" -> ""4""[label=""cfg_next""];\n	""14"" -> ""2""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""9""[label=""cfg_next""];\n	""2"" -> ""8""[label=""cfg_next""];\n	""3"" -> ""12""[label=""cfg_next""];\n	""4"" -> ""10""[label=""cfg_next""];\n	""5"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""11""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""3""[label=""cfg_next""];\n	""9"" -> ""4""[label=""cfg_goto""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.setXmlNameProcessor(XmlNameProcessor),Method,* @since 2.14,public void setXmlNameProcessor(XmlNameProcessor processor) {\n    getFactory().setXmlNameProcessor(processor);\n},void setXmlNameProcessor(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor),"digraph cfg_setXmlNameProcessor {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>()""];\n	""2"" [label=""processor := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""3"" [label=""return""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""5"" [label=""virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void setXmlNameProcessor(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(processor)""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.getFactory(),Method,No Comment,@Override\npublic XmlFactory getFactory() {\n    return (XmlFactory) _jsonFactory;\n},com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory(),"digraph cfg_getFactory {\n	""1"" [label=""$stack1 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>""];\n	""2"" [label=""$stack2 = (com.fasterxml.jackson.dataformat.xml.XmlFactory) $stack1""];\n	""3"" [label=""return $stack2""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.createParser(XMLStreamReader),Method,* Overloaded variant that allows constructing {@link FromXmlParser}\n     * for given Stax {@link XMLStreamReader}.\n     *\n     * @since 2.17,public FromXmlParser createParser(XMLStreamReader r) throws IOException {\n    return getFactory().createParser(r);\n},com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser createParser(javax.xml.stream.XMLStreamReader),"digraph cfg_createParser {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser createParser(javax.xml.stream.XMLStreamReader)>(r)""];\n	""3"" [label=""r := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""4"" [label=""return $stack3""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""4""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.createGenerator(XMLStreamWriter),Method,* Overloaded variant that allows constructing {@link ToXmlGenerator}\n     * for given Stax {@link XMLStreamWriter}.\n     *\n     * @since 2.17,public ToXmlGenerator createGenerator(XMLStreamWriter w) throws IOException {\n    return getFactory().createGenerator(w);\n},com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter),"digraph cfg_createGenerator {\n	""1"" [label=""$stack2 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlFactory getFactory()>()""];\n	""2"" [label=""$stack3 = virtualinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlFactory: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w)""];\n	""3"" [label=""return $stack3""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""5"" [label=""w := @parameter0: javax.xml.stream.XMLStreamWriter""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(XMLStreamReader,Class)",Method,"* Method for reading a single XML value from given XML-specific input\n     * source; useful for incremental data-binding, combining traversal using\n     * basic Stax {@link XMLStreamReader} with data-binding by Jackson.\n     * \n     * @since 2.4","public <T> T readValue(XMLStreamReader r, Class<T> valueType) throws IOException {\n    return readValue(r, _typeFactory.constructType(valueType));\n}","java.lang.Object readValue(javax.xml.stream.XMLStreamReader,java.lang.Class)","digraph cfg_readValue {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(valueType)""];\n	""3"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: java.lang.Object readValue(javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.databind.JavaType)>(r, $stack4)""];\n	""4"" [label=""r := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""7"" [label=""valueType := @parameter1: java.lang.Class""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(XMLStreamReader,TypeReference)",Method,"* Method for reading a single XML value from given XML-specific input\n     * source; useful for incremental data-binding, combining traversal using\n     * basic Stax {@link XMLStreamReader} with data-binding by Jackson.\n     * \n     * @since 2.4","public <T> T readValue(XMLStreamReader r, TypeReference<T> valueTypeRef) throws IOException {\n    return readValue(r, _typeFactory.constructType(valueTypeRef));\n}","java.lang.Object readValue(javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.core.type.TypeReference)","digraph cfg_readValue {\n	""1"" [label=""$stack3 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>""];\n	""2"" [label=""$stack4 = virtualinvoke $stack3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(valueTypeRef)""];\n	""3"" [label=""$stack5 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: java.lang.Object readValue(javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.databind.JavaType)>(r, $stack4)""];\n	""4"" [label=""r := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""5"" [label=""return $stack5""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""7"" [label=""valueTypeRef := @parameter1: com.fasterxml.jackson.core.type.TypeReference""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""5""[label=""cfg_next""];\n	""4"" -> ""7""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlMapper.readValue(XMLStreamReader,JavaType)",Method,"* Method for reading a single XML value from given XML-specific input\n     * source; useful for incremental data-binding, combining traversal using\n     * basic Stax {@link XMLStreamReader} with data-binding by Jackson.\n     * \n     * @since 2.4","@SuppressWarnings(""resource"")\npublic <T> T readValue(XMLStreamReader r, JavaType valueType) throws IOException {\n    FromXmlParser p = createParser(r);\n    return super.readValue(p, valueType);\n}","java.lang.Object readValue(javax.xml.stream.XMLStreamReader,com.fasterxml.jackson.databind.JavaType)","digraph cfg_readValue {\n	""1"" [label=""$stack4 = specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(p, valueType)""];\n	""2"" [label=""p = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser createParser(javax.xml.stream.XMLStreamReader)>(r)""];\n	""3"" [label=""r := @parameter0: javax.xml.stream.XMLStreamReader""];\n	""4"" [label=""return $stack4""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""6"" [label=""valueType := @parameter1: com.fasterxml.jackson.databind.JavaType""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""3"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlMapper.writeValue(XMLStreamWriter,Object)",Method,"* Method for serializing given value using specific {@link XMLStreamReader}:\n     * useful when building large XML files by binding individual items, one at\n     * a time.\n     * \n     * @since 2.4","public void writeValue(XMLStreamWriter w, Object value) throws IOException {\n    @SuppressWarnings(""resource"")\n    ToXmlGenerator g = createGenerator(w);\n    super.writeValue(g, value);\n    // NOTE: above call should do flush(); and we should NOT close here.\n    // Finally, 'g' has no buffers to release.\n}","void writeValue(javax.xml.stream.XMLStreamWriter,java.lang.Object)","digraph cfg_writeValue {\n	""1"" [label=""g = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator createGenerator(javax.xml.stream.XMLStreamWriter)>(w)""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(g, value)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""5"" [label=""value := @parameter1: java.lang.Object""];\n	""6"" [label=""w := @parameter0: javax.xml.stream.XMLStreamWriter""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""6""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n	""6"" -> ""5""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(),Constructor,No Comment,public XmlMapper() {\n    this(new XmlFactory());\n},void <init>(),"digraph cfg_init {\n	""1"" [label=""$stack1 = new com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke $stack1.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>()>()""];\n	""4"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory)>($stack1)""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""4""[label=""cfg_next""];\n	""4"" -> ""2""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XMLInputFactory,XMLOutputFactory)",Constructor,* @since 2.4,"public XmlMapper(XMLInputFactory inputF, XMLOutputFactory outF) {\n    this(new XmlFactory(inputF, outF));\n}","void <init>(javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)","digraph cfg_init {\n	""1"" [label=""$stack3 = new com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" [label=""inputF := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""3"" [label=""outF := @parameter1: javax.xml.stream.XMLOutputFactory""];\n	""4"" [label=""return""];\n	""5"" [label=""specialinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(javax.xml.stream.XMLInputFactory,javax.xml.stream.XMLOutputFactory)>(inputF, outF)""];\n	""6"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory)>($stack3)""];\n	""7"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""5""[label=""cfg_next""];\n	""2"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""6""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n	""7"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XMLInputFactory),Constructor,* @since 2.4,public XmlMapper(XMLInputFactory inputF) {\n    this(new XmlFactory(inputF));\n},void <init>(javax.xml.stream.XMLInputFactory),"digraph cfg_init {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" [label=""inputF := @parameter0: javax.xml.stream.XMLInputFactory""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>(javax.xml.stream.XMLInputFactory)>(inputF)""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory)>($stack2)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XmlFactory),Constructor,No Comment,"public XmlMapper(XmlFactory xmlFactory) {\n    this(xmlFactory, DEFAULT_XML_MODULE);\n}",void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory),"digraph cfg_init {\n	""1"" [label=""$stack2 = <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule DEFAULT_XML_MODULE>""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule)>(xmlFactory, $stack2)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""5"" [label=""xmlFactory := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""1""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(JacksonXmlModule),Constructor,No Comment,"public XmlMapper(JacksonXmlModule module) {\n    this(new XmlFactory(), module);\n}",void <init>(com.fasterxml.jackson.dataformat.xml.JacksonXmlModule),"digraph cfg_init {\n	""1"" [label=""$stack2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""2"" [label=""module := @parameter0: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""3"" [label=""return""];\n	""4"" [label=""specialinvoke $stack2.<com.fasterxml.jackson.dataformat.xml.XmlFactory: void <init>()>()""];\n	""5"" [label=""specialinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule)>($stack2, module)""];\n	""6"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""1"" -> ""4""[label=""cfg_next""];\n	""2"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""5""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",public 
"com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XmlFactory,JacksonXmlModule)",Constructor,No Comment,"public XmlMapper(XmlFactory xmlFactory, JacksonXmlModule module) {\n    // Need to override serializer provider (due to root name handling);\n    // deserializer provider fine as is\n    super(xmlFactory, new XmlSerializerProvider(new XmlRootNameLookup()), new XmlDeserializationContext(BeanDeserializerFactory.instance));\n    _xmlModule = module;\n    // but all the rest is done via Module interface!\n    if (module != null) {\n        // [dataformat-xml#678]: need special handling for SerializerFactory override\n        SerializerFactory sfOverride = module.serializerFactoryOverride();\n        if (sfOverride != null) {\n            setSerializerFactory(sfOverride);\n        }\n        registerModule(module);\n    }\n    // 19-May-2015, tatu: Must ensure we use XML-specific indenter\n    _serializationConfig = _serializationConfig.withDefaultPrettyPrinter(DEFAULT_XML_PRETTY_PRINTER);\n    // 21-Jun-2017, tatu: Seems like there are many cases in XML where ability to coerce empty\n    //    String into `null` (where it otherwise is an error) is very useful.\n    enable(DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT);\n    // 13-May-2020, tatu: [dataformat-xml#377] Need to ensure we will keep XML-specific\n    //    Base64 default as ""MIME"" (not MIME-NO-LINEFEEDS), to preserve pre-2.12\n    //    behavior\n    setBase64Variant(Base64Variants.MIME);\n    // 04-Jun-2020, tatu: Use new (2.12) ""CoercionConfigs"" to support coercion\n    //   from empty and blank Strings to ""empty"" POJOs etc\n    coercionConfigDefaults().// To allow indentation without problems, need to accept blank String as empty:\n    setAcceptBlankAsEmpty(Boolean.TRUE).// and then coercion from empty String to empty value, in general\n    setCoercion(CoercionInputShape.EmptyString, CoercionAction.AsEmpty);\n    // 03-May-2021, tatu: ... except make sure to keep ""empty to Null"" for\n    //   scalar types...\n    coercionConfigFor(LogicalType.Integer).setCoercion(CoercionInputShape.EmptyString, CoercionAction.AsNull);\n    coercionConfigFor(LogicalType.Float).setCoercion(CoercionInputShape.EmptyString, CoercionAction.AsNull);\n    coercionConfigFor(LogicalType.Boolean).setCoercion(CoercionInputShape.EmptyString, CoercionAction.AsNull);\n}","void <init>(com.fasterxml.jackson.dataformat.xml.XmlFactory,com.fasterxml.jackson.dataformat.xml.JacksonXmlModule)","digraph cfg_init {\n	""1"" [label=""$stack10 = virtualinvoke $stack9.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig withDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)>($stack8)""];\n	""2"" [label=""$stack11 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT>""];\n	""3"" [label=""$stack12 = <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant MIME>""];\n	""4"" [label=""$stack13 = <java.lang.Boolean: java.lang.Boolean TRUE>""];\n	""5"" [label=""$stack14 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigDefaults()>()""];\n	""6"" [label=""$stack15 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>""];\n	""7"" [label=""$stack16 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>""];\n	""8"" [label=""$stack17 = virtualinvoke $stack14.<com.fasterxml.jackson.databind.cfg.MutableCoercionConfig: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setAcceptBlankAsEmpty(java.lang.Boolean)>($stack13)""];\n	""9"" [label=""$stack18 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>""];\n	""10"" [label=""$stack19 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>""];\n	""11"" [label=""$stack20 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>""];\n	""12"" [label=""$stack21 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(com.fasterxml.jackson.databind.type.LogicalType)>($stack18)""];\n	""13"" [label=""$stack22 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Float>""];\n	""14"" [label=""$stack23 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>""];\n	""15"" [label=""$stack24 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>""];\n	""16"" [label=""$stack25 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(com.fasterxml.jackson.databind.type.LogicalType)>($stack22)""];\n	""17"" [label=""$stack26 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean>""];\n	""18"" [label=""$stack27 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>""];\n	""19"" [label=""$stack28 = <com.fasterxml.jackson.databind.cfg.CoercionInputShape: com.fasterxml.jackson.databind.cfg.CoercionInputShape EmptyString>""];\n	""20"" [label=""$stack29 = virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(com.fasterxml.jackson.databind.type.LogicalType)>($stack26)""];\n	""21"" [label=""$stack4 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup""];\n	""22"" [label=""$stack5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider""];\n	""23"" [label=""$stack6 = <com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance>""];\n	""24"" [label=""$stack7 = new com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext""];\n	""25"" [label=""$stack8 = <com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter DEFAULT_XML_PRETTY_PRINTER>""];\n	""26"" [label=""$stack9 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>""];\n	""27"" [label=""if module == null""];\n	""28"" [label=""if sfOverride == null""];\n	""29"" [label=""module := @parameter1: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule""];\n	""30"" [label=""return""];\n	""31"" [label=""sfOverride = virtualinvoke module.<com.fasterxml.jackson.dataformat.xml.JacksonXmlModule: com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactoryOverride()>()""];\n	""32"" [label=""specialinvoke $stack4.<com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup: void <init>()>()""];\n	""33"" [label=""specialinvoke $stack5.<com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider: void <init>(com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup)>($stack4)""];\n	""34"" [label=""specialinvoke $stack7.<com.fasterxml.jackson.dataformat.xml.deser.XmlDeserializationContext: void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory)>($stack6)""];\n	""35"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)>(xmlFactory, $stack5, $stack7)""];\n	""36"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""37"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = $stack10""];\n	""38"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule _xmlModule> = module""];\n	""39"" [label=""virtualinvoke $stack17.<com.fasterxml.jackson.databind.cfg.MutableCoercionConfig: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setCoercion(com.fasterxml.jackson.databind.cfg.CoercionInputShape,com.fasterxml.jackson.databind.cfg.CoercionAction)>($stack16, $stack15)""];\n	""40"" [label=""virtualinvoke $stack21.<com.fasterxml.jackson.databind.cfg.MutableCoercionConfig: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setCoercion(com.fasterxml.jackson.databind.cfg.CoercionInputShape,com.fasterxml.jackson.databind.cfg.CoercionAction)>($stack20, $stack19)""];\n	""41"" [label=""virtualinvoke $stack25.<com.fasterxml.jackson.databind.cfg.MutableCoercionConfig: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setCoercion(com.fasterxml.jackson.databind.cfg.CoercionInputShape,com.fasterxml.jackson.databind.cfg.CoercionAction)>($stack24, $stack23)""];\n	""42"" [label=""virtualinvoke $stack29.<com.fasterxml.jackson.databind.cfg.MutableCoercionConfig: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig setCoercion(com.fasterxml.jackson.databind.cfg.CoercionInputShape,com.fasterxml.jackson.databind.cfg.CoercionAction)>($stack28, $stack27)""];\n	""43"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature)>($stack11)""];\n	""44"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module)>(module)""];\n	""45"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper setBase64Variant(com.fasterxml.jackson.core.Base64Variant)>($stack12)""];\n	""46"" [label=""virtualinvoke this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.databind.ObjectMapper setSerializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory)>(sfOverride)""];\n	""47"" [label=""xmlFactory := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlFactory""];\n	""1"" -> ""37""[label=""cfg_next""];\n	""10"" -> ""40""[label=""cfg_next""];\n	""11"" -> ""10""[label=""cfg_next""];\n	""12"" -> ""11""[label=""cfg_next""];\n	""13"" -> ""16""[label=""cfg_next""];\n	""14"" -> ""41""[label=""cfg_next""];\n	""15"" -> ""14""[label=""cfg_next""];\n	""16"" -> ""15""[label=""cfg_next""];\n	""17"" -> ""20""[label=""cfg_next""];\n	""18"" -> ""42""[label=""cfg_next""];\n	""19"" -> ""18""[label=""cfg_next""];\n	""2"" -> ""43""[label=""cfg_next""];\n	""20"" -> ""19""[label=""cfg_next""];\n	""21"" -> ""32""[label=""cfg_next""];\n	""22"" -> ""21""[label=""cfg_next""];\n	""23"" -> ""34""[label=""cfg_next""];\n	""24"" -> ""23""[label=""cfg_next""];\n	""25"" -> ""1""[label=""cfg_next""];\n	""26"" -> ""25""[label=""cfg_next""];\n	""27"" -> ""26""[label=""cfg_true""];\n	""27"" -> ""31""[label=""cfg_false""];\n	""28"" -> ""44""[label=""cfg_true""];\n	""28"" -> ""46""[label=""cfg_false""];\n	""29"" -> ""22""[label=""cfg_next""];\n	""3"" -> ""45""[label=""cfg_next""];\n	""31"" -> ""28""[label=""cfg_next""];\n	""32"" -> ""33""[label=""cfg_next""];\n	""33"" -> ""24""[label=""cfg_next""];\n	""34"" -> ""35""[label=""cfg_next""];\n	""35"" -> ""38""[label=""cfg_next""];\n	""36"" -> ""47""[label=""cfg_next""];\n	""37"" -> ""2""[label=""cfg_next""];\n	""38"" -> ""27""[label=""cfg_next""];\n	""39"" -> ""9""[label=""cfg_next""];\n	""4"" -> ""8""[label=""cfg_next""];\n	""40"" -> ""13""[label=""cfg_next""];\n	""41"" -> ""17""[label=""cfg_next""];\n	""42"" -> ""30""[label=""cfg_next""];\n	""43"" -> ""3""[label=""cfg_next""];\n	""44"" -> ""26""[label=""cfg_next""];\n	""45"" -> ""5""[label=""cfg_next""];\n	""46"" -> ""44""[label=""cfg_next""];\n	""47"" -> ""29""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""39""[label=""cfg_next""];\n	""7"" -> ""6""[label=""cfg_next""];\n	""8"" -> ""7""[label=""cfg_next""];\n	""9"" -> ""12""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper.<init>(XmlMapper),Constructor,* @since 2.8.9,protected XmlMapper(XmlMapper src) {\n    super(src);\n    _xmlModule = src._xmlModule;\n},void <init>(com.fasterxml.jackson.dataformat.xml.XmlMapper),"digraph cfg_init {\n	""1"" [label=""$stack2 = src.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule _xmlModule>""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>(src)""];\n	""4"" [label=""src := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""6"" [label=""this.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.JacksonXmlModule _xmlModule> = $stack2""];\n	""1"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""4"" -> ""3""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""2""[label=""cfg_next""];\n}\n",protected 
com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.nameForTextElement(String),Method,No Comment,public Builder nameForTextElement(String name) {\n    _mapper.setXMLTextElementName(name);\n    return this;\n},com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder nameForTextElement(java.lang.String),"digraph cfg_nameForTextElement {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder: com.fasterxml.jackson.databind.ObjectMapper _mapper>""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlMapper) $stack2""];\n	""3"" [label=""name := @parameter0: java.lang.String""];\n	""4"" [label=""return this""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder""];\n	""6"" [label=""virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void setXMLTextElementName(java.lang.String)>(name)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.defaultUseWrapper(boolean),Method,No Comment,public Builder defaultUseWrapper(boolean state) {\n    _mapper.setDefaultUseWrapper(state);\n    return this;\n},com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder defaultUseWrapper(boolean),"digraph cfg_defaultUseWrapper {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder: com.fasterxml.jackson.databind.ObjectMapper _mapper>""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlMapper) $stack2""];\n	""3"" [label=""return this""];\n	""4"" [label=""state := @parameter0: boolean""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder""];\n	""6"" [label=""virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: com.fasterxml.jackson.dataformat.xml.XmlMapper setDefaultUseWrapper(boolean)>(state)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""4""[label=""cfg_next""];\n	""6"" -> ""3""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.xmlNameProcessor(XmlNameProcessor),Method,* @since 2.14,public Builder xmlNameProcessor(XmlNameProcessor processor) {\n    _mapper.setXmlNameProcessor(processor);\n    return this;\n},com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder xmlNameProcessor(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor),"digraph cfg_xmlNameProcessor {\n	""1"" [label=""$stack2 = this.<com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder: com.fasterxml.jackson.databind.ObjectMapper _mapper>""];\n	""2"" [label=""$stack3 = (com.fasterxml.jackson.dataformat.xml.XmlMapper) $stack2""];\n	""3"" [label=""processor := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlNameProcessor""];\n	""4"" [label=""return this""];\n	""5"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder""];\n	""6"" [label=""virtualinvoke $stack3.<com.fasterxml.jackson.dataformat.xml.XmlMapper: void setXmlNameProcessor(com.fasterxml.jackson.dataformat.xml.XmlNameProcessor)>(processor)""];\n	""1"" -> ""2""[label=""cfg_next""];\n	""2"" -> ""6""[label=""cfg_next""];\n	""3"" -> ""1""[label=""cfg_next""];\n	""5"" -> ""3""[label=""cfg_next""];\n	""6"" -> ""4""[label=""cfg_next""];\n}\n",public 
com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder.<init>(XmlMapper),Constructor,No Comment,public Builder(XmlMapper m) {\n    super(m);\n},void <init>(com.fasterxml.jackson.dataformat.xml.XmlMapper),"digraph cfg_init {\n	""1"" [label=""m := @parameter0: com.fasterxml.jackson.dataformat.xml.XmlMapper""];\n	""2"" [label=""return""];\n	""3"" [label=""specialinvoke this.<com.fasterxml.jackson.databind.cfg.MapperBuilder: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>(m)""];\n	""4"" [label=""this := @this: com.fasterxml.jackson.dataformat.xml.XmlMapper$Builder""];\n	""1"" -> ""3""[label=""cfg_next""];\n	""3"" -> ""2""[label=""cfg_next""];\n	""4"" -> ""1""[label=""cfg_next""];\n}\n",public 
