FEN:ID,:LABEL,Comment,Source Code,Signature,Modifiers
org.apache.commons.collections4.IteratorUtils.EMPTY_ITERATOR,Field,* An iterator over no elements.,"@SuppressWarnings(""rawtypes"")\npublic static final ResettableIterator EMPTY_ITERATOR = EmptyIterator.RESETTABLE_INSTANCE;",org.apache.commons.collections4.ResettableIterator EMPTY_ITERATOR,"public , static , final "
org.apache.commons.collections4.IteratorUtils.EMPTY_LIST_ITERATOR,Field,* A list iterator over no elements.,"@SuppressWarnings(""rawtypes"")\npublic static final ResettableListIterator EMPTY_LIST_ITERATOR = EmptyListIterator.RESETTABLE_INSTANCE;",org.apache.commons.collections4.ResettableListIterator EMPTY_LIST_ITERATOR,"public , static , final "
org.apache.commons.collections4.IteratorUtils.EMPTY_ORDERED_ITERATOR,Field,* An ordered iterator over no elements.,"@SuppressWarnings(""rawtypes"")\npublic static final OrderedIterator EMPTY_ORDERED_ITERATOR = EmptyOrderedIterator.INSTANCE;",org.apache.commons.collections4.OrderedIterator EMPTY_ORDERED_ITERATOR,"public , static , final "
org.apache.commons.collections4.IteratorUtils.EMPTY_MAP_ITERATOR,Field,* A map iterator over no elements.,"@SuppressWarnings(""rawtypes"")\npublic static final MapIterator EMPTY_MAP_ITERATOR = EmptyMapIterator.INSTANCE;",org.apache.commons.collections4.MapIterator EMPTY_MAP_ITERATOR,"public , static , final "
org.apache.commons.collections4.IteratorUtils.EMPTY_ORDERED_MAP_ITERATOR,Field,* An ordered map iterator over no elements.,"@SuppressWarnings(""rawtypes"")\npublic static final OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR = EmptyOrderedMapIterator.INSTANCE;",org.apache.commons.collections4.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR,"public , static , final "
org.apache.commons.collections4.IteratorUtils.DEFAULT_TOSTRING_DELIMITER,Field,* Default delimiter used to delimit elements while converting an Iterator\n     * to its String representation.,"private static final String DEFAULT_TOSTRING_DELIMITER = "", "";",java.lang.String DEFAULT_TOSTRING_DELIMITER,"private , static , final "
org.apache.commons.collections4.ComparatorUtils.EMPTY_COMPARATOR_ARRAY,Field,No Comment,"@SuppressWarnings(""rawtypes"")\nprivate static final Comparator[] EMPTY_COMPARATOR_ARRAY = {};",java.util.Comparator[] EMPTY_COMPARATOR_ARRAY,"private , static , final "
org.apache.commons.collections4.ComparatorUtils.NATURAL_COMPARATOR,Field,* Comparator for natural sort order.\n     *\n     * @see ComparableComparator#comparableComparator(),"// explicit type needed for Java 1.5 compilation\n@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\npublic static final Comparator NATURAL_COMPARATOR = ComparableComparator.<Comparable>comparableComparator();",java.util.Comparator NATURAL_COMPARATOR,"public , static , final "
org.apache.commons.collections4.FunctorException.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -4704772662059351193L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.normalMap,Field,* Normal delegate map.,"transient Map<K, V> normalMap;",java.util.Map normalMap,transient 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.reverseMap,Field,* Reverse delegate map.,"transient Map<V, K> reverseMap;",java.util.Map reverseMap,transient 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.inverseBidiMap,Field,* Inverse view of this map.,"transient BidiMap<V, K> inverseBidiMap;",org.apache.commons.collections4.BidiMap inverseBidiMap,transient 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.keySet,Field,* View of the keys.,transient Set<K> keySet;,java.util.Set keySet,transient 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.values,Field,* View of the values.,transient Set<V> values;,java.util.Set values,transient 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap.entrySet,Field,* View of the entries.,"transient Set<Map.Entry<K, V>> entrySet;",java.util.Set entrySet,transient 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.parent,Field,The parent map,"protected final AbstractDualBidiMap<K, V> parent;",org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent,"protected , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.iterator,Field,The iterator being wrapped,"protected Iterator<Map.Entry<K, V>> iterator;",java.util.Iterator iterator,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.last,Field,The last returned entry,"protected Map.Entry<K, V> last;",java.util.Map$Entry last,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$BidiMapIterator.canRemove,Field,Whether remove is allowed at present,protected boolean canRemove;,boolean canRemove,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 4040410962603292348L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.parent,Field,The parent map,"protected final AbstractDualBidiMap<K, V> parent;",org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent,"protected , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.last,Field,The last returned entry,"protected Map.Entry<K, V> last;",java.util.Map$Entry last,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$EntrySetIterator.canRemove,Field,Whether remove is allowed at present,protected boolean canRemove;,boolean canRemove,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -7107935777385040694L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator.parent,Field,The parent map,"protected final AbstractDualBidiMap<K, ?> parent;",org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent,"protected , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator.lastKey,Field,The last returned key,protected K lastKey;,java.lang.Object lastKey,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$KeySetIterator.canRemove,Field,Whether remove is allowed at present,protected boolean canRemove;,boolean canRemove,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$MapEntry.parent,Field,The parent map,"protected final AbstractDualBidiMap<K, V> parent;",org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent,"protected , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$Values.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 4023777119829639864L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator.parent,Field,The parent map,"protected final AbstractDualBidiMap<Object, V> parent;",org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent,"protected , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator.lastValue,Field,The last returned value,protected V lastValue;,java.lang.Object lastValue,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$ValuesIterator.canRemove,Field,Whether remove is allowed at present,protected boolean canRemove;,boolean canRemove,protected 
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.serialVersionUID,Field,Generated serial version ID.,private static final long serialVersionUID = 4621510560119690639L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.AbstractDualBidiMap$View.parent,Field,The parent map,"protected final AbstractDualBidiMap<K, V> parent;",org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent,"protected , final "
org.apache.commons.collections4.bidimap.UnmodifiableBidiMap.inverse,Field,The inverse unmodifiable map,"private UnmodifiableBidiMap<V, K> inverse;",org.apache.commons.collections4.bidimap.UnmodifiableBidiMap inverse,private 
org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap.inverse,Field,The inverse unmodifiable map,"private UnmodifiableOrderedBidiMap<V, K> inverse;",org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap inverse,private 
org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap.serialVersionUID,Field,Ensure serialization compatibility,private static final long serialVersionUID = 721969328361810L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap.inverse,Field,The inverse unmodifiable map,"private UnmodifiableSortedBidiMap<V, K> inverse;",org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap inverse,private 
org.apache.commons.collections4.bidimap.DualHashBidiMap.serialVersionUID,Field,Ensure serialization compatibility,private static final long serialVersionUID = 721969328361808L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.DualTreeBidiMap.serialVersionUID,Field,Ensure serialization compatibility,private static final long serialVersionUID = 721969328361809L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.DualTreeBidiMap.comparator,Field,The key comparator to use,private final Comparator<? super K> comparator;,java.util.Comparator comparator,"private , final "
org.apache.commons.collections4.bidimap.DualTreeBidiMap.valueComparator,Field,The value comparator to use,private final Comparator<? super V> valueComparator;,java.util.Comparator valueComparator,"private , final "
org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.parent,Field,The parent map,"private final AbstractDualBidiMap<K, V> parent;",org.apache.commons.collections4.bidimap.AbstractDualBidiMap parent,"private , final "
org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.iterator,Field,The iterator being decorated,"private ListIterator<Map.Entry<K, V>> iterator;",java.util.ListIterator iterator,private 
org.apache.commons.collections4.bidimap.DualTreeBidiMap$BidiOrderedMapIterator.last,Field,The last returned entry,"private Map.Entry<K, V> last;",java.util.Map$Entry last,private 
org.apache.commons.collections4.bidimap.TreeBidiMap.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 721969328361807L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bidimap.TreeBidiMap.rootNode,Field,No Comment,"private transient Node<K, V>[] rootNode;",org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rootNode,"private , transient "
org.apache.commons.collections4.bidimap.TreeBidiMap.nodeCount,Field,No Comment,private transient int nodeCount;,int nodeCount,"private , transient "
org.apache.commons.collections4.bidimap.TreeBidiMap.modifications,Field,No Comment,private transient int modifications;,int modifications,"private , transient "
org.apache.commons.collections4.bidimap.TreeBidiMap.keySet,Field,No Comment,private transient Set<K> keySet;,java.util.Set keySet,"private , transient "
org.apache.commons.collections4.bidimap.TreeBidiMap.valuesSet,Field,No Comment,private transient Set<V> valuesSet;,java.util.Set valuesSet,"private , transient "
org.apache.commons.collections4.bidimap.TreeBidiMap.entrySet,Field,No Comment,"private transient Set<Map.Entry<K, V>> entrySet;",java.util.Set entrySet,"private , transient "
org.apache.commons.collections4.bidimap.TreeBidiMap.inverse,Field,No Comment,private transient Inverse inverse;,org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse inverse,"private , transient "
org.apache.commons.collections4.bidimap.TreeBidiMap$AbstractView.orderType,Field,Whether to return KEY or VALUE order.,final DataElement orderType;,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement orderType,final 
org.apache.commons.collections4.bidimap.TreeBidiMap$AbstractViewIterator.orderType,Field,Whether to return KEY or VALUE order.,private final DataElement orderType;,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement orderType,"private , final "
org.apache.commons.collections4.bidimap.TreeBidiMap$AbstractViewIterator.lastReturnedNode,Field,The last node returned by the iterator.,"Node<K, V> lastReturnedNode;",org.apache.commons.collections4.bidimap.TreeBidiMap$Node lastReturnedNode,default
org.apache.commons.collections4.bidimap.TreeBidiMap$AbstractViewIterator.nextNode,Field,The next node to be returned by the iterator.,"private Node<K, V> nextNode;",org.apache.commons.collections4.bidimap.TreeBidiMap$Node nextNode,private 
org.apache.commons.collections4.bidimap.TreeBidiMap$AbstractViewIterator.previousNode,Field,The previous node in the sequence returned by the iterator.,"private Node<K, V> previousNode;",org.apache.commons.collections4.bidimap.TreeBidiMap$Node previousNode,private 
org.apache.commons.collections4.bidimap.TreeBidiMap$AbstractViewIterator.expectedModifications,Field,The modification count.,private int expectedModifications;,int expectedModifications,private 
org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.inverseKeySet,Field,Store the keySet once created.,private Set<V> inverseKeySet;,java.util.Set inverseKeySet,private 
org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.inverseValuesSet,Field,Store the valuesSet once created.,private Set<K> inverseValuesSet;,java.util.Set inverseValuesSet,private 
org.apache.commons.collections4.bidimap.TreeBidiMap$Inverse.inverseEntrySet,Field,Store the entrySet once created.,"private Set<Map.Entry<V, K>> inverseEntrySet;",java.util.Set inverseEntrySet,private 
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.key,Field,No Comment,private final K key;,java.lang.Comparable key,"private , final "
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.value,Field,No Comment,private final V value;,java.lang.Comparable value,"private , final "
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.leftNode,Field,No Comment,"private final Node<K, V>[] leftNode;",org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] leftNode,"private , final "
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.rightNode,Field,No Comment,"private final Node<K, V>[] rightNode;",org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] rightNode,"private , final "
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.parentNode,Field,No Comment,"private final Node<K, V>[] parentNode;",org.apache.commons.collections4.bidimap.TreeBidiMap$Node[] parentNode,"private , final "
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.blackColor,Field,No Comment,private final boolean[] blackColor;,boolean[] blackColor,"private , final "
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.hashCodeValue,Field,No Comment,private int hashCodeValue;,int hashCodeValue,private 
org.apache.commons.collections4.bidimap.TreeBidiMap$Node.calculatedHashCode,Field,No Comment,private boolean calculatedHashCode;,boolean calculatedHashCode,private 
org.apache.commons.collections4.MultiMapUtils.EMPTY_MULTI_VALUED_MAP,Field,* An empty {@link UnmodifiableMultiValuedMap}.,"@SuppressWarnings({ ""rawtypes"", ""unchecked"" })\npublic static final MultiValuedMap EMPTY_MULTI_VALUED_MAP = UnmodifiableMultiValuedMap.unmodifiableMultiValuedMap(new ArrayListValuedHashMap(0, 0));",org.apache.commons.collections4.MultiValuedMap EMPTY_MULTI_VALUED_MAP,"public , static , final "
org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -7112672385450340330L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.CompositeCollection.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 8417515734108306801L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.CompositeCollection.mutator,Field,CollectionMutator to handle changes to the collection,private CollectionMutator<E> mutator;,org.apache.commons.collections4.collection.CompositeCollection$CollectionMutator mutator,private 
org.apache.commons.collections4.collection.CompositeCollection.all,Field,Collections in the composite,private final List<Collection<E>> all = new ArrayList<>();,java.util.List all,"private , final "
org.apache.commons.collections4.collection.TransformedCollection.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 8692300188161871514L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.TransformedCollection.transformer,Field,The transformer to use,"protected final Transformer<? super E, ? extends E> transformer;",org.apache.commons.collections4.Transformer transformer,"protected , final "
org.apache.commons.collections4.collection.PredicatedCollection.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -5259182142076705162L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.PredicatedCollection.predicate,Field,The predicate to use,protected final Predicate<? super E> predicate;,org.apache.commons.collections4.Predicate predicate,"protected , final "
org.apache.commons.collections4.collection.PredicatedCollection$Builder.predicate,Field,The predicate to use.,private final Predicate<? super E> predicate;,org.apache.commons.collections4.Predicate predicate,"private , final "
org.apache.commons.collections4.collection.PredicatedCollection$Builder.accepted,Field,The buffer containing valid elements.,private final List<E> accepted = new ArrayList<>();,java.util.List accepted,"private , final "
org.apache.commons.collections4.collection.PredicatedCollection$Builder.rejected,Field,The buffer containing rejected elements.,private final List<E> rejected = new ArrayList<>();,java.util.List rejected,"private , final "
org.apache.commons.collections4.collection.IndexedCollection.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -5512610452568370038L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.IndexedCollection.keyTransformer,Field,The {@link Transformer} for generating index keys.,"private final Transformer<C, K> keyTransformer;",org.apache.commons.collections4.Transformer keyTransformer,"private , final "
org.apache.commons.collections4.collection.IndexedCollection.index,Field,The map of indexes to collected objects.,"private final MultiMap<K, C> index;",org.apache.commons.collections4.MultiMap index,"private , final "
org.apache.commons.collections4.collection.IndexedCollection.uniqueIndex,Field,The uniqueness constraint for the index.,private final boolean uniqueIndex;,boolean uniqueIndex,"private , final "
org.apache.commons.collections4.collection.SynchronizedCollection.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2412805092710877986L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.SynchronizedCollection.collection,Field,The collection to decorate,private final Collection<E> collection;,java.util.Collection collection,"private , final "
org.apache.commons.collections4.collection.SynchronizedCollection.lock,Field,"The object to lock on, needed for List/SortedSet views",protected final Object lock;,java.lang.Object lock,"protected , final "
org.apache.commons.collections4.collection.UnmodifiableCollection.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -239892006883819945L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.AbstractCollectionDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 6249888059822088500L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.collection.AbstractCollectionDecorator.collection,Field,The collection being decorated,private Collection<E> collection;,java.util.Collection collection,private 
org.apache.commons.collections4.ListUtils$CharSequenceAsList.sequence,Field,No Comment,private final CharSequence sequence;,java.lang.CharSequence sequence,"private , final "
org.apache.commons.collections4.ListUtils$LcsVisitor.sequence,Field,No Comment,private final ArrayList<E> sequence;,java.util.ArrayList sequence,"private , final "
org.apache.commons.collections4.ListUtils$Partition.list,Field,No Comment,private final List<T> list;,java.util.List list,"private , final "
org.apache.commons.collections4.ListUtils$Partition.size,Field,No Comment,private final int size;,int size,"private , final "
org.apache.commons.collections4.MapUtils.EMPTY_SORTED_MAP,Field,* An empty unmodifiable sorted map. This is not provided in the JDK.,"@SuppressWarnings(""rawtypes"")\npublic static final SortedMap EMPTY_SORTED_MAP = UnmodifiableSortedMap.unmodifiableSortedMap(new TreeMap<>());",java.util.SortedMap EMPTY_SORTED_MAP,"public , static , final "
org.apache.commons.collections4.MapUtils.INDENT_STRING,Field,* String used to indent the verbose and debug Map prints.,"private static final String INDENT_STRING = ""    "";",java.lang.String INDENT_STRING,"private , static , final "
org.apache.commons.collections4.functors.DefaultEquator.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 825802648423525485L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.DefaultEquator.INSTANCE,Field,Static instance,"// the static instance works for all types\n@SuppressWarnings(""rawtypes"")\npublic static final DefaultEquator INSTANCE = new DefaultEquator<>();",org.apache.commons.collections4.functors.DefaultEquator INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.DefaultEquator.HASHCODE_NULL,Field,* Hashcode used for {@code null} objects.,public static final int HASHCODE_NULL = -1;,int HASHCODE_NULL,"public , static , final "
org.apache.commons.collections4.functors.StringValueTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7511110693171758606L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.StringValueTransformer.INSTANCE,Field,Singleton predicate instance,"private static final Transformer<Object, String> INSTANCE = new StringValueTransformer<>();",org.apache.commons.collections4.Transformer INSTANCE,"private , static , final "
org.apache.commons.collections4.functors.IfTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 8069309411242014252L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.IfTransformer.iPredicate,Field,The test,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.IfTransformer.iTrueTransformer,Field,The transformer to use if true,"private final Transformer<? super T, ? extends R> iTrueTransformer;",org.apache.commons.collections4.Transformer iTrueTransformer,"private , final "
org.apache.commons.collections4.functors.IfTransformer.iFalseTransformer,Field,The transformer to use if false,"private final Transformer<? super T, ? extends R> iFalseTransformer;",org.apache.commons.collections4.Transformer iFalseTransformer,"private , final "
org.apache.commons.collections4.functors.IdentityPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -89901658494523293L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.IdentityPredicate.iValue,Field,The value to compare to,private final T iValue;,java.lang.Object iValue,"private , final "
org.apache.commons.collections4.functors.ExceptionClosure.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7179106032121985545L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ExceptionClosure.INSTANCE,Field,Singleton predicate instance,"// the static instance works for all types\n@SuppressWarnings(""rawtypes"")\npublic static final Closure INSTANCE = new ExceptionClosure<>();",org.apache.commons.collections4.Closure INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.NOPClosure.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 3518477308466486130L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NOPClosure.INSTANCE,Field,Singleton predicate instance,"@SuppressWarnings(""rawtypes"")\npublic static final Closure INSTANCE = new NOPClosure<>();",org.apache.commons.collections4.Closure INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.ClosureTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 478466901448617286L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ClosureTransformer.iClosure,Field,The closure to wrap,private final Closure<? super T> iClosure;,org.apache.commons.collections4.Closure iClosure,"private , final "
org.apache.commons.collections4.functors.TransformerPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -2407966402920578741L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.TransformerPredicate.iTransformer,Field,The transformer to call,"private final Transformer<? super T, Boolean> iTransformer;",org.apache.commons.collections4.Transformer iTransformer,"private , final "
org.apache.commons.collections4.functors.NullPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7533784454832764388L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NullPredicate.INSTANCE,Field,Singleton predicate instance,"@SuppressWarnings(""rawtypes"")\npublic static final Predicate INSTANCE = new NullPredicate<>();",org.apache.commons.collections4.Predicate INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.ConstantTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 6374440726369055124L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ConstantTransformer.NULL_INSTANCE,Field,Returns null each time,"@SuppressWarnings(""rawtypes"")\npublic static final Transformer NULL_INSTANCE = new ConstantTransformer<>(null);",org.apache.commons.collections4.Transformer NULL_INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.ConstantTransformer.iConstant,Field,The closures to call in turn,private final R iConstant;,java.lang.Object iConstant,"private , final "
org.apache.commons.collections4.functors.PredicateTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 5278818408044349346L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.PredicateTransformer.iPredicate,Field,The closure to wrap,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.WhileClosure.iPredicate,Field,The test condition,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.WhileClosure.iClosure,Field,The closure to call,private final Closure<? super T> iClosure;,org.apache.commons.collections4.Closure iClosure,"private , final "
org.apache.commons.collections4.functors.WhileClosure.iDoLoop,Field,"The flag, true is a do loop, false is a while",private final boolean iDoLoop;,boolean iDoLoop,"private , final "
org.apache.commons.collections4.functors.ForClosure.iCount,Field,The number of times to loop,private final int iCount;,int iCount,"private , final "
org.apache.commons.collections4.functors.ForClosure.iClosure,Field,The closure to call,private final Closure<? super T> iClosure;,org.apache.commons.collections4.Closure iClosure,"private , final "
org.apache.commons.collections4.functors.NullIsTruePredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -7625133768987126273L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NullIsTruePredicate.iPredicate,Field,The predicate to decorate,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.TransformedPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -5596090919668315834L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.TransformedPredicate.iTransformer,Field,The transformer to call,"private final Transformer<? super T, ? extends T> iTransformer;",org.apache.commons.collections4.Transformer iTransformer,"private , final "
org.apache.commons.collections4.functors.TransformedPredicate.iPredicate,Field,The predicate to call,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.NonePredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 2007613066565892961L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ExceptionTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7179106032121985545L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ExceptionTransformer.INSTANCE,Field,Singleton predicate instance,"// the static instance works for all types\n@SuppressWarnings(""rawtypes"")\npublic static final Transformer INSTANCE = new ExceptionTransformer<>();",org.apache.commons.collections4.Transformer INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.SwitchTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -6404460890903469332L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.SwitchTransformer.iPredicates,Field,The tests to consider,private final Predicate<? super T>[] iPredicates;,org.apache.commons.collections4.Predicate[] iPredicates,"private , final "
org.apache.commons.collections4.functors.SwitchTransformer.iTransformers,Field,The matching transformers to call,"private final Transformer<? super T, ? extends R>[] iTransformers;",org.apache.commons.collections4.Transformer[] iTransformers,"private , final "
org.apache.commons.collections4.functors.SwitchTransformer.iDefault,Field,The default transformer to call if no tests match,"private final Transformer<? super T, ? extends R> iDefault;",org.apache.commons.collections4.Transformer iDefault,"private , final "
org.apache.commons.collections4.functors.TransformerClosure.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -5194992589193388969L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.TransformerClosure.iTransformer,Field,The transformer to wrap,"private final Transformer<? super T, ?> iTransformer;",org.apache.commons.collections4.Transformer iTransformer,"private , final "
org.apache.commons.collections4.functors.OrPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -8791518325735182855L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.OrPredicate.iPredicate1,Field,The array of predicates to call,private final Predicate<? super T> iPredicate1;,org.apache.commons.collections4.Predicate iPredicate1,"private , final "
org.apache.commons.collections4.functors.OrPredicate.iPredicate2,Field,The array of predicates to call,private final Predicate<? super T> iPredicate2;,org.apache.commons.collections4.Predicate iPredicate2,"private , final "
org.apache.commons.collections4.functors.NOPTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 2133891748318574490L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NOPTransformer.INSTANCE,Field,Singleton predicate instance,"@SuppressWarnings(""rawtypes"")\npublic static final Transformer INSTANCE = new NOPTransformer<>();",org.apache.commons.collections4.Transformer INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.MapTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 862391807045468939L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.MapTransformer.iMap,Field,The map of data to lookup in,"private final Map<? super T, ? extends R> iMap;",java.util.Map iMap,"private , final "
org.apache.commons.collections4.functors.ExceptionFactory.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7179106032121985545L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ExceptionFactory.INSTANCE,Field,Singleton predicate instance,"// the static instance works for all types\n@SuppressWarnings(""rawtypes"")\npublic static final Factory INSTANCE = new ExceptionFactory<>();",org.apache.commons.collections4.Factory INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.ChainedClosure.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -3520677225766901240L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ChainedClosure.iClosures,Field,The closures to call in turn,private final Closure<? super T>[] iClosures;,org.apache.commons.collections4.Closure[] iClosures,"private , final "
org.apache.commons.collections4.functors.AndPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 4189014213763186912L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.AndPredicate.iPredicate1,Field,The array of predicates to call,private final Predicate<? super T> iPredicate1;,org.apache.commons.collections4.Predicate iPredicate1,"private , final "
org.apache.commons.collections4.functors.AndPredicate.iPredicate2,Field,The array of predicates to call,private final Predicate<? super T> iPredicate2;,org.apache.commons.collections4.Predicate iPredicate2,"private , final "
org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory.iPrototype,Field,The object to clone each time,private final T iPrototype;,java.lang.Object iPrototype,"private , final "
org.apache.commons.collections4.functors.PrototypeFactory$PrototypeCloneFactory.iCloneMethod,Field,The method used to clone,private transient Method iCloneMethod;,java.lang.reflect.Method iCloneMethod,"private , transient "
org.apache.commons.collections4.functors.PrototypeFactory$PrototypeSerializationFactory.iPrototype,Field,The object to clone via serialization each time,private final T iPrototype;,java.io.Serializable iPrototype,"private , final "
org.apache.commons.collections4.functors.ExceptionPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7179106032121985545L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ExceptionPredicate.INSTANCE,Field,Singleton predicate instance,"// the static instance works for all types\n@SuppressWarnings(""rawtypes"")\npublic static final Predicate INSTANCE = new ExceptionPredicate<>();",org.apache.commons.collections4.Predicate INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.AbstractQuantifierPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -3094696765038308799L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.AbstractQuantifierPredicate.iPredicates,Field,The array of predicates to call,protected final Predicate<? super T>[] iPredicates;,org.apache.commons.collections4.Predicate[] iPredicates,"protected , final "
org.apache.commons.collections4.functors.InstanceofPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -6682656911025165584L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.InstanceofPredicate.iType,Field,The type to compare to,private final Class<?> iType;,java.lang.Class iType,"private , final "
org.apache.commons.collections4.functors.InvokerTransformer.iMethodName,Field,The method name to call,private final String iMethodName;,java.lang.String iMethodName,"private , final "
org.apache.commons.collections4.functors.InvokerTransformer.iParamTypes,Field,The array of reflection parameter types,private final Class<?>[] iParamTypes;,java.lang.Class[] iParamTypes,"private , final "
org.apache.commons.collections4.functors.InvokerTransformer.iArgs,Field,The array of reflection arguments,private final Object[] iArgs;,java.lang.Object[] iArgs,"private , final "
org.apache.commons.collections4.functors.FalsePredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7533784454832764388L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.FalsePredicate.INSTANCE,Field,Singleton predicate instance,"// the static instance works for all types\n@SuppressWarnings(""rawtypes"")\npublic static final Predicate INSTANCE = new FalsePredicate<>();",org.apache.commons.collections4.Predicate INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.CloneTransformer.INSTANCE,Field,Singleton predicate instance,"// the singleton instance works for all types\n@SuppressWarnings(""rawtypes"")\npublic static final Transformer INSTANCE = new CloneTransformer<>();",org.apache.commons.collections4.Transformer INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.NotPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -2654603322338049674L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NotPredicate.iPredicate,Field,The predicate to decorate,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.ConstantFactory.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -3520677225766901240L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ConstantFactory.NULL_INSTANCE,Field,Returns null each time,"// The null factory works for all object types\n@SuppressWarnings(""rawtypes"")\npublic static final Factory NULL_INSTANCE = new ConstantFactory<>(null);",org.apache.commons.collections4.Factory NULL_INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.ConstantFactory.iConstant,Field,The closures to call in turn,private final T iConstant;,java.lang.Object iConstant,"private , final "
org.apache.commons.collections4.functors.ChainedTransformer.EMPTY_TRANSFORMER_ARRAY,Field,No Comment,"@SuppressWarnings(""rawtypes"")\nprivate static final Transformer[] EMPTY_TRANSFORMER_ARRAY = {};",org.apache.commons.collections4.Transformer[] EMPTY_TRANSFORMER_ARRAY,"private , static , final "
org.apache.commons.collections4.functors.ChainedTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 3514945074733160196L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ChainedTransformer.iTransformers,Field,The transformers to call in turn,"private final Transformer<? super T, ? extends T>[] iTransformers;",org.apache.commons.collections4.Transformer[] iTransformers,"private , final "
org.apache.commons.collections4.functors.ComparatorPredicate.serialVersionUID,Field,No Comment,private static final long serialVersionUID = -1863209236504077399L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.ComparatorPredicate.object,Field,The internal object to compare with,private final T object;,java.lang.Object object,"private , final "
org.apache.commons.collections4.functors.ComparatorPredicate.comparator,Field,The comparator to use for comparison,private final Comparator<T> comparator;,java.util.Comparator comparator,"private , final "
org.apache.commons.collections4.functors.ComparatorPredicate.criterion,Field,The comparison evaluation criterion to use,private final Criterion criterion;,org.apache.commons.collections4.functors.ComparatorPredicate$Criterion criterion,"private , final "
org.apache.commons.collections4.functors.AllPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -3094696765038308799L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NullIsFalsePredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -2997501534564735525L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NullIsFalsePredicate.iPredicate,Field,The predicate to decorate,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.NullIsExceptionPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 3243449850504576071L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NullIsExceptionPredicate.iPredicate,Field,The predicate to decorate,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.AnyPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7429999530934647542L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.TruePredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 3374767158756189740L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.TruePredicate.INSTANCE,Field,Singleton predicate instance,"@SuppressWarnings(""rawtypes"")\npublic static final Predicate INSTANCE = new TruePredicate<>();",org.apache.commons.collections4.Predicate INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.FactoryTransformer.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -6817674502475353160L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.FactoryTransformer.iFactory,Field,The factory to wrap,private final Factory<? extends R> iFactory;,org.apache.commons.collections4.Factory iFactory,"private , final "
org.apache.commons.collections4.functors.NotNullPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 7533784454832764388L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE,Field,Singleton predicate instance,"@SuppressWarnings(""rawtypes"")\npublic static final Predicate INSTANCE = new NotNullPredicate<>();",org.apache.commons.collections4.Predicate INSTANCE,"public , static , final "
org.apache.commons.collections4.functors.SwitchClosure.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 3518477308466486130L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.SwitchClosure.iPredicates,Field,The tests to consider,private final Predicate<? super T>[] iPredicates;,org.apache.commons.collections4.Predicate[] iPredicates,"private , final "
org.apache.commons.collections4.functors.SwitchClosure.iClosures,Field,The matching closures to call,private final Closure<? super T>[] iClosures;,org.apache.commons.collections4.Closure[] iClosures,"private , final "
org.apache.commons.collections4.functors.SwitchClosure.iDefault,Field,The default closure to call if no tests match,private final Closure<? super T> iDefault;,org.apache.commons.collections4.Closure iDefault,"private , final "
org.apache.commons.collections4.functors.UniquePredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -3319417438027438040L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.UniquePredicate.iSet,Field,The set of previously seen objects,private final Set<T> iSet = new HashSet<>();,java.util.Set iSet,"private , final "
org.apache.commons.collections4.functors.InstantiateTransformer.NO_ARG_INSTANCE,Field,Singleton instance that uses the no arg constructor,"@SuppressWarnings(""rawtypes"")\nprivate static final Transformer NO_ARG_INSTANCE = new InstantiateTransformer<>();",org.apache.commons.collections4.Transformer NO_ARG_INSTANCE,"private , static , final "
org.apache.commons.collections4.functors.InstantiateTransformer.iParamTypes,Field,The constructor parameter types,private final Class<?>[] iParamTypes;,java.lang.Class[] iParamTypes,"private , final "
org.apache.commons.collections4.functors.InstantiateTransformer.iArgs,Field,The constructor arguments,private final Object[] iArgs;,java.lang.Object[] iArgs,"private , final "
org.apache.commons.collections4.functors.OnePredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = -8125389089924745785L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.EqualPredicate.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 5633766978029907089L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.EqualPredicate.test,Field,The value to compare to,private final T test;,java.lang.Object test,"private , final "
org.apache.commons.collections4.functors.EqualPredicate.equator,Field,The equator to use for comparison,private final Equator<T> equator;,org.apache.commons.collections4.Equator equator,"private , final "
org.apache.commons.collections4.functors.InstantiateFactory.iClassToInstantiate,Field,The class to create,private final Class<T> iClassToInstantiate;,java.lang.Class iClassToInstantiate,"private , final "
org.apache.commons.collections4.functors.InstantiateFactory.iParamTypes,Field,The constructor parameter types,private final Class<?>[] iParamTypes;,java.lang.Class[] iParamTypes,"private , final "
org.apache.commons.collections4.functors.InstantiateFactory.iArgs,Field,The constructor arguments,private final Object[] iArgs;,java.lang.Object[] iArgs,"private , final "
org.apache.commons.collections4.functors.InstantiateFactory.iConstructor,Field,The constructor,private transient Constructor<T> iConstructor;,java.lang.reflect.Constructor iConstructor,"private , transient "
org.apache.commons.collections4.functors.IfClosure.serialVersionUID,Field,Serial version UID,private static final long serialVersionUID = 3518477308466486130L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.functors.IfClosure.iPredicate,Field,The test,private final Predicate<? super T> iPredicate;,org.apache.commons.collections4.Predicate iPredicate,"private , final "
org.apache.commons.collections4.functors.IfClosure.iTrueClosure,Field,The closure to use if true,private final Closure<? super T> iTrueClosure;,org.apache.commons.collections4.Closure iTrueClosure,"private , final "
org.apache.commons.collections4.functors.IfClosure.iFalseClosure,Field,The closure to use if false,private final Closure<? super T> iFalseClosure;,org.apache.commons.collections4.Closure iFalseClosure,"private , final "
org.apache.commons.collections4.comparators.ComparatorChain.serialVersionUID,Field,Serialization version from Collections 2.0.,private static final long serialVersionUID = -721644942746081630L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.comparators.ComparatorChain.comparatorChain,Field,The list of comparators in the chain.,private final List<Comparator<E>> comparatorChain;,java.util.List comparatorChain,"private , final "
org.apache.commons.collections4.comparators.ComparatorChain.orderingBits,Field,Order - false (clear) = ascend; true (set) = descend.,private final BitSet orderingBits;,java.util.BitSet orderingBits,"private , final "
org.apache.commons.collections4.comparators.ComparatorChain.isLocked,Field,"Whether the chain has been ""locked"".",private boolean isLocked;,boolean isLocked,private 
org.apache.commons.collections4.comparators.BooleanComparator.serialVersionUID,Field,Serialization version.,private static final long serialVersionUID = 1830042991606340609L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.comparators.BooleanComparator.TRUE_FIRST,Field,"Constant ""true first"" reference.",private static final BooleanComparator TRUE_FIRST = new BooleanComparator(true);,org.apache.commons.collections4.comparators.BooleanComparator TRUE_FIRST,"private , static , final "
org.apache.commons.collections4.comparators.BooleanComparator.FALSE_FIRST,Field,"Constant ""false first"" reference.",private static final BooleanComparator FALSE_FIRST = new BooleanComparator(false);,org.apache.commons.collections4.comparators.BooleanComparator FALSE_FIRST,"private , static , final "
org.apache.commons.collections4.comparators.BooleanComparator.trueFirst,Field,{@code true} iff {@code true} values sort before {@code false} values.,private final boolean trueFirst;,boolean trueFirst,"private , final "
org.apache.commons.collections4.comparators.ReverseComparator.serialVersionUID,Field,Serialization version from Collections 2.0.,private static final long serialVersionUID = 2858887242028539265L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.comparators.ReverseComparator.comparator,Field,The comparator being decorated.,private final Comparator<? super E> comparator;,java.util.Comparator comparator,"private , final "
org.apache.commons.collections4.comparators.ComparableComparator.serialVersionUID,Field,Serialization version.,private static final long serialVersionUID = -291439688585137865L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.comparators.ComparableComparator.INSTANCE,Field,The singleton instance.,"@SuppressWarnings(""rawtypes"")\npublic static final ComparableComparator INSTANCE = new ComparableComparator();",org.apache.commons.collections4.comparators.ComparableComparator INSTANCE,"public , static , final "
org.apache.commons.collections4.comparators.TransformingComparator.serialVersionUID,Field,Serialization version from Collections 4.0.,private static final long serialVersionUID = 3456940356043606220L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.comparators.TransformingComparator.decorated,Field,The decorated comparator.,private final Comparator<O> decorated;,java.util.Comparator decorated,"private , final "
org.apache.commons.collections4.comparators.TransformingComparator.transformer,Field,The transformer being used.,"private final Transformer<? super I, ? extends O> transformer;",org.apache.commons.collections4.Transformer transformer,"private , final "
org.apache.commons.collections4.comparators.FixedOrderComparator.serialVersionUID,Field,Serialization version from Collections 4.0.,private static final long serialVersionUID = 82794675842863201L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.comparators.FixedOrderComparator.map,Field,Internal map of object to position,"private final Map<T, Integer> map = new HashMap<>();",java.util.Map map,"private , final "
org.apache.commons.collections4.comparators.FixedOrderComparator.counter,Field,Counter used in determining the position in the map,private int counter;,int counter,private 
org.apache.commons.collections4.comparators.FixedOrderComparator.isLocked,Field,Is the comparator locked against further change,private boolean isLocked;,boolean isLocked,private 
org.apache.commons.collections4.comparators.FixedOrderComparator.unknownObjectBehavior,Field,The behavior in the case of an unknown object,private UnknownObjectBehavior unknownObjectBehavior = UnknownObjectBehavior.EXCEPTION;,org.apache.commons.collections4.comparators.FixedOrderComparator$UnknownObjectBehavior unknownObjectBehavior,private 
org.apache.commons.collections4.comparators.NullComparator.serialVersionUID,Field,Serialization version.,private static final long serialVersionUID = -5820772575483504339L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.comparators.NullComparator.nonNullComparator,Field,*  The comparator to use when comparing two non-{@code null} objects.\n     *,private final Comparator<? super E> nonNullComparator;,java.util.Comparator nonNullComparator,"private , final "
org.apache.commons.collections4.comparators.NullComparator.nullsAreHigh,Field,*  Specifies whether a {@code null} are compared as higher than\n     *  non-{@code null} objects.\n     *,private final boolean nullsAreHigh;,boolean nullsAreHigh,"private , final "
org.apache.commons.collections4.CollectionUtils.INDEX_NOT_FOUND,Field,* The index value when an element is not found in a collection or array: {@code -1}.\n     *\n     * @since 4.5.0-M1,public static final int INDEX_NOT_FOUND = -1;,int INDEX_NOT_FOUND,"public , static , final "
org.apache.commons.collections4.CollectionUtils.DEFAULT_TOSTRING_PREFIX,Field,* Default prefix used while converting an Iterator to its String representation.\n     *\n     * @since 4.5.0-M1,"public static final String DEFAULT_TOSTRING_PREFIX = ""["";",java.lang.String DEFAULT_TOSTRING_PREFIX,"public , static , final "
org.apache.commons.collections4.CollectionUtils.DEFAULT_TOSTRING_SUFFIX,Field,* Default suffix used while converting an Iterator to its String representation.\n     *\n     * @since 4.5.0-M1,"public static final String DEFAULT_TOSTRING_SUFFIX = ""]"";",java.lang.String DEFAULT_TOSTRING_SUFFIX,"public , static , final "
org.apache.commons.collections4.CollectionUtils.COLON,Field,"* A String for Colon  ("":"").\n     *\n     * @since 4.5.0-M1","public static final String COLON = "":"";",java.lang.String COLON,"public , static , final "
org.apache.commons.collections4.CollectionUtils.COMMA,Field,"* A String for Comma ("","").\n     *\n     * @since 4.5.0-M1","public static final String COMMA = "","";",java.lang.String COMMA,"public , static , final "
org.apache.commons.collections4.CollectionUtils.EMPTY_COLLECTION,Field,* An empty unmodifiable collection.\n     * The JDK provides empty Set and List implementations which could be used for\n     * this purpose. However they could be cast to Set or List which might be\n     * undesirable. This implementation only implements Collection.,"// we deliberately use the raw type here\n@SuppressWarnings(""rawtypes"")\npublic static final Collection EMPTY_COLLECTION = Collections.emptyList();",java.util.Collection EMPTY_COLLECTION,"public , static , final "
org.apache.commons.collections4.CollectionUtils$CardinalityHelper.cardinalityA,Field,Contains the cardinality for each object in collection A.,final Bag<O> cardinalityA;,org.apache.commons.collections4.Bag cardinalityA,final 
org.apache.commons.collections4.CollectionUtils$CardinalityHelper.cardinalityB,Field,Contains the cardinality for each object in collection B.,final Bag<O> cardinalityB;,org.apache.commons.collections4.Bag cardinalityB,final 
org.apache.commons.collections4.CollectionUtils$EquatorWrapper.equator,Field,No Comment,private final Equator<? super O> equator;,org.apache.commons.collections4.Equator equator,"private , final "
org.apache.commons.collections4.CollectionUtils$EquatorWrapper.object,Field,No Comment,private final O object;,java.lang.Object object,"private , final "
org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.elements,Field,Contains the unique elements of the two collections.,private final Set<O> elements;,java.util.Set elements,"private , final "
org.apache.commons.collections4.CollectionUtils$SetOperationCardinalityHelper.newList,Field,Output collection.,private final List<O> newList;,java.util.List newList,"private , final "
org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator.map,Field,The map to decorate,"transient Map<K, V> map;",java.util.Map map,transient 
org.apache.commons.collections4.splitmap.TransformedSplitMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 5966875321133456994L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.splitmap.TransformedSplitMap.keyTransformer,Field,The transformer to use for the key,"private final Transformer<? super J, ? extends K> keyTransformer;",org.apache.commons.collections4.Transformer keyTransformer,"private , final "
org.apache.commons.collections4.splitmap.TransformedSplitMap.valueTransformer,Field,The transformer to use for the value,"private final Transformer<? super U, ? extends V> valueTransformer;",org.apache.commons.collections4.Transformer valueTransformer,"private , final "
org.apache.commons.collections4.IterableUtils.EMPTY_ITERABLE,Field,* An empty iterable.,"@SuppressWarnings(""rawtypes"")\nstatic final FluentIterable EMPTY_ITERABLE = new FluentIterable<Object>() {\n\n    @Override\n    public Iterator<Object> iterator() {\n        return IteratorUtils.emptyIterator();\n    }\n};",org.apache.commons.collections4.FluentIterable EMPTY_ITERABLE,"static , final "
org.apache.commons.collections4.IterableUtils$UnmodifiableIterable.iterable,Field,No Comment,private final Iterable<E> iterable;,java.lang.Iterable iterable,"private , final "
org.apache.commons.collections4.trie.PatriciaTrie.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 4446367780901817838L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.UnmodifiableTrie.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -7156426030315945159L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.UnmodifiableTrie.delegate,Field,* The delegate Trie.,"private final Trie<K, V> delegate;",org.apache.commons.collections4.Trie delegate,"private , final "
org.apache.commons.collections4.trie.KeyAnalyzer.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -20497563720380683L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY,Field,"* Returned by {@link #bitIndex(Object, int, int, Object, int, int)}\n     * if key's bits are all 0.",public static final int NULL_BIT_KEY = -1;,int NULL_BIT_KEY,"public , static , final "
org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY,Field,"* Returned by {@link #bitIndex(Object, int, int, Object, int, int)} if key and found key are equal.\n     * This is a very specific case and shouldn't happen on a regular basis.",public static final int EQUAL_BIT_KEY = -2;,int EQUAL_BIT_KEY,"public , static , final "
org.apache.commons.collections4.trie.KeyAnalyzer.OUT_OF_BOUNDS_BIT_KEY,Field,* Used to test a {@code bitIndex} in {@link #isOutOfBoundsIndex(int)}.,public static final int OUT_OF_BOUNDS_BIT_KEY = -3;,int OUT_OF_BOUNDS_BIT_KEY,"public , static , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 5155253417231339498L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie.root,Field,The root node of the {@link org.apache.commons.collections4.Trie}.,"private transient TrieEntry<K, V> root = new TrieEntry<>(null, null, -1);",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry root,"private , transient "
org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet,Field,"* Each of these fields are initialized to contain an instance of the\n     * appropriate view the first time this view is requested. The views are\n     * stateless, so there's no reason to create more than one of each.",private transient volatile Set<K> keySet;,java.util.Set keySet,"private , transient , volatile "
org.apache.commons.collections4.trie.AbstractPatriciaTrie.values,Field,No Comment,private transient volatile Collection<V> values;,java.util.Collection values,"private , transient , volatile "
org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet,Field,No Comment,"private transient volatile Set<Map.Entry<K, V>> entrySet;",java.util.Set entrySet,"private , transient , volatile "
org.apache.commons.collections4.trie.AbstractPatriciaTrie.size,Field,The current size of the {@link org.apache.commons.collections4.Trie}.,private transient int size;,int size,"private , transient "
org.apache.commons.collections4.trie.AbstractPatriciaTrie.modCount,Field,* The number of times this {@link org.apache.commons.collections4.Trie} has been modified.\n     * It's used to detect concurrent modifications and fail-fast the {@link Iterator}s.,protected transient int modCount;,int modCount,"protected , transient "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$AbstractRangeMap.entrySet,Field,The {@link #entrySet()} view.,"private transient volatile Set<Map.Entry<K, V>> entrySet;",java.util.Set entrySet,"private , transient , volatile "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$AbstractTrieIterator.expectedModCount,Field,For fast-fail.,protected int expectedModCount = AbstractPatriciaTrie.this.modCount;,int expectedModCount,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$AbstractTrieIterator.next,Field,the next node to return,"protected TrieEntry<K, V> next;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry next,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$AbstractTrieIterator.current,Field,the current entry we're on,"protected TrieEntry<K, V> current;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry current,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.delegate,Field,No Comment,private final PrefixRangeMap delegate;,org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap delegate,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.prefixStart,Field,No Comment,"private TrieEntry<K, V> prefixStart;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry prefixStart,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet.expectedModCount,Field,No Comment,private int expectedModCount;,int expectedModCount,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.prefix,Field,values to reset the subtree if we remove it.,private final K prefix;,java.lang.Object prefix,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.offset,Field,No Comment,private final int offset;,int offset,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.lengthInBits,Field,No Comment,private final int lengthInBits;,int lengthInBits,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.lastOne,Field,No Comment,private boolean lastOne;,boolean lastOne,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$EntryIterator.subtree,Field,the subtree to search within,"private TrieEntry<K, V> subtree;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry subtree,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.entry,Field,No Comment,"private final TrieEntry<K, V> entry;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry entry,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeEntrySet$SingletonIterator.hit,Field,No Comment,private int hit;,int hit,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.prefix,Field,No Comment,private final K prefix;,java.lang.Object prefix,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.offsetInBits,Field,No Comment,private final int offsetInBits;,int offsetInBits,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.lengthInBits,Field,No Comment,private final int lengthInBits;,int lengthInBits,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.fromKey,Field,No Comment,private K fromKey;,java.lang.Object fromKey,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.toKey,Field,No Comment,private K toKey;,java.lang.Object toKey,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.expectedModCount,Field,No Comment,private transient int expectedModCount;,int expectedModCount,"private , transient "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$PrefixRangeMap.size,Field,No Comment,private int size = -1;,int size,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.fromKey,Field,"The key to start from, null if the beginning.",private final K fromKey;,java.lang.Object fromKey,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.toKey,Field,"The key to end at, null if till the end.",private final K toKey;,java.lang.Object toKey,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.fromInclusive,Field,Whether or not the 'from' is inclusive.,private final boolean fromInclusive;,boolean fromInclusive,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntryMap.toInclusive,Field,Whether or not the 'to' is inclusive.,private final boolean toInclusive;,boolean toInclusive,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.delegate,Field,No Comment,private final AbstractRangeMap delegate;,org.apache.commons.collections4.trie.AbstractPatriciaTrie$AbstractRangeMap delegate,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.size,Field,No Comment,private transient int size = -1;,int size,"private , transient "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet.expectedModCount,Field,No Comment,private transient int expectedModCount;,int expectedModCount,"private , transient "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$RangeEntrySet$EntryIterator.excludedKey,Field,No Comment,private final K excludedKey;,java.lang.Object excludedKey,"private , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$Reference.item,Field,No Comment,private E item;,java.lang.Object item,private 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 4596023148184140013L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.bitIndex,Field,The index this entry is comparing.,protected int bitIndex;,int bitIndex,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.parent,Field,The parent of this entry.,"protected TrieEntry<K, V> parent;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry parent,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.left,Field,The left child of this entry.,"protected TrieEntry<K, V> left;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry left,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.right,Field,The right child of this entry.,"protected TrieEntry<K, V> right;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry right,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.predecessor,Field,The entry who uplinks to this entry.,"protected TrieEntry<K, V> predecessor;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry predecessor,protected 
org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieMapIterator.previous,Field,the previous node to return,"protected TrieEntry<K, V> previous;",org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previous,protected 
org.apache.commons.collections4.trie.AbstractBitwiseTrie.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 5826987063535505652L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.AbstractBitwiseTrie.keyAnalyzer,Field,* The {@link KeyAnalyzer} that's being used to build the PATRICIA {@link Trie}.,private final KeyAnalyzer<? super K> keyAnalyzer;,org.apache.commons.collections4.trie.KeyAnalyzer keyAnalyzer,"private , final "
org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.serialVersionUID,Field,No Comment,private static final long serialVersionUID = -944364551314110330L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.key,Field,* The entry's key.,protected K key;,java.lang.Object key,protected 
org.apache.commons.collections4.trie.AbstractBitwiseTrie$BasicEntry.value,Field,* The entry's value.,protected V value;,java.lang.Object value,protected 
org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.serialVersionUID,Field,No Comment,private static final long serialVersionUID = -7032449491269434877L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.INSTANCE,Field,A singleton instance of {@link StringKeyAnalyzer}.,public static final StringKeyAnalyzer INSTANCE = new StringKeyAnalyzer();,org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer INSTANCE,"public , static , final "
org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH,Field,The number of bits per {@link Character}.,public static final int LENGTH = Character.SIZE;,int LENGTH,"public , static , final "
org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.MSB,Field,A bit mask where the first bit is 1 and the others are zero.,private static final int MSB = 0x8000;,int MSB,"private , static , final "
org.apache.commons.collections4.map.TransformedSortedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -8751771676410385778L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.AbstractLinkedMap.header,Field,Header in the linked list,"transient LinkEntry<K, V> header;",org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry header,transient 
org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.before,Field,The entry before this one in the order,"protected LinkEntry<K, V> before;",org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry before,protected 
org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.after,Field,The entry after this one in the order,"protected LinkEntry<K, V> after;",org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry after,protected 
org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.parent,Field,The parent map,"protected final AbstractLinkedMap<K, V> parent;",org.apache.commons.collections4.map.AbstractLinkedMap parent,"protected , final "
org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.last,Field,The current (last returned) entry,"protected LinkEntry<K, V> last;",org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry last,protected 
org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.next,Field,The next entry,"protected LinkEntry<K, V> next;",org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry next,protected 
org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.expectedModCount,Field,The modification count expected,protected int expectedModCount;,int expectedModCount,protected 
org.apache.commons.collections4.map.Flat3Map.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -6701087419741928296L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.Flat3Map.size,Field,"The size of the map, used while in flat mode",private transient int size;,int size,"private , transient "
org.apache.commons.collections4.map.Flat3Map.hash1,Field,"Hash, used while in flat mode",private transient int hash1;,int hash1,"private , transient "
org.apache.commons.collections4.map.Flat3Map.hash2,Field,"Hash, used while in flat mode",private transient int hash2;,int hash2,"private , transient "
org.apache.commons.collections4.map.Flat3Map.hash3,Field,"Hash, used while in flat mode",private transient int hash3;,int hash3,"private , transient "
org.apache.commons.collections4.map.Flat3Map.key1,Field,"Key, used while in flat mode",private transient K key1;,java.lang.Object key1,"private , transient "
org.apache.commons.collections4.map.Flat3Map.key2,Field,"Key, used while in flat mode",private transient K key2;,java.lang.Object key2,"private , transient "
org.apache.commons.collections4.map.Flat3Map.key3,Field,"Key, used while in flat mode",private transient K key3;,java.lang.Object key3,"private , transient "
org.apache.commons.collections4.map.Flat3Map.value1,Field,"Value, used while in flat mode",private transient V value1;,java.lang.Object value1,"private , transient "
org.apache.commons.collections4.map.Flat3Map.value2,Field,"Value, used while in flat mode",private transient V value2;,java.lang.Object value2,"private , transient "
org.apache.commons.collections4.map.Flat3Map.value3,Field,"Value, used while in flat mode",private transient V value3;,java.lang.Object value3,"private , transient "
org.apache.commons.collections4.map.Flat3Map.delegateMap,Field,"Map, used while in delegate mode","private transient AbstractHashedMap<K, V> delegateMap;",org.apache.commons.collections4.map.AbstractHashedMap delegateMap,"private , transient "
org.apache.commons.collections4.map.Flat3Map$EntryIterator.parent,Field,No Comment,"private final Flat3Map<K, V> parent;",org.apache.commons.collections4.map.Flat3Map parent,"private , final "
org.apache.commons.collections4.map.Flat3Map$EntryIterator.nextIndex,Field,No Comment,private int nextIndex;,int nextIndex,private 
org.apache.commons.collections4.map.Flat3Map$EntryIterator.currentEntry,Field,No Comment,"private FlatMapEntry<K, V> currentEntry;",org.apache.commons.collections4.map.Flat3Map$FlatMapEntry currentEntry,private 
org.apache.commons.collections4.map.Flat3Map$EntrySet.parent,Field,No Comment,"private final Flat3Map<K, V> parent;",org.apache.commons.collections4.map.Flat3Map parent,"private , final "
org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.parent,Field,No Comment,"private final Flat3Map<K, V> parent;",org.apache.commons.collections4.map.Flat3Map parent,"private , final "
org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.index,Field,No Comment,private final int index;,int index,"private , final "
org.apache.commons.collections4.map.Flat3Map$FlatMapEntry.removed,Field,No Comment,private volatile boolean removed;,boolean removed,"private , volatile "
org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.parent,Field,No Comment,"private final Flat3Map<K, V> parent;",org.apache.commons.collections4.map.Flat3Map parent,"private , final "
org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.nextIndex,Field,No Comment,private int nextIndex;,int nextIndex,private 
org.apache.commons.collections4.map.Flat3Map$FlatMapIterator.canRemove,Field,No Comment,private boolean canRemove;,boolean canRemove,private 
org.apache.commons.collections4.map.Flat3Map$KeySet.parent,Field,No Comment,"private final Flat3Map<K, ?> parent;",org.apache.commons.collections4.map.Flat3Map parent,"private , final "
org.apache.commons.collections4.map.Flat3Map$Values.parent,Field,No Comment,"private final Flat3Map<?, V> parent;",org.apache.commons.collections4.map.Flat3Map parent,"private , final "
org.apache.commons.collections4.map.PredicatedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 7412622456128415156L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.PredicatedMap.keyPredicate,Field,The key predicate to use,protected final Predicate<? super K> keyPredicate;,org.apache.commons.collections4.Predicate keyPredicate,"protected , final "
org.apache.commons.collections4.map.PredicatedMap.valuePredicate,Field,The value predicate to use,protected final Predicate<? super V> valuePredicate;,org.apache.commons.collections4.Predicate valuePredicate,"protected , final "
org.apache.commons.collections4.map.FixedSizeSortedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 3126019624511683653L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.UnmodifiableSortedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 5805344239827376360L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.PredicatedSortedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 3359846175935304332L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.DefaultedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 19698628745827L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.DefaultedMap.value,Field,The transformer to use if the map does not contain a key,"private final Transformer<? super K, ? extends V> value;",org.apache.commons.collections4.Transformer value,"private , final "
org.apache.commons.collections4.map.ReferenceIdentityMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -1266190134568365852L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.serialVersionUID,Field,Generated serial version ID.,private static final long serialVersionUID = 4354731610923110264L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.parent,Field,The parent map,"private final AbstractInputCheckedMapDecorator<K, V> parent;",org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator parent,"private , final "
org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.parent,Field,The parent map,"private final AbstractInputCheckedMapDecorator<K, V> parent;",org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator parent,"private , final "
org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$MapEntry.parent,Field,The parent map,"private final AbstractInputCheckedMapDecorator<K, V> parent;",org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator parent,"private , final "
org.apache.commons.collections4.map.FixedSizeMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 7450927208116179316L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.LazySortedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2715322183617658933L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.UnmodifiableOrderedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 8136428161720526266L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.CaseInsensitiveMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -7074655917369299456L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.NO_NEXT_ENTRY,Field,Exception message.,"protected static final String NO_NEXT_ENTRY = ""No next() entry in the iteration"";",java.lang.String NO_NEXT_ENTRY,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.NO_PREVIOUS_ENTRY,Field,Exception message.,"protected static final String NO_PREVIOUS_ENTRY = ""No previous() entry in the iteration"";",java.lang.String NO_PREVIOUS_ENTRY,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.REMOVE_INVALID,Field,Exception message.,"protected static final String REMOVE_INVALID = ""remove() can only be called once after next()"";",java.lang.String REMOVE_INVALID,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.GETKEY_INVALID,Field,Exception message.,"protected static final String GETKEY_INVALID = ""getKey() can only be called after next() and before remove()"";",java.lang.String GETKEY_INVALID,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.GETVALUE_INVALID,Field,Exception message.,"protected static final String GETVALUE_INVALID = ""getValue() can only be called after next() and before remove()"";",java.lang.String GETVALUE_INVALID,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.SETVALUE_INVALID,Field,Exception message.,"protected static final String SETVALUE_INVALID = ""setValue() can only be called after next() and before remove()"";",java.lang.String SETVALUE_INVALID,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.DEFAULT_CAPACITY,Field,The default capacity to use,protected static final int DEFAULT_CAPACITY = 16;,int DEFAULT_CAPACITY,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.DEFAULT_THRESHOLD,Field,The default threshold to use,protected static final int DEFAULT_THRESHOLD = 12;,int DEFAULT_THRESHOLD,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR,Field,The default load factor to use,protected static final float DEFAULT_LOAD_FACTOR = 0.75f;,float DEFAULT_LOAD_FACTOR,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY,Field,The maximum capacity allowed,protected static final int MAXIMUM_CAPACITY = 1 << 30;,int MAXIMUM_CAPACITY,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.NULL,Field,An object for masking null,protected static final Object NULL = new Object();,java.lang.Object NULL,"protected , static , final "
org.apache.commons.collections4.map.AbstractHashedMap.loadFactor,Field,"Load factor, normally 0.75",transient float loadFactor;,float loadFactor,transient 
org.apache.commons.collections4.map.AbstractHashedMap.size,Field,The size of the map,transient int size;,int size,transient 
org.apache.commons.collections4.map.AbstractHashedMap.data,Field,Map entries,"transient HashEntry<K, V>[] data;",org.apache.commons.collections4.map.AbstractHashedMap$HashEntry[] data,transient 
org.apache.commons.collections4.map.AbstractHashedMap.threshold,Field,Size at which to rehash,transient int threshold;,int threshold,transient 
org.apache.commons.collections4.map.AbstractHashedMap.modCount,Field,Modification count for iterators,transient int modCount;,int modCount,transient 
org.apache.commons.collections4.map.AbstractHashedMap.entrySet,Field,Entry set,"transient EntrySet<K, V> entrySet;",org.apache.commons.collections4.map.AbstractHashedMap$EntrySet entrySet,transient 
org.apache.commons.collections4.map.AbstractHashedMap.keySet,Field,Key set,transient KeySet<K> keySet;,org.apache.commons.collections4.map.AbstractHashedMap$KeySet keySet,transient 
org.apache.commons.collections4.map.AbstractHashedMap.values,Field,Values,transient Values<V> values;,org.apache.commons.collections4.map.AbstractHashedMap$Values values,transient 
org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.parent,Field,The parent map,"private final AbstractHashedMap<K, V> parent;",org.apache.commons.collections4.map.AbstractHashedMap parent,"private , final "
org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.next,Field,The next entry in the hash chain,"protected HashEntry<K, V> next;",org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next,protected 
org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.hashCode,Field,The hash code of the key,protected int hashCode;,int hashCode,protected 
org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.key,Field,The key,protected Object key;,java.lang.Object key,protected 
org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.value,Field,The value,protected Object value;,java.lang.Object value,protected 
org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.parent,Field,The parent map,"private final AbstractHashedMap<K, V> parent;",org.apache.commons.collections4.map.AbstractHashedMap parent,"private , final "
org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.hashIndex,Field,The current index into the array of buckets,private int hashIndex;,int hashIndex,private 
org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.last,Field,The last returned entry,"private HashEntry<K, V> last;",org.apache.commons.collections4.map.AbstractHashedMap$HashEntry last,private 
org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.next,Field,The next entry,"private HashEntry<K, V> next;",org.apache.commons.collections4.map.AbstractHashedMap$HashEntry next,private 
org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.expectedModCount,Field,The modification count expected,private int expectedModCount;,int expectedModCount,private 
org.apache.commons.collections4.map.AbstractHashedMap$KeySet.parent,Field,The parent map,"private final AbstractHashedMap<K, ?> parent;",org.apache.commons.collections4.map.AbstractHashedMap parent,"private , final "
org.apache.commons.collections4.map.AbstractHashedMap$Values.parent,Field,The parent map,"private final AbstractHashedMap<?, V> parent;",org.apache.commons.collections4.map.AbstractHashedMap parent,"private , final "
org.apache.commons.collections4.map.UnmodifiableMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2737023427269031941L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.DEFAULT_KEY_TYPE,Field,No Comment,static final ReferenceType DEFAULT_KEY_TYPE = ReferenceType.WEAK;,org.apache.commons.collections4.map.ConcurrentReferenceHashMap$ReferenceType DEFAULT_KEY_TYPE,"static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.DEFAULT_VALUE_TYPE,Field,No Comment,static final ReferenceType DEFAULT_VALUE_TYPE = ReferenceType.STRONG;,org.apache.commons.collections4.map.ConcurrentReferenceHashMap$ReferenceType DEFAULT_VALUE_TYPE,"static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.DEFAULT_OPTIONS,Field,No Comment,static final EnumSet<Option> DEFAULT_OPTIONS = null;,java.util.EnumSet DEFAULT_OPTIONS,"static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.DEFAULT_INITIAL_CAPACITY,Field,"* The default initial capacity for this table, used when not otherwise specified in a constructor.",static final int DEFAULT_INITIAL_CAPACITY = 16;,int DEFAULT_INITIAL_CAPACITY,"static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.DEFAULT_LOAD_FACTOR,Field,"* The default load factor for this table, used when not otherwise specified in a constructor.",static final float DEFAULT_LOAD_FACTOR = 0.75f;,float DEFAULT_LOAD_FACTOR,"static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.DEFAULT_CONCURRENCY_LEVEL,Field,"* The default concurrency level for this table, used when not otherwise specified in a constructor.",static final int DEFAULT_CONCURRENCY_LEVEL = 16;,int DEFAULT_CONCURRENCY_LEVEL,"static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.MAXIMUM_CAPACITY,Field,"* The maximum capacity, used if a higher value is implicitly specified by either of the constructors with arguments. MUST be a power of two &lt;=\n     * 1&lt;&lt;30 to ensure that entries are indexable using ints.",private static final int MAXIMUM_CAPACITY = 1 << 30;,int MAXIMUM_CAPACITY,"private , static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.MAX_SEGMENTS,Field,* The maximum number of segments to allow; used to bound constructor arguments.,private static final int MAX_SEGMENTS = 1 << 16;,int MAX_SEGMENTS,"private , static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.RETRIES_BEFORE_LOCK,Field,* Number of unsynchronized retries in size and containsValue methods before resorting to locking. This is used to avoid unbounded retries if tables undergo\n     * continuous modification which would make it impossible to obtain an accurate result.,private static final int RETRIES_BEFORE_LOCK = 2;,int RETRIES_BEFORE_LOCK,"private , static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.segmentMask,Field,* Mask value for indexing into segments. The upper bits of a key's hash code are used to choose the segment.,private final int segmentMask;,int segmentMask,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.segmentShift,Field,* Shift value for indexing within segments.,private final int segmentShift;,int segmentShift,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.segments,Field,"* The segments, each of which is a specialized hash table","private final Segment<K, V>[] segments;",org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment[] segments,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.identityComparisons,Field,No Comment,private final boolean identityComparisons;,boolean identityComparisons,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.keySet,Field,No Comment,private transient Set<K> keySet;,java.util.Set keySet,"private , transient "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.entrySet,Field,No Comment,"private transient Set<Entry<K, V>> entrySet;",java.util.Set entrySet,"private , transient "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap.values,Field,No Comment,private transient Collection<V> values;,java.util.Collection values,"private , transient "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.DEFAULT_SOURCE_MAP,Field,No Comment,"private static final Map<?, ?> DEFAULT_SOURCE_MAP = null;",java.util.Map DEFAULT_SOURCE_MAP,"private , static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.initialCapacity,Field,No Comment,private int initialCapacity = DEFAULT_INITIAL_CAPACITY;,int initialCapacity,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.loadFactor,Field,No Comment,private float loadFactor = DEFAULT_LOAD_FACTOR;,float loadFactor,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.concurrencyLevel,Field,No Comment,private int concurrencyLevel = DEFAULT_CONCURRENCY_LEVEL;,int concurrencyLevel,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.keyReferenceType,Field,No Comment,private ReferenceType keyReferenceType = DEFAULT_KEY_TYPE;,org.apache.commons.collections4.map.ConcurrentReferenceHashMap$ReferenceType keyReferenceType,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.valueReferenceType,Field,No Comment,private ReferenceType valueReferenceType = DEFAULT_VALUE_TYPE;,org.apache.commons.collections4.map.ConcurrentReferenceHashMap$ReferenceType valueReferenceType,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.options,Field,No Comment,private EnumSet<Option> options = DEFAULT_OPTIONS;,java.util.EnumSet options,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Builder.sourceMap,Field,No Comment,"@SuppressWarnings(""unchecked"")\nprivate Map<? extends K, ? extends V> sourceMap = (Map<? extends K, ? extends V>) DEFAULT_SOURCE_MAP;",java.util.Map sourceMap,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$CachedEntryIterator.entry,Field,No Comment,"private final InitializableEntry<K, V> entry = new InitializableEntry<>();",org.apache.commons.collections4.map.ConcurrentReferenceHashMap$InitializableEntry entry,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$EntrySet.cached,Field,No Comment,private final boolean cached;,boolean cached,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry.keyRef,Field,No Comment,private final Object keyRef;,java.lang.Object keyRef,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry.hash,Field,No Comment,private final int hash;,int hash,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry.valueRef,Field,No Comment,private volatile Object valueRef;,java.lang.Object valueRef,"private , volatile "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry.next,Field,No Comment,"private final HashEntry<K, V> next;",org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry next,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashIterator.nextSegmentIndex,Field,No Comment,private int nextSegmentIndex;,int nextSegmentIndex,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashIterator.nextTableIndex,Field,No Comment,private int nextTableIndex;,int nextTableIndex,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashIterator.currentTable,Field,No Comment,"private HashEntry<K, V>[] currentTable;",org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry[] currentTable,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashIterator.nextEntry,Field,No Comment,"private HashEntry<K, V> nextEntry;",org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry nextEntry,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashIterator.lastReturned,Field,No Comment,"private HashEntry<K, V> lastReturned;",org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry lastReturned,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashIterator.currentKey,Field,Strong reference to weak key (prevents gc),private K currentKey;,java.lang.Object currentKey,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$InitializableEntry.key,Field,No Comment,private K key;,java.lang.Object key,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$InitializableEntry.value,Field,No Comment,private V value;,java.lang.Object value,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.count,Field,"""I trust Doug Lea's technical decision"")",private transient volatile int count;,int count,"private , transient , volatile "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.modCount,Field,"""I trust Doug Lea's technical decision"")",private transient int modCount;,int modCount,"private , transient "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.threshold,Field,* The table is rehashed when its size exceeds this threshold. (The value of this field is always <code>(int)(capacity *\n         * loadFactor)</code>.),private transient int threshold;,int threshold,"private , transient "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.table,Field,* The per-segment table.,"private transient volatile HashEntry<K, V>[] table;",org.apache.commons.collections4.map.ConcurrentReferenceHashMap$HashEntry[] table,"private , transient , volatile "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.loadFactor,Field,"* The load factor for the hash table. Even though this value is same for all segments, it is replicated to avoid needing links to outer object.",private final float loadFactor;,float loadFactor,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.refQueue,Field,"* The collected weak-key reference queue for this segment. This should be (re)initialized whenever table is assigned,",private transient volatile ReferenceQueue<Object> refQueue;,java.lang.ref.ReferenceQueue refQueue,"private , transient , volatile "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.keyType,Field,No Comment,private final ReferenceType keyType;,org.apache.commons.collections4.map.ConcurrentReferenceHashMap$ReferenceType keyType,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.valueType,Field,No Comment,private final ReferenceType valueType;,org.apache.commons.collections4.map.ConcurrentReferenceHashMap$ReferenceType valueType,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$Segment.identityComparisons,Field,No Comment,private final boolean identityComparisons;,boolean identityComparisons,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$SimpleEntry.key,Field,No Comment,private final K key;,java.lang.Object key,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$SimpleEntry.value,Field,No Comment,private V value;,java.lang.Object value,private 
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$SoftKeyReference.hash,Field,No Comment,private final int hash;,int hash,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$SoftValueReference.keyRef,Field,No Comment,private final Object keyRef;,java.lang.Object keyRef,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$SoftValueReference.hash,Field,No Comment,private final int hash;,int hash,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$WeakKeyReference.hash,Field,No Comment,private final int hash;,int hash,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$WeakValueReference.keyRef,Field,No Comment,private final Object keyRef;,java.lang.Object keyRef,"private , final "
org.apache.commons.collections4.map.ConcurrentReferenceHashMap$WeakValueReference.hash,Field,No Comment,private final int hash;,int hash,"private , final "
org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.entrySet,Field,The adapted Map entry Set.,"final Set<Map.Entry<K, V>> entrySet;",java.util.Set entrySet,final 
org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.iterator,Field,The resettable iterator in use.,"transient Iterator<Map.Entry<K, V>> iterator;",java.util.Iterator iterator,transient 
org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter.entry,Field,The currently positioned Map entry.,"transient Map.Entry<K, V> entry;",java.util.Map$Entry entry,transient 
org.apache.commons.collections4.map.ListOrderedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2728177751851003750L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.ListOrderedMap.insertOrder,Field,Internal list to hold the sequence of objects,private final List<K> insertOrder = new ArrayList<>();,java.util.List insertOrder,"private , final "
org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.parent,Field,No Comment,"private final ListOrderedMap<K, V> parent;",org.apache.commons.collections4.map.ListOrderedMap parent,"private , final "
org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.insertOrder,Field,No Comment,private final List<K> insertOrder;,java.util.List insertOrder,"private , final "
org.apache.commons.collections4.map.ListOrderedMap$EntrySetView.entrySet,Field,No Comment,"private Set<Map.Entry<K, V>> entrySet;",java.util.Set entrySet,private 
org.apache.commons.collections4.map.ListOrderedMap$KeySetView.parent,Field,No Comment,"private final ListOrderedMap<K, Object> parent;",org.apache.commons.collections4.map.ListOrderedMap parent,"private , final "
org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.parent,Field,No Comment,"private final ListOrderedMap<K, V> parent;",org.apache.commons.collections4.map.ListOrderedMap parent,"private , final "
org.apache.commons.collections4.map.ListOrderedMap$ListOrderedIterator.last,Field,No Comment,private K last;,java.lang.Object last,private 
org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.parent,Field,No Comment,"private final ListOrderedMap<K, V> parent;",org.apache.commons.collections4.map.ListOrderedMap parent,"private , final "
org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.parent,Field,No Comment,"private final ListOrderedMap<K, V> parent;",org.apache.commons.collections4.map.ListOrderedMap parent,"private , final "
org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.iterator,Field,No Comment,private ListIterator<K> iterator;,java.util.ListIterator iterator,private 
org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.last,Field,No Comment,private K last;,java.lang.Object last,private 
org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapIterator.readable,Field,No Comment,private boolean readable;,boolean readable,private 
org.apache.commons.collections4.map.ListOrderedMap$ValuesView.parent,Field,No Comment,"private final ListOrderedMap<Object, V> parent;",org.apache.commons.collections4.map.ListOrderedMap parent,"private , final "
org.apache.commons.collections4.map.LinkedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 9077234323521161066L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.LinkedMap$LinkedMapList.parent,Field,No Comment,"private final LinkedMap<K, ?> parent;",org.apache.commons.collections4.map.LinkedMap parent,"private , final "
org.apache.commons.collections4.map.SingletonMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -8931271118676803261L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.SingletonMap.key,Field,Singleton key,private final K key;,java.lang.Object key,"private , final "
org.apache.commons.collections4.map.SingletonMap.value,Field,Singleton value,private V value;,java.lang.Object value,private 
org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.parent,Field,No Comment,"private final SingletonMap<K, V> parent;",org.apache.commons.collections4.map.SingletonMap parent,"private , final "
org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.hasNext,Field,No Comment,private boolean hasNext = true;,boolean hasNext,private 
org.apache.commons.collections4.map.SingletonMap$SingletonMapIterator.canGetSet,Field,No Comment,private boolean canGetSet;,boolean canGetSet,private 
org.apache.commons.collections4.map.SingletonMap$SingletonValues.serialVersionUID,Field,No Comment,private static final long serialVersionUID = -3689524741863047872L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.SingletonMap$SingletonValues.parent,Field,No Comment,"private final SingletonMap<?, V> parent;",org.apache.commons.collections4.map.SingletonMap parent,"private , final "
org.apache.commons.collections4.map.UnmodifiableEntrySet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1678353579659253473L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.StaticBucketMap.DEFAULT_BUCKETS,Field,The default number of buckets to use,private static final int DEFAULT_BUCKETS = 255;,int DEFAULT_BUCKETS,"private , static , final "
org.apache.commons.collections4.map.StaticBucketMap.buckets,Field,"The array of buckets, where the actual data is held","private final Node<K, V>[] buckets;",org.apache.commons.collections4.map.StaticBucketMap$Node[] buckets,"private , final "
org.apache.commons.collections4.map.StaticBucketMap.locks,Field,The matching array of locks,private final Lock[] locks;,org.apache.commons.collections4.map.StaticBucketMap$Lock[] locks,"private , final "
org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.current,Field,No Comment,"private final ArrayList<Map.Entry<K, V>> current = new ArrayList<>();",java.util.ArrayList current,"private , final "
org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.bucket,Field,No Comment,private int bucket;,int bucket,private 
org.apache.commons.collections4.map.StaticBucketMap$BaseIterator.last,Field,No Comment,"private Map.Entry<K, V> last;",java.util.Map$Entry last,private 
org.apache.commons.collections4.map.StaticBucketMap$Lock.size,Field,No Comment,public int size;,int size,public 
org.apache.commons.collections4.map.StaticBucketMap$Node.key,Field,No Comment,protected K key;,java.lang.Object key,protected 
org.apache.commons.collections4.map.StaticBucketMap$Node.value,Field,No Comment,protected V value;,java.lang.Object value,protected 
org.apache.commons.collections4.map.StaticBucketMap$Node.next,Field,No Comment,"protected Node<K, V> next;",org.apache.commons.collections4.map.StaticBucketMap$Node next,protected 
org.apache.commons.collections4.map.AbstractMapDecorator.map,Field,The map to decorate,"transient Map<K, V> map;",java.util.Map map,transient 
org.apache.commons.collections4.map.AbstractReferenceMap.keyType,Field,* The reference type for keys.,private ReferenceStrength keyType;,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength keyType,private 
org.apache.commons.collections4.map.AbstractReferenceMap.valueType,Field,* The reference type for values.,private ReferenceStrength valueType;,org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength valueType,private 
org.apache.commons.collections4.map.AbstractReferenceMap.purgeValues,Field,* Should the value be automatically purged when the associated key has been collected?,private boolean purgeValues;,boolean purgeValues,private 
org.apache.commons.collections4.map.AbstractReferenceMap.queue,Field,* ReferenceQueue used to eliminate stale mappings.\n     * See purge.,private transient ReferenceQueue<Object> queue;,java.lang.ref.ReferenceQueue queue,"private , transient "
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.parent,Field,The parent map,"final AbstractReferenceMap<K, V> parent;",org.apache.commons.collections4.map.AbstractReferenceMap parent,final 
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.index,Field,These fields keep track of where we are in the table.,int index;,int index,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.next,Field,No Comment,"ReferenceEntry<K, V> next;",org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.current,Field,No Comment,"ReferenceEntry<K, V> current;",org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry current,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.currentKey,Field,"returns true, next() will actually return a valid element.",K currentKey;,java.lang.Object currentKey,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextKey,Field,No Comment,K nextKey;,java.lang.Object nextKey,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.currentValue,Field,No Comment,V currentValue;,java.lang.Object currentValue,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.nextValue,Field,No Comment,V nextValue;,java.lang.Object nextValue,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.expectedModCount,Field,No Comment,int expectedModCount;,int expectedModCount,default
org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.parent,Field,The parent map,"private final AbstractReferenceMap<K, V> parent;",org.apache.commons.collections4.map.AbstractReferenceMap parent,"private , final "
org.apache.commons.collections4.map.AbstractReferenceMap$SoftRef.hash,Field,The hashCode of the key (even if the reference points to a value),private final int hash;,int hash,"private , final "
org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.hash,Field,The hashCode of the key (even if the reference points to a value),private final int hash;,int hash,"private , final "
org.apache.commons.collections4.map.MultiKeyMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -1788199231038721040L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.HashedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -1788199231038721040L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.LazyMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 7990956402564206740L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.LazyMap.factory,Field,The factory to use to construct elements,"protected final Transformer<? super K, ? extends V> factory;",org.apache.commons.collections4.Transformer factory,"protected , final "
org.apache.commons.collections4.map.PassiveExpiringMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.PassiveExpiringMap.expirationMap,Field,Map used to manage expiration times for the actual map entries.,"private final Map<Object, Long> expirationMap = new HashMap<>();",java.util.Map expirationMap,"private , final "
org.apache.commons.collections4.map.PassiveExpiringMap.expiringPolicy,Field,The policy used to determine time-to-live values for map entries.,"private final ExpirationPolicy<K, V> expiringPolicy;",org.apache.commons.collections4.map.PassiveExpiringMap$ExpirationPolicy expiringPolicy,"private , final "
org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.PassiveExpiringMap$ConstantTimeToLiveExpirationPolicy.timeToLiveMillis,Field,The constant time-to-live value measured in milliseconds.,private final long timeToLiveMillis;,long timeToLiveMillis,"private , final "
org.apache.commons.collections4.map.MultiValueMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -2214159910087182007L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.MultiValueMap.collectionFactory,Field,The factory for creating value collections.,private final Factory<? extends Collection<V>> collectionFactory;,org.apache.commons.collections4.Factory collectionFactory,"private , final "
org.apache.commons.collections4.map.MultiValueMap.valuesView,Field,The cached values.,private transient Collection<V> valuesView;,java.util.Collection valuesView,"private , transient "
org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2986114157496788874L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.MultiValueMap$ReflectionFactory.clazz,Field,No Comment,private final Class<T> clazz;,java.lang.Class clazz,"private , final "
org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.key,Field,No Comment,private final Object key;,java.lang.Object key,"private , final "
org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.values,Field,No Comment,private final Collection<V> values;,java.util.Collection values,"private , final "
org.apache.commons.collections4.map.MultiValueMap$ValuesIterator.iterator,Field,No Comment,private final Iterator<V> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.map.LRUMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -612114643488955218L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.LRUMap.DEFAULT_MAX_SIZE,Field,Default maximum size,protected static final int DEFAULT_MAX_SIZE = 100;,int DEFAULT_MAX_SIZE,"protected , static , final "
org.apache.commons.collections4.map.LRUMap.maxSize,Field,Maximum size,private transient int maxSize;,int maxSize,"private , transient "
org.apache.commons.collections4.map.LRUMap.scanUntilRemovable,Field,Scan behavior,private final boolean scanUntilRemovable;,boolean scanUntilRemovable,"private , final "
org.apache.commons.collections4.map.ReferenceMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1555089888138299607L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.TransformedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 7023152376788900464L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.TransformedMap.keyTransformer,Field,The transformer to use for the key,"protected final Transformer<? super K, ? extends K> keyTransformer;",org.apache.commons.collections4.Transformer keyTransformer,"protected , final "
org.apache.commons.collections4.map.TransformedMap.valueTransformer,Field,The transformer to use for the value,"protected final Transformer<? super V, ? extends V> valueTransformer;",org.apache.commons.collections4.Transformer valueTransformer,"protected , final "
org.apache.commons.collections4.map.CompositeMap.EMPTY_MAP_ARRAY,Field,No Comment,"@SuppressWarnings(""rawtypes"")\nprivate static final Map[] EMPTY_MAP_ARRAY = {};",java.util.Map[] EMPTY_MAP_ARRAY,"private , static , final "
org.apache.commons.collections4.map.CompositeMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -6096931280583808322L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.map.CompositeMap.composite,Field,Array of all maps in the composite,"private Map<K, V>[] composite;",java.util.Map[] composite,private 
org.apache.commons.collections4.map.CompositeMap.mutator,Field,Handle mutation operations,"private MapMutator<K, V> mutator;",org.apache.commons.collections4.map.CompositeMap$MapMutator mutator,private 
org.apache.commons.collections4.keyvalue.MultiKey.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 4465448607415788805L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.keyvalue.MultiKey.keys,Field,The individual keys,private final K[] keys;,java.lang.Object[] keys,"private , final "
org.apache.commons.collections4.keyvalue.MultiKey.hashCode,Field,The cached hashCode,private transient int hashCode;,int hashCode,"private , transient "
org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.entry,Field,The {@code Map.Entry} to decorate,"private final Map.Entry<K, V> entry;",java.util.Map$Entry entry,"private , final "
org.apache.commons.collections4.keyvalue.AbstractKeyValue.key,Field,The key,private K key;,java.lang.Object key,private 
org.apache.commons.collections4.keyvalue.AbstractKeyValue.value,Field,The value,private V value;,java.lang.Object value,private 
org.apache.commons.collections4.keyvalue.TiedMapEntry.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -8453869361373831205L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.keyvalue.TiedMapEntry.map,Field,The map underlying the entry/iterator,"private final Map<K, V> map;",java.util.Map map,"private , final "
org.apache.commons.collections4.keyvalue.TiedMapEntry.key,Field,The key,private final K key;,java.lang.Object key,"private , final "
org.apache.commons.collections4.MultiSetUtils.EMPTY_MULTISET,Field,* An empty unmodifiable multiset.,"// OK, empty multiset is compatible with any type\n@SuppressWarnings(""rawtypes"")\npublic static final MultiSet EMPTY_MULTISET = UnmodifiableMultiSet.unmodifiableMultiSet(new HashMultiSet<>());",org.apache.commons.collections4.MultiSet EMPTY_MULTISET,"public , static , final "
org.apache.commons.collections4.properties.OrderedProperties.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.properties.OrderedProperties.orderedKeys,Field,* Preserves the insertion order.,private final LinkedHashSet<Object> orderedKeys = new LinkedHashSet<>();,java.util.LinkedHashSet orderedKeys,"private , final "
org.apache.commons.collections4.properties.SortedProperties.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.properties.OrderedPropertiesFactory.INSTANCE,Field,* The singleton instance.,public static final OrderedPropertiesFactory INSTANCE = new OrderedPropertiesFactory();,org.apache.commons.collections4.properties.OrderedPropertiesFactory INSTANCE,"public , static , final "
org.apache.commons.collections4.properties.PropertiesFactory.EMPTY_PROPERTIES,Field,* The empty map (immutable). This map is serializable.\n     *\n     * @since 4.5.0-M1,public static final Properties EMPTY_PROPERTIES = new EmptyProperties();,java.util.Properties EMPTY_PROPERTIES,"public , static , final "
org.apache.commons.collections4.properties.PropertiesFactory.INSTANCE,Field,* The singleton instance.,public static final PropertiesFactory INSTANCE = new PropertiesFactory();,org.apache.commons.collections4.properties.PropertiesFactory INSTANCE,"public , static , final "
org.apache.commons.collections4.properties.PropertiesFactory$EmptyProperties.serialVersionUID,Field,No Comment,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.properties.SortedPropertiesFactory.INSTANCE,Field,* The singleton instance.,public static final SortedPropertiesFactory INSTANCE = new SortedPropertiesFactory();,org.apache.commons.collections4.properties.SortedPropertiesFactory INSTANCE,"public , static , final "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.valuesView,Field,The values view,private transient Collection<V> valuesView;,java.util.Collection valuesView,"private , transient "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.entryValuesView,Field,The EntryValues view,private transient EntryValues entryValuesView;,org.apache.commons.collections4.multimap.AbstractMultiValuedMap$EntryValues entryValuesView,"private , transient "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.keysMultiSetView,Field,The KeyMultiSet view,private transient MultiSet<K> keysMultiSetView;,org.apache.commons.collections4.MultiSet keysMultiSetView,"private , transient "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.asMapView,Field,The AsMap view,private transient AsMap asMapView;,org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap asMapView,"private , transient "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap.map,Field,The map used to store the data,"private transient Map<K, Collection<V>> map;",java.util.Map map,"private , transient "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap$AsMap.map,Field,No Comment,"final transient Map<K, Collection<V>> map;",java.util.Map map,"final , transient "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator.it,Field,No Comment,"private final Iterator<Entry<K, V>> it;",java.util.Iterator it,"private , final "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap$MultiValuedMapIterator.current,Field,No Comment,"private Entry<K, V> current;",java.util.Map$Entry current,private 
org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator.key,Field,No Comment,private final Object key;,java.lang.Object key,"private , final "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator.values,Field,No Comment,private final Collection<V> values;,java.util.Collection values,"private , final "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap$ValuesIterator.iterator,Field,No Comment,private final Iterator<V> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.multimap.AbstractMultiValuedMap$WrappedCollection.key,Field,No Comment,protected final K key;,java.lang.Object key,"protected , final "
org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150612L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multimap.HashSetValuedHashMap.serialVersionUID,Field,Serialization Version,private static final long serialVersionUID = 20151118L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multimap.HashSetValuedHashMap.DEFAULT_INITIAL_MAP_CAPACITY,Field,* The initial map capacity used when none specified in constructor.,private static final int DEFAULT_INITIAL_MAP_CAPACITY = 16;,int DEFAULT_INITIAL_MAP_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.HashSetValuedHashMap.DEFAULT_INITIAL_SET_CAPACITY,Field,* The initial set capacity when using none specified in constructor.,private static final int DEFAULT_INITIAL_SET_CAPACITY = 3;,int DEFAULT_INITIAL_SET_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.HashSetValuedHashMap.initialSetCapacity,Field,* The initial list capacity when creating a new value collection.,private final int initialSetCapacity;,int initialSetCapacity,"private , final "
org.apache.commons.collections4.multimap.LinkedHashSetValuedLinkedHashMap.serialVersionUID,Field,Serialization Version,private static final long serialVersionUID = 20241020L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multimap.LinkedHashSetValuedLinkedHashMap.DEFAULT_INITIAL_MAP_CAPACITY,Field,* The initial map capacity used when none specified in constructor.,private static final int DEFAULT_INITIAL_MAP_CAPACITY = 16;,int DEFAULT_INITIAL_MAP_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.LinkedHashSetValuedLinkedHashMap.DEFAULT_INITIAL_SET_CAPACITY,Field,* The initial set capacity when using none specified in constructor.,private static final int DEFAULT_INITIAL_SET_CAPACITY = 3;,int DEFAULT_INITIAL_SET_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.LinkedHashSetValuedLinkedHashMap.initialSetCapacity,Field,* The initial list capacity when creating a new value collection.,private final int initialSetCapacity;,int initialSetCapacity,"private , final "
org.apache.commons.collections4.multimap.TransformedMultiValuedMap.serialVersionUID,Field,Serialization Version,private static final long serialVersionUID = 20150612L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multimap.TransformedMultiValuedMap.keyTransformer,Field,The key transformer,"private final Transformer<? super K, ? extends K> keyTransformer;",org.apache.commons.collections4.Transformer keyTransformer,"private , final "
org.apache.commons.collections4.multimap.TransformedMultiValuedMap.valueTransformer,Field,The value transformer,"private final Transformer<? super V, ? extends V> valueTransformer;",org.apache.commons.collections4.Transformer valueTransformer,"private , final "
org.apache.commons.collections4.multimap.ArrayListValuedLinkedHashMap.serialVersionUID,Field,Serialization Version,private static final long serialVersionUID = 20241014L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multimap.ArrayListValuedLinkedHashMap.DEFAULT_INITIAL_MAP_CAPACITY,Field,* The initial map capacity used when none specified in constructor.,private static final int DEFAULT_INITIAL_MAP_CAPACITY = 16;,int DEFAULT_INITIAL_MAP_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.ArrayListValuedLinkedHashMap.DEFAULT_INITIAL_LIST_CAPACITY,Field,* The initial list capacity when using none specified in constructor.,private static final int DEFAULT_INITIAL_LIST_CAPACITY = 3;,int DEFAULT_INITIAL_LIST_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.ArrayListValuedLinkedHashMap.initialListCapacity,Field,* The initial list capacity when creating a new value collection.,private final int initialListCapacity;,int initialListCapacity,"private , final "
org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.key,Field,No Comment,private final K key;,java.lang.Object key,"private , final "
org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.values,Field,No Comment,private List<V> values;,java.util.List values,private 
org.apache.commons.collections4.multimap.AbstractListValuedMap$ValuesListIterator.iterator,Field,No Comment,private ListIterator<V> iterator;,java.util.ListIterator iterator,private 
org.apache.commons.collections4.multimap.ArrayListValuedHashMap.serialVersionUID,Field,Serialization Version,private static final long serialVersionUID = 20151118L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multimap.ArrayListValuedHashMap.DEFAULT_INITIAL_MAP_CAPACITY,Field,* The initial map capacity used when none specified in constructor.,private static final int DEFAULT_INITIAL_MAP_CAPACITY = 16;,int DEFAULT_INITIAL_MAP_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.ArrayListValuedHashMap.DEFAULT_INITIAL_LIST_CAPACITY,Field,* The initial list capacity when using none specified in constructor.,private static final int DEFAULT_INITIAL_LIST_CAPACITY = 3;,int DEFAULT_INITIAL_LIST_CAPACITY,"private , static , final "
org.apache.commons.collections4.multimap.ArrayListValuedHashMap.initialListCapacity,Field,* The initial list capacity when creating a new value collection.,private final int initialListCapacity;,int initialListCapacity,"private , final "
org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150612L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator.map,Field,MultiValuedMap to decorate,"private final MultiValuedMap<K, V> map;",org.apache.commons.collections4.MultiValuedMap map,"private , final "
org.apache.commons.collections4.list.LazyList.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -3677737457567429713L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.LazyList.factory,Field,The factory to use to lazily instantiate the objects,private final Factory<? extends E> factory;,org.apache.commons.collections4.Factory factory,"private , final "
org.apache.commons.collections4.list.LazyList.transformer,Field,The transformer to use to lazily instantiate the objects,"private final Transformer<Integer, ? extends E> transformer;",org.apache.commons.collections4.Transformer transformer,"private , final "
org.apache.commons.collections4.list.AbstractSerializableListDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2684959196747496299L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.TreeList.root,Field,The root node in the AVL tree,private AVLNode<E> root;,org.apache.commons.collections4.list.TreeList$AVLNode root,private 
org.apache.commons.collections4.list.TreeList.size,Field,The current size of the list,private int size;,int size,private 
org.apache.commons.collections4.list.TreeList$AVLNode.left,Field,The left child node or the predecessor if {@link #leftIsPrevious}.,private AVLNode<E> left;,org.apache.commons.collections4.list.TreeList$AVLNode left,private 
org.apache.commons.collections4.list.TreeList$AVLNode.leftIsPrevious,Field,Flag indicating that left reference is not a subtree but the predecessor.,private boolean leftIsPrevious;,boolean leftIsPrevious,private 
org.apache.commons.collections4.list.TreeList$AVLNode.right,Field,The right child node or the successor if {@link #rightIsNext}.,private AVLNode<E> right;,org.apache.commons.collections4.list.TreeList$AVLNode right,private 
org.apache.commons.collections4.list.TreeList$AVLNode.rightIsNext,Field,Flag indicating that right reference is not a subtree but the successor.,private boolean rightIsNext;,boolean rightIsNext,private 
org.apache.commons.collections4.list.TreeList$AVLNode.height,Field,How many levels of left/right are below this one.,private int height;,int height,private 
org.apache.commons.collections4.list.TreeList$AVLNode.relativePosition,Field,"The relative position, root holds absolute position.",private int relativePosition;,int relativePosition,private 
org.apache.commons.collections4.list.TreeList$AVLNode.value,Field,The stored element.,private E value;,java.lang.Object value,private 
org.apache.commons.collections4.list.TreeList$TreeListIterator.parent,Field,The parent list,private final TreeList<E> parent;,org.apache.commons.collections4.list.TreeList parent,"private , final "
org.apache.commons.collections4.list.TreeList$TreeListIterator.next,Field,* Cache of the next node that will be returned by {@link #next()}.,private AVLNode<E> next;,org.apache.commons.collections4.list.TreeList$AVLNode next,private 
org.apache.commons.collections4.list.TreeList$TreeListIterator.nextIndex,Field,* The index of the next node to be returned.,private int nextIndex;,int nextIndex,private 
org.apache.commons.collections4.list.TreeList$TreeListIterator.current,Field,* Cache of the last node that was returned by {@link #next()}\n         * or {@link #previous()}.,private AVLNode<E> current;,org.apache.commons.collections4.list.TreeList$AVLNode current,private 
org.apache.commons.collections4.list.TreeList$TreeListIterator.currentIndex,Field,* The index of the last node that was returned.,private int currentIndex;,int currentIndex,private 
org.apache.commons.collections4.list.TreeList$TreeListIterator.expectedModCount,Field,"* The modification count that the list is expected to have. If the list\n         * doesn't have this count, then a\n         * {@link java.util.ConcurrentModificationException} may be thrown by\n         * the operations.",private int expectedModCount;,int expectedModCount,private 
org.apache.commons.collections4.list.SetUniqueList.serialVersionUID,Field,Serialization version.,private static final long serialVersionUID = 7196982186153478694L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.SetUniqueList.set,Field,Internal Set to maintain uniqueness.,private final Set<E> set;,java.util.Set set,"private , final "
org.apache.commons.collections4.list.SetUniqueList$SetListIterator.set,Field,No Comment,private final Set<E> set;,java.util.Set set,"private , final "
org.apache.commons.collections4.list.SetUniqueList$SetListIterator.last,Field,No Comment,private E last;,java.lang.Object last,private 
org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.set,Field,No Comment,private final Set<E> set;,java.util.Set set,"private , final "
org.apache.commons.collections4.list.SetUniqueList$SetListListIterator.last,Field,No Comment,private E last;,java.lang.Object last,private 
org.apache.commons.collections4.list.AbstractListDecorator.serialVersionUID,Field,Serialization version--necessary in an abstract class?,private static final long serialVersionUID = 4500739654952315623L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.NodeCachingLinkedList.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 6897789178562232073L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.NodeCachingLinkedList.DEFAULT_MAXIMUM_CACHE_SIZE,Field,* The default value for {@link #maximumCacheSize}.,private static final int DEFAULT_MAXIMUM_CACHE_SIZE = 20;,int DEFAULT_MAXIMUM_CACHE_SIZE,"private , static , final "
org.apache.commons.collections4.list.NodeCachingLinkedList.firstCachedNode,Field,"* The first cached node, or {@code null} if no nodes are cached.\n     * Cached nodes are stored in a singly-linked list with\n     * {@code next} pointing to the next element.",private transient Node<E> firstCachedNode;,org.apache.commons.collections4.list.AbstractLinkedList$Node firstCachedNode,"private , transient "
org.apache.commons.collections4.list.NodeCachingLinkedList.cacheSize,Field,* The size of the cache.,private transient int cacheSize;,int cacheSize,"private , transient "
org.apache.commons.collections4.list.NodeCachingLinkedList.maximumCacheSize,Field,* The maximum size of the cache.,private int maximumCacheSize;,int maximumCacheSize,private 
org.apache.commons.collections4.list.UnmodifiableList.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 6595182819922443652L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.FixedSizeList.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -2218010673611160319L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.AbstractLinkedListJava21.header,Field,* A {@link Node} which indicates the start and end of the list and does not\n     * hold a value. The value of {@code next} is the first item in the\n     * list. The value of {@code previous} is the last item in the list.,transient Node<E> header;,org.apache.commons.collections4.list.AbstractLinkedListJava21$Node header,transient 
org.apache.commons.collections4.list.AbstractLinkedListJava21.size,Field,The size of the list,transient int size;,int size,transient 
org.apache.commons.collections4.list.AbstractLinkedListJava21.modCount,Field,Modification count for iterators,transient int modCount;,int modCount,transient 
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedListIterator.parent,Field,The parent list,protected final AbstractLinkedListJava21<E> parent;,org.apache.commons.collections4.list.AbstractLinkedListJava21 parent,"protected , final "
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedListIterator.next,Field,* The node that will be returned by {@link #next()}. If this is equal\n         * to {@link AbstractLinkedListJava21#header} then there are no more values to return.,protected Node<E> next;,org.apache.commons.collections4.list.AbstractLinkedListJava21$Node next,protected 
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedListIterator.nextIndex,Field,* The index of {@link #next}.,protected int nextIndex;,int nextIndex,protected 
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedListIterator.current,Field,"* The last node that was returned by {@link #next()} or {@link\n         * #previous()}. Set to {@code null} if {@link #next()} or {@link\n         * #previous()} haven't been called, or if the node has been removed\n         * with {@link #remove()} or a new node added with {@link #add(Object)}.\n         * Should be accessed through {@link #getLastNodeReturned()} to enforce\n         * this behavior.",protected Node<E> current;,org.apache.commons.collections4.list.AbstractLinkedListJava21$Node current,protected 
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedListIterator.expectedModCount,Field,"* The modification count that the list is expected to have. If the list\n         * doesn't have this count, then a\n         * {@link java.util.ConcurrentModificationException} may be thrown by\n         * the operations.",protected int expectedModCount;,int expectedModCount,protected 
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedSubList.parent,Field,The main list,AbstractLinkedListJava21<E> parent;,org.apache.commons.collections4.list.AbstractLinkedListJava21 parent,default
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedSubList.offset,Field,Offset from the main list,int offset;,int offset,default
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedSubList.size,Field,Sublist size,int size;,int size,default
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedSubList.expectedModCount,Field,Sublist modCount,int expectedModCount;,int expectedModCount,default
org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedSubListIterator.sub,Field,The sub list,protected final LinkedSubList<E> sub;,org.apache.commons.collections4.list.AbstractLinkedListJava21$LinkedSubList sub,"protected , final "
org.apache.commons.collections4.list.AbstractLinkedListJava21$Node.previous,Field,A pointer to the node before this node,protected Node<E> previous;,org.apache.commons.collections4.list.AbstractLinkedListJava21$Node previous,protected 
org.apache.commons.collections4.list.AbstractLinkedListJava21$Node.next,Field,A pointer to the node after this node,protected Node<E> next;,org.apache.commons.collections4.list.AbstractLinkedListJava21$Node next,protected 
org.apache.commons.collections4.list.AbstractLinkedListJava21$Node.value,Field,The object contained within this node,protected E value;,java.lang.Object value,protected 
org.apache.commons.collections4.list.TransformedList.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1077193035000013141L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.GrowthList.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -3620001881672L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.AbstractLinkedList.header,Field,* A {@link Node} which indicates the start and end of the list and does not\n     * hold a value. The value of {@code next} is the first item in the\n     * list. The value of {@code previous} is the last item in the list.,transient Node<E> header;,org.apache.commons.collections4.list.AbstractLinkedList$Node header,transient 
org.apache.commons.collections4.list.AbstractLinkedList.size,Field,The size of the list,transient int size;,int size,transient 
org.apache.commons.collections4.list.AbstractLinkedList.modCount,Field,Modification count for iterators,transient int modCount;,int modCount,transient 
org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.parent,Field,The parent list,protected final AbstractLinkedList<E> parent;,org.apache.commons.collections4.list.AbstractLinkedList parent,"protected , final "
org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.next,Field,* The node that will be returned by {@link #next()}. If this is equal\n         * to {@link AbstractLinkedList#header} then there are no more values to return.,protected Node<E> next;,org.apache.commons.collections4.list.AbstractLinkedList$Node next,protected 
org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.nextIndex,Field,* The index of {@link #next}.,protected int nextIndex;,int nextIndex,protected 
org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.current,Field,"* The last node that was returned by {@link #next()} or {@link\n         * #previous()}. Set to {@code null} if {@link #next()} or {@link\n         * #previous()} haven't been called, or if the node has been removed\n         * with {@link #remove()} or a new node added with {@link #add(Object)}.\n         * Should be accessed through {@link #getLastNodeReturned()} to enforce\n         * this behavior.",protected Node<E> current;,org.apache.commons.collections4.list.AbstractLinkedList$Node current,protected 
org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.expectedModCount,Field,"* The modification count that the list is expected to have. If the list\n         * doesn't have this count, then a\n         * {@link java.util.ConcurrentModificationException} may be thrown by\n         * the operations.",protected int expectedModCount;,int expectedModCount,protected 
org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.parent,Field,The main list,AbstractLinkedList<E> parent;,org.apache.commons.collections4.list.AbstractLinkedList parent,default
org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.offset,Field,Offset from the main list,int offset;,int offset,default
org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.size,Field,Sublist size,int size;,int size,default
org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList.expectedModCount,Field,Sublist modCount,int expectedModCount;,int expectedModCount,default
org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubListIterator.sub,Field,The sub list.,protected final LinkedSubList<E> sub;,org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList sub,"protected , final "
org.apache.commons.collections4.list.AbstractLinkedList$Node.previous,Field,A pointer to the node before this node,protected Node<E> previous;,org.apache.commons.collections4.list.AbstractLinkedList$Node previous,protected 
org.apache.commons.collections4.list.AbstractLinkedList$Node.next,Field,A pointer to the node after this node,protected Node<E> next;,org.apache.commons.collections4.list.AbstractLinkedList$Node next,protected 
org.apache.commons.collections4.list.AbstractLinkedList$Node.value,Field,The object contained within this node,protected E value;,java.lang.Object value,protected 
org.apache.commons.collections4.list.CursorableLinkedList.serialVersionUID,Field,Ensure serialization compatibility,private static final long serialVersionUID = 8836393098519411393L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.list.CursorableLinkedList.cursors,Field,A list of the cursor currently open on this list,private transient List<WeakReference<Cursor<E>>> cursors;,java.util.List cursors,"private , transient "
org.apache.commons.collections4.list.CursorableLinkedList$Cursor.valid,Field,Is the cursor valid (not closed),boolean valid = true;,boolean valid,default
org.apache.commons.collections4.list.CursorableLinkedList$Cursor.nextIndexValid,Field,Is the next index valid,boolean nextIndexValid = true;,boolean nextIndexValid,default
org.apache.commons.collections4.list.CursorableLinkedList$Cursor.currentRemovedByAnother,Field,Flag to indicate if the current element was removed by another object.,boolean currentRemovedByAnother;,boolean currentRemovedByAnother,default
org.apache.commons.collections4.list.CursorableLinkedList$SubCursor.sub,Field,The parent list,protected final LinkedSubList<E> sub;,org.apache.commons.collections4.list.AbstractLinkedList$LinkedSubList sub,"protected , final "
org.apache.commons.collections4.list.PredicatedList.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -5722039223898659102L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.queue.AbstractQueueDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -2629815475789577029L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.queue.TransformedQueue.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -7901091318986132033L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.queue.UnmodifiableQueue.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1832948656215393357L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.queue.CircularFifoQueue.serialVersionUID,Field,Serialization version.,private static final long serialVersionUID = -8423413834657610406L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.queue.CircularFifoQueue.elements,Field,Underlying storage array.,private transient E[] elements;,java.lang.Object[] elements,"private , transient "
org.apache.commons.collections4.queue.CircularFifoQueue.start,Field,Array index of first (oldest) queue element.,private transient int start;,int start,"private , transient "
org.apache.commons.collections4.queue.CircularFifoQueue.end,Field,"* Index mod maxElements of the array position following the last queue\n     * element.  Queue elements start at elements[start] and ""wrap around""\n     * elements[maxElements-1], ending at elements[decrement(end)].\n     * For example, elements = {c,a,b}, start=1, end=1 corresponds to\n     * the queue [a,b,c].",private transient int end;,int end,"private , transient "
org.apache.commons.collections4.queue.CircularFifoQueue.full,Field,Flag to indicate if the queue is currently full.,private transient boolean full;,boolean full,"private , transient "
org.apache.commons.collections4.queue.CircularFifoQueue.maxElements,Field,Capacity of the queue.,private final int maxElements;,int maxElements,"private , final "
org.apache.commons.collections4.queue.SynchronizedQueue.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.queue.PredicatedQueue.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2307609000539943581L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.FluentIterable.iterable,Field,A reference to the wrapped iterable.,private final Iterable<E> iterable;,java.lang.Iterable iterable,"private , final "
org.apache.commons.collections4.SetUtils.EMPTY_SORTED_SET,Field,* An empty unmodifiable sorted set.\n     * This is not provided in the JDK.,"@SuppressWarnings(""rawtypes"")\npublic static final SortedSet EMPTY_SORTED_SET = UnmodifiableSortedSet.unmodifiableSortedSet(new TreeSet<>());",java.util.SortedSet EMPTY_SORTED_SET,"public , static , final "
org.apache.commons.collections4.ArrayStack.serialVersionUID,Field,Ensure serialization compatibility,private static final long serialVersionUID = 2130079159931574599L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bloomfilter.SparseBloomFilter.indices,Field,* The bitSet that defines this BloomFilter.,private final TreeSet<Integer> indices;,java.util.TreeSet indices,"private , final "
org.apache.commons.collections4.bloomfilter.SparseBloomFilter.shape,Field,* The shape of this BloomFilter.,private final Shape shape;,org.apache.commons.collections4.bloomfilter.Shape shape,"private , final "
org.apache.commons.collections4.bloomfilter.BitMaps.DIVIDE_BY_64,Field,A bit shift to apply to an integer to divided by 64 (2^6).,private static final int DIVIDE_BY_64 = 6;,int DIVIDE_BY_64,"private , static , final "
org.apache.commons.collections4.bloomfilter.CountingLongPredicate.idx,Field,No Comment,private int idx;,int idx,private 
org.apache.commons.collections4.bloomfilter.CountingLongPredicate.ary,Field,No Comment,private final long[] ary;,long[] ary,"private , final "
org.apache.commons.collections4.bloomfilter.CountingLongPredicate.func,Field,No Comment,private final LongBiPredicate func;,org.apache.commons.collections4.bloomfilter.LongBiPredicate func,"private , final "
org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher.initial,Field,* The initial hash value.,private final long initial;,long initial,"private , final "
org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher.increment,Field,* The value to increment the hash value by.,private final long increment;,long increment,"private , final "
org.apache.commons.collections4.bloomfilter.IndexFilter.tracker,Field,No Comment,private final IntPredicate tracker;,java.util.function.IntPredicate tracker,"private , final "
org.apache.commons.collections4.bloomfilter.IndexFilter.size,Field,No Comment,private final int size;,int size,"private , final "
org.apache.commons.collections4.bloomfilter.IndexFilter.consumer,Field,No Comment,private final IntPredicate consumer;,java.util.function.IntPredicate consumer,"private , final "
org.apache.commons.collections4.bloomfilter.IndexFilter$ArrayTracker.seen,Field,No Comment,private final int[] seen;,int[] seen,"private , final "
org.apache.commons.collections4.bloomfilter.IndexFilter$ArrayTracker.populated,Field,No Comment,private int populated;,int populated,private 
org.apache.commons.collections4.bloomfilter.IndexFilter$BitMapTracker.bits,Field,No Comment,private final long[] bits;,long[] bits,"private , final "
org.apache.commons.collections4.bloomfilter.CountingPredicate.idx,Field,No Comment,private int idx;,int idx,private 
org.apache.commons.collections4.bloomfilter.CountingPredicate.ary,Field,No Comment,private final T[] ary;,java.lang.Object[] ary,"private , final "
org.apache.commons.collections4.bloomfilter.CountingPredicate.func,Field,No Comment,"private final BiPredicate<T, T> func;",java.util.function.BiPredicate func,"private , final "
org.apache.commons.collections4.bloomfilter.WrappedBloomFilter.wrapped,Field,No Comment,private final W wrapped;,org.apache.commons.collections4.bloomfilter.BloomFilter wrapped,"private , final "
org.apache.commons.collections4.bloomfilter.BloomFilter.SPARSE,Field,* The sparse characteristic used to determine the best method for matching: {@value}.\n     * <p>\n     * For `sparse` implementations the {@code forEachIndex(IntConsumer consumer)} method is more efficient. For non `sparse` implementations the\n     * {@code forEachBitMap(LongConsumer consumer)} is more efficient. Implementers should determine if it is easier.\n     * </p>,int SPARSE = 0x1;,int SPARSE,default
org.apache.commons.collections4.bloomfilter.LayeredBloomFilter.shape,Field,No Comment,private final Shape shape;,org.apache.commons.collections4.bloomfilter.Shape shape,"private , final "
org.apache.commons.collections4.bloomfilter.LayeredBloomFilter.layerManager,Field,No Comment,private final LayerManager<T> layerManager;,org.apache.commons.collections4.bloomfilter.LayerManager layerManager,"private , final "
org.apache.commons.collections4.bloomfilter.LayeredBloomFilter$Finder.result,Field,No Comment,int[] result = new int[layerManager.getDepth()];,int[] result,default
org.apache.commons.collections4.bloomfilter.LayeredBloomFilter$Finder.bfIdx,Field,No Comment,int bfIdx;,int bfIdx,default
org.apache.commons.collections4.bloomfilter.LayeredBloomFilter$Finder.resultIdx,Field,No Comment,int resultIdx;,int resultIdx,default
org.apache.commons.collections4.bloomfilter.LayeredBloomFilter$Finder.bf,Field,No Comment,BloomFilter<?> bf;,org.apache.commons.collections4.bloomfilter.BloomFilter bf,default
org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.shape,Field,* The shape of this Bloom filter.,private final Shape shape;,org.apache.commons.collections4.bloomfilter.Shape shape,"private , final "
org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.cells,Field,* The cell for each bit index in the filter.,private final int[] cells;,int[] cells,"private , final "
org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter.state,Field,* The state flag. This is a bitwise {@code OR} of the entire history of all updated\n     * cells. If negative then a negative cell or integer overflow has occurred on\n     * one or more cells in the history of the filter and the state is invalid.\n     *\n     * <p>Maintenance of this state flag is branch-free for improved performance. It\n     * eliminates a conditional check for a negative cell during remove/subtract\n     * operations and a conditional check for integer overflow during merge/add\n     * operations.</p>\n     *\n     * <p>Note: Integer overflow is unlikely in realistic usage scenarios. A cell\n     * that overflows indicates that the number of items in the filter exceeds the\n     * maximum possible size (number of bits) of any Bloom filter constrained by\n     * integer indices. At this point the filter is most likely full (all bits are\n     * non-zero) and thus useless.</p>\n     *\n     * <p>Negative cells are a concern if the filter is used incorrectly by\n     * removing an item that was never added. It is expected that a user of a\n     * counting Bloom filter will not perform this action as it is a mistake.\n     * Enabling an explicit recovery path for negative or overflow cells is a major\n     * performance burden not deemed necessary for the unlikely scenarios when an\n     * invalid state is created. Maintenance of the state flag is a concession to\n     * flag improper use that should not have a major performance impact.</p>,private int state;,int state,private 
org.apache.commons.collections4.bloomfilter.LayerManager.filters,Field,No Comment,private final LinkedList<T> filters = new LinkedList<>();,java.util.LinkedList filters,"private , final "
org.apache.commons.collections4.bloomfilter.LayerManager.filterCleanup,Field,No Comment,private final Consumer<Deque<T>> filterCleanup;,java.util.function.Consumer filterCleanup,"private , final "
org.apache.commons.collections4.bloomfilter.LayerManager.extendCheck,Field,No Comment,private final Predicate<LayerManager<T>> extendCheck;,java.util.function.Predicate extendCheck,"private , final "
org.apache.commons.collections4.bloomfilter.LayerManager.filterSupplier,Field,No Comment,private final Supplier<T> filterSupplier;,java.util.function.Supplier filterSupplier,"private , final "
org.apache.commons.collections4.bloomfilter.LayerManager$Builder.extendCheck,Field,No Comment,private Predicate<LayerManager<T>> extendCheck;,java.util.function.Predicate extendCheck,private 
org.apache.commons.collections4.bloomfilter.LayerManager$Builder.supplier,Field,No Comment,private Supplier<T> supplier;,java.util.function.Supplier supplier,private 
org.apache.commons.collections4.bloomfilter.LayerManager$Builder.cleanup,Field,No Comment,private Consumer<Deque<T>> cleanup;,java.util.function.Consumer cleanup,private 
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.bitMap,Field,* The array of bit map longs that defines this Bloom filter. Will be null if the filter is empty.,private final long[] bitMap;,long[] bitMap,"private , final "
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.shape,Field,* The Shape of this Bloom filter.,private final Shape shape;,org.apache.commons.collections4.bloomfilter.Shape shape,"private , final "
org.apache.commons.collections4.bloomfilter.SimpleBloomFilter.cardinality,Field,* The cardinality of this Bloom filter.,private int cardinality;,int cardinality,private 
org.apache.commons.collections4.bloomfilter.IndexUtils.MAX_ARRAY_SIZE,Field,* The maximum array size for the methods in this class: {@value}.,static final int MAX_ARRAY_SIZE = Integer.MAX_VALUE - 8;,int MAX_ARRAY_SIZE,"static , final "
org.apache.commons.collections4.bloomfilter.Shape.LN_2,Field,* The natural logarithm of 2. Used in several calculations. Approximately 0.693147180559945.,private static final double LN_2 = Math.log(2.0);,double LN_2,"private , static , final "
org.apache.commons.collections4.bloomfilter.Shape.DENOMINATOR,Field,* ln(1 / 2^ln(2)). Used in calculating the number of bits. Approximately -0.480453013918201.\n     *\n     * <p>ln(1 / 2^ln(2)) = ln(1) - ln(2^ln(2)) = -ln(2) * ln(2)</p>,private static final double DENOMINATOR = -LN_2 * LN_2;,double DENOMINATOR,"private , static , final "
org.apache.commons.collections4.bloomfilter.Shape.numberOfHashFunctions,Field,* Number of hash functions to create a filter ({@code k}).,private final int numberOfHashFunctions;,int numberOfHashFunctions,"private , final "
org.apache.commons.collections4.bloomfilter.Shape.numberOfBits,Field,* Number of bits in the filter ({@code m}).,private final int numberOfBits;,int numberOfBits,"private , final "
org.apache.commons.collections4.set.TransformedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 306127383500410386L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.CompositeSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 5185069727540378940L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.CompositeSet.mutator,Field,SetMutator to handle changes to the collection,private SetMutator<E> mutator;,org.apache.commons.collections4.set.CompositeSet$SetMutator mutator,private 
org.apache.commons.collections4.set.CompositeSet.all,Field,Sets in the composite,private final List<Set<E>> all = new ArrayList<>();,java.util.List all,"private , final "
org.apache.commons.collections4.set.TransformedNavigableSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150528L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.PredicatedNavigableSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150528L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.AbstractSetDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -4678668309576958546L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.ListOrderedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -228664372470420141L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.ListOrderedSet.setOrder,Field,Internal list to hold the sequence of objects,private final List<E> setOrder;,java.util.List setOrder,"private , final "
org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.set,Field,Object we iterate on,private final Collection<E> set;,java.util.Collection set,"private , final "
org.apache.commons.collections4.set.ListOrderedSet$OrderedSetIterator.last,Field,Last object retrieved,private E last;,java.lang.Object last,private 
org.apache.commons.collections4.set.UnmodifiableSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 6499119872185240161L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.AbstractSerializableSetDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 1229469966212206107L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.MapBackedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 6723912213766056587L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.MapBackedSet.map,Field,The map being used as the backing store,"private final Map<E, ? super V> map;",java.util.Map map,"private , final "
org.apache.commons.collections4.set.MapBackedSet.dummyValue,Field,The dummyValue to use,private final V dummyValue;,java.lang.Object dummyValue,"private , final "
org.apache.commons.collections4.set.UnmodifiableSortedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -725356885467962424L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.PredicatedSortedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -9110948148132275052L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.AbstractSortedSetDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -3462240946294214398L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.PredicatedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -684521469108685117L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.AbstractNavigableSetDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150528L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.UnmodifiableNavigableSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150528L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.set.TransformedSortedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -1675486811351124386L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.sequence.SequencesComparator.sequence1,Field,First sequence.,private final List<T> sequence1;,java.util.List sequence1,"private , final "
org.apache.commons.collections4.sequence.SequencesComparator.sequence2,Field,Second sequence.,private final List<T> sequence2;,java.util.List sequence2,"private , final "
org.apache.commons.collections4.sequence.SequencesComparator.equator,Field,The equator used for testing object equality.,private final Equator<? super T> equator;,org.apache.commons.collections4.Equator equator,"private , final "
org.apache.commons.collections4.sequence.SequencesComparator.vDown,Field,Temporary variables.,private final int[] vDown;,int[] vDown,"private , final "
org.apache.commons.collections4.sequence.SequencesComparator.vUp,Field,No Comment,private final int[] vUp;,int[] vUp,"private , final "
org.apache.commons.collections4.sequence.SequencesComparator$Snake.start,Field,Start index.,private final int start;,int start,"private , final "
org.apache.commons.collections4.sequence.SequencesComparator$Snake.end,Field,End index.,private final int end;,int end,"private , final "
org.apache.commons.collections4.sequence.SequencesComparator$Snake.diag,Field,Diagonal number.,private final int diag;,int diag,"private , final "
org.apache.commons.collections4.sequence.ReplacementsFinder.pendingInsertions,Field,No Comment,private final List<T> pendingInsertions;,java.util.List pendingInsertions,"private , final "
org.apache.commons.collections4.sequence.ReplacementsFinder.pendingDeletions,Field,No Comment,private final List<T> pendingDeletions;,java.util.List pendingDeletions,"private , final "
org.apache.commons.collections4.sequence.ReplacementsFinder.skipped,Field,No Comment,private int skipped;,int skipped,private 
org.apache.commons.collections4.sequence.ReplacementsFinder.handler,Field,Handler to call when synchronized sequences are found.,private final ReplacementsHandler<T> handler;,org.apache.commons.collections4.sequence.ReplacementsHandler handler,"private , final "
org.apache.commons.collections4.sequence.EditCommand.object,Field,Object on which the command should be applied.,private final T object;,java.lang.Object object,"private , final "
org.apache.commons.collections4.sequence.EditScript.commands,Field,Container for the commands.,private final List<EditCommand<T>> commands;,java.util.List commands,"private , final "
org.apache.commons.collections4.sequence.EditScript.lcsLength,Field,Length of the longest common subsequence.,private int lcsLength;,int lcsLength,private 
org.apache.commons.collections4.sequence.EditScript.modifications,Field,Number of modifications.,private int modifications;,int modifications,private 
org.apache.commons.collections4.QueueUtils.EMPTY_QUEUE,Field,* An empty unmodifiable queue.,"// OK, empty queue is compatible with any type\n@SuppressWarnings(""rawtypes"")\npublic static final Queue EMPTY_QUEUE = UnmodifiableQueue.unmodifiableQueue(new LinkedList<>());",java.util.Queue EMPTY_QUEUE,"public , static , final "
org.apache.commons.collections4.bag.SynchronizedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 8084674570753837109L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.SynchronizedBag$SynchronizedBagSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 2990565892366827855L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.AbstractMapBag.map,Field,The map to use to store the data,"private transient Map<E, MutableInteger> map;",java.util.Map map,"private , transient "
org.apache.commons.collections4.bag.AbstractMapBag.size,Field,The current total size of the bag,private int size;,int size,private 
org.apache.commons.collections4.bag.AbstractMapBag.modCount,Field,The modification count for fail fast iterators,private transient int modCount;,int modCount,"private , transient "
org.apache.commons.collections4.bag.AbstractMapBag.uniqueSet,Field,Unique view of the elements,private transient Set<E> uniqueSet;,java.util.Set uniqueSet,"private , transient "
org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.parent,Field,No Comment,private final AbstractMapBag<E> parent;,org.apache.commons.collections4.bag.AbstractMapBag parent,"private , final "
org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.entryIterator,Field,No Comment,"private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;",java.util.Iterator entryIterator,"private , final "
org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.current,Field,No Comment,"private Map.Entry<E, MutableInteger> current;",java.util.Map$Entry current,private 
org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.itemCount,Field,No Comment,private int itemCount;,int itemCount,private 
org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.mods,Field,No Comment,private final int mods;,int mods,"private , final "
org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.canRemove,Field,No Comment,private boolean canRemove;,boolean canRemove,private 
org.apache.commons.collections4.bag.AbstractMapBag$MutableInteger.value,Field,The value of this mutable.,protected int value;,int value,protected 
org.apache.commons.collections4.bag.CollectionBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -2560033712679053143L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.UnmodifiableBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -1873799975157099624L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.PredicatedSortedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 3448581314086406616L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.UnmodifiableSortedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -3190437252665717841L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.HashBag.serialVersionUID,Field,Serial version lock,private static final long serialVersionUID = -6561115435802554013L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.AbstractBagDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -3768146017343785417L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.TransformedSortedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -251737742649401930L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.TreeBag.serialVersionUID,Field,Serial version lock,private static final long serialVersionUID = -7740146511091606676L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.PredicatedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -2575833140344736876L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.SynchronizedSortedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 722374056718497858L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.CollectionSortedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -2560033712679053143L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.TransformedBag.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 5421170911299074185L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.bag.AbstractSortedBagDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = -8223473624050467718L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multiset.HashMultiSet.serialVersionUID,Field,Serial version lock,private static final long serialVersionUID = 20150610L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multiset.AbstractMultiSet.uniqueSet,Field,View of the elements,private transient Set<E> uniqueSet;,java.util.Set uniqueSet,"private , transient "
org.apache.commons.collections4.multiset.AbstractMultiSet.entrySet,Field,View of the entries,private transient Set<Entry<E>> entrySet;,java.util.Set entrySet,"private , transient "
org.apache.commons.collections4.multiset.AbstractMultiSet$EntrySet.parent,Field,No Comment,private final AbstractMultiSet<E> parent;,org.apache.commons.collections4.multiset.AbstractMultiSet parent,"private , final "
org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator.parent,Field,No Comment,private final AbstractMultiSet<E> parent;,org.apache.commons.collections4.multiset.AbstractMultiSet parent,"private , final "
org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator.entryIterator,Field,No Comment,private final Iterator<Entry<E>> entryIterator;,java.util.Iterator entryIterator,"private , final "
org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator.current,Field,No Comment,private Entry<E> current;,org.apache.commons.collections4.MultiSet$Entry current,private 
org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator.itemCount,Field,No Comment,private int itemCount;,int itemCount,private 
org.apache.commons.collections4.multiset.AbstractMultiSet$MultiSetIterator.canRemove,Field,No Comment,private boolean canRemove;,boolean canRemove,private 
org.apache.commons.collections4.multiset.AbstractMultiSet$UniqueSet.parent,Field,The parent multiset,protected final AbstractMultiSet<E> parent;,org.apache.commons.collections4.multiset.AbstractMultiSet parent,"protected , final "
org.apache.commons.collections4.multiset.PredicatedMultiSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150629L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multiset.AbstractMultiSetDecorator.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150610L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet.map,Field,The map to use to store the data,"private transient Map<E, MutableInteger> map;",java.util.Map map,"private , transient "
org.apache.commons.collections4.multiset.AbstractMapMultiSet.size,Field,The current total size of the multiset,private transient int size;,int size,"private , transient "
org.apache.commons.collections4.multiset.AbstractMapMultiSet.modCount,Field,The modification count for fail fast iterators,private transient int modCount;,int modCount,"private , transient "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator.parent,Field,The parent map,protected final AbstractMapMultiSet<E> parent;,org.apache.commons.collections4.multiset.AbstractMapMultiSet parent,"protected , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator.decorated,Field,* The source Iterator.,"protected final Iterator<Map.Entry<E, MutableInteger>> decorated;",java.util.Iterator decorated,"protected , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator.last,Field,The last returned entry,protected Entry<E> last;,org.apache.commons.collections4.MultiSet$Entry last,protected 
org.apache.commons.collections4.multiset.AbstractMapMultiSet$EntrySetIterator.canRemove,Field,Whether remove is allowed at present,protected boolean canRemove;,boolean canRemove,protected 
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator.parent,Field,No Comment,private final AbstractMapMultiSet<E> parent;,org.apache.commons.collections4.multiset.AbstractMapMultiSet parent,"private , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator.entryIterator,Field,No Comment,"private final Iterator<Map.Entry<E, MutableInteger>> entryIterator;",java.util.Iterator entryIterator,"private , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator.current,Field,No Comment,"private Map.Entry<E, MutableInteger> current;",java.util.Map$Entry current,private 
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator.itemCount,Field,No Comment,private int itemCount;,int itemCount,private 
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator.mods,Field,No Comment,private final int mods;,int mods,"private , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MapBasedMultiSetIterator.canRemove,Field,No Comment,private boolean canRemove;,boolean canRemove,private 
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MultiSetEntry.parentEntry,Field,* The parent entry.,"protected final Map.Entry<E, MutableInteger> parentEntry;",java.util.Map$Entry parentEntry,"protected , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger.value,Field,The value of this mutable.,protected int value;,int value,protected 
org.apache.commons.collections4.multiset.AbstractMapMultiSet$UniqueSetIterator.parent,Field,The parent multiset,protected final AbstractMapMultiSet<E> parent;,org.apache.commons.collections4.multiset.AbstractMapMultiSet parent,"protected , final "
org.apache.commons.collections4.multiset.AbstractMapMultiSet$UniqueSetIterator.lastElement,Field,The last returned element,protected E lastElement;,java.lang.Object lastElement,protected 
org.apache.commons.collections4.multiset.AbstractMapMultiSet$UniqueSetIterator.canRemove,Field,Whether remove is allowed at present,protected boolean canRemove;,boolean canRemove,protected 
org.apache.commons.collections4.multiset.UnmodifiableMultiSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150611L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multiset.SynchronizedMultiSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150629L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.multiset.SynchronizedMultiSet$SynchronizedSet.serialVersionUID,Field,Serialization version,private static final long serialVersionUID = 20150629L;,long serialVersionUID,"private , static , final "
org.apache.commons.collections4.BagUtils.EMPTY_BAG,Field,* An empty unmodifiable bag.,"// OK, empty bag is compatible with any type\n@SuppressWarnings(""rawtypes"")\npublic static final Bag EMPTY_BAG = UnmodifiableBag.unmodifiableBag(new HashBag<>());",org.apache.commons.collections4.Bag EMPTY_BAG,"public , static , final "
org.apache.commons.collections4.BagUtils.EMPTY_SORTED_BAG,Field,* An empty unmodifiable sorted bag.,"// OK, empty bag is compatible with any type\n@SuppressWarnings(""rawtypes"")\npublic static final Bag EMPTY_SORTED_BAG = UnmodifiableSortedBag.unmodifiableSortedBag(new TreeBag<>());",org.apache.commons.collections4.Bag EMPTY_SORTED_BAG,"public , static , final "
org.apache.commons.collections4.iterators.IteratorChain.iteratorQueue,Field,The chain of iterators,private final Queue<Iterator<? extends E>> iteratorQueue = new LinkedList<>();,java.util.Queue iteratorQueue,"private , final "
org.apache.commons.collections4.iterators.IteratorChain.currentIterator,Field,The current iterator,private Iterator<? extends E> currentIterator;,java.util.Iterator currentIterator,private 
org.apache.commons.collections4.iterators.IteratorChain.lastUsedIterator,Field,"* The ""last used"" Iterator is the Iterator upon which next() or hasNext()\n     * was most recently called used for the remove() operation only",private Iterator<? extends E> lastUsedIterator;,java.util.Iterator lastUsedIterator,private 
org.apache.commons.collections4.iterators.IteratorChain.isLocked,Field,"* ComparatorChain is ""locked"" after the first time compare(Object,Object)\n     * is called",private boolean isLocked;,boolean isLocked,private 
org.apache.commons.collections4.iterators.EmptyListIterator.RESETTABLE_INSTANCE,Field,* Singleton instance of the iterator.\n     *\n     * @since 3.1,"@SuppressWarnings(""rawtypes"")\npublic static final ResettableListIterator RESETTABLE_INSTANCE = new EmptyListIterator<>();",org.apache.commons.collections4.ResettableListIterator RESETTABLE_INSTANCE,"public , static , final "
org.apache.commons.collections4.iterators.EmptyListIterator.INSTANCE,Field,* Singleton instance of the iterator.\n     *\n     * @since 2.1.1 and 3.1,"@SuppressWarnings(""rawtypes"")\npublic static final ListIterator INSTANCE = RESETTABLE_INSTANCE;",java.util.ListIterator INSTANCE,"public , static , final "
org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.iterator,Field,The iterator being decorated,"private final OrderedMapIterator<? extends K, ? extends V> iterator;",org.apache.commons.collections4.OrderedMapIterator iterator,"private , final "
org.apache.commons.collections4.iterators.CartesianProductIterator.iterables,Field,* The iterables to create the Cartesian product from.,private final List<Iterable<? extends E>> iterables;,java.util.List iterables,"private , final "
org.apache.commons.collections4.iterators.CartesianProductIterator.iterators,Field,* The iterators to generate the Cartesian product tuple from.,private final List<Iterator<? extends E>> iterators;,java.util.List iterators,"private , final "
org.apache.commons.collections4.iterators.CartesianProductIterator.previousTuple,Field,* The previous generated tuple of elements.,private List<E> previousTuple;,java.util.List previousTuple,private 
org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.iterator,Field,The iterator being decorated,private final ListIterator<E> iterator;,java.util.ListIterator iterator,"private , final "
org.apache.commons.collections4.iterators.ZippingIterator.iterators,Field,The {@link Iterator}s to evaluate.,private final Iterator<Iterator<? extends E>> iterators;,java.util.Iterator iterators,"private , final "
org.apache.commons.collections4.iterators.ZippingIterator.nextIterator,Field,The next iterator to use for next().,private Iterator<? extends E> nextIterator;,java.util.Iterator nextIterator,private 
org.apache.commons.collections4.iterators.ZippingIterator.lastReturned,Field,The last iterator which was used for next().,private Iterator<? extends E> lastReturned;,java.util.Iterator lastReturned,private 
org.apache.commons.collections4.iterators.UnmodifiableIterator.iterator,Field,The iterator being decorated,private final Iterator<? extends E> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.iterators.CollatingIterator.comparator,Field,The {@link Comparator} used to evaluate order.,private Comparator<? super E> comparator;,java.util.Comparator comparator,private 
org.apache.commons.collections4.iterators.CollatingIterator.iterators,Field,The list of {@link Iterator}s to evaluate.,private final List<Iterator<? extends E>> iterators;,java.util.List iterators,"private , final "
org.apache.commons.collections4.iterators.CollatingIterator.values,Field,{@link Iterator#next Next} objects peeked from each iterator.,private List<E> values;,java.util.List values,private 
org.apache.commons.collections4.iterators.CollatingIterator.valueSet,Field,Whether or not each {@link #values} element has been set.,private BitSet valueSet;,java.util.BitSet valueSet,private 
org.apache.commons.collections4.iterators.CollatingIterator.lastReturned,Field,* Index of the {@link #iterators iterator} from whom the last returned\n     * value was obtained.,private int lastReturned = -1;,int lastReturned,private 
org.apache.commons.collections4.iterators.ReverseListIterator.list,Field,The list being wrapped.,private final List<E> list;,java.util.List list,"private , final "
org.apache.commons.collections4.iterators.ReverseListIterator.iterator,Field,The list iterator being wrapped.,private ListIterator<E> iterator;,java.util.ListIterator iterator,private 
org.apache.commons.collections4.iterators.ReverseListIterator.validForUpdate,Field,Flag to indicate if updating is possible at the moment.,private boolean validForUpdate = true;,boolean validForUpdate,private 
org.apache.commons.collections4.iterators.BoundedIterator.iterator,Field,The iterator being decorated.,private final Iterator<? extends E> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.iterators.BoundedIterator.offset,Field,The offset to bound the first element return,private final long offset;,long offset,"private , final "
org.apache.commons.collections4.iterators.BoundedIterator.max,Field,The max number of elements to return,private final long max;,long max,"private , final "
org.apache.commons.collections4.iterators.BoundedIterator.pos,Field,The position of the current element,private long pos;,long pos,private 
org.apache.commons.collections4.iterators.TransformIterator.iterator,Field,The iterator being used,private Iterator<? extends I> iterator;,java.util.Iterator iterator,private 
org.apache.commons.collections4.iterators.TransformIterator.transformer,Field,The transformer being used,"private Transformer<? super I, ? extends O> transformer;",org.apache.commons.collections4.Transformer transformer,private 
org.apache.commons.collections4.iterators.NodeListIterator.nodeList,Field,The original NodeList instance,private final NodeList nodeList;,org.w3c.dom.NodeList nodeList,"private , final "
org.apache.commons.collections4.iterators.NodeListIterator.index,Field,The current iterator index,private int index;,int index,private 
org.apache.commons.collections4.iterators.ArrayListIterator.lastItemIndex,Field,* Holds the index of the last item returned by a call to {@code next()}\n     * or {@code previous()}. This is set to {@code -1} if neither method\n     * has yet been invoked. {@code lastItemIndex} is used to implement\n     * the {@link #set} method.,private int lastItemIndex = -1;,int lastItemIndex,private 
org.apache.commons.collections4.iterators.LazyIteratorChain.callCounter,Field,The number of times {@link #next()} was already called.,private int callCounter;,int callCounter,private 
org.apache.commons.collections4.iterators.LazyIteratorChain.chainExhausted,Field,Indicates that the Iterator chain has been exhausted.,private boolean chainExhausted;,boolean chainExhausted,private 
org.apache.commons.collections4.iterators.LazyIteratorChain.currentIterator,Field,The current iterator.,private Iterator<? extends E> currentIterator;,java.util.Iterator currentIterator,private 
org.apache.commons.collections4.iterators.LazyIteratorChain.lastUsedIterator,Field,"* The ""last used"" Iterator is the Iterator upon which next() or hasNext()\n     * was most recently called used for the remove() operation only.",private Iterator<? extends E> lastUsedIterator;,java.util.Iterator lastUsedIterator,private 
org.apache.commons.collections4.iterators.LoopingListIterator.list,Field,The list to base the iterator on,private final List<E> list;,java.util.List list,"private , final "
org.apache.commons.collections4.iterators.LoopingListIterator.iterator,Field,The current list iterator,private ListIterator<E> iterator;,java.util.ListIterator iterator,private 
org.apache.commons.collections4.iterators.PeekingIterator.iterator,Field,The iterator being decorated.,private final Iterator<? extends E> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.iterators.PeekingIterator.exhausted,Field,Indicates that the decorated iterator is exhausted.,private boolean exhausted;,boolean exhausted,private 
org.apache.commons.collections4.iterators.PeekingIterator.slotFilled,Field,Indicates if the lookahead slot is filled.,private boolean slotFilled;,boolean slotFilled,private 
org.apache.commons.collections4.iterators.PeekingIterator.slot,Field,The current slot for lookahead.,private E slot;,java.lang.Object slot,private 
org.apache.commons.collections4.iterators.ObjectGraphIterator.stack,Field,The stack of iterators,private final Deque<Iterator<? extends E>> stack = new ArrayDeque<>(8);,java.util.Deque stack,"private , final "
org.apache.commons.collections4.iterators.ObjectGraphIterator.root,Field,The root object in the tree,private E root;,java.lang.Object root,private 
org.apache.commons.collections4.iterators.ObjectGraphIterator.transformer,Field,The transformer to use,"private final Transformer<? super E, ? extends E> transformer;",org.apache.commons.collections4.Transformer transformer,"private , final "
org.apache.commons.collections4.iterators.ObjectGraphIterator.hasNext,Field,Whether there is another element in the iteration,private boolean hasNext;,boolean hasNext,private 
org.apache.commons.collections4.iterators.ObjectGraphIterator.currentIterator,Field,The current iterator,private Iterator<? extends E> currentIterator;,java.util.Iterator currentIterator,private 
org.apache.commons.collections4.iterators.ObjectGraphIterator.currentValue,Field,The current value,private E currentValue;,java.lang.Object currentValue,private 
org.apache.commons.collections4.iterators.ObjectGraphIterator.lastUsedIterator,Field,"The last used iterator, needed for remove()",private Iterator<? extends E> lastUsedIterator;,java.util.Iterator lastUsedIterator,private 
org.apache.commons.collections4.iterators.ArrayIterator.array,Field,The array to iterate over,final Object array;,java.lang.Object array,final 
org.apache.commons.collections4.iterators.ArrayIterator.startIndex,Field,The start index to loop from,final int startIndex;,int startIndex,final 
org.apache.commons.collections4.iterators.ArrayIterator.endIndex,Field,The end index to loop to,final int endIndex;,int endIndex,final 
org.apache.commons.collections4.iterators.ArrayIterator.index,Field,The current iterator index,int index;,int index,default
org.apache.commons.collections4.iterators.PermutationIterator.keys,Field,* Permutation is done on these keys to handle equal objects.,private final int[] keys;,int[] keys,"private , final "
org.apache.commons.collections4.iterators.PermutationIterator.objectMap,Field,* Mapping between keys and objects.,"private final Map<Integer, E> objectMap;",java.util.Map objectMap,"private , final "
org.apache.commons.collections4.iterators.PermutationIterator.direction,Field,* Direction table used in the algorithm:\n     * <ul>\n     *   <li>false is left</li>\n     *   <li>true is right</li>\n     * </ul>,private final boolean[] direction;,boolean[] direction,"private , final "
org.apache.commons.collections4.iterators.PermutationIterator.nextPermutation,Field,* Next permutation to return. When a permutation is requested\n     * this instance is provided and the next one is computed.,private List<E> nextPermutation;,java.util.List nextPermutation,private 
org.apache.commons.collections4.iterators.SingletonListIterator.beforeFirst,Field,No Comment,private boolean beforeFirst = true;,boolean beforeFirst,private 
org.apache.commons.collections4.iterators.SingletonListIterator.nextCalled,Field,No Comment,private boolean nextCalled;,boolean nextCalled,private 
org.apache.commons.collections4.iterators.SingletonListIterator.removed,Field,No Comment,private boolean removed;,boolean removed,private 
org.apache.commons.collections4.iterators.SingletonListIterator.object,Field,No Comment,private E object;,java.lang.Object object,private 
org.apache.commons.collections4.iterators.EmptyMapIterator.INSTANCE,Field,* Singleton instance of the iterator.\n     * @since 3.1,"@SuppressWarnings(""rawtypes"")\npublic static final MapIterator INSTANCE = new EmptyMapIterator<>();",org.apache.commons.collections4.MapIterator INSTANCE,"public , static , final "
org.apache.commons.collections4.iterators.ObjectArrayIterator.array,Field,The array,final E[] array;,java.lang.Object[] array,final 
org.apache.commons.collections4.iterators.ObjectArrayIterator.startIndex,Field,The start index to loop from,final int startIndex;,int startIndex,final 
org.apache.commons.collections4.iterators.ObjectArrayIterator.endIndex,Field,The end index to loop to,final int endIndex;,int endIndex,final 
org.apache.commons.collections4.iterators.ObjectArrayIterator.index,Field,The current iterator index,int index;,int index,default
org.apache.commons.collections4.iterators.EnumerationIterator.collection,Field,The collection to remove elements from,private final Collection<? super E> collection;,java.util.Collection collection,"private , final "
org.apache.commons.collections4.iterators.EnumerationIterator.enumeration,Field,The enumeration being converted,private Enumeration<? extends E> enumeration;,java.util.Enumeration enumeration,private 
org.apache.commons.collections4.iterators.EnumerationIterator.last,Field,The last object retrieved,private E last;,java.lang.Object last,private 
org.apache.commons.collections4.iterators.IteratorIterable.iterator,Field,The iterator being adapted into an iterable.,private final Iterator<? extends E> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.iterators.IteratorIterable.typeSafeIterator,Field,The iterator parameterized as the {@link #iterator()} return type.,private final Iterator<E> typeSafeIterator;,java.util.Iterator typeSafeIterator,"private , final "
org.apache.commons.collections4.iterators.LoopingIterator.collection,Field,The collection to base the iterator on,private final Collection<? extends E> collection;,java.util.Collection collection,"private , final "
org.apache.commons.collections4.iterators.LoopingIterator.iterator,Field,The current iterator,private Iterator<? extends E> iterator;,java.util.Iterator iterator,private 
org.apache.commons.collections4.iterators.IteratorEnumeration.iterator,Field,The iterator being decorated.,private Iterator<? extends E> iterator;,java.util.Iterator iterator,private 
org.apache.commons.collections4.iterators.SingletonIterator.removeAllowed,Field,Whether remove is allowed,private final boolean removeAllowed;,boolean removeAllowed,"private , final "
org.apache.commons.collections4.iterators.SingletonIterator.beforeFirst,Field,Is the cursor before the first element,private boolean beforeFirst = true;,boolean beforeFirst,private 
org.apache.commons.collections4.iterators.SingletonIterator.removed,Field,Has the element been removed,private boolean removed;,boolean removed,private 
org.apache.commons.collections4.iterators.SingletonIterator.object,Field,The object,private E object;,java.lang.Object object,private 
org.apache.commons.collections4.iterators.ListIteratorWrapper.UNSUPPORTED_OPERATION_MESSAGE,Field,Message used when set or add are called.,"private static final String UNSUPPORTED_OPERATION_MESSAGE = ""ListIteratorWrapper does not support optional operations of ListIterator."";",java.lang.String UNSUPPORTED_OPERATION_MESSAGE,"private , static , final "
org.apache.commons.collections4.iterators.ListIteratorWrapper.CANNOT_REMOVE_MESSAGE,Field,Message used when set or add are called.,"private static final String CANNOT_REMOVE_MESSAGE = ""Cannot remove element at index {0}."";",java.lang.String CANNOT_REMOVE_MESSAGE,"private , static , final "
org.apache.commons.collections4.iterators.ListIteratorWrapper.iterator,Field,The underlying iterator being decorated.,private final Iterator<? extends E> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.iterators.ListIteratorWrapper.list,Field,The list being used to cache the iterator.,private final List<E> list = new ArrayList<>();,java.util.List list,"private , final "
org.apache.commons.collections4.iterators.ListIteratorWrapper.currentIndex,Field,The current index of this iterator.,private int currentIndex;,int currentIndex,private 
org.apache.commons.collections4.iterators.ListIteratorWrapper.wrappedIteratorIndex,Field,The current index of the wrapped iterator.,private int wrappedIteratorIndex;,int wrappedIteratorIndex,private 
org.apache.commons.collections4.iterators.ListIteratorWrapper.removeState,Field,"Recall whether the wrapped iterator's ""cursor"" is in such a state as to allow remove() to be called",private boolean removeState;,boolean removeState,private 
org.apache.commons.collections4.iterators.SkippingIterator.offset,Field,The offset to bound the first element return,private final long offset;,long offset,"private , final "
org.apache.commons.collections4.iterators.SkippingIterator.pos,Field,The position of the current element,private long pos;,long pos,private 
org.apache.commons.collections4.iterators.EmptyOrderedIterator.INSTANCE,Field,* Singleton instance of the iterator.\n     *\n     * @since 3.1,"@SuppressWarnings(""rawtypes"")\npublic static final OrderedIterator INSTANCE = new EmptyOrderedIterator<>();",org.apache.commons.collections4.OrderedIterator INSTANCE,"public , static , final "
org.apache.commons.collections4.iterators.ExtendedIterator.throwOnRemove,Field,"* Set to <code>true</code> if this wrapping doesn't permit the use of {@link #remove()}, otherwise removal is delegated to the base iterator.",private final boolean throwOnRemove;,boolean throwOnRemove,"private , final "
org.apache.commons.collections4.iterators.ExtendedIterator.base,Field,The base iterator that we wrap,private final Iterator<? extends T> base;,java.util.Iterator base,"private , final "
org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator.iterator,Field,The iterator being decorated,"private final MapIterator<K, V> iterator;",org.apache.commons.collections4.MapIterator iterator,"private , final "
org.apache.commons.collections4.iterators.ObjectArrayListIterator.lastItemIndex,Field,* Holds the index of the last item returned by a call to {@code next()}\n     * or {@code previous()}. This is set to {@code -1} if neither method\n     * has yet been invoked. {@code lastItemIndex} is used to implement the\n     * {@link #set} method.,private int lastItemIndex = -1;,int lastItemIndex,private 
org.apache.commons.collections4.iterators.UnmodifiableListIterator.iterator,Field,The iterator being decorated,private final ListIterator<? extends E> iterator;,java.util.ListIterator iterator,"private , final "
org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.INSTANCE,Field,* Singleton instance of the iterator.\n     * @since 3.1,"@SuppressWarnings(""rawtypes"")\npublic static final OrderedMapIterator INSTANCE = new EmptyOrderedMapIterator<>();",org.apache.commons.collections4.OrderedMapIterator INSTANCE,"public , static , final "
org.apache.commons.collections4.iterators.UnmodifiableMapIterator.iterator,Field,The iterator being decorated,"private final MapIterator<? extends K, ? extends V> iterator;",org.apache.commons.collections4.MapIterator iterator,"private , final "
org.apache.commons.collections4.iterators.EmptyIterator.RESETTABLE_INSTANCE,Field,* Singleton instance of the iterator.\n     *\n     * @since 3.1,"@SuppressWarnings(""rawtypes"")\npublic static final ResettableIterator RESETTABLE_INSTANCE = new EmptyIterator<>();",org.apache.commons.collections4.ResettableIterator RESETTABLE_INSTANCE,"public , static , final "
org.apache.commons.collections4.iterators.EmptyIterator.INSTANCE,Field,* Singleton instance of the iterator.\n     *\n     * @since 2.1.1 and 3.1,"@SuppressWarnings(""rawtypes"")\npublic static final Iterator INSTANCE = RESETTABLE_INSTANCE;",java.util.Iterator INSTANCE,"public , static , final "
org.apache.commons.collections4.iterators.EntrySetMapIterator.map,Field,No Comment,"private final Map<K, V> map;",java.util.Map map,"private , final "
org.apache.commons.collections4.iterators.EntrySetMapIterator.iterator,Field,No Comment,"private Iterator<Map.Entry<K, V>> iterator;",java.util.Iterator iterator,private 
org.apache.commons.collections4.iterators.EntrySetMapIterator.last,Field,No Comment,"private Map.Entry<K, V> last;",java.util.Map$Entry last,private 
org.apache.commons.collections4.iterators.EntrySetMapIterator.canRemove,Field,No Comment,private boolean canRemove;,boolean canRemove,private 
org.apache.commons.collections4.iterators.PushbackIterator.iterator,Field,The iterator being decorated.,private final Iterator<? extends E> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.iterators.PushbackIterator.items,Field,The LIFO queue containing the pushed back items.,private final Deque<E> items = new ArrayDeque<>();,java.util.Deque items,"private , final "
org.apache.commons.collections4.iterators.FilterIterator.iterator,Field,The iterator to be filtered.,private Iterator<? extends E> iterator;,java.util.Iterator iterator,private 
org.apache.commons.collections4.iterators.FilterIterator.predicate,Field,The predicate to filter elements.,private Predicate<? super E> predicate = TruePredicate.truePredicate();,org.apache.commons.collections4.Predicate predicate,private 
org.apache.commons.collections4.iterators.FilterIterator.nextObject,Field,The next object in the iteration.,private E nextObject;,java.lang.Object nextObject,private 
org.apache.commons.collections4.iterators.FilterIterator.nextObjectSet,Field,Whether the next object has been calculated yet.,private boolean nextObjectSet;,boolean nextObjectSet,private 
org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.iterator,Field,The iterator being decorated,private final Iterator<I> iterator;,java.util.Iterator iterator,"private , final "
org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator.iterator,Field,The iterator being decorated,"private final OrderedMapIterator<K, V> iterator;",org.apache.commons.collections4.OrderedMapIterator iterator,"private , final "
org.apache.commons.collections4.iterators.FilterListIterator.iterator,Field,The iterator being used,private ListIterator<? extends E> iterator;,java.util.ListIterator iterator,private 
org.apache.commons.collections4.iterators.FilterListIterator.predicate,Field,The predicate being used,private Predicate<? super E> predicate;,org.apache.commons.collections4.Predicate predicate,private 
org.apache.commons.collections4.iterators.FilterListIterator.nextObject,Field,"* The value of the next (matching) object, when\n     * {@link #nextObjectSet} is true.",private E nextObject;,java.lang.Object nextObject,private 
org.apache.commons.collections4.iterators.FilterListIterator.nextObjectSet,Field,* Whether or not the {@link #nextObject} has been set\n     * (possibly to {@code null}).,private boolean nextObjectSet;,boolean nextObjectSet,private 
org.apache.commons.collections4.iterators.FilterListIterator.previousObject,Field,"* The value of the previous (matching) object, when\n     * {@link #previousObjectSet} is true.",private E previousObject;,java.lang.Object previousObject,private 
org.apache.commons.collections4.iterators.FilterListIterator.previousObjectSet,Field,* Whether or not the {@link #previousObject} has been set\n     * (possibly to {@code null}).,private boolean previousObjectSet;,boolean previousObjectSet,private 
org.apache.commons.collections4.iterators.FilterListIterator.nextIndex,Field,* The index of the element that would be returned by {@link #next}.,private int nextIndex;,int nextIndex,private 
org.apache.commons.collections4.SplitMapUtils$WrappedGet.get,Field,No Comment,"private final Get<K, V> get;",org.apache.commons.collections4.Get get,"private , final "
org.apache.commons.collections4.SplitMapUtils$WrappedPut.put,Field,No Comment,"private final Put<K, V> put;",org.apache.commons.collections4.Put put,"private , final "
